{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\temporadas\\components\\Pedidos\\Pagos\\components\\FormularioPago.vue?vue&type=style&index=0&id=11832f0e&scoped=true&lang=css","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\temporadas\\components\\Pedidos\\Pagos\\components\\FormularioPago.vue","mtime":1712682816581},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n.box-input{\n}\n .upload-container{\n   position:relative}\n   .upload-container input{\n     border:1px solid #92b0b3;\n     background:#217bc5;\n     outline:2px dashed #92b0b3;\n     outline-offset:-10px;\n     padding:100px 0px 100px 130px;\n     width:100%;\n     color:white;\n }\n   .upload-container input:hover{\n     background:#2c78cf}\n   .upload-container:before{\n     position:absolute;\n     bottom:50px;\n     left:23%;\n     content:\" Seleccione un archivo o arrastre aqui \";\n     color:#f1f9fa;\n     font-weight:900\n }\n   .upload-btn{\n     margin-left:300px;\n     padding:7px 20px}\n",{"version":3,"sources":["FormularioPago.vue"],"names":[],"mappings":";AAkgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"FormularioPago.vue","sourceRoot":"src/views/temporadas/components/Pedidos/Pagos/components","sourcesContent":["<template>\r\n    <div class=\"mt-5\">\r\n      <div class=\"vx-row mb-6\">\r\n        <div class=\"vx-col w-1/2\">\r\n          <span>Tipo de Pago:</span>\r\n          <v-select :options=\"arrayTiposPagos\"  :reduce=\"arrayTiposPagos => arrayTiposPagos.id\" label=\"nombre\" class=\"w-full\" v-model=\"sendValor.tipo_pago_id\" />\r\n          <div v-if=\"sendValor.tipo_pago_id\">\r\n            <vs-alert v-if=\"sendValor.tipo_pago_id == 4\" class=\"mt-3\" color=\"warning\">!Solo puede existir un pago de convenio por contrato</vs-alert>\r\n            <vs-alert v-if=\"sendValor.tipo_pago_id == 3\" class=\"mt-3\" color=\"warning\">El valor de las deudas tienen que ir con negativo - <b>(Estas deudas apareceran en el proximo año)</b></vs-alert>\r\n          </div>\r\n        </div>\r\n        <div class=\"vx-col w-1/2\">\r\n          <span>Forma de pago:</span>\r\n          <v-select :options=\"arrayFormasPagos\"  :reduce=\"arrayFormasPagos => arrayFormasPagos.tip_pag_codigo\" label=\"tip_pag_nombre\" class=\"w-full\" v-model=\"sendValor.forma_pago_id\" />\r\n        </div>\r\n      </div>\r\n      <div class=\"vx-row mb-6\">\r\n        <div class=\"vx-col w-1/2\">\r\n          <span>Varios Documentos:</span>\r\n          <ul class=\"flex mt-3\">\r\n            <li>\r\n              <vs-radio v-model=\"sendValor.unicoEvidencia\" class=\"mr-3\" vs-name=\"radios1unicoEvidencia\" vs-value=\"0\">No</vs-radio>\r\n            </li>\r\n            <li>\r\n              <vs-radio v-model=\"sendValor.unicoEvidencia\" vs-name=\"radios1unicoEvidencia\" vs-value=\"1\">Si</vs-radio>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div class=\"vx-col w-1/2\" v-if=\"sendValor.tipo_pago_id == 1\">\r\n          <span>Registar como Anticipo del Pedido:</span>\r\n          <ul class=\"flex mt-3\">\r\n            <li>\r\n              <vs-radio v-model=\"sendValor.ifAntAprobado\" class=\"mr-3\" vs-name=\"radios1ifAntAprobado\" vs-value=\"0\">No</vs-radio>\r\n            </li>\r\n            <li>\r\n              <vs-radio v-model=\"sendValor.ifAntAprobado\" vs-name=\"radios1ifAntAprobado\" vs-value=\"1\">Si</vs-radio>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <!--varias evidencias-->\r\n        <div v-if=\"sendValor.unicoEvidencia == 1\">\r\n          <div>\r\n            <vs-alert active=\"true\" color=\"warning\" class=\"ml-5\">\r\n              Varios Documentos tienen utilidad para <b>Gift cards</b> que tienen varios registros asi como los registros de <b>Convenio</b>\r\n            </vs-alert>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!--EVIDENCIAS-->\r\n      <div >\r\n        <div class=\"vx-row\" v-if=\"sendValor.unicoEvidencia == 0 \">\r\n          <div class=\"vx-col w-full sm:w-full md:w-1/2 lg:w-1/2 xl:w-1/2 mb-6\">\r\n              <!--TIPOS PAGOS FACTURACION-->\r\n            <div class=\"vx-row mb-6\">\r\n              <div class=\"vx-col w-full\">\r\n                  <vs-input class=\"w-full\" icon-pack=\"feather\" icon=\"icon-credit-card\" icon-no-border label=\"Valor\" v-model=\"sendValor.valor\" />\r\n              </div>\r\n            </div>\r\n            <div class=\"vx-row mb-6\">\r\n              <div class=\"vx-col w-full\">\r\n                  <vs-input type=\"text\" class=\"w-full\" icon-pack=\"feather\" icon=\"icon-code\" icon-no-border label=\"Código / Número documento\" v-model=\"sendValor.doc_numero\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <!--FIN TIPOS PAGOS FACTURACION-->\r\n          <!--FILE-->\r\n          <div class=\"vx-col w-full sm:w-full md:w-1/2 lg:w-1/2 xl:w-1/2 mb-6\">\r\n              <p>Evidencia:</p>\r\n              <p class=\"mt-1\"></p>\r\n              <div class=\"box-input\" v-if=\"attachmentArray.length == 0 && ifSaveImagen == false\">\r\n                  <div class=\" box upload-container\">\r\n                      <input type=\"file\" name=\"filePago\" id=\"filePago\" v-on:change=\"uploadFiles()\" />\r\n                  </div>\r\n                  <br>\r\n              </div>\r\n              <!--BASE-->\r\n              <div class=\"box-input\" v-if=\"attachmentArray.length == 0 && ifSaveImagen == true\">\r\n                  <div class=\"flex\" style=\"justify-content: center;\">\r\n                      <div class=\"flex\" style=\"flex-direction: column;\">\r\n                          <img id=\"img1\" width=\"200\" class=\"img-responsive mb-2 ml-1\" :src=\"$data_url+'archivos/pedidos/pagos/'+imgOld\" style=\"border-radius: 5px;margin: 0 auto;\">\r\n                          <small class=\"mt-1 ml-2\">{{ imgOld }}</small>\r\n                      </div>\r\n                      <vs-button radius type=\"line\" @click=\"ifSaveImagen = false;\"  class=\"ml-2 mt-4\" color=\"danger\" icon=\"delete\"></vs-button>\r\n                  </div>\r\n              </div>\r\n              <!--LOCAL-->\r\n              <div class=\"flex\" style=\"margin-top: -10px;\" v-if=\"attachmentArray.length > 0\">\r\n                  <div class=\"flex\" v-for=\"(tr,key) in attachmentArray\" :key=\"key\" style=\"margin: 0 auto;\">\r\n                      <div class=\"flex\" style=\"flex-direction: column;\">\r\n                          <img id=\"img1\" v-if=\"tr.tipo == 'img'\" width=\"200\" class=\"img-responsive mb-2 ml-1\" v-bind:src=\"tr.img\" style=\"border-radius: 5px;margin: 0 auto;\">\r\n                          <img v-else style=\"width: 200px;\"  src=\"@/assets/images/file-icons/doc.png\"/>\r\n                          <small class=\"mt-1 ml-2\">{{ tr.name }}</small>\r\n                      </div>\r\n                      <vs-button radius type=\"line\"  @click=\"removeItemFromArr(attachmentArray,tr)\" class=\"ml-2 mt-4\" color=\"danger\" icon=\"delete\"></vs-button>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n        </div>\r\n        <div v-else>\r\n          <div class=\"flex mt-5\" style=\"justify-content: center;\" v-if=\"id == 0\">\r\n            <vs-button class=\"mr-3 mb-2\" style=\"color:white;!important\" icon-pack=\"feather\" icon=\"icon-user-check\" @click=\"subirDocumento()\">Guardar Pago</vs-button>\r\n          </div>\r\n          <vs-alert class=\"mt-3\"  v-if=\"id == 0\" title=\"Mensaje\" color=\"rgb(231, 154, 23)\" active=\"true\">\r\n            En los pagos de varios Documentos <b>GUARDE</b> primero para habilitar el boton para subir varias evidencias\r\n          </vs-alert>\r\n          <div v-else>\r\n            <div class=\"flex mt-5\" style=\"justify-content: center;\">\r\n              <vs-button class=\"mr-3 mb-2\" style=\"color:white;!important\" icon-pack=\"feather\" icon=\"icon-user-check\" @click=\"subirDocumento()\">Guardar Pago</vs-button>\r\n            </div>\r\n            <ScreenGiftCardVue class=\"mt-3\" :ObjectPadre=\"ObjectPadre\"/>\r\n          </div>\r\n        </div>\r\n        <div class=\"flex mt-5\" style=\"justify-content: center;\" v-if=\"sendValor.unicoEvidencia == 0\">\r\n          <vs-button class=\"mr-3 mb-2\" style=\"color:white;!important\" icon-pack=\"feather\" icon=\"icon-user-check\" @click=\"subirDocumento()\">Guardar Pago</vs-button>\r\n        </div>\r\n      </div>\r\n      <br><br><br><br><br><br><br><br><br><br><br><br>\r\n    </div>\r\n</template>\r\n<script>\r\nimport vSelect from 'vue-select'\r\nimport axios from 'axios'\r\nconst ScreenGiftCardVue = () => import('./gitCard/ScreenGiftCard.vue')\r\n\texport default{\r\n    components:{\r\n      vSelect,\r\n      ScreenGiftCardVue,\r\n    },\r\n\r\n    data(){\r\n      return{\r\n        //VARIABLES IMAGEN\r\n        attachmentArray:[],\r\n        tipoFile:'',\r\n        ifSaveImagen:false,\r\n        //FIN VARIABLES IMAGEN\r\n        sendValor:{\r\n          valor:'',\r\n          doc_numero:'',\r\n          idusuario:'',\r\n          distribuidor_temporada_id:'',\r\n          forma_pago_id:'',\r\n          tipo_pago_id:1,\r\n          calculo:0,\r\n          unicoEvidencia:0,\r\n          ifAntAprobado:0,\r\n        },\r\n        saldoDisponible:0,\r\n        arregloDistribuidorValores:[],\r\n        arregloTiposPagosFacturacion:[],\r\n        arrayFormasPagos:[],\r\n        arrayTiposPagos:[],\r\n        pagoAnterior:0,\r\n        pagoId:0,\r\n        ObjectPadre:'',\r\n      }\r\n    },\r\n    provide() {\r\n      return this.setProps();\r\n    },\r\n    props:{\r\n      userRoot:{\r\n        type:Boolean,\r\n        default:false,\r\n        required:true,\r\n      },\r\n        id:{\r\n          type:Number,\r\n          default:0\r\n        },\r\n        ObjectSelect:{\r\n          type:Object,\r\n          default:function(){\r\n            return {}\r\n          }\r\n        },\r\n        sendPago:{\r\n          type:Object,\r\n          default:function(){\r\n            return {}\r\n          }\r\n        },\r\n        usuario:{\r\n          type:Object,\r\n          default:function(){\r\n            return {}\r\n          }\r\n        },\r\n        imgOld:{\r\n            type:String,\r\n            default:'',\r\n        },\r\n        sendPedido:{\r\n          type:Object,\r\n          default:function(){\r\n            return {}\r\n          },\r\n        },\r\n    },\r\n    watch:{\r\n      totalPorPagar(results){\r\n        let me = this;\r\n        me.totalPorPagar = results\r\n      },\r\n      id(results){\r\n        let me = this;\r\n        me.id = results\r\n      }\r\n    },\r\n    // inject: ['getSendPedido'],\r\n    // computed: {\r\n    //   sendPedido(){ return this.getSendPedido(); }\r\n    // },\r\n    created(){\r\n      let me = this;\r\n      me.getFormasPagos()\r\n      me.getTiposPagos()\r\n    },\r\n    mounted(){\r\n      let me = this;\r\n      me.pagoId   = me.id\r\n      me.ObjectPadre = me.ObjectSelect\r\n      me.attachmentArray = []\r\n      if(me.id > 0){\r\n        me.sendValor ={\r\n          valor:                      me.ObjectSelect.doc_valor,\r\n          doc_numero:                 me.ObjectSelect.doc_numero,\r\n          idusuario:                  me.ObjectSelect.idusuario,\r\n          distribuidor_temporada_id:  me.ObjectSelect.distribuidor_temporada_id,\r\n          forma_pago_id:              me.ObjectSelect.forma_pago_id,\r\n          tipo_pago_id:               me.ObjectSelect.tipo_pago_id,\r\n          calculo:                    me.ObjectSelect.calculo,\r\n          unicoEvidencia:             me.ObjectSelect.unicoEvidencia,\r\n          ifAntAprobado:              me.ObjectSelect.ifAntAprobado\r\n        }\r\n        me.imgOld                   = me.ObjectSelect.url\r\n        if(me.imgOld){\r\n          me.ifSaveImagen = true\r\n        }\r\n      }\r\n    },\r\n    methods:{\r\n      setProps() {\r\n        return {\r\n          idPago: this.id,\r\n        };\r\n      },\r\n      getDistribuidoresTemporadas() {\r\n        let me = this;\r\n        me.arregloDistribuidorValores = []\r\n        const { idusuario } = me.sendValor\r\n        if(idusuario == null || idusuario == \"\" || idusuario == undefined){\r\n          me.$vs.notify({\r\n          text:'Seleccione un distribuidor',\r\n          color:'warning',\r\n          iconPack: 'feather',\r\n          icon:'icon-check'})\r\n          return\r\n        }\r\n        var url = \"\"\r\n        url = this.$server_url + 'distribuidor?getDistribuidorTemporadas=yes'\r\n        this.$http.get(url)\r\n          .then(res => {\r\n            me.arregloDistribuidorValores = res.data.filter(p => p.idusuario == me.sendValor.idusuario)\r\n            me.selectSaldo()\r\n          })\r\n          .catch(error => {\r\n            console.log(error)\r\n          })\r\n      },\r\n      getTiposPagos(){\r\n        let me  = this\r\n        var url = \"\"\r\n        url = this.$server_url + 'pedigo_Pagos?getTiposPagos=yes'\r\n        this.$http.get(url)\r\n          .then(res => {\r\n            me.arrayTiposPagos = res.data\r\n          })\r\n          .catch(error => {\r\n            console.log(error)\r\n          })\r\n      },\r\n      getFormasPagos(){\r\n        let me  = this\r\n        var url = \"\"\r\n        url = this.$server_url + 'pedigo_Pagos?getFormasPago=yes'\r\n        this.$http.get(url)\r\n          .then(res => {\r\n            me.arrayFormasPagos = res.data\r\n          })\r\n          .catch(error => {\r\n            console.log(error)\r\n          })\r\n      },\r\n      selectSaldo(){\r\n        let me = this;\r\n        const { distribuidor_temporada_id } = me.sendValor\r\n        if(distribuidor_temporada_id == null || distribuidor_temporada_id == \"\" || distribuidor_temporada_id == undefined){\r\n          me.saldoDisponible = \"\"\r\n          return\r\n        }\r\n        let preSaldo      = me.arregloDistribuidorValores.filter(p => p.id == me.sendValor.distribuidor_temporada_id)\r\n        me.getSaldoDisponible()\r\n      },\r\n      getSaldoDisponible(){\r\n        let me = this\r\n        var url = \"\"\r\n        url = this.$server_url + `distribuidor?getDistribuidorTemporadasXId=yes&id=${me.sendValor.distribuidor_temporada_id}`\r\n      this.$http.get(url)\r\n        .then(res => {\r\n          const { saldo_actual, pendienteAprobar } = res.data[0]\r\n          me.saldoDisponible  = saldo_actual  - pendienteAprobar\r\n        })\r\n        .catch(error => {\r\n          console.log(error)\r\n        })\r\n      },\r\n      removeItemFromArr (arr, item) {\r\n          let me = this;\r\n          const i = arr.indexOf(item)\r\n          arr.splice(i, 1)\r\n          document.getElementById(\"filePago\").value = ''\r\n      },\r\n      uploadFiles(){\r\n          let me = this;\r\n          me.attachmentArray = []\r\n          var archivo = document.getElementById(\"filePago\").files[0];\r\n          me.tipoFile  = \"\"\r\n          if(archivo.type == \"image/png\" || archivo.type == \"image/gif\" || archivo.type == \"image/jpeg\" || archivo.type == \"image/jpg\") me.tipoFile = \"img\"\r\n          else me.tipoFile = \"other\"\r\n          var reader = new FileReader();\r\n          if (me) {\r\n              reader.readAsDataURL(archivo );\r\n              reader.onloadend = function () {\r\n                  var cal = new Object();\r\n                  cal.file = archivo\r\n                  cal.img  = reader.result\r\n                  cal.tipo = me.tipoFile\r\n                  cal.name = archivo.name\r\n                  me.attachmentArray.push(cal)\r\n              }\r\n          }\r\n      },\r\n      subirDocumento(){\r\n        let me = this;\r\n        const { forma_pago_id,tipo_pago_id } = me.sendValor\r\n        if(tipo_pago_id == null || tipo_pago_id == \"\" || tipo_pago_id == undefined || tipo_pago_id == 0){\r\n          me.$vs.notify({\r\n            text: \"Debe seleccionar un Tipo de pago\",\r\n            color: 'warning',\r\n            iconPack: 'feather',\r\n            icon: 'icon-alert-triangle'\r\n          })\r\n          return\r\n        }\r\n        if(forma_pago_id == null || forma_pago_id == \"\" || forma_pago_id == undefined || forma_pago_id == 0){\r\n          me.$vs.notify({\r\n            text: \"Debe seleccionar una forma de pago\",\r\n            color: 'warning',\r\n            iconPack: 'feather',\r\n            icon: 'icon-alert-triangle'\r\n          })\r\n          return\r\n        }\r\n        // //VALIDACION DISTRIBUIDOR\r\n        // if(me.tipo == 4){\r\n        //   const { idusuario, valor, distribuidor_temporada_id  } = me.sendValor\r\n        //   if(idusuario == null || idusuario == \"\" || idusuario == undefined || distribuidor_temporada_id == null || distribuidor_temporada_id == \"\" || distribuidor_temporada_id == undefined){\r\n        //     me.$vs.notify({\r\n        //       text: `Seleccione información distribuidor`,\r\n        //       color: 'warning',\r\n        //       iconPack: 'feather',\r\n        //       icon: 'icon-alert-triangle'\r\n        //     })\r\n        //     return\r\n        //   }\r\n        // }\r\n        if(me.sendValor.tipo_pago_id == 3){\r\n          if(me.sendValor.valor > 0){\r\n            me.$vs.notify({\r\n              text: `El valor de las deudas tienen que ir con negativo -`,\r\n              color: 'warning',\r\n              iconPack: 'feather',\r\n              icon: 'icon-alert-triangle'\r\n            })\r\n            return\r\n          }\r\n        }\r\n        let formData = new FormData();\r\n        formData.append('saveValorPago',            \"yes\")\r\n        formData.append('unicoEvidencia',           me.sendValor.unicoEvidencia)\r\n        formData.append('id',                       me.id)\r\n        formData.append('doc_valor',                me.sendValor.valor)\r\n        formData.append('doc_numero',               me.sendValor.doc_numero)\r\n        formData.append('user_created',             me.usuario.idusuario)\r\n        formData.append('forma_pago_id',            me.sendValor.forma_pago_id)\r\n        formData.append('distribuidor_temporada_id',me.sendValor.distribuidor_temporada_id)\r\n        formData.append('tipo_pago_id',             me.sendValor.tipo_pago_id)\r\n        //ANTICIPO PEDIDO\r\n        if(me.sendValor.tipo_pago_id == 1){        formData.append('ifAntAprobado', me.sendValor.ifAntAprobado)   }\r\n        else{                                       formData.append('ifAntAprobado', 0)                            }\r\n        //informacion\r\n        formData.append('doc_nombre',               me.sendPago.nombres)\r\n        formData.append('doc_apellidos',            me.sendPago.apellidos)\r\n        formData.append('doc_ruc',                  me.sendPago.ruc)\r\n        formData.append('doc_cuenta',               me.sendPago.num_cuenta)\r\n        formData.append('doc_tipo',                 me.sendPago.tipo_cuenta)\r\n        formData.append('doc_institucion',          me.sendPago.banco)\r\n        formData.append('doc_observacion',          me.sendPago.observacion)\r\n        formData.append('doc_fecha',                me.sendPago.doc_fecha)\r\n        formData.append('ven_codigo',               me.sendPedido.contrato_generado)\r\n        formData.append('institucion_id',           me.sendPedido.id_institucion)\r\n        formData.append('periodo_id',               me.sendPedido.id_periodo)\r\n        formData.append('id_pedido',                me.sendPedido.id_pedido)\r\n        if(me.userRoot){ formData.append('permisoPago','yes') }\r\n        me.$vs.loading()\r\n        this.$http.post(this.$server_url+'pedigo_Pagos', formData)\r\n        .then(function (res) {\r\n            me.$vs.loading.close()\r\n            if(res.data.status == 0){\r\n              me.$vs.notify({\r\n              text:res.data.message,\r\n              color:'warning',\r\n              iconPack: 'feather',\r\n              icon:'icon-check',\r\n              time:5000\r\n              })\r\n              return\r\n            }\r\n            var getId       = res.data.doc_codigo\r\n            me.$vs.notify({\r\n            text:\"Se guardo correctamente\",\r\n            color:'success',\r\n            iconPack: 'feather',\r\n            icon:'icon-check'})\r\n            var datos = {\r\n              tipo:2,\r\n              setId:getId\r\n            }\r\n            me.ObjectPadre = res.data\r\n            me.$emit('showCreate',datos)\r\n            if(me.sendValor.unicoEvidencia == 1){\r\n              return\r\n            }else{\r\n              me.saveEvidencia(getId)\r\n            }\r\n        })\r\n        .catch(function (error) {\r\n            me.$vs.loading.close()\r\n        })\r\n      },\r\n      saveEvidencia(getId){\r\n        let me = this\r\n        //files\r\n        let imgsEnviar = []\r\n        let formData = new FormData();\r\n        if(me.ifSaveImagen || me.attachmentArray.length == 0){\r\n          formData.append('noSendFiles','yes')\r\n          return\r\n        }else{\r\n          me.attachmentArray.forEach(element => {\r\n          imgsEnviar.push(element.file)\r\n          });\r\n          for(let i=0; i<this.attachmentArray.length;i++){\r\n              formData.append('archivos[]',              imgsEnviar[i]);\r\n          }\r\n        }\r\n        formData.append('id',                   getId)\r\n        formData.append('saveArchivos',         'yes')\r\n        formData.append('imgOld',               me.imgOld)\r\n        formData.append('archivoPago',          'yes')\r\n        const config = { headers: { 'Content-Type': 'multipart/form-data' } };\r\n        axios.post(this.$data_url + 'api/guardarDatosPedido', formData, config)\r\n        .then(function (res) {\r\n          document.getElementById(\"filePago\").value = '';\r\n          me.attachmentArray                        = []\r\n        })\r\n        .catch(function (error) {\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n</script>\r\n<style scoped>\r\n   .box-input{\r\n   }\r\n    .upload-container{\r\n      position:relative}\r\n      .upload-container input{\r\n        border:1px solid #92b0b3;\r\n        background:#217bc5;\r\n        outline:2px dashed #92b0b3;\r\n        outline-offset:-10px;\r\n        padding:100px 0px 100px 130px;\r\n        width:100%;\r\n        color:white;\r\n    }\r\n      .upload-container input:hover{\r\n        background:#2c78cf}\r\n      .upload-container:before{\r\n        position:absolute;\r\n        bottom:50px;\r\n        left:23%;\r\n        content:\" Seleccione un archivo o arrastre aqui \";\r\n        color:#f1f9fa;\r\n        font-weight:900\r\n    }\r\n      .upload-btn{\r\n        margin-left:300px;\r\n        padding:7px 20px}\r\n</style>\r\n"]}]}