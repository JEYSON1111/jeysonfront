{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\temporadas\\components\\exportTipoVenta.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\temporadas\\components\\exportTipoVenta.vue","mtime":1712682816615},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nimport moment from \"moment\";\r\nimport html2pdf from \"html2pdf.js\"\r\nexport default{\r\n    data(){\r\n        return{\r\n          arregloLibros:[],\r\n          arregloVerificacion:[],\r\n          day:'',\r\n          dayM:'',\r\n          mes:'',\r\n          year:'',\r\n          anio:'',\r\n          fecha:'',\r\n          nombrearchivo:'',\r\n          valorVenta:0,\r\n          totalVenta:0,\r\n          comision:0,\r\n          valorComision:0,\r\n          anticipo:0,\r\n          deuda:0,\r\n          liquidacion:0,\r\n          //VARIABLES PARA EXPORTAR A EXCEL\r\n          formats: ['xls', 'xlsx', 'csv', 'txt'],\r\n          fileName:null,\r\n          selectedFormat: 'xls',\r\n          cellAutoWidth: true,\r\n          activePrompt: false,\r\n          sumaTotalTipo:0,\r\n        }\r\n    },\r\n    props:{\r\n      VerificacionSelect:{\r\n        type:Object,\r\n        default:function(){\r\n          return {}\r\n        }\r\n      },\r\n      datosInstitucion:{\r\n        type:Object,\r\n        default:function(){\r\n            return{}\r\n        }\r\n      },\r\n      tipoVenta:{\r\n        type:Number,\r\n        default:1,\r\n      },\r\n      sendPedido:{\r\n        type:Object,\r\n        default:function(){\r\n           return{}\r\n        }\r\n      }\r\n    },\r\n    created(){\r\n        let me = this;\r\n        moment.lang(\"es\")\r\n        me.day = moment().format('DD');\r\n        me.dayM  = moment().format('dddd');\r\n        me.mes = moment().format('MMMM');\r\n        me.year = moment().format('YYYY')\r\n        me.fecha = me.day+'-'+me.mes.substring(0,3)+'-'+me.year\r\n    },\r\n    mounted(){\r\n      let me = this\r\n      me.nombrearchivo = \"\"\r\n      me.obtenerVentaRealXVerificacionXTipoVenta()\r\n      let TypeVenta = me.tipoVenta == 1 ? '_Venta-directa' : 'Venta-Lista'\r\n      me.nombrearchivo = \"Verificacion \"+me.datosInstitucion.contrato+TypeVenta+\".pdf\"\r\n    },\r\n    methods:{\r\n      filtrarDecimal(numero){\r\n        let me = this\r\n        if(numero == 0){\r\n          return numero\r\n        }else{\r\n          const transformar = (numero).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\r\n          return transformar\r\n        }\r\n      },\r\n      obtenerVentaRealXVerificacionXTipoVenta(){\r\n        let me = this;\r\n        me.arregloLibros = []\r\n        me.sumaTotalTipo = 0\r\n        const { contrato, idInstitucion ,id_periodo } = me.datosInstitucion\r\n        me.$vs.loading()\r\n        this.$http.get(this.$server_url+'n_verificacion?contrato='+contrato+'&getVentaRealXVerificacionXTipoVenta=yes&IdVerificacion='+me.VerificacionSelect.id+'&verificacion_id='+me.VerificacionSelect.num_verificacion+'&institucion_id='+idInstitucion+'&periodo_id='+id_periodo+'&TipoVenta='+me.tipoVenta)\r\n        .then(function (res) {\r\n          let datos = res.data\r\n          if(datos.length == 0){\r\n            me.$vs.loading.close()\r\n            me.$vs.notify({\r\n            text: \"No existe codigos en el tipo de venta seleccionado\",\r\n            color: 'warning',\r\n            iconPack: 'feather',\r\n            icon: 'icon-file',\r\n            time:3000\r\n            })\r\n            return\r\n          }\r\n          me.$vs.notify({\r\n          text: \"Espere mientras se va generando el archivo...\",\r\n          color: 'primary',\r\n          iconPack: 'feather',\r\n          icon: 'icon-file',\r\n          time:4000\r\n          })\r\n          me.sumarTotalTipoVenta(datos)\r\n          me.getLibros(datos)\r\n          me.$vs.loading.close()\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error + ' error');\r\n            me.$vs.loading.close()\r\n        })\r\n      },\r\n      sumarTotalTipoVenta(data){\r\n        let me = this;\r\n          if(data.length > 0){\r\n            let datos = data.filter(p => p.valor)\r\n            let total = datos.reduce((a, b) => a + (b[\"valor\"] || 0), 0);\r\n            me.sumaTotalTipo = total\r\n          }\r\n      },\r\n      getLibros(datos){\r\n        let me = this\r\n        me.arregloLibros = []\r\n        ///===ORDENAR ARRAY ==\r\n        me.arregloLibros = datos.sort(function(a, b) {\r\n        var nombreA = a.nombre_libro.toLowerCase();\r\n        var nombreB = b.nombre_libro.toLowerCase();\r\n        var numA = parseInt(nombreA.match(/\\d+$/)); // extraer el número del final (si existe)\r\n        var numB = parseInt(nombreB.match(/\\d+$/)); // extraer el número del final (si existe)\r\n        nombreA = nombreA.replace(/\\d+$/, ''); // quitar el número del final\r\n        nombreB = nombreB.replace(/\\d+$/, ''); // quitar el número del final\r\n            if (nombreA < nombreB) {\r\n                return -1;\r\n            }\r\n            if (nombreA > nombreB) {\r\n                return 1;\r\n            }\r\n            if (numA && !numB) { // si a tiene número y b no, b va primero\r\n                return 1;\r\n            }\r\n            if (!numA && numB) { // si b tiene número y a no, a va primero\r\n                return -1;\r\n            }\r\n            if (numA && numB) { // si ambos tienen número, compararlos\r\n                if (numA < 10 && numB >= 10) { // si a es menor que 10 y b es 10 o mayor, a va primero\r\n                return -1;\r\n                }\r\n                if (numA >= 10 && numB < 10) { // si b es menor que 10 y a es 10 o mayor, b va primero\r\n                return 1;\r\n                }\r\n                return numA - numB; // comparar los números directamente\r\n            }\r\n            return 0; // si son iguales en todo, no hay diferencia\r\n        })\r\n        setTimeout(function() {me.imprimirEval()}, 1000)\r\n      },\r\n        formatJson(filterVal, jsonData) {\r\n          return jsonData.map(v => filterVal.map(j => {\r\n              return v[j]\r\n          }))\r\n        },\r\n        //limpiar campos para exportar de nuevo\r\n        clearFields() {\r\n          this.fileName = ''\r\n          this.cellAutoWidth = true\r\n          this.selectedFormat = 'xls'\r\n        },\r\n        imprimirEval(){\r\n            let me = this\r\n            var element = document.getElementById('seccionImprimirTipoVenta');\r\n            var opt = {\r\n                margin:       0.5,\r\n                // margin:         [1.5, 0.5, 1, 1],\r\n                filename:     me.nombrearchivo,\r\n                image:        { type: 'jpeg', quality: 0.98 },\r\n                html2canvas:    {scale: 2},\r\n                pagebreak: { mode: 'avoid-all', inside: \"avoid\", before: '#page2el' }  ,\r\n                // jsPDF:        { unit: 'in', format: 'letter', orientation: 'portrait' }\r\n                jsPDF: {unit: 'in', format: 'letter', orientation: 'portrait'}\r\n                //jsPDF: { unit: 'mm', format: 'a4', orientation: 'portrait' }\r\n            };\r\n            html2pdf().from(element).set(opt).save();\r\n            me.arregloLibros   = []\r\n            me.$vs.notify({\r\n                text: \"Archivo descargado correctamente\",\r\n                color: 'success',\r\n                iconPack: 'feather',\r\n                icon: 'icon-file',\r\n                time:2000\r\n            })\r\n            me.limpiar()\r\n            me.$emit('change',true)\r\n        },\r\n        limpiar(){\r\n          let me = this;\r\n          me.AnticiposConvenio = 0\r\n          me.convenio_origen   = 0\r\n          me.valorVenta        = 0\r\n          me.totalVenta        = 0\r\n          me.comision          = 0\r\n          me.valorComision     = 0\r\n          me.anticipo          = 0\r\n          me.deuda             = 0\r\n          me.liquidacion       = 0\r\n          me.aniosConvenio     = 0\r\n        }\r\n    }\r\n}\r\n",{"version":3,"sources":["exportTipoVenta.vue"],"names":[],"mappings":";AAyfile":"exportTipoVenta.vue","sourceRoot":"src/views/temporadas/components","sourcesContent":["<template>\r\n    <div>\r\n        <vx-card id=\"seccionImprimirTipoVenta\">\r\n            <p class=\"letra text-center\"><b>REPORTE DE {{ tipoVenta == 1 ? 'VENTA DIRECTA' :'VENTA LISTA' }} </b></p>\r\n            <p class=\"letra text-left\"><b>INSTITUCIÓN:</b> {{ sendPedido.nombreInstitucion.toUpperCase() }}</p>\r\n            <div style=\"display: flex;justify-content: space-between;\">\r\n                <div>\r\n                    <span class=\"letra\" style=\"position: relative;top:-1px;\"><b>TEMPORADA:</b> {{ sendPedido.periodo.toUpperCase() }}</span>\r\n                </div>\r\n                <div>\r\n                    <span class=\"letra\" style=\"position: relative;top:-1px;\"><b>CONVENIO:</b> {{ datosInstitucion.contrato.toUpperCase() }}</span>\r\n                </div>\r\n            </div>\r\n            <p class=\"letra text-left\"><b>ASESOR:</b> {{ sendPedido.responsable.toUpperCase() }}</p>\r\n            <div style=\"display: flex;justify-content: space-between;\">\r\n                <div>\r\n                    <span class=\"letra\" style=\"position: relative;top:-1px;\"><b>FECHA REPORTE:</b> {{ dayM.charAt(0).toUpperCase() + dayM.slice(1) }}, {{ day }} de {{ mes }} de {{ year }}</span>\r\n                </div>\r\n                <div>\r\n                    <span class=\"letra\" style=\"position: relative;top:-1px;\"><b>% COMISIÓN:</b> {{ sendPedido.descuento }}</span>\r\n                </div>\r\n            </div>\r\n            <table class=\"tabla2\">\r\n                <thead>\r\n                    <tr>\r\n                        <td colspan=\"1\"><b>PRODUCTO</b></td>\r\n                        <td colspan=\"4\"><b>NOMBRE</b></td>\r\n                        <td colspan=\"1\"><b>CANT. VERIF.</b></td>\r\n                        <td colspan=\"2\"><b>VAL. UNIT.</b></td>\r\n                        <td colspan=\"1\"><b>VALOR</b></td>\r\n                        <!--9 COLUMNAS-->\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr v-for=\"(tr,key) in arregloLibros\" :key=\"key\">\r\n                        <td>{{ tr.codigo }}</td>\r\n                        <td colspan=\"4\"><p class=\"letra\">{{ tr.nombre_libro.toUpperCase() }}</p>  </td>\r\n                        <td>{{ tr.cantidad }}</td>\r\n                        <td colspan=\"2\">{{ tr.precio }}</td>\r\n                        <td>{{ filtrarDecimal(tr.valor) }} </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td><p class=\"font-bold text-right\" style=\"font-size:10px;\">TOTAL:</p></td>\r\n                        <td style=\"border-top: 1px solid #000;\"><span>{{ filtrarDecimal(sumaTotalTipo)}}</span></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td><p class=\"font-bold text-right\" style=\"font-size:10px;\">COMISIÓN:</p></td>\r\n                        <td style=\"border-top: 1px solid #000;\"><span>{{ filtrarDecimal((sumaTotalTipo * sendPedido.descuento) / 100)}}</span></td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </vx-card>\r\n        <div class=\"w-full p-2 bg-gray-400 text-center\">\r\n          <vs-button color=\"primary\" @click=\"imprimirEval()\" type=\"border\">Imprimir pdf</vs-button>\r\n          <vs-button color=\"primary\" @click=\"imprimirExcel()\" type=\"border\">Imprimir excel</vs-button>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport moment from \"moment\";\r\nimport html2pdf from \"html2pdf.js\"\r\nexport default{\r\n    data(){\r\n        return{\r\n          arregloLibros:[],\r\n          arregloVerificacion:[],\r\n          day:'',\r\n          dayM:'',\r\n          mes:'',\r\n          year:'',\r\n          anio:'',\r\n          fecha:'',\r\n          nombrearchivo:'',\r\n          valorVenta:0,\r\n          totalVenta:0,\r\n          comision:0,\r\n          valorComision:0,\r\n          anticipo:0,\r\n          deuda:0,\r\n          liquidacion:0,\r\n          //VARIABLES PARA EXPORTAR A EXCEL\r\n          formats: ['xls', 'xlsx', 'csv', 'txt'],\r\n          fileName:null,\r\n          selectedFormat: 'xls',\r\n          cellAutoWidth: true,\r\n          activePrompt: false,\r\n          sumaTotalTipo:0,\r\n        }\r\n    },\r\n    props:{\r\n      VerificacionSelect:{\r\n        type:Object,\r\n        default:function(){\r\n          return {}\r\n        }\r\n      },\r\n      datosInstitucion:{\r\n        type:Object,\r\n        default:function(){\r\n            return{}\r\n        }\r\n      },\r\n      tipoVenta:{\r\n        type:Number,\r\n        default:1,\r\n      },\r\n      sendPedido:{\r\n        type:Object,\r\n        default:function(){\r\n           return{}\r\n        }\r\n      }\r\n    },\r\n    created(){\r\n        let me = this;\r\n        moment.lang(\"es\")\r\n        me.day = moment().format('DD');\r\n        me.dayM  = moment().format('dddd');\r\n        me.mes = moment().format('MMMM');\r\n        me.year = moment().format('YYYY')\r\n        me.fecha = me.day+'-'+me.mes.substring(0,3)+'-'+me.year\r\n    },\r\n    mounted(){\r\n      let me = this\r\n      me.nombrearchivo = \"\"\r\n      me.obtenerVentaRealXVerificacionXTipoVenta()\r\n      let TypeVenta = me.tipoVenta == 1 ? '_Venta-directa' : 'Venta-Lista'\r\n      me.nombrearchivo = \"Verificacion \"+me.datosInstitucion.contrato+TypeVenta+\".pdf\"\r\n    },\r\n    methods:{\r\n      filtrarDecimal(numero){\r\n        let me = this\r\n        if(numero == 0){\r\n          return numero\r\n        }else{\r\n          const transformar = (numero).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\r\n          return transformar\r\n        }\r\n      },\r\n      obtenerVentaRealXVerificacionXTipoVenta(){\r\n        let me = this;\r\n        me.arregloLibros = []\r\n        me.sumaTotalTipo = 0\r\n        const { contrato, idInstitucion ,id_periodo } = me.datosInstitucion\r\n        me.$vs.loading()\r\n        this.$http.get(this.$server_url+'n_verificacion?contrato='+contrato+'&getVentaRealXVerificacionXTipoVenta=yes&IdVerificacion='+me.VerificacionSelect.id+'&verificacion_id='+me.VerificacionSelect.num_verificacion+'&institucion_id='+idInstitucion+'&periodo_id='+id_periodo+'&TipoVenta='+me.tipoVenta)\r\n        .then(function (res) {\r\n          let datos = res.data\r\n          if(datos.length == 0){\r\n            me.$vs.loading.close()\r\n            me.$vs.notify({\r\n            text: \"No existe codigos en el tipo de venta seleccionado\",\r\n            color: 'warning',\r\n            iconPack: 'feather',\r\n            icon: 'icon-file',\r\n            time:3000\r\n            })\r\n            return\r\n          }\r\n          me.$vs.notify({\r\n          text: \"Espere mientras se va generando el archivo...\",\r\n          color: 'primary',\r\n          iconPack: 'feather',\r\n          icon: 'icon-file',\r\n          time:4000\r\n          })\r\n          me.sumarTotalTipoVenta(datos)\r\n          me.getLibros(datos)\r\n          me.$vs.loading.close()\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error + ' error');\r\n            me.$vs.loading.close()\r\n        })\r\n      },\r\n      sumarTotalTipoVenta(data){\r\n        let me = this;\r\n          if(data.length > 0){\r\n            let datos = data.filter(p => p.valor)\r\n            let total = datos.reduce((a, b) => a + (b[\"valor\"] || 0), 0);\r\n            me.sumaTotalTipo = total\r\n          }\r\n      },\r\n      getLibros(datos){\r\n        let me = this\r\n        me.arregloLibros = []\r\n        ///===ORDENAR ARRAY ==\r\n        me.arregloLibros = datos.sort(function(a, b) {\r\n        var nombreA = a.nombre_libro.toLowerCase();\r\n        var nombreB = b.nombre_libro.toLowerCase();\r\n        var numA = parseInt(nombreA.match(/\\d+$/)); // extraer el número del final (si existe)\r\n        var numB = parseInt(nombreB.match(/\\d+$/)); // extraer el número del final (si existe)\r\n        nombreA = nombreA.replace(/\\d+$/, ''); // quitar el número del final\r\n        nombreB = nombreB.replace(/\\d+$/, ''); // quitar el número del final\r\n            if (nombreA < nombreB) {\r\n                return -1;\r\n            }\r\n            if (nombreA > nombreB) {\r\n                return 1;\r\n            }\r\n            if (numA && !numB) { // si a tiene número y b no, b va primero\r\n                return 1;\r\n            }\r\n            if (!numA && numB) { // si b tiene número y a no, a va primero\r\n                return -1;\r\n            }\r\n            if (numA && numB) { // si ambos tienen número, compararlos\r\n                if (numA < 10 && numB >= 10) { // si a es menor que 10 y b es 10 o mayor, a va primero\r\n                return -1;\r\n                }\r\n                if (numA >= 10 && numB < 10) { // si b es menor que 10 y a es 10 o mayor, b va primero\r\n                return 1;\r\n                }\r\n                return numA - numB; // comparar los números directamente\r\n            }\r\n            return 0; // si son iguales en todo, no hay diferencia\r\n        })\r\n        setTimeout(function() {me.imprimirEval()}, 1000)\r\n      },\r\n        formatJson(filterVal, jsonData) {\r\n          return jsonData.map(v => filterVal.map(j => {\r\n              return v[j]\r\n          }))\r\n        },\r\n        //limpiar campos para exportar de nuevo\r\n        clearFields() {\r\n          this.fileName = ''\r\n          this.cellAutoWidth = true\r\n          this.selectedFormat = 'xls'\r\n        },\r\n        imprimirEval(){\r\n            let me = this\r\n            var element = document.getElementById('seccionImprimirTipoVenta');\r\n            var opt = {\r\n                margin:       0.5,\r\n                // margin:         [1.5, 0.5, 1, 1],\r\n                filename:     me.nombrearchivo,\r\n                image:        { type: 'jpeg', quality: 0.98 },\r\n                html2canvas:    {scale: 2},\r\n                pagebreak: { mode: 'avoid-all', inside: \"avoid\", before: '#page2el' }  ,\r\n                // jsPDF:        { unit: 'in', format: 'letter', orientation: 'portrait' }\r\n                jsPDF: {unit: 'in', format: 'letter', orientation: 'portrait'}\r\n                //jsPDF: { unit: 'mm', format: 'a4', orientation: 'portrait' }\r\n            };\r\n            html2pdf().from(element).set(opt).save();\r\n            me.arregloLibros   = []\r\n            me.$vs.notify({\r\n                text: \"Archivo descargado correctamente\",\r\n                color: 'success',\r\n                iconPack: 'feather',\r\n                icon: 'icon-file',\r\n                time:2000\r\n            })\r\n            me.limpiar()\r\n            me.$emit('change',true)\r\n        },\r\n        limpiar(){\r\n          let me = this;\r\n          me.AnticiposConvenio = 0\r\n          me.convenio_origen   = 0\r\n          me.valorVenta        = 0\r\n          me.totalVenta        = 0\r\n          me.comision          = 0\r\n          me.valorComision     = 0\r\n          me.anticipo          = 0\r\n          me.deuda             = 0\r\n          me.liquidacion       = 0\r\n          me.aniosConvenio     = 0\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n.html2canvas-container { width: 3000px !important; height: 3000px !important; }\r\n*{\r\n    font-family: Arial;\r\n}\r\n.letra{\r\n    padding:0px 60px 0px 0px;\r\n    font-size: 10px;\r\n    margin-left: 35px;\r\n    text-align: justify;\r\n}\r\n.letra2{\r\n    margin-top: 15px;\r\n    margin-left: 60px;\r\n    padding-right:60px;\r\n    font-size: 11px;\r\n    text-align: justify;\r\n}\r\n.letra3{\r\n    display: flex;\r\n    font-size: 11px;\r\n    margin-left: 35px;\r\n    padding-right:35px;\r\n    text-align: justify;\r\n}\r\n.letra4{\r\n    margin-top: 15px;\r\n    margin-left: 55px;\r\n    padding-right:55px;\r\n    font-size: 11px;\r\n    text-align: justify;\r\n}\r\n.letra5{\r\n    display: flex;\r\n    justify-content: space-evenly;\r\n    width: 90%;\r\n    margin-left: 35px;\r\n    padding-right:35px;\r\n    font-size: 11px;\r\n    margin-top: 115px;\r\n}\r\n.tabla1 {\r\n  table-layout: fixed;\r\n  width: 95%;\r\n  border-collapse: collapse;\r\n  border: none;\r\n  margin-left: 15px;\r\n}\r\n.tabla2{\r\n    table-layout: fixed;\r\n    width: 90%;\r\n    border-collapse: collapse;\r\n    border: none;\r\n    font-size: 11px;\r\n    margin-top: 15px;\r\n    margin-left: 35px;\r\n}\r\n\r\n@media print {\r\n    td {page-break-before: always;}\r\n    p  {page-break-before: always;}\r\n}\r\n.encabezado ,td,th {\r\n    /* border: 1px solid rgb(227, 227, 227); */\r\n    text-align: center;\r\n    border-spacing: 0;\r\n}\r\n.rotar{\r\n    font-size: 8px;\r\n    /* writing-mode: vertical-lr;\r\n     transform: rotate(180deg); */\r\n}\r\n.font1{\r\n    font-size: 8px;\r\n}\r\n</style>\r\n"]}]}