{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\codigos\\components\\ImportIngresarCodigos.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\codigos\\components\\ImportIngresarCodigos.vue","mtime":1712682815623},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nimport gestionCodigosLista from './utils/gestionCodigosLista.vue'\r\nimport ImportExcel from './importExcel.vue'\r\nimport vSelect from 'vue-select'\r\nimport ScreenLibrosImportVue from '../../libros/ScreenLibrosImport.vue'\r\nexport default {\r\n  components: {\r\n    ImportExcel,\r\n    vSelect,\r\n    gestionCodigosLista,\r\n    ScreenLibrosImportVue,\r\n  },\r\n  data () {\r\n    return {\r\n      codigosPerdidos:false,\r\n      tableData: [],\r\n      header: [],\r\n      sheetName: '',\r\n      usuario: [],\r\n      modalConfirm: false,\r\n      modalErrores: false,\r\n      errores: [],\r\n      cedulas_no_encontradas: [],\r\n      CodigosNoIngresados:[],\r\n      CodigosExisten:[],\r\n      libroSelect:'',\r\n      // pruebaDiagnostica:0,\r\n      codigosEnviar:[],\r\n      observacion: '',\r\n    }\r\n  },\r\n  created(){\r\n      this.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n      this.codigosPerdidos = false\r\n    },\r\n  methods: {\r\n    loadDataInTable ({ results, header, meta }) {\r\n      this.codigosPerdidos  = false\r\n      this.header           = header\r\n      let datos             = results\r\n      let preValores        = []\r\n      this.codigosEnviar    = []\r\n      //quitar types NumRow\r\n      datos.forEach(element => {\r\n        var obj = new Object();\r\n        const validateCodigo = element.codigo.toLowerCase();\r\n        if(validateCodigo.startsWith(\"p\")){\r\n          obj.diagnostica  = 1\r\n        }else{\r\n          obj.diagnostica  = 0\r\n        }\r\n        obj.codigo = element.codigo.toUpperCase()\r\n        preValores.push(obj)\r\n      });\r\n      this.codigosEnviar = preValores\r\n      this.tableData = results\r\n      this.sheetName = meta.sheetName\r\n    },\r\n    procesarPagos(){\r\n      let me = this\r\n      if(me.libroSelect.idlibro == null || me.libroSelect.idlibro == \"\" || me.libroSelect.idlibro == undefined){\r\n        me.$vs.notify({\r\n        text:'Area eliminado con exito',\r\n        color:'success',\r\n        iconPack: 'feather',\r\n        icon:'icon-check'})\r\n        return\r\n      }\r\n      if(me.observacion == '' || me.observacion == null || me.observacion == undefined){\r\n        me.$vs.loading.close()\r\n        me.$vs.notify({ text:'Ingrese un comentario.', color:'warning', iconPack: 'feather', icon:'icon-alert-triangle'})\r\n        return\r\n      }\r\n      if(me.observacion.length < 5){\r\n        me.$vs.loading.close()\r\n        me.$vs.notify({ text:'El comentario debe tener al menos 5 caracteres.', color:'warning', iconPack: 'feather', icon:'icon-alert-triangle'})\r\n        return\r\n      }\r\n      me.$vs.loading()\r\n      let json_codigos = JSON.stringify(me.codigosEnviar)\r\n      let formData = new FormData();\r\n      formData.append('data_codigos',      json_codigos);\r\n      formData.append('id_usuario',        me.usuario.idusuario);\r\n      formData.append('idlibro',           me.libroSelect.idlibro)\r\n      formData.append('anio',              me.libroSelect.year)\r\n      formData.append('libro',             me.libroSelect.nombre)\r\n      formData.append('serie',             me.libroSelect.nombre_serie)\r\n      formData.append('periodo_id',        localStorage.periodo_id)\r\n      formData.append('comentario',        me.observacion)\r\n      // formData.append('pruebaDiagnostica', me.pruebaDiagnostica)\r\n      this.$http.post(this.$server_url+'codigos/ingreso', formData)\r\n      .then(res => {\r\n        me.$vs.loading.close()\r\n        me.$vs.notify({\r\n        text:'Códigos procesados exitosamente',\r\n        color:'success',\r\n        iconPack: 'feather',\r\n        icon:'icon-check'})\r\n        me.modalConfirm         = false\r\n        me.tableData = []\r\n        me.codigosPerdidos      = true\r\n        me.CodigosNoIngresados  = res.data.CodigosNoIngresados\r\n        me.CodigosExisten       = res.data.CodigosExisten\r\n        me.porcentaje           = res.data.cambiados\r\n      })\r\n      .catch(function (error) {\r\n        me.$vs.notify({\r\n        text:'Verifique que la información se haya guardado correctamente.',\r\n        color:'warning',\r\n        iconPack: 'feather',\r\n        icon:'icon-alert-triangle'})\r\n        me.$vs.loading.close()\r\n      })\r\n    },\r\n    openConfirm(tipo) {\r\n      let me = this\r\n      if( !me.tableData[0].codigo){\r\n            me.$vs.loading.close()\r\n            me.$vs.notify({ text:'Corrija el formato del excel y vuelva a intentar.', color:'warning', iconPack: 'feather', icon:'icon-alert-triangle'})\r\n            return\r\n        }\r\n      me.errores = []\r\n      $.each(me.tableData,function(key, value){\r\n        if( !value.codigo ){\r\n          me.errores.push(value)\r\n        }\r\n      })\r\n      if( me.errores.length > 0 ){\r\n        me.modalErrores = true\r\n      }else{\r\n        me.modalConfirm = true\r\n      }\r\n    },\r\n    changeLibroSelect(e){\r\n      let me = this;\r\n      me.libroSelect = ''\r\n      me.libroSelect = e\r\n    },\r\n  }\r\n}\r\n",{"version":3,"sources":["ImportIngresarCodigos.vue"],"names":[],"mappingsfile":"ImportIngresarCodigos.vue","sourceRoot":"src/views/codigos/components","sourcesContent":["<template>\r\n  <vs-card>\r\n    <vs-popup title=\"Errores en excel de los codigos\" :active.sync=\"modalErrores\" style=\"padding: 0% !important;\">\r\n       <div class=\"w-full\" style=\"background: rgb(121,9,9); padding: 20px; border-radius: 5px; background: linear-gradient(90deg, rgba(121,9,9,1) 28%, rgba(255,0,48,1) 100%); color: white;\">\r\n         <div class=\"vx-row\">\r\n            <div class=\"vx-col sm:w-1/2 w-full\">\r\n              <b>Código</b>\r\n            </div>\r\n            <div class=\"vx-col sm:w-1/2 w-full\">\r\n              <b>Institución</b>\r\n            </div>\r\n        </div>\r\n        <vs-divider></vs-divider>\r\n        <div :key=\"index\" v-for=\"(item, index) in errores\">\r\n          <div class=\"vx-row\">\r\n              <div class=\"vx-col sm:w-1/2 w-full\">\r\n                <span v-if=\"item.codigo\"> {{item.codigo}} </span>\r\n              </div>\r\n          </div>\r\n        </div>\r\n       </div>\r\n    </vs-popup>\r\n    <vs-popup small title=\"Confirmación\" :active.sync=\"modalConfirm\">\r\n      <div class=\"w-full mb-base\" align=\"center\">\r\n        <h4>Está seguro de aplicar estos códigos </h4>\r\n      </div>\r\n      <div class=\"w-full\" align=\"center\">\r\n        <vs-button class=\"mb-2\" color=\"danger\" type=\"gradient\" @click=\"procesarPagos()\"> Confirmar </vs-button>\r\n      </div>\r\n    </vs-popup>\r\n    <div class=\"mb-6\" align=\"center\">\r\n      <div class=\"vx-col w-full\">\r\n        <p style=\"font-weight: 100;opacity: 0.5;\" class=\"text-2xl\">Import Ingreso de códigos</p>\r\n        <vs-divider></vs-divider>\r\n        <p style=\"color:#1F340E;\">\r\n          <i class=\"fa fa-file\" aria-hidden=\"true\"></i>  Ingreso de códigos  <span style=\"font-weight: bold;\">(no ingrese más de 1500 registros en una sola carga.)</span>\r\n        </p>\r\n      </div>\r\n      <!-- Textarea -->\r\n      <div v-if=\"libroSelect\" class=\"flex justify-center mt-3\">\r\n        <!-- HTML !-->\r\n        <button class=\"button-33 mt-2\" role=\"button\">Libro Seleccionado: {{ libroSelect.nombrelibro }}</button>\r\n        <vx-tooltip style=\"display: inline-block;\" text=\"Seleccionar otro libro\" position=\"top\" color=\"primary\">\r\n          <vs-button radius color=\"warning\" size=\"small\" class=\"ml-2 mt-4\" type=\"border\" icon-pack=\"feather\" @click=\"libroSelect='';\" icon=\"icon-x\"></vs-button>\r\n        </vx-tooltip>\r\n        <!-- <ul class=\"leftx mt-2 ml-5\">\r\n          <li>\r\n            <vs-radio v-model=\"pruebaDiagnostica\" vs-name=\"radios1pruebaDiagnostica\" vs-value=\"0\">Activación</vs-radio>\r\n          </li>\r\n          <li>\r\n            <vs-radio v-model=\"pruebaDiagnostica\" class=\"ml-3 mt-1\" vs-name=\"radios1pruebaDiagnostica\" vs-value=\"1\">Diagnostica</vs-radio>\r\n          </li>\r\n        </ul> -->\r\n      </div>\r\n      <div v-else>\r\n        <ScreenLibrosImportVue @changeLibroSelect=\"changeLibroSelect\"/>\r\n      </div>\r\n      <!--Comentario-->\r\n      <vs-input icon=\"icon-message-square\" class=\"w-full mt-5\" icon-pack=\"feather\" placeholder=\"Comentario\" v-model=\"observacion\"/>\r\n      <!-- /Textarea -->\r\n      <br/>\r\n      <import-excel :onSuccess=\"loadDataInTable\"  class=\"mb-4\" />\r\n      <div>\r\n        <vs-row>\r\n          <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\" vs-sm = \"12\" vs-xs=\"12\" >\r\n            <vs-card>\r\n              <div class=\"header\">\r\n                <p style=\"font-weight: bold;\">Formato del archivo excel</p>\r\n                <table class=\"tabla\">\r\n                    <tr>\r\n                      <th class=\"th1\">codigo</th>\r\n                    </tr>\r\n                    <tr>\r\n                      <td class=\"td1\">xxx</td>\r\n                    </tr>\r\n                </table>\r\n              </div>\r\n            </vs-card>\r\n          </vs-col>\r\n        </vs-row>\r\n      </div>\r\n      <!-- {{tableData}} -->\r\n      <vs-alert v-if=\"tableData.length > 0\" class=\"mb-3\" color=\"success\" icon-pack=\"feather\" icon=\"icon-alert-triangle\">\r\n          <span>Excel cargado exitosamente. ¿Está seguro de procesar estos códigos</span><br>\r\n      </vs-alert>\r\n      <vs-row v-if=\"tableData.length > 0 && tableData.length <= 1500 \">\r\n          <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\">\r\n              <vs-button class=\"mb-2\" color=\"primary\"  type=\"relief\" icon=\"code\" @click=\"openConfirm(0)\">Subir códigos </vs-button>\r\n          </vs-col>\r\n      </vs-row>\r\n      <vs-row v-if=\"codigosPerdidos == true\">\r\n        <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\">\r\n            <vs-alert active=\"true\">\r\n                Se guardo  {{ porcentaje }} códigos\r\n            </vs-alert>\r\n        </vs-col>\r\n      </vs-row>\r\n      <vs-row v-if=\"codigosPerdidos == true\">\r\n        <vs-card v-if=\"CodigosNoIngresados.length > 0\">\r\n          <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"6\">\r\n            <vs-list>\r\n              <p>Cantidad <span>{{ CodigosNoIngresados.length }}</span></p>\r\n              <vs-list-header icon=\"supervisor_account\" title=\"Códigos que no se pudieron ingresar\"></vs-list-header>\r\n              <vs-list-item :key=\"indextr\" v-for=\"(tr, indextr) in CodigosNoIngresados\" icon=\"check\" :title=\"tr.codigo\" >\r\n              </vs-list-item>\r\n            </vs-list>\r\n          </vs-col>\r\n        </vs-card>\r\n      </vs-row>\r\n      <vs-row v-if=\"codigosPerdidos == true\">\r\n        <vx-card\r\n        title=\"Estos códigos ya existen\"\r\n        title-color=\"danger\"\r\n        >\r\n          <gestionCodigosLista :arregloCodigos=\"CodigosExisten\"/>\r\n        </vx-card>\r\n      </vs-row>\r\n    </div>\r\n    <vx-card v-if=\"tableData.length && header.length\">\r\n      <vs-table stripe pagination :max-items=\"20\" search :data=\"tableData\">\r\n        <template slot=\"header\">\r\n          <h4>Códigos a subir {{ tableData.length }}</h4>\r\n        </template>\r\n        <template slot=\"thead\">\r\n          <vs-th :sort-key=\"heading\" v-for=\"heading in header\" :key=\"heading\">{{ heading }}</vs-th>\r\n        </template>\r\n        <template slot-scope=\"{data}\">\r\n          <vs-tr :data=\"tr\" :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n            <vs-td :data=\"col\" v-for=\"(col, indexcol) in data[indextr]\" :key=\"indexcol + col\">\r\n              {{ col }}\r\n            </vs-td>\r\n          </vs-tr>\r\n        </template>\r\n      </vs-table>\r\n    </vx-card>\r\n  </vs-card>\r\n</template>\r\n<script>\r\nimport gestionCodigosLista from './utils/gestionCodigosLista.vue'\r\nimport ImportExcel from './importExcel.vue'\r\nimport vSelect from 'vue-select'\r\nimport ScreenLibrosImportVue from '../../libros/ScreenLibrosImport.vue'\r\nexport default {\r\n  components: {\r\n    ImportExcel,\r\n    vSelect,\r\n    gestionCodigosLista,\r\n    ScreenLibrosImportVue,\r\n  },\r\n  data () {\r\n    return {\r\n      codigosPerdidos:false,\r\n      tableData: [],\r\n      header: [],\r\n      sheetName: '',\r\n      usuario: [],\r\n      modalConfirm: false,\r\n      modalErrores: false,\r\n      errores: [],\r\n      cedulas_no_encontradas: [],\r\n      CodigosNoIngresados:[],\r\n      CodigosExisten:[],\r\n      libroSelect:'',\r\n      // pruebaDiagnostica:0,\r\n      codigosEnviar:[],\r\n      observacion: '',\r\n    }\r\n  },\r\n  created(){\r\n      this.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n      this.codigosPerdidos = false\r\n    },\r\n  methods: {\r\n    loadDataInTable ({ results, header, meta }) {\r\n      this.codigosPerdidos  = false\r\n      this.header           = header\r\n      let datos             = results\r\n      let preValores        = []\r\n      this.codigosEnviar    = []\r\n      //quitar types NumRow\r\n      datos.forEach(element => {\r\n        var obj = new Object();\r\n        const validateCodigo = element.codigo.toLowerCase();\r\n        if(validateCodigo.startsWith(\"p\")){\r\n          obj.diagnostica  = 1\r\n        }else{\r\n          obj.diagnostica  = 0\r\n        }\r\n        obj.codigo = element.codigo.toUpperCase()\r\n        preValores.push(obj)\r\n      });\r\n      this.codigosEnviar = preValores\r\n      this.tableData = results\r\n      this.sheetName = meta.sheetName\r\n    },\r\n    procesarPagos(){\r\n      let me = this\r\n      if(me.libroSelect.idlibro == null || me.libroSelect.idlibro == \"\" || me.libroSelect.idlibro == undefined){\r\n        me.$vs.notify({\r\n        text:'Area eliminado con exito',\r\n        color:'success',\r\n        iconPack: 'feather',\r\n        icon:'icon-check'})\r\n        return\r\n      }\r\n      if(me.observacion == '' || me.observacion == null || me.observacion == undefined){\r\n        me.$vs.loading.close()\r\n        me.$vs.notify({ text:'Ingrese un comentario.', color:'warning', iconPack: 'feather', icon:'icon-alert-triangle'})\r\n        return\r\n      }\r\n      if(me.observacion.length < 5){\r\n        me.$vs.loading.close()\r\n        me.$vs.notify({ text:'El comentario debe tener al menos 5 caracteres.', color:'warning', iconPack: 'feather', icon:'icon-alert-triangle'})\r\n        return\r\n      }\r\n      me.$vs.loading()\r\n      let json_codigos = JSON.stringify(me.codigosEnviar)\r\n      let formData = new FormData();\r\n      formData.append('data_codigos',      json_codigos);\r\n      formData.append('id_usuario',        me.usuario.idusuario);\r\n      formData.append('idlibro',           me.libroSelect.idlibro)\r\n      formData.append('anio',              me.libroSelect.year)\r\n      formData.append('libro',             me.libroSelect.nombre)\r\n      formData.append('serie',             me.libroSelect.nombre_serie)\r\n      formData.append('periodo_id',        localStorage.periodo_id)\r\n      formData.append('comentario',        me.observacion)\r\n      // formData.append('pruebaDiagnostica', me.pruebaDiagnostica)\r\n      this.$http.post(this.$server_url+'codigos/ingreso', formData)\r\n      .then(res => {\r\n        me.$vs.loading.close()\r\n        me.$vs.notify({\r\n        text:'Códigos procesados exitosamente',\r\n        color:'success',\r\n        iconPack: 'feather',\r\n        icon:'icon-check'})\r\n        me.modalConfirm         = false\r\n        me.tableData = []\r\n        me.codigosPerdidos      = true\r\n        me.CodigosNoIngresados  = res.data.CodigosNoIngresados\r\n        me.CodigosExisten       = res.data.CodigosExisten\r\n        me.porcentaje           = res.data.cambiados\r\n      })\r\n      .catch(function (error) {\r\n        me.$vs.notify({\r\n        text:'Verifique que la información se haya guardado correctamente.',\r\n        color:'warning',\r\n        iconPack: 'feather',\r\n        icon:'icon-alert-triangle'})\r\n        me.$vs.loading.close()\r\n      })\r\n    },\r\n    openConfirm(tipo) {\r\n      let me = this\r\n      if( !me.tableData[0].codigo){\r\n            me.$vs.loading.close()\r\n            me.$vs.notify({ text:'Corrija el formato del excel y vuelva a intentar.', color:'warning', iconPack: 'feather', icon:'icon-alert-triangle'})\r\n            return\r\n        }\r\n      me.errores = []\r\n      $.each(me.tableData,function(key, value){\r\n        if( !value.codigo ){\r\n          me.errores.push(value)\r\n        }\r\n      })\r\n      if( me.errores.length > 0 ){\r\n        me.modalErrores = true\r\n      }else{\r\n        me.modalConfirm = true\r\n      }\r\n    },\r\n    changeLibroSelect(e){\r\n      let me = this;\r\n      me.libroSelect = ''\r\n      me.libroSelect = e\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.tabla{\r\n  width: 100%;\r\n  margin-top: 10px;\r\n}\r\n .tabla {\r\n\r\n  border: 1px solid #D1E5F1;\r\n  padding: 2px;\r\n  border-radius: 5px;\r\n}\r\n.th1{\r\n  background-color: #1F340E;\r\n  border-radius: 5px;\r\n  color:white;\r\n}\r\n.td1, .th1{\r\n padding: 10px;\r\n text-align: center;\r\n border:none;\r\n}\r\n.button-33 {\r\n  background-color: #c2fbd7;\r\n  border-radius: 100px;\r\n  box-shadow: rgba(44, 187, 99, .2) 0 -25px 18px -14px inset,rgba(44, 187, 99, .15) 0 1px 2px,rgba(44, 187, 99, .15) 0 2px 4px,rgba(44, 187, 99, .15) 0 4px 8px,rgba(44, 187, 99, .15) 0 8px 16px,rgba(44, 187, 99, .15) 0 16px 32px;\r\n  color: green;\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  font-family: CerebriSans-Regular,-apple-system,system-ui,Roboto,sans-serif;\r\n  padding: 7px 20px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  transition: all 250ms;\r\n  border: 0;\r\n  font-size: 16px;\r\n  user-select: none;\r\n  -webkit-user-select: none;\r\n  touch-action: manipulation;\r\n}\r\n\r\n.button-33:hover {\r\n  box-shadow: rgba(44,187,99,.35) 0 -25px 18px -14px inset,rgba(44,187,99,.25) 0 1px 2px,rgba(44,187,99,.25) 0 2px 4px,rgba(44,187,99,.25) 0 4px 8px,rgba(44,187,99,.25) 0 8px 16px,rgba(44,187,99,.25) 0 16px 32px;\r\n  transform: scale(1.05) rotate(-1deg);\r\n}\r\n</style>\r\n"]}]}