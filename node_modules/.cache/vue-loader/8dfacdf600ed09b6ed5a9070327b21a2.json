{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\institucion\\components\\RegistroDocentes.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\institucion\\components\\RegistroDocentes.vue","mtime":1712682816022},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nimport SeleccionarLibrosVue from './Seleccionarlibros'\r\nexport default{\r\n    data(){\r\n        return {\r\n            usuario:[],\r\n            // institucion_id:'1113',\r\n            periodo_id:'',\r\n            busqueda:'',\r\n            user:{\r\n                idusuario:0,\r\n                nombres:'',\r\n                apellidos:'',\r\n                cedula:'',\r\n                email:'',\r\n                telefono:'',\r\n            },\r\n            seleccionadas:[],\r\n            arregloLibros:[],\r\n            arregloCedulas:[],\r\n        }\r\n    },\r\n    components:{\r\n        SeleccionarLibrosVue,\r\n    },\r\n    props:{\r\n        sendInstitucion:{\r\n            type:Object,\r\n            default:{}\r\n        },\r\n    },\r\n    created(){\r\n        let me = this;\r\n        me.usuario = JSON.parse(localStorage.getItem(\"usuario\"))\r\n    },\r\n    mounted(){\r\n        let me = this;\r\n        me.institucion_id = me.sendInstitucion.idInstitucion\r\n        me.periodo_id     = me.sendInstitucion.periodo_id\r\n    },\r\n    methods:{\r\n        //Buscar x cedula\r\n        getSearchDocente(){\r\n            let me = this;\r\n            me.arregloCedulas = []\r\n            me.limpiar()\r\n            if(me.busqueda.trim() == \"\"){\r\n                this.$vs.notify({\r\n                text:'El campo buscar no puede estar vacío',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n                return;\r\n            }\r\n            if(me.busqueda.length < 5){\r\n                this.$vs.notify({\r\n                text:'Minímo 5 carácteres',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n                return;\r\n            }\r\n            me.$vs.loading()\r\n            this.$http.get(this.$server_url+'registroDocente?busquedaUserXCedula=yes&cedula='+me.busqueda+'&institucion_id='+me.institucion_id)\r\n            .then(function (res) {\r\n                me.$vs.loading.close()\r\n                if(res.data.length == 0){\r\n                    me.$vs.notify({ color: 'warning', title: 'Mensaje', text: 'No se encontro la cédula ' })\r\n                    me.limpiar()\r\n                    return\r\n                }else{\r\n                    me.arregloCedulas = res.data\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                me.$vs.loading.close()\r\n                console.log(error + ' error');\r\n            })\r\n\r\n        },\r\n        //SELECCIONAR EL DOCENTE DEL LISTADO DE CEDULAS\r\n        selectedDocente(datos){\r\n            let me              = this\r\n            if(datos.institucion_idInstitucion != me.institucion_id){\r\n                me.$vs.notify({ color: 'warning', title: 'Mensaje', text: 'EL docente pertenece a otra institución ' })\r\n                return\r\n            }\r\n            me.user.idusuario   = datos.idusuario\r\n            me.user.cedula      = datos.cedula\r\n            me.user.idusuario   = datos.idusuario\r\n            me.user.nombres     = datos.nombres\r\n            me.user.apellidos   = datos.apellidos\r\n            me.user.email       = datos.email\r\n            me.user.telefono    = datos.telefono\r\n            me.arregloCedulas   = []\r\n        },\r\n        //libros del docente\r\n        getSeleccionadas() {\r\n            let me = this;\r\n            me.$vs.loading();\r\n            let data = new FormData();\r\n            data.append('idusuario',  user.idusuario)\r\n            data.append('periodo_id', localStorage.periodo_id)\r\n            this.$http.post(this.$server_url + \"asignaturas_x_docente_xPeriodo\", data)\r\n                .then(res => {\r\n                    me.$vs.loading.close();\r\n                    me.seleccionadas = res.data;\r\n                })\r\n                .catch(function(e){\r\n                    me.$vs.loading.close();\r\n                })\r\n        },\r\n        async guardarUsuario() {\r\n            let me = this\r\n             if( me.user.nombres == '' || me.user.apellidos == '' || me.user.email == '' || me.user.email == '' ){\r\n                me.$vs.notify({ color: 'warning', title: 'Alerta', text: 'Complete todos los campos antes de guardar.' })\r\n                return\r\n            }\r\n            me.$vs.loading();\r\n            let formData = new FormData();\r\n            formData.append('idusuario',        this.user.idusuario);\r\n            formData.append('cedula',           this.user.cedula);\r\n            formData.append('nombres',          this.user.nombres);\r\n            formData.append('apellidos',        this.user.apellidos);\r\n            formData.append('email',            this.user.email);\r\n            formData.append('telefono',         this.user.telefono);\r\n            formData.append('institucion_id',   me.institucion_id );\r\n            formData.append('idcreadorusuario', this.usuario.idusuario);\r\n            this.$http.post(this.$server_url+'guardarDocente', formData)\r\n            .then(function (response) {\r\n                me.$vs.loading.close();\r\n                if(response.data.status == 0){\r\n                    me.$vs.notify({ color: 'danger', title:'Error' , text: response.data.message, time:4000})\r\n                    return\r\n                }\r\n                me.$vs.notify({ color: 'success', title: 'Éxito', text: 'Usuario registrado correctamente.' })\r\n                if(me.user.idusuario == 0){\r\n                    me.selectedDocente(response.data)\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n              me.$vs.loading.close()\r\n              if (error.response.status == 422) {\r\n                  try {\r\n                      me.$vs.notify({ color: 'warning', title: 'Alerta', text: error.response.data.errors.cedula[0] })\r\n                  } catch (error) {\r\n\r\n                  }\r\n                  try {\r\n                      me.$vs.notify({ color: 'warning', title: 'Alerta', text: error.response.data.errors.nombres[0] })\r\n                  } catch (error) {\r\n\r\n                  }\r\n                  try {\r\n                      me.$vs.notify({ color: 'warning', title: 'Alerta', text: error.response.data.errors.apellidos[0] })\r\n                  } catch (error) {\r\n\r\n                  }\r\n                  try {\r\n                      me.$vs.notify({ color: 'warning', title: 'Alerta', text: error.response.data.errors.email[0] })\r\n                  } catch (error) {\r\n\r\n                  }\r\n                  try {\r\n                      me.$vs.notify({ color: 'warning', title: 'Alerta', text: error.response.data.errors.password[0] })\r\n                  } catch (error) {\r\n\r\n                  }\r\n              }\r\n\r\n            })\r\n        },\r\n        limpiar(){\r\n            let me = this\r\n            me.user = {\r\n                idusuario:0,\r\n                nombres:'',\r\n                apellidos:'',\r\n                cedula:'',\r\n                email:'',\r\n                telefono:''\r\n            };\r\n        },\r\n    }\r\n}\r\n",{"version":3,"sources":["RegistroDocentes.vue"],"names":[],"mappings":";AAwfile":"RegistroDocentes.vue","sourceRoot":"src/views/institucion/components","sourcesContent":["<template>\r\n    <vx-card\r\n    :title=\"'Registro de docentes de: '+sendInstitucion.nombreInstitucion \"\r\n    :subtitle=\"'Período: ' +sendInstitucion.periodo\"\r\n    title-color=\"primary\"\r\n    >\r\n        <vs-alert title=\"Mensaje\" color=\"rgb(231, 154, 23)\" active=\"true\">\r\n            <p>* Busque el docente por el número de cédula y asigne libros</p>\r\n            <p class=\"mt-1\">* Si no existe el docente creelo</p>\r\n        </vs-alert>\r\n        <br>\r\n        <!-- Busqueda -->\r\n        <vx-input-group class=\"mb-base mt-2\">\r\n            <template slot=\"prepend\">\r\n            <div class=\"prepend-text bg-primary\">\r\n                <span>Buscar cédula</span>\r\n            </div>\r\n            </template>\r\n            <vs-input v-model=\"busqueda\" @keyup.enter=\"getSearchDocente()\" />\r\n            <template slot=\"append\">\r\n            <div class=\"append-text bg-primary\">\r\n                <span class=\"cursor-pointer\" @click=\"getSearchDocente()\"><ion-icon style=\"position:relative;top:1px;\" name=\"search-outline\"></ion-icon> Buscar</span>\r\n            </div>\r\n            </template>\r\n        </vx-input-group>\r\n        <!-- /Fin busqueda -->\r\n        <!--SELECCCIONAR DOCENTE-->\r\n        <div class=\"w-full\" v-if=\"arregloCedulas.length > 0\">\r\n            <vs-divider>Seleccione el docente</vs-divider>\r\n            <vs-table max-items=\"5\" search pagination :data=\"arregloCedulas\">\r\n                <template slot=\"thead\">\r\n                    <vs-th>Nombres</vs-th>\r\n                    <vs-th>Perfil</vs-th>\r\n                    <vs-th>Institución</vs-th>\r\n                    <vs-th>Acciones</vs-th>\r\n                </template>\r\n                <template slot-scope=\"{data}\">\r\n                    <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                        <vs-td>\r\n                            <b>Nombres:</b>\r\n                            <p>{{ data[indextr].nombres }} {{ data[indextr].apellidos }}</p>\r\n                            <p class=\"mt-1\"></p>\r\n                            <b>Cédula:</b>\r\n                            <p>{{ data[indextr].cedula }}</p>\r\n                        </vs-td>\r\n                        <vs-td>\r\n                            {{data[indextr].rol}}<br>\r\n                        </vs-td>\r\n                        <vs-td>\r\n                            {{data[indextr].nombreInstitucion}}<br>\r\n                        </vs-td>\r\n                        <vs-td>\r\n                            <div style=\"display: flex;\">\r\n                                <div>\r\n                                    <vx-tooltip style=\"display: inline-block;\" text=\"Asignar beneficiario\" position=\"top\" color=\"primary\">\r\n                                        <vs-button class=\"modal-default-button\" size=\"small\" color=\"success\" type=\"filled\" @click=\"selectedDocente(tr)\" icon-pack=\"feather\" icon=\"icon-check\"> Seleccionar</vs-button>\r\n                                    </vx-tooltip> &nbsp;\r\n                                </div>\r\n                            </div>\r\n                        </vs-td>\r\n                    </vs-tr>\r\n                </template>\r\n            </vs-table>\r\n        </div>\r\n        <!-- <div v-if=\"arregloCedulas.length == 0\"> -->\r\n        <div>\r\n            <!--FIN SELECCIONAR DOCENTE-->\r\n            <!--FORMULARIO-->\r\n            <vs-divider>Datos del docente</vs-divider>\r\n            <div class=\"vx-row\">\r\n                <div class=\"vx-col sm:w-1/2 w-full mb-2\">\r\n                    <vs-input class=\"w-full\" icon-pack=\"feather\" icon=\"icon-user\" icon-no-border label=\"Nombres\" v-model=\"user.nombres\" />\r\n                </div>\r\n                <div class=\"vx-col sm:w-1/2 w-full mb-2\">\r\n                    <vs-input class=\"w-full\" icon-pack=\"feather\" icon=\"icon-user\" icon-no-border label=\"Apellidos\" v-model=\"user.apellidos\" />\r\n                </div>\r\n            </div>\r\n            <div class=\"vx-row\">\r\n                <div class=\"vx-col sm:w-1/2 w-full mb-2\">\r\n                    <vs-input class=\"w-full\" icon-pack=\"feather\" icon=\"icon-user\" icon-no-border label=\"Cédula\" v-model=\"user.cedula\" />\r\n                </div>\r\n                <div class=\"vx-col sm:w-1/2 w-full mb-2\">\r\n                    <vs-input class=\"w-full\" icon-pack=\"feather\" icon=\"icon-user\" icon-no-border label=\"Email\" v-model=\"user.email\" />\r\n                </div>\r\n            </div>\r\n            <div class=\"vx-row\">\r\n                <div class=\"vx-col sm:w-1/2 w-full mb-2\">\r\n                    <vs-input class=\"w-full\" icon-pack=\"feather\" icon=\"icon-user\" icon-no-border label=\"Teléfono\" v-model=\"user.telefono\" />\r\n                </div>\r\n            </div>\r\n            <div class=\"vx-row mt-5 ml-1\">\r\n                <div class=\"flex\">\r\n                    <vs-button class=\"mr-3 mb-2\" icon=\"save\" @click=\"guardarUsuario()\">Guardar docente</vs-button>\r\n                </div>\r\n            </div>\r\n            <vs-divider>Seleccionar área</vs-divider>\r\n            <!--FIN FORMULARIO-->\r\n            <!--SELECCIONAR LIBROS-->\r\n            <SeleccionarLibrosVue :institucion_id=\"institucion_id\" :periodo_id=\"periodo_id\" :docente_id=\"user.idusuario\"/>\r\n            <!--FIN SELECCIONAR LIBROS-->\r\n        </div>\r\n    </vx-card>\r\n</template>\r\n<script>\r\nimport SeleccionarLibrosVue from './Seleccionarlibros'\r\nexport default{\r\n    data(){\r\n        return {\r\n            usuario:[],\r\n            // institucion_id:'1113',\r\n            periodo_id:'',\r\n            busqueda:'',\r\n            user:{\r\n                idusuario:0,\r\n                nombres:'',\r\n                apellidos:'',\r\n                cedula:'',\r\n                email:'',\r\n                telefono:'',\r\n            },\r\n            seleccionadas:[],\r\n            arregloLibros:[],\r\n            arregloCedulas:[],\r\n        }\r\n    },\r\n    components:{\r\n        SeleccionarLibrosVue,\r\n    },\r\n    props:{\r\n        sendInstitucion:{\r\n            type:Object,\r\n            default:{}\r\n        },\r\n    },\r\n    created(){\r\n        let me = this;\r\n        me.usuario = JSON.parse(localStorage.getItem(\"usuario\"))\r\n    },\r\n    mounted(){\r\n        let me = this;\r\n        me.institucion_id = me.sendInstitucion.idInstitucion\r\n        me.periodo_id     = me.sendInstitucion.periodo_id\r\n    },\r\n    methods:{\r\n        //Buscar x cedula\r\n        getSearchDocente(){\r\n            let me = this;\r\n            me.arregloCedulas = []\r\n            me.limpiar()\r\n            if(me.busqueda.trim() == \"\"){\r\n                this.$vs.notify({\r\n                text:'El campo buscar no puede estar vacío',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n                return;\r\n            }\r\n            if(me.busqueda.length < 5){\r\n                this.$vs.notify({\r\n                text:'Minímo 5 carácteres',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n                return;\r\n            }\r\n            me.$vs.loading()\r\n            this.$http.get(this.$server_url+'registroDocente?busquedaUserXCedula=yes&cedula='+me.busqueda+'&institucion_id='+me.institucion_id)\r\n            .then(function (res) {\r\n                me.$vs.loading.close()\r\n                if(res.data.length == 0){\r\n                    me.$vs.notify({ color: 'warning', title: 'Mensaje', text: 'No se encontro la cédula ' })\r\n                    me.limpiar()\r\n                    return\r\n                }else{\r\n                    me.arregloCedulas = res.data\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                me.$vs.loading.close()\r\n                console.log(error + ' error');\r\n            })\r\n\r\n        },\r\n        //SELECCIONAR EL DOCENTE DEL LISTADO DE CEDULAS\r\n        selectedDocente(datos){\r\n            let me              = this\r\n            if(datos.institucion_idInstitucion != me.institucion_id){\r\n                me.$vs.notify({ color: 'warning', title: 'Mensaje', text: 'EL docente pertenece a otra institución ' })\r\n                return\r\n            }\r\n            me.user.idusuario   = datos.idusuario\r\n            me.user.cedula      = datos.cedula\r\n            me.user.idusuario   = datos.idusuario\r\n            me.user.nombres     = datos.nombres\r\n            me.user.apellidos   = datos.apellidos\r\n            me.user.email       = datos.email\r\n            me.user.telefono    = datos.telefono\r\n            me.arregloCedulas   = []\r\n        },\r\n        //libros del docente\r\n        getSeleccionadas() {\r\n            let me = this;\r\n            me.$vs.loading();\r\n            let data = new FormData();\r\n            data.append('idusuario',  user.idusuario)\r\n            data.append('periodo_id', localStorage.periodo_id)\r\n            this.$http.post(this.$server_url + \"asignaturas_x_docente_xPeriodo\", data)\r\n                .then(res => {\r\n                    me.$vs.loading.close();\r\n                    me.seleccionadas = res.data;\r\n                })\r\n                .catch(function(e){\r\n                    me.$vs.loading.close();\r\n                })\r\n        },\r\n        async guardarUsuario() {\r\n            let me = this\r\n             if( me.user.nombres == '' || me.user.apellidos == '' || me.user.email == '' || me.user.email == '' ){\r\n                me.$vs.notify({ color: 'warning', title: 'Alerta', text: 'Complete todos los campos antes de guardar.' })\r\n                return\r\n            }\r\n            me.$vs.loading();\r\n            let formData = new FormData();\r\n            formData.append('idusuario',        this.user.idusuario);\r\n            formData.append('cedula',           this.user.cedula);\r\n            formData.append('nombres',          this.user.nombres);\r\n            formData.append('apellidos',        this.user.apellidos);\r\n            formData.append('email',            this.user.email);\r\n            formData.append('telefono',         this.user.telefono);\r\n            formData.append('institucion_id',   me.institucion_id );\r\n            formData.append('idcreadorusuario', this.usuario.idusuario);\r\n            this.$http.post(this.$server_url+'guardarDocente', formData)\r\n            .then(function (response) {\r\n                me.$vs.loading.close();\r\n                if(response.data.status == 0){\r\n                    me.$vs.notify({ color: 'danger', title:'Error' , text: response.data.message, time:4000})\r\n                    return\r\n                }\r\n                me.$vs.notify({ color: 'success', title: 'Éxito', text: 'Usuario registrado correctamente.' })\r\n                if(me.user.idusuario == 0){\r\n                    me.selectedDocente(response.data)\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n              me.$vs.loading.close()\r\n              if (error.response.status == 422) {\r\n                  try {\r\n                      me.$vs.notify({ color: 'warning', title: 'Alerta', text: error.response.data.errors.cedula[0] })\r\n                  } catch (error) {\r\n\r\n                  }\r\n                  try {\r\n                      me.$vs.notify({ color: 'warning', title: 'Alerta', text: error.response.data.errors.nombres[0] })\r\n                  } catch (error) {\r\n\r\n                  }\r\n                  try {\r\n                      me.$vs.notify({ color: 'warning', title: 'Alerta', text: error.response.data.errors.apellidos[0] })\r\n                  } catch (error) {\r\n\r\n                  }\r\n                  try {\r\n                      me.$vs.notify({ color: 'warning', title: 'Alerta', text: error.response.data.errors.email[0] })\r\n                  } catch (error) {\r\n\r\n                  }\r\n                  try {\r\n                      me.$vs.notify({ color: 'warning', title: 'Alerta', text: error.response.data.errors.password[0] })\r\n                  } catch (error) {\r\n\r\n                  }\r\n              }\r\n\r\n            })\r\n        },\r\n        limpiar(){\r\n            let me = this\r\n            me.user = {\r\n                idusuario:0,\r\n                nombres:'',\r\n                apellidos:'',\r\n                cedula:'',\r\n                email:'',\r\n                telefono:''\r\n            };\r\n        },\r\n    }\r\n}\r\n</script>\r\n"]}]}