{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\temporadas\\historicoCodigosNuevo.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\temporadas\\historicoCodigosNuevo.vue","mtime":1712682816620},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nimport imageZoom from 'vue-image-zoomer';\r\nconst  UploadVerificacionVue      = () => import('./components/UploadVerificacion.vue')\r\nconst exportLiquidacionVue        = () => import('./components/exportLiquidacion.vue')\r\nconst LiquidadosDevueltosVue      = () => import('./components/Pedidos/LiquidadosDevueltos.vue')\r\nconst ScreenRegaladosVue          = () => import('./components/Pedidos/Regalados/ScreenRegalados.vue')\r\nconst BeneficiariosPorcentajeVue  = () => import('../pedidos/components/beneficiarios/BeneficiariosPorcentaje.vue')\r\nconst registrar_beneficiariosVue  = () => import('../pedidos/registrar_beneficiarios.vue')\r\nconst TableVerificadosVue         = () => import('./components/TableVerificados.vue')\r\nimport VentaRealVue from '@/views/temporadas/components/VentaReal'\r\nimport exportTipoVentaVue from './components/exportTipoVenta.vue';\r\nimport ScreenConfiguracionVerificacionVue from './components/Pedidos/Configuracion/ScreenConfiguracionVerificacion.vue';\r\nexport default {\r\n  components:{\r\n    UploadVerificacionVue,\r\n    imageZoom,\r\n    VentaRealVue,\r\n    exportLiquidacionVue,\r\n    exportTipoVentaVue,\r\n    TableVerificadosVue,\r\n    LiquidadosDevueltosVue,\r\n    ScreenRegaladosVue,\r\n    ScreenConfiguracionVerificacionVue,\r\n    BeneficiariosPorcentajeVue,\r\n    registrar_beneficiariosVue,\r\n    // ScreenConvenioVue,\r\n  },\r\n    data() {\r\n        return{\r\n            usuario:[],\r\n            contrato:'',\r\n            InformacionLiquidacion:[],\r\n            DetalleVerificacion:[],\r\n            ArregloVerCodigos:[],\r\n            popupDetalleVerificacion:false,\r\n            popupVerCodigos:false,\r\n            title:'',\r\n            title2:'',\r\n            verificacion_id:0,\r\n            contContrato:0,\r\n            popupChangeLiquidacion:false,\r\n            nombreInstitucion:'',\r\n            desgloseContrato:[],\r\n            pedido:{},\r\n            popupSolicitud:false,\r\n            popupSolicitudFactura:false,\r\n            popupDocumento:false,\r\n            tipoDocumento:'',\r\n            documento:'',\r\n            userRoot:false,\r\n            userFacturador:false,\r\n            userAsesor:false,\r\n            //VARIABLES PARA EXPORTAR A EXCEL\r\n            formats: ['xls', 'xlsx', 'csv', 'txt'],\r\n            fileName:null,\r\n            selectedFormat: 'xls',\r\n            cellAutoWidth: true,\r\n            activePrompt: false,\r\n            //FIN VARIABLES PARA EXPORTAR A EXCEL\r\n            //variables para observacion\r\n            observacion:'',\r\n            popupObservacion:false,\r\n            counterDanger: false,\r\n            disableAsesor:false,\r\n            datosInstitucion:'',\r\n            maximaVerificacion:0,\r\n            desdeDetalle:0,\r\n            //0 => REPORTE PDF; 1 => REPORTE EXCEL\r\n            tipoReporte:0,\r\n            tipoVenta:1,\r\n            //fin variables para observacion\r\n            //variables para reporte pdf\r\n            mostrarReportePdf:false,\r\n            mostrarReporteTipoVenta:false,\r\n            popupCarga:false,\r\n            //fin variables para reporte pdf\r\n            //variables regalados\r\n            arregloRegalados:[],\r\n            colorx:\"#56979B\",\r\n            totalRegalados:0,\r\n            //fin variables regalados\r\n            totalCobroVenta:0,\r\n            sumaTotalVALOR:0,\r\n            menuDetalle:1,\r\n            //variables para cobro directa\r\n            setcobro_venta_directa:0,\r\n            settipoPago:0,\r\n            setPersonalizado:0,\r\n            settotalDescuento:0,\r\n            setcampoPersonalizado:\"\",\r\n            setpermiso_anticipo_deuda:0,\r\n            setpermiso_convenio:0,\r\n            setpermiso_cobro_venta_directa:0,\r\n            //fin variables para cobro directa\r\n            //variables venta real\r\n            sumaVentaReal:0,\r\n            arregloValoresVentaReal:[],\r\n            //fin variables venta real\r\n            filtroMenu:100,\r\n            arrayAllCodigos:[],\r\n            arrayCodigosVerificacion:[],\r\n      }\r\n    },\r\n    props:{\r\n        desdePedido:{\r\n            type:Number,\r\n            default:0\r\n        },\r\n        contratoPedido:{\r\n            type:String,\r\n            default:''\r\n        },\r\n        sendPedido:{\r\n            type:Object,\r\n            default:{}\r\n        },\r\n    },\r\n    watch:{\r\n        setcobro_venta_directa(results){\r\n          let me = this;\r\n          me.setcobro_venta_directa = results\r\n          me.getAllCodigosXContrato()\r\n        },\r\n        settipoPago(results){\r\n          let me = this;\r\n          me.settipoPago = results\r\n        },\r\n        setPersonalizado(results){\r\n          let me = this;\r\n          me.setPersonalizado = results\r\n        },\r\n        settotalDescuento(results){\r\n          let me = this;\r\n          me.settotalDescuento = results\r\n        },\r\n        setcampoPersonalizado(results){\r\n          let me = this;\r\n          me.setcampoPersonalizado = results\r\n        },\r\n        setpermiso_anticipo_deuda(results){\r\n          let me = this;\r\n          me.setpermiso_anticipo_deuda = results\r\n        },\r\n        setpermiso_convenio(results){\r\n          let me = this;\r\n          me.setpermiso_convenio = results\r\n        },\r\n        setpermiso_cobro_venta_directa(results){\r\n          let me = this;\r\n          me.setpermiso_cobro_venta_directa = results\r\n        }\r\n    },\r\n    created(){\r\n        let me = this;\r\n        me.usuario = JSON.parse(localStorage.getItem(\"usuario\"))\r\n        me.getUserRoot(me.usuario);\r\n    },\r\n    mounted(){\r\n      let me = this;\r\n      me.setcobro_venta_directa     = 0\r\n      me.settipoPago                = 0\r\n      me.setPersonalizado           = 0\r\n      me.settotalDescuento          = 0\r\n      me.setcampoPersonalizado      = \"\"\r\n      me.setpermiso_anticipo_deuda  = 0\r\n      me.setpermiso_convenio        = 0\r\n      me.setpermiso_cobro_venta_directa = 0\r\n      me.menuDetalle = 1\r\n      if(me.desdePedido == 1){\r\n        me.contrato = me.contratoPedido\r\n        me.getInformacionLiquidacion()\r\n      }\r\n      //user facturador\r\n      if(me.usuario.id_group == 23 || me.usuario.id_group == 22) me.userFacturador = true\r\n      //user asesor\r\n      if(me.usuario.id_group == 11){\r\n        me.userAsesor = true\r\n        me.disableAsesor = true\r\n      }\r\n    },\r\n    computed:{\r\n        sumaTotal(){\r\n            let me = this;\r\n            if(me.DetalleVerificacion.length >0){\r\n              let datos = me.DetalleVerificacion.filter(p => p.cantidad)\r\n              let total = datos.reduce((a, b) => a + (b[\"cantidad\"] || 0), 0);\r\n              return total\r\n            }\r\n        },\r\n        sumaTotalRegalados(){\r\n            let me = this;\r\n            if(me.arregloRegalados.length >0){\r\n              let datos = me.arregloRegalados.filter(p => p.cantidad)\r\n              let total = datos.reduce((a, b) => a + (b[\"cantidad\"] || 0), 0);\r\n              return total\r\n            }\r\n        },\r\n    },\r\n    methods: {\r\n      estadoMenu(){\r\n          let me = this;\r\n          localStorage.setItem('menuSelectVerificacion',me.filtroMenu)\r\n          var divs = document.querySelectorAll(\".btnMenu\");\r\n          for (var i = 0; i < divs.length; i++) {\r\n              divs[i].classList.remove(\"activeBtn\");\r\n          }\r\n          const container = document.querySelector(\".menuVerificacion\"+me.filtroMenu);\r\n          container.classList.add(\"activeBtn\");\r\n      },\r\n      startDetalle(tr){\r\n        let me = this\r\n        me.mostrarReportePdf              = false\r\n        me.mostrarReporteTipoVenta        = false\r\n        me.menuDetalle                    = 1\r\n        me.setcobro_venta_directa         = tr.cobro_venta_directa;\r\n        me.settipoPago                    = tr.tipoPago;\r\n        me.setPersonalizado               = tr.personalizado;\r\n        me.settotalDescuento              = tr.totalDescuento;\r\n        me.setcampoPersonalizado          = tr.campoPersonalizado;\r\n        me.setpermiso_anticipo_deuda      = tr.permiso_anticipo_deuda;\r\n        me.setpermiso_convenio            = tr.permiso_convenio;\r\n        me.setpermiso_cobro_venta_directa = tr.permiso_cobro_venta_directa\r\n        me.pedido                         = tr;\r\n        me.getAllCodigosXContrato()\r\n        me.filtroMenu                     = 0;\r\n        me.estadoMenu();\r\n      },\r\n      abrirModal(){\r\n          let me = this;\r\n          if(me.desdeDetalle == 1){ }\r\n          else  me.popupDetalleVerificacion=true;\r\n      },\r\n      //====METODOS PARA OMITIR LOS ARHIVOS\r\n      changeHandle(e){\r\n        let me = this;\r\n        me.mostrarReportePdf         = false\r\n        me.mostrarReporteTipoVenta   = false\r\n        me.popupCarga                = false\r\n        me.popupDetalleVerificacion  = true\r\n      },\r\n      filtrarDecimal(numero){\r\n          let me = this\r\n          if(numero == undefined){\r\n              return 0\r\n          }\r\n          if(numero == 0){\r\n              return numero\r\n          }else{\r\n              const transformar = (numero).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\r\n              return transformar\r\n          }\r\n      },\r\n      getUserRoot(dato) {\r\n          let me = this;\r\n          this.$http.get(this.$server_url + 'permisos/' + dato.idusuario)\r\n          .then((result) => {\r\n              if (result.data.length > 0) {\r\n              me.userRoot = true;\r\n              }\r\n          })\r\n          .catch((err) => {\r\n              console.log(err)\r\n          })\r\n      },\r\n      verBooks(tr,num_verificacion){\r\n          let me = this;\r\n            me.$vs.loading();\r\n          me.title2 = \"Códigos del libro \"+tr.nombre_libro\r\n          this.$http.get(this.$server_url+'n_verificacion?buscarIdVerificacion=yes&contrato='+me.contrato+'&verCodigos=yes'+'&libro_id='+tr.libro_id+'&num_verificacion='+num_verificacion)\r\n          .then(function (res) {\r\n              me.ArregloVerCodigos = res.data\r\n              me.popupVerCodigos = true;\r\n              me.$vs.loading.close()\r\n              if(res.data.message){\r\n                  me.$vs.notify({\r\n                  text: res.data.message,\r\n                  color: 'success',\r\n                  iconPack: 'feather',\r\n                  icon: 'icon-user'\r\n              })\r\n              }\r\n          })\r\n          .catch(function (error) {\r\n              console.log(error + ' error');\r\n              me.$vs.loading.close()\r\n          })\r\n      },\r\n      getInformacionLiquidacion() {\r\n        let me = this;\r\n        me.InformacionLiquidacion   = [];\r\n        me.desgloseContrato         = []\r\n        me.maximaVerificacion       = 0\r\n        me.nombreInstitucion = \"\"\r\n        if(me.contrato == \"\"){\r\n            me.$vs.notify({\r\n                    text: \"Ingrese un contrato por favor\",\r\n                    color: 'success',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-user'\r\n                })\r\n            return false;\r\n        }\r\n        me.$vs.loading();\r\n        this.$http.get(this.$server_url+'n_verificacion?contrato='+me.contrato+'&informacion=yes')\r\n            .then(function (res) {\r\n              me.$vs.loading.close()\r\n                if(res.data.verificaciones.length == 0){\r\n                    me.$vs.notify({\r\n                    text: 'No hay verificaciones en el contrato',\r\n                    color: 'warning',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-user'\r\n                    })\r\n                    return\r\n                }\r\n                me.InformacionLiquidacion = res.data.verificaciones\r\n                me.nombreInstitucion      = res.data.institucion[0].nombreInstitucion\r\n                me.datosInstitucion       = res.data.institucion[0]\r\n                me.contContrato           = res.data.length\r\n                if(res.data.message){\r\n                    me.$vs.notify({\r\n                    text: res.data.message,\r\n                    color: 'success',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-user'\r\n                    })\r\n                }\r\n                //me.desgloseCodigo();\r\n            })\r\n        .catch(function (error) {\r\n            console.log(error + ' error');\r\n            me.$vs.loading.close()\r\n        })\r\n      },\r\n      desgloseCodigo(){\r\n        let me = this;\r\n        me.desgloseContrato = []\r\n        const { idInstitucion ,id_periodo } = me.datosInstitucion\r\n          this.$http.get(this.$server_url+'n_verificacion?contrato='+me.contrato+'&historico=yes&institucion_id='+idInstitucion+'&periodo_id='+id_periodo)\r\n            .then(function (res) {\r\n              let datos      = res.data.formato\r\n              if(datos.length == 0){\r\n                me.$vs.loading.close()\r\n                return\r\n              }\r\n              me.maximaVerificacion = datos[0].maximaVerificacion\r\n              let getCodigos = res.data.codigos\r\n              let prevalores = []\r\n              datos.forEach(element => {\r\n                var cal = new Object()\r\n                cal.codigo          = element.codigo\r\n                cal.nombre_libro    = element.nombre_libro\r\n                cal.libro_id        = element.libro_id\r\n                var preTotal        = 0\r\n                var contador        = 1\r\n                for (let index = 0; index < me.maximaVerificacion; index++) {\r\n                    let contar = []\r\n                    contar = getCodigos.filter(p => p[`verif${contador}`] > 0 && p.libro_id == element.libro_id)\r\n                    if(contar.length > 0){\r\n                        preTotal += contar.length\r\n                        try {\r\n                        eval(\"cal.verif\" + contador + \"=\" + contar.length);\r\n                        } catch (error) {\r\n                            console.log(\"err\",error)\r\n                            eval(\"cal.verif\" + contador + \"=\" + 0);\r\n                        }\r\n                    }\r\n                    contador++;\r\n                }\r\n                cal.total           = preTotal\r\n                prevalores.push(cal)\r\n              });\r\n              if(prevalores.length > 0){\r\n                me.desgloseContrato = prevalores.sort(function(a, b) {\r\n                var nombreA = a.codigo.toLowerCase();\r\n                var nombreB = b.codigo.toLowerCase();\r\n                var numA = parseInt(nombreA.match(/\\d+$/)); // extraer el número del final (si existe)\r\n                var numB = parseInt(nombreB.match(/\\d+$/)); // extraer el número del final (si existe)\r\n                nombreA = nombreA.replace(/\\d+$/, ''); // quitar el número del final\r\n                nombreB = nombreB.replace(/\\d+$/, ''); // quitar el número del final\r\n\r\n                if (nombreA < nombreB) {\r\n                    return -1;\r\n                }\r\n                if (nombreA > nombreB) {\r\n                    return 1;\r\n                }\r\n                if (numA && !numB) { // si a tiene número y b no, b va primero\r\n                    return 1;\r\n                }\r\n                if (!numA && numB) { // si b tiene número y a no, a va primero\r\n                    return -1;\r\n                }\r\n                if (numA && numB) { // si ambos tienen número, compararlos\r\n                    if (numA < 10 && numB >= 10) { // si a es menor que 10 y b es 10 o mayor, a va primero\r\n                    return -1;\r\n                    }\r\n                    if (numA >= 10 && numB < 10) { // si b es menor que 10 y a es 10 o mayor, b va primero\r\n                    return 1;\r\n                    }\r\n                    return numA - numB; // comparar los números directamente\r\n                }\r\n                return 0; // si son iguales en todo, no hay diferencia\r\n                });\r\n              }\r\n              me.$vs.loading.close()\r\n            })\r\n        .catch(function (error) {\r\n        })\r\n      },\r\n      verCodigosRegalados(tr){\r\n        let me  = this;\r\n        me.ArregloVerCodigos = []\r\n        me.$vs.loading();\r\n        me.title2 = \"Códigos del libro \"+tr.nombre_libro\r\n        this.$http.get(this.$server_url+'showRegalados/'+me.datosInstitucion.idInstitucion+'/'+me.datosInstitucion.id_periodo+'/'+tr.libro_idlibro+'/'+me.pedido.num_verificacion+'/'+me.pedido.id)\r\n        .then(function (res) {\r\n            me.ArregloVerCodigos        = res.data\r\n            me.popupDetalleVerificacion = false;\r\n            me.popupVerCodigos          = true;\r\n            me.$vs.loading.close()\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error + ' error');\r\n            me.$vs.loading.close()\r\n        })\r\n      },\r\n      VerCodigos(tr,filtro){\r\n        let me  = this;\r\n        me.$vs.loading();\r\n        me.title2 = \"Códigos del libro \"+tr.nombre_libro\r\n        this.$http.get(this.$server_url+'n_verificacion?contrato='+me.pedido.contrato+'&verCodigos=yes&verificacion_id='+tr.IdVerificacion+'&libro_id='+tr.libro_id+'&num_verificacion='+tr.verificacion_id)\r\n        .then(function (res) {\r\n          me.$vs.loading.close()\r\n          let datos = res.data\r\n          if(datos.length > 0 ){\r\n            if(filtro == 0) me.ArregloVerCodigos = datos\r\n            if(filtro == 1) me.ArregloVerCodigos = datos.filter(x => x.venta_estado == 1 && x.estado_liquidacion == 0)\r\n            if(filtro == 2) me.ArregloVerCodigos = datos.filter(x => x.venta_estado == 2 && x.estado_liquidacion == 0)\r\n            if(filtro == 3) me.ArregloVerCodigos = datos.filter(x => x.estado_liquidacion == 2)\r\n          }else{\r\n            me.ArregloVerCodigos = res.data\r\n          }\r\n          me.popupDetalleVerificacion = false;\r\n          me.popupVerCodigos = true;\r\n          if(res.data.message){\r\n              me.$vs.notify({\r\n              text: res.data.message,\r\n              color: 'success',\r\n              iconPack: 'feather',\r\n              icon: 'icon-user'\r\n          })\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error + ' error');\r\n            me.$vs.loading.close()\r\n        })\r\n      },\r\n      getAllCodigosXContrato(){\r\n        let me = this;\r\n        me.sumaVentaReal =0\r\n        me.arregloValoresVentaReal = []\r\n        const { idInstitucion ,id_periodo } = me.datosInstitucion\r\n        me.$vs.loading();\r\n        this.$http.get(this.$server_url+'n_verificacion?contrato='+me.pedido.contrato+'&getAllCodigosXContrato=yes&IdVerificacion='+me.pedido.id+'&verificacion_id='+me.pedido.num_verificacion+'&institucion_id='+idInstitucion+'&periodo_id='+id_periodo)\r\n        .then(function (res) {\r\n          me.arrayAllCodigos = res.data\r\n          me.getVentaRealXVerificacion()\r\n          me.getRegalados();\r\n          me.getDetallesVerificacion()\r\n          me.$vs.loading.close();\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error + ' error');\r\n            me.$vs.loading.close()\r\n        })\r\n      },\r\n      getVentaRealXVerificacion(){\r\n        let me = this;\r\n        const { idInstitucion ,id_periodo } = me.datosInstitucion\r\n        //si no hay codigos no hace nada\r\n        if(me.arrayAllCodigos.length == 0){ return }\r\n        me.sumaVentaReal            = 0\r\n        me.arregloValoresVentaReal  = []\r\n        let datos                   = me.arrayAllCodigos.filter(p => p.estado_liquidacion == '0' && p.bc_institucion == idInstitucion && p.estado != '2' && p.contrato == me.pedido.contrato)\r\n        // Itera a través de los elementos del array\r\n        datos.forEach(item => {\r\n          const nombre_libro    = item.nombre_libro;\r\n          const codigo          = item.codigo;\r\n          const precio          = item.precio;\r\n          const libro_id        = item.libro_id;\r\n          const IdVerificacion  = item.IdVerificacion;\r\n          const verificacion_id = item.verificacion_id;\r\n          const libro_idlibro   = item.libro_idlibro;\r\n          // Busca si ya existe un objeto con el mismo libro en groupedData\r\n          const existingGroup = me.arregloValoresVentaReal.find(group => group.nombre_libro === nombre_libro);\r\n          // Si no existe, crea un nuevo objeto y agrégalo a groupedData\r\n          if (!existingGroup) {\r\n            me.arregloValoresVentaReal.push({ nombre_libro, codigo, precio, libro_id, IdVerificacion, verificacion_id, libro_idlibro, cantidad: 1,  });\r\n          } else {\r\n            // Si existe, incrementa la cantidad en el objeto existente\r\n            existingGroup.cantidad++;\r\n          }\r\n        });\r\n        me.arregloValoresVentaReal.map((item) => {\r\n          item.valor = item.precio * item.cantidad\r\n          me.sumaVentaReal += item.valor\r\n        });\r\n        // me.updateValorLiquidacion()\r\n\r\n        // const { idInstitucion ,id_periodo } = me.datosInstitucion\r\n        // this.$http.get(this.$server_url+'n_verificacion?contrato='+me.pedido.contrato+'&getVentaRealXVerificacion=yes&IdVerificacion='+me.pedido.id+'&verificacion_id='+me.pedido.num_verificacion+'&institucion_id='+idInstitucion+'&periodo_id='+id_periodo)\r\n        // .then(function (res) {\r\n        //   me.arregloValoresVentaReal = res.data\r\n        //   me.sumarTotalVentaReal()\r\n        // })\r\n        // .catch(function (error) {\r\n        //     console.log(error + ' error');\r\n        //     me.$vs.loading.close()\r\n        // })\r\n      },\r\n\r\n      // sumarTotalVentaReal(){\r\n      //   let me = this;\r\n      //     if(me.arregloValoresVentaReal.length > 0){\r\n      //       let datos = me.arregloValoresVentaReal.filter(p => p.valor)\r\n      //       let total = datos.reduce((a, b) => a + (b[\"valor\"] || 0), 0);\r\n      //       me.sumaVentaReal = total\r\n      //     }\r\n      // },\r\n      updateValorLiquidacion(){\r\n        let me = this;\r\n        let formData = new FormData();\r\n        formData.append('verificacion_id',    me.pedido.id);\r\n        formData.append('venta_real',         me.sumaVentaReal + me.totalRegalados);\r\n        formData.append('venta_real_regalados',me.totalRegalados)\r\n        this.$http.post(this.$server_url+'updateVentaReal', formData)\r\n        .then(res => {\r\n        })\r\n      },\r\n      //aqui traigo codigos normales y codigos regalados\r\n      getDetallesVerificacion(){\r\n        let me = this;\r\n        me.sumaTotalVALOR             = 0\r\n        me.DetalleVerificacion        = []\r\n        me.arrayCodigosVerificacion   = []\r\n        me.verificacion_id            = me.pedido.id\r\n        const { idInstitucion ,id_periodo } = me.datosInstitucion\r\n        me.title = \"Verificación N. \"+me.pedido.num_verificacion + \" del contrato \"+ me.pedido.contrato\r\n        //AGRUPADO\r\n        let datos                   = me.arrayAllCodigos.filter(p => (p.estado_liquidacion == '0' || p.estado_liquidacion == '2') && (p.bc_institucion == idInstitucion || p.venta_lista_institucion == idInstitucion) )\r\n        me.arrayCodigosVerificacion = datos\r\n        datos.forEach(item => {\r\n          const nombre_libro    = item.nombre_libro;\r\n          const codigo          = item.codigo;\r\n          const precio          = item.precio;\r\n          const libro_id        = item.libro_id;\r\n          const IdVerificacion  = item.IdVerificacion;\r\n          const verificacion_id = item.verificacion_id;\r\n          const libro_idlibro   = item.libro_idlibro;\r\n          // Busca si ya existe un objeto con el mismo libro en groupedData\r\n          const existingGroup = me.DetalleVerificacion.find(group => group.nombre_libro === nombre_libro);\r\n          // Si no existe, crea un nuevo objeto y agrégalo a groupedData\r\n          if (!existingGroup) {\r\n            me.DetalleVerificacion.push({ nombre_libro, codigo, precio, libro_id, IdVerificacion,verificacion_id, libro_idlibro ,cantidad: 1,  });\r\n          } else {\r\n            // Si existe, incrementa la cantidad en el objeto existente\r\n            existingGroup.cantidad++;\r\n          }\r\n        });\r\n        me.DetalleVerificacion.map((item) => {\r\n          item.valor        = item.precio * item.cantidad\r\n          me.sumaTotalVALOR += item.valor\r\n        });\r\n        me.updateValorLiquidacion()\r\n        me.popupDetalleVerificacion = true\r\n        // this.$http.get(this.$server_url+'n_verificacion?contrato='+me.pedido.contrato+'&detalles=yes&IdVerificacion='+me.pedido.id+'&verificacion_id='+me.pedido.num_verificacion+'&institucion_id='+idInstitucion+'&periodo_id='+id_periodo)\r\n        // .then(function (res) {\r\n        //     me.DetalleVerificacion = res.data\r\n        //     me.sumarTotalVenta()\r\n        //     me.popupDetalleVerificacion = true\r\n        //     me.$vs.loading.close()\r\n        //     if(res.data.message){\r\n        //         me.$vs.notify({\r\n        //         text: res.data.message,\r\n        //         color: 'success',\r\n        //         iconPack: 'feather',\r\n        //         icon: 'icon-user'\r\n        //       })\r\n        //     }\r\n        // })\r\n        // .catch(function (error) {\r\n        //     console.log(error + ' error');\r\n        //     me.$vs.loading.close()\r\n        // })\r\n      },\r\n      // sumarTotalVenta(){\r\n      //   let me = this;\r\n      //     if(me.DetalleVerificacion.length >0){\r\n      //       let datos = me.DetalleVerificacion.filter(p => p.valor)\r\n      //       let total = datos.reduce((a, b) => a + (b[\"valor\"] || 0), 0);\r\n      //       me.sumaTotalVALOR = total\r\n      //     }\r\n      // },\r\n      getRegalados(){\r\n        let me = this\r\n        me.totalRegalados = 0\r\n        me.totalCobroVenta = 0\r\n        me.arregloRegalados = []\r\n        const { idInstitucion ,id_periodo } = me.datosInstitucion\r\n         //AGRUPADO\r\n         let datos                   = me.arrayAllCodigos.filter(p => (p.estado_liquidacion == '2') && (p.bc_institucion == idInstitucion || p.venta_lista_institucion == idInstitucion) )\r\n        datos.forEach(item => {\r\n          const nombre_libro    = item.nombre_libro;\r\n          const codigo          = item.codigo;\r\n          const precio          = item.precio;\r\n          const libro_id        = item.libro_id;\r\n          const IdVerificacion  = item.IdVerificacion;\r\n          const verificacion_id = item.verificacion_id;\r\n          const libro_idlibro   = item.libro_idlibro;\r\n          // Busca si ya existe un objeto con el mismo libro en groupedData\r\n          const existingGroup = me.arregloRegalados.find(group => group.nombre_libro === nombre_libro);\r\n          // Si no existe, crea un nuevo objeto y agrégalo a groupedData\r\n          if (!existingGroup) {\r\n            me.arregloRegalados.push({ nombre_libro, codigo, precio, libro_id, IdVerificacion,verificacion_id, libro_idlibro, cantidad: 1,  });\r\n          } else {\r\n            // Si existe, incrementa la cantidad en el objeto existente\r\n            existingGroup.cantidad++;\r\n          }\r\n        });\r\n        me.arregloRegalados.map((item) => {\r\n          item.valor        = item.precio * item.cantidad\r\n          me.totalRegalados += item.valor\r\n        });\r\n        if(me.arregloRegalados.length > 0){\r\n            let prevalor        = 0\r\n            //COBRO VENTA DIRECTA=>0 = NADA; 1 = 100%; 2 =porcentaje de la escuela;\r\n            //tipoPago => 0 =  NADA; 1 = Cancelar Total; 2 = Descontar; 3 = Regalado = 4 personalizado\r\n            if(me.settipoPago == 1 || me.settipoPago == 3) { me.totalCobroVenta = 0 }\r\n            if(me.settipoPago == 2 || me.setPersonalizado == 1) {\r\n              prevalor = me.sendPedido.descuento\r\n              //si el cobro de venta directa esta activado\r\n              if(me.setpermiso_cobro_venta_directa == 1){\r\n                me.totalCobroVenta  = ( me.totalRegalados - ( me.totalRegalados * prevalor ) / 100)\r\n              }else{\r\n                me.totalCobroVenta = 0\r\n              }\r\n            }\r\n          }\r\n\r\n        // this.$http.get(this.$server_url+'getRegalados/'+me.datosInstitucion.idInstitucion+'/'+me.datosInstitucion.id_periodo+'/'+me.pedido.num_verificacion+'/'+me.pedido.id)\r\n        //   .then(function (res) {\r\n        //     me.arregloRegalados = res.data\r\n        //     if(me.arregloRegalados.length > 0){\r\n        //         let datos           = me.arregloRegalados.filter(p => p.valor)\r\n        //         let total           = datos.reduce((a, b) => a + (b[\"valor\"] || 0), 0);\r\n        //         me.totalRegalados   = total\r\n        //         if(me.totalRegalados > 0){\r\n        //           let prevalor        = 0\r\n        //           //COBRO VENTA DIRECTA=>0 = NADA; 1 = 100%; 2 =porcentaje de la escuela;\r\n        //           //tipoPago => 0 =  NADA; 1 = Cancelar Total; 2 = Descontar; 3 = Regalado = 4 personalizado\r\n        //           if(me.settipoPago == 1 || me.settipoPago == 3) { me.totalCobroVenta = 0 }\r\n        //           if(me.settipoPago == 2 || me.setPersonalizado == 1) {\r\n        //             prevalor = me.sendPedido.descuento\r\n        //             //si el cobro de venta directa esta activado\r\n        //             if(me.setpermiso_cobro_venta_directa == 1){\r\n        //               me.totalCobroVenta  = ( me.totalRegalados - ( me.totalRegalados * prevalor ) / 100)\r\n        //             }else{\r\n        //               me.totalCobroVenta = 0\r\n        //             }\r\n        //           }\r\n        //         }\r\n        //     }\r\n        //     me.sumarTotalVentaReal()\r\n        //   })\r\n        //   .catch(function (error) {\r\n        //       console.log(error + ' error');\r\n        //   })\r\n      },\r\n\r\n      recharge(e){\r\n          let me = this\r\n          me.desdeDetalle = 0\r\n          //menu modal Verificacion libros => para ver los codigos de libro seleccionado\r\n          if(e.tipo == 2){ me.VerCodigos(e.data,e.filtro)\r\n              return\r\n          }\r\n          //libros regalados\r\n          if(e.tipo == 3){\r\n              me.verCodigosRegalados(e.data)\r\n              return\r\n          }\r\n          //actualizar cobro venta directa\r\n          if(e.tipo == 4){\r\n            me.getAllCodigosXContrato()\r\n            me.setcobro_venta_directa     = e.data.sendValor\r\n            me.settipoPago                = e.data.sendTipo\r\n            me.settotalDescuento          = e.data.sendtotalDescuento\r\n            me.getInformacionLiquidacion()\r\n            return\r\n          }\r\n          //actualizar codigos regalados\r\n          if(e.tipo == 5){\r\n            me.getAllCodigosXContrato()\r\n            me.updateValorLiquidacion()\r\n            return\r\n          }\r\n          //actualizar valor personalizado\r\n          if(e.tipo == 6){\r\n            me.getAllCodigosXContrato()\r\n            me.setPersonalizado           = e.data.sendValor\r\n            me.settotalDescuento          = e.data.sendtotalDescuento\r\n            me.setcampoPersonalizado      = e.data.sendcampoPersonalizado\r\n            me.getInformacionLiquidacion()\r\n          }\r\n          //actualizar configuracion reporte\r\n          if(e.tipo == 7){\r\n            me.getAllCodigosXContrato()\r\n            me.setpermiso_anticipo_deuda      = e.sendpermiso_anticipo_deuda\r\n            me.setpermiso_convenio            = e.sendpermiso_convenio\r\n            me.setpermiso_cobro_venta_directa = e.sendpermiso_cobro_venta_directa\r\n            me.getInformacionLiquidacion()\r\n          }\r\n          //recharge only convenios\r\n          me.popupSolicitud         = false\r\n          me.popupSolicitudFactura  = false\r\n      },\r\n      openDocument(tr){\r\n        let me = this;\r\n        if(me.documento.substr(-3) == 'pdf'){\r\n            let ruta = me.$data_url+'archivos/verificaciones/'+me.tipoDocumento+'/'+me.documento\r\n            window.open(ruta,'_blank')\r\n            return\r\n        }\r\n        me.popupDocumento = true;\r\n      },\r\n      //METODOS PARA EXPORTAR A EXCEL\r\n      exportToExcel() {\r\n        let headerTitle =\r\n        [\r\n          'Código',\r\n          'Verif1',\r\n          'Verif2',\r\n          'Verif3',\r\n          'Verif4',\r\n          'Verif5',\r\n          'Verif6',\r\n          'Verif7',\r\n          'Verif8',\r\n          'Verif9',\r\n          'Verif10',\r\n          'Total',\r\n        ];\r\n        let headerVal = [\r\n          'codigo',\r\n          'verif1',\r\n          'verif2',\r\n          'verif3',\r\n          'verif4',\r\n          'verif5',\r\n          'verif6',\r\n          'verif7',\r\n          'verif8',\r\n          'verif9',\r\n          'verif10',\r\n          'total',\r\n        ];\r\n        import('@/vendor/Export2Excel').then(excel => {\r\n          const data = this.formatJson(headerVal, this.desgloseContrato)\r\n          excel.export_json_to_excel({\r\n            header: headerTitle,\r\n            data,\r\n            filename: this.contrato,\r\n            autoWidth: this.cellAutoWidth,\r\n            bookType: this.selectedFormat\r\n          })\r\n          this.clearFields()\r\n        })\r\n      },\r\n      exportVerificacionPdf(tipo){\r\n          let me = this;\r\n          me.popupDetalleVerificacion                 = false\r\n          me.popupCarga                               = true\r\n          //reporte pdf o excel\r\n          if(tipo == 1) {  me.mostrarReportePdf       = true }\r\n          //reporte tipo de venta\r\n          if(tipo == 2) { me.mostrarReporteTipoVenta  = true}\r\n\r\n      },\r\n      exportToExcelDetalle(tipoReporte){\r\n        let headerTitle =\r\n        [\r\n          'Libro',\r\n          'Código liquidación',\r\n          'Cantidad',\r\n          'Precio',\r\n          'Valor',\r\n        ];\r\n        let headerVal = [\r\n          'nombre_libro',\r\n          'codigo',\r\n          'cantidad',\r\n          'precio',\r\n          'valor',\r\n        ];\r\n        import('@/vendor/Export2Excel').then(excel => {\r\n          let datos = []\r\n          if(tipoReporte == 0) { datos = this.DetalleVerificacion }\r\n          if(tipoReporte == 1) { datos = this.arregloRegalados }\r\n          const data = this.formatJson(headerVal, datos)\r\n          excel.export_json_to_excel({\r\n            header: headerTitle,\r\n            data,\r\n            filename: tipoReporte == 1 ? this.contrato + '_Codigos_Docentes' : this.contrato,\r\n            autoWidth: this.cellAutoWidth,\r\n            bookType: this.selectedFormat\r\n          })\r\n          this.clearFields()\r\n        })\r\n      },\r\n      formatJson(filterVal, jsonData) {\r\n        return jsonData.map(v => filterVal.map(j => {\r\n            return v[j]\r\n        }))\r\n      },\r\n      //limpiar campos para exportar de nuevo\r\n      clearFields() {\r\n          this.fileName = ''\r\n          this.cellAutoWidth = true\r\n          this.selectedFormat = 'xls'\r\n      },\r\n      //FIN METODOS PARA EXPORTAR A EXCEL\r\n      openObservacion(){\r\n        let me = this;\r\n          this.$http.get(this.$server_url+'getVerificacionXId/'+me.pedido.id)\r\n            .then(function (res) {\r\n              let datos = res.data\r\n              if(datos.length > 0){\r\n                me.observacion = datos[0].observacion\r\n              }\r\n              me.popupObservacion = true\r\n          })\r\n          .catch(function (error) {\r\n              console.log(error + ' error');\r\n          })\r\n      },\r\n      saveDatosVerificacion(){\r\n        let me = this;\r\n        if(me.observacion == \"\" || me.observacion == null || me.observacion == undefined){\r\n        }else{\r\n          if(me.observacion.length > 300){\r\n            me.$vs.notify({ text: 'Máximo 300 caracteres.', color: 'warning', iconPack: 'feather', icon: 'icon-alert-triangle',time:4000 })\r\n            return\r\n          }\r\n        }\r\n        let formData = new FormData();\r\n        formData.append('id',         me.pedido.id)\r\n        formData.append('observacion',me.observacion);\r\n        me.$vs.loading()\r\n        this.$http.post(this.$server_url+'saveDatosVerificacion', formData)\r\n        .then(res => {\r\n        me.$vs.loading.close()\r\n        me.$vs.notify({\r\n          text:res.data.message,\r\n          color:'success',\r\n          iconPack: 'feather',\r\n          icon:'icon-check'})\r\n        })\r\n        me.popupObservacion = false;\r\n      }\r\n    },\r\n}\r\n",{"version":3,"sources":["historicoCodigosNuevo.vue"],"names":[],"mappings":";AAofile":"historicoCodigosNuevo.vue","sourceRoot":"src/views/temporadas","sourcesContent":["<template>\r\n    <div>\r\n        <vx-card\r\n        title=\"Información de Verificaciones\"\r\n        title-color=\"primary\"\r\n        :subtitle=\"nombreInstitucion\">\r\n            <div style=\"display:flex;margin-left:20px;\" v-if=\"desdePedido == 0\">\r\n              <div>\r\n                  <vs-input icon=\"search\" @keyup.enter=\"getInformacionLiquidacion()\" placeholder=\"Buscar Contrato\" v-model =\"contrato\"/>\r\n              </div>\r\n              <div>\r\n                  <vs-button radius color=\"primary\" @click=\"getInformacionLiquidacion()\" type=\"border\" style=\"margin-left:10px;\" icon=\"search\"></vs-button>\r\n              </div>\r\n            </div>\r\n            <!--VENTA REAL-->\r\n            <!-- <VentaRealVue v-if=\"contrato\" :contrato=\"contrato\"/> -->\r\n            <!--FIN VENTA REAL-->\r\n            <p class=\"text-2xl\">Detalles</p>\r\n            <vs-divider></vs-divider>\r\n            <div>\r\n                <br>\r\n                <vs-chip transparent color=\"primary\" class=\"ml-2\">\r\n                    Cantidad Verificaciones:  <span style=\"font-weight: bold;\"> {{  InformacionLiquidacion.length }}</span>\r\n                </vs-chip>\r\n                <br/>\r\n                <vs-table max-items=\"10\" stripe search pagination :data=\"InformacionLiquidacion\" style=\"margin-top:-40px\">\r\n                    <template slot=\"thead\">\r\n                        <vs-th>Contratos</vs-th>\r\n                        <vs-th>Verificación</vs-th>\r\n                        <vs-th>Fechas</vs-th>\r\n                        <vs-th>Documentos</vs-th>\r\n                        <vs-th>Accion</vs-th>\r\n                    </template>\r\n                    <template slot-scope=\"{data}\">\r\n                        <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                            <vs-td>\r\n                              #{{ tr.id }}\r\n                              <br>                              {{data[indextr].contrato}}<br>\r\n                            </vs-td>\r\n                            <vs-td>\r\n                              <b>Núm. verificación:</b>\r\n                              <p>{{data[indextr].num_verificacion}}</p><br>\r\n                              <b>Estado:</b><br>\r\n                              <vs-chip v-if=\"tr.estado == '1'\" color=\"primary\">\r\n                                Abierto\r\n                              </vs-chip>\r\n                              <vs-chip v-else color=\"warning\" class=\"mt-2\">\r\n                                  Cerrada\r\n                              </vs-chip>\r\n                            </vs-td>\r\n                            <vs-td>\r\n                              <b>Fecha inicio:</b>\r\n                              <p>{{tr.fecha_inicio}}</p><br>\r\n                              <b>Fecha fin:</b>\r\n                              <p>{{tr.fecha_fin}}</p>\r\n                            </vs-td>\r\n                            <vs-td>\r\n                                <p v-if=\"tr.file_evidencia\" class=\"imagen\" @click=\"tipoDocumento ='evidencia';documento=tr.file_evidencia;openDocument(tr)\">\r\n                                    <b> Evidencia verificación\r\n                                        <!--PDF-->\r\n                                        <ion-icon v-if=\"tr.file_evidencia.substr(-3) == 'pdf'\" style=\"font-size:20px;color:green;position:relative;top:5px;\" name=\"document-outline\"></ion-icon>\r\n                                        <!--IMAGE-->\r\n                                        <ion-icon v-else style=\"font-size:20px;color:green;position:relative;top:5px;\" name=\"camera-outline\"></ion-icon>\r\n                                    </b>\r\n                                </p>\r\n                                <p v-if=\"tr.file_factura\" class=\"imagen\" @click=\"tipoDocumento ='factura';documento=tr.file_factura;openDocument(tr)\">\r\n                                    <b> Factura\r\n                                        <!--PDF-->\r\n                                        <ion-icon v-if=\"tr.file_factura.substr(-3) == 'pdf'\" style=\"font-size:20px;color:green;position:relative;top:5px;\" name=\"document-outline\"></ion-icon>\r\n                                        <!--IMAGE-->\r\n                                        <ion-icon v-else style=\"font-size:20px;color:green;position:relative;top:5px;\" name=\"camera-outline\"></ion-icon>\r\n                                    </b>\r\n                                </p>\r\n                            </vs-td>\r\n                            <vs-td>\r\n                              <vs-dropdown vs-custom-content vs-trigger-click>\r\n                                <vs-button class=\"a-icons\" href.prevent icon=\"more_vert\" type=\"border\" v-if=\"tr.estado == 0\"></vs-button>\r\n                                <vs-dropdown-menu style=\"width: 320px;\" class=\"cursor\">\r\n                                    <!--VER DETALLE-->\r\n                                    <vs-dropdown-item>\r\n                                      <vs-button class=\"w-full\" color=\"primary\" @click=\"startDetalle(tr)\" type=\"line\" >Ver detalle </vs-button>\r\n                                    </vs-dropdown-item>\r\n                                    <vs-dropdown-item v-if=\"desdePedido == 1 && (userFacturador || userRoot)\">\r\n                                      <!--estado => 0 = cerrada; 1 = abierta;-->\r\n                                      <!--FACTURADOR SUBE EVIDENCIA DE VERIFICACION-->\r\n                                      <vs-button  color=\"success\" type=\"line\" class=\"w-full\" @click=\"pedido = tr;popupSolicitud = true;\">&nbsp;&nbsp;&nbsp;Subir evidencia &nbsp;&nbsp;&nbsp;</vs-button>\r\n                                    </vs-dropdown-item>\r\n                                    <!--ASESOR SUBE FACTURA-->\r\n                                    <vs-dropdown-item v-if=\"(userAsesor || userRoot)\">\r\n                                      <vs-button color=\"danger\" type=\"line\"   class=\"w-full\" @click=\"pedido = tr;popupSolicitudFactura = true;\">Subir Factura</vs-button>\r\n                                    </vs-dropdown-item>\r\n                                    <!--OBSERVACION-->\r\n                                    <vs-dropdown-item v-if=\"desdePedido == 1 && (userFacturador || userRoot || userAsesor) \">\r\n                                      <vs-button color=\"warning\" type=\"line\"   class=\"w-full\" @click=\"pedido = tr;openObservacion()\" >Observación</vs-button>\r\n                                    </vs-dropdown-item>\r\n                                </vs-dropdown-menu>\r\n                              </vs-dropdown>\r\n                            </vs-td>\r\n                        </vs-tr>\r\n                    </template>\r\n                </vs-table>\r\n            </div>\r\n            <!--DETALLE CONTRATO-->\r\n            <!-- <p class=\"text-2xl mt-5\">Detalle del contrato <b v-if=\"desdePedido == 1\">{{ contratoPedido }}</b></p>\r\n            <vs-divider></vs-divider>\r\n            <vs-table max-items=\"10\" id=\"tbl_exporttable_to_xls\" search stripe pagination :data=\"desgloseContrato\">\r\n                <template slot=\"header\">\r\n                    <small>Cantidad :{{ desgloseContrato.length }}</small>\r\n                    <vs-button class=\"ml-3\" @click=\"exportToExcel()\" color=\"success\" type=\"border\">Exportar</vs-button>\r\n                </template>\r\n                <template slot=\"thead\">\r\n                    <vs-th>Código</vs-th>\r\n                    <vs-th>Verif1.</vs-th>\r\n                    <vs-th>Verif2.</vs-th>\r\n                    <vs-th>Verif3.</vs-th>\r\n                    <vs-th>Verif4.</vs-th>\r\n                    <vs-th>Verif5.</vs-th>\r\n                    <vs-th>Verif6.</vs-th>\r\n                    <vs-th>Verif7.</vs-th>\r\n                    <vs-th>Verif8.</vs-th>\r\n                    <vs-th>Verif9.</vs-th>\r\n                    <vs-th>Verif10.</vs-th>\r\n                    <vs-th>Total</vs-th>\r\n                </template>\r\n                <template slot-scope=\"{data}\">\r\n                    <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                        <vs-td width=\"10%\">\r\n                            {{tr.codigo}}\r\n                        </vs-td>\r\n                        <vs-td width=\"5%\">\r\n                            <small style=\"cursor:pointer;\" class=\"verif\" @click=\"desdeDetalle=1;verBooks(tr,1)\">{{ tr.verif1 }}</small>\r\n                        </vs-td>\r\n                        <vs-td width=\"5%\">\r\n                            <small style=\"cursor:pointer;\" class=\"verif\" @click=\"desdeDetalle=1;verBooks(tr,2)\">{{ tr.verif2 }}</small>\r\n                        </vs-td>\r\n                        <vs-td width=\"5%\">\r\n                            <small style=\"cursor:pointer;\" class=\"verif\" @click=\"desdeDetalle=1;verBooks(tr,3)\">{{ tr.verif3 }}</small>\r\n                        </vs-td>\r\n                        <vs-td width=\"5%\">\r\n                            <small style=\"cursor:pointer;\" class=\"verif\" @click=\"desdeDetalle=1;verBooks(tr,4)\">{{ tr.verif4 }}</small>\r\n                        </vs-td>\r\n                        <vs-td width=\"5%\">\r\n                            <small style=\"cursor:pointer;\" class=\"verif\" @click=\"desdeDetalle=1;verBooks(tr,5)\">{{ tr.verif5 }}</small>\r\n                        </vs-td>\r\n                        <vs-td width=\"5%\">\r\n                            <small style=\"cursor:pointer;\" class=\"verif\" @click=\"desdeDetalle=1;verBooks(tr,6)\">{{ tr.verif6 }}</small>\r\n                        </vs-td>\r\n                        <vs-td width=\"5%\">\r\n                            <small style=\"cursor:pointer;\" class=\"verif\" @click=\"desdeDetalle=1;verBooks(tr,7)\">{{ tr.verif7 }}</small>\r\n                        </vs-td>\r\n                        <vs-td width=\"5%\">\r\n                            <small style=\"cursor:pointer;\" class=\"verif\" @click=\"desdeDetalle=1;verBooks(tr,8)\">{{ tr.verif8 }}</small>\r\n                        </vs-td>\r\n                        <vs-td width=\"5%\">\r\n                            <small style=\"cursor:pointer;\" class=\"verif\" @click=\"desdeDetalle=1;verBooks(tr,9)\">{{ tr.verif9 }}</small>\r\n                        </vs-td>\r\n                        <vs-td width=\"5%\">\r\n                            <small style=\"cursor:pointer;\" class=\"verif\" @click=\"desdeDetalle=1;verBooks(tr,10)\">{{ tr.verif10 }}</small>\r\n                        </vs-td>\r\n                        <vs-td width=\"10%\">\r\n                            {{ tr.total }}\r\n                        </vs-td>\r\n                    </vs-tr>\r\n                </template>\r\n            </vs-table> -->\r\n        </vx-card>\r\n        <!--MODALES-->\r\n        <!--MODAL PARA DETALLES DE LA VERIFICACION -->\r\n        <vs-popup :title=\"title\" fullscreen :active.sync=\"popupDetalleVerificacion\" @close=\"filtroMenu = 100;\">\r\n            <vs-chip style=\"font-size:12px;\">\r\n              Cantidad Libros: {{sumaTotal}}\r\n            </vs-chip>\r\n            <vs-chip style=\"font-size:12px;\">\r\n              Cantidad Regalados: {{ sumaTotalRegalados }}\r\n            </vs-chip>\r\n            <br><br>\r\n            <!--MENU-->\r\n            <nav class=\"breadcrumbs mt-3\">\r\n              <span class=\"breadcrumbs__item btnMenu activeBtn menuVerificacion0 cursor-pointer\"           @click=\"filtroMenu = 0;estadoMenu();\">Verificación Libros</span>\r\n              <span v-if=\"!userAsesor\" class=\"breadcrumbs__item btnMenu menuVerificacion1 cursor-pointer\"  @click=\"filtroMenu = 1;estadoMenu();\">Códigos Docentes</span>\r\n              <span v-if=\"userAsesor\"  class=\"breadcrumbs__item btnMenu menuVerificacion2 cursor-pointer\"  @click=\"filtroMenu = 2;estadoMenu();\">Valores</span>\r\n              <span v-else             class=\"breadcrumbs__item btnMenu menuVerificacion2 cursor-pointer\"  @click=\"filtroMenu = 2;estadoMenu();\">Configuración General</span>\r\n              <!-- <span                    class=\"breadcrumbs__item btnMenu menuVerificacion4 cursor-pointer\"  @click=\"filtroMenu = 4;estadoMenu();\">Convenios</span> -->\r\n              <span                    class=\"breadcrumbs__item btnMenu menuVerificacion3 cursor-pointer\"  @click=\"filtroMenu = 3;estadoMenu();\">Porcentajes Beneficiarios</span>\r\n              <span                    class=\"breadcrumbs__item btnMenu menuVerificacion4 cursor-pointer\"  @click=\"filtroMenu = 4;estadoMenu();\">Reportes</span>\r\n              <span v-if=\"!userAsesor\" class=\"breadcrumbs__item btnMenu menuVerificacion5 cursor-pointer\"  @click=\"filtroMenu = 5;estadoMenu();\">Liquidados Devueltos</span>\r\n            </nav>\r\n            <!--MENU-->\r\n            <!--COMPONENTES-->\r\n            <div>\r\n              <div v-if=\"filtroMenu == 0\">\r\n                <TableVerificadosVue\r\n                :VerificacionSelect=\"pedido\"\r\n                :setcobro_venta_directa=\"setcobro_venta_directa\"\r\n                :settipoPago=\"settipoPago\"\r\n                :settotalDescuento=\"settotalDescuento\"\r\n                :setcampoPersonalizado=\"setcampoPersonalizado\"\r\n                :desdePedido=\"desdePedido\"\r\n                :sendPedido=\"sendPedido\"\r\n                verTipo=\"2\"\r\n                :arregloVerificados=\"DetalleVerificacion\"\r\n                :datosInstitucion=\"datosInstitucion\"\r\n                :arrayCodigosVerificacion=\"arrayCodigosVerificacion\"\r\n                @recharge=\"recharge\"/>\r\n              </div>\r\n              <div v-if=\"filtroMenu == 1\">\r\n                <ScreenRegaladosVue\r\n                :userFacturador=\"userFacturador\"\r\n                :userRoot=\"userRoot\"\r\n                :userAsesor=\"userAsesor\"\r\n                :usuario=\"usuario\"\r\n                :datosInstitucion=\"datosInstitucion\"\r\n                :VerificacionSelect=\"pedido\"\r\n                :arregloRegalados=\"arregloRegalados\"\r\n                :desdePedido=\"desdePedido\"\r\n                :setcobro_venta_directa=\"setcobro_venta_directa\"\r\n                :setcampoPersonalizado=\"setcampoPersonalizado\"\r\n                :sendPedido=\"sendPedido\"\r\n                :settipoPago=\"settipoPago\"\r\n                :setPersonalizado=\"setPersonalizado\"\r\n                :contrato=\"contrato\"\r\n                :DetalleVerificacion=\"DetalleVerificacion\"\r\n                @recharge=\"recharge\"\r\n                />\r\n              </div>\r\n              <div v-if=\"filtroMenu == 2\">\r\n                <ScreenConfiguracionVerificacionVue\r\n                :VerificacionSelect=\"pedido\"\r\n                :setpermiso_anticipo_deuda=\"setpermiso_anticipo_deuda\"\r\n                :setpermiso_convenio=\"setpermiso_convenio\"\r\n                :setpermiso_cobro_venta_directa=\"setpermiso_cobro_venta_directa\"\r\n\r\n                :sumaTotalVALOR=\"sumaTotalVALOR\"\r\n                :sumaTotalValorRegalados=\"totalRegalados\"\r\n                :DetalleVerificacion=\"DetalleVerificacion\"\r\n                :id_periodo=\"sendPedido.id_periodo\"\r\n                :tipoReporte=\"tipoReporte\"\r\n                :totalCobroVenta=\"totalCobroVenta\"\r\n                :sendPedido=\"sendPedido\"\r\n                :userAsesor=\"userAsesor\"\r\n                :datosInstitucion=\"datosInstitucion\"\r\n                @recharge=\"recharge\"\r\n                 />\r\n              </div>\r\n              <!-- <div v-if=\"filtroMenu == 4\">\r\n                <ScreenConvenioVue :datosInstitucion=\"datosInstitucion\" @recharge=\"recharge\"/>\r\n              </div> -->\r\n              <div v-if=\"filtroMenu == 3\">\r\n                <BeneficiariosPorcentajeVue\r\n                :pedido=\"sendPedido\"\r\n                :ventaBruta=\"sendPedido.total_venta\"\r\n                :comision=\"sendPedido.descuento\"\r\n                :id_pedido=\"sendPedido.id_pedido\"\r\n                :contrato_generado=\"contrato\"\r\n                :desdeVerificacion=\"1\"\r\n                :VerificacionSelect=\"pedido\"\r\n                 />\r\n                <registrar_beneficiariosVue\r\n                :pedido=\"sendPedido\"\r\n                :desdeVerificacion=\"1\"\r\n                :VerificacionSelect=\"pedido\"\r\n                />\r\n              </div>\r\n              <div v-if=\"filtroMenu == 4\">\r\n                <div>\r\n                  <vs-button class=\"m-2\" @click=\"exportToExcelDetalle(0)\" color=\"success\" type=\"border\">Códigos Libros</vs-button>\r\n                  <vs-button class=\"m-2\" v-if=\"desdePedido == '1'\" @click=\"exportVerificacionPdf(1);tipoReporte=0;\" color=\"dark\" type=\"border\">Reporte pdf</vs-button>\r\n                  <vs-button class=\"m-2\" v-if=\"desdePedido == '1'\" @click=\"exportVerificacionPdf(1);tipoReporte=1;\" color=\"warning\" type=\"border\">Reporte excel</vs-button>\r\n                  <vs-button class=\"m-2\" v-if=\"desdePedido == '1'\" @click=\"exportVerificacionPdf(2);tipoVenta=1;\" color=\"#CE2A7F\" type=\"border\">Reporte Venta Directa</vs-button>\r\n                  <vs-button class=\"m-2\" v-if=\"desdePedido == '1'\" @click=\"exportVerificacionPdf(2);tipoVenta=2;\" color=\"#AECF3C\" type=\"border\">Reporte Venta Lista</vs-button>\r\n                  <vs-button class=\"m-2\" v-if=\"desdePedido == '1'\" @click=\"exportToExcelDetalle(1);\" color=\"#503CE5\" type=\"border\">Códigos hijos docentes</vs-button>\r\n                </div>\r\n              </div>\r\n              <div v-if=\"filtroMenu == 5\">\r\n                <LiquidadosDevueltosVue :sendVerificacion=\"pedido\" :contrato=\"contrato\"/>\r\n              </div>\r\n            </div>\r\n            <!--FIN COMPONENTES-->\r\n        </vs-popup>\r\n        <!--MODAL PARA VER LOS CODIGOS DE LA VERIFICACION -->\r\n        <vs-popup\r\n          :title=\"title2\"  :active.sync=\"popupVerCodigos\" @close=\"abrirModal()\">\r\n          <!-- <vs-button color=\"success\" icon=\"arrow_back\" @click=\"popupVerCodigos = false; popupDetalleVerificacion = true;\" type=\"gradient\"></vs-button> -->\r\n            <vs-list >\r\n                <vs-list-header  :title=\"ArregloVerCodigos.length +' Códigos'\"></vs-list-header>\r\n                <vs-list-item :key=\"indextr\" v-for=\"(tr, indextr) in ArregloVerCodigos\" :title=\"tr.codigo\">\r\n                </vs-list-item>\r\n            </vs-list>\r\n        </vs-popup>\r\n        <!--POPUP PARA CAMBIAR DE NUMERO DE VERIFICACION-->\r\n         <vs-popup\r\n            style=\"color:rgb(255,255,255)\"\r\n            background-color=\"rgba(255,255,255,.6)\"\r\n            title=\"background\" :active.sync=\"popupChangeLiquidacion\">\r\n        </vs-popup>\r\n        <!--MODAL SUBIR SOLICITUD DE OBSEQUIOS-->\r\n        <vs-popup classContent=\"popup-example\" title=\"Subir evidencia\" :active.sync=\"popupSolicitud\">\r\n            <p class=\"font-bold text-warning text-2xl text-center\">Evidencia de verificación</p>\r\n            <vs-divider>SUBA ARCHIVO DE LA EVIDENCIA DE VERIFICACIÓN</vs-divider>\r\n            <UploadVerificacionVue v-if=\"popupSolicitud\" :pedido=\"pedido\" titlebtn=\"Subir evidencia\" tipoDocumento='evidencia' campo_file=\"file_evidencia\" campo_fecha=\"fecha_subir_evidencia\" :imgOld=\"pedido.file_evidencia\" @recharge=\"recharge\"/>\r\n        </vs-popup>\r\n        <vs-popup classContent=\"popup-example\" title=\"Subir Factura\" :active.sync=\"popupSolicitudFactura\">\r\n          <p class=\"font-bold text-warning text-2xl text-center\">Suba la factura</p>\r\n          <vs-divider>SUBA ARCHIVO LA FACTURA</vs-divider>\r\n          <UploadVerificacionVue v-if=\"popupSolicitudFactura\" :pedido=\"pedido\" titlebtn=\"Subir Factura\" tipoDocumento='factura' campo_file=\"file_factura\" campo_fecha=\"fecha_subir_factura\" :imgOld=\"pedido.file_factura\" @recharge=\"recharge\"/>\r\n        </vs-popup>\r\n        <!--MODAL PARA OBSERVACION VERIFICACION-->\r\n        <vs-popup classContent=\"popup-example\" title=\"Mostrar observación\" :active.sync=\"popupObservacion\">\r\n          <div class=\"vx-row mb-2\">\r\n            <div class=\"vx-col w-full\">\r\n              <vs-textarea :disabled=\"disableAsesor\" counter=\"300\" style=\"width:100%;\" height=\"200px\"  label=\"Observación\" :counter-danger.sync=\"counterDanger\" v-model=\"observacion\" />\r\n            </div>\r\n          </div>\r\n          <div class=\"flex justify-center\">\r\n            <vs-button color=\"success\" @click=\"saveDatosVerificacion()\" class=\"mt-2\" type=\"gradient\">Guardar comentario</vs-button>\r\n          </div>\r\n        </vs-popup>\r\n        <!--MODAL PARA MOSTRAR DOCUMENTO-->\r\n          <vs-popup class=\"holamundo\" :title=\"'Documento: '+tipoDocumento\" fullscreen :active.sync=\"popupDocumento\">\r\n            <div class=\"flex\" style=\"justify-content: center;\" v-if=\"popupDocumento\">\r\n                <image-zoom\r\n                    :regular=\"$data_url+'archivos/verificaciones/'+tipoDocumento+'/'+documento\"\r\n                    :zoom-amount=\"3\"\r\n                    :click-zoom=\"true\"\r\n                    click-message=\"De click para aumentar\"\r\n                    img-class=\"img-fluid\"\r\n                    >\r\n                </image-zoom>\r\n            </div>\r\n        </vs-popup>\r\n        <!--DOWNLOAD DOCUMENTOS-->\r\n        <div v-if=\"mostrarReportePdf\">\r\n            <exportLiquidacionVue\r\n            style=\"display:none;\"\r\n             :VerificacionSelect=\"pedido\"\r\n             :sumaTotalVALOR=\"sumaTotalVALOR\"\r\n             :sumaTotalValorRegalados=\"totalRegalados\"\r\n             :DetalleVerificacion=\"DetalleVerificacion\"\r\n             :tipoReporte=\"tipoReporte\"\r\n             :totalCobroVenta=\"totalCobroVenta\"\r\n             :sendPedido=\"sendPedido\"\r\n             :datosInstitucion=\"datosInstitucion\"\r\n              @change=\"changeHandle\" />\r\n        </div>\r\n        <div v-if=\"mostrarReporteTipoVenta\">\r\n          <exportTipoVentaVue\r\n          style=\"display:none;\"\r\n          :tipoVenta=\"tipoVenta\"\r\n          :VerificacionSelect=\"pedido\"\r\n          :datosInstitucion=\"datosInstitucion\"\r\n          :sendPedido=\"sendPedido\"\r\n          />\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport imageZoom from 'vue-image-zoomer';\r\nconst  UploadVerificacionVue      = () => import('./components/UploadVerificacion.vue')\r\nconst exportLiquidacionVue        = () => import('./components/exportLiquidacion.vue')\r\nconst LiquidadosDevueltosVue      = () => import('./components/Pedidos/LiquidadosDevueltos.vue')\r\nconst ScreenRegaladosVue          = () => import('./components/Pedidos/Regalados/ScreenRegalados.vue')\r\nconst BeneficiariosPorcentajeVue  = () => import('../pedidos/components/beneficiarios/BeneficiariosPorcentaje.vue')\r\nconst registrar_beneficiariosVue  = () => import('../pedidos/registrar_beneficiarios.vue')\r\nconst TableVerificadosVue         = () => import('./components/TableVerificados.vue')\r\nimport VentaRealVue from '@/views/temporadas/components/VentaReal'\r\nimport exportTipoVentaVue from './components/exportTipoVenta.vue';\r\nimport ScreenConfiguracionVerificacionVue from './components/Pedidos/Configuracion/ScreenConfiguracionVerificacion.vue';\r\nexport default {\r\n  components:{\r\n    UploadVerificacionVue,\r\n    imageZoom,\r\n    VentaRealVue,\r\n    exportLiquidacionVue,\r\n    exportTipoVentaVue,\r\n    TableVerificadosVue,\r\n    LiquidadosDevueltosVue,\r\n    ScreenRegaladosVue,\r\n    ScreenConfiguracionVerificacionVue,\r\n    BeneficiariosPorcentajeVue,\r\n    registrar_beneficiariosVue,\r\n    // ScreenConvenioVue,\r\n  },\r\n    data() {\r\n        return{\r\n            usuario:[],\r\n            contrato:'',\r\n            InformacionLiquidacion:[],\r\n            DetalleVerificacion:[],\r\n            ArregloVerCodigos:[],\r\n            popupDetalleVerificacion:false,\r\n            popupVerCodigos:false,\r\n            title:'',\r\n            title2:'',\r\n            verificacion_id:0,\r\n            contContrato:0,\r\n            popupChangeLiquidacion:false,\r\n            nombreInstitucion:'',\r\n            desgloseContrato:[],\r\n            pedido:{},\r\n            popupSolicitud:false,\r\n            popupSolicitudFactura:false,\r\n            popupDocumento:false,\r\n            tipoDocumento:'',\r\n            documento:'',\r\n            userRoot:false,\r\n            userFacturador:false,\r\n            userAsesor:false,\r\n            //VARIABLES PARA EXPORTAR A EXCEL\r\n            formats: ['xls', 'xlsx', 'csv', 'txt'],\r\n            fileName:null,\r\n            selectedFormat: 'xls',\r\n            cellAutoWidth: true,\r\n            activePrompt: false,\r\n            //FIN VARIABLES PARA EXPORTAR A EXCEL\r\n            //variables para observacion\r\n            observacion:'',\r\n            popupObservacion:false,\r\n            counterDanger: false,\r\n            disableAsesor:false,\r\n            datosInstitucion:'',\r\n            maximaVerificacion:0,\r\n            desdeDetalle:0,\r\n            //0 => REPORTE PDF; 1 => REPORTE EXCEL\r\n            tipoReporte:0,\r\n            tipoVenta:1,\r\n            //fin variables para observacion\r\n            //variables para reporte pdf\r\n            mostrarReportePdf:false,\r\n            mostrarReporteTipoVenta:false,\r\n            popupCarga:false,\r\n            //fin variables para reporte pdf\r\n            //variables regalados\r\n            arregloRegalados:[],\r\n            colorx:\"#56979B\",\r\n            totalRegalados:0,\r\n            //fin variables regalados\r\n            totalCobroVenta:0,\r\n            sumaTotalVALOR:0,\r\n            menuDetalle:1,\r\n            //variables para cobro directa\r\n            setcobro_venta_directa:0,\r\n            settipoPago:0,\r\n            setPersonalizado:0,\r\n            settotalDescuento:0,\r\n            setcampoPersonalizado:\"\",\r\n            setpermiso_anticipo_deuda:0,\r\n            setpermiso_convenio:0,\r\n            setpermiso_cobro_venta_directa:0,\r\n            //fin variables para cobro directa\r\n            //variables venta real\r\n            sumaVentaReal:0,\r\n            arregloValoresVentaReal:[],\r\n            //fin variables venta real\r\n            filtroMenu:100,\r\n            arrayAllCodigos:[],\r\n            arrayCodigosVerificacion:[],\r\n      }\r\n    },\r\n    props:{\r\n        desdePedido:{\r\n            type:Number,\r\n            default:0\r\n        },\r\n        contratoPedido:{\r\n            type:String,\r\n            default:''\r\n        },\r\n        sendPedido:{\r\n            type:Object,\r\n            default:{}\r\n        },\r\n    },\r\n    watch:{\r\n        setcobro_venta_directa(results){\r\n          let me = this;\r\n          me.setcobro_venta_directa = results\r\n          me.getAllCodigosXContrato()\r\n        },\r\n        settipoPago(results){\r\n          let me = this;\r\n          me.settipoPago = results\r\n        },\r\n        setPersonalizado(results){\r\n          let me = this;\r\n          me.setPersonalizado = results\r\n        },\r\n        settotalDescuento(results){\r\n          let me = this;\r\n          me.settotalDescuento = results\r\n        },\r\n        setcampoPersonalizado(results){\r\n          let me = this;\r\n          me.setcampoPersonalizado = results\r\n        },\r\n        setpermiso_anticipo_deuda(results){\r\n          let me = this;\r\n          me.setpermiso_anticipo_deuda = results\r\n        },\r\n        setpermiso_convenio(results){\r\n          let me = this;\r\n          me.setpermiso_convenio = results\r\n        },\r\n        setpermiso_cobro_venta_directa(results){\r\n          let me = this;\r\n          me.setpermiso_cobro_venta_directa = results\r\n        }\r\n    },\r\n    created(){\r\n        let me = this;\r\n        me.usuario = JSON.parse(localStorage.getItem(\"usuario\"))\r\n        me.getUserRoot(me.usuario);\r\n    },\r\n    mounted(){\r\n      let me = this;\r\n      me.setcobro_venta_directa     = 0\r\n      me.settipoPago                = 0\r\n      me.setPersonalizado           = 0\r\n      me.settotalDescuento          = 0\r\n      me.setcampoPersonalizado      = \"\"\r\n      me.setpermiso_anticipo_deuda  = 0\r\n      me.setpermiso_convenio        = 0\r\n      me.setpermiso_cobro_venta_directa = 0\r\n      me.menuDetalle = 1\r\n      if(me.desdePedido == 1){\r\n        me.contrato = me.contratoPedido\r\n        me.getInformacionLiquidacion()\r\n      }\r\n      //user facturador\r\n      if(me.usuario.id_group == 23 || me.usuario.id_group == 22) me.userFacturador = true\r\n      //user asesor\r\n      if(me.usuario.id_group == 11){\r\n        me.userAsesor = true\r\n        me.disableAsesor = true\r\n      }\r\n    },\r\n    computed:{\r\n        sumaTotal(){\r\n            let me = this;\r\n            if(me.DetalleVerificacion.length >0){\r\n              let datos = me.DetalleVerificacion.filter(p => p.cantidad)\r\n              let total = datos.reduce((a, b) => a + (b[\"cantidad\"] || 0), 0);\r\n              return total\r\n            }\r\n        },\r\n        sumaTotalRegalados(){\r\n            let me = this;\r\n            if(me.arregloRegalados.length >0){\r\n              let datos = me.arregloRegalados.filter(p => p.cantidad)\r\n              let total = datos.reduce((a, b) => a + (b[\"cantidad\"] || 0), 0);\r\n              return total\r\n            }\r\n        },\r\n    },\r\n    methods: {\r\n      estadoMenu(){\r\n          let me = this;\r\n          localStorage.setItem('menuSelectVerificacion',me.filtroMenu)\r\n          var divs = document.querySelectorAll(\".btnMenu\");\r\n          for (var i = 0; i < divs.length; i++) {\r\n              divs[i].classList.remove(\"activeBtn\");\r\n          }\r\n          const container = document.querySelector(\".menuVerificacion\"+me.filtroMenu);\r\n          container.classList.add(\"activeBtn\");\r\n      },\r\n      startDetalle(tr){\r\n        let me = this\r\n        me.mostrarReportePdf              = false\r\n        me.mostrarReporteTipoVenta        = false\r\n        me.menuDetalle                    = 1\r\n        me.setcobro_venta_directa         = tr.cobro_venta_directa;\r\n        me.settipoPago                    = tr.tipoPago;\r\n        me.setPersonalizado               = tr.personalizado;\r\n        me.settotalDescuento              = tr.totalDescuento;\r\n        me.setcampoPersonalizado          = tr.campoPersonalizado;\r\n        me.setpermiso_anticipo_deuda      = tr.permiso_anticipo_deuda;\r\n        me.setpermiso_convenio            = tr.permiso_convenio;\r\n        me.setpermiso_cobro_venta_directa = tr.permiso_cobro_venta_directa\r\n        me.pedido                         = tr;\r\n        me.getAllCodigosXContrato()\r\n        me.filtroMenu                     = 0;\r\n        me.estadoMenu();\r\n      },\r\n      abrirModal(){\r\n          let me = this;\r\n          if(me.desdeDetalle == 1){ }\r\n          else  me.popupDetalleVerificacion=true;\r\n      },\r\n      //====METODOS PARA OMITIR LOS ARHIVOS\r\n      changeHandle(e){\r\n        let me = this;\r\n        me.mostrarReportePdf         = false\r\n        me.mostrarReporteTipoVenta   = false\r\n        me.popupCarga                = false\r\n        me.popupDetalleVerificacion  = true\r\n      },\r\n      filtrarDecimal(numero){\r\n          let me = this\r\n          if(numero == undefined){\r\n              return 0\r\n          }\r\n          if(numero == 0){\r\n              return numero\r\n          }else{\r\n              const transformar = (numero).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\r\n              return transformar\r\n          }\r\n      },\r\n      getUserRoot(dato) {\r\n          let me = this;\r\n          this.$http.get(this.$server_url + 'permisos/' + dato.idusuario)\r\n          .then((result) => {\r\n              if (result.data.length > 0) {\r\n              me.userRoot = true;\r\n              }\r\n          })\r\n          .catch((err) => {\r\n              console.log(err)\r\n          })\r\n      },\r\n      verBooks(tr,num_verificacion){\r\n          let me = this;\r\n            me.$vs.loading();\r\n          me.title2 = \"Códigos del libro \"+tr.nombre_libro\r\n          this.$http.get(this.$server_url+'n_verificacion?buscarIdVerificacion=yes&contrato='+me.contrato+'&verCodigos=yes'+'&libro_id='+tr.libro_id+'&num_verificacion='+num_verificacion)\r\n          .then(function (res) {\r\n              me.ArregloVerCodigos = res.data\r\n              me.popupVerCodigos = true;\r\n              me.$vs.loading.close()\r\n              if(res.data.message){\r\n                  me.$vs.notify({\r\n                  text: res.data.message,\r\n                  color: 'success',\r\n                  iconPack: 'feather',\r\n                  icon: 'icon-user'\r\n              })\r\n              }\r\n          })\r\n          .catch(function (error) {\r\n              console.log(error + ' error');\r\n              me.$vs.loading.close()\r\n          })\r\n      },\r\n      getInformacionLiquidacion() {\r\n        let me = this;\r\n        me.InformacionLiquidacion   = [];\r\n        me.desgloseContrato         = []\r\n        me.maximaVerificacion       = 0\r\n        me.nombreInstitucion = \"\"\r\n        if(me.contrato == \"\"){\r\n            me.$vs.notify({\r\n                    text: \"Ingrese un contrato por favor\",\r\n                    color: 'success',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-user'\r\n                })\r\n            return false;\r\n        }\r\n        me.$vs.loading();\r\n        this.$http.get(this.$server_url+'n_verificacion?contrato='+me.contrato+'&informacion=yes')\r\n            .then(function (res) {\r\n              me.$vs.loading.close()\r\n                if(res.data.verificaciones.length == 0){\r\n                    me.$vs.notify({\r\n                    text: 'No hay verificaciones en el contrato',\r\n                    color: 'warning',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-user'\r\n                    })\r\n                    return\r\n                }\r\n                me.InformacionLiquidacion = res.data.verificaciones\r\n                me.nombreInstitucion      = res.data.institucion[0].nombreInstitucion\r\n                me.datosInstitucion       = res.data.institucion[0]\r\n                me.contContrato           = res.data.length\r\n                if(res.data.message){\r\n                    me.$vs.notify({\r\n                    text: res.data.message,\r\n                    color: 'success',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-user'\r\n                    })\r\n                }\r\n                //me.desgloseCodigo();\r\n            })\r\n        .catch(function (error) {\r\n            console.log(error + ' error');\r\n            me.$vs.loading.close()\r\n        })\r\n      },\r\n      desgloseCodigo(){\r\n        let me = this;\r\n        me.desgloseContrato = []\r\n        const { idInstitucion ,id_periodo } = me.datosInstitucion\r\n          this.$http.get(this.$server_url+'n_verificacion?contrato='+me.contrato+'&historico=yes&institucion_id='+idInstitucion+'&periodo_id='+id_periodo)\r\n            .then(function (res) {\r\n              let datos      = res.data.formato\r\n              if(datos.length == 0){\r\n                me.$vs.loading.close()\r\n                return\r\n              }\r\n              me.maximaVerificacion = datos[0].maximaVerificacion\r\n              let getCodigos = res.data.codigos\r\n              let prevalores = []\r\n              datos.forEach(element => {\r\n                var cal = new Object()\r\n                cal.codigo          = element.codigo\r\n                cal.nombre_libro    = element.nombre_libro\r\n                cal.libro_id        = element.libro_id\r\n                var preTotal        = 0\r\n                var contador        = 1\r\n                for (let index = 0; index < me.maximaVerificacion; index++) {\r\n                    let contar = []\r\n                    contar = getCodigos.filter(p => p[`verif${contador}`] > 0 && p.libro_id == element.libro_id)\r\n                    if(contar.length > 0){\r\n                        preTotal += contar.length\r\n                        try {\r\n                        eval(\"cal.verif\" + contador + \"=\" + contar.length);\r\n                        } catch (error) {\r\n                            console.log(\"err\",error)\r\n                            eval(\"cal.verif\" + contador + \"=\" + 0);\r\n                        }\r\n                    }\r\n                    contador++;\r\n                }\r\n                cal.total           = preTotal\r\n                prevalores.push(cal)\r\n              });\r\n              if(prevalores.length > 0){\r\n                me.desgloseContrato = prevalores.sort(function(a, b) {\r\n                var nombreA = a.codigo.toLowerCase();\r\n                var nombreB = b.codigo.toLowerCase();\r\n                var numA = parseInt(nombreA.match(/\\d+$/)); // extraer el número del final (si existe)\r\n                var numB = parseInt(nombreB.match(/\\d+$/)); // extraer el número del final (si existe)\r\n                nombreA = nombreA.replace(/\\d+$/, ''); // quitar el número del final\r\n                nombreB = nombreB.replace(/\\d+$/, ''); // quitar el número del final\r\n\r\n                if (nombreA < nombreB) {\r\n                    return -1;\r\n                }\r\n                if (nombreA > nombreB) {\r\n                    return 1;\r\n                }\r\n                if (numA && !numB) { // si a tiene número y b no, b va primero\r\n                    return 1;\r\n                }\r\n                if (!numA && numB) { // si b tiene número y a no, a va primero\r\n                    return -1;\r\n                }\r\n                if (numA && numB) { // si ambos tienen número, compararlos\r\n                    if (numA < 10 && numB >= 10) { // si a es menor que 10 y b es 10 o mayor, a va primero\r\n                    return -1;\r\n                    }\r\n                    if (numA >= 10 && numB < 10) { // si b es menor que 10 y a es 10 o mayor, b va primero\r\n                    return 1;\r\n                    }\r\n                    return numA - numB; // comparar los números directamente\r\n                }\r\n                return 0; // si son iguales en todo, no hay diferencia\r\n                });\r\n              }\r\n              me.$vs.loading.close()\r\n            })\r\n        .catch(function (error) {\r\n        })\r\n      },\r\n      verCodigosRegalados(tr){\r\n        let me  = this;\r\n        me.ArregloVerCodigos = []\r\n        me.$vs.loading();\r\n        me.title2 = \"Códigos del libro \"+tr.nombre_libro\r\n        this.$http.get(this.$server_url+'showRegalados/'+me.datosInstitucion.idInstitucion+'/'+me.datosInstitucion.id_periodo+'/'+tr.libro_idlibro+'/'+me.pedido.num_verificacion+'/'+me.pedido.id)\r\n        .then(function (res) {\r\n            me.ArregloVerCodigos        = res.data\r\n            me.popupDetalleVerificacion = false;\r\n            me.popupVerCodigos          = true;\r\n            me.$vs.loading.close()\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error + ' error');\r\n            me.$vs.loading.close()\r\n        })\r\n      },\r\n      VerCodigos(tr,filtro){\r\n        let me  = this;\r\n        me.$vs.loading();\r\n        me.title2 = \"Códigos del libro \"+tr.nombre_libro\r\n        this.$http.get(this.$server_url+'n_verificacion?contrato='+me.pedido.contrato+'&verCodigos=yes&verificacion_id='+tr.IdVerificacion+'&libro_id='+tr.libro_id+'&num_verificacion='+tr.verificacion_id)\r\n        .then(function (res) {\r\n          me.$vs.loading.close()\r\n          let datos = res.data\r\n          if(datos.length > 0 ){\r\n            if(filtro == 0) me.ArregloVerCodigos = datos\r\n            if(filtro == 1) me.ArregloVerCodigos = datos.filter(x => x.venta_estado == 1 && x.estado_liquidacion == 0)\r\n            if(filtro == 2) me.ArregloVerCodigos = datos.filter(x => x.venta_estado == 2 && x.estado_liquidacion == 0)\r\n            if(filtro == 3) me.ArregloVerCodigos = datos.filter(x => x.estado_liquidacion == 2)\r\n          }else{\r\n            me.ArregloVerCodigos = res.data\r\n          }\r\n          me.popupDetalleVerificacion = false;\r\n          me.popupVerCodigos = true;\r\n          if(res.data.message){\r\n              me.$vs.notify({\r\n              text: res.data.message,\r\n              color: 'success',\r\n              iconPack: 'feather',\r\n              icon: 'icon-user'\r\n          })\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error + ' error');\r\n            me.$vs.loading.close()\r\n        })\r\n      },\r\n      getAllCodigosXContrato(){\r\n        let me = this;\r\n        me.sumaVentaReal =0\r\n        me.arregloValoresVentaReal = []\r\n        const { idInstitucion ,id_periodo } = me.datosInstitucion\r\n        me.$vs.loading();\r\n        this.$http.get(this.$server_url+'n_verificacion?contrato='+me.pedido.contrato+'&getAllCodigosXContrato=yes&IdVerificacion='+me.pedido.id+'&verificacion_id='+me.pedido.num_verificacion+'&institucion_id='+idInstitucion+'&periodo_id='+id_periodo)\r\n        .then(function (res) {\r\n          me.arrayAllCodigos = res.data\r\n          me.getVentaRealXVerificacion()\r\n          me.getRegalados();\r\n          me.getDetallesVerificacion()\r\n          me.$vs.loading.close();\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error + ' error');\r\n            me.$vs.loading.close()\r\n        })\r\n      },\r\n      getVentaRealXVerificacion(){\r\n        let me = this;\r\n        const { idInstitucion ,id_periodo } = me.datosInstitucion\r\n        //si no hay codigos no hace nada\r\n        if(me.arrayAllCodigos.length == 0){ return }\r\n        me.sumaVentaReal            = 0\r\n        me.arregloValoresVentaReal  = []\r\n        let datos                   = me.arrayAllCodigos.filter(p => p.estado_liquidacion == '0' && p.bc_institucion == idInstitucion && p.estado != '2' && p.contrato == me.pedido.contrato)\r\n        // Itera a través de los elementos del array\r\n        datos.forEach(item => {\r\n          const nombre_libro    = item.nombre_libro;\r\n          const codigo          = item.codigo;\r\n          const precio          = item.precio;\r\n          const libro_id        = item.libro_id;\r\n          const IdVerificacion  = item.IdVerificacion;\r\n          const verificacion_id = item.verificacion_id;\r\n          const libro_idlibro   = item.libro_idlibro;\r\n          // Busca si ya existe un objeto con el mismo libro en groupedData\r\n          const existingGroup = me.arregloValoresVentaReal.find(group => group.nombre_libro === nombre_libro);\r\n          // Si no existe, crea un nuevo objeto y agrégalo a groupedData\r\n          if (!existingGroup) {\r\n            me.arregloValoresVentaReal.push({ nombre_libro, codigo, precio, libro_id, IdVerificacion, verificacion_id, libro_idlibro, cantidad: 1,  });\r\n          } else {\r\n            // Si existe, incrementa la cantidad en el objeto existente\r\n            existingGroup.cantidad++;\r\n          }\r\n        });\r\n        me.arregloValoresVentaReal.map((item) => {\r\n          item.valor = item.precio * item.cantidad\r\n          me.sumaVentaReal += item.valor\r\n        });\r\n        // me.updateValorLiquidacion()\r\n\r\n        // const { idInstitucion ,id_periodo } = me.datosInstitucion\r\n        // this.$http.get(this.$server_url+'n_verificacion?contrato='+me.pedido.contrato+'&getVentaRealXVerificacion=yes&IdVerificacion='+me.pedido.id+'&verificacion_id='+me.pedido.num_verificacion+'&institucion_id='+idInstitucion+'&periodo_id='+id_periodo)\r\n        // .then(function (res) {\r\n        //   me.arregloValoresVentaReal = res.data\r\n        //   me.sumarTotalVentaReal()\r\n        // })\r\n        // .catch(function (error) {\r\n        //     console.log(error + ' error');\r\n        //     me.$vs.loading.close()\r\n        // })\r\n      },\r\n\r\n      // sumarTotalVentaReal(){\r\n      //   let me = this;\r\n      //     if(me.arregloValoresVentaReal.length > 0){\r\n      //       let datos = me.arregloValoresVentaReal.filter(p => p.valor)\r\n      //       let total = datos.reduce((a, b) => a + (b[\"valor\"] || 0), 0);\r\n      //       me.sumaVentaReal = total\r\n      //     }\r\n      // },\r\n      updateValorLiquidacion(){\r\n        let me = this;\r\n        let formData = new FormData();\r\n        formData.append('verificacion_id',    me.pedido.id);\r\n        formData.append('venta_real',         me.sumaVentaReal + me.totalRegalados);\r\n        formData.append('venta_real_regalados',me.totalRegalados)\r\n        this.$http.post(this.$server_url+'updateVentaReal', formData)\r\n        .then(res => {\r\n        })\r\n      },\r\n      //aqui traigo codigos normales y codigos regalados\r\n      getDetallesVerificacion(){\r\n        let me = this;\r\n        me.sumaTotalVALOR             = 0\r\n        me.DetalleVerificacion        = []\r\n        me.arrayCodigosVerificacion   = []\r\n        me.verificacion_id            = me.pedido.id\r\n        const { idInstitucion ,id_periodo } = me.datosInstitucion\r\n        me.title = \"Verificación N. \"+me.pedido.num_verificacion + \" del contrato \"+ me.pedido.contrato\r\n        //AGRUPADO\r\n        let datos                   = me.arrayAllCodigos.filter(p => (p.estado_liquidacion == '0' || p.estado_liquidacion == '2') && (p.bc_institucion == idInstitucion || p.venta_lista_institucion == idInstitucion) )\r\n        me.arrayCodigosVerificacion = datos\r\n        datos.forEach(item => {\r\n          const nombre_libro    = item.nombre_libro;\r\n          const codigo          = item.codigo;\r\n          const precio          = item.precio;\r\n          const libro_id        = item.libro_id;\r\n          const IdVerificacion  = item.IdVerificacion;\r\n          const verificacion_id = item.verificacion_id;\r\n          const libro_idlibro   = item.libro_idlibro;\r\n          // Busca si ya existe un objeto con el mismo libro en groupedData\r\n          const existingGroup = me.DetalleVerificacion.find(group => group.nombre_libro === nombre_libro);\r\n          // Si no existe, crea un nuevo objeto y agrégalo a groupedData\r\n          if (!existingGroup) {\r\n            me.DetalleVerificacion.push({ nombre_libro, codigo, precio, libro_id, IdVerificacion,verificacion_id, libro_idlibro ,cantidad: 1,  });\r\n          } else {\r\n            // Si existe, incrementa la cantidad en el objeto existente\r\n            existingGroup.cantidad++;\r\n          }\r\n        });\r\n        me.DetalleVerificacion.map((item) => {\r\n          item.valor        = item.precio * item.cantidad\r\n          me.sumaTotalVALOR += item.valor\r\n        });\r\n        me.updateValorLiquidacion()\r\n        me.popupDetalleVerificacion = true\r\n        // this.$http.get(this.$server_url+'n_verificacion?contrato='+me.pedido.contrato+'&detalles=yes&IdVerificacion='+me.pedido.id+'&verificacion_id='+me.pedido.num_verificacion+'&institucion_id='+idInstitucion+'&periodo_id='+id_periodo)\r\n        // .then(function (res) {\r\n        //     me.DetalleVerificacion = res.data\r\n        //     me.sumarTotalVenta()\r\n        //     me.popupDetalleVerificacion = true\r\n        //     me.$vs.loading.close()\r\n        //     if(res.data.message){\r\n        //         me.$vs.notify({\r\n        //         text: res.data.message,\r\n        //         color: 'success',\r\n        //         iconPack: 'feather',\r\n        //         icon: 'icon-user'\r\n        //       })\r\n        //     }\r\n        // })\r\n        // .catch(function (error) {\r\n        //     console.log(error + ' error');\r\n        //     me.$vs.loading.close()\r\n        // })\r\n      },\r\n      // sumarTotalVenta(){\r\n      //   let me = this;\r\n      //     if(me.DetalleVerificacion.length >0){\r\n      //       let datos = me.DetalleVerificacion.filter(p => p.valor)\r\n      //       let total = datos.reduce((a, b) => a + (b[\"valor\"] || 0), 0);\r\n      //       me.sumaTotalVALOR = total\r\n      //     }\r\n      // },\r\n      getRegalados(){\r\n        let me = this\r\n        me.totalRegalados = 0\r\n        me.totalCobroVenta = 0\r\n        me.arregloRegalados = []\r\n        const { idInstitucion ,id_periodo } = me.datosInstitucion\r\n         //AGRUPADO\r\n         let datos                   = me.arrayAllCodigos.filter(p => (p.estado_liquidacion == '2') && (p.bc_institucion == idInstitucion || p.venta_lista_institucion == idInstitucion) )\r\n        datos.forEach(item => {\r\n          const nombre_libro    = item.nombre_libro;\r\n          const codigo          = item.codigo;\r\n          const precio          = item.precio;\r\n          const libro_id        = item.libro_id;\r\n          const IdVerificacion  = item.IdVerificacion;\r\n          const verificacion_id = item.verificacion_id;\r\n          const libro_idlibro   = item.libro_idlibro;\r\n          // Busca si ya existe un objeto con el mismo libro en groupedData\r\n          const existingGroup = me.arregloRegalados.find(group => group.nombre_libro === nombre_libro);\r\n          // Si no existe, crea un nuevo objeto y agrégalo a groupedData\r\n          if (!existingGroup) {\r\n            me.arregloRegalados.push({ nombre_libro, codigo, precio, libro_id, IdVerificacion,verificacion_id, libro_idlibro, cantidad: 1,  });\r\n          } else {\r\n            // Si existe, incrementa la cantidad en el objeto existente\r\n            existingGroup.cantidad++;\r\n          }\r\n        });\r\n        me.arregloRegalados.map((item) => {\r\n          item.valor        = item.precio * item.cantidad\r\n          me.totalRegalados += item.valor\r\n        });\r\n        if(me.arregloRegalados.length > 0){\r\n            let prevalor        = 0\r\n            //COBRO VENTA DIRECTA=>0 = NADA; 1 = 100%; 2 =porcentaje de la escuela;\r\n            //tipoPago => 0 =  NADA; 1 = Cancelar Total; 2 = Descontar; 3 = Regalado = 4 personalizado\r\n            if(me.settipoPago == 1 || me.settipoPago == 3) { me.totalCobroVenta = 0 }\r\n            if(me.settipoPago == 2 || me.setPersonalizado == 1) {\r\n              prevalor = me.sendPedido.descuento\r\n              //si el cobro de venta directa esta activado\r\n              if(me.setpermiso_cobro_venta_directa == 1){\r\n                me.totalCobroVenta  = ( me.totalRegalados - ( me.totalRegalados * prevalor ) / 100)\r\n              }else{\r\n                me.totalCobroVenta = 0\r\n              }\r\n            }\r\n          }\r\n\r\n        // this.$http.get(this.$server_url+'getRegalados/'+me.datosInstitucion.idInstitucion+'/'+me.datosInstitucion.id_periodo+'/'+me.pedido.num_verificacion+'/'+me.pedido.id)\r\n        //   .then(function (res) {\r\n        //     me.arregloRegalados = res.data\r\n        //     if(me.arregloRegalados.length > 0){\r\n        //         let datos           = me.arregloRegalados.filter(p => p.valor)\r\n        //         let total           = datos.reduce((a, b) => a + (b[\"valor\"] || 0), 0);\r\n        //         me.totalRegalados   = total\r\n        //         if(me.totalRegalados > 0){\r\n        //           let prevalor        = 0\r\n        //           //COBRO VENTA DIRECTA=>0 = NADA; 1 = 100%; 2 =porcentaje de la escuela;\r\n        //           //tipoPago => 0 =  NADA; 1 = Cancelar Total; 2 = Descontar; 3 = Regalado = 4 personalizado\r\n        //           if(me.settipoPago == 1 || me.settipoPago == 3) { me.totalCobroVenta = 0 }\r\n        //           if(me.settipoPago == 2 || me.setPersonalizado == 1) {\r\n        //             prevalor = me.sendPedido.descuento\r\n        //             //si el cobro de venta directa esta activado\r\n        //             if(me.setpermiso_cobro_venta_directa == 1){\r\n        //               me.totalCobroVenta  = ( me.totalRegalados - ( me.totalRegalados * prevalor ) / 100)\r\n        //             }else{\r\n        //               me.totalCobroVenta = 0\r\n        //             }\r\n        //           }\r\n        //         }\r\n        //     }\r\n        //     me.sumarTotalVentaReal()\r\n        //   })\r\n        //   .catch(function (error) {\r\n        //       console.log(error + ' error');\r\n        //   })\r\n      },\r\n\r\n      recharge(e){\r\n          let me = this\r\n          me.desdeDetalle = 0\r\n          //menu modal Verificacion libros => para ver los codigos de libro seleccionado\r\n          if(e.tipo == 2){ me.VerCodigos(e.data,e.filtro)\r\n              return\r\n          }\r\n          //libros regalados\r\n          if(e.tipo == 3){\r\n              me.verCodigosRegalados(e.data)\r\n              return\r\n          }\r\n          //actualizar cobro venta directa\r\n          if(e.tipo == 4){\r\n            me.getAllCodigosXContrato()\r\n            me.setcobro_venta_directa     = e.data.sendValor\r\n            me.settipoPago                = e.data.sendTipo\r\n            me.settotalDescuento          = e.data.sendtotalDescuento\r\n            me.getInformacionLiquidacion()\r\n            return\r\n          }\r\n          //actualizar codigos regalados\r\n          if(e.tipo == 5){\r\n            me.getAllCodigosXContrato()\r\n            me.updateValorLiquidacion()\r\n            return\r\n          }\r\n          //actualizar valor personalizado\r\n          if(e.tipo == 6){\r\n            me.getAllCodigosXContrato()\r\n            me.setPersonalizado           = e.data.sendValor\r\n            me.settotalDescuento          = e.data.sendtotalDescuento\r\n            me.setcampoPersonalizado      = e.data.sendcampoPersonalizado\r\n            me.getInformacionLiquidacion()\r\n          }\r\n          //actualizar configuracion reporte\r\n          if(e.tipo == 7){\r\n            me.getAllCodigosXContrato()\r\n            me.setpermiso_anticipo_deuda      = e.sendpermiso_anticipo_deuda\r\n            me.setpermiso_convenio            = e.sendpermiso_convenio\r\n            me.setpermiso_cobro_venta_directa = e.sendpermiso_cobro_venta_directa\r\n            me.getInformacionLiquidacion()\r\n          }\r\n          //recharge only convenios\r\n          me.popupSolicitud         = false\r\n          me.popupSolicitudFactura  = false\r\n      },\r\n      openDocument(tr){\r\n        let me = this;\r\n        if(me.documento.substr(-3) == 'pdf'){\r\n            let ruta = me.$data_url+'archivos/verificaciones/'+me.tipoDocumento+'/'+me.documento\r\n            window.open(ruta,'_blank')\r\n            return\r\n        }\r\n        me.popupDocumento = true;\r\n      },\r\n      //METODOS PARA EXPORTAR A EXCEL\r\n      exportToExcel() {\r\n        let headerTitle =\r\n        [\r\n          'Código',\r\n          'Verif1',\r\n          'Verif2',\r\n          'Verif3',\r\n          'Verif4',\r\n          'Verif5',\r\n          'Verif6',\r\n          'Verif7',\r\n          'Verif8',\r\n          'Verif9',\r\n          'Verif10',\r\n          'Total',\r\n        ];\r\n        let headerVal = [\r\n          'codigo',\r\n          'verif1',\r\n          'verif2',\r\n          'verif3',\r\n          'verif4',\r\n          'verif5',\r\n          'verif6',\r\n          'verif7',\r\n          'verif8',\r\n          'verif9',\r\n          'verif10',\r\n          'total',\r\n        ];\r\n        import('@/vendor/Export2Excel').then(excel => {\r\n          const data = this.formatJson(headerVal, this.desgloseContrato)\r\n          excel.export_json_to_excel({\r\n            header: headerTitle,\r\n            data,\r\n            filename: this.contrato,\r\n            autoWidth: this.cellAutoWidth,\r\n            bookType: this.selectedFormat\r\n          })\r\n          this.clearFields()\r\n        })\r\n      },\r\n      exportVerificacionPdf(tipo){\r\n          let me = this;\r\n          me.popupDetalleVerificacion                 = false\r\n          me.popupCarga                               = true\r\n          //reporte pdf o excel\r\n          if(tipo == 1) {  me.mostrarReportePdf       = true }\r\n          //reporte tipo de venta\r\n          if(tipo == 2) { me.mostrarReporteTipoVenta  = true}\r\n\r\n      },\r\n      exportToExcelDetalle(tipoReporte){\r\n        let headerTitle =\r\n        [\r\n          'Libro',\r\n          'Código liquidación',\r\n          'Cantidad',\r\n          'Precio',\r\n          'Valor',\r\n        ];\r\n        let headerVal = [\r\n          'nombre_libro',\r\n          'codigo',\r\n          'cantidad',\r\n          'precio',\r\n          'valor',\r\n        ];\r\n        import('@/vendor/Export2Excel').then(excel => {\r\n          let datos = []\r\n          if(tipoReporte == 0) { datos = this.DetalleVerificacion }\r\n          if(tipoReporte == 1) { datos = this.arregloRegalados }\r\n          const data = this.formatJson(headerVal, datos)\r\n          excel.export_json_to_excel({\r\n            header: headerTitle,\r\n            data,\r\n            filename: tipoReporte == 1 ? this.contrato + '_Codigos_Docentes' : this.contrato,\r\n            autoWidth: this.cellAutoWidth,\r\n            bookType: this.selectedFormat\r\n          })\r\n          this.clearFields()\r\n        })\r\n      },\r\n      formatJson(filterVal, jsonData) {\r\n        return jsonData.map(v => filterVal.map(j => {\r\n            return v[j]\r\n        }))\r\n      },\r\n      //limpiar campos para exportar de nuevo\r\n      clearFields() {\r\n          this.fileName = ''\r\n          this.cellAutoWidth = true\r\n          this.selectedFormat = 'xls'\r\n      },\r\n      //FIN METODOS PARA EXPORTAR A EXCEL\r\n      openObservacion(){\r\n        let me = this;\r\n          this.$http.get(this.$server_url+'getVerificacionXId/'+me.pedido.id)\r\n            .then(function (res) {\r\n              let datos = res.data\r\n              if(datos.length > 0){\r\n                me.observacion = datos[0].observacion\r\n              }\r\n              me.popupObservacion = true\r\n          })\r\n          .catch(function (error) {\r\n              console.log(error + ' error');\r\n          })\r\n      },\r\n      saveDatosVerificacion(){\r\n        let me = this;\r\n        if(me.observacion == \"\" || me.observacion == null || me.observacion == undefined){\r\n        }else{\r\n          if(me.observacion.length > 300){\r\n            me.$vs.notify({ text: 'Máximo 300 caracteres.', color: 'warning', iconPack: 'feather', icon: 'icon-alert-triangle',time:4000 })\r\n            return\r\n          }\r\n        }\r\n        let formData = new FormData();\r\n        formData.append('id',         me.pedido.id)\r\n        formData.append('observacion',me.observacion);\r\n        me.$vs.loading()\r\n        this.$http.post(this.$server_url+'saveDatosVerificacion', formData)\r\n        .then(res => {\r\n        me.$vs.loading.close()\r\n        me.$vs.notify({\r\n          text:res.data.message,\r\n          color:'success',\r\n          iconPack: 'feather',\r\n          icon:'icon-check'})\r\n        })\r\n        me.popupObservacion = false;\r\n      }\r\n    },\r\n}\r\n</script>\r\n<style scoped>\r\n.verif:hover{\r\n    background-color: cornflowerblue;\r\n    transition: 0.5s ease;\r\n    padding: 5px;\r\n    border-radius: 10px;\r\n    color: white;\r\n}\r\n.imagen{\r\n    cursor:pointer;\r\n    opacity:0.8;\r\n    transition: 1s ease all;\r\n}\r\n.imagen:hover{\r\n    text-decoration: underline;\r\n    color:#217bc5;\r\n    text-shadow:2px 4px 2px #ccc;\r\n}\r\n/*ESTILOS MENU**/\r\n\r\n  /*MENU*/\r\n  .activeBtn{\r\n    background-color: #1cbeb3;\r\n    color: white!important;\r\n  }\r\n/**ESTILOS SUB MENU */\r\n.breadcrumbs {\r\n  border: 1px solid #cbd2d9;\r\n  border-radius: 0.3rem;\r\n  display: inline-flex;\r\n  overflow: hidden;\r\n}\r\n\r\n.breadcrumbs__item {\r\noutline: none;\r\npadding: 0.75em 0.75em 0.75em 1.25em;\r\nposition: relative;\r\ntext-decoration: none;\r\ntransition: background 0.2s linear;\r\ncolor:black;\r\n}\r\n\r\n.breadcrumbs__item:hover:after,\r\n.breadcrumbs__item:hover {\r\nbackground: #000;\r\ncolor:#fff;\r\n}\r\n\r\n.breadcrumbs__item:focus:after,\r\n.breadcrumbs__item:focus,\r\n.breadcrumbs__item.is-active:focus {\r\nbackground: #1cbeb3;\r\ncolor: #fff;\r\n}\r\n\r\n.breadcrumbs__item:after,\r\n.breadcrumbs__item:before {\r\nbackground: white;\r\nbottom: 0;\r\nclip-path: polygon(50% 50%, -50% -50%, 0 100%);\r\ncontent: \"\";\r\nleft: 100%;\r\nposition: absolute;\r\ntop: 0;\r\ntransition: background 0.2s linear;\r\nwidth: 1em;\r\nz-index: 1;\r\n}\r\n\r\n.breadcrumbs__item:before {\r\nbackground: #cbd2d9;\r\nmargin-left: 1px;\r\n}\r\n\r\n.breadcrumbs__item:last-child {\r\nborder-right: none;\r\n}\r\n\r\n.breadcrumbs__item.is-active {\r\nbackground: #edf1f5;\r\n}\r\n</style>\r\n"]}]}