{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\codigos\\components\\seccionCodigos.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\codigos\\components\\seccionCodigos.vue","mtime":1712682815643},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nimport ExportReutilizable from '../../admin/components/ExportReutilizable.vue'\r\nimport CodigosDescuentoVue from './utils/CodigosDescuento'\r\nimport gestionCodigosListaVue from './utils/gestionCodigosLista.vue';\r\nimport flatPickr from 'vue-flatpickr-component';\r\nimport 'flatpickr/dist/flatpickr.css';\r\nimport Vue from 'vue'\r\nimport axios from 'axios'\r\nimport vSelect from 'vue-select'\r\nimport moment from 'moment'\r\nimport $ from 'jquery'\r\nexport default {\r\n  components:{\r\n    'v-select': vSelect,\r\n    ExportReutilizable,\r\n    CodigosDescuentoVue,\r\n    gestionCodigosListaVue,\r\n  },\r\n    data() {\r\n        return{\r\n             //listado de ciudades para el select\r\n            arregloCiudad:[],\r\n             liquidacion:{\r\n                institucion:'',\r\n                periodo:'',\r\n                condicion:'1',\r\n            },\r\n            arregloPeriodos:[],\r\n            ciudadSelect:'',\r\n            arregloTraeInstitucion:[],\r\n            codigosInstitucion: [],\r\n            codigoSelected: [],\r\n            activePrompt:false,\r\n\r\n            guardarActivo:'',\r\n            generarActivo:'',\r\n            textAlertCant:'',\r\n            cantidad:'',\r\n            arregloCodigos:[],\r\n            codigoTipo:'0',\r\n            headerTitle:[],\r\n            headerVal:[],\r\n            exportarRealizar:1,\r\n            //VARIABLES PARA DESCUENTO\r\n            popupDescuento:false,\r\n            valorDescuento:'',\r\n            //FIN variables para descuento\r\n        }\r\n    },\r\n    props:{\r\n        arregloCodigosIndividuales:{\r\n            type:Array,\r\n            default: []\r\n        },\r\n        lperiodo:{\r\n            type:Number,\r\n            default: 0\r\n        },\r\n        linstitucion:{\r\n            type:Number,\r\n            default: 0\r\n        }\r\n    },\r\n    watch:{\r\n        arregloCodigosIndividuales(results){\r\n            this.reRenderCodigos(results)\r\n            this.codigoSelected  = []\r\n        }\r\n    },\r\n    created(){\r\n        let me = this;\r\n        // me.listaCiudades();\r\n    },\r\n    computed:{\r\n        sumaTotal(){\r\n            let me    = this;\r\n            let total = me.arregloCodigos.length\r\n            return total\r\n        },\r\n        SumaCodigosDevolucion(){\r\n            let me = this;\r\n            let datos       = me.arregloCodigos.filter(p => p.estado_liquidacion == '3');\r\n            let resultado   = datos.length\r\n            return resultado\r\n        },\r\n        sumaCodigosRegalados(){\r\n            let me = this;\r\n            let primerFiltro = me.arregloCodigos.filter(p => p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null);\r\n            let datos        = primerFiltro.filter(p => p.estado_liquidacion =='2'  && p.liquidado_regalado == '0')\r\n            let resultado    = datos.length\r\n            return resultado\r\n        },\r\n        sumaCodigosRegaladosLiquidados(){\r\n            let me = this;\r\n            let datos        = me.arregloCodigos.filter(p => p.estado_liquidacion =='2' && p.liquidado_regalado == '1')\r\n            let resultado    = datos.length\r\n            return resultado\r\n        },\r\n        sumaCodigosBloqueados(){\r\n            let me = this;\r\n             let primerFiltro = me.arregloCodigos.filter(p => p.estado_liquidacion != '3');\r\n            let datos         = primerFiltro.filter(p => p.estado == '2')\r\n            let resultado     = datos.length\r\n            return resultado\r\n        },\r\n        sumarCodigosActivos(){\r\n            let me = this;\r\n            let primerFiltro = me.arregloCodigos.filter(p => p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null);\r\n            let datos        = primerFiltro.filter(p => p.estado_liquidacion =='0' ||  p.estado_liquidacion =='1')\r\n            let resultado    = datos.length\r\n            return resultado\r\n        },\r\n        sumarCodigosLiquidados(){\r\n            let me = this;\r\n            let primerFiltro = me.arregloCodigos.filter(p => p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null);\r\n            let datos        = primerFiltro.filter(p => p.estado_liquidacion =='0')\r\n            let resultado    = datos.length\r\n            return resultado\r\n        },\r\n        sumarCodigosporLiquidarse(){\r\n            let me = this;\r\n            let primerFiltro = me.arregloCodigos.filter(p => (p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null) && (p.estado_liquidacion == 1) && (p.bc_estado =='2'));\r\n            let datos        = primerFiltro.filter(p => (p.bc_institucion == this.linstitucion) && (p.bc_periodo == this.lperiodo))\r\n            let resultado    = datos.length\r\n            return resultado\r\n        },\r\n        // sumarCodigosporLiquidarse(){\r\n        //     let me = this;\r\n        //     let primerFiltro = me.arregloCodigos.filter(p => p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null);\r\n        //     let datos        = primerFiltro.filter(p => p.estado_liquidacion =='1')\r\n        //     let resultado    = datos.length\r\n        //     return resultado\r\n        // },\r\n         sumarCodigosLeidos(){\r\n            let me = this;\r\n            let primerFiltro = me.arregloCodigos.filter(p => (p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null) && (p.estado_liquidacion == 1));\r\n            let datos        = primerFiltro.filter(p => p.bc_estado =='2')\r\n            let resultado    = datos.length\r\n            return resultado\r\n        },\r\n         sumarCodigosNoleidos(){\r\n            let me = this;\r\n            let primerFiltro = me.arregloCodigos.filter(p => (p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null) && (p.estado_liquidacion == 1));\r\n            let datos        = primerFiltro.filter(p => p.bc_estado =='1')\r\n            let resultado    = datos.length\r\n            return resultado\r\n        }\r\n    },\r\n    methods:{\r\n        reRenderCodigos(results){\r\n            const me = this\r\n            me.codigosInstitucion = results\r\n            me.arregloCodigos = results\r\n            localStorage.setItem('codigos',JSON.stringify(results))\r\n        },\r\n        filtroTipo(){\r\n            let me = this;\r\n            let datos =JSON.parse(localStorage.getItem(\"codigos\"))\r\n            //para ver los codigos activos\r\n            if(me.codigoTipo == 1){\r\n                let primerFiltro = datos.filter(p => p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null);\r\n                me.codigosInstitucion = primerFiltro.filter(p => p.estado_liquidacion =='0' ||  p.estado_liquidacion =='1')\r\n                return\r\n            }\r\n            //para ver los codigos bloqueados\r\n            if(me.codigoTipo == 2){\r\n                let primerFiltro = datos.filter(p => p.estado_liquidacion != '3');\r\n                me.codigosInstitucion = primerFiltro.filter(p => p.estado =='2')\r\n                //me.codigosInstitucion = datos.filter(p => p.estado == '2');\r\n                return\r\n            }\r\n            //para ver los codigos regalados\r\n            if(me.codigoTipo == 4){\r\n                let primerFiltro = datos.filter(p => p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null);\r\n                me.codigosInstitucion = primerFiltro.filter(p => p.estado_liquidacion =='2' && p.liquidado_regalado == '0')\r\n                return\r\n            }\r\n            //para ver los codigos liquidados\r\n            if(me.codigoTipo == 5){\r\n                let primerFiltro = datos.filter(p => p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null);\r\n                me.codigosInstitucion = primerFiltro.filter(p => p.estado_liquidacion =='0')\r\n                return\r\n            }\r\n            //para ver los codigos liquidados regalados\r\n            if(me.codigoTipo == 6){\r\n                me.codigosInstitucion = datos.filter(p => p.estado_liquidacion =='2' && p.liquidado_regalado == '1' )\r\n                return\r\n            }\r\n            //para ver los codigos por liquidarse\r\n            if(me.codigoTipo == 7){\r\n                let primerFiltro = datos.filter(p => (p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null) && (p.estado_liquidacion == 1) && (p.bc_estado ==2));\r\n                me.codigosInstitucion = primerFiltro.filter(p => (p.bc_institucion == this.linstitucion) && (p.bc_periodo == this.lperiodo))\r\n                return\r\n            }\r\n            //para ver los codigos devueltos\r\n            if(me.codigoTipo == 8){\r\n                let primerFiltro = datos.filter(p => p.estado_liquidacion == '3');\r\n                me.codigosInstitucion = primerFiltro\r\n                return\r\n            }\r\n            //para ver los codigos leidos\r\n            if(me.codigoTipo == 9){\r\n                let primerFiltro = datos.filter(p => (p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null) && (p.estado_liquidacion == 1));\r\n                me.codigosInstitucion = primerFiltro.filter(p => p.bc_estado =='2')\r\n                return\r\n\r\n            }\r\n             //para ver los codigos no leidos\r\n            if(me.codigoTipo == 10){\r\n                let primerFiltro = datos.filter(p => (p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null) && (p.estado_liquidacion == 1));\r\n                me.codigosInstitucion = primerFiltro.filter(p => p.bc_estado =='1')\r\n                return\r\n            }\r\n            //para ver todos los codigos\r\n            else{\r\n                me.codigosInstitucion = datos\r\n            }\r\n\r\n        },\r\n        exportar(){\r\n            let me = this\r\n            me.activePrompt=true\r\n            me.exportarRealizar = 2\r\n            me.headerTitle = ['codigo','institucion estudiante','periodo estudiante','libro', 'registrado', 'cedula', 'nombres', 'apellidos', 'email','estado','contrato','liquidacion','código de barras','bc_estado','venta estado','institucion barras','periodo barras'];\r\n            me.headerVal = ['codigo', 'nombreInstitucion','periodo','libro', 'registrado', 'cedula', 'nombres', 'apellidos', 'email','codigoEstado','contrato','liquidacion','status','barrasEstado','ventaEstado','institucionBarra','periodo_barras'];\r\n        },\r\n        openLoadingColor(libro) {\r\n            this.$vs.loading({\r\n                color: '#1A76F2'\r\n            })\r\n        },\r\n        //==METODOS DESCUENTO====\r\n        confirmDescuento(){\r\n            let me          = this;\r\n            let datos       = me.codigoSelected\r\n            let devueltos   = datos.filter(p => p.estado_liquidacion == 3)\r\n            let bloqueados  = datos.filter(p => p.estado == 2 && p.estado_liquidacion != 3)\r\n            let liquidados  = datos.filter(p => (p => p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null ) && p.estado_liquidacion =='0')\r\n            if(devueltos.length > 0 ){\r\n                me.$vs.notify({\r\n                text:'No puede seleccionar códigos devueltos',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n                return\r\n            }\r\n            if(bloqueados.length > 0 ){\r\n                me.$vs.notify({\r\n                text:'No puede seleccionar códigos bloqueados',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n                return\r\n            }\r\n            if(liquidados.length > 0 ){\r\n                me.$vs.notify({\r\n                text:'No puede seleccionar códigos liquidados',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n                return\r\n            }\r\n            me.popupDescuento = true;\r\n        },\r\n        aplicarDescuento(){\r\n            let me = this;\r\n            if(me.valorDescuento == \"\"){\r\n                me.$vs.notify({\r\n                text:'El valor descuento no puede ser vacio',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n                return\r\n            }\r\n            if(me.valorDescuento <= 0){\r\n                me.$vs.notify({\r\n                text:'El valor descuento no puede ser menor a cero',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n                return\r\n            }\r\n            var codigosEnviar = []\r\n            me.codigoSelected.forEach(element => {\r\n                var cal = new Object();\r\n                cal.codigo  = element.codigo\r\n                codigosEnviar.push(cal)\r\n            });\r\n            let formData = new FormData()\r\n            formData.append('codigos',  JSON.stringify(codigosEnviar));\r\n            formData.append('valor',    me.valorDescuento);\r\n            me.$vs.loading()\r\n            this.$http.post(this.$server_url+'guardarDescuentoCodigos', formData)\r\n            .then(res => {\r\n            me.$vs.loading.close()\r\n            me.$vs.notify({\r\n                text:res.data.message,\r\n                color:'success',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n            })\r\n            me.popupDescuento = false\r\n            me.$emit('recharge',true)\r\n            .catch((e) => {\r\n                me.$vs.loading.close()\r\n            })\r\n        },\r\n        //===FIN METODOS DE DESCUENTO CODIGOS=====\r\n    }\r\n}\r\n",{"version":3,"sources":["seccionCodigos.vue"],"names":[],"mappings":";AAofile":"seccionCodigos.vue","sourceRoot":"src/views/codigos/components","sourcesContent":["<template>\r\n    <div>\r\n        <vs-card>\r\n            <div class=\"title\">\r\n                Filtro de codigos\r\n            </div>\r\n            <div class=\"mt-5\">\r\n                <ul style=\"display:flex;flex-wrap: wrap;\">\r\n                    <li>\r\n                    <vs-radio v-model=\"codigoTipo\" vs-name=\"radios1codigoTipo\" @input=\"filtroTipo();\" vs-value=\"0\"><span class=\"font-bold\">{{sumaTotal}}</span> Todos</vs-radio>\r\n                    </li>\r\n                    <li class=\"ml-2\">\r\n                    <vs-radio v-model=\"codigoTipo\" vs-name=\"radios1codigoTipo\" @input=\"filtroTipo();\" vs-value=\"1\"><span style=\"font-weight:bold;\">{{sumarCodigosActivos}}</span> Códigos activos </vs-radio>\r\n                    </li>\r\n                    <li class=\"ml-2\">\r\n                    <vs-radio v-model=\"codigoTipo\" vs-name=\"radios1codigoTipo\"  @input=\"filtroTipo();\" vs-value=\"2\"><span style=\"font-weight:bold;\">{{sumaCodigosBloqueados}}</span> Códigos bloqueados</vs-radio>\r\n                    </li>\r\n                    <li class=\"ml-2\">\r\n                    <vs-radio v-model=\"codigoTipo\" vs-name=\"radios1codigoTipo\"  @input=\"filtroTipo();\" vs-value=\"4\"><span style=\"font-weight:bold;\">{{sumaCodigosRegalados}}</span>  Regalados Sin liquidar</vs-radio>\r\n                    </li>\r\n                    <li class=\"ml-2\">\r\n                    <vs-radio v-model=\"codigoTipo\" vs-name=\"radios1codigoTipo\"  @input=\"filtroTipo();\" vs-value=\"5\"><span style=\"font-weight:bold;\">{{sumarCodigosLiquidados}}</span> Códigos Liquidados </vs-radio>\r\n                    </li>\r\n                    <li class=\"ml-2\">\r\n                    <vs-radio v-model=\"codigoTipo\" vs-name=\"radios1codigoTipo\"  @input=\"filtroTipo();\" vs-value=\"6\"><span style=\"font-weight:bold;\">{{sumaCodigosRegaladosLiquidados}}</span> Regalados Liquidados </vs-radio>\r\n                    </li>\r\n                    <li class=\"ml-2\">\r\n                    <vs-radio v-model=\"codigoTipo\" vs-name=\"radios1codigoTipo\"  @input=\"filtroTipo();\" vs-value=\"7\"><span style=\"font-weight:bold;\">{{sumarCodigosporLiquidarse}}</span> Códigos a liquidarse</vs-radio>\r\n                    </li>\r\n                    <li class=\"ml-2\">\r\n                    <vs-radio v-model=\"codigoTipo\" vs-name=\"radios1codigoTipo\"  @input=\"filtroTipo();\" vs-value=\"8\"><span style=\"font-weight:bold;\">{{SumaCodigosDevolucion}}</span> Códigos devueltos</vs-radio>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <vs-divider>Otros</vs-divider>\r\n            <div class=\"mt-5\">\r\n                <ul style=\"display:flex;flex-wrap: wrap;\">\r\n                    <li class=\"ml-2\">\r\n                    <vs-radio v-model=\"codigoTipo\" vs-name=\"radios1codigoTipo\" @input=\"filtroTipo();\" vs-value=\"9\"><span style=\"font-weight:bold;\">{{sumarCodigosLeidos}}</span> Códigos leidos (No liquidados) </vs-radio>\r\n                    </li>\r\n                    <li class=\"ml-2\">\r\n                    <vs-radio v-model=\"codigoTipo\" vs-name=\"radios1codigoTipo\" @input=\"filtroTipo();\" vs-value=\"10\"><span style=\"font-weight:bold;\">{{sumarCodigosNoleidos}}</span> Códigos sin leer </vs-radio>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </vs-card>\r\n        <vs-card class=\"mt-1\" v-if=\"codigosInstitucion.length > 0\">\r\n          <gestionCodigosListaVue  :arregloCodigos=\"codigosInstitucion\" />\r\n        </vs-card>\r\n        <!--Modales-->\r\n        <!----modal exportar--------->\r\n        <div v-if=\"exportarRealizar == 2\">\r\n            <ExportReutilizable @cerrar=\"activePrompt =$event\" :activePrompt = \"activePrompt\"  :headerTitle =\"headerTitle\" :headerVal=\"headerVal\" :codigoSelected=\"codigoSelected\"/>\r\n        </div>\r\n         <!----fin modal exportar--------->\r\n        <vs-popup class=\"holamundo\" fullscreen title=\"Aplicar descuento a códigos\" :active.sync=\"popupDescuento\">\r\n            <div>\r\n                <!-- USERNAME -->\r\n                <vx-input-group class=\"mb-base\">\r\n                    <template slot=\"prepend\">\r\n                    <div class=\"prepend-text bg-primary\">\r\n                        <span>Ingrese el valor de descuento %</span>\r\n                    </div>\r\n                    </template>\r\n\r\n                    <vs-input v-model=\"valorDescuento\" />\r\n                </vx-input-group>\r\n                <!-- /USERNAME -->\r\n            </div>\r\n            <vs-divider>\r\n                <span>Estas seguro de aplicar este descuento a estos códigos?</span>\r\n                <vs-button class=\"ml-2\" color=\"warning\" @click=\"aplicarDescuento()\" type=\"border\"><ion-icon name=\"checkmark-outline\"></ion-icon> Aplicar Descuento</vs-button>\r\n            </vs-divider>\r\n            <CodigosDescuentoVue :codigoSelected=\"codigoSelected\"/>\r\n        </vs-popup>\r\n    </div>\r\n</template>\r\n<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js\" integrity=\"sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl\" crossorigin=\"anonymous\"></script>\r\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.13.1/js/all.min.js\" integrity=\"sha512-M+hXwltZ3+0nFQJiVke7pqXY7VdtWW2jVG31zrml+eteTP7im25FdwtLhIBTWkaHRQyPrhO2uy8glLMHZzhFog==\" crossorigin=\"anonymous\"></script>\r\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js\"></script>\r\n<script src=\"https://raw.githubusercontent.com/eligrey/FileSaver.js/master/dist/FileSaver.min.js\"></script>\r\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/blob-polyfill/4.0.20200601/Blob.min.js\"></script>\r\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/xls/0.7.6/xls.core.min.js\"></script>\r\n<script>\r\nimport ExportReutilizable from '../../admin/components/ExportReutilizable.vue'\r\nimport CodigosDescuentoVue from './utils/CodigosDescuento'\r\nimport gestionCodigosListaVue from './utils/gestionCodigosLista.vue';\r\nimport flatPickr from 'vue-flatpickr-component';\r\nimport 'flatpickr/dist/flatpickr.css';\r\nimport Vue from 'vue'\r\nimport axios from 'axios'\r\nimport vSelect from 'vue-select'\r\nimport moment from 'moment'\r\nimport $ from 'jquery'\r\nexport default {\r\n  components:{\r\n    'v-select': vSelect,\r\n    ExportReutilizable,\r\n    CodigosDescuentoVue,\r\n    gestionCodigosListaVue,\r\n  },\r\n    data() {\r\n        return{\r\n             //listado de ciudades para el select\r\n            arregloCiudad:[],\r\n             liquidacion:{\r\n                institucion:'',\r\n                periodo:'',\r\n                condicion:'1',\r\n            },\r\n            arregloPeriodos:[],\r\n            ciudadSelect:'',\r\n            arregloTraeInstitucion:[],\r\n            codigosInstitucion: [],\r\n            codigoSelected: [],\r\n            activePrompt:false,\r\n\r\n            guardarActivo:'',\r\n            generarActivo:'',\r\n            textAlertCant:'',\r\n            cantidad:'',\r\n            arregloCodigos:[],\r\n            codigoTipo:'0',\r\n            headerTitle:[],\r\n            headerVal:[],\r\n            exportarRealizar:1,\r\n            //VARIABLES PARA DESCUENTO\r\n            popupDescuento:false,\r\n            valorDescuento:'',\r\n            //FIN variables para descuento\r\n        }\r\n    },\r\n    props:{\r\n        arregloCodigosIndividuales:{\r\n            type:Array,\r\n            default: []\r\n        },\r\n        lperiodo:{\r\n            type:Number,\r\n            default: 0\r\n        },\r\n        linstitucion:{\r\n            type:Number,\r\n            default: 0\r\n        }\r\n    },\r\n    watch:{\r\n        arregloCodigosIndividuales(results){\r\n            this.reRenderCodigos(results)\r\n            this.codigoSelected  = []\r\n        }\r\n    },\r\n    created(){\r\n        let me = this;\r\n        // me.listaCiudades();\r\n    },\r\n    computed:{\r\n        sumaTotal(){\r\n            let me    = this;\r\n            let total = me.arregloCodigos.length\r\n            return total\r\n        },\r\n        SumaCodigosDevolucion(){\r\n            let me = this;\r\n            let datos       = me.arregloCodigos.filter(p => p.estado_liquidacion == '3');\r\n            let resultado   = datos.length\r\n            return resultado\r\n        },\r\n        sumaCodigosRegalados(){\r\n            let me = this;\r\n            let primerFiltro = me.arregloCodigos.filter(p => p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null);\r\n            let datos        = primerFiltro.filter(p => p.estado_liquidacion =='2'  && p.liquidado_regalado == '0')\r\n            let resultado    = datos.length\r\n            return resultado\r\n        },\r\n        sumaCodigosRegaladosLiquidados(){\r\n            let me = this;\r\n            let datos        = me.arregloCodigos.filter(p => p.estado_liquidacion =='2' && p.liquidado_regalado == '1')\r\n            let resultado    = datos.length\r\n            return resultado\r\n        },\r\n        sumaCodigosBloqueados(){\r\n            let me = this;\r\n             let primerFiltro = me.arregloCodigos.filter(p => p.estado_liquidacion != '3');\r\n            let datos         = primerFiltro.filter(p => p.estado == '2')\r\n            let resultado     = datos.length\r\n            return resultado\r\n        },\r\n        sumarCodigosActivos(){\r\n            let me = this;\r\n            let primerFiltro = me.arregloCodigos.filter(p => p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null);\r\n            let datos        = primerFiltro.filter(p => p.estado_liquidacion =='0' ||  p.estado_liquidacion =='1')\r\n            let resultado    = datos.length\r\n            return resultado\r\n        },\r\n        sumarCodigosLiquidados(){\r\n            let me = this;\r\n            let primerFiltro = me.arregloCodigos.filter(p => p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null);\r\n            let datos        = primerFiltro.filter(p => p.estado_liquidacion =='0')\r\n            let resultado    = datos.length\r\n            return resultado\r\n        },\r\n        sumarCodigosporLiquidarse(){\r\n            let me = this;\r\n            let primerFiltro = me.arregloCodigos.filter(p => (p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null) && (p.estado_liquidacion == 1) && (p.bc_estado =='2'));\r\n            let datos        = primerFiltro.filter(p => (p.bc_institucion == this.linstitucion) && (p.bc_periodo == this.lperiodo))\r\n            let resultado    = datos.length\r\n            return resultado\r\n        },\r\n        // sumarCodigosporLiquidarse(){\r\n        //     let me = this;\r\n        //     let primerFiltro = me.arregloCodigos.filter(p => p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null);\r\n        //     let datos        = primerFiltro.filter(p => p.estado_liquidacion =='1')\r\n        //     let resultado    = datos.length\r\n        //     return resultado\r\n        // },\r\n         sumarCodigosLeidos(){\r\n            let me = this;\r\n            let primerFiltro = me.arregloCodigos.filter(p => (p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null) && (p.estado_liquidacion == 1));\r\n            let datos        = primerFiltro.filter(p => p.bc_estado =='2')\r\n            let resultado    = datos.length\r\n            return resultado\r\n        },\r\n         sumarCodigosNoleidos(){\r\n            let me = this;\r\n            let primerFiltro = me.arregloCodigos.filter(p => (p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null) && (p.estado_liquidacion == 1));\r\n            let datos        = primerFiltro.filter(p => p.bc_estado =='1')\r\n            let resultado    = datos.length\r\n            return resultado\r\n        }\r\n    },\r\n    methods:{\r\n        reRenderCodigos(results){\r\n            const me = this\r\n            me.codigosInstitucion = results\r\n            me.arregloCodigos = results\r\n            localStorage.setItem('codigos',JSON.stringify(results))\r\n        },\r\n        filtroTipo(){\r\n            let me = this;\r\n            let datos =JSON.parse(localStorage.getItem(\"codigos\"))\r\n            //para ver los codigos activos\r\n            if(me.codigoTipo == 1){\r\n                let primerFiltro = datos.filter(p => p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null);\r\n                me.codigosInstitucion = primerFiltro.filter(p => p.estado_liquidacion =='0' ||  p.estado_liquidacion =='1')\r\n                return\r\n            }\r\n            //para ver los codigos bloqueados\r\n            if(me.codigoTipo == 2){\r\n                let primerFiltro = datos.filter(p => p.estado_liquidacion != '3');\r\n                me.codigosInstitucion = primerFiltro.filter(p => p.estado =='2')\r\n                //me.codigosInstitucion = datos.filter(p => p.estado == '2');\r\n                return\r\n            }\r\n            //para ver los codigos regalados\r\n            if(me.codigoTipo == 4){\r\n                let primerFiltro = datos.filter(p => p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null);\r\n                me.codigosInstitucion = primerFiltro.filter(p => p.estado_liquidacion =='2' && p.liquidado_regalado == '0')\r\n                return\r\n            }\r\n            //para ver los codigos liquidados\r\n            if(me.codigoTipo == 5){\r\n                let primerFiltro = datos.filter(p => p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null);\r\n                me.codigosInstitucion = primerFiltro.filter(p => p.estado_liquidacion =='0')\r\n                return\r\n            }\r\n            //para ver los codigos liquidados regalados\r\n            if(me.codigoTipo == 6){\r\n                me.codigosInstitucion = datos.filter(p => p.estado_liquidacion =='2' && p.liquidado_regalado == '1' )\r\n                return\r\n            }\r\n            //para ver los codigos por liquidarse\r\n            if(me.codigoTipo == 7){\r\n                let primerFiltro = datos.filter(p => (p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null) && (p.estado_liquidacion == 1) && (p.bc_estado ==2));\r\n                me.codigosInstitucion = primerFiltro.filter(p => (p.bc_institucion == this.linstitucion) && (p.bc_periodo == this.lperiodo))\r\n                return\r\n            }\r\n            //para ver los codigos devueltos\r\n            if(me.codigoTipo == 8){\r\n                let primerFiltro = datos.filter(p => p.estado_liquidacion == '3');\r\n                me.codigosInstitucion = primerFiltro\r\n                return\r\n            }\r\n            //para ver los codigos leidos\r\n            if(me.codigoTipo == 9){\r\n                let primerFiltro = datos.filter(p => (p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null) && (p.estado_liquidacion == 1));\r\n                me.codigosInstitucion = primerFiltro.filter(p => p.bc_estado =='2')\r\n                return\r\n\r\n            }\r\n             //para ver los codigos no leidos\r\n            if(me.codigoTipo == 10){\r\n                let primerFiltro = datos.filter(p => (p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null) && (p.estado_liquidacion == 1));\r\n                me.codigosInstitucion = primerFiltro.filter(p => p.bc_estado =='1')\r\n                return\r\n            }\r\n            //para ver todos los codigos\r\n            else{\r\n                me.codigosInstitucion = datos\r\n            }\r\n\r\n        },\r\n        exportar(){\r\n            let me = this\r\n            me.activePrompt=true\r\n            me.exportarRealizar = 2\r\n            me.headerTitle = ['codigo','institucion estudiante','periodo estudiante','libro', 'registrado', 'cedula', 'nombres', 'apellidos', 'email','estado','contrato','liquidacion','código de barras','bc_estado','venta estado','institucion barras','periodo barras'];\r\n            me.headerVal = ['codigo', 'nombreInstitucion','periodo','libro', 'registrado', 'cedula', 'nombres', 'apellidos', 'email','codigoEstado','contrato','liquidacion','status','barrasEstado','ventaEstado','institucionBarra','periodo_barras'];\r\n        },\r\n        openLoadingColor(libro) {\r\n            this.$vs.loading({\r\n                color: '#1A76F2'\r\n            })\r\n        },\r\n        //==METODOS DESCUENTO====\r\n        confirmDescuento(){\r\n            let me          = this;\r\n            let datos       = me.codigoSelected\r\n            let devueltos   = datos.filter(p => p.estado_liquidacion == 3)\r\n            let bloqueados  = datos.filter(p => p.estado == 2 && p.estado_liquidacion != 3)\r\n            let liquidados  = datos.filter(p => (p => p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null ) && p.estado_liquidacion =='0')\r\n            if(devueltos.length > 0 ){\r\n                me.$vs.notify({\r\n                text:'No puede seleccionar códigos devueltos',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n                return\r\n            }\r\n            if(bloqueados.length > 0 ){\r\n                me.$vs.notify({\r\n                text:'No puede seleccionar códigos bloqueados',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n                return\r\n            }\r\n            if(liquidados.length > 0 ){\r\n                me.$vs.notify({\r\n                text:'No puede seleccionar códigos liquidados',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n                return\r\n            }\r\n            me.popupDescuento = true;\r\n        },\r\n        aplicarDescuento(){\r\n            let me = this;\r\n            if(me.valorDescuento == \"\"){\r\n                me.$vs.notify({\r\n                text:'El valor descuento no puede ser vacio',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n                return\r\n            }\r\n            if(me.valorDescuento <= 0){\r\n                me.$vs.notify({\r\n                text:'El valor descuento no puede ser menor a cero',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n                return\r\n            }\r\n            var codigosEnviar = []\r\n            me.codigoSelected.forEach(element => {\r\n                var cal = new Object();\r\n                cal.codigo  = element.codigo\r\n                codigosEnviar.push(cal)\r\n            });\r\n            let formData = new FormData()\r\n            formData.append('codigos',  JSON.stringify(codigosEnviar));\r\n            formData.append('valor',    me.valorDescuento);\r\n            me.$vs.loading()\r\n            this.$http.post(this.$server_url+'guardarDescuentoCodigos', formData)\r\n            .then(res => {\r\n            me.$vs.loading.close()\r\n            me.$vs.notify({\r\n                text:res.data.message,\r\n                color:'success',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n            })\r\n            me.popupDescuento = false\r\n            me.$emit('recharge',true)\r\n            .catch((e) => {\r\n                me.$vs.loading.close()\r\n            })\r\n        },\r\n        //===FIN METODOS DE DESCUENTO CODIGOS=====\r\n    }\r\n}\r\n</script>\r\n"]}]}