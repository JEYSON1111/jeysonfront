{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\codigos\\components\\utils\\RevisionVenta.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\codigos\\components\\utils\\RevisionVenta.vue","mtime":1712682815649},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\n  import {\r\n    mapState\r\n} from \"vuex\";\r\nimport gestionCodigosListaVue from './gestionCodigosLista.vue';\r\nimport RevisionVentaAgrupadoVue from './RevisionVentaAgrupado.vue';\r\nexport default{\r\n  data(){\r\n    return{\r\n      menu:0,\r\n      informacion:[],\r\n      tmpinformacion:[],\r\n      codigosNoCambiados:[],\r\n      arreglocodigosALeidos:[],\r\n      codigosPerdidos:false,\r\n      porcentaje:0,\r\n      rtipoVenta:0,\r\n      periodo_id:0,\r\n      periodoDescripcion:'',\r\n      nombreInstitucion: \"\",\r\n      institucion_id:0,\r\n      totalAleer:0,\r\n      groupedData:[],\r\n    }\r\n  },\r\n  created(){\r\n    let me = this\r\n    me.usuario = JSON.parse(localStorage.getItem(\"usuario\"))\r\n  },\r\n  mounted(){\r\n    let me = this;\r\n    me.getTipoVenta()\r\n  },\r\n  components:{\r\n    gestionCodigosListaVue,\r\n    RevisionVentaAgrupadoVue,\r\n  },\r\n  props:{\r\n    pedido:{\r\n      type:Object,\r\n      default:{}\r\n    },\r\n    showAgrupado:{\r\n      type:Number,\r\n      default:0\r\n    }\r\n  },\r\n  computed:{\r\n    ...mapState([\"auth\",'userRoot','susuario','userAsesor']),\r\n    sumaTotal(){\r\n      let me = this;\r\n      let total = me.informacion.length\r\n      return total\r\n    },\r\n    SumaVentaDirecta(){\r\n      let me = this;\r\n      let datos       = me.informacion.filter(p => p.venta_estado == '1')\r\n      let resultado   = datos.length\r\n      return resultado\r\n    },\r\n    SumaVentaLista(){\r\n      let me = this;\r\n      let datos       = me.informacion.filter(p => p.venta_estado == '2')\r\n      let resultado   = datos.length\r\n      return resultado\r\n    },\r\n    SumaEnviados(){\r\n      let me = this;\r\n      //venta directa\r\n      let datos       = me.informacion.filter(p => p.venta_estado == '1')\r\n      let totalVD   = datos.length\r\n      let datos2       = me.informacion.filter(p => p.venta_estado == '2')\r\n      //venta lista\r\n      let totalVL   = datos2.length\r\n      let resultado = totalVD + totalVL\r\n      return resultado\r\n    },\r\n    SumaCodigosDevolucion(){\r\n      let me = this;\r\n      let datos       = me.informacion.filter(p => p.estado_liquidacion == '3');\r\n      let resultado   = datos.length\r\n      return resultado\r\n    },\r\n    sumaCodigosRegalados(){\r\n      let me = this;\r\n      let primerFiltro = me.informacion.filter(p => p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null);\r\n      let datos        = primerFiltro.filter(p => p.estado_liquidacion =='2')\r\n      let resultado    = datos.length\r\n      return resultado\r\n    },\r\n    sumaCodigosBloqueados(){\r\n      let me = this;\r\n      let primerFiltro = me.informacion.filter(p => p.estado_liquidacion != '3');\r\n      let datos         = primerFiltro.filter(p => p.estado == '2')\r\n      let resultado     = datos.length\r\n      return resultado\r\n    },\r\n    sumarCodigosLiquidados(){\r\n      let me = this;\r\n      let primerFiltro = me.informacion.filter(p => p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null);\r\n      let datos        = primerFiltro.filter(p => p.estado_liquidacion =='0')\r\n      let resultado    = datos.length\r\n      return resultado\r\n    },\r\n    sumarCodigosLeidos(){\r\n      let me = this;\r\n      let primerFiltro = me.informacion.filter(p => (p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null) && (p.estado_liquidacion == 1));\r\n      let datos        = primerFiltro.filter(p => p.bc_estado =='2')\r\n      let resultado    = datos.length\r\n      return resultado\r\n    },\r\n    sumarCodigosNoleidos(){\r\n      let me = this;\r\n      let primerFiltro          = me.informacion.filter(p => (p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null) && (p.estado_liquidacion == 1));\r\n      let datos                 = primerFiltro.filter(p => p.bc_estado =='1')\r\n      let resultado             = datos.length\r\n      return resultado\r\n    }\r\n  },\r\n  methods:{\r\n    getTipoVenta() {\r\n      let me = this;\r\n      me.informacion = []\r\n      me.tmpinformacion = []\r\n      me.nombreInstitucion    = me.pedido.nombreInstitucion\r\n      me.institucion_id       = me.pedido.idInstitucion\r\n      me.periodoDescripcion   = me.pedido.periodo\r\n      me.periodo_id           = me.pedido.periodo_id\r\n      me.titulo = 'Detalle de venta de ' + me.pedido.nombreInstitucion\r\n      me.$vs.loading();\r\n      this.$http.get(this.$server_url+'getTipoVenta?institucion_id='+me.pedido.idInstitucion+'&periodo_id='+me.pedido.periodo_id)\r\n        .then(function (res) {\r\n          me.informacion = res.data\r\n          let datos      = res.data.filter(p => p.estado_liquidacion != '3' && p.estado_liquidacion != '4' && p.estado != '2')\r\n          // Objeto para almacenar los grupos\r\n          me.groupedData = [];\r\n          // Itera a través de los elementos del array\r\n          datos.forEach(item => {\r\n            const libro = item.libro;\r\n            // Busca si ya existe un objeto con el mismo libro en groupedData\r\n            const existingGroup = me.groupedData.find(group => group.libro === libro);\r\n            // Si no existe, crea un nuevo objeto y agrégalo a groupedData\r\n            if (!existingGroup) {\r\n              me.groupedData.push({ libro, cantidad: 1 });\r\n            } else {\r\n              // Si existe, incrementa la cantidad en el objeto existente\r\n              existingGroup.cantidad++;\r\n            }\r\n          });\r\n          me.verTipoVenta()\r\n          me.$vs.loading.close()\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error + ' error');\r\n          me.$vs.loading.close()\r\n        })\r\n    },\r\n    verTipoVenta(){\r\n      let me = this;\r\n      me.tmpinformacion   = []\r\n      let datos           = me.informacion\r\n      if(me.rtipoVenta == 0){\r\n        me.tmpinformacion = datos\r\n        return\r\n      }\r\n      me.tmpinformacion = datos.filter(p => p.venta_estado == me.rtipoVenta)\r\n      me.totalAleer     = me.tmpinformacion.filter(p => (p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null) && (p.estado_liquidacion == 1) && (p.bc_estado == 1));\r\n    },\r\n    cambiarALeidos(){\r\n      let me = this\r\n      if(me.institucion_id  <  1){\r\n        me.$vs.notify({\r\n        text:'Seleccione una institucion',\r\n        color:'warning',\r\n        iconPack: 'feather',\r\n        icon:'icon-check'})\r\n        return false;\r\n      }\r\n      if(me.periodo_id == null || me.periodo_id == 0 || me.periodo_id == undefined || me.periodoDescripcion == \"\"){\r\n        me.$vs.notify({\r\n        text:'Seleccione una período',\r\n        color:'warning',\r\n        iconPack: 'feather',\r\n        icon:'icon-check'})\r\n        return false;\r\n      }\r\n      if(me.tmpinformacion.length == 0){\r\n        me.$vs.notify({\r\n        text:'No hay códigos por leer ',\r\n        color:'warning',\r\n        iconPack: 'feather',\r\n        icon:'icon-check'})\r\n        return false;\r\n      }\r\n      //setear valores\r\n      let datoFilter = me.tmpinformacion.filter(p => (p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null) && (p.estado_liquidacion == 1) && (p.bc_estado == 1));\r\n      if(datoFilter.length == 0){\r\n        me.$vs.notify({\r\n        text:'No hay códigos por leer ',\r\n        color:'warning',\r\n        iconPack: 'feather',\r\n        icon:'icon-check'})\r\n        return false;\r\n      }\r\n      var sendEnviar = []\r\n      me.tmpinformacion.forEach(element => {\r\n        var cal = new Object();\r\n        cal.codigo = element.codigo\r\n        sendEnviar.push(cal)\r\n      });\r\n      me.$vs.loading()\r\n      let json_codigos = JSON.stringify(sendEnviar)\r\n      let formData = new FormData();\r\n      formData.append('data_codigos',     json_codigos);\r\n      formData.append('id_usuario',       me.usuario.idusuario);\r\n      formData.append('periodo_id',       me.periodo_id);\r\n      formData.append('institucion_id',   me.institucion_id)\r\n      formData.append('nombreInstitucion',me.nombreInstitucion)\r\n      formData.append('nombrePeriodo',    me.periodoDescripcion)\r\n      formData.append('venta_estado',     me.rtipoVenta)\r\n      // this.$http.post(this.$server_url+'codigos/leidos/venta_directa', formData)\r\n      this.$http.post(this.$server_url+'codigos/importar', formData)\r\n      .then(res => {\r\n          me.$vs.loading.close()\r\n          if(res.data.status == 0){\r\n            me.$vs.notify({\r\n            text:res.data.message,\r\n            color:'success',\r\n            iconPack: 'feather',\r\n            icon:'icon-check'})\r\n            return false\r\n          }\r\n          me.$vs.notify({\r\n          text:'Códigos procesados exitosamente',\r\n          color:'success',\r\n          iconPack: 'feather',\r\n          icon:'icon-check'})\r\n          me.codigosPerdidos    = true\r\n          me.codigosLeidos      = res.data.codigosLeidos\r\n          me.codigosNoCambiados = res.data.codigosNoCambiados\r\n          me.codigoNoExiste     = res.data.codigoNoExiste\r\n          me.porcentaje         = res.data.cambiados\r\n          me.getTipoVenta()\r\n      })\r\n      .catch(function (error) {\r\n          me.$vs.notify({\r\n          text:'Verifique que la información se haya guardado correctamente.',\r\n          color:'warning',\r\n          iconPack: 'feather',\r\n          icon:'icon-alert-triangle'})\r\n          me.$vs.loading.close()\r\n      })\r\n    },\r\n  }\r\n}\r\n",{"version":3,"sources":["RevisionVenta.vue"],"names":[],"mappingsfile":"RevisionVenta.vue","sourceRoot":"src/views/codigos/components/utils","sourcesContent":["<template>\r\n  <div>\r\n    <vs-tabs :color=\"'#F5B041'\">\r\n      <vs-tab label=\"Detalle de venta\" icon-pack=\"feather\" icon=\"icon-shopping-bag\" @click=\"menu = 0;\">\r\n      </vs-tab>\r\n      <vs-tab v-if=\"showAgrupado == '1'\" label=\"Agrupado de venta\" icon-pack=\"feather\" icon=\"icon-aperture\" @click=\"menu = 1;\">\r\n      </vs-tab>\r\n    </vs-tabs>\r\n    <div v-if=\"menu == 0\">\r\n      <vs-card>\r\n        <ul class=\"flex\">\r\n          <li>\r\n            <vs-radio v-model=\"rtipoVenta\" @input=\"verTipoVenta()\" vs-name=\"rradios1\" vs-value=\"0\">Todo: <b>{{ sumaTotal }}</b></vs-radio>\r\n          </li>\r\n          <li>\r\n            <vs-radio v-model=\"rtipoVenta\" @input=\"verTipoVenta()\" class=\"ml-2\" vs-name=\"rradios1\" vs-value=\"1\">Venta directa: <b>{{ SumaVentaDirecta }}</b></vs-radio>\r\n          </li>\r\n          <li>\r\n            <vs-radio v-model=\"rtipoVenta\" @input=\"verTipoVenta()\" class=\"ml-2\" vs-name=\"rradios1\" vs-value=\"2\">Venta lista: <b>{{ SumaVentaLista }}</b></vs-radio>\r\n          </li>\r\n        </ul>\r\n        <vs-button v-if=\"rtipoVenta == 1\" @click=\"cambiarALeidos()\" class=\"mt-1\" color=\"primary\" type=\"border\">Pasar a liquidar {{ totalAleer.length }} códigos</vs-button>\r\n        <vs-button v-if=\"rtipoVenta == 2 && userRoot\" @click=\"cambiarALeidos()\" class=\"mt-1\" color=\"primary\" type=\"border\">Pasar a liquidar {{ totalAleer.length }} códigos</vs-button>\r\n      </vs-card>\r\n      <vx-card>\r\n        <vs-list-header :title=\"'Total enviados: '    + SumaEnviados \"></vs-list-header>\r\n        <vs-list-header :title=\"'Total devueltos: '   + SumaCodigosDevolucion \"></vs-list-header>\r\n        <vs-list-header :title=\"'Total regalados: '   + sumaCodigosRegalados \"></vs-list-header>\r\n        <vs-list-header :title=\"'Total Bloqueados: '  + sumaCodigosBloqueados \"></vs-list-header>\r\n        <vs-list-header :title=\"'Total Liquidados: '  + sumarCodigosLiquidados \"></vs-list-header>\r\n        <vs-list-header :title=\"'Total: '             + (SumaEnviados - SumaCodigosDevolucion) \"></vs-list-header>\r\n        <vs-list-header :title=\"'Total leídos: '      + sumarCodigosLeidos \"></vs-list-header>\r\n        <vs-list-header :title=\"'Total no leídos: '   + sumarCodigosNoleidos \"></vs-list-header>\r\n      </vx-card>\r\n      <div class=\"header mt-3\">\r\n        <vs-row v-if=\"codigosPerdidos\">\r\n          <vs-col vs-type=\"flex\" vs-justify=\"center\" class=\"mt-3\" vs-align=\"center\" vs-w=\"12\">\r\n            <vs-alert active=\"true\">\r\n              Se cambio {{ porcentaje }} códigos a leído\r\n            </vs-alert>\r\n          </vs-col>\r\n          <vs-col vs-type=\"flex\" v-if=\"codigosNoCambiados.length > 0\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\">\r\n            <vs-list>\r\n              <vs-list-header icon=\"supervisor_account\" title=\"Códigos que no se pudieron cambiar\"></vs-list-header>\r\n              <vs-list-item :key=\"indextr\" v-for=\"(tr, indextr) in codigosNoCambiados\" icon=\"check\" :title=\"tr.codigo\" >\r\n              </vs-list-item>\r\n            </vs-list>\r\n          </vs-col>\r\n        </vs-row>\r\n        <vs-row v-if=\"codigosPerdidos == true\">\r\n          <vs-card v-if=\"codigosLeidos.length > 0\">\r\n            <vs-collapse accordion >\r\n              <vs-collapse-item class=\"mt-2\">\r\n                <div slot=\"header\">\r\n                  Códigos que no se leyeron <ion-icon style=\"font-size:18px;position: relative;top:5px;\" name=\"arrow-down-circle-outline\"></ion-icon>\r\n                </div>\r\n              <gestionCodigosListaVue :arregloCodigos=\"codigosLeidos\"/>\r\n              </vs-collapse-item>\r\n            </vs-collapse>\r\n          </vs-card>\r\n        </vs-row>\r\n        <vs-divider></vs-divider>\r\n      </div>\r\n      <gestionCodigosListaVue :arregloCodigos=\"tmpinformacion\"/>\r\n    </div>\r\n    <div v-if=\"menu == 1\">\r\n      <vs-alert color=\"primary\">\r\n        <p>! Códigos activos cargados por bodega, no se incluyen los códigos devueltos y/o bloqueados.</p>\r\n      </vs-alert>\r\n      <RevisionVentaAgrupadoVue :groupedData=\"groupedData\"/>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\n  import {\r\n    mapState\r\n} from \"vuex\";\r\nimport gestionCodigosListaVue from './gestionCodigosLista.vue';\r\nimport RevisionVentaAgrupadoVue from './RevisionVentaAgrupado.vue';\r\nexport default{\r\n  data(){\r\n    return{\r\n      menu:0,\r\n      informacion:[],\r\n      tmpinformacion:[],\r\n      codigosNoCambiados:[],\r\n      arreglocodigosALeidos:[],\r\n      codigosPerdidos:false,\r\n      porcentaje:0,\r\n      rtipoVenta:0,\r\n      periodo_id:0,\r\n      periodoDescripcion:'',\r\n      nombreInstitucion: \"\",\r\n      institucion_id:0,\r\n      totalAleer:0,\r\n      groupedData:[],\r\n    }\r\n  },\r\n  created(){\r\n    let me = this\r\n    me.usuario = JSON.parse(localStorage.getItem(\"usuario\"))\r\n  },\r\n  mounted(){\r\n    let me = this;\r\n    me.getTipoVenta()\r\n  },\r\n  components:{\r\n    gestionCodigosListaVue,\r\n    RevisionVentaAgrupadoVue,\r\n  },\r\n  props:{\r\n    pedido:{\r\n      type:Object,\r\n      default:{}\r\n    },\r\n    showAgrupado:{\r\n      type:Number,\r\n      default:0\r\n    }\r\n  },\r\n  computed:{\r\n    ...mapState([\"auth\",'userRoot','susuario','userAsesor']),\r\n    sumaTotal(){\r\n      let me = this;\r\n      let total = me.informacion.length\r\n      return total\r\n    },\r\n    SumaVentaDirecta(){\r\n      let me = this;\r\n      let datos       = me.informacion.filter(p => p.venta_estado == '1')\r\n      let resultado   = datos.length\r\n      return resultado\r\n    },\r\n    SumaVentaLista(){\r\n      let me = this;\r\n      let datos       = me.informacion.filter(p => p.venta_estado == '2')\r\n      let resultado   = datos.length\r\n      return resultado\r\n    },\r\n    SumaEnviados(){\r\n      let me = this;\r\n      //venta directa\r\n      let datos       = me.informacion.filter(p => p.venta_estado == '1')\r\n      let totalVD   = datos.length\r\n      let datos2       = me.informacion.filter(p => p.venta_estado == '2')\r\n      //venta lista\r\n      let totalVL   = datos2.length\r\n      let resultado = totalVD + totalVL\r\n      return resultado\r\n    },\r\n    SumaCodigosDevolucion(){\r\n      let me = this;\r\n      let datos       = me.informacion.filter(p => p.estado_liquidacion == '3');\r\n      let resultado   = datos.length\r\n      return resultado\r\n    },\r\n    sumaCodigosRegalados(){\r\n      let me = this;\r\n      let primerFiltro = me.informacion.filter(p => p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null);\r\n      let datos        = primerFiltro.filter(p => p.estado_liquidacion =='2')\r\n      let resultado    = datos.length\r\n      return resultado\r\n    },\r\n    sumaCodigosBloqueados(){\r\n      let me = this;\r\n      let primerFiltro = me.informacion.filter(p => p.estado_liquidacion != '3');\r\n      let datos         = primerFiltro.filter(p => p.estado == '2')\r\n      let resultado     = datos.length\r\n      return resultado\r\n    },\r\n    sumarCodigosLiquidados(){\r\n      let me = this;\r\n      let primerFiltro = me.informacion.filter(p => p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null);\r\n      let datos        = primerFiltro.filter(p => p.estado_liquidacion =='0')\r\n      let resultado    = datos.length\r\n      return resultado\r\n    },\r\n    sumarCodigosLeidos(){\r\n      let me = this;\r\n      let primerFiltro = me.informacion.filter(p => (p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null) && (p.estado_liquidacion == 1));\r\n      let datos        = primerFiltro.filter(p => p.bc_estado =='2')\r\n      let resultado    = datos.length\r\n      return resultado\r\n    },\r\n    sumarCodigosNoleidos(){\r\n      let me = this;\r\n      let primerFiltro          = me.informacion.filter(p => (p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null) && (p.estado_liquidacion == 1));\r\n      let datos                 = primerFiltro.filter(p => p.bc_estado =='1')\r\n      let resultado             = datos.length\r\n      return resultado\r\n    }\r\n  },\r\n  methods:{\r\n    getTipoVenta() {\r\n      let me = this;\r\n      me.informacion = []\r\n      me.tmpinformacion = []\r\n      me.nombreInstitucion    = me.pedido.nombreInstitucion\r\n      me.institucion_id       = me.pedido.idInstitucion\r\n      me.periodoDescripcion   = me.pedido.periodo\r\n      me.periodo_id           = me.pedido.periodo_id\r\n      me.titulo = 'Detalle de venta de ' + me.pedido.nombreInstitucion\r\n      me.$vs.loading();\r\n      this.$http.get(this.$server_url+'getTipoVenta?institucion_id='+me.pedido.idInstitucion+'&periodo_id='+me.pedido.periodo_id)\r\n        .then(function (res) {\r\n          me.informacion = res.data\r\n          let datos      = res.data.filter(p => p.estado_liquidacion != '3' && p.estado_liquidacion != '4' && p.estado != '2')\r\n          // Objeto para almacenar los grupos\r\n          me.groupedData = [];\r\n          // Itera a través de los elementos del array\r\n          datos.forEach(item => {\r\n            const libro = item.libro;\r\n            // Busca si ya existe un objeto con el mismo libro en groupedData\r\n            const existingGroup = me.groupedData.find(group => group.libro === libro);\r\n            // Si no existe, crea un nuevo objeto y agrégalo a groupedData\r\n            if (!existingGroup) {\r\n              me.groupedData.push({ libro, cantidad: 1 });\r\n            } else {\r\n              // Si existe, incrementa la cantidad en el objeto existente\r\n              existingGroup.cantidad++;\r\n            }\r\n          });\r\n          me.verTipoVenta()\r\n          me.$vs.loading.close()\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error + ' error');\r\n          me.$vs.loading.close()\r\n        })\r\n    },\r\n    verTipoVenta(){\r\n      let me = this;\r\n      me.tmpinformacion   = []\r\n      let datos           = me.informacion\r\n      if(me.rtipoVenta == 0){\r\n        me.tmpinformacion = datos\r\n        return\r\n      }\r\n      me.tmpinformacion = datos.filter(p => p.venta_estado == me.rtipoVenta)\r\n      me.totalAleer     = me.tmpinformacion.filter(p => (p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null) && (p.estado_liquidacion == 1) && (p.bc_estado == 1));\r\n    },\r\n    cambiarALeidos(){\r\n      let me = this\r\n      if(me.institucion_id  <  1){\r\n        me.$vs.notify({\r\n        text:'Seleccione una institucion',\r\n        color:'warning',\r\n        iconPack: 'feather',\r\n        icon:'icon-check'})\r\n        return false;\r\n      }\r\n      if(me.periodo_id == null || me.periodo_id == 0 || me.periodo_id == undefined || me.periodoDescripcion == \"\"){\r\n        me.$vs.notify({\r\n        text:'Seleccione una período',\r\n        color:'warning',\r\n        iconPack: 'feather',\r\n        icon:'icon-check'})\r\n        return false;\r\n      }\r\n      if(me.tmpinformacion.length == 0){\r\n        me.$vs.notify({\r\n        text:'No hay códigos por leer ',\r\n        color:'warning',\r\n        iconPack: 'feather',\r\n        icon:'icon-check'})\r\n        return false;\r\n      }\r\n      //setear valores\r\n      let datoFilter = me.tmpinformacion.filter(p => (p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null) && (p.estado_liquidacion == 1) && (p.bc_estado == 1));\r\n      if(datoFilter.length == 0){\r\n        me.$vs.notify({\r\n        text:'No hay códigos por leer ',\r\n        color:'warning',\r\n        iconPack: 'feather',\r\n        icon:'icon-check'})\r\n        return false;\r\n      }\r\n      var sendEnviar = []\r\n      me.tmpinformacion.forEach(element => {\r\n        var cal = new Object();\r\n        cal.codigo = element.codigo\r\n        sendEnviar.push(cal)\r\n      });\r\n      me.$vs.loading()\r\n      let json_codigos = JSON.stringify(sendEnviar)\r\n      let formData = new FormData();\r\n      formData.append('data_codigos',     json_codigos);\r\n      formData.append('id_usuario',       me.usuario.idusuario);\r\n      formData.append('periodo_id',       me.periodo_id);\r\n      formData.append('institucion_id',   me.institucion_id)\r\n      formData.append('nombreInstitucion',me.nombreInstitucion)\r\n      formData.append('nombrePeriodo',    me.periodoDescripcion)\r\n      formData.append('venta_estado',     me.rtipoVenta)\r\n      // this.$http.post(this.$server_url+'codigos/leidos/venta_directa', formData)\r\n      this.$http.post(this.$server_url+'codigos/importar', formData)\r\n      .then(res => {\r\n          me.$vs.loading.close()\r\n          if(res.data.status == 0){\r\n            me.$vs.notify({\r\n            text:res.data.message,\r\n            color:'success',\r\n            iconPack: 'feather',\r\n            icon:'icon-check'})\r\n            return false\r\n          }\r\n          me.$vs.notify({\r\n          text:'Códigos procesados exitosamente',\r\n          color:'success',\r\n          iconPack: 'feather',\r\n          icon:'icon-check'})\r\n          me.codigosPerdidos    = true\r\n          me.codigosLeidos      = res.data.codigosLeidos\r\n          me.codigosNoCambiados = res.data.codigosNoCambiados\r\n          me.codigoNoExiste     = res.data.codigoNoExiste\r\n          me.porcentaje         = res.data.cambiados\r\n          me.getTipoVenta()\r\n      })\r\n      .catch(function (error) {\r\n          me.$vs.notify({\r\n          text:'Verifique que la información se haya guardado correctamente.',\r\n          color:'warning',\r\n          iconPack: 'feather',\r\n          icon:'icon-alert-triangle'})\r\n          me.$vs.loading.close()\r\n      })\r\n    },\r\n  }\r\n}\r\n</script>\r\n"]}]}