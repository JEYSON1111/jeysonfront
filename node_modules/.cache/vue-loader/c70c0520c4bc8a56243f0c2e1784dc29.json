{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\diagnostico\\admin\\components\\TableUsuario.vue?vue&type=style&index=0&id=140f6130&lang=css","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\diagnostico\\admin\\components\\TableUsuario.vue","mtime":1712682815728},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\n.botonp{\r\n    transition: 1 ease all;\r\n}\r\n.botonp:hover{\r\n    background-color: blueviolet;\r\n}\r\n",{"version":3,"sources":["TableUsuario.vue"],"names":[],"mappings":";AAyMA;AACA;AACA;AACA;AACA;AACA","file":"TableUsuario.vue","sourceRoot":"src/views/diagnostico/admin/components","sourcesContent":["<template>\r\n    <div>\r\n        <vs-table v-if=\"menu == 0\" max-items=\"5\"  pagination :data=\"arregloEstudiantes\" search>\r\n            <template slot=\"header\">\r\n                <div class=\"flex\">\r\n                    <vs-chip transparent class=\"py-3\" color=\"success\">Cantidad: {{ arregloEstudiantes.length }}</vs-chip>\r\n                    <span @click=\"exportToExcel()\" class=\"cursor-pointer\">\r\n                        <vs-chip transparent class=\"py-3 ml-2\" style=\"font-weight: bold;\" color=\"warning\"><i class=\"fa-solid fa-download\"></i><span class=\"ml-2\">Exportar</span> </vs-chip>\r\n                    </span>\r\n                </div>\r\n            </template>\r\n            <template slot=\"thead\">\r\n                <vs-th style=\"width:50%;\">Datos Personales</vs-th>\r\n                <vs-th style=\"width:20%;\">Institución</vs-th>       \r\n                <vs-th style=\"width:10%;\">Estado</vs-th>  \r\n                <vs-th style=\"width:10%;\">Cod. ingresados</vs-th>  \r\n                <vs-th style=\"width: 10%;\">Período asignado</vs-th>             \r\n            </template>\r\n            <template slot-scope=\"{data}\">\r\n                <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\" >                  \r\n                    <vs-td>\r\n                        <br/>\r\n                        Nombres:\r\n                        <br>        \r\n                        <span style=\"font-weight:600;  \" >\r\n                        {{ tr.estudiante }}<br>\r\n                        </span>\r\n                        Cédula:\r\n                        <br>  \r\n                        <span style=\" font-weight:600; \" >\r\n                        {{ tr.cedula }}<br>\r\n                        </span>\r\n                        Email:\r\n                        <br>  \r\n                        <span style=\" font-weight:600; \" >\r\n                        {{ tr.email }}<br>\r\n                        </span>\r\n                    </vs-td>\r\n                    <vs-td>\r\n                        {{ tr.nombreInstitucion }}\r\n                    </vs-td>\r\n                    <vs-td>\r\n                        <template>\r\n                            <div v-if=\"tr.estado_idEstado == 1\">\r\n                                <vs-chip color=\"primary\">\r\n                                    <p>Activo</p>\r\n                                </vs-chip>\r\n                            </div>\r\n                            <div v-else>\r\n                                <vs-chip color=\"danger\">\r\n                                    <p>Desactivado</p>\r\n                                </vs-chip>\r\n                            </div>\r\n                        </template>               \r\n                    </vs-td> \r\n                    <vs-td>\r\n                        <vx-tooltip  style=\"display: inline-block;\" text=\"Ver códigos\" position=\"top\" color=\"primary\">\r\n                            <p class=\"cursor-pointer botonp\" @click=\"getverCodigos(tr)\">\r\n                                <vs-chip transparent class=\"py-2 ml-2\" style=\"font-weight: bold;\" color=\"warning\">{{tr.contador}}</vs-chip>\r\n                            </p>\r\n                        </vx-tooltip>\r\n                    </vs-td> \r\n                    <vs-td>\r\n                        <div v-if=\"tr.periodo == '' || tr.periodo == null\">\r\n                            No asignado\r\n                        </div>\r\n                        <div v-else>\r\n                            {{ tr.periodo }}\r\n                        </div>\r\n                    </vs-td>           \r\n                </vs-tr>\r\n            </template>\r\n        </vs-table>\r\n        <div v-if=\"menu == 1\">\r\n            <vs-button radius color=\"success\" @click=\"menu = 0\" type=\"gradient\" icon=\"reply\"></vs-button>\r\n            <verCodigos class=\"mt-4\" :arregloCodigos = \"arregloCodigos\" :informacionUser=\"informacionUser\"/>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport verCodigos from './verCodigos.vue'\r\nexport default{\r\n    props:{\r\n        arregloEstudiantes:{\r\n            type:Array,\r\n            defaul:[]\r\n        },\r\n        datosExportar:{\r\n            type:Array,\r\n            defaul:[]\r\n        },\r\n        institucion_id:{\r\n            type:Number,\r\n            default:0,\r\n        },\r\n        periodo_id:{\r\n            type:Number,\r\n            default:0,\r\n        },\r\n    },\r\n    components:{\r\n        verCodigos\r\n    },  \r\n    watch:{\r\n        arregloEstudiantes(results){\r\n            let me = this;\r\n            me.menu = 0\r\n        }\r\n    },\r\n    data(){\r\n        return{\r\n            //variables para el export a excel\r\n            activePrompt:false,\r\n            codigoSelected: [],\r\n            arregloCodigos:[],\r\n            reportesActivo: 0,\r\n            fileName: null,\r\n            formats: ['xls', 'xlsx', 'csv', 'txt'],\r\n            cellAutoWidth: true,\r\n            selectedFormat: 'xls',\r\n            //fin variables de excel\r\n            menu:0,\r\n            informacionUser:{},\r\n        }\r\n    },\r\n    methods:{\r\n        getverCodigos(tr){\r\n            let me = this\r\n            me.informacionUser = tr\r\n            if(tr.contador == 0){\r\n                me.$vs.notify({\r\n                text:'No existe códigos para mostrar',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-code'})\r\n                return\r\n            }\r\n            me.$vs.loading()\r\n            this.$http.get(this.$server_url+'gestionEstudiante?getCodigosxEstudiante=yes&estudiante_id='+tr.idusuario+'&institucion_id='+me.institucion_id+'&periodo_id='+me.periodo_id)\r\n            .then(function (res) {\r\n                me.arregloCodigos = res.data\r\n                me.menu = 1\r\n                me.$vs.loading.close()\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error + ' error');\r\n                me.$vs.loading.close()\r\n            })\r\n            me.menu = 1\r\n        },\r\n        //METODOS PARA EXCEL\r\n        //para limipiar los campos del excel\r\n        clearFields() {\r\n            this.fileName = ''\r\n            this.cellAutoWidth = true\r\n            this.selectedFormat = 'xls'\r\n        },\r\n        //metodo par descargar el excel\r\n        exportToExcel() {\r\n            let headerTitle = ['Estudiante','Cédula','Institución',  'Email','Cod. Ingresados'];\r\n            let headerVal = ['estudiante', 'cedula','nombreInstitucion','email','contador'];  \r\n            \r\n            for (let index = 1; index < 11; index++) {\r\n                headerTitle.push(\"Codigo\" + index)\r\n                headerVal.push(\"codigo\" + index)\r\n            }\r\n            let codigoSelectedMayus = this.datosExportar\r\n            for (var i = 0; i < codigoSelectedMayus.length; i++) {\r\n                for (var key in codigoSelectedMayus[i]) {\r\n                    if (typeof codigoSelectedMayus[i][key] == \"string\") {\r\n                        codigoSelectedMayus[i][key] = codigoSelectedMayus[i][key].toUpperCase();\r\n                    }\r\n                }\r\n            }\r\n            import('@/vendor/Export2Excel').then(excel => {\r\n                const list = codigoSelectedMayus\r\n                const data = this.formatJson(headerVal, list)\r\n                excel.export_json_to_excel({\r\n                    header: headerTitle,\r\n                    data,\r\n                    filename: 'ResultadoEstudiantes',\r\n                    autoWidth: this.cellAutoWidth,\r\n                    bookType: this.selectedFormat\r\n                })\r\n                this.clearFields()\r\n                this.guardarActivo = '';\r\n                this.generarActivo = ' ';\r\n                this.textAlertCant = '';\r\n                this.cantidad = '';\r\n                this.codigoSelected = [];\r\n            })\r\n        },\r\n        formatJson(filterVal, jsonData) {\r\n            return jsonData.map(v => filterVal.map(j => {\r\n                return v[j]\r\n            }))\r\n        },\r\n    }\r\n}\r\n</script>\r\n<style>\r\n.botonp{\r\n    transition: 1 ease all;\r\n}\r\n.botonp:hover{\r\n    background-color: blueviolet;\r\n}\r\n</style>\r\n"]}]}