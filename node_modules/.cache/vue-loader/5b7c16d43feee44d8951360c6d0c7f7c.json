{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\evaluaciones\\TemasComponent.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\evaluaciones\\TemasComponent.vue","mtime":1712682815871},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\n    import flatPickr from 'vue-flatpickr-component';\r\n    import 'flatpickr/dist/flatpickr.css';\r\n    import Vue from 'vue'\r\n    import axios from 'axios'\r\n    import vSelect from 'vue-select'\r\n    import moment from 'moment'\r\n    export default {\r\n        data(){\r\n            return {\r\n                temas: [],\r\n                tema: {nombre: '', asignatura: '', unidad: '', clasificacion: ''},\r\n                temaBuscar: null,\r\n                asignaturas: [],\r\n                asignatura: {id: '', label: ''},\r\n                editarActivo: false,\r\n                temaSelected: [],\r\n                asignaturaSelected: {id: '', label: ''},\r\n                popupAddTema: false,\r\n                popupEditTema: false,\r\n                usuario: [],\r\n                docente: null,\r\n                unidades: [\r\n                    {\r\n                    id: \"1\", label: \"Unidad 1\", }, { id: \"2\", label: \"Unidad 2\", }, { id: \"3\", label: \"Unidad 3\", }, { id: \"4\", label: \"Unidad 4\", }, { id: \"5\", label: \"Unidad 5\", }, { id: \"6\", label: \"Unidad 6\", }, { id: \"7\", label: \"Unidad 7\", }, { id: \"8\", label: \"Unidad 8\", }, { id: \"9\", label: \"Unidad 9\", }, { id: \"10\", label: \"Unidad 10\",\r\n                    },\r\n                ],\r\n                unidades_asignatura: [],\r\n                id_tema: '',\r\n                itemTemas: [],\r\n                Filtroasignatura:'',\r\n            }\r\n        },\r\n        components: {\r\n            'v-select': vSelect,\r\n            flatPickr\r\n        },\r\n        async created(){\r\n            this.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n            this.docente = this.usuario.idusuario\r\n            this.verTemas();\r\n        },\r\n        methods: {\r\n            onResize() {\r\n            if (window.innerWidth < 769)\r\n                this.isMobile = true;\r\n            else\r\n                this.isMobile = false;\r\n            },\r\n            limpiar(){\r\n                this.tema.nombre = '';\r\n                // this.tema.asignatura = '';\r\n                this.tema.unidad = '';\r\n            },\r\n            verTemas(){\r\n                let me = this\r\n                if( localStorage.idasignatura ){\r\n                    this.tema.asignatura = {id: localStorage.idasignatura, label: localStorage.nombreasignatura}\r\n                }\r\n                // me.$vs.loading()\r\n                switch (this.usuario.id_group) {\r\n                    case 1 || 5:\r\n                        // this.$http.get(this.$server_url+'tema').then(res => {\r\n                        //     this.temas = res.data;\r\n                        // }).then(res => {\r\n                        //     this.$vs.loading.close()\r\n                        // }),\r\n                        this.$http.get(this.$server_url+'asignaturasDoc/0').then(res => {\r\n                            this.asignaturas = res.data;\r\n                        })\r\n                        break;\r\n                    default:\r\n                        this.$http.get(this.$server_url+'tema/'+this.usuario.idusuario).then(res => {\r\n                            this.temas = res.data;\r\n                        }).then(res => {\r\n                            this.$vs.loading.close()\r\n                        }),\r\n                        this.$http.get(this.$server_url+'asignaturasCreaDoc/'+this.usuario.idusuario).then(res => {\r\n                            this.asignaturas = res.data;\r\n                        })\r\n                        break;\r\n                }\r\n\r\n            },\r\n            filtroTemas(){\r\n                let me = this;\r\n                me.temas = []\r\n                if(me.Filtroasignatura == null || me.Filtroasignatura == undefined || me.Filtroasignatura == \"\"){\r\n                    this.$vs.notify({\r\n                        text:'Debe seleccionar una asignatura para filtrar por favor',\r\n                        color:'warning',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check'})\r\n                    return;\r\n                }\r\n                me.$vs.loading();\r\n                this.$http.get(this.$server_url+'tema?byAsignatura=yes&asignatura='+me.Filtroasignatura.idasignatura).then(res => {\r\n                    me.$vs.loading.close();\r\n                    this.temas = res.data;\r\n                }).then(res => {\r\n                    this.$vs.loading.close()\r\n                });\r\n            },\r\n            agregar(){//datos que se obtienen de los inputs\r\n                if(this.tema.nombre.trim() === '' || this.tema.unidad === ''){\r\n                    this.$vs.notify({\r\n                        text:'Debe completar todos los campos antes de guardar',\r\n                        color:'warning',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check'})\r\n                    return;\r\n                }\r\n                let id_unidad = this.tema.unidad.id\r\n                if( this.tema.unidad.id === null ){\r\n                    id_unidad = ''\r\n                }\r\n                let num_unidad = this.tema.unidad.unidad\r\n                if( this.tema.unidad.unidad === undefined || this.tema.unidad.unidad === null ){\r\n                    // es una unidad no registrada para un tema sin asignatura\r\n                    id_unidad = ''\r\n                    num_unidad = this.tema.unidad.id\r\n                }\r\n                let formData = new FormData();\r\n                    formData.append('nombre', this.tema.nombre);\r\n                    formData.append('asignatura', this.tema.asignatura.id);\r\n                    formData.append('unidad', num_unidad);\r\n                    formData.append('id_unidad', id_unidad);\r\n                    formData.append('clasificacion', this.tema.clasificacion);\r\n                    formData.append('idusuario', this.docente);\r\n                    formData.append('estado', 1);\r\n                this.$vs.loading()\r\n                this.$http.post(this.$server_url+'tema', formData)\r\n                .then(res => {\r\n\r\n                    this.verTemas()\r\n                    this.popupAddTema = false\r\n                    this.$vs.loading.close()\r\n                    this.$vs.notify({\r\n                    text:'Tema guardado exitosamente',\r\n                    color:'success',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check'})\r\n                })\r\n            },\r\n            openConfirm() {\r\n                this.$vs.dialog({\r\n                    type: 'confirm',\r\n                    color: 'danger',\r\n                    title: `Confirmar`,\r\n                    text: '¿Está seguro de eliminar este tema y todas las preguntas que contenga?',\r\n                    accept: this.eliminarTema\r\n                })\r\n            },\r\n            getUnidadesAsignatura(){\r\n                let me = this;\r\n                me.unidades_asignatura = []\r\n                this.$http.get(this.$server_url+'unidades_asignatura/' + me.tema.asignatura.id)\r\n                .then(res => {\r\n                    if( res.data.length > 0 ){\r\n                        me.unidades_asignatura = res.data\r\n                    }else{\r\n                        me.unidades_asignatura = me.unidades\r\n                    }\r\n\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n            },\r\n            eliminarTema(){\r\n                let me = this;\r\n                let formData = new FormData();\r\n                    formData.append('id_tema', me.id_tema);\r\n                    formData.append('idusuario', me.usuario.idusuario);\r\n                this.$http.post(this.$server_url+'eliminar_tema', formData).then(() => {\r\n                    me.removeItemFromArr(me.temas, me.itemTemas)\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n            },\r\n            removeItemFromArr (arr, item) {\r\n                const i = arr.indexOf(item)\r\n                arr.splice(i, 1)\r\n            },\r\n            editarFormulario(item){\r\n                this.asignaturaSelected = {id: item.id_asignatura, label: item.nombreasignatura};\r\n                this.tema.nombre = item.label;//nombre_tema=label\r\n                this.tema.asignatura = {id: item.id_asignatura, label: item.nombreasignatura};\r\n                this.tema.unidad = {id: item.id_unidad, label: 'Unidad '+item.unidad, unidad: item.unidad};\r\n                this.tema.id = item.id;\r\n                this.tema.clasificacion = item.clasificacion;\r\n                this.editarActivo = true;//activa el form editar\r\n                this.getUnidadesAsignatura();\r\n            },\r\n            editarTema(item){\r\n                let id_unidad = this.tema.unidad.id\r\n                if( this.tema.unidad.id === null ){\r\n                    id_unidad = ''\r\n                }\r\n                let num_unidad = this.tema.unidad.unidad\r\n                if( this.tema.unidad.unidad === undefined || this.tema.unidad.unidad === null ){// es una unidad no registrada para un tema sin asignatura\r\n                    id_unidad = ''\r\n                    num_unidad = this.tema.unidad.id\r\n                }\r\n                let formData = new FormData();\r\n                    formData.append('id', item.id);\r\n                    formData.append('nombre', this.tema.nombre);\r\n                    formData.append('asignatura', this.tema.asignatura.id);\r\n                    formData.append('unidad', num_unidad);\r\n                    formData.append('id_unidad', id_unidad);\r\n                    formData.append('clasificacion', this.tema.clasificacion);\r\n                    formData.append('idusuario', this.docente);\r\n                    formData.append('estado', 1);\r\n                this.$vs.loading()\r\n                this.$http.post(this.$server_url+`tema`, formData).then(res => {\r\n                    const index = this.temas.findIndex(\r\n                        temaBuscar => temaBuscar.id === res.data.id)\r\n                    this.tema[index] = res.data;\r\n                    this.verTemas()\r\n                    this.editarActivo = false;\r\n                    this.popupEditTema = false\r\n                    this.$vs.loading.close()\r\n                    this.$vs.notify({\r\n                    text:'Tema editado exitosamente',\r\n                    color:'success',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check'})\r\n\r\n                });\r\n            },\r\n        },\r\n    }\r\n",{"version":3,"sources":["TemasComponent.vue"],"names":[],"mappings":";AAqEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"TemasComponent.vue","sourceRoot":"src/views/evaluaciones","sourcesContent":["<template>\r\n    <div>\r\n\r\n        <!-- Modal Agregar-->\r\n        <div class=\"demo-alignment\">\r\n            <vs-popup classContent=\"popup-example\" title=\"Agregar Tema\" :active.sync=\"popupAddTema\">\r\n                <vs-input class=\"inputx mb-3 w-full\" label=\"Nombre Tema\" v-model=\"tema.nombre\"/>\r\n                Asignatura:\r\n                <v-select class=\"mb-3\" v-model=\"tema.asignatura\" :options=\"asignaturas\" :value=\"asignaturaSelected\" :dir=\"$vs.rtl ? 'rtl' : 'ltr'\" @input=\"getUnidadesAsignatura()\" />\r\n\r\n                Unidad:\r\n                <v-select class=\"mb-3\" v-model=\"tema.unidad\" :options=\"unidades_asignatura\" :dir=\"$vs.rtl ? 'rtl' : 'ltr'\" />\r\n\r\n                <vs-input class=\"inputx mb-6 w-full\" label=\"Destreza/indicador (opcional)\" v-model=\"tema.clasificacion\"/>\r\n\r\n                <vs-button color=\"success\" class=\"w-full mb-3\" type=\"gradient\" @click=\"agregar()\">Guardar</vs-button>\r\n            </vs-popup>\r\n        </div>\r\n        <!----FIN MODAL AGREGAR-->\r\n        <!-- Modal Editar Temas-->\r\n        <div class=\"demo-alignment\">\r\n            <vs-popup classContent=\"popup-example\" title=\"Editar Tema\" :active.sync=\"popupEditTema\">\r\n                <vs-input class=\"inputx mb-3 w-full\" label=\"Nombre Tema\" v-model=\"tema.nombre\"/>\r\n                Asignatura:\r\n                <v-select class=\"mb-3\" v-model=\"tema.asignatura\" :options=\"asignaturas\" :dir=\"$vs.rtl ? 'rtl' : 'ltr'\" @input=\"getUnidadesAsignatura()\" />\r\n                Unidad:\r\n                <v-select class=\"mb-3\" v-model=\"tema.unidad\" :options=\"unidades_asignatura\" :dir=\"$vs.rtl ? 'rtl' : 'ltr'\" />\r\n                <vs-input class=\"inputx mb-6 w-full\" label=\"Clasificación (opcional)\" v-model=\"tema.clasificacion\"/>\r\n                <vs-button color=\"success\" class=\"w-full mb-3\" type=\"gradient\" @click=\"editarTema(tema)\">Editar</vs-button>\r\n            </vs-popup>\r\n        </div>\r\n        <!----FIN MODAL EDITAR---->\r\n        <!--LISTADO DE TEMA-->\r\n        <div align=\"center\" class=\"mt-5\">\r\n            <p >Filtro de temas por asignatura</p>\r\n            <v-select class=\"mb-3\" v-model=\"Filtroasignatura\" :options=\"asignaturas\" :value=\"asignaturaSelected\" :dir=\"$vs.rtl ? 'rtl' : 'ltr'\" @input=\"filtroTemas()\" />\r\n            <vs-divider></vs-divider>\r\n            <vs-table v-model=\"temaSelected\" pagination max-items=\"25\" search :data=\"temas\">\r\n                <template slot=\"header\">\r\n                    Cantidad {{temas.length}}\r\n                    <vs-button  @click=\"limpiar(); popupAddTema=true\" color=\"dark\" size=\"small\" style=\"font-size: 14px;\" type=\"filled\" class=\"ml-2\">Crear tema</vs-button>\r\n                    <vs-button @click=\"$router.push('/bancopreguntas')\" color=\"primary\" size=\"small\" class=\"ml-2\" style=\"font-size: 14px;\" type=\"filled\">Crear preguntas</vs-button>\r\n                </template>\r\n                <template slot=\"thead\">\r\n                    <vs-th sort-key=\"clasificacion\">Destreza</vs-th>\r\n                    <vs-th sort-key=\"pregunta\">Tema</vs-th>\r\n                    <vs-th>Acciones</vs-th>\r\n                </template>\r\n                <template slot-scope=\"{data}\">\r\n                <vs-tr :data=\"tr\" :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                    <vs-td :data=\"data[indextr].clasificacion\">\r\n                        {{ data[indextr].clasificacion }}\r\n                    </vs-td>\r\n                    <vs-td :data=\"data[indextr].nombre_tema\">\r\n                        {{ 'Tema: ' + data[indextr].label }}<br><!--label=nombre_tema-->\r\n                        {{ 'Asignatura: ' + data[indextr].nombreasignatura }}<br>\r\n                        {{ 'Unidad: ' + data[indextr].unidad }}<br>\r\n                    </vs-td>\r\n                    <vs-td :data=\"data[indextr].id\">\r\n                        <vs-button @click=\"editarFormulario(data[indextr]); popupEditTema=true\" color=\"success\" type=\"gradient\" style=\"font-size: 12px; padding: 7px 7px 7px 7px; width: 80px; display: inline-block;\" size=\"small\" v-if=\"usuario.idusuario===data[indextr].idusuario || usuario.id_group===1 || usuario.id_group===5\">editar</vs-button>\r\n                        <vs-button @click=\"id_tema=data[indextr].id; itemTemas=data[indextr]; openConfirm();\" color=\"danger\" type=\"gradient\" style=\"font-size: 12px; padding: 7px 7px 7px 7px; width: 80px; display: inline-block;\" size=\"small\" v-if=\"usuario.idusuario===data[indextr].idusuario || usuario.id_group===1 || usuario.id_group===5\">eliminar</vs-button>\r\n                    </vs-td>\r\n                </vs-tr>\r\n                </template>\r\n            </vs-table>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n    import flatPickr from 'vue-flatpickr-component';\r\n    import 'flatpickr/dist/flatpickr.css';\r\n    import Vue from 'vue'\r\n    import axios from 'axios'\r\n    import vSelect from 'vue-select'\r\n    import moment from 'moment'\r\n    export default {\r\n        data(){\r\n            return {\r\n                temas: [],\r\n                tema: {nombre: '', asignatura: '', unidad: '', clasificacion: ''},\r\n                temaBuscar: null,\r\n                asignaturas: [],\r\n                asignatura: {id: '', label: ''},\r\n                editarActivo: false,\r\n                temaSelected: [],\r\n                asignaturaSelected: {id: '', label: ''},\r\n                popupAddTema: false,\r\n                popupEditTema: false,\r\n                usuario: [],\r\n                docente: null,\r\n                unidades: [\r\n                    {\r\n                    id: \"1\", label: \"Unidad 1\", }, { id: \"2\", label: \"Unidad 2\", }, { id: \"3\", label: \"Unidad 3\", }, { id: \"4\", label: \"Unidad 4\", }, { id: \"5\", label: \"Unidad 5\", }, { id: \"6\", label: \"Unidad 6\", }, { id: \"7\", label: \"Unidad 7\", }, { id: \"8\", label: \"Unidad 8\", }, { id: \"9\", label: \"Unidad 9\", }, { id: \"10\", label: \"Unidad 10\",\r\n                    },\r\n                ],\r\n                unidades_asignatura: [],\r\n                id_tema: '',\r\n                itemTemas: [],\r\n                Filtroasignatura:'',\r\n            }\r\n        },\r\n        components: {\r\n            'v-select': vSelect,\r\n            flatPickr\r\n        },\r\n        async created(){\r\n            this.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n            this.docente = this.usuario.idusuario\r\n            this.verTemas();\r\n        },\r\n        methods: {\r\n            onResize() {\r\n            if (window.innerWidth < 769)\r\n                this.isMobile = true;\r\n            else\r\n                this.isMobile = false;\r\n            },\r\n            limpiar(){\r\n                this.tema.nombre = '';\r\n                // this.tema.asignatura = '';\r\n                this.tema.unidad = '';\r\n            },\r\n            verTemas(){\r\n                let me = this\r\n                if( localStorage.idasignatura ){\r\n                    this.tema.asignatura = {id: localStorage.idasignatura, label: localStorage.nombreasignatura}\r\n                }\r\n                // me.$vs.loading()\r\n                switch (this.usuario.id_group) {\r\n                    case 1 || 5:\r\n                        // this.$http.get(this.$server_url+'tema').then(res => {\r\n                        //     this.temas = res.data;\r\n                        // }).then(res => {\r\n                        //     this.$vs.loading.close()\r\n                        // }),\r\n                        this.$http.get(this.$server_url+'asignaturasDoc/0').then(res => {\r\n                            this.asignaturas = res.data;\r\n                        })\r\n                        break;\r\n                    default:\r\n                        this.$http.get(this.$server_url+'tema/'+this.usuario.idusuario).then(res => {\r\n                            this.temas = res.data;\r\n                        }).then(res => {\r\n                            this.$vs.loading.close()\r\n                        }),\r\n                        this.$http.get(this.$server_url+'asignaturasCreaDoc/'+this.usuario.idusuario).then(res => {\r\n                            this.asignaturas = res.data;\r\n                        })\r\n                        break;\r\n                }\r\n\r\n            },\r\n            filtroTemas(){\r\n                let me = this;\r\n                me.temas = []\r\n                if(me.Filtroasignatura == null || me.Filtroasignatura == undefined || me.Filtroasignatura == \"\"){\r\n                    this.$vs.notify({\r\n                        text:'Debe seleccionar una asignatura para filtrar por favor',\r\n                        color:'warning',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check'})\r\n                    return;\r\n                }\r\n                me.$vs.loading();\r\n                this.$http.get(this.$server_url+'tema?byAsignatura=yes&asignatura='+me.Filtroasignatura.idasignatura).then(res => {\r\n                    me.$vs.loading.close();\r\n                    this.temas = res.data;\r\n                }).then(res => {\r\n                    this.$vs.loading.close()\r\n                });\r\n            },\r\n            agregar(){//datos que se obtienen de los inputs\r\n                if(this.tema.nombre.trim() === '' || this.tema.unidad === ''){\r\n                    this.$vs.notify({\r\n                        text:'Debe completar todos los campos antes de guardar',\r\n                        color:'warning',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check'})\r\n                    return;\r\n                }\r\n                let id_unidad = this.tema.unidad.id\r\n                if( this.tema.unidad.id === null ){\r\n                    id_unidad = ''\r\n                }\r\n                let num_unidad = this.tema.unidad.unidad\r\n                if( this.tema.unidad.unidad === undefined || this.tema.unidad.unidad === null ){\r\n                    // es una unidad no registrada para un tema sin asignatura\r\n                    id_unidad = ''\r\n                    num_unidad = this.tema.unidad.id\r\n                }\r\n                let formData = new FormData();\r\n                    formData.append('nombre', this.tema.nombre);\r\n                    formData.append('asignatura', this.tema.asignatura.id);\r\n                    formData.append('unidad', num_unidad);\r\n                    formData.append('id_unidad', id_unidad);\r\n                    formData.append('clasificacion', this.tema.clasificacion);\r\n                    formData.append('idusuario', this.docente);\r\n                    formData.append('estado', 1);\r\n                this.$vs.loading()\r\n                this.$http.post(this.$server_url+'tema', formData)\r\n                .then(res => {\r\n\r\n                    this.verTemas()\r\n                    this.popupAddTema = false\r\n                    this.$vs.loading.close()\r\n                    this.$vs.notify({\r\n                    text:'Tema guardado exitosamente',\r\n                    color:'success',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check'})\r\n                })\r\n            },\r\n            openConfirm() {\r\n                this.$vs.dialog({\r\n                    type: 'confirm',\r\n                    color: 'danger',\r\n                    title: `Confirmar`,\r\n                    text: '¿Está seguro de eliminar este tema y todas las preguntas que contenga?',\r\n                    accept: this.eliminarTema\r\n                })\r\n            },\r\n            getUnidadesAsignatura(){\r\n                let me = this;\r\n                me.unidades_asignatura = []\r\n                this.$http.get(this.$server_url+'unidades_asignatura/' + me.tema.asignatura.id)\r\n                .then(res => {\r\n                    if( res.data.length > 0 ){\r\n                        me.unidades_asignatura = res.data\r\n                    }else{\r\n                        me.unidades_asignatura = me.unidades\r\n                    }\r\n\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n            },\r\n            eliminarTema(){\r\n                let me = this;\r\n                let formData = new FormData();\r\n                    formData.append('id_tema', me.id_tema);\r\n                    formData.append('idusuario', me.usuario.idusuario);\r\n                this.$http.post(this.$server_url+'eliminar_tema', formData).then(() => {\r\n                    me.removeItemFromArr(me.temas, me.itemTemas)\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n            },\r\n            removeItemFromArr (arr, item) {\r\n                const i = arr.indexOf(item)\r\n                arr.splice(i, 1)\r\n            },\r\n            editarFormulario(item){\r\n                this.asignaturaSelected = {id: item.id_asignatura, label: item.nombreasignatura};\r\n                this.tema.nombre = item.label;//nombre_tema=label\r\n                this.tema.asignatura = {id: item.id_asignatura, label: item.nombreasignatura};\r\n                this.tema.unidad = {id: item.id_unidad, label: 'Unidad '+item.unidad, unidad: item.unidad};\r\n                this.tema.id = item.id;\r\n                this.tema.clasificacion = item.clasificacion;\r\n                this.editarActivo = true;//activa el form editar\r\n                this.getUnidadesAsignatura();\r\n            },\r\n            editarTema(item){\r\n                let id_unidad = this.tema.unidad.id\r\n                if( this.tema.unidad.id === null ){\r\n                    id_unidad = ''\r\n                }\r\n                let num_unidad = this.tema.unidad.unidad\r\n                if( this.tema.unidad.unidad === undefined || this.tema.unidad.unidad === null ){// es una unidad no registrada para un tema sin asignatura\r\n                    id_unidad = ''\r\n                    num_unidad = this.tema.unidad.id\r\n                }\r\n                let formData = new FormData();\r\n                    formData.append('id', item.id);\r\n                    formData.append('nombre', this.tema.nombre);\r\n                    formData.append('asignatura', this.tema.asignatura.id);\r\n                    formData.append('unidad', num_unidad);\r\n                    formData.append('id_unidad', id_unidad);\r\n                    formData.append('clasificacion', this.tema.clasificacion);\r\n                    formData.append('idusuario', this.docente);\r\n                    formData.append('estado', 1);\r\n                this.$vs.loading()\r\n                this.$http.post(this.$server_url+`tema`, formData).then(res => {\r\n                    const index = this.temas.findIndex(\r\n                        temaBuscar => temaBuscar.id === res.data.id)\r\n                    this.tema[index] = res.data;\r\n                    this.verTemas()\r\n                    this.editarActivo = false;\r\n                    this.popupEditTema = false\r\n                    this.$vs.loading.close()\r\n                    this.$vs.notify({\r\n                    text:'Tema editado exitosamente',\r\n                    color:'success',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check'})\r\n\r\n                });\r\n            },\r\n        },\r\n    }\r\n</script>\r\n"]}]}