{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\asesor\\componentes\\agenda_asesor.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\asesor\\componentes\\agenda_asesor.vue","mtime":1712682815520},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nimport $ from 'jquery'\r\nimport {\r\n    CalendarView,\r\n    CalendarViewHeader\r\n} from 'vue-simple-calendar'\r\nimport moduleCalendar from '@/store/calendar2/moduleCalendar.js'\r\nrequire('vue-simple-calendar/static/css/default.css')\r\nimport vSelect from 'vue-select'\r\nimport moment from 'moment'\r\nimport Datepicker from 'vuejs-datepicker'\r\nimport flatPickr from 'vue-flatpickr-component';\r\nimport 'flatpickr/dist/flatpickr.css';\r\nimport {\r\n    en,\r\n    he\r\n} from 'vuejs-datepicker/src/locale'\r\n\r\nexport default {\r\n    components: {\r\n        CalendarView,\r\n        CalendarViewHeader,\r\n        Datepicker,\r\n        flatPickr,\r\n        'v-select': vSelect,\r\n    },\r\n    data() {\r\n        return {\r\n            tituloModal:'Planificación',\r\n            popupFiltroInstitucion:false,\r\n            error: false,\r\n            error2:false,\r\n            messageError: \"\",\r\n            ciudadSelect: '',\r\n            popupAddNuevaInstitucion: false,\r\n            seleccionadoInsitucion: false,\r\n            nombreInstitucion: '',\r\n            busquedaInstitucion: \"\",\r\n            instituciones: [],\r\n            popupaddInstitucion: false,\r\n            opciones: {\r\n                presentacion: false,\r\n                entrega_muestras: false,\r\n                reunion: false,\r\n                seguimiento: false,\r\n                cierre: false,\r\n                cobranza: false,\r\n                post_venta: false,\r\n                retiro_cartas: false,\r\n                retiro_muestras: false,\r\n                capacitacion: false,\r\n                sinSello: true,\r\n                editorial: '',\r\n                otraEditorial: false,\r\n            },\r\n\r\n            usuario: [],\r\n            showDate: new Date(),\r\n            disabledFrom: false,\r\n            titulo: '',\r\n            id: 0,\r\n            title: '',\r\n            startDate: '',\r\n            endDate: '',\r\n            labelLocal: {\r\n                text: 'Baja',\r\n                color: 'success'\r\n            },\r\n            startDate_send: '',\r\n            endDate_sed: '',\r\n            langHe: he,\r\n            langEn: en,\r\n\r\n            url: '',\r\n            calendarView: 'month',\r\n\r\n            activePromptAddEvent: false,\r\n            label_cancel: 'Cancelar',\r\n            calendarViewTypes: [{\r\n                    label: 'Mes',\r\n                    val: 'month'\r\n                },\r\n                {\r\n                    label: 'Semana',\r\n                    val: 'week'\r\n                },\r\n                {\r\n                    label: 'Año',\r\n                    val: 'year'\r\n                }\r\n            ],\r\n            time: null,\r\n            configdateTimePicker: {\r\n                enableTime: true,\r\n                enableSeconds: false,\r\n                noCalendar: true\r\n            },\r\n            configdateTimePicker2: {\r\n                enableTime: true,\r\n                dateFormat: 'Y-m-d'\r\n            },\r\n            hora_inicio: '',\r\n            hora_fin: '',\r\n            institucion_id: '',\r\n            counterDanger: false,\r\n            arregloCiudad: [],\r\n            temporalInstitucion: {\r\n                ciudad: '',\r\n                nombreInstitucion: '',\r\n                region: '2',\r\n                periodo:'',\r\n            },\r\n            institucion_id_temporal: '',\r\n            estado_institucion_temporal: 0,\r\n            periodo_id_temporal: 0,\r\n            nombreInstitucionTemporal: '',\r\n            filtroInstituciones:[],\r\n            estado: '0',\r\n            filtroFecha:false,\r\n            filtro:{\r\n                fecha:null\r\n            },\r\n            getDatos:[],\r\n            tipo:'1',\r\n            fvisita:false,\r\n            InstitucionesFaltan:[],\r\n            arregloPeriodos:[],\r\n            asesorSelect:'',\r\n        }\r\n    },\r\n    computed: {\r\n        simpleCalendarEvents() {\r\n          this.activePromptAddEvent = false;\r\n            return this.$store.state.calendar.events\r\n        },\r\n        disabledDatesTo() {\r\n            return {\r\n                to: new Date(this.startDate)\r\n            }\r\n        },\r\n        disabledDatesFrom() {\r\n            return {\r\n                from: new Date(this.endDate)\r\n            }\r\n        },\r\n        calendarLabels() {\r\n            return this.$store.state.calendar.eventLabels\r\n        },\r\n        labelColor() {\r\n            return (label) => {\r\n                if (label === 'business') return 'success'\r\n                else if (label === 'work') return 'warning'\r\n                else if (label === 'personal') return 'danger'\r\n                else if (label === 'baja') return 'primary'\r\n            }\r\n        },\r\n        windowWidth() {\r\n            return this.$store.state.windowWidth\r\n        }\r\n    },\r\n    methods: {\r\n        getPeriodos(){\r\n            let me = this\r\n            me.arregloPeriodos = []\r\n            this.$http.get(this.$server_url+'get_periodos_pedidos')\r\n            .then(res => {\r\n                let datos = res.data\r\n                me.arregloPeriodos = datos.filter(p => p.estado == 1 && p.region_idregion == me.temporalInstitucion.region)\r\n            })\r\n            .catch(function (error) {\r\n            })\r\n        },\r\n        //instituciones creadas por el asesor\r\n        getInstitucionCreadasByAsesor() {\r\n            let me = this;\r\n            me.temporalInstitucion ={\r\n                ciudad: '',\r\n                nombreInstitucion: '',\r\n                region: '2',\r\n                periodo:''\r\n            }\r\n            me.instituciones = [];\r\n             this.$http.get(this.$server_url + 'listaInsitucionAsesor?temporales=yes'+'&asesor_id=' + me.usuario.idusuario)\r\n                .then(function (res) {\r\n                    me.instituciones = res.data;\r\n                    me.$vs.loading.close()\r\n                    if (res.data.message) {\r\n                        me.$vs.notify({\r\n                            text: res.data.message,\r\n                            color: 'success',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-user',\r\n                            time: 8000\r\n                        })\r\n                    }\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                    me.$vs.loading.close()\r\n                })\r\n        },\r\n        agregarInstitucionTemporal() {\r\n            let me = this;\r\n            if (me.temporalInstitucion.nombre_institucion == \"\" || me.temporalInstitucion.nombre_institucion == null || me.temporalInstitucion.nombre_institucion == undefined) {\r\n                me.$vs.notify({\r\n                    color: 'primary',\r\n                    title: 'Mensaje',\r\n                    text: 'Debe escribir una institución por favor'\r\n                })\r\n                return false;\r\n            }\r\n            if(me.temporalInstitucion.periodo == null || me.temporalInstitucion.periodo == \"\" || me.temporalInstitucion.periodo == undefined ){\r\n                me.$vs.notify({\r\n                    color: 'primary',\r\n                    title: 'Mensaje',\r\n                    text: 'Debe seleccionar un período por favor'\r\n                    })\r\n                return false;\r\n            }\r\n            let formData = new FormData();\r\n            formData.append('nombre_institucion', me.temporalInstitucion.nombre_institucion);\r\n            formData.append('ciudad', me.temporalInstitucion.ciudad.nombre);\r\n            formData.append('region', me.temporalInstitucion.region);\r\n            formData.append('periodo', me.temporalInstitucion.periodo);\r\n            formData.append('asesor_id', me.usuario.idusuario);\r\n            me.$vs.loading()\r\n            this.$http.post(this.$server_url + 'GuardarInstitucionTemporal', formData)\r\n            .then(res => {\r\n                me.$vs.loading.close()\r\n                if(res.data.status == 0){\r\n                    me.$vs.notify({\r\n                    text: res.data.message,\r\n                    color: 'warning',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-check'\r\n                    })\r\n                    return\r\n                }\r\n                me.popupAddNuevaInstitucion = false;\r\n                me.activePromptAddEvent = true\r\n                me.seleccionadoInsitucion = false;\r\n                me.nombreInstitucion = me.temporalInstitucion.nombre_institucion\r\n                me.institucion_id_temporal = res.data.institucion_temporal_id\r\n                me.instituciones = []\r\n                me.periodo_id_temporal = res.data.periodo_id\r\n                me.estado_institucion_temporal = 1;\r\n                me.$vs.notify({\r\n                    text: \"Se guardo correctamente\",\r\n                    color: 'success',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-check'\r\n                })\r\n            })\r\n        },\r\n        //lista de ciudades para usar en el select\r\n        listaCiudades() {\r\n            let me = this\r\n            this.$http.get(this.$server_url + `ciudad`).then(res => {\r\n                    me.arregloCiudad = res.data;\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error)\r\n                })\r\n        },\r\n        regresar() {\r\n            let me = this;\r\n            me.seleccionadoInsitucion = false;\r\n            me.instituciones = []\r\n            me.error = false\r\n            me.error2 = false\r\n        },\r\n\r\n        asginarInstitucion(tr) {\r\n             let me = this;\r\n            if(me.tipo == 1){\r\n                me.institucion_id               = tr.idInstitucion\r\n                me.nombreInstitucion            = tr.nombreInstitucion\r\n                me.asesorSelect                 = tr.nombre_asesor + \" \"+ tr.apellido_asesor\r\n                me.estado_institucion_temporal  = 0;\r\n                me.seleccionadoInsitucion       = false;\r\n                me.instituciones                = []\r\n            }else{\r\n                me.nombreInstitucion            = tr.nombreInstitucion\r\n                me.asesorSelect                 = me.usuario.nombres + \" \"+ me.usuario.apellidos\r\n                me.institucion_id_temporal      = tr.institucion_temporal_id\r\n                me.instituciones                = []\r\n                me.periodo_id_temporal          = tr.periodo_id\r\n                me.estado_institucion_temporal  = 1;\r\n                me.seleccionadoInsitucion       = false;\r\n            }\r\n\r\n        },\r\n\r\n        //filtro  de la agenda de planificaciones del asesor\r\n          getAllPlanificaciones(){\r\n            let me = this;\r\n            me.filtroInstituciones = []\r\n\r\n            this.$http.get(this.$server_url + 'getPlanificacionesAsesor?asesor_id=' + me.usuario.idusuario)\r\n                .then(function (res) {\r\n\r\n                    let datosProlipa = res.data\r\n                    let datos = []\r\n\r\n\r\n                    for (let i = 0; i < datosProlipa.length; i++) {\r\n\r\n                        datos.push({\r\n                            \"nombreInstitucion\": datosProlipa[i].nombreInstitucion,\r\n                            \"periodoescolar\": datosProlipa[i].periodoescolar,\r\n                            \"fecha\":datosProlipa[i].fecha,\r\n                            \"id\": datosProlipa[i].id,\r\n                            \"id_usuario\": datosProlipa[i].id_usuario,\r\n                            \"title\": datosProlipa[i].title,\r\n                            \"label\": datosProlipa[i].label,\r\n                            \"classes\": datosProlipa[i].classes,\r\n                            \"startDate\": datosProlipa[i].startDate,\r\n                            \"endDate\": datosProlipa[i].fecha_que_visita,\r\n                            \"hora_inicio\": datosProlipa[i].hora_inicio,\r\n                            \"hora_fin\": datosProlipa[i].hora_fin,\r\n                            \"url\": datosProlipa[i].url,\r\n                            \"institucion_id\": datosProlipa[i].institucion_id,\r\n                            \"institucion_id_temporal\": datosProlipa[i].institucion_id_temporal,\r\n                            \"nombre_institucion_temporal\": datosProlipa[i].nombre_institucion_temporal,\r\n                            \"estado_institucion_temporal\": datosProlipa[i].estado_institucion_temporal,\r\n                            \"opciones\": JSON.parse(datosProlipa[i].opciones),\r\n                            \"periodo_id\": datosProlipa[i].periodo_id,\r\n                            \"estado\": datosProlipa[i].estado,\r\n                            \"vendedor\": datosProlipa[i].vendedor,\r\n\r\n                        })\r\n                    }\r\n\r\n                   if(me.filtroFecha == true){\r\n                      if(me.filtro.fecha == null || me.filtro.fecha == undefined || me.filtro.fecha == \"\"){\r\n                            me.$vs.notify({\r\n                                text: 'Debe seleccionar una fecha para filtrar',\r\n                                color: 'warning',\r\n                                iconPack: 'feather',\r\n                                icon: 'icon-check'\r\n                            })\r\n                            me.filtroFecha = false\r\n                            return false;\r\n                        }\r\n\r\n                      me.filtroInstituciones = datos.filter(p => p.fecha == me.filtro.fecha)\r\n                   }else{\r\n                      me.filtroInstituciones = datos;\r\n                   }\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                })\r\n        },\r\n\r\n        getInstitucion() {\r\n            let me = this;\r\n            me.instituciones = [];\r\n            if (me.busquedaInstitucion.length < 5) {\r\n                me.$vs.notify({\r\n                    text: 'Minimo 5 caracteres de busqueda',\r\n                    color: 'warning',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-check'\r\n                })\r\n                return false;\r\n            }\r\n            me.$vs.loading()\r\n            var url = \"\"\r\n            url = 'listaInsitucionAsesor?busqueda=' + me.busquedaInstitucion + '&todasInstituciones=yes'\r\n           this.$http.get(this.$server_url + url)\r\n            // this.$http.get(this.$server_url + 'listaInsitucionAsesor?busqueda=' + me.busquedaInstitucion + '&cedula=' + me.usuario.cedula)\r\n            .then(function (res) {\r\n                // me.tmpInstituciones = res.data;\r\n                me.instituciones = res.data;\r\n                // me.filtroRegion();\r\n                me.$vs.loading.close()\r\n                if (res.data.message) {\r\n                    me.$vs.notify({\r\n                        text: res.data.message,\r\n                        color: 'success',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-user',\r\n                        time: 8000\r\n                    })\r\n                }\r\n\r\n            })\r\n            .catch(function (error) {\r\n              console.log(error + ' error');\r\n              me.$vs.loading.close()\r\n\r\n            })\r\n        },\r\n        addEvent() {\r\n          let me = this\r\n          if(me.startDate_send == 'Invalid date'){\r\n            this.startDate_send = this.startDate\r\n          }\r\n          if(me.endDate_send == 'Invalid date'){\r\n            this.endDate_send = this.endDate\r\n          }\r\n          if(this.estado == 1){\r\n            me.error = true\r\n            me.messageError = \"La planificación ya fue registrada ya no puede ser modificada\"\r\n            me.activePromptAddEvent = true\r\n            return false\r\n          }\r\n          if (this.institucion_id == \"\" && this.institucion_id_temporal == \"\") {\r\n              me.error = true;\r\n              me.messageError = \"Seleccione una institución por favor\";\r\n              me.activePromptAddEvent = true\r\n              return false;\r\n          }\r\n          if (this.title == '' || this.startDate_send == '' || this.endDate_send == '' || this.hora_inicio == '' || this.hora_fin == '') {\r\n              me.error = true;\r\n              me.messageError = \"Complete todos los campos antes de guardar\";\r\n              me.activePromptAddEvent = true\r\n              return false;\r\n          }\r\n          //validar que selecciona los checkbox\r\n          if(me.opciones.presentacion == false && me.opciones.entrega_muestras == false && me.opciones.reunion == false && me.opciones.seguimiento == false && me.opciones.cierre == false && me.opciones.cobranza == false && me.opciones.post_venta == false && me.opciones.retiro_cartas == false && me.opciones.retiro_muestras == false && me.opciones.capacitacion == false)\r\n          {\r\n              me.error2 = true;\r\n              me.messageError = \"Debe marcar al menos un recuadro\";\r\n              me.activePromptAddEvent = true\r\n              return false;\r\n          }\r\n          //si el asesor agrega otra editorial debe validarse que ingrese una institucion\r\n          if (this.opciones.otraEditorial == true) {\r\n              // si es tipo de institucion  de prolipa\r\n              me.activePromptAddEvent = true\r\n\r\n              if (this.opciones.editorial == \"\") {\r\n                  me.error = true;\r\n                  me.messageError = \"Ha seleccionado otra editorial tiene que agregar una editorial por favor\";\r\n                  me.activePromptAddEvent = true\r\n                  return false;\r\n              }\r\n              if (this.estado_institucion_temporal == 0) {\r\n                  if (this.institucion_id == \"\" || this.institucion_id == null || this.institucion_id == 0 || this.institucion_id == \"null\") {\r\n                      me.error = true;\r\n                      me.messageError = \"Ha seleccionado otra editorial tiene que agregar una institución por favor\";\r\n                      me.activePromptAddEvent = true\r\n                      return false;\r\n\r\n                  }\r\n              }\r\n              if (this.estado_institucion_temporal == 1) {\r\n                  if (this.institucion_id_temporal == \"\" || this.institucion_id_temporal == null || this.institucion_id_temporal == 0 || this.institucion_id_temporal == \"null\") {\r\n                      me.error = true;\r\n                      me.messageError = \"Ha seleccionado otra editorial tiene que agregar una institución por favor\";\r\n                      me.activePromptAddEvent = true\r\n                      return false;\r\n\r\n                  }\r\n              }\r\n\r\n          }\r\n          const obj = {\r\n              idusuario: this.usuario.idusuario,\r\n              id: this.id,\r\n              title: this.title,\r\n              startDate: this.startDate_send,\r\n              endDate: this.endDate_send,\r\n              classes: 'event-' + this.labelLocal.color,\r\n              label: this.labelLocal.text,\r\n              url: this.url,\r\n              hora_inicio: this.hora_inicio.substring(0, 5),\r\n              hora_fin: this.hora_fin.substring(0, 5),\r\n              institucion_id: this.institucion_id,\r\n              opciones: this.opciones,\r\n              institucion_id_temporal: this.institucion_id_temporal,\r\n              estado_institucion_temporal: this.estado_institucion_temporal,\r\n              periodo_id_temporal: this.periodo_id_temporal,\r\n              nombreInstitucion: this.nombreInstitucion,\r\n              otraEditorial: this.opciones.otraEditorial,\r\n              nombre_editorial: this.opciones.editorial\r\n\r\n          }\r\n          me.$vs.notify({\r\n              text: \"Se guardo correctamente\",\r\n              color: 'success',\r\n              iconPack: 'feather',\r\n              icon: 'icon-check',\r\n              time:5000\r\n          })\r\n          if (this.id != 0) {\r\n              this.$store.dispatch('calendar/editEvent', obj)\r\n          } else {\r\n              this.$store.dispatch('calendar/addEvent', obj)\r\n          }\r\n        },\r\n        updateMonth(val) {\r\n            this.showDate = this.$refs.calendar.getIncrementedPeriod(val)\r\n        },\r\n        clearFields() {\r\n            this.error2 = false\r\n            this.title = this.endDate = this.url = ''\r\n            this.id = 0\r\n            this.labelLocal = {\r\n                text: 'Baja',\r\n                color: 'success'\r\n            }\r\n            this.label_cancel = 'Cancelar'\r\n            this.opciones.presentacion = false\r\n            this.opciones.entrega_muestras = false\r\n            this.opciones.reunion = false\r\n            this.opciones.seguimiento = false\r\n            this.opciones.cierre = false\r\n            this.opciones.cobranza = false\r\n            this.opciones.post_venta = false\r\n            this.opciones.retiro_cartas = false\r\n            this.opciones.retiro_muestras = false\r\n            this.opciones.capacitacion = false\r\n            // this.opciones.sinSello = true\r\n            this.opciones.editorial = \"\"\r\n            this.opciones.otraEditorial = false\r\n            this.institucion_id = \"\"\r\n            this.institucion_id_temporal = \"\"\r\n            this.nombreInstitucion=\"\"\r\n            this.startDate = \"\"\r\n            this.endDate = \"\"\r\n            this.hora_inicio = \"\"\r\n            this.hora_fin = \"\"\r\n            this.url = \"\"\r\n\r\n\r\n\r\n        },\r\n        promptAddNewEvent(date) {\r\n             this.fvisita = false\r\n            this.disabledFrom = false\r\n            this.addNewEventDialog(date)\r\n        },\r\n        addNewEventDialog(date) {\r\n             this.fvisita = false\r\n            this.clearFields()\r\n            this.startDate = date\r\n            this.endDate = date\r\n            this.formatoFechas()\r\n            this.activePromptAddEvent = true\r\n        },\r\n        openAddNewEvent(date) {\r\n            this.fvisita = false\r\n            this.error = false\r\n            this.error2 = false\r\n            this.disabledFrom = true\r\n            this.addNewEventDialog(date)\r\n        },\r\n        openEditEvent(event) {\r\n          let me = this;\r\n          const e                           = this.$store.getters['calendar/getEvent'](event.id)\r\n          me.getInstitucionInfo(e)\r\n          this.fvisita                      = true\r\n          this.error                        = false\r\n          this.error2                       = false\r\n          this.institucion_id               = \"\"\r\n          this.institucion_id_temporal      = \"\"\r\n          this.nombreInstitucion            = \"\"\r\n          let datos                         = JSON.parse(e.opciones)\r\n          this.id                           = e.id\r\n          this.title                        = e.title.split('(')[0]\r\n          this.startDate                    = e.startDate\r\n          this.endDate                      = e.fecha_que_visita\r\n          this.url                          = e.url\r\n          this.labelLocal                   = {\r\n              text: e.label,\r\n              color: e.classes.split('-')[1]\r\n          }\r\n          this.startDate_send               = this.startDate\r\n          this.endDate_send                 = this.endDate\r\n          this.hora_inicio                  = e.hora_inicio\r\n          this.hora_fin                     = e.hora_fin\r\n          this.label_cancel                 = 'Remover'\r\n          this.activePromptAddEvent         = true\r\n          this.estado                       = e.estado\r\n          this.opciones.presentacion        = datos.presentacion\r\n          this.opciones.entrega_muestras    = datos.entrega_muestras\r\n          this.opciones.reunion             = datos.reunion\r\n          this.opciones.seguimiento         = datos.seguimiento\r\n          this.opciones.cierre              = datos.cierre\r\n          this.opciones.cobranza            = datos.cobranza\r\n          this.opciones.post_venta          = datos.post_venta\r\n          this.opciones.retiro_cartas       = datos.retiro_cartas\r\n          this.opciones.retiro_muestras     = datos.retiro_muestras\r\n          this.opciones.capacitacion        = datos.capacitacion\r\n          // this.opciones.sinSello = datos.sinSello\r\n          this.opciones.otraEditorial = datos.otraEditorial\r\n          if (this.opciones.otraEditorial == false) {\r\n              this.opciones.editorial = \"\"\r\n          } else {\r\n              this.opciones.editorial = datos.editorial\r\n          }\r\n\r\n          if (e.estado_institucion_temporal == \"1\") {\r\n              this.nombreInstitucion            = e.nombre_institucion_temporal\r\n              this.institucion_id_temporal      = e.institucion_id_temporal\r\n              this.periodo_id_temporal          = e.periodo_id\r\n              this.estado_institucion_temporal  = 1\r\n          } else {\r\n              this.nombreInstitucion            = e.nombreInstitucion\r\n              this.institucion_id               = e.institucion_id\r\n              this.estado_institucion_temporal  = 0\r\n          }\r\n        },\r\n        getInstitucionInfo(tr){\r\n          let me = this;\r\n          console.log(\"tr\",tr)\r\n          if (tr.estado_institucion_temporal == \"1\") {\r\n            me.asesorSelect                   = me.usuario.nombres + \" \"+ me.usuario.apellidos\r\n          }else{\r\n            this.$http.get(this.$server_url+`institucionActiva?idInstitucion=${tr.institucion_id}`)\r\n              .then(function (res) {\r\n                 if(res.data.length > 0){\r\n                  let nombreAsesor = res.data[0].nombres + \" \" + res.data[0].apellidos\r\n                  me.setNombre(nombreAsesor)\r\n                 }\r\n              })\r\n              .catch(function (error) {\r\n                  console.log(error + ' error');\r\n              })\r\n          }\r\n        },\r\n        setNombre(nombre){\r\n          this.asesorSelect = nombre\r\n        },\r\n        removeEvent() {\r\n            let me = this;\r\n             if(this.estado == 1){\r\n                me.error = true\r\n                me.messageError = \"La Planificación ya fue registrada ya no puede ser modificada\"\r\n                me.activePromptAddEvent = true\r\n                return false\r\n            }\r\n\r\n            if (this.label_cancel == \"Cancelar\") {\r\n                me.activePromptAddEvent = false\r\n                return\r\n            }\r\n\r\n            if (this.id == 0) {\r\n                return\r\n            }\r\n            this.$store.dispatch('calendar/removeEvent', this.id)\r\n            me.activePromptAddEvent = false\r\n        },\r\n        eventDragged(event, date) {\r\n            const e = this.$store.getters['calendar/getEvent'](event.id)\r\n            this.$store.dispatch('calendar/eventDragged', {\r\n                event,\r\n                date\r\n            })\r\n        },\r\n        formatoFechas() {\r\n            this.startDate_send = moment(this.startDate, 'DD/MM/YYYY HH:mm:ss').format('YYYY-MM-DD HH:mm:ss');\r\n            this.endDate_send = moment(this.endDate, 'DD/MM/YYYY HH:mm:ss').format('YYYY-MM-DD HH:mm:ss');\r\n            // alert(' frmat:  '+this.endDate_send)\r\n        },\r\n        completeInstituciones(){\r\n          let me = this;\r\n          this.$http.get(this.$server_url+'completeInstituciones?asesor_id='+me.usuario.idusuario)\r\n          .then(function (res) {\r\n            if(res.data.length > 0){\r\n              me.InstitucionesFaltan = res.data[0]\r\n              me.tituloModal = \"Planificación sin institución agrege la institución por favor\"\r\n              me.openEditFaltantes(me.InstitucionesFaltan)\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n              console.log(error + ' error');\r\n          })\r\n        },\r\n\r\n         openEditFaltantes(tr) {\r\n            let me = this;\r\n             this.activePromptAddEvent = true\r\n            me.clearFields()\r\n            let datos = JSON.parse(tr.opciones)\r\n            this.id = tr.id\r\n            if(tr.title == null){\r\n                tr.title = \"\"\r\n            }else{\r\n                this.title = tr.title.split('(')[0]\r\n            }\r\n            this.startDate = tr.startDate\r\n            this.endDate = tr.fecha_que_visita\r\n            this.url = tr.url\r\n            if(tr.classes == null){\r\n            }else{\r\n                this.labelLocal = {\r\n                    text: tr.label,\r\n                    color: tr.classes.split('-')[1]\r\n                }\r\n            }\r\n\r\n            this.startDate_send               = this.startDate\r\n            this.endDate_send                 = this.endDate\r\n            this.hora_inicio                  = tr.hora_inicio\r\n            this.hora_fin                     = tr.hora_fin\r\n            this.label_cancel                 = 'Cancelar'\r\n            this.activePromptAddEvent         = true\r\n            this.estado                       = tr.estado\r\n            this.opciones.presentacion        = datos.presentacion\r\n            this.opciones.entrega_muestras    = datos.entrega_muestras\r\n            this.opciones.reunion             = datos.reunion\r\n            this.opciones.seguimiento         = datos.seguimiento\r\n            this.opciones.cierre              = datos.cierre\r\n            this.opciones.cobranza            = datos.cobranza\r\n            this.opciones.post_venta          = datos.post_venta\r\n            this.opciones.retiro_cartas       = datos.retiro_cartas\r\n            this.opciones.retiro_muestras     = datos.retiro_muestras\r\n            this.opciones.capacitacion        = datos.capacitacion\r\n            // this.opciones.sinSello = datos.sinSello\r\n            this.opciones.otraEditorial = datos.otraEditorial\r\n            if (this.opciones.otraEditorial == false) {\r\n                this.opciones.editorial = \"\"\r\n            } else {\r\n                this.opciones.editorial = datos.editorial\r\n            }\r\n\r\n            if (tr.estado_institucion_temporal == \"1\") {\r\n                this.nombreInstitucion = tr.nombre_institucion_temporal\r\n                this.institucion_id_temporal = tr.institucion_id_temporal\r\n                this.periodo_id_temporal = tr.periodo_id\r\n                this.estado_institucion_temporal = 1\r\n            } else {\r\n                this.nombreInstitucion = tr.nombreInstitucion\r\n                this.institucion_id = tr.institucion_id\r\n                this.estado_institucion_temporal = 0\r\n\r\n            }\r\n\r\n        },\r\n    },\r\n    created() {\r\n        this.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n        this.$store.registerModule('calendar', moduleCalendar)\r\n        this.$store.dispatch('calendar/fetchEvents')\r\n        this.$store.dispatch('calendar/fetchEventLabels')\r\n        this.listaCiudades()\r\n        this.institucion_id = \"\"\r\n        this.institucion_id_temporal = \"\"\r\n        this.completeInstituciones();\r\n\r\n    },\r\n\r\n    beforeDestroy() {\r\n        this.$store.unregisterModule('calendar')\r\n    }\r\n}\r\n",{"version":3,"sources":["agenda_asesor.vue"],"names":[],"mappings":";AAofile":"agenda_asesor.vue","sourceRoot":"src/views/asesor/componentes","sourcesContent":["<template>\r\n<div>\r\n    <vx-card>\r\n        <div class=\"vx-col w-full mb-6\">\r\n            <vs-alert active=\"true\">\r\n                <p style=\"text-align: center;\">Planificación Semanal</p>\r\n            </vs-alert>\r\n            <br />\r\n        </div>\r\n        <div style=\"display:flex;\">\r\n         <vs-button color=\"warning\" style=\"border-radius:20px;\" @click=\"getAllPlanificaciones();filtro.fecha=null;popupFiltroInstitucion = true;filtroFecha=false;\" class=\"ml-5 mt-2\"  icon=\"search\" type=\"line\">Ver planificaciones</vs-button>\r\n         </div>\r\n    </vx-card>\r\n\r\n    <div id=\"simple-calendar-app\" class=\"mt-4\">\r\n        <div class=\"vx-card no-scroll-content\">\r\n          <calendar-view ref=\"calendar\" :displayPeriodUom=\"calendarView\" :show-date=\"showDate\" :events=\"simpleCalendarEvents\" :eventTop=\"windowWidth <= 400 ? '2rem' : '3rem'\" eventBorderHeight=\"0px\" eventContentHeight=\"1.65rem\" class=\"theme-default\" @click-date=\"openAddNewEvent\" @click-event=\"openEditEvent\">\r\n            <div slot=\"header\" class=\"mb-4\">\r\n              <div class=\"vx-row no-gutter\">\r\n\r\n                  <!-- Month Name -->\r\n                  <div class=\"vx-col w-1/3 items-center sm:flex hidden\">\r\n                      <!-- Add new event button -->\r\n                      <vs-button icon-pack=\"feather\" class=\"mr-2\" color=\"dark\" style=\"padding: 7px 10px 7px 10px; font-size: 14px;\" icon=\"icon-plus\" @click=\"promptAddNewEvent(new Date())\">Crear evento</vs-button>\r\n                      <vs-button color=\"dark\" type=\"border\" style=\"padding: 7px 10px 7px 10px; font-size: 14px;\" @click=\"$router.go()\">Hoy</vs-button>\r\n                  </div>\r\n\r\n                  <!-- Current Month -->\r\n                  <div class=\"vx-col sm:w-1/3 w-full sm:my-0 my-3 flex sm:justify-end justify-center order-last\">\r\n                      <div class=\"flex items-center\">\r\n                          <feather-icon :icon=\"$vs.rtl ? 'ChevronRightIcon' : 'ChevronLeftIcon'\" @click=\"updateMonth(-1)\" svgClasses=\"w-5 h-5 m-1\" class=\"cursor-pointer bg-primary text-white rounded-full\" />\r\n\r\n                          <span class=\"mx-3 text-xl font-medium whitespace-no-wrap\">{{ showDate.toString().substring(0,16) }}</span>\r\n\r\n                          <feather-icon :icon=\"$vs.rtl ? 'ChevronLeftIcon' : 'ChevronRightIcon'\" @click=\"updateMonth(1)\" svgClasses=\"w-5 h-5 m-1\" class=\"cursor-pointer bg-primary text-white rounded-full\" />\r\n                      </div>\r\n                  </div>\r\n\r\n                  <div class=\"vx-col sm:w-1/3 w-full flex justify-center\">\r\n                      <template v-for=\"(view, index) in calendarViewTypes\">\r\n                          <vs-button v-if=\"calendarView === view.val\" :key=\"String(view.val) + 'filled'\" type=\"filled\" style=\"padding: 7px 10px 7px 10px !important; font-size: 14px;\" class=\"p-3 md:px-8 md:py-3\" :class=\"{'border-l-0': index, 'rounded-r-none': calendarViewTypes.length !== index+1}\" @click=\"calendarView = view.val\">{{ view.label }}</vs-button>\r\n                          <vs-button v-else :key=\"String(view.val) + 'border'\" type=\"line\" style=\"padding: 7px 10px 7px 10px !important; font-size: 14px;\" class=\"p-3 md:px-8 md:py-3\" :class=\"{'border-l-0': index, 'rounded-r-none': calendarViewTypes.length !== index+1}\" @click=\"calendarView = view.val\">{{ view.label }}</vs-button>\r\n                      </template>\r\n\r\n                  </div>\r\n              </div>\r\n              <div class=\"vx-row sm:flex hidden mt-4\">\r\n                  <div class=\"vx-col w-full flex\">\r\n                      <!-- Labels -->\r\n                      <!-- {{calendarLabels}} -->\r\n                      <div class=\"flex flex-wrap sm:justify-start justify-center\">\r\n                          <div v-for=\"(label, index) in calendarLabels\" :key=\"index\" class=\"flex items-center mr-4 mb-2\">\r\n                              <div class=\"h-3 w-3 inline-block rounded-full mr-2\" :class=\"'bg-' + label.color\"></div>\r\n                              <span>{{ label.text }}</span>\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n            </div>\r\n          </calendar-view>\r\n        </div>\r\n        <!-- ADD EVENT -->\r\n        <vs-popup background-color=\"rgba(255,255,255,.6)\" :title=\"tituloModal\" :active.sync=\"activePromptAddEvent\">\r\n            <div class=\"calendar__label-container flex mb-6\" v-if=\"seleccionadoInsitucion == false\">\r\n                <vs-chip style=\"width: 100px;height: 25px;margin-top: 1px;\" class=\"text-white\" :class=\"'bg-' + labelLocal.color\">{{ labelLocal.text }}</vs-chip>\r\n                     <span v-if=\"estado == 1\"  style=\"margin-top:2px;\">\r\n                        <vs-chip color=\"success\">Realizada</vs-chip>\r\n                    </span>\r\n                    <vs-alert v-if=\"error ==  true\" style=\"font-size:14px;width:75%;font-weight:500;\" active=\"true\" color=\"danger\">\r\n                        {{messageError}}\r\n                    </vs-alert>\r\n                <vs-dropdown vs-custom-content vs-trigger-click class=\"ml-auto my-2 cursor-pointer\">\r\n                    <feather-icon icon=\"TagIcon\" svgClasses=\"h-5 w-5\" class=\"cursor-pointer\" @click.prevent></feather-icon>\r\n                    <vs-dropdown-menu style=\"z-index: 200001\">\r\n                        <vs-dropdown-item v-for=\"(label, index) in calendarLabels\" :key=\"index\" @click=\"labelLocal = label\">\r\n                            <div class=\"h-3 w-3 inline-block rounded-full mr-2\" :class=\"'bg-' + label.color\"></div>\r\n                            <span>{{ label.text }}</span>\r\n                        </vs-dropdown-item>\r\n                    </vs-dropdown-menu>\r\n                </vs-dropdown>\r\n            </div>\r\n            <div v-if=\"usuario.id_group == 11\">\r\n                <vs-row v-if=\"seleccionadoInsitucion ==  false\" class=\"mt-2\">\r\n                    <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\">\r\n                        <p style=\"color:red;\" v-if=\"nombreInstitucion == '' || nombreInstitucion == null \">\r\n                            Sin Institución\r\n                        </p>\r\n                        <div v-else>\r\n                          <div class=\"flex justify-center\">\r\n                            <vs-chip color=\"success\">\r\n                              Institución: {{ nombreInstitucion}}\r\n                            </vs-chip>\r\n                          </div>\r\n                          <div class=\"flex justify-center\">\r\n                            <vs-chip color=\"dark\" class=\"ml-2\">\r\n                              <p class=\"text-center mt-2\">Asesor: {{ asesorSelect }}</p>\r\n                            </vs-chip>\r\n                          </div>\r\n                        </div>\r\n                    </vs-col>\r\n                </vs-row>\r\n                <vs-row v-if=\"seleccionadoInsitucion ==  true\" class=\"mt-2\">\r\n                    <vs-col vs-type=\"flex\" vs-justify=\"left\" vs-align=\"left\" vs-w=\"6\">\r\n                        <vs-button size=\"small\" color=\"success\" radius=\"\" @click=\"regresar()\" icon=\"reply\" type=\"gradient\"></vs-button>\r\n                        <vs-button size=\"small\" class=\"ml-3\" @click=\"popupAddNuevaInstitucion = true;activePromptAddEvent = false;\" type=\"relief\">Añadir nueva institución</vs-button>\r\n                    </vs-col>\r\n                </vs-row>\r\n                <div class=\"flex justify-center\">\r\n                  <vs-button color=\"warning\" class=\"mt-2\" v-if=\"seleccionadoInsitucion == false\" size=\"small\"  @click=\"seleccionadoInsitucion = true;tipo = 1;\" type=\"relief\">Asignar Institución de prolipa\r\n                  </vs-button>\r\n                  <vs-button color=\"primary\" class=\"mt-2 ml-3\" icon=\"info\" v-if=\"seleccionadoInsitucion == false\" size=\"small\"  @click=\"seleccionadoInsitucion = true;getInstitucionCreadasByAsesor();tipo = 2;getPeriodos();\" type=\"relief\">Instituciones creadas por mi</vs-button>\r\n                </div>\r\n                <div style=\"width:100%;display:flex;\" v-if=\"seleccionadoInsitucion ==  true && tipo == 1\" class=\"mt-5\">\r\n                    <div style=\"width:80%;\">\r\n                        <vs-input icon=\"search\" style=\"width:100%;\" placeholder=\"Search\" @keyup.enter=\"getInstitucion()\" v-model=\"busquedaInstitucion\" />\r\n                    </div>\r\n                    <div style=\"width:20%;margin-left:15px;\">\r\n                        <vs-button radius color=\"warning\" @click=\"getInstitucion()\" type=\"filled\" icon=\"search\"></vs-button>\r\n                    </div>\r\n                </div>\r\n                <div v-if=\"instituciones.length >0\">\r\n                    <vs-table stripe max-items=\"5\" search pagination :data=\"instituciones\">\r\n                        <template slot=\"header\">\r\n                            <div class=\"vx-row\">\r\n                                <div class=\"vx-col w-full m-3\">\r\n                                    Cantidad: {{instituciones.length}}\r\n                                </div>\r\n                            </div>\r\n                        </template>\r\n                        <template slot=\"thead\">\r\n                            <vs-th sort-key=\"nombreInstitucion\">Institución</vs-th>\r\n                            <vs-th sort-key=\"nombre\">Localidad</vs-th>\r\n                            <vs-th sort-key=\"nombre\">Periodo</vs-th>\r\n                            <vs-th>Acciones</vs-th>\r\n                        </template>\r\n                        <template slot-scope=\"{data}\">\r\n                            <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                                <vs-td :data=\"data[indextr].nombreInstitucion\">\r\n                                    {{data[indextr].nombreInstitucion}}<br>\r\n                                    <div v-if=\"tr.institucion_temporal_id\">\r\n                                      <b>Asesor:</b>\r\n                                      <p>{{ usuario.nombres + \" \" + usuario.apellidos }}</p>\r\n                                    </div>\r\n                                    <div v-else>\r\n                                      <b>Asesor:</b>\r\n                                      <p>{{ tr.nombre_asesor + \" \" + tr.apellido_asesor }}</p>\r\n                                    </div>\r\n                                </vs-td>\r\n                                <vs-td :data=\"data[indextr].nombreregion\">\r\n                                    {{data[indextr].nombreregion}} <br>\r\n                                    <small>{{data[indextr].ciudad}}</small>\r\n                                </vs-td>\r\n                                <vs-td>\r\n                                    {{ tr.periodo }}\r\n                                </vs-td>\r\n                                <vs-td>\r\n                                    <div class=\"flex\">\r\n                                        <vs-button size=\"small\" type=\"relief\" style=\"border-radius: 5px;\" icon-pack=\"feather\" icon=\"icon-bookmark\" class=\"mr-2\" color=\"primary\" @click=\"asginarInstitucion(tr);error=false\">\r\n                                            Asignar\r\n                                        </vs-button>\r\n                                    </div>\r\n                                </vs-td>\r\n                            </vs-tr>\r\n                        </template>\r\n                    </vs-table>\r\n                </div>\r\n            </div>\r\n            <div v-if=\"seleccionadoInsitucion == false\">\r\n                <br>\r\n                <vs-input class=\"w-full mb-3 \" label-placeholder=\"Título del evento *\" v-model=\"title\"></vs-input>\r\n                <div class=\"vx-row mb-3\">\r\n                    <div class=\"vx-col sm:w-1/2 w-full\">\r\n                        <small class=\"date-label\">Fecha inicio *</small>\r\n                        <datepicker class=\"w-full\" name=\"start-date\" v-model=\"startDate\" @input=\"formatoFechas()\" :disabled=\"disabledFrom\"></datepicker>\r\n                    </div>\r\n                    <div class=\"vx-col sm:w-1/2 w-full\" v-if=\"fvisita == true\">\r\n                        <small class=\"date-label\">Fecha que visita</small>\r\n                        <datepicker class=\"w-full\" :disabledDates=\"disabledDatesTo\" @input=\"formatoFechas()\" name=\"end-date\" v-model=\"endDate\"></datepicker>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"vx-row mb-3\">\r\n                    <div class=\"vx-col sm:w-1/2 w-full\">\r\n                        <small class=\"date-label\">Hora inicio *</small>\r\n                        <flat-pickr class=\"w-full\" :config=\"configdateTimePicker\" v-model=\"hora_inicio\" />\r\n                    </div>\r\n                    <div class=\"vx-col sm:w-1/2 w-full\">\r\n                        <small class=\"date-label\">Hora fin *</small>\r\n                        <flat-pickr class=\"w-full\" :config=\"configdateTimePicker\" v-model=\"hora_fin\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <!--PARA LOS ASESORES AGENDA-->\r\n            <div v-if=\"usuario.id_group == 11\">\r\n\r\n                <vs-divider color=\"success\" v-if=\"seleccionadoInsitucion == false\">Opciones</vs-divider>\r\n                <vs-alert v-if=\"error2 ==  true\" style=\"font-size:14px;width:75%;font-weight:500;\" active=\"true\" color=\"danger\">\r\n                        {{messageError}}\r\n                </vs-alert>\r\n                <vs-row v-if=\"seleccionadoInsitucion == false\" class=\"mt-2\">\r\n                    <vs-col vs-type=\"flex\" vs-justify=\"left\" vs-align=\"left\" vs-w=\"3\" vs-lg=\"3\" vs-sm=\"4\" vs-xs=\"4\">\r\n                        <vs-checkbox color=\"success\" v-model=\"opciones.presentacion\">Presentación</vs-checkbox>\r\n                    </vs-col>\r\n                    <vs-col vs-type=\"flex\" vs-justify=\"left\" vs-align=\"left\" vs-w=\"3\" vs-lg=\"3\" vs-sm=\"4\" vs-xs=\"4\">\r\n                        <vs-checkbox color=\"success\" v-model=\"opciones.entrega_muestras\">Entregas de muestras</vs-checkbox>\r\n                    </vs-col>\r\n                    <vs-col vs-type=\"flex\" vs-justify=\"left\" vs-align=\"left\" vs-w=\"3\" vs-lg=\"3\" vs-sm=\"4\" vs-xs=\"4\">\r\n                        <vs-checkbox color=\"success\" v-model=\"opciones.reunion\">Reunión</vs-checkbox>\r\n                    </vs-col>\r\n                    <vs-col vs-type=\"flex\" vs-justify=\"left\" vs-align=\"left\" vs-w=\"3\" vs-lg=\"3\" vs-sm=\"4\" vs-xs=\"4\">\r\n                        <vs-checkbox color=\"success\" v-model=\"opciones.seguimiento\">Seguimiento</vs-checkbox>\r\n                    </vs-col>\r\n\r\n                    <vs-col class=\"mt-2\" vs-type=\"flex\" vs-justify=\"left\" vs-align=\"left\" vs-w=\"3\" vs-lg=\"3\" vs-sm=\"4\" vs-xs=\"4\">\r\n                        <vs-checkbox color=\"success\" v-model=\"opciones.cierre\">Cierre</vs-checkbox>\r\n                    </vs-col>\r\n                    <vs-col class=\"mt-2\" vs-type=\"flex\" vs-justify=\"left\" vs-align=\"left\" vs-w=\"3\" vs-lg=\"3\" vs-sm=\"4\" vs-xs=\"4\">\r\n                        <vs-checkbox color=\"success\" v-model=\"opciones.cobranza\">Cobranza</vs-checkbox>\r\n                    </vs-col>\r\n                    <vs-col class=\"mt-2\" vs-type=\"flex\" vs-justify=\"left\" vs-align=\"left\" vs-w=\"3\" vs-lg=\"3\" vs-sm=\"4\" vs-xs=\"4\">\r\n                        <vs-checkbox color=\"success\" v-model=\"opciones.post_venta\">Post Venta</vs-checkbox>\r\n                    </vs-col>\r\n                    <vs-col class=\"mt-2\" vs-type=\"flex\" vs-justify=\"left\" vs-align=\"left\" vs-w=\"3\" vs-lg=\"3\" vs-sm=\"4\" vs-xs=\"4\">\r\n                        <vs-checkbox color=\"success\" v-model=\"opciones.retiro_cartas\">Retiro de cartas</vs-checkbox>\r\n                    </vs-col>\r\n\r\n                    <vs-col class=\"mt-2\" vs-type=\"flex\" vs-justify=\"left\" vs-align=\"left\" vs-w=\"3\" vs-lg=\"3\" vs-sm=\"4\" vs-xs=\"4\">\r\n                        <vs-checkbox color=\"success\" v-model=\"opciones.retiro_muestras\">Retiro de muestras</vs-checkbox>\r\n                    </vs-col>\r\n                    <vs-col class=\"mt-2\" vs-type=\"flex\" vs-justify=\"left\" vs-align=\"left\" vs-w=\"3\" vs-lg=\"3\" vs-sm=\"4\" vs-xs=\"4\">\r\n                        <vs-checkbox color=\"success\" v-model=\"opciones.capacitacion\">Capacitación</vs-checkbox>\r\n                    </vs-col>\r\n                    <vs-col class=\"mt-2\" vs-type=\"flex\" vs-justify=\"left\" vs-align=\"left\" vs-w=\"3\" vs-lg=\"3\" vs-sm=\"4\" vs-xs=\"4\">\r\n                        <vs-checkbox color=\"success\" v-model=\"opciones.otraEditorial\">Otra Editorial</vs-checkbox>\r\n                    </vs-col>\r\n                    <vs-col v-if=\"opciones.otraEditorial == true\" class=\"mt-2\" vs-type=\"flex\" vs-justify=\"left\" vs-align=\"left\" vs-w=\"3\" vs-lg=\"3\" vs-sm=\"4\" vs-xs=\"4\">\r\n                        <vs-input class=\"inputx w-full\" placeholder=\"Escriba el nombre de la editorial\" v-model=\"opciones.editorial\" />\r\n                    </vs-col>\r\n                </vs-row>\r\n            </div>\r\n\r\n            <vs-textarea counter=\"250\" label=\"Mensaje\" :counter-danger.sync=\"counterDanger\" v-if=\"seleccionadoInsitucion == false\" name=\"event-url\" class=\"w-full mb-3 mt-4\" v-model=\"url\" />\r\n            <vs-row class=\"mt-3\" v-if=\"seleccionadoInsitucion == false\">\r\n                <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"right\" vs-w=\"12\">\r\n                    <vs-button @click=\"addEvent()\" type=\"relief\">Guardar</vs-button>\r\n                    <vs-button color=\"warning\" class=\"ml-2\" @click=\"removeEvent()\" type=\"relief\">{{label_cancel}}</vs-button>\r\n                </vs-col>\r\n            </vs-row>\r\n        </vs-popup>\r\n         <!--MODAL PARA AGREGAR NUEVA INSTITUCION-->\r\n         <vs-popup background-color=\"rgba(255,255,255,.6)\" title=\"Agregar Nueva Institución\" :active.sync=\"popupAddNuevaInstitucion\">\r\n            <vs-button size=\"small\" color=\"success\" radius=\"\" @click=\"popupAddNuevaInstitucion=false;activePromptAddEvent=true;\" icon=\"reply\" type=\"gradient\"></vs-button>\r\n            <vs-row class=\"mt-2\">\r\n                <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\">\r\n                    <ul class=\"leftx\" style=\"display:flex;flex-direction: row;\">\r\n                        <li class=\"ml-2\">\r\n                            <vs-radio v-model=\"temporalInstitucion.region\" @input=\"getPeriodos()\" vs-name=\"radios1\" vs-value=\"1\">Sierra</vs-radio>\r\n                        </li>\r\n                        <li class=\"ml-2\">\r\n                            <vs-radio v-model=\"temporalInstitucion.region\" @input=\"getPeriodos()\" vs-name=\"radios1\" vs-value=\"2\">Costa</vs-radio>\r\n                        </li>\r\n                    </ul>\r\n                </vs-col>\r\n            </vs-row>\r\n            <vs-row>\r\n                <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\">\r\n                    <div class=\"vx-col w-full mt-5\">\r\n                        Seleccione una ciudad:\r\n                        <v-select :options=\"arregloCiudad\" :reduce=\"arregloCiudad => arregloCiudad\" label=\"nombre\" class=\"w-full\" v-model=\"temporalInstitucion.ciudad\" />\r\n                    </div>\r\n                </vs-col>\r\n            </vs-row>\r\n            <vs-row>\r\n                <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\">\r\n                    <div class=\"vx-col w-full mt-5\">\r\n                        Seleccione un período:\r\n                        <v-select :options=\"arregloPeriodos\" :reduce=\"arregloPeriodos => arregloPeriodos.idperiodoescolar\" label=\"periodoescolar\" class=\"w-full\" v-model=\"temporalInstitucion.periodo\" />\r\n                    </div>\r\n                </vs-col>\r\n            </vs-row>\r\n            <vs-row class=\"mt-2\">\r\n                <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\">\r\n                    <vs-input label=\"Escriba un nombre para la institución\" class=\"w-full\" v-model=\"temporalInstitucion.nombre_institucion\" placeholder=\"Institución\" />\r\n                </vs-col>\r\n            </vs-row>\r\n            <vs-row class=\"mt-5\">\r\n                <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\">\r\n                    <vs-button @click=\"agregarInstitucionTemporal()\" type=\"gradient\">Agregar Institución</vs-button>\r\n                </vs-col>\r\n            </vs-row>\r\n        </vs-popup>\r\n    </div>\r\n     <vs-popup class=\"holamundo\" fullscreen title=\"Listado de Planificaciones\" :active.sync=\"popupFiltroInstitucion\">\r\n       <vs-table max-items=\"10\"  stripe search pagination :data=\"filtroInstituciones\">\r\n              <template slot=\"header\">\r\n                  <div style=\"display:flex;\">\r\n                     <p>Cantidad planificaciones listadas: <span style=\"font-weight:bold;\">{{filtroInstituciones.length}}</span></p>\r\n                  </div>\r\n                  <div class=\"ml-5\">\r\n                        <flat-pickr  :config=\"configdateTimePicker2\" @input=\"getAllPlanificaciones();filtroFecha=true\" v-model=\"filtro.fecha\"  placeholder=\"Fecha a filtrar\" class=\"m-1\" style=\"display: inline-block;width: 100%;\" />\r\n\r\n                  </div>\r\n                  <div class=\"ml-5\">\r\n                       <vs-button radius color=\"danger\" @click=\"filtroFecha = false; filtro.fecha = '';getAllPlanificaciones()\" type=\"gradient\" icon=\"close\"></vs-button>\r\n                  </div>\r\n              </template>\r\n              <template slot=\"thead\">\r\n                  <vs-th>Titulo</vs-th>\r\n                  <vs-th>Fecha</vs-th>\r\n                  <vs-th>Hora</vs-th>\r\n                  <vs-th>Opciones</vs-th>\r\n                  <vs-th>Institución</vs-th>\r\n                  <vs-th>Observación</vs-th>\r\n              </template>\r\n              <template slot-scope=\"{data}\">\r\n                  <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                      <vs-td>\r\n                          {{data[indextr].title}}<br>\r\n                      </vs-td>\r\n                      <vs-td>\r\n                          Fecha inicio:\r\n                          <span> {{data[indextr].startDate}}</span><br>\r\n                          Fecha fin:\r\n                          <span> {{data[indextr].endDate}}</span><br>\r\n                      </vs-td>\r\n                      <vs-td>\r\n\r\n                          {{data[indextr].hora_inicio}}<br>\r\n                          {{ tr.hora_fin }}\r\n                      </vs-td>\r\n                      <vs-td height=\"30%\" width=\"50%\">\r\n                        <div class=\"overflow-y-auto h-24\">\r\n                            <vs-chip color=\"primary\" v-if=\"tr.opciones.presentacion\">\r\n                                Presentación\r\n                            </vs-chip>\r\n                            <vs-chip color=\"primary\" v-if=\"tr.opciones.entrega_muestras\">\r\n                                Entrega muestras\r\n                            </vs-chip>\r\n                            <vs-chip color=\"primary\" v-if=\"tr.opciones.reunion\">\r\n                                Reunión\r\n                            </vs-chip>\r\n                            <vs-chip color=\"primary\" v-if=\"tr.opciones.seguimiento\">\r\n                                Seguimiento\r\n                            </vs-chip>\r\n                            <vs-chip color=\"primary\" v-if=\"tr.opciones.cierre\">\r\n                                Cierre\r\n                            </vs-chip>\r\n                            <vs-chip color=\"primary\" v-if=\"tr.opciones.cobranza\">\r\n                                Cobranza\r\n                            </vs-chip>\r\n                            <vs-chip color=\"primary\" v-if=\"tr.opciones.post_venta\">\r\n                                Post venta\r\n                            </vs-chip>\r\n                            <vs-chip color=\"primary\" v-if=\"tr.opciones.retiro_cartas\">\r\n                                Retiro cartas\r\n                            </vs-chip>\r\n                            <vs-chip color=\"primary\" v-if=\"tr.opciones.retiro_muestras\">\r\n                                Retiro muestras\r\n                            </vs-chip>\r\n                            <vs-chip color=\"primary\" v-if=\"tr.opciones.capacitacion\">\r\n                              Capacitación\r\n                            </vs-chip>\r\n                        </div>\r\n                    </vs-td>\r\n                      <vs-td>\r\n                          <div v-if=\"tr.estado_institucion_temporal == '1'\">\r\n                              {{ tr.nombre_institucion_temporal }}<br/>\r\n                               {{ tr.periodoescolar }}\r\n                          </div>\r\n                          <div v-else>\r\n                              {{ tr.nombreInstitucion }}<br/>\r\n                              {{ tr.periodoescolar }}\r\n                          </div>\r\n                      </vs-td>\r\n                      <vs-td>\r\n                          {{ tr.url }}\r\n                      </vs-td>\r\n\r\n\r\n                  </vs-tr>\r\n              </template>\r\n        </vs-table>\r\n    </vs-popup>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport $ from 'jquery'\r\nimport {\r\n    CalendarView,\r\n    CalendarViewHeader\r\n} from 'vue-simple-calendar'\r\nimport moduleCalendar from '@/store/calendar2/moduleCalendar.js'\r\nrequire('vue-simple-calendar/static/css/default.css')\r\nimport vSelect from 'vue-select'\r\nimport moment from 'moment'\r\nimport Datepicker from 'vuejs-datepicker'\r\nimport flatPickr from 'vue-flatpickr-component';\r\nimport 'flatpickr/dist/flatpickr.css';\r\nimport {\r\n    en,\r\n    he\r\n} from 'vuejs-datepicker/src/locale'\r\n\r\nexport default {\r\n    components: {\r\n        CalendarView,\r\n        CalendarViewHeader,\r\n        Datepicker,\r\n        flatPickr,\r\n        'v-select': vSelect,\r\n    },\r\n    data() {\r\n        return {\r\n            tituloModal:'Planificación',\r\n            popupFiltroInstitucion:false,\r\n            error: false,\r\n            error2:false,\r\n            messageError: \"\",\r\n            ciudadSelect: '',\r\n            popupAddNuevaInstitucion: false,\r\n            seleccionadoInsitucion: false,\r\n            nombreInstitucion: '',\r\n            busquedaInstitucion: \"\",\r\n            instituciones: [],\r\n            popupaddInstitucion: false,\r\n            opciones: {\r\n                presentacion: false,\r\n                entrega_muestras: false,\r\n                reunion: false,\r\n                seguimiento: false,\r\n                cierre: false,\r\n                cobranza: false,\r\n                post_venta: false,\r\n                retiro_cartas: false,\r\n                retiro_muestras: false,\r\n                capacitacion: false,\r\n                sinSello: true,\r\n                editorial: '',\r\n                otraEditorial: false,\r\n            },\r\n\r\n            usuario: [],\r\n            showDate: new Date(),\r\n            disabledFrom: false,\r\n            titulo: '',\r\n            id: 0,\r\n            title: '',\r\n            startDate: '',\r\n            endDate: '',\r\n            labelLocal: {\r\n                text: 'Baja',\r\n                color: 'success'\r\n            },\r\n            startDate_send: '',\r\n            endDate_sed: '',\r\n            langHe: he,\r\n            langEn: en,\r\n\r\n            url: '',\r\n            calendarView: 'month',\r\n\r\n            activePromptAddEvent: false,\r\n            label_cancel: 'Cancelar',\r\n            calendarViewTypes: [{\r\n                    label: 'Mes',\r\n                    val: 'month'\r\n                },\r\n                {\r\n                    label: 'Semana',\r\n                    val: 'week'\r\n                },\r\n                {\r\n                    label: 'Año',\r\n                    val: 'year'\r\n                }\r\n            ],\r\n            time: null,\r\n            configdateTimePicker: {\r\n                enableTime: true,\r\n                enableSeconds: false,\r\n                noCalendar: true\r\n            },\r\n            configdateTimePicker2: {\r\n                enableTime: true,\r\n                dateFormat: 'Y-m-d'\r\n            },\r\n            hora_inicio: '',\r\n            hora_fin: '',\r\n            institucion_id: '',\r\n            counterDanger: false,\r\n            arregloCiudad: [],\r\n            temporalInstitucion: {\r\n                ciudad: '',\r\n                nombreInstitucion: '',\r\n                region: '2',\r\n                periodo:'',\r\n            },\r\n            institucion_id_temporal: '',\r\n            estado_institucion_temporal: 0,\r\n            periodo_id_temporal: 0,\r\n            nombreInstitucionTemporal: '',\r\n            filtroInstituciones:[],\r\n            estado: '0',\r\n            filtroFecha:false,\r\n            filtro:{\r\n                fecha:null\r\n            },\r\n            getDatos:[],\r\n            tipo:'1',\r\n            fvisita:false,\r\n            InstitucionesFaltan:[],\r\n            arregloPeriodos:[],\r\n            asesorSelect:'',\r\n        }\r\n    },\r\n    computed: {\r\n        simpleCalendarEvents() {\r\n          this.activePromptAddEvent = false;\r\n            return this.$store.state.calendar.events\r\n        },\r\n        disabledDatesTo() {\r\n            return {\r\n                to: new Date(this.startDate)\r\n            }\r\n        },\r\n        disabledDatesFrom() {\r\n            return {\r\n                from: new Date(this.endDate)\r\n            }\r\n        },\r\n        calendarLabels() {\r\n            return this.$store.state.calendar.eventLabels\r\n        },\r\n        labelColor() {\r\n            return (label) => {\r\n                if (label === 'business') return 'success'\r\n                else if (label === 'work') return 'warning'\r\n                else if (label === 'personal') return 'danger'\r\n                else if (label === 'baja') return 'primary'\r\n            }\r\n        },\r\n        windowWidth() {\r\n            return this.$store.state.windowWidth\r\n        }\r\n    },\r\n    methods: {\r\n        getPeriodos(){\r\n            let me = this\r\n            me.arregloPeriodos = []\r\n            this.$http.get(this.$server_url+'get_periodos_pedidos')\r\n            .then(res => {\r\n                let datos = res.data\r\n                me.arregloPeriodos = datos.filter(p => p.estado == 1 && p.region_idregion == me.temporalInstitucion.region)\r\n            })\r\n            .catch(function (error) {\r\n            })\r\n        },\r\n        //instituciones creadas por el asesor\r\n        getInstitucionCreadasByAsesor() {\r\n            let me = this;\r\n            me.temporalInstitucion ={\r\n                ciudad: '',\r\n                nombreInstitucion: '',\r\n                region: '2',\r\n                periodo:''\r\n            }\r\n            me.instituciones = [];\r\n             this.$http.get(this.$server_url + 'listaInsitucionAsesor?temporales=yes'+'&asesor_id=' + me.usuario.idusuario)\r\n                .then(function (res) {\r\n                    me.instituciones = res.data;\r\n                    me.$vs.loading.close()\r\n                    if (res.data.message) {\r\n                        me.$vs.notify({\r\n                            text: res.data.message,\r\n                            color: 'success',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-user',\r\n                            time: 8000\r\n                        })\r\n                    }\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                    me.$vs.loading.close()\r\n                })\r\n        },\r\n        agregarInstitucionTemporal() {\r\n            let me = this;\r\n            if (me.temporalInstitucion.nombre_institucion == \"\" || me.temporalInstitucion.nombre_institucion == null || me.temporalInstitucion.nombre_institucion == undefined) {\r\n                me.$vs.notify({\r\n                    color: 'primary',\r\n                    title: 'Mensaje',\r\n                    text: 'Debe escribir una institución por favor'\r\n                })\r\n                return false;\r\n            }\r\n            if(me.temporalInstitucion.periodo == null || me.temporalInstitucion.periodo == \"\" || me.temporalInstitucion.periodo == undefined ){\r\n                me.$vs.notify({\r\n                    color: 'primary',\r\n                    title: 'Mensaje',\r\n                    text: 'Debe seleccionar un período por favor'\r\n                    })\r\n                return false;\r\n            }\r\n            let formData = new FormData();\r\n            formData.append('nombre_institucion', me.temporalInstitucion.nombre_institucion);\r\n            formData.append('ciudad', me.temporalInstitucion.ciudad.nombre);\r\n            formData.append('region', me.temporalInstitucion.region);\r\n            formData.append('periodo', me.temporalInstitucion.periodo);\r\n            formData.append('asesor_id', me.usuario.idusuario);\r\n            me.$vs.loading()\r\n            this.$http.post(this.$server_url + 'GuardarInstitucionTemporal', formData)\r\n            .then(res => {\r\n                me.$vs.loading.close()\r\n                if(res.data.status == 0){\r\n                    me.$vs.notify({\r\n                    text: res.data.message,\r\n                    color: 'warning',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-check'\r\n                    })\r\n                    return\r\n                }\r\n                me.popupAddNuevaInstitucion = false;\r\n                me.activePromptAddEvent = true\r\n                me.seleccionadoInsitucion = false;\r\n                me.nombreInstitucion = me.temporalInstitucion.nombre_institucion\r\n                me.institucion_id_temporal = res.data.institucion_temporal_id\r\n                me.instituciones = []\r\n                me.periodo_id_temporal = res.data.periodo_id\r\n                me.estado_institucion_temporal = 1;\r\n                me.$vs.notify({\r\n                    text: \"Se guardo correctamente\",\r\n                    color: 'success',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-check'\r\n                })\r\n            })\r\n        },\r\n        //lista de ciudades para usar en el select\r\n        listaCiudades() {\r\n            let me = this\r\n            this.$http.get(this.$server_url + `ciudad`).then(res => {\r\n                    me.arregloCiudad = res.data;\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error)\r\n                })\r\n        },\r\n        regresar() {\r\n            let me = this;\r\n            me.seleccionadoInsitucion = false;\r\n            me.instituciones = []\r\n            me.error = false\r\n            me.error2 = false\r\n        },\r\n\r\n        asginarInstitucion(tr) {\r\n             let me = this;\r\n            if(me.tipo == 1){\r\n                me.institucion_id               = tr.idInstitucion\r\n                me.nombreInstitucion            = tr.nombreInstitucion\r\n                me.asesorSelect                 = tr.nombre_asesor + \" \"+ tr.apellido_asesor\r\n                me.estado_institucion_temporal  = 0;\r\n                me.seleccionadoInsitucion       = false;\r\n                me.instituciones                = []\r\n            }else{\r\n                me.nombreInstitucion            = tr.nombreInstitucion\r\n                me.asesorSelect                 = me.usuario.nombres + \" \"+ me.usuario.apellidos\r\n                me.institucion_id_temporal      = tr.institucion_temporal_id\r\n                me.instituciones                = []\r\n                me.periodo_id_temporal          = tr.periodo_id\r\n                me.estado_institucion_temporal  = 1;\r\n                me.seleccionadoInsitucion       = false;\r\n            }\r\n\r\n        },\r\n\r\n        //filtro  de la agenda de planificaciones del asesor\r\n          getAllPlanificaciones(){\r\n            let me = this;\r\n            me.filtroInstituciones = []\r\n\r\n            this.$http.get(this.$server_url + 'getPlanificacionesAsesor?asesor_id=' + me.usuario.idusuario)\r\n                .then(function (res) {\r\n\r\n                    let datosProlipa = res.data\r\n                    let datos = []\r\n\r\n\r\n                    for (let i = 0; i < datosProlipa.length; i++) {\r\n\r\n                        datos.push({\r\n                            \"nombreInstitucion\": datosProlipa[i].nombreInstitucion,\r\n                            \"periodoescolar\": datosProlipa[i].periodoescolar,\r\n                            \"fecha\":datosProlipa[i].fecha,\r\n                            \"id\": datosProlipa[i].id,\r\n                            \"id_usuario\": datosProlipa[i].id_usuario,\r\n                            \"title\": datosProlipa[i].title,\r\n                            \"label\": datosProlipa[i].label,\r\n                            \"classes\": datosProlipa[i].classes,\r\n                            \"startDate\": datosProlipa[i].startDate,\r\n                            \"endDate\": datosProlipa[i].fecha_que_visita,\r\n                            \"hora_inicio\": datosProlipa[i].hora_inicio,\r\n                            \"hora_fin\": datosProlipa[i].hora_fin,\r\n                            \"url\": datosProlipa[i].url,\r\n                            \"institucion_id\": datosProlipa[i].institucion_id,\r\n                            \"institucion_id_temporal\": datosProlipa[i].institucion_id_temporal,\r\n                            \"nombre_institucion_temporal\": datosProlipa[i].nombre_institucion_temporal,\r\n                            \"estado_institucion_temporal\": datosProlipa[i].estado_institucion_temporal,\r\n                            \"opciones\": JSON.parse(datosProlipa[i].opciones),\r\n                            \"periodo_id\": datosProlipa[i].periodo_id,\r\n                            \"estado\": datosProlipa[i].estado,\r\n                            \"vendedor\": datosProlipa[i].vendedor,\r\n\r\n                        })\r\n                    }\r\n\r\n                   if(me.filtroFecha == true){\r\n                      if(me.filtro.fecha == null || me.filtro.fecha == undefined || me.filtro.fecha == \"\"){\r\n                            me.$vs.notify({\r\n                                text: 'Debe seleccionar una fecha para filtrar',\r\n                                color: 'warning',\r\n                                iconPack: 'feather',\r\n                                icon: 'icon-check'\r\n                            })\r\n                            me.filtroFecha = false\r\n                            return false;\r\n                        }\r\n\r\n                      me.filtroInstituciones = datos.filter(p => p.fecha == me.filtro.fecha)\r\n                   }else{\r\n                      me.filtroInstituciones = datos;\r\n                   }\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                })\r\n        },\r\n\r\n        getInstitucion() {\r\n            let me = this;\r\n            me.instituciones = [];\r\n            if (me.busquedaInstitucion.length < 5) {\r\n                me.$vs.notify({\r\n                    text: 'Minimo 5 caracteres de busqueda',\r\n                    color: 'warning',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-check'\r\n                })\r\n                return false;\r\n            }\r\n            me.$vs.loading()\r\n            var url = \"\"\r\n            url = 'listaInsitucionAsesor?busqueda=' + me.busquedaInstitucion + '&todasInstituciones=yes'\r\n           this.$http.get(this.$server_url + url)\r\n            // this.$http.get(this.$server_url + 'listaInsitucionAsesor?busqueda=' + me.busquedaInstitucion + '&cedula=' + me.usuario.cedula)\r\n            .then(function (res) {\r\n                // me.tmpInstituciones = res.data;\r\n                me.instituciones = res.data;\r\n                // me.filtroRegion();\r\n                me.$vs.loading.close()\r\n                if (res.data.message) {\r\n                    me.$vs.notify({\r\n                        text: res.data.message,\r\n                        color: 'success',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-user',\r\n                        time: 8000\r\n                    })\r\n                }\r\n\r\n            })\r\n            .catch(function (error) {\r\n              console.log(error + ' error');\r\n              me.$vs.loading.close()\r\n\r\n            })\r\n        },\r\n        addEvent() {\r\n          let me = this\r\n          if(me.startDate_send == 'Invalid date'){\r\n            this.startDate_send = this.startDate\r\n          }\r\n          if(me.endDate_send == 'Invalid date'){\r\n            this.endDate_send = this.endDate\r\n          }\r\n          if(this.estado == 1){\r\n            me.error = true\r\n            me.messageError = \"La planificación ya fue registrada ya no puede ser modificada\"\r\n            me.activePromptAddEvent = true\r\n            return false\r\n          }\r\n          if (this.institucion_id == \"\" && this.institucion_id_temporal == \"\") {\r\n              me.error = true;\r\n              me.messageError = \"Seleccione una institución por favor\";\r\n              me.activePromptAddEvent = true\r\n              return false;\r\n          }\r\n          if (this.title == '' || this.startDate_send == '' || this.endDate_send == '' || this.hora_inicio == '' || this.hora_fin == '') {\r\n              me.error = true;\r\n              me.messageError = \"Complete todos los campos antes de guardar\";\r\n              me.activePromptAddEvent = true\r\n              return false;\r\n          }\r\n          //validar que selecciona los checkbox\r\n          if(me.opciones.presentacion == false && me.opciones.entrega_muestras == false && me.opciones.reunion == false && me.opciones.seguimiento == false && me.opciones.cierre == false && me.opciones.cobranza == false && me.opciones.post_venta == false && me.opciones.retiro_cartas == false && me.opciones.retiro_muestras == false && me.opciones.capacitacion == false)\r\n          {\r\n              me.error2 = true;\r\n              me.messageError = \"Debe marcar al menos un recuadro\";\r\n              me.activePromptAddEvent = true\r\n              return false;\r\n          }\r\n          //si el asesor agrega otra editorial debe validarse que ingrese una institucion\r\n          if (this.opciones.otraEditorial == true) {\r\n              // si es tipo de institucion  de prolipa\r\n              me.activePromptAddEvent = true\r\n\r\n              if (this.opciones.editorial == \"\") {\r\n                  me.error = true;\r\n                  me.messageError = \"Ha seleccionado otra editorial tiene que agregar una editorial por favor\";\r\n                  me.activePromptAddEvent = true\r\n                  return false;\r\n              }\r\n              if (this.estado_institucion_temporal == 0) {\r\n                  if (this.institucion_id == \"\" || this.institucion_id == null || this.institucion_id == 0 || this.institucion_id == \"null\") {\r\n                      me.error = true;\r\n                      me.messageError = \"Ha seleccionado otra editorial tiene que agregar una institución por favor\";\r\n                      me.activePromptAddEvent = true\r\n                      return false;\r\n\r\n                  }\r\n              }\r\n              if (this.estado_institucion_temporal == 1) {\r\n                  if (this.institucion_id_temporal == \"\" || this.institucion_id_temporal == null || this.institucion_id_temporal == 0 || this.institucion_id_temporal == \"null\") {\r\n                      me.error = true;\r\n                      me.messageError = \"Ha seleccionado otra editorial tiene que agregar una institución por favor\";\r\n                      me.activePromptAddEvent = true\r\n                      return false;\r\n\r\n                  }\r\n              }\r\n\r\n          }\r\n          const obj = {\r\n              idusuario: this.usuario.idusuario,\r\n              id: this.id,\r\n              title: this.title,\r\n              startDate: this.startDate_send,\r\n              endDate: this.endDate_send,\r\n              classes: 'event-' + this.labelLocal.color,\r\n              label: this.labelLocal.text,\r\n              url: this.url,\r\n              hora_inicio: this.hora_inicio.substring(0, 5),\r\n              hora_fin: this.hora_fin.substring(0, 5),\r\n              institucion_id: this.institucion_id,\r\n              opciones: this.opciones,\r\n              institucion_id_temporal: this.institucion_id_temporal,\r\n              estado_institucion_temporal: this.estado_institucion_temporal,\r\n              periodo_id_temporal: this.periodo_id_temporal,\r\n              nombreInstitucion: this.nombreInstitucion,\r\n              otraEditorial: this.opciones.otraEditorial,\r\n              nombre_editorial: this.opciones.editorial\r\n\r\n          }\r\n          me.$vs.notify({\r\n              text: \"Se guardo correctamente\",\r\n              color: 'success',\r\n              iconPack: 'feather',\r\n              icon: 'icon-check',\r\n              time:5000\r\n          })\r\n          if (this.id != 0) {\r\n              this.$store.dispatch('calendar/editEvent', obj)\r\n          } else {\r\n              this.$store.dispatch('calendar/addEvent', obj)\r\n          }\r\n        },\r\n        updateMonth(val) {\r\n            this.showDate = this.$refs.calendar.getIncrementedPeriod(val)\r\n        },\r\n        clearFields() {\r\n            this.error2 = false\r\n            this.title = this.endDate = this.url = ''\r\n            this.id = 0\r\n            this.labelLocal = {\r\n                text: 'Baja',\r\n                color: 'success'\r\n            }\r\n            this.label_cancel = 'Cancelar'\r\n            this.opciones.presentacion = false\r\n            this.opciones.entrega_muestras = false\r\n            this.opciones.reunion = false\r\n            this.opciones.seguimiento = false\r\n            this.opciones.cierre = false\r\n            this.opciones.cobranza = false\r\n            this.opciones.post_venta = false\r\n            this.opciones.retiro_cartas = false\r\n            this.opciones.retiro_muestras = false\r\n            this.opciones.capacitacion = false\r\n            // this.opciones.sinSello = true\r\n            this.opciones.editorial = \"\"\r\n            this.opciones.otraEditorial = false\r\n            this.institucion_id = \"\"\r\n            this.institucion_id_temporal = \"\"\r\n            this.nombreInstitucion=\"\"\r\n            this.startDate = \"\"\r\n            this.endDate = \"\"\r\n            this.hora_inicio = \"\"\r\n            this.hora_fin = \"\"\r\n            this.url = \"\"\r\n\r\n\r\n\r\n        },\r\n        promptAddNewEvent(date) {\r\n             this.fvisita = false\r\n            this.disabledFrom = false\r\n            this.addNewEventDialog(date)\r\n        },\r\n        addNewEventDialog(date) {\r\n             this.fvisita = false\r\n            this.clearFields()\r\n            this.startDate = date\r\n            this.endDate = date\r\n            this.formatoFechas()\r\n            this.activePromptAddEvent = true\r\n        },\r\n        openAddNewEvent(date) {\r\n            this.fvisita = false\r\n            this.error = false\r\n            this.error2 = false\r\n            this.disabledFrom = true\r\n            this.addNewEventDialog(date)\r\n        },\r\n        openEditEvent(event) {\r\n          let me = this;\r\n          const e                           = this.$store.getters['calendar/getEvent'](event.id)\r\n          me.getInstitucionInfo(e)\r\n          this.fvisita                      = true\r\n          this.error                        = false\r\n          this.error2                       = false\r\n          this.institucion_id               = \"\"\r\n          this.institucion_id_temporal      = \"\"\r\n          this.nombreInstitucion            = \"\"\r\n          let datos                         = JSON.parse(e.opciones)\r\n          this.id                           = e.id\r\n          this.title                        = e.title.split('(')[0]\r\n          this.startDate                    = e.startDate\r\n          this.endDate                      = e.fecha_que_visita\r\n          this.url                          = e.url\r\n          this.labelLocal                   = {\r\n              text: e.label,\r\n              color: e.classes.split('-')[1]\r\n          }\r\n          this.startDate_send               = this.startDate\r\n          this.endDate_send                 = this.endDate\r\n          this.hora_inicio                  = e.hora_inicio\r\n          this.hora_fin                     = e.hora_fin\r\n          this.label_cancel                 = 'Remover'\r\n          this.activePromptAddEvent         = true\r\n          this.estado                       = e.estado\r\n          this.opciones.presentacion        = datos.presentacion\r\n          this.opciones.entrega_muestras    = datos.entrega_muestras\r\n          this.opciones.reunion             = datos.reunion\r\n          this.opciones.seguimiento         = datos.seguimiento\r\n          this.opciones.cierre              = datos.cierre\r\n          this.opciones.cobranza            = datos.cobranza\r\n          this.opciones.post_venta          = datos.post_venta\r\n          this.opciones.retiro_cartas       = datos.retiro_cartas\r\n          this.opciones.retiro_muestras     = datos.retiro_muestras\r\n          this.opciones.capacitacion        = datos.capacitacion\r\n          // this.opciones.sinSello = datos.sinSello\r\n          this.opciones.otraEditorial = datos.otraEditorial\r\n          if (this.opciones.otraEditorial == false) {\r\n              this.opciones.editorial = \"\"\r\n          } else {\r\n              this.opciones.editorial = datos.editorial\r\n          }\r\n\r\n          if (e.estado_institucion_temporal == \"1\") {\r\n              this.nombreInstitucion            = e.nombre_institucion_temporal\r\n              this.institucion_id_temporal      = e.institucion_id_temporal\r\n              this.periodo_id_temporal          = e.periodo_id\r\n              this.estado_institucion_temporal  = 1\r\n          } else {\r\n              this.nombreInstitucion            = e.nombreInstitucion\r\n              this.institucion_id               = e.institucion_id\r\n              this.estado_institucion_temporal  = 0\r\n          }\r\n        },\r\n        getInstitucionInfo(tr){\r\n          let me = this;\r\n          console.log(\"tr\",tr)\r\n          if (tr.estado_institucion_temporal == \"1\") {\r\n            me.asesorSelect                   = me.usuario.nombres + \" \"+ me.usuario.apellidos\r\n          }else{\r\n            this.$http.get(this.$server_url+`institucionActiva?idInstitucion=${tr.institucion_id}`)\r\n              .then(function (res) {\r\n                 if(res.data.length > 0){\r\n                  let nombreAsesor = res.data[0].nombres + \" \" + res.data[0].apellidos\r\n                  me.setNombre(nombreAsesor)\r\n                 }\r\n              })\r\n              .catch(function (error) {\r\n                  console.log(error + ' error');\r\n              })\r\n          }\r\n        },\r\n        setNombre(nombre){\r\n          this.asesorSelect = nombre\r\n        },\r\n        removeEvent() {\r\n            let me = this;\r\n             if(this.estado == 1){\r\n                me.error = true\r\n                me.messageError = \"La Planificación ya fue registrada ya no puede ser modificada\"\r\n                me.activePromptAddEvent = true\r\n                return false\r\n            }\r\n\r\n            if (this.label_cancel == \"Cancelar\") {\r\n                me.activePromptAddEvent = false\r\n                return\r\n            }\r\n\r\n            if (this.id == 0) {\r\n                return\r\n            }\r\n            this.$store.dispatch('calendar/removeEvent', this.id)\r\n            me.activePromptAddEvent = false\r\n        },\r\n        eventDragged(event, date) {\r\n            const e = this.$store.getters['calendar/getEvent'](event.id)\r\n            this.$store.dispatch('calendar/eventDragged', {\r\n                event,\r\n                date\r\n            })\r\n        },\r\n        formatoFechas() {\r\n            this.startDate_send = moment(this.startDate, 'DD/MM/YYYY HH:mm:ss').format('YYYY-MM-DD HH:mm:ss');\r\n            this.endDate_send = moment(this.endDate, 'DD/MM/YYYY HH:mm:ss').format('YYYY-MM-DD HH:mm:ss');\r\n            // alert(' frmat:  '+this.endDate_send)\r\n        },\r\n        completeInstituciones(){\r\n          let me = this;\r\n          this.$http.get(this.$server_url+'completeInstituciones?asesor_id='+me.usuario.idusuario)\r\n          .then(function (res) {\r\n            if(res.data.length > 0){\r\n              me.InstitucionesFaltan = res.data[0]\r\n              me.tituloModal = \"Planificación sin institución agrege la institución por favor\"\r\n              me.openEditFaltantes(me.InstitucionesFaltan)\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n              console.log(error + ' error');\r\n          })\r\n        },\r\n\r\n         openEditFaltantes(tr) {\r\n            let me = this;\r\n             this.activePromptAddEvent = true\r\n            me.clearFields()\r\n            let datos = JSON.parse(tr.opciones)\r\n            this.id = tr.id\r\n            if(tr.title == null){\r\n                tr.title = \"\"\r\n            }else{\r\n                this.title = tr.title.split('(')[0]\r\n            }\r\n            this.startDate = tr.startDate\r\n            this.endDate = tr.fecha_que_visita\r\n            this.url = tr.url\r\n            if(tr.classes == null){\r\n            }else{\r\n                this.labelLocal = {\r\n                    text: tr.label,\r\n                    color: tr.classes.split('-')[1]\r\n                }\r\n            }\r\n\r\n            this.startDate_send               = this.startDate\r\n            this.endDate_send                 = this.endDate\r\n            this.hora_inicio                  = tr.hora_inicio\r\n            this.hora_fin                     = tr.hora_fin\r\n            this.label_cancel                 = 'Cancelar'\r\n            this.activePromptAddEvent         = true\r\n            this.estado                       = tr.estado\r\n            this.opciones.presentacion        = datos.presentacion\r\n            this.opciones.entrega_muestras    = datos.entrega_muestras\r\n            this.opciones.reunion             = datos.reunion\r\n            this.opciones.seguimiento         = datos.seguimiento\r\n            this.opciones.cierre              = datos.cierre\r\n            this.opciones.cobranza            = datos.cobranza\r\n            this.opciones.post_venta          = datos.post_venta\r\n            this.opciones.retiro_cartas       = datos.retiro_cartas\r\n            this.opciones.retiro_muestras     = datos.retiro_muestras\r\n            this.opciones.capacitacion        = datos.capacitacion\r\n            // this.opciones.sinSello = datos.sinSello\r\n            this.opciones.otraEditorial = datos.otraEditorial\r\n            if (this.opciones.otraEditorial == false) {\r\n                this.opciones.editorial = \"\"\r\n            } else {\r\n                this.opciones.editorial = datos.editorial\r\n            }\r\n\r\n            if (tr.estado_institucion_temporal == \"1\") {\r\n                this.nombreInstitucion = tr.nombre_institucion_temporal\r\n                this.institucion_id_temporal = tr.institucion_id_temporal\r\n                this.periodo_id_temporal = tr.periodo_id\r\n                this.estado_institucion_temporal = 1\r\n            } else {\r\n                this.nombreInstitucion = tr.nombreInstitucion\r\n                this.institucion_id = tr.institucion_id\r\n                this.estado_institucion_temporal = 0\r\n\r\n            }\r\n\r\n        },\r\n    },\r\n    created() {\r\n        this.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n        this.$store.registerModule('calendar', moduleCalendar)\r\n        this.$store.dispatch('calendar/fetchEvents')\r\n        this.$store.dispatch('calendar/fetchEventLabels')\r\n        this.listaCiudades()\r\n        this.institucion_id = \"\"\r\n        this.institucion_id_temporal = \"\"\r\n        this.completeInstituciones();\r\n\r\n    },\r\n\r\n    beforeDestroy() {\r\n        this.$store.unregisterModule('calendar')\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import \"@/assets/scss/vuexy/apps/simple-calendar.scss\";\r\n</style>\r\n"]}]}