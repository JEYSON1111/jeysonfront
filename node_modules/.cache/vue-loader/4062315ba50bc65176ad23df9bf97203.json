{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\pedidos\\asesor\\contratos\\LiquidacionVentaDirecta.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\pedidos\\asesor\\contratos\\LiquidacionVentaDirecta.vue","mtime":1712682816253},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nimport gestionCodigosListaVue from '../../../codigos/components/utils/gestionCodigosLista'\r\nconst ConfirmEliminarVue =  () => import('../../../configuracion/Reutilizable/ConfirmEliminar')\r\nimport io from \"socket.io-client\";\r\nexport default{\r\n  components:{\r\n    gestionCodigosListaVue,\r\n    ConfirmEliminarVue,\r\n  },\r\n  data(){\r\n      return{\r\n          usuario:[],\r\n          rtipoVenta:1,\r\n          informacion:[],\r\n          tmpinformacion:[],\r\n          codigosNoCambiados:[],\r\n          codigosPerdidos:false,\r\n          porcentaje:0,\r\n          rtipoVenta:1,\r\n          socket: io(process.env.socket),\r\n          menu:0,\r\n      }\r\n  },\r\n  props:{\r\n      pedido:{\r\n          type:Object,\r\n          default:{}\r\n      },\r\n  },\r\n  computed:{\r\n      sumaTotal(){\r\n      let me = this;\r\n      let total = me.informacion.length\r\n      return total\r\n      },\r\n      SumaVentaDirecta(){\r\n      let me = this;\r\n      let datos       = me.informacion.filter(p => p.venta_estado == '1')\r\n      let resultado   = datos.length\r\n      return resultado\r\n      },\r\n      SumaVentaLista(){\r\n      let me = this;\r\n      let datos       = me.informacion.filter(p => p.venta_estado == '2')\r\n      let resultado   = datos.length\r\n      return resultado\r\n      },\r\n      SumaEnviados(){\r\n      let me = this;\r\n      //venta directa\r\n      let datos       = me.informacion.filter(p => p.venta_estado == '1')\r\n      let totalVD   = datos.length\r\n      let datos2       = me.informacion.filter(p => p.venta_estado == '2')\r\n      //venta lista\r\n      let totalVL   = datos2.length\r\n      let resultado = totalVD + totalVL\r\n      return resultado\r\n      },\r\n      SumaCodigosDevolucion(){\r\n      let me = this;\r\n      let datos       = me.informacion.filter(p => p.estado_liquidacion == '3');\r\n      let resultado   = datos.length\r\n      return resultado\r\n      },\r\n      sumaCodigosRegalados(){\r\n      let me = this;\r\n      let primerFiltro = me.informacion.filter(p => p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null);\r\n      let datos        = primerFiltro.filter(p => p.estado_liquidacion =='2')\r\n      let resultado    = datos.length\r\n      return resultado\r\n      },\r\n      sumaCodigosBloqueados(){\r\n      let me = this;\r\n      let primerFiltro = me.informacion.filter(p => p.estado_liquidacion != '3');\r\n      let datos         = primerFiltro.filter(p => p.estado == '2')\r\n      let resultado     = datos.length\r\n      return resultado\r\n      },\r\n      sumarCodigosLiquidados(){\r\n      let me = this;\r\n      let primerFiltro = me.informacion.filter(p => p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null);\r\n      let datos        = primerFiltro.filter(p => p.estado_liquidacion =='0')\r\n      let resultado    = datos.length\r\n      return resultado\r\n      },\r\n      sumarCodigosLeidos(){\r\n      let me = this;\r\n      let primerFiltro = me.informacion.filter(p => (p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null) && (p.estado_liquidacion == 1));\r\n      let datos        = primerFiltro.filter(p => p.bc_estado =='2')\r\n      let resultado    = datos.length\r\n      return resultado\r\n      },\r\n      sumarCodigosNoleidos(){\r\n      let me = this;\r\n      me.arreglocodigosALeidos = []\r\n      let primerFiltro          = me.informacion.filter(p => (p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null) && (p.estado_liquidacion == 1));\r\n      let datos                 = primerFiltro.filter(p => p.bc_estado =='1')\r\n      me.arreglocodigosALeidos  = datos\r\n      let resultado             = datos.length\r\n      return resultado\r\n      }\r\n  },\r\n    created(){\r\n        let me = this\r\n        me.usuario = JSON.parse(localStorage.getItem(\"usuario\"))\r\n    },\r\n    mounted(){\r\n        let me = this;\r\n        me.getTipoVenta()\r\n    },\r\n    methods:{\r\n      changeConfirm(e){\r\n        if(e == 1){\r\n          this.solicitarVerificacion()\r\n        }else{\r\n          this.menu  = 0\r\n        }\r\n      },\r\n        getTipoVenta(tr) {\r\n        let me = this;\r\n        me.informacion = []\r\n        me.tmpinformacion = []\r\n        me.nombreInstitucion    = me.pedido.nombreInstitucion\r\n        me.institucion_id       = me.pedido.id_institucion\r\n        me.periodoDescripcion   = me.pedido.periodo\r\n        me.periodo_id           = me.pedido.id_periodo\r\n        me.titulo = 'Detalle de venta de ' + me.pedido.nombreInstitucion\r\n        me.$vs.loading();\r\n        this.$http.get(this.$server_url+'getTipoVenta?institucion_id='+me.pedido.id_institucion+'&periodo_id='+me.pedido.id_periodo)\r\n            .then(function (res) {\r\n            me.informacion = res.data\r\n            let datos = me.informacion\r\n            if(me.rtipoVenta == 0){\r\n                me.tmpinformacion = datos\r\n                me.popupTipoVenta = true\r\n                me.$vs.loading.close()\r\n                return\r\n            }\r\n            me.tmpinformacion = datos.filter(p => p.venta_estado == me.rtipoVenta)\r\n            me.popupTipoVenta = true\r\n            me.$vs.loading.close()\r\n            })\r\n            .catch(function (error) {\r\n            console.log(error + ' error');\r\n            me.$vs.loading.close()\r\n            })\r\n        },\r\n        verTipoVenta(){\r\n          let me = this;\r\n          me.tmpinformacion   = []\r\n          let datos           = me.informacion\r\n          if(me.rtipoVenta == 0){\r\n            me.tmpinformacion = datos\r\n            return\r\n          }\r\n          me.tmpinformacion = datos.filter(p => p.venta_estado == me.rtipoVenta)\r\n        },\r\n        solicitarVerificacion(){\r\n            let me = this\r\n            if(me.pedido.id_institucion  <  1){\r\n                me.$vs.notify({\r\n                text:'Seleccione una institucion',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n                return false;\r\n            }\r\n            if(me.pedido.id_periodo == null || me.pedido.id_periodo  == 0 || me.pedido.id_periodo == undefined || me.pedido.id_periodo  == \"\"){\r\n                me.$vs.notify({\r\n                text:'Seleccione una período',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n                return false;\r\n            }\r\n            if(me.informacion.length == 0){\r\n                me.$vs.notify({\r\n                text:'No hay códigos por leer ',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n                return false;\r\n            }\r\n            //setear valores\r\n            let datoFilter = me.informacion.filter(p => (p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null) && (p.estado_liquidacion == 1) && (p.bc_estado == 1  || p.bc_estado == 2) && (p.venta_estado == 1 || p.venta_estado == 2));\r\n            if(datoFilter.length == 0){\r\n                me.$vs.notify({\r\n                text:'No hay códigos por leer ',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n                return false;\r\n            }\r\n            var sendEnviar = []\r\n            datoFilter.forEach(element => {\r\n                var cal = new Object();\r\n                cal.codigo = element.codigo\r\n                sendEnviar.push(cal)\r\n            });\r\n            me.$vs.loading()\r\n            let json_codigos = JSON.stringify(sendEnviar)\r\n            let formData = new FormData();\r\n            formData.append('data_codigos', json_codigos);\r\n            formData.append('id_usuario', me.usuario.idusuario);\r\n            formData.append('periodo_id', me.pedido.id_periodo);\r\n            formData.append('institucion_id',me.pedido.id_institucion)\r\n            formData.append('nombreInstitucion',me.pedido.nombreInstitucion)\r\n            formData.append('nombrePeriodo',me.pedido.periodo)\r\n            formData.append('venta_estado',1)\r\n            // this.$http.post(this.$server_url+'codigos/leidos/venta_directa', formData)\r\n            this.$http.post(this.$server_url+'codigos/importar', formData)\r\n            .then(res => {\r\n                me.$vs.loading.close()\r\n                if(res.data.status == 0){\r\n                    me.$vs.notify({\r\n                    text:res.data.message,\r\n                    color:'success',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check'})\r\n                    return false\r\n                }\r\n                me.codigosPerdidos    = true\r\n                me.codigosLeidos      = res.data.codigosLeidos\r\n                me.codigosNoCambiados = res.data.codigosNoCambiados\r\n                me.codigoNoExiste     = res.data.codigoNoExiste\r\n                me.porcentaje         = res.data.cambiados\r\n                me.generarSolicitudVerificacion()\r\n            })\r\n            .catch(function (error) {\r\n                me.$vs.notify({\r\n                text:'Verifique que la información se haya guardado correctamente.',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-alert-triangle'})\r\n                me.$vs.loading.close()\r\n            })\r\n        },\r\n        generarSolicitudVerificacion(){\r\n            let me = this\r\n            let formData = new FormData();\r\n            formData.append('contrato',me.pedido.contrato_generado);\r\n            me.$vs.loading()\r\n            this.$http.post(this.$server_url+'solicitarVerificacion', formData)\r\n            .then(res => {\r\n            me.$vs.loading.close()\r\n            me.$vs.notify({\r\n                text:`Se solicito correctamente ${this.porcentaje}`,\r\n                color:'success',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n            })\r\n            let datos = {\r\n                id_asesor:  me.usuario.idusuario,\r\n                emisor:     me.usuario.idusuario,\r\n                grupo:      me.usuario.id_group,\r\n                tipo:       \"verificaciones\"\r\n            }\r\n            me.pedido.estado_verificacion = 1\r\n            me.sendSocket(datos)\r\n            me.$emit('ChangeRecarge',true)\r\n            me.getTipoVenta()\r\n        },\r\n        sendSocket(datos){\r\n            try {\r\n            this.socket.emit(\"enviar\", datos);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        },\r\n    }\r\n}\r\n",{"version":3,"sources":["LiquidacionVentaDirecta.vue"],"names":[],"mappingsfile":"LiquidacionVentaDirecta.vue","sourceRoot":"src/views/pedidos/asesor/contratos","sourcesContent":["<template>\r\n    <div>\r\n      <div v-if=\"menu == 0\">\r\n        <vs-card>\r\n          <ul class=\"flex\">\r\n            <li>\r\n              <vs-radio v-model=\"rtipoVenta\" @input=\"verTipoVenta()\" class=\"ml-2\" vs-name=\"rradios1\" vs-value=\"1\">Venta directa: <b>{{ SumaVentaDirecta }}</b></vs-radio>\r\n              <vs-radio v-model=\"rtipoVenta\" @input=\"verTipoVenta()\" class=\"ml-2\" vs-name=\"rradios1\" vs-value=\"2\">Venta Lista: <b>{{ SumaVentaLista }}</b></vs-radio>\r\n            </li>\r\n          </ul>\r\n          <div>\r\n            <vs-alert color=\"danger\" v-if=\"rtipoVenta == 1\" style=\"height: 60px;\"><p class=\"text-center\">RECUERDE VERIFICAR QUE LAS DEVOLUCIONES YA HAYAN SIDO REALIZADAS EN BODEGA</p></vs-alert>\r\n            <div class=\"vx-row mt-3\">\r\n                <div class=\"vx-col sm:w-2/3 w-full ml-auto\" v-if=\"pedido.estado_verificacion == 0\">\r\n                  <vs-button class=\"mr-3 mb-2\" @click=\"menu = 1;\"><ion-icon name=\"checkmark-outline\"></ion-icon> Solicitar Verificación</vs-button>\r\n                    <!-- <vs-button class=\"mr-3 mb-2\" @click=\"solicitarVerificacion()\"><ion-icon name=\"checkmark-outline\"></ion-icon> Solicitar Verificación</vs-button> -->\r\n                    <vs-button color=\"warning\" type=\"border\" @click=\"$emit('ChangeRegresar',true)\" class=\"mb-2\">Cancelar</vs-button>\r\n                </div>\r\n                <div v-else class=\"vx-col sm:w-2/3 w-full ml-auto\">\r\n                    <p class=\"text-warning text-2xl\">Ya existe una solicitud de verificación</p>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </vs-card>\r\n        <vx-card>\r\n          <vs-list-header :title=\"'Total enviados: '    + SumaEnviados \"></vs-list-header>\r\n          <vs-list-header :title=\"'Total devueltos: '   + SumaCodigosDevolucion \"></vs-list-header>\r\n          <vs-list-header :title=\"'Total regalados: '   + sumaCodigosRegalados \"></vs-list-header>\r\n          <vs-list-header :title=\"'Total Bloqueados: '  + sumaCodigosBloqueados \"></vs-list-header>\r\n          <vs-list-header :title=\"'Total Liquidados: '  + sumarCodigosLiquidados \"></vs-list-header>\r\n          <vs-list-header :title=\"'Total: '             + (SumaEnviados - SumaCodigosDevolucion) \"></vs-list-header>\r\n          <vs-list-header :title=\"'Total leídos: '      + sumarCodigosLeidos \" title-color=\"warning\"></vs-list-header>\r\n          <vs-list-header :title=\"'Total no leídos: '   + sumarCodigosNoleidos \"></vs-list-header>\r\n        </vx-card>\r\n        <div class=\"header mt-3\">\r\n          <vs-row v-if=\"codigosPerdidos\">\r\n            <vs-col vs-type=\"flex\" vs-justify=\"center\" class=\"mt-3\" vs-align=\"center\" vs-w=\"12\">\r\n              <vs-alert active=\"true\">\r\n                Se cambio {{ porcentaje }} códigos a leído\r\n              </vs-alert>\r\n            </vs-col>\r\n            <vs-col vs-type=\"flex\" v-if=\"codigosNoCambiados.length > 0\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\">\r\n              <vs-list>\r\n                <vs-list-header icon=\"supervisor_account\" title=\"Códigos que no se pudieron cambiar\"></vs-list-header>\r\n                <vs-list-item :key=\"indextr\" v-for=\"(tr, indextr) in codigosNoCambiados\" icon=\"check\" :title=\"tr.codigo\" >\r\n                  <p v-if=\"tr.mensaje !='0'\"> {{ tr.mensaje }}</p>\r\n                </vs-list-item>\r\n              </vs-list>\r\n            </vs-col>\r\n          </vs-row>\r\n          <vs-row v-if=\"codigosPerdidos == true\">\r\n            <vs-card v-if=\"codigosLeidos.length > 0\">\r\n              <vs-collapse accordion >\r\n                <vs-collapse-item class=\"mt-2\">\r\n                  <div slot=\"header\">\r\n                    Códigos que no se leyeron <ion-icon style=\"font-size:18px;position: relative;top:5px;\" name=\"arrow-down-circle-outline\"></ion-icon>\r\n                  </div>\r\n                <gestionCodigosListaVue :arregloCodigos=\"codigosLeidos\"/>\r\n                </vs-collapse-item>\r\n              </vs-collapse>\r\n            </vs-card>\r\n          </vs-row>\r\n          <vs-divider></vs-divider>\r\n        </div>\r\n        <gestionCodigosListaVue :arregloCodigos=\"tmpinformacion\"/>\r\n      </div>\r\n      <!--CONFIRMACION-->\r\n      <div v-if=\"menu == 1\" class=\"text-center\">\r\n        <p><b class=\"font-semibold\">Códigos ya leído: </b>{{sumarCodigosLeidos}}</p>\r\n        <p><b class=\"font-semibold\">Códigos a ser leídos:</b> {{sumarCodigosNoleidos }}</p>\r\n        <p><b class=\"font-semibold\">Códigos a ser liquidados:</b> {{ sumarCodigosLeidos + sumarCodigosNoleidos }}</p>\r\n        <ConfirmEliminarVue @changeConfirm=\"changeConfirm\" v-if=\"menu == 1\" otroValor=\"1\" class=\"mt-2\" title=\"Estás seguro de Solicitar la verificacion\" subtitle=\"Si, deseo Solicitar\"/>\r\n      </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport gestionCodigosListaVue from '../../../codigos/components/utils/gestionCodigosLista'\r\nconst ConfirmEliminarVue =  () => import('../../../configuracion/Reutilizable/ConfirmEliminar')\r\nimport io from \"socket.io-client\";\r\nexport default{\r\n  components:{\r\n    gestionCodigosListaVue,\r\n    ConfirmEliminarVue,\r\n  },\r\n  data(){\r\n      return{\r\n          usuario:[],\r\n          rtipoVenta:1,\r\n          informacion:[],\r\n          tmpinformacion:[],\r\n          codigosNoCambiados:[],\r\n          codigosPerdidos:false,\r\n          porcentaje:0,\r\n          rtipoVenta:1,\r\n          socket: io(process.env.socket),\r\n          menu:0,\r\n      }\r\n  },\r\n  props:{\r\n      pedido:{\r\n          type:Object,\r\n          default:{}\r\n      },\r\n  },\r\n  computed:{\r\n      sumaTotal(){\r\n      let me = this;\r\n      let total = me.informacion.length\r\n      return total\r\n      },\r\n      SumaVentaDirecta(){\r\n      let me = this;\r\n      let datos       = me.informacion.filter(p => p.venta_estado == '1')\r\n      let resultado   = datos.length\r\n      return resultado\r\n      },\r\n      SumaVentaLista(){\r\n      let me = this;\r\n      let datos       = me.informacion.filter(p => p.venta_estado == '2')\r\n      let resultado   = datos.length\r\n      return resultado\r\n      },\r\n      SumaEnviados(){\r\n      let me = this;\r\n      //venta directa\r\n      let datos       = me.informacion.filter(p => p.venta_estado == '1')\r\n      let totalVD   = datos.length\r\n      let datos2       = me.informacion.filter(p => p.venta_estado == '2')\r\n      //venta lista\r\n      let totalVL   = datos2.length\r\n      let resultado = totalVD + totalVL\r\n      return resultado\r\n      },\r\n      SumaCodigosDevolucion(){\r\n      let me = this;\r\n      let datos       = me.informacion.filter(p => p.estado_liquidacion == '3');\r\n      let resultado   = datos.length\r\n      return resultado\r\n      },\r\n      sumaCodigosRegalados(){\r\n      let me = this;\r\n      let primerFiltro = me.informacion.filter(p => p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null);\r\n      let datos        = primerFiltro.filter(p => p.estado_liquidacion =='2')\r\n      let resultado    = datos.length\r\n      return resultado\r\n      },\r\n      sumaCodigosBloqueados(){\r\n      let me = this;\r\n      let primerFiltro = me.informacion.filter(p => p.estado_liquidacion != '3');\r\n      let datos         = primerFiltro.filter(p => p.estado == '2')\r\n      let resultado     = datos.length\r\n      return resultado\r\n      },\r\n      sumarCodigosLiquidados(){\r\n      let me = this;\r\n      let primerFiltro = me.informacion.filter(p => p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null);\r\n      let datos        = primerFiltro.filter(p => p.estado_liquidacion =='0')\r\n      let resultado    = datos.length\r\n      return resultado\r\n      },\r\n      sumarCodigosLeidos(){\r\n      let me = this;\r\n      let primerFiltro = me.informacion.filter(p => (p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null) && (p.estado_liquidacion == 1));\r\n      let datos        = primerFiltro.filter(p => p.bc_estado =='2')\r\n      let resultado    = datos.length\r\n      return resultado\r\n      },\r\n      sumarCodigosNoleidos(){\r\n      let me = this;\r\n      me.arreglocodigosALeidos = []\r\n      let primerFiltro          = me.informacion.filter(p => (p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null) && (p.estado_liquidacion == 1));\r\n      let datos                 = primerFiltro.filter(p => p.bc_estado =='1')\r\n      me.arreglocodigosALeidos  = datos\r\n      let resultado             = datos.length\r\n      return resultado\r\n      }\r\n  },\r\n    created(){\r\n        let me = this\r\n        me.usuario = JSON.parse(localStorage.getItem(\"usuario\"))\r\n    },\r\n    mounted(){\r\n        let me = this;\r\n        me.getTipoVenta()\r\n    },\r\n    methods:{\r\n      changeConfirm(e){\r\n        if(e == 1){\r\n          this.solicitarVerificacion()\r\n        }else{\r\n          this.menu  = 0\r\n        }\r\n      },\r\n        getTipoVenta(tr) {\r\n        let me = this;\r\n        me.informacion = []\r\n        me.tmpinformacion = []\r\n        me.nombreInstitucion    = me.pedido.nombreInstitucion\r\n        me.institucion_id       = me.pedido.id_institucion\r\n        me.periodoDescripcion   = me.pedido.periodo\r\n        me.periodo_id           = me.pedido.id_periodo\r\n        me.titulo = 'Detalle de venta de ' + me.pedido.nombreInstitucion\r\n        me.$vs.loading();\r\n        this.$http.get(this.$server_url+'getTipoVenta?institucion_id='+me.pedido.id_institucion+'&periodo_id='+me.pedido.id_periodo)\r\n            .then(function (res) {\r\n            me.informacion = res.data\r\n            let datos = me.informacion\r\n            if(me.rtipoVenta == 0){\r\n                me.tmpinformacion = datos\r\n                me.popupTipoVenta = true\r\n                me.$vs.loading.close()\r\n                return\r\n            }\r\n            me.tmpinformacion = datos.filter(p => p.venta_estado == me.rtipoVenta)\r\n            me.popupTipoVenta = true\r\n            me.$vs.loading.close()\r\n            })\r\n            .catch(function (error) {\r\n            console.log(error + ' error');\r\n            me.$vs.loading.close()\r\n            })\r\n        },\r\n        verTipoVenta(){\r\n          let me = this;\r\n          me.tmpinformacion   = []\r\n          let datos           = me.informacion\r\n          if(me.rtipoVenta == 0){\r\n            me.tmpinformacion = datos\r\n            return\r\n          }\r\n          me.tmpinformacion = datos.filter(p => p.venta_estado == me.rtipoVenta)\r\n        },\r\n        solicitarVerificacion(){\r\n            let me = this\r\n            if(me.pedido.id_institucion  <  1){\r\n                me.$vs.notify({\r\n                text:'Seleccione una institucion',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n                return false;\r\n            }\r\n            if(me.pedido.id_periodo == null || me.pedido.id_periodo  == 0 || me.pedido.id_periodo == undefined || me.pedido.id_periodo  == \"\"){\r\n                me.$vs.notify({\r\n                text:'Seleccione una período',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n                return false;\r\n            }\r\n            if(me.informacion.length == 0){\r\n                me.$vs.notify({\r\n                text:'No hay códigos por leer ',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n                return false;\r\n            }\r\n            //setear valores\r\n            let datoFilter = me.informacion.filter(p => (p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null) && (p.estado_liquidacion == 1) && (p.bc_estado == 1  || p.bc_estado == 2) && (p.venta_estado == 1 || p.venta_estado == 2));\r\n            if(datoFilter.length == 0){\r\n                me.$vs.notify({\r\n                text:'No hay códigos por leer ',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n                return false;\r\n            }\r\n            var sendEnviar = []\r\n            datoFilter.forEach(element => {\r\n                var cal = new Object();\r\n                cal.codigo = element.codigo\r\n                sendEnviar.push(cal)\r\n            });\r\n            me.$vs.loading()\r\n            let json_codigos = JSON.stringify(sendEnviar)\r\n            let formData = new FormData();\r\n            formData.append('data_codigos', json_codigos);\r\n            formData.append('id_usuario', me.usuario.idusuario);\r\n            formData.append('periodo_id', me.pedido.id_periodo);\r\n            formData.append('institucion_id',me.pedido.id_institucion)\r\n            formData.append('nombreInstitucion',me.pedido.nombreInstitucion)\r\n            formData.append('nombrePeriodo',me.pedido.periodo)\r\n            formData.append('venta_estado',1)\r\n            // this.$http.post(this.$server_url+'codigos/leidos/venta_directa', formData)\r\n            this.$http.post(this.$server_url+'codigos/importar', formData)\r\n            .then(res => {\r\n                me.$vs.loading.close()\r\n                if(res.data.status == 0){\r\n                    me.$vs.notify({\r\n                    text:res.data.message,\r\n                    color:'success',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check'})\r\n                    return false\r\n                }\r\n                me.codigosPerdidos    = true\r\n                me.codigosLeidos      = res.data.codigosLeidos\r\n                me.codigosNoCambiados = res.data.codigosNoCambiados\r\n                me.codigoNoExiste     = res.data.codigoNoExiste\r\n                me.porcentaje         = res.data.cambiados\r\n                me.generarSolicitudVerificacion()\r\n            })\r\n            .catch(function (error) {\r\n                me.$vs.notify({\r\n                text:'Verifique que la información se haya guardado correctamente.',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-alert-triangle'})\r\n                me.$vs.loading.close()\r\n            })\r\n        },\r\n        generarSolicitudVerificacion(){\r\n            let me = this\r\n            let formData = new FormData();\r\n            formData.append('contrato',me.pedido.contrato_generado);\r\n            me.$vs.loading()\r\n            this.$http.post(this.$server_url+'solicitarVerificacion', formData)\r\n            .then(res => {\r\n            me.$vs.loading.close()\r\n            me.$vs.notify({\r\n                text:`Se solicito correctamente ${this.porcentaje}`,\r\n                color:'success',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n            })\r\n            let datos = {\r\n                id_asesor:  me.usuario.idusuario,\r\n                emisor:     me.usuario.idusuario,\r\n                grupo:      me.usuario.id_group,\r\n                tipo:       \"verificaciones\"\r\n            }\r\n            me.pedido.estado_verificacion = 1\r\n            me.sendSocket(datos)\r\n            me.$emit('ChangeRecarge',true)\r\n            me.getTipoVenta()\r\n        },\r\n        sendSocket(datos){\r\n            try {\r\n            this.socket.emit(\"enviar\", datos);\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        },\r\n    }\r\n}\r\n</script>\r\n"]}]}