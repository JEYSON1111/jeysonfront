{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\pedidos\\asesor\\contratos\\LiquidacionCodigos.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\pedidos\\asesor\\contratos\\LiquidacionCodigos.vue","mtime":1712682816251},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\n\r\n    import flatPickr from 'vue-flatpickr-component';\r\n    import 'flatpickr/dist/flatpickr.css';\r\n    import Vue from 'vue'\r\n    import axios from 'axios'\r\n    import vSelect from 'vue-select'\r\n    import moment from 'moment'\r\n    import $ from 'jquery'\r\n    import io from \"socket.io-client\";\r\n    export default{\r\n     data:()=>({\r\n                usuario:[],\r\n                status:\"0\",\r\n                codigosInstitucion:[],\r\n                arregloTemporada:[],\r\n                //para la tabla seleccionada\r\n                codigoSelected: [],\r\n                //para exportar\r\n                formats: ['xls', 'xlsx', 'csv', 'txt'],\r\n                fileName:null,\r\n                selectedFormat: 'xls',\r\n                cellAutoWidth: true,\r\n                activePrompt: false,\r\n                asesor:\"\",\r\n                socket: io(process.env.socket),\r\n            }\r\n         ),\r\n        props:{\r\n            contratoLiquidacion:{\r\n                type:String,\r\n                default:\"\",\r\n            },\r\n            estado_verificacion:{\r\n                type:Number,\r\n                default:0\r\n            },\r\n            insNombre:{\r\n                type:String,\r\n                default:\"\",\r\n            },\r\n            ciuNombre:{\r\n                type:String,\r\n                default:\"\",\r\n            },\r\n\r\n            // contratoLiquidacion:{\r\n            //     type:String,\r\n            //     default:\"C-C23-0000039-LJ\",\r\n            // },\r\n            // estado_verificacion:{\r\n            //     type:Number,\r\n            //     default:0\r\n            // },\r\n            // insNombre:{\r\n            //     type:String,\r\n            //     default:\"Pan de vida\",\r\n            // },\r\n            // ciuNombre:{\r\n            //     type:String,\r\n            //     default:\"Guayaquil\",\r\n            // },\r\n        },\r\n        computed:{\r\n            sumaTotal(){\r\n                let me = this;\r\n                if(me.codigosInstitucion.length >0){\r\n                    let datos = me.codigosInstitucion.filter(p => p.cantidad)\r\n                    let total = datos.reduce((a, b) => a + (b[\"cantidad\"] || 0), 0);\r\n                    return total\r\n                }\r\n            },\r\n        },\r\n        methods:{\r\n            //traer la liquidacion\r\n            getLiquidacion(){\r\n                let me = this;\r\n                me.$vs.loading()\r\n                this.$http.get(this.$server_url + 'temporadas/liquidacion/' + me.contratoLiquidacion)\r\n                .then(res => {\r\n                    me.$vs.loading.close()\r\n                    if(res.data.status == 0){\r\n                        me.$vs.notify({\r\n                        text:res.data.message,\r\n                        color:'danger',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check'})\r\n                        return\r\n                    }\r\n                    //llenar el arreglo  de libros\r\n                    this.arregloTemporada   = res.data.temporada\r\n                    this.codigosInstitucion = res.data.codigos_libros;\r\n                })\r\n                .catch(function(e){\r\n                    me.$vs.loading.close()\r\n                })\r\n            },\r\n            OpenConfirm(){\r\n                this.$vs.dialog({\r\n                    type:'confirm',\r\n                    color: 'danger',\r\n                    title: `Confirm`,\r\n                    text: 'Estas seguro de solicitar una verificaci贸n.',\r\n                    accept:this.solicitarVerificacion\r\n                })\r\n            },\r\n            solicitarVerificacion(){\r\n                let me = this\r\n                let formData = new FormData();\r\n                formData.append('contrato',me.contratoLiquidacion);\r\n                me.$vs.loading()\r\n                this.$http.post(this.$server_url+'solicitarVerificacion', formData)\r\n                .then(res => {\r\n                me.$vs.loading.close()\r\n                me.$vs.notify({\r\n                    text:'Se solicito correctamente',\r\n                    color:'success',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check'})\r\n                })\r\n                let datos = {\r\n                    id_asesor:  me.usuario.idusuario,\r\n                    emisor:     me.usuario.idusuario,\r\n                    grupo:      me.usuario.id_group,\r\n                    tipo:       \"verificaciones\"\r\n                }\r\n                me.sendSocket(datos)\r\n                me.$emit('ChangeRegresar',true)\r\n            },\r\n            sendSocket(datos){\r\n                try {\r\n                this.socket.emit(\"enviar\", datos);\r\n                } catch (error) {\r\n                    console.log(error)\r\n                }\r\n            },\r\n            exportToExcel() {\r\n                let headerTitle = [ 'serie','Libro', 'Cantidad', 'Cod. Liquidacion'];\r\n                let headerVal = [ 'serie','nombrelibro', 'cantidad','codigo'];\r\n                this.fileName = \"Codigos_a_liquidar\";\r\n                import('@/vendor/Export2Excel').then(excel => {\r\n                    const data = this.formatJson(headerVal, this.codigosInstitucion)\r\n                    excel.export_json_to_excel({\r\n                        header: headerTitle,\r\n                        data,\r\n                        filename: this.fileName,\r\n                        autoWidth: this.cellAutoWidth,\r\n                        bookType: this.selectedFormat\r\n                    })\r\n                    this.clearFields()\r\n                    this.guardarActivo = '';\r\n                    this.generarActivo = ' ';\r\n                    this.textAlertCant = '';\r\n                    this.cantidad = '';\r\n                })\r\n            },\r\n            formatJson(filterVal, jsonData) {\r\n                return jsonData.map(v => filterVal.map(j => {\r\n                    return v[j]\r\n                }))\r\n            },\r\n            //limpiar campos para exportar de nuevo\r\n            clearFields() {\r\n                this.fileName = ''\r\n                this.cellAutoWidth = true\r\n                this.selectedFormat = 'xls'\r\n            },\r\n        },\r\n        components: {\r\n            'v-select': vSelect,\r\n            flatPickr,\r\n        },\r\n       created() {\r\n           let me =this;\r\n           me.usuario = JSON.parse(localStorage.getItem(\"usuario\"))\r\n           me.getLiquidacion()\r\n        }\r\n    }\r\n    ",{"version":3,"sources":["LiquidacionCodigos.vue"],"names":[],"mappings":";;AAwfile":"LiquidacionCodigos.vue","sourceRoot":"src/views/pedidos/asesor/contratos","sourcesContent":["<template>\r\n    <vx-card\r\n    title=\"C贸digos para ser liquidados\"\r\n    title-color=\"primary\"\r\n    >\r\n        <div v-if=\"arregloTemporada.length =='0'\">\r\n            <vs-alert title=\"Mensaje\" color=\"rgb(231, 154, 23)\" active=\"true\">\r\n                <p>No hay c贸digos para liquidar</p>\r\n            </vs-alert>\r\n        </div>\r\n        <div v-if=\"arregloTemporada.length > 0\">\r\n            <ul>\r\n                <vs-list>\r\n                    <vs-list-item icon=\"check\" title=\"Contrato\" :subtitle=\"contratoLiquidacion\">\r\n                    </vs-list-item>\r\n                    <vs-list-item icon=\"check\" title=\"Instituci贸n\" :subtitle=\"insNombre + ' ('+ciuNombre+')'\">\r\n                    </vs-list-item>\r\n                    <vs-list-item icon=\"check\" title=\"Periodo\" :subtitle=\"arregloTemporada[0].periodo\">\r\n                    </vs-list-item>\r\n                    <vs-list-item icon=\"check\" title=\"Asesor\" :subtitle=\"arregloTemporada[0].asesor\">\r\n                    </vs-list-item>\r\n                </vs-list>\r\n            </ul>\r\n            <!-- <div>\r\n                <div class=\"vx-row\">\r\n                    <div class=\"vx-col sm:w-2/3 w-full ml-auto\" v-if=\"estado_verificacion == 0\">\r\n                        <vs-button class=\"mr-3 mb-2\" @click=\"solicitarVerificacion()\"><ion-icon name=\"checkmark-outline\"></ion-icon> Solicitar Verificaci贸n</vs-button>\r\n                        <vs-button color=\"warning\" type=\"border\" @click=\"$emit('ChangeRegresar',true)\" class=\"mb-2\">Cancelar</vs-button>\r\n                    </div>\r\n                    <div v-else class=\"vx-col sm:w-2/3 w-full ml-auto\">\r\n                        <p class=\"text-warning text-2xl\">Ya existe una solicitud de verificaci贸n</p>\r\n                    </div>\r\n                </div>\r\n            </div> -->\r\n            <vs-table pagination max-items=\"15\" search :data=\"codigosInstitucion\">\r\n                <template slot=\"header\">\r\n                    <vs-chip color=\"primary\" class=\"mr-2\" style=\"font-size:12px;\">\r\n                    Total Libros a liquidar: {{sumaTotal}}\r\n                    </vs-chip>\r\n                    <vs-chip color=\"success\" class=\"mr-2\" style=\"font-size:12px;\">\r\n                    Total tabla: {{ codigosInstitucion.length }}\r\n                    </vs-chip>\r\n                    <vs-button color=\"warning\"  size=\"small\" class=\"mr-5\" style=\"font-size: 14px;\" @click=\"exportToExcel()\">Exportar</vs-button>\r\n                </template>\r\n                <template slot=\"thead\">\r\n                    <vs-th sort-key=\"serie\">Serie</vs-th>\r\n                    <vs-th sort-key=\"libro\">Libro</vs-th>\r\n                    <vs-th sort-key=\"cantidad\">Cant C贸digos</vs-th>\r\n                    <vs-th sort-key=\"libro\">Cod. Liquidacion</vs-th>\r\n                </template>\r\n                <template slot-scope=\"{data}\">\r\n                    <vs-tr :data=\"tr\" :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                        <vs-td :data=\"data[indextr].serie\">\r\n                            {{ data[indextr].serie }}\r\n                        </vs-td>\r\n                        <vs-td :data=\"data[indextr].nombrelibro\">\r\n                            {{ data[indextr].nombrelibro }}\r\n                        </vs-td>\r\n                        <vs-td :data=\"data[indextr].cantidad\">\r\n                            {{ data[indextr].cantidad }}\r\n                        </vs-td>\r\n                        <vs-td :data=\"data[indextr].codigo\">\r\n                            {{ data[indextr].codigo }}\r\n                        </vs-td>\r\n                    </vs-tr>\r\n                </template>\r\n            </vs-table>\r\n        </div>\r\n    </vx-card>\r\n    </template>\r\n    <script>\r\n\r\n    import flatPickr from 'vue-flatpickr-component';\r\n    import 'flatpickr/dist/flatpickr.css';\r\n    import Vue from 'vue'\r\n    import axios from 'axios'\r\n    import vSelect from 'vue-select'\r\n    import moment from 'moment'\r\n    import $ from 'jquery'\r\n    import io from \"socket.io-client\";\r\n    export default{\r\n     data:()=>({\r\n                usuario:[],\r\n                status:\"0\",\r\n                codigosInstitucion:[],\r\n                arregloTemporada:[],\r\n                //para la tabla seleccionada\r\n                codigoSelected: [],\r\n                //para exportar\r\n                formats: ['xls', 'xlsx', 'csv', 'txt'],\r\n                fileName:null,\r\n                selectedFormat: 'xls',\r\n                cellAutoWidth: true,\r\n                activePrompt: false,\r\n                asesor:\"\",\r\n                socket: io(process.env.socket),\r\n            }\r\n         ),\r\n        props:{\r\n            contratoLiquidacion:{\r\n                type:String,\r\n                default:\"\",\r\n            },\r\n            estado_verificacion:{\r\n                type:Number,\r\n                default:0\r\n            },\r\n            insNombre:{\r\n                type:String,\r\n                default:\"\",\r\n            },\r\n            ciuNombre:{\r\n                type:String,\r\n                default:\"\",\r\n            },\r\n\r\n            // contratoLiquidacion:{\r\n            //     type:String,\r\n            //     default:\"C-C23-0000039-LJ\",\r\n            // },\r\n            // estado_verificacion:{\r\n            //     type:Number,\r\n            //     default:0\r\n            // },\r\n            // insNombre:{\r\n            //     type:String,\r\n            //     default:\"Pan de vida\",\r\n            // },\r\n            // ciuNombre:{\r\n            //     type:String,\r\n            //     default:\"Guayaquil\",\r\n            // },\r\n        },\r\n        computed:{\r\n            sumaTotal(){\r\n                let me = this;\r\n                if(me.codigosInstitucion.length >0){\r\n                    let datos = me.codigosInstitucion.filter(p => p.cantidad)\r\n                    let total = datos.reduce((a, b) => a + (b[\"cantidad\"] || 0), 0);\r\n                    return total\r\n                }\r\n            },\r\n        },\r\n        methods:{\r\n            //traer la liquidacion\r\n            getLiquidacion(){\r\n                let me = this;\r\n                me.$vs.loading()\r\n                this.$http.get(this.$server_url + 'temporadas/liquidacion/' + me.contratoLiquidacion)\r\n                .then(res => {\r\n                    me.$vs.loading.close()\r\n                    if(res.data.status == 0){\r\n                        me.$vs.notify({\r\n                        text:res.data.message,\r\n                        color:'danger',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check'})\r\n                        return\r\n                    }\r\n                    //llenar el arreglo  de libros\r\n                    this.arregloTemporada   = res.data.temporada\r\n                    this.codigosInstitucion = res.data.codigos_libros;\r\n                })\r\n                .catch(function(e){\r\n                    me.$vs.loading.close()\r\n                })\r\n            },\r\n            OpenConfirm(){\r\n                this.$vs.dialog({\r\n                    type:'confirm',\r\n                    color: 'danger',\r\n                    title: `Confirm`,\r\n                    text: 'Estas seguro de solicitar una verificaci贸n.',\r\n                    accept:this.solicitarVerificacion\r\n                })\r\n            },\r\n            solicitarVerificacion(){\r\n                let me = this\r\n                let formData = new FormData();\r\n                formData.append('contrato',me.contratoLiquidacion);\r\n                me.$vs.loading()\r\n                this.$http.post(this.$server_url+'solicitarVerificacion', formData)\r\n                .then(res => {\r\n                me.$vs.loading.close()\r\n                me.$vs.notify({\r\n                    text:'Se solicito correctamente',\r\n                    color:'success',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check'})\r\n                })\r\n                let datos = {\r\n                    id_asesor:  me.usuario.idusuario,\r\n                    emisor:     me.usuario.idusuario,\r\n                    grupo:      me.usuario.id_group,\r\n                    tipo:       \"verificaciones\"\r\n                }\r\n                me.sendSocket(datos)\r\n                me.$emit('ChangeRegresar',true)\r\n            },\r\n            sendSocket(datos){\r\n                try {\r\n                this.socket.emit(\"enviar\", datos);\r\n                } catch (error) {\r\n                    console.log(error)\r\n                }\r\n            },\r\n            exportToExcel() {\r\n                let headerTitle = [ 'serie','Libro', 'Cantidad', 'Cod. Liquidacion'];\r\n                let headerVal = [ 'serie','nombrelibro', 'cantidad','codigo'];\r\n                this.fileName = \"Codigos_a_liquidar\";\r\n                import('@/vendor/Export2Excel').then(excel => {\r\n                    const data = this.formatJson(headerVal, this.codigosInstitucion)\r\n                    excel.export_json_to_excel({\r\n                        header: headerTitle,\r\n                        data,\r\n                        filename: this.fileName,\r\n                        autoWidth: this.cellAutoWidth,\r\n                        bookType: this.selectedFormat\r\n                    })\r\n                    this.clearFields()\r\n                    this.guardarActivo = '';\r\n                    this.generarActivo = ' ';\r\n                    this.textAlertCant = '';\r\n                    this.cantidad = '';\r\n                })\r\n            },\r\n            formatJson(filterVal, jsonData) {\r\n                return jsonData.map(v => filterVal.map(j => {\r\n                    return v[j]\r\n                }))\r\n            },\r\n            //limpiar campos para exportar de nuevo\r\n            clearFields() {\r\n                this.fileName = ''\r\n                this.cellAutoWidth = true\r\n                this.selectedFormat = 'xls'\r\n            },\r\n        },\r\n        components: {\r\n            'v-select': vSelect,\r\n            flatPickr,\r\n        },\r\n       created() {\r\n           let me =this;\r\n           me.usuario = JSON.parse(localStorage.getItem(\"usuario\"))\r\n           me.getLiquidacion()\r\n        }\r\n    }\r\n    </script>\r\n"]}]}