{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\salle\\administrador\\evaluaciones\\AreasComponent.vue?vue&type=style&index=0&id=d9e7e392&lang=css","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\salle\\administrador\\evaluaciones\\AreasComponent.vue","mtime":1712682816502},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\n.exportButton{\r\n  transition:1s ease-in;\r\n}\r\n.exportButton:hover{\r\n  transform: scale(1.1);\r\n  color:#f2f2f2;\r\n}\r\n",{"version":3,"sources":["AreasComponent.vue"],"names":[],"mappings":";AAysBA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AreasComponent.vue","sourceRoot":"src/views/salle/administrador/evaluaciones","sourcesContent":["<template>\r\n<div class=\"vx-col md:w-full w-full mb-base\">\r\n  <vs-popup small title=\"Sincronizar preguntas\" subtitle=\"Puede cargar las preguntas de otra asignatura en esta.\" :active.sync=\"modalSincronizar\"><br>\r\n      <div class=\"vx-col w-full mb-base mt-4\">\r\n          Seleccione una asignatura\r\n          <v-select icon-pack=\"feather\" class=\"mb-6\" icon=\"icon-home\" :options=\"listaAsignaturas\" :reduce=\"listaAsignaturas => listaAsignaturas\" label=\"nombre_asignatura\" v-model=\"asignatura_sinc\" placeholder=\"Seleccione una asignatura\"></v-select>\r\n      </div>\r\n\r\n      <br><br>\r\n      <div class=\"mb-6 p-5\" style=\"border-radius: 5px; background-color: #FFE1FB; color: #BF0EA9;\">\r\n        Las preguntas de la asignatura <b>{{asign_selec.nombre_asignatura}}</b> serán eliminadas y serán cargadas las preguntas de la\r\n        asignatura <b>{{asignatura_sinc.nombre_asignatura}}</b>\r\n      </div>\r\n\r\n      <br>\r\n      <div class=\"vx-col sm:w-2/3 w-full ml-auto mt-6\" align=\"right\">\r\n          <vs-button class=\"m-1\" color=\"primary\" type=\"border\" @click=\"sincronizarPreguntas();\">Sincronizar</vs-button>\r\n          <vs-button class=\"m-1\" color=\"danger\" type=\"border\" @click=\"modalSincronizar=false\">Cancelar</vs-button>\r\n      </div>\r\n  </vs-popup>\r\n  <!--MODAL GUARDAR AREAS-->\r\n  <vs-popup :title=\"titulo\" :active.sync=\"modalAreas\">\r\n      <div class=\"vx-col sm:w-1/1 w-full mb-4\">\r\n          <vs-input class=\"w-full\" type=\"text\" label=\"Nombre:\" icon-pack=\"feather\" icon=\"icon-type\" maxlength=\"200\" icon-no-border v-model=\"area.nombre_area\" />\r\n      </div>\r\n      <div class=\"vx-col  w-full mb-4\">\r\n          <vs-input class=\"w-full\" type=\"text\" label=\"Descripción:\" icon-pack=\"feather\" icon=\"icon-align-center\" maxlength=\"200\" icon-no-border v-model=\"area.descripcion_area\" />\r\n      </div>\r\n      <div class=\"vx-col w-full mb-4\">\r\n        <vs-radio class=\"m-2\" v-model=\"area.estado\" vs-value=\"1\">Activa</vs-radio>\r\n        <vs-radio class=\"m-2\" v-model=\"area.estado\" color=\"danger\" vs-value=\"0\">Bloqueada</vs-radio>\r\n      </div>\r\n      <div class=\"flex justify-center\">\r\n        <p v-for=\"(item,key) in arregloPeriodos\" :key=\"key\">\r\n          <vs-chip v-if=\"item.id == periodoSelect\">Evaluación Seleccionada: <b class=\"ml-1\">{{ item.nombre }}</b></vs-chip>\r\n        </p>\r\n        <br>\r\n      </div>\r\n      <div class=\"flex justify-center\">\r\n          <vs-button class=\"m-2\" color=\"primary\" type=\"border\" @click=\"agregarEditarArea();\">{{txt_boton}}</vs-button>\r\n          <vs-button class=\"m-2\" color=\"danger\" type=\"border\" @click=\"volver();\">Cancelar</vs-button>\r\n      </div>\r\n  </vs-popup>\r\n  <vs-popup :title=\"titulo\" :active.sync=\"modalAsignaturas\">\r\n      <div class=\"vx-col sm:w-1/1 w-full mb-4\">\r\n          <span>Área</span>\r\n          <v-select icon-pack=\"feather\" icon=\"icon-home\" :options=\"listaAreas\" :reduce=\"listaAreas => listaAreas.id_area\" label=\"nombre_area\" v-model=\"asignatura.id_area\" placeholder=\"Seleccione...\"></v-select>\r\n      </div>\r\n      <div class=\"vx-col sm:w-1/1 w-full mb-4\">\r\n          <vs-input class=\"w-full\" type=\"text\" label=\"Nombre:\" icon-pack=\"feather\" icon=\"icon-type\" maxlength=\"200\" icon-no-border v-model=\"asignatura.nombre_asignatura\" />\r\n      </div>\r\n      <div class=\"vx-col  w-full mb-4\">\r\n          <vs-input class=\"w-full\" type=\"text\" label=\"Descripción:\" icon-pack=\"feather\" icon=\"icon-align-center\" maxlength=\"200\" icon-no-border v-model=\"asignatura.descripcion_asignatura\" />\r\n      </div>\r\n      <div class=\"vx-col sm:w-1/2 w-full mb-4\">\r\n          <vs-input class=\"w-full\" type=\"number\" label=\"Preguntas mínimas para la evaluación:\" icon-pack=\"feather\" icon=\"icon-hash\" min=\"0\" max=\"999\" icon-no-border v-model=\"asignatura.cant_preguntas\" />\r\n      </div>\r\n      <div class=\"vx-col sm:w-1/2 w-full mb-4\">\r\n        <vs-radio class=\"m-2\" v-model=\"asignatura.estado\" vs-value=\"1\">Activa</vs-radio>\r\n        <vs-radio class=\"m-2\" v-model=\"asignatura.estado\" color=\"danger\" vs-value=\"0\">Bloqueada</vs-radio>\r\n      </div>\r\n      <div class=\"flex justify-center\">\r\n        <p v-for=\"(item,key) in arregloPeriodos\" :key=\"key\">\r\n          <vs-chip v-if=\"item.id == periodoSelect\">Evaluación Seleccionada: <b class=\"ml-1\">{{ item.nombre }}</b></vs-chip>\r\n        </p>\r\n        <br>\r\n      </div>\r\n      <div class=\"vx-col   w-full mb-4\">\r\n          <vs-button class=\"m-2\" color=\"primary\" type=\"border\" @click=\"agregarEditarAsignatura();\">{{txt_boton}}</vs-button>\r\n          <vs-button class=\"m-2\" color=\"danger\" type=\"border\" @click=\"volver();\">Cancelar</vs-button>\r\n      </div>\r\n  </vs-popup>\r\n  <vx-card>\r\n    <!-- <div class=\"flex mt-5\">\r\n      <div style=\"width: 40%;\">\r\n        <p> <ion-icon name=\"contract-outline\"></ion-icon>  Filtro por Evalución período</p>\r\n      </div>\r\n      <div style=\"width: 60%;\">\r\n        <v-select :options=\"arregloPeriodos\" @input=\"getAreas()\" :reduce=\"arregloPeriodos => arregloPeriodos.id\" label=\"nombre\" class=\"w-full\" v-model=\"periodoSelect\" />\r\n      </div>\r\n    </div> -->\r\n    <vs-tabs alignment=\"fixed\" class=\"mt-5\">\r\n      <vs-tab :label=\"'Areas ( ' + listaAreas.length +' )'\">\r\n        <div class=\"flex mt-3\">\r\n          <vs-button color=\"primary\"  type=\"border\" icon-pack=\"feather\" icon=\"icon-plus\" @click=\"modalAgregaEdita(0,1);\">Agregar</vs-button>\r\n          <p class=\"exportButton\" @click=\"tipo=0;OpenExportar()\"><vs-chip transparent color=\"success\" class=\"ml-3 cursor-pointer\" style=\"font-size:15px;padding:15px;\"><ion-icon name=\"cloud-download-outline\" style=\"font-size:20px;\"></ion-icon> <span class=\"ml-2\">Exportar</span></vs-chip></p>\r\n        </div>\r\n        <vs-table v-model=\"arregloSelectArea\" stripe multiple max-items=\"20\" search pagination :data=\"listaAreas\" style=\"margin-top:-20px\">\r\n          <template slot=\"thead\">\r\n              <vs-th width=\"40%\" sort-key=\"nombre\">Nombre</vs-th>\r\n              <vs-th width=\"30%\" sort-key=\"descripcion\">Descripción</vs-th>\r\n              <vs-th width=\"20%\">Período Evaluación</vs-th>\r\n              <vs-th width=\"15%\" sort-key=\"estado\">Estado</vs-th>\r\n              <vs-th width=\"15%\">Acciones</vs-th>\r\n          </template>\r\n          <template slot-scope=\"{data}\">\r\n              <vs-tr :data=\"tr\" :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                <vs-td width=\"40%\">\r\n                  {{data[indextr].nombre_area}}\r\n                </vs-td>\r\n                <vs-td width=\"30%\">\r\n                  {{data[indextr].descripcion_area}}\r\n                </vs-td>\r\n                <vs-td>\r\n                  {{ tr.periodo }}\r\n                </vs-td>\r\n                <vs-td>\r\n                  <vs-chip v-if=\"data[indextr].estado == 1\" size=\"small\">Activa</vs-chip>\r\n                  <vs-chip v-if=\"data[indextr].estado == 0\" color=\"danger\" size=\"small\">Bloqueada</vs-chip>\r\n                  <p class=\"mt-2\">\r\n                    <vs-chip color=\"success\" v-if=\"tr.area_basica == 1\">Área Básica</vs-chip>\r\n                  </p>\r\n                </vs-td>\r\n                <vs-td align=\"center\">\r\n                    <vx-tooltip style=\"display: inline-block;\" text=\"Editar\" position=\"top\" color=\"primary\">\r\n                      <vs-button  v-if=\"data[indextr].area_basica != '1'\" icon-pack=\"feather\" icon=\"icon-edit\" type=\"line\" radius size=\"large\" class=\"m-1\" color=\"primary\" @click=\"modalAgregaEdita(tr,2);\"></vs-button>\r\n                    </vx-tooltip>\r\n                    <vx-tooltip style=\"display: inline-block;\" text=\"Eliminar\" position=\"top\" color=\"primary\">\r\n                      <vs-button  v-if=\"data[indextr].area_basica != '1'\" icon-pack=\"feather\" icon=\"icon-trash\" type=\"line\" radius size=\"large\" class=\"m-1\" color=\"danger\" @click=\"confirmaEliminar(tr);\"></vs-button>\r\n                    </vx-tooltip>\r\n                    <vx-tooltip style=\"display: inline-block;\" text=\"Asignar como área básica\" position=\"top\" color=\"primary\">\r\n                      <vs-button  v-if=\"data[indextr].area_basica == '0'\" icon-pack=\"feather\" icon=\"icon-check\" type=\"line\" size=\"small\" class=\"m-1\" color=\"dark\" @click=\"datoFila=tr;confirmarAsignarAreaBasica(tr);\">Asignar</vs-button>\r\n                    </vx-tooltip>\r\n                </vs-td>\r\n              </vs-tr>\r\n          </template>\r\n        </vs-table>\r\n      </vs-tab>\r\n    <vs-tab :label=\"'Asignaturas ( ' + listaAsignaturas.length +' )'\">\r\n      <div class=\"flex mt-3\">\r\n        <vs-button color=\"primary\"  type=\"border\" icon-pack=\"feather\" icon=\"icon-plus\" @click=\"modalAgregaEditaAsignatura(0,1);\">Agregar</vs-button>\r\n        <p class=\"exportButton\" @click=\"tipo=1;OpenExportar()\"><vs-chip transparent color=\"success\" class=\"ml-3 cursor-pointer\" style=\"font-size:15px;padding:15px;\"><ion-icon name=\"cloud-download-outline\" style=\"font-size:20px;\"></ion-icon> <span class=\"ml-2\">Exportar</span></vs-chip></p>\r\n      </div>\r\n      <vs-table v-model=\"arregloSelectAsignatura\" multiple max-items=\"20\" search pagination :data=\"listaAsignaturas\" style=\"margin-top:-20px\">\r\n        <template slot=\"header\">\r\n          <div class=\"mt-6 mb-4\">\r\n            <br>\r\n            <v-select @input=\"filtrarAsignaturas()\" style=\"width:350px\" :options=\"listaAreas\" :reduce=\"listaAreas => listaAreas.id_area\" label=\"nombre_area\" v-model=\"asignaturaSelect\" placeholder=\"Filtrar areas...\"></v-select>\r\n          </div>\r\n        </template>\r\n        <template slot=\"thead\">\r\n          <vs-th sort-key=\"nombre\">Nombre</vs-th>\r\n          <vs-th sort-key=\"area\">Área</vs-th>\r\n          <vs-th sort-key=\"cant_preguntas\">Preguntas</vs-th>\r\n          <vs-th sort-key=\"cant_preguntas\">Período Evaluación</vs-th>\r\n          <vs-th sort-key=\"estado\">Estado</vs-th>\r\n          <vs-th>Acciones</vs-th>\r\n        </template>\r\n        <template slot-scope=\"{data}\">\r\n          <vs-tr :data=\"tr\" :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n            <vs-td width=\"25%\">\r\n              <br>\r\n              {{data[indextr].nombre_asignatura}}<br>\r\n              <small>{{data[indextr].descripcion_asignatura}}</small>\r\n            </vs-td>\r\n            <vs-td width=\"20%\">\r\n              <span v-for=\"(index , lista) in listaAreas\" :key=\"lista\">\r\n                <span v-if=\"index.id_area === tr.id_area \"> {{index.nombre_area}} </span>\r\n              </span>\r\n            </vs-td>\r\n            <vs-td width=\"5%\">\r\n              {{data[indextr].cant_preguntas}}\r\n            </vs-td>\r\n            <vs-td width=\"10%\">\r\n              {{ tr.periodo }}\r\n            </vs-td>\r\n            <vs-td width=\"15%\">\r\n              <vs-chip v-if=\"data[indextr].estado == 1\" size=\"small\">Activa</vs-chip>\r\n              <vs-chip v-if=\"data[indextr].estado == 0\" color=\"danger\" size=\"small\">Bloqueada</vs-chip>\r\n            </vs-td>\r\n            <vs-td width=\"15%\">\r\n              <vx-tooltip style=\"display: inline-block;\" text=\"Editar\" position=\"top\" color=\"primary\">\r\n                <vs-button style=\"display:inline\" type=\"line\" radius size=\"large\" icon-pack=\"feather\" icon=\"icon-edit\" class=\"m-2\" color=\"primary\" @click=\"modalAgregaEditaAsignatura(tr,2);\"></vs-button>\r\n              </vx-tooltip>\r\n              <vx-tooltip style=\"display: inline-block;\" text=\"Eliminar\" position=\"top\" color=\"primary\">\r\n                <vs-button style=\"display:inline\" type=\"line\" radius size=\"large\" icon-pack=\"feather\" icon=\"icon-trash\" class=\"m-1\" color=\"danger\" @click=\"confirmaEliminarAsignatura(tr);\"></vs-button>\r\n              </vx-tooltip>\r\n              <!-- <vx-tooltip style=\"display: inline-block;\" text=\"Sincronizar / mover preguntas\" position=\"top\" color=\"primary\">\r\n                <vs-button style=\"display:inline\" type=\"line\" radius size=\"large\" icon-pack=\"feather\" icon=\"icon-refresh-ccw\"  class=\"m-1\" color=\"success\" @click=\"formSincronizar(tr)\"></vs-button>\r\n              </vx-tooltip> -->\r\n            </vs-td>\r\n          </vs-tr>\r\n        </template>\r\n      </vs-table>\r\n    </vs-tab>\r\n    </vs-tabs>\r\n  </vx-card>\r\n  <!--MODALES-->\r\n  <!--MODAL PARA EXPORTAR-->\r\n  <!--modal exportar-->\r\n  <vs-prompt title=\"Exportar a Excel\" class=\"export-options\" @cancle=\"clearFields\" @accept=\"exportToExcel\" accept-text=\"Exportar\" @close=\"clearFields\" :active.sync=\"activePrompt\">\r\n    <vs-alert class=\"mb-3\" color=\"danger\" icon-pack=\"feather\" icon=\"icon-info\">\r\n        <span>Recuerde <b>seleccionar</b> los registros que desea exportar.</span>\r\n    </vs-alert>\r\n    <vs-input v-model=\"fileName\" placeholder=\"Ingrese el nombre del archivo\" class=\"w-full\" />\r\n    <v-select v-model=\"selectedFormat\" :options=\"formats\" class=\"my-4\" />\r\n    <div class=\"flex\">\r\n    </div>\r\n  </vs-prompt>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport Vue from 'vue'\r\nimport axios from 'axios'\r\nimport vSelect from 'vue-select'\r\nexport default {\r\n    data() {\r\n        return {\r\n          usuario: [],\r\n          listaAreas: [],\r\n          listaAsignaturas: [],\r\n          tmpListaAsignaturas: [],\r\n          asignaturaSelect: '',\r\n          datoEditar: '',\r\n          num: '',\r\n          modalAreas: false,\r\n          modalAsignaturas: false,\r\n          area: {\r\n              'id_area': '',\r\n              'nombre_area': '',\r\n              'descripcion_area': '',\r\n              'estado': '',\r\n          },\r\n          asignatura: {\r\n              'id_asignatura': '',\r\n              'id_area': '',\r\n              'nombre_asignatura': '',\r\n              'descripcion_asignatura': '',\r\n              'cant_preguntas': '',\r\n              'estado': '',\r\n          },\r\n          titulo: '',\r\n          txt_boton: '',\r\n          txt_msj: '',\r\n          id_eliminar: '',\r\n          modalSincronizar: false,\r\n          asignatura_sinc: [{id_asignatura: '', nombre_asignatura: ''}],\r\n          asign_selec: [],\r\n          //VARIABLES PARA EXPORTAR EXCEL\r\n          arregloSelectArea: [],\r\n          arregloSelectAsignatura:[],\r\n          formats: ['xls', 'xlsx', 'csv', 'txt'],\r\n          fileName:null,\r\n          selectedFormat: 'xls',\r\n          cellAutoWidth: true,\r\n          activePrompt: false,\r\n          tipo:0,\r\n          //FIN VARIABLES PARA EXPORTAR EXCEL\r\n          //VARIABLES DE PERIODOS EVALUACION\r\n          arregloPeriodos:[],\r\n          periodoSelect:'',\r\n          //FIN VARIABLES DE PERIODOS DE EVALUACION\r\n          //VARIABLES PARA ASIGNAR COMO AREA BASICA\r\n          datoFila:{},\r\n          //FIN VARIABLES PARA ASIGNAR COMO AREA BASICA\r\n        }\r\n    },\r\n    components: {\r\n      'v-select': vSelect,\r\n    },\r\n    async created() {\r\n      this.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n    },\r\n    mounted() {\r\n      let me = this;\r\n      me.getPeriodosEvaluacion()\r\n    },\r\n    methods: {\r\n      getPeriodosEvaluacion() {\r\n        let me = this;\r\n        this.$http.get(this.$server_url+'salle/periodos')\r\n          .then(function (response) {\r\n            me.arregloPeriodos = response.data;\r\n            let getEvaluacionSelect = localStorage.EvaluacionSelectSalle\r\n            //si ya existe el periodo seleccionado lo asigno\r\n            if(getEvaluacionSelect){\r\n              me.periodoSelect = parseInt(getEvaluacionSelect)\r\n              me.getAreas()\r\n              return\r\n            }\r\n            if(me.arregloPeriodos.length > 0){\r\n              me.periodoSelect = getEvaluacionSelect\r\n              me.getAreas()\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n          })\r\n      },\r\n      getAreas() {\r\n        let me                  = this;\r\n        me.listaAreas           = []\r\n        me.listaAsignaturas     = []\r\n        me.tmpListaAsignaturas  = []\r\n        me.asignaturaSelect     = ''\r\n        // if(me.periodoSelect == null || me.periodoSelect == \"\" || me.periodoSelect == undefined){\r\n        //   me.$vs.notify({\r\n        //   text:'Seleccione una Evaluación Período por favor',\r\n        //   color:'warning',\r\n        //   iconPack: 'feather',\r\n        //   icon:'icon-check'})\r\n        //   return\r\n        // }\r\n        me.$vs.loading();\r\n        this.$http.get(this.$server_url + 'areas_salle')\r\n          .then(res => {\r\n            me.$vs.loading.close();\r\n            let datos = res.data\r\n            if(datos.length > 0){\r\n              me.listaAreas = datos.filter(p => p.n_evaluacion == me.periodoSelect)\r\n            }\r\n          })\r\n          .catch(err => {\r\n            me.$vs.loading.close();\r\n          })\r\n        this.$http.get(this.$server_url + 'asignaturas_salle')\r\n          .then(res => {\r\n            me.$vs.loading.close();\r\n            let datos2 = res.data\r\n            if(datos2.length > 0){\r\n              me.listaAsignaturas = datos2.filter(p => p.n_evaluacion == me.periodoSelect)\r\n              me.tmpListaAsignaturas = datos2.filter(p => p.n_evaluacion == me.periodoSelect)\r\n            }\r\n          })\r\n          .catch(err => {\r\n            me.$vs.loading.close();\r\n          })\r\n      },\r\n        modalAgregaEdita(item, valor) {\r\n          let me = this;\r\n          me.area.id_area = '';\r\n          me.area.nombre_area = '';\r\n          me.area.descripcion_area = '';\r\n          me.area.estado = 1;\r\n          if (valor == 1) {\r\n            me.titulo = 'Agregar área';\r\n            me.txt_boton = 'Registrar';\r\n            me.txt_msj = ' registrada ';\r\n          }\r\n          if (valor == 2) {\r\n            me.titulo = 'Editar área';\r\n            me.txt_boton = 'Editar';\r\n            me.txt_msj = ' editada ';\r\n            me.area.id_area = item.id_area\r\n            me.area.estado = item.estado\r\n            me.area.nombre_area = item.nombre_area\r\n            me.area.descripcion_area = item.descripcion_area\r\n          }\r\n          me.modalAreas = true;\r\n        },\r\n        modalAgregaEditaAsignatura(item, valor) {\r\n          let me = this;\r\n          me.asignatura.id_asignatura           = '';\r\n          me.asignatura.id_area                 = '';\r\n          me.asignatura.nombre_asignatura       = '';\r\n          me.asignatura.descripcion_asignatura  = '';\r\n          me.asignatura.cant_preguntas          = '';\r\n          me.asignatura.estado                  = 1;\r\n          // console.log(item, valor)\r\n          if (valor == 1) {\r\n              me.titulo = 'Agregar asignatura';\r\n              me.txt_boton = 'Registrar';\r\n              me.txt_msj = ' registrada ';\r\n          }\r\n          if (valor == 2) {\r\n              me.titulo = 'Editar asignatura';\r\n              me.txt_boton = 'Editar';\r\n              me.txt_msj = ' editada ';\r\n              me.asignatura.id_area = item.id_area\r\n              me.asignatura.id_asignatura = item.id_asignatura\r\n              me.asignatura.nombre_asignatura = item.nombre_asignatura\r\n              me.asignatura.descripcion_asignatura = item.descripcion_asignatura\r\n              me.asignatura.cant_preguntas = item.cant_preguntas\r\n              me.asignatura.estado = item.estado\r\n          }\r\n          me.modalAsignaturas = true;\r\n        },\r\n        agregarEditarArea() {\r\n          let me = this;\r\n          me.arregloSelectArea = []\r\n          if (me.area.nombre_area == '' || me.area.nombre_area == null || me.area.descripcion_area == '' || me.area.descripcion_area == null) {\r\n            me.$vs.notify({\r\n              text: 'Complete todos los campos',\r\n              color: 'warning',\r\n              iconPack: 'feather',\r\n              icon: 'icon-alert-triangle'\r\n            })\r\n            return\r\n          }\r\n          if( me.periodoSelect == null || me.periodoSelect == \"\" || me.periodoSelect == undefined){\r\n            me.$vs.notify({\r\n              text: 'Seleccione un período Evaluación por favor',\r\n              color: 'warning',\r\n              iconPack: 'feather',\r\n              icon: 'icon-alert-triangle'\r\n            })\r\n            return\r\n          }\r\n          me.$vs.loading();\r\n          let datas = new FormData();\r\n          datas.append('id_area',           me.area.id_area);\r\n          datas.append('nombre_area',       me.area.nombre_area);\r\n          datas.append('descripcion_area',  me.area.descripcion_area);\r\n          datas.append('estado',            me.area.estado);\r\n          datas.append('n_evaluacion',      me.periodoSelect)\r\n          this.$http.post(this.$server_url + 'crea_area_salle', datas)\r\n            .then(res => {\r\n              me.$vs.notify({\r\n                text: 'Área ' + me.txt_msj + ' correctamente',\r\n                color: 'success',\r\n                iconPack: 'feather',\r\n                icon: 'icon-check'\r\n              })\r\n              me.$vs.loading.close();\r\n              me.getAreas();\r\n            })\r\n            .catch(err => {\r\n              console.log(err);\r\n              me.$vs.loading.close();\r\n            })\r\n          me.modalAreas = false;\r\n        },\r\n        agregarEditarAsignatura() {\r\n          let me = this;\r\n          me.arregloSelectAsignatura = []\r\n          if (me.asignatura.id_area == '' || me.asignatura.id_area == null || me.asignatura.nombre_asignatura == '' || me.asignatura.nombre_asignatura == null || me.asignatura.descripcion_asignatura == '' || me.asignatura.descripcion_asignatura == null || me.asignatura.cant_preguntas == '' || me.asignatura.cant_preguntas == null || me.asignatura.estado == '' || me.asignatura.estado == null) {\r\n              me.$vs.notify({\r\n                  text: 'Complete todos los campos',\r\n                  color: 'warning',\r\n                  iconPack: 'feather',\r\n                  icon: 'icon-alert-triangle'\r\n              })\r\n              return\r\n          }\r\n          me.$vs.loading();\r\n          let datas = new FormData();\r\n          datas.append('id_asignatura', me.asignatura.id_asignatura);\r\n          datas.append('id_area', me.asignatura.id_area);\r\n          datas.append('nombre_asignatura', me.asignatura.nombre_asignatura);\r\n          datas.append('descripcion_asignatura', me.asignatura.descripcion_asignatura);\r\n          datas.append('cant_preguntas', me.asignatura.cant_preguntas);\r\n          datas.append('estado', me.asignatura.estado);\r\n          this.$http.post(this.$server_url + 'crea_asignatura_salle', datas)\r\n              .then(res => {\r\n                  // console.log(res.data)\r\n                  me.$vs.notify({\r\n                      text: 'Asignatura ' + me.txt_msj + ' correctamente',\r\n                      color: 'success',\r\n                      iconPack: 'feather',\r\n                      icon: 'icon-check'\r\n                  })\r\n                  me.$vs.loading.close();\r\n                  me.getAreas();\r\n              })\r\n              .catch(err => {\r\n                  console.log(err);\r\n                  me.$vs.loading.close();\r\n              })\r\n          me.modalAsignaturas = false;\r\n        },\r\n        volver() {\r\n            let me = this;\r\n            me.modalAreas = false;\r\n            me.modalAsignaturas = false;\r\n        },\r\n        filtrarAsignaturas() {\r\n            let me = this;\r\n            // me.tmpAreas = me.listaAreas;\r\n            me.listaAsignaturas = [];\r\n            // console.log( me.asignaturaSelect )\r\n            for (let index = 0; index < me.tmpListaAsignaturas.length; index++) {\r\n                if (me.tmpListaAsignaturas[index].id_area == me.asignaturaSelect) {\r\n                    me.listaAsignaturas.push(me.tmpListaAsignaturas[index]);\r\n                }\r\n            }\r\n            if (me.asignaturaSelect == null) {\r\n                me.listaAsignaturas = me.tmpListaAsignaturas;\r\n            }\r\n        },\r\n        confirmaEliminar(item) {\r\n            let me = this;\r\n            console.log(item)\r\n            me.id_eliminar = item.id_area;\r\n            // return\r\n            me.$vs.dialog({\r\n                type: 'confirm',\r\n                color: 'danger',\r\n                title: 'Confirmar',\r\n                text: 'Seguro desea eliminar este item?',\r\n                acceptText: 'Aceptar',\r\n                cancelText: 'Cancelar',\r\n                accept: me.eliminarItem\r\n            })\r\n        },\r\n        eliminarItem() {\r\n            let me = this;\r\n            me.$vs.loading();\r\n            this.$http.get(this.$server_url + 'eliminaArea/' + me.id_eliminar)\r\n                .then(res => {\r\n                    console.log(res.data)\r\n                    if (res.data > 0) {\r\n                        me.$vs.notify({\r\n                            time: 8000,\r\n                            text: 'Esta área no puede ser eliminada, contiene ' + res.data + ' asignaturas creadas',\r\n                            color: 'danger',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-alert-check'\r\n                        })\r\n                    } else {\r\n                        me.$vs.notify({\r\n                            text: 'Area eliminada  correctamente',\r\n                            color: 'success',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-check'\r\n                        })\r\n                    }\r\n                    me.getAreas();\r\n                    me.$vs.loading.close();\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                    me.$vs.loading.close();\r\n                })\r\n        },\r\n        confirmaEliminarAsignatura(item) {\r\n            let me = this;\r\n            me.id_eliminar = item.id_asignatura;\r\n            // console.log(item)\r\n            // return\r\n            me.$vs.dialog({\r\n                type: 'confirm',\r\n                color: 'danger',\r\n                title: 'Confirmar',\r\n                text: 'Seguro desea eliminar este item?',\r\n                acceptText: 'Aceptar',\r\n                cancelText: 'Cancelar',\r\n                accept: me.eliminarItem\r\n            })\r\n        },\r\n        eliminarItem() {\r\n            let me = this;\r\n            me.$vs.loading();\r\n            this.$http.get(this.$server_url + 'eliminaAsignatura/' + me.id_eliminar)\r\n                .then(res => {\r\n                    // console.log(res.data)\r\n                    if (res.data.contarSP > 0) {  //preguntas creadas\r\n                        me.$vs.notify({\r\n                            time: 8000,\r\n                            text: 'Esta asignatura tiene ' + res.data.contarSP + ' preguntas asignadas, elimine dichas preguntas, antes de quitar esta asignatura',\r\n                            color: 'danger',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-alert-check'\r\n                        })\r\n                    } else if (res.data.contarSDOC > 0) { //asignaturas asignadas a docentes\r\n                        me.$vs.notify({\r\n                            time: 8000,\r\n                            text: 'Algunos docentes tienen esta asignatura en su perfil, edite la asignación de los docentes, antes de eliminar esta asignatura',\r\n                            color: 'danger',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-alert-check'\r\n                        })\r\n                    } else {\r\n                        me.$vs.notify({\r\n                            text: 'Asignatura eliminada correctamente',\r\n                            color: 'success',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-check'\r\n                        })\r\n                    }\r\n                    me.getAreas();\r\n                    me.$vs.loading.close();\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                    me.$vs.loading.close();\r\n                })\r\n        },\r\n        formSincronizar(item){\r\n            let me = this\r\n            me.asign_selec = item\r\n            me.modalSincronizar = true\r\n        },\r\n      sincronizarPreguntas(){\r\n        let me = this\r\n        me.$vs.loading()\r\n        this.$http.get(this.$server_url + 'salle_sincronizar_preguntas/' + me.asignatura_sinc.id_asignatura +'/'+me.asign_selec.id_asignatura+'/'+me.usuario.idusuario+'/'+localStorage.EvaluacionSelectSalle)\r\n        .then(res => {\r\n          if( res.data == '1' ){\r\n            me.$vs.notify({\r\n              text: 'Preguntas sincronizadas correctamente.',\r\n              color: 'success',\r\n              iconPack: 'feather',\r\n              icon: 'icon-check'\r\n            })\r\n          }else{\r\n            me.$vs.notify({\r\n              text: 'La asignatura seleccionada no tiene asignaturas para sincronizar.',\r\n              color: 'warning',\r\n              iconPack: 'feather',\r\n              icon: 'icon-alert-triangle'\r\n            })\r\n          }\r\n          me.$vs.loading.close()\r\n        })\r\n        .catch(err => {\r\n          me.$vs.loading.close()\r\n        })\r\n      },\r\n      //METODOS PARA EXPORTAR EXCEL\r\n      OpenExportar(){\r\n        let me          = this;\r\n        //tipo => 0 exportar areas;\r\n        if(me.tipo == 0){\r\n          if(me.arregloSelectArea.length == 0){\r\n            me.$vs.notify({\r\n            text:'Seleccione al menos un registro para exportar por favor',\r\n            color:'warning',\r\n            iconPack: 'feather',\r\n            icon:'icon-check'})\r\n            return\r\n          }\r\n        }\r\n        if(me.tipo == 1){\r\n          if(me.arregloSelectAsignatura.length == 0){\r\n            me.$vs.notify({\r\n            text:'Seleccione al menos un registro para exportar por favor',\r\n            color:'warning',\r\n            iconPack: 'feather',\r\n            icon:'icon-check'})\r\n            return\r\n          }\r\n        }\r\n        me.activePrompt = true\r\n      },\r\n      //METODOS PARA ASIGNAR COMO AREA BASICA\r\n      confirmarAsignarAreaBasica(){\r\n        let me = this\r\n        this.$vs.dialog({\r\n          type:'confirm',\r\n          color: 'danger',\r\n          title: `Confirmar`,\r\n          acceptText:'Si, deseo asignar',\r\n          cancelText:'Cancelar',\r\n          text: 'Estas seguro de asignar como área básica',\r\n          accept:this.AsignarComoAreaBasica\r\n        })\r\n      },\r\n      AsignarComoAreaBasica(){\r\n        let me = this;\r\n        let formData = new FormData();\r\n        formData.append('id_area',me.datoFila.id_area);\r\n        formData.append('n_evaluacion',localStorage.EvaluacionSelectSalle);\r\n        me.$vs.loading()\r\n        this.$http.post(this.$server_url+'AsignarComoAreaBasica', formData)\r\n        .then(res => {\r\n        me.getAreas();\r\n        me.$vs.loading.close()\r\n        me.$vs.notify({\r\n          text:res.data.message,\r\n          color:'success',\r\n          iconPack: 'feather',\r\n          icon:'icon-check'})\r\n        })\r\n      },\r\n      //METODOS PARA EXPORTAR EXCEL\r\n      exportToExcel() {\r\n        let me = this;\r\n        var headerVal   = []\r\n        var headerTitle = []\r\n        //AREA\r\n        if(me.tipo == 0){\r\n          headerTitle = [ 'Área','Descripción', 'Estado','Período'];\r\n          headerVal = [ 'nombre_area','descripcion_area','estadoArea','periodo'];\r\n        }\r\n        //ASIGNATURA\r\n        if(me.tipo == 1){\r\n          headerTitle = [ 'Área','Asignatura','Descripción', 'Cantidad Preguntas','Estado','Período'];\r\n          headerVal = ['nombre_area', 'nombre_asignatura','descripcion_asignatura','cant_preguntas','estadoAsignatura','periodo'];\r\n        }\r\n        //tipo array\r\n        var arryPrint = []\r\n        //tipo => 0 = areas\r\n        if(me.tipo == 0) arryPrint = me.arregloSelectArea\r\n        if(me.tipo == 1) arryPrint = me.arregloSelectAsignatura\r\n        import('@/vendor/Export2Excel').then(excel => {\r\n        const data = this.formatJson(headerVal, arryPrint)\r\n        excel.export_json_to_excel({\r\n            header: headerTitle,\r\n            data,\r\n            filename: this.fileName,\r\n            autoWidth: this.cellAutoWidth,\r\n            bookType: this.selectedFormat\r\n          })\r\n          this.clearFields()\r\n          this.arregloSelectArea = [];\r\n          this.arregloSelectAsignatura  = [];\r\n        })\r\n    },\r\n    formatJson(filterVal, jsonData) {\r\n      return jsonData.map(v => filterVal.map(j => {\r\n          return v[j]\r\n      }))\r\n    },\r\n    //limpiar campos para exportar de nuevo\r\n    clearFields() {\r\n      this.fileName = ''\r\n      this.cellAutoWidth = true\r\n      this.selectedFormat = 'xls'\r\n    },\r\n  },\r\n}\r\n</script>\r\n<style>\r\n.exportButton{\r\n  transition:1s ease-in;\r\n}\r\n.exportButton:hover{\r\n  transform: scale(1.1);\r\n  color:#f2f2f2;\r\n}\r\n</style>\r\n"]}]}