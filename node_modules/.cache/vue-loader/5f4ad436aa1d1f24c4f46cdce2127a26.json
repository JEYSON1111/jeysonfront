{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\materialapoyo\\components\\material_temas.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\materialapoyo\\components\\material_temas.vue","mtime":1712682816149},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nimport axios from 'axios'\r\nimport vSelect from 'vue-select'\r\nexport default {\r\n    data(){\r\n        return{\r\n            update:true,\r\n            infotemas:[],\r\n            infoarchivosid:0,\r\n             //para obtener el id del libro\r\n            infolibro:0,\r\n            //para traer las unidades\r\n            arregloTraeUnidades:[],\r\n            arregloTraerTemas:[],\r\n            //para el modal\r\n            popupActivo2:false,\r\n            id:0,\r\n            material:{\r\n              unidad:'',\r\n              tema:''\r\n            }\r\n        }\r\n    },\r\n    components: {\r\n    'v-select': vSelect,\r\n            \r\n    },\r\n    methods:{\r\n\r\n         list(){\r\n                let me = this;\r\n                me.$vs.loading() \r\n                this.$http.get(this.$server_url+`materialtemas/`+this.infoarchivosid).then(res => {\r\n                 this.infotemas = res.data;\r\n\r\n                 me.$vs.loading.close();       \r\n                  \r\n                })\r\n                .catch(function (error) {\r\n                \tconsole.log(error)\r\n                })\r\n  \r\n       \r\n        },\r\n        //para abrir el modal y editar        \r\n        openModal(data={}){\r\n            this.filtrarUnidades();\r\n            this.filtrarTemas1();\r\n            this.popupActivo2 = true;\r\n           \r\n            this.id  = data.id;\r\n            this.material.tema = {id:data.id_tema, nombre_tema:data.nombre_tema};\r\n  \r\n         \r\n        \r\n        },\r\n         //filtro para filtrar unidad por libro\r\n        filtrarUnidades(){\r\n               let me = this;\r\n               \r\n                \r\n                me.$vs.loading()\r\n                const formData = new FormData();\r\n                    formData.append('idlibro', me.infolibro);\r\n                   \r\n\r\n                this.$http.post(this.$server_url+'traerunidades', formData).then(res => {\r\n                    me.arregloTraeUnidades = res.data;\r\n              \r\n                    me.$vs.loading.close()\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })  \r\n          },\r\n\r\n         //para filtrar los temas por unidad y que se muestre en el select\r\n          filtrarTemas1(){\r\n              let me = this;\r\n              const formData = new FormData();\r\n              if(me.update ==false){\r\n                if( me.material.unidad.id_unidad_libro === undefined ){\r\n                    me.$vs.notify({\r\n                        text:'Seleccione una libro antes de filtrar por temas',\r\n                        color:'warning',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check'})\r\n                    return;\r\n                }\r\n\r\n                me.arregloTraerTemas = []\r\n                \r\n                me.$vs.loading()\r\n                // const formData = new FormData();\r\n                formData.append('id_unidad_libro', me.material.unidad.id_unidad_libro);\r\n              }\r\n                \r\n                   \r\n\r\n                this.$http.post(this.$server_url+'traertemas', formData).then(res => {\r\n                    me.arregloTraerTemas = res.data;\r\n                    me.$vs.loading.close()\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })  \r\n          },\r\n        //para filtrar los temas por las unidades\r\n            filtrarTemas(){\r\n            let me = this;\r\n              \r\n                if( me.material.unidad.id_unidad_libro === undefined ){\r\n                    me.$vs.notify({\r\n                        text:'Seleccione una libro antes de filtrar por unidades',\r\n                        color:'warning',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check'})\r\n                    return;\r\n                }\r\n                me.arregloTraerTemas = []\r\n                \r\n                me.$vs.loading()\r\n                const formData = new FormData();\r\n                formData.append('id_unidad_libro', me.material.unidad.id_unidad_libro);\r\n                   \r\n\r\n                this.$http.post(this.$server_url+'traertemas', formData).then(res => {\r\n                    me.arregloTraerTemas = res.data;\r\n                    me.$vs.loading.close()\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })  \r\n          },\r\n          editar(){\r\n          let me = this;\r\n          let formData = new FormData();\r\n          formData.append('id', me.id);\r\n          formData.append('id_tema', me.material.tema.id);\r\n            \r\n          me.$vs.loading()\r\n          this.$http.post(this.$server_url+'materialtemaseditar', formData)\r\n          .then(res => {\r\n              \r\n              me.list();\r\n              me.popupActivo2 = false\r\n              me.$vs.loading.close()\r\n              me.$vs.notify({\r\n              text:'Tema actualizado exitosamente',\r\n              color:'success',\r\n              iconPack: 'feather',\r\n              icon:'icon-check'})\r\n          })\r\n      },\r\n          //para eliminar el tema\r\n        eliminarTema(id){\r\n            let me = this;\r\n            let formData = new FormData();\r\n            formData.append('id', id);\r\n            \r\n            me.$vs.loading()\r\n            this.$http.post(this.$server_url+'materialtemaseliminar', formData)\r\n                .then(res => {\r\n                    // me.$router.go(0)\r\n                   \r\n                    me.$vs.loading.close()\r\n                    me.$vs.notify({\r\n                        text: 'Tema  eliminado',\r\n                        color: 'success',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check'\r\n                    })\r\n                     me.list();\r\n                })\r\n        }\r\n    },\r\n     created() {\r\n \r\n   \r\n   \r\n    let transformaraParse = JSON.parse(localStorage.getItem('infoarchivosid')); \r\n    //llenar el arreglo  de archivos \r\n    this.infoarchivosid = transformaraParse;\r\n       //para obtener el id del libro\r\n    let transformaraParse2 = JSON.parse(localStorage.getItem('infoarchivolibro')); \r\n    this.infolibro = transformaraParse2;\r\n    this.list();\r\n\r\n    }\r\n}\r\n",{"version":3,"sources":["material_temas.vue"],"names":[],"mappings":";AA+FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;AAIA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"material_temas.vue","sourceRoot":"src/views/materialapoyo/components","sourcesContent":["<template>\r\n    <div>\r\n\r\n      <!--- MODAL PARA Editar -->\r\n    <div class=\"centerx\">\r\n      \r\n      <vs-popup classContent=\"popup-example\"  title=\"Editar Tema\" :active.sync=\"popupActivo2\">\r\n     \r\n      <div class=\"grupo\">\r\n          <div class=\"vx-col w-full mt-5\">\r\n           \r\n              Seleccione  unidad: \r\n              <v-select  @input=\"filtrarTemas()\"  :options=\"arregloTraeUnidades\" :reduce=\"arregloTraeUnidades => arregloTraeUnidades\" label=\"unidad\" class=\"w-full\" v-model=\"material.unidad\" />\r\n          </div>\r\n      </div>\r\n      <div class=\"grupo\">\r\n          <div class=\"vx-col w-full mt-5\">\r\n              Seleccione  Temas:\r\n              <v-select  :options=\"arregloTraerTemas\" :reduce=\"arregloTraerTemas => arregloTraerTemas\" label=\"nombre_tema\" class=\"w-full\" v-model=\"material.tema\" />\r\n          </div>\r\n      </div> \r\n      \r\n        <br>\r\n\r\n     \r\n        <br>\r\n        <vs-button @click=\"editar();\" color=\"primary\" type=\"filled\">Guardar Cambios</vs-button>\r\n      </vs-popup>\r\n    </div>\r\n\r\n      <vs-table max-items=\"3\" search pagination :data=\"infotemas\">\r\n      \r\n        <template slot=\"header\">\r\n\r\n          <h3>\r\n           Temas\r\n          </h3>\r\n        </template>\r\n\r\n        <template slot=\"thead\">\r\n       \r\n          <vs-th>\r\n            Libro\r\n          </vs-th>\r\n            <vs-th>\r\n            Unidad\r\n          </vs-th>\r\n         \r\n          <vs-th>\r\n            Tema\r\n          </vs-th>\r\n               \r\n          <vs-th colspan=\"2\">\r\n            Accion\r\n          </vs-th>\r\n        </template>\r\n\r\n\r\n\r\n\r\n        <template slot-scope=\"{data}\">\r\n          <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\" >\r\n          \r\n            <vs-td :data=\"data[indextr].nombrelibro\">\r\n              {{data[indextr].nombrelibro}}\r\n            </vs-td>\r\n\r\n              <vs-td :data=\"data[indextr].unidad\">\r\n              {{data[indextr].unidad}}\r\n            </vs-td>\r\n            \r\n            <vs-td :data=\"data[indextr].nombre_tema\">\r\n              {{data[indextr].nombre_tema}}\r\n            </vs-td>\r\n            <vs-td>\r\n                <vs-button color=\"primary\" type=\"border\" @click=\"openModal(data[indextr]);\" icon=\"edit\">\r\n                </vs-button>\r\n            </vs-td>\r\n            \r\n            <vs-td>\r\n        \r\n              <vs-button color=\"danger\" type=\"border\" icon=\"delete\" @click = \"eliminarTema(data[indextr].id);\">\r\n              \r\n              </vs-button>\r\n            </vs-td>\r\n\r\n         \r\n\r\n          </vs-tr>\r\n        </template>\r\n      </vs-table>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nimport vSelect from 'vue-select'\r\nexport default {\r\n    data(){\r\n        return{\r\n            update:true,\r\n            infotemas:[],\r\n            infoarchivosid:0,\r\n             //para obtener el id del libro\r\n            infolibro:0,\r\n            //para traer las unidades\r\n            arregloTraeUnidades:[],\r\n            arregloTraerTemas:[],\r\n            //para el modal\r\n            popupActivo2:false,\r\n            id:0,\r\n            material:{\r\n              unidad:'',\r\n              tema:''\r\n            }\r\n        }\r\n    },\r\n    components: {\r\n    'v-select': vSelect,\r\n            \r\n    },\r\n    methods:{\r\n\r\n         list(){\r\n                let me = this;\r\n                me.$vs.loading() \r\n                this.$http.get(this.$server_url+`materialtemas/`+this.infoarchivosid).then(res => {\r\n                 this.infotemas = res.data;\r\n\r\n                 me.$vs.loading.close();       \r\n                  \r\n                })\r\n                .catch(function (error) {\r\n                \tconsole.log(error)\r\n                })\r\n  \r\n       \r\n        },\r\n        //para abrir el modal y editar        \r\n        openModal(data={}){\r\n            this.filtrarUnidades();\r\n            this.filtrarTemas1();\r\n            this.popupActivo2 = true;\r\n           \r\n            this.id  = data.id;\r\n            this.material.tema = {id:data.id_tema, nombre_tema:data.nombre_tema};\r\n  \r\n         \r\n        \r\n        },\r\n         //filtro para filtrar unidad por libro\r\n        filtrarUnidades(){\r\n               let me = this;\r\n               \r\n                \r\n                me.$vs.loading()\r\n                const formData = new FormData();\r\n                    formData.append('idlibro', me.infolibro);\r\n                   \r\n\r\n                this.$http.post(this.$server_url+'traerunidades', formData).then(res => {\r\n                    me.arregloTraeUnidades = res.data;\r\n              \r\n                    me.$vs.loading.close()\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })  \r\n          },\r\n\r\n         //para filtrar los temas por unidad y que se muestre en el select\r\n          filtrarTemas1(){\r\n              let me = this;\r\n              const formData = new FormData();\r\n              if(me.update ==false){\r\n                if( me.material.unidad.id_unidad_libro === undefined ){\r\n                    me.$vs.notify({\r\n                        text:'Seleccione una libro antes de filtrar por temas',\r\n                        color:'warning',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check'})\r\n                    return;\r\n                }\r\n\r\n                me.arregloTraerTemas = []\r\n                \r\n                me.$vs.loading()\r\n                // const formData = new FormData();\r\n                formData.append('id_unidad_libro', me.material.unidad.id_unidad_libro);\r\n              }\r\n                \r\n                   \r\n\r\n                this.$http.post(this.$server_url+'traertemas', formData).then(res => {\r\n                    me.arregloTraerTemas = res.data;\r\n                    me.$vs.loading.close()\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })  \r\n          },\r\n        //para filtrar los temas por las unidades\r\n            filtrarTemas(){\r\n            let me = this;\r\n              \r\n                if( me.material.unidad.id_unidad_libro === undefined ){\r\n                    me.$vs.notify({\r\n                        text:'Seleccione una libro antes de filtrar por unidades',\r\n                        color:'warning',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check'})\r\n                    return;\r\n                }\r\n                me.arregloTraerTemas = []\r\n                \r\n                me.$vs.loading()\r\n                const formData = new FormData();\r\n                formData.append('id_unidad_libro', me.material.unidad.id_unidad_libro);\r\n                   \r\n\r\n                this.$http.post(this.$server_url+'traertemas', formData).then(res => {\r\n                    me.arregloTraerTemas = res.data;\r\n                    me.$vs.loading.close()\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })  \r\n          },\r\n          editar(){\r\n          let me = this;\r\n          let formData = new FormData();\r\n          formData.append('id', me.id);\r\n          formData.append('id_tema', me.material.tema.id);\r\n            \r\n          me.$vs.loading()\r\n          this.$http.post(this.$server_url+'materialtemaseditar', formData)\r\n          .then(res => {\r\n              \r\n              me.list();\r\n              me.popupActivo2 = false\r\n              me.$vs.loading.close()\r\n              me.$vs.notify({\r\n              text:'Tema actualizado exitosamente',\r\n              color:'success',\r\n              iconPack: 'feather',\r\n              icon:'icon-check'})\r\n          })\r\n      },\r\n          //para eliminar el tema\r\n        eliminarTema(id){\r\n            let me = this;\r\n            let formData = new FormData();\r\n            formData.append('id', id);\r\n            \r\n            me.$vs.loading()\r\n            this.$http.post(this.$server_url+'materialtemaseliminar', formData)\r\n                .then(res => {\r\n                    // me.$router.go(0)\r\n                   \r\n                    me.$vs.loading.close()\r\n                    me.$vs.notify({\r\n                        text: 'Tema  eliminado',\r\n                        color: 'success',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check'\r\n                    })\r\n                     me.list();\r\n                })\r\n        }\r\n    },\r\n     created() {\r\n \r\n   \r\n   \r\n    let transformaraParse = JSON.parse(localStorage.getItem('infoarchivosid')); \r\n    //llenar el arreglo  de archivos \r\n    this.infoarchivosid = transformaraParse;\r\n       //para obtener el id del libro\r\n    let transformaraParse2 = JSON.parse(localStorage.getItem('infoarchivolibro')); \r\n    this.infolibro = transformaraParse2;\r\n    this.list();\r\n\r\n    }\r\n}\r\n</script>"]}]}