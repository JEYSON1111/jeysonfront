{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\codigos\\components\\utils\\TableCodigosStorage.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\codigos\\components\\utils\\TableCodigosStorage.vue","mtime":1712682815651},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nexport default{\r\n  data(){\r\n    return{\r\n      fileName: null,\r\n      formats: ['xls', 'xlsx', 'csv', 'txt'],\r\n      cellAutoWidth: true,\r\n      selectedFormat: 'xlsx',\r\n    }\r\n  },\r\n  props:{\r\n    arregloStorage:{\r\n      type:Array,\r\n      default:[]\r\n    }\r\n  },\r\n  methods:{\r\n    //para limipiar los campos del excel\r\n    clearFields() {\r\n      this.fileName = ''\r\n      this.cellAutoWidth = true\r\n      this.selectedFormat = 'xls'\r\n    },\r\n    //metodo par descargar el excel\r\n    exportToExcel() {\r\n      let headerTitle = ['Código','Libro'];\r\n      let headerVal = ['codigo','libro'];\r\n      let codigoSelectedMayus = this.arregloStorage\r\n      for (var i = 0; i < codigoSelectedMayus.length; i++) {\r\n        for (var key in codigoSelectedMayus[i]) {\r\n          if (typeof codigoSelectedMayus[i][key] == \"string\") {\r\n              codigoSelectedMayus[i][key] = codigoSelectedMayus[i][key].toUpperCase();\r\n          }\r\n        }\r\n      }\r\n      import('@/vendor/Export2Excel').then(excel => {\r\n        const list = codigoSelectedMayus\r\n        const data = this.formatJson(headerVal, list)\r\n        excel.export_json_to_excel({\r\n          header: headerTitle,\r\n          data,\r\n          filename: 'ArchivoCodigos',\r\n          autoWidth: this.cellAutoWidth,\r\n          bookType: this.selectedFormat\r\n        })\r\n        this.clearFields()\r\n      })\r\n    },\r\n    formatJson(filterVal, jsonData) {\r\n      return jsonData.map(v => filterVal.map(j => {\r\n          return v[j]\r\n      }))\r\n    },\r\n  }\r\n}\r\n",{"version":3,"sources":["TableCodigosStorage.vue"],"names":[],"mappings":";AA+BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TableCodigosStorage.vue","sourceRoot":"src/views/codigos/components/utils","sourcesContent":["<template>\r\n  <div>\r\n    <vs-table max-items=\"10\" search pagination :data=\"arregloStorage\">\r\n      <template slot=\"header\">\r\n          <vs-chip  color=\"primary\">Cantidad: <b> {{ arregloStorage.length }}</b></vs-chip>\r\n          <p @click=\"exportToExcel()\" class=\"ml-2 cursor-pointer\"><vs-chip color=\"success\" transparent><ion-icon name=\"download-outline\" style=\"font-size: 20px;position: relative;top:-3px;\"></ion-icon> Exportar</vs-chip></p>\r\n      </template>\r\n      <template slot=\"thead\">\r\n        <vs-th>Libro</vs-th>\r\n        <vs-th>Código</vs-th>\r\n        <vs-th>Acciones</vs-th>\r\n      </template>\r\n      <template slot-scope=\"{data}\">\r\n        <vs-tr :data=\"tr\" :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n          <vs-td>\r\n            {{data[indextr].codigo}}<br>\r\n          </vs-td>\r\n          <vs-td>\r\n            {{data[indextr].libro}}<br>\r\n          </vs-td>\r\n          <vs-td>\r\n            <vx-tooltip style=\"display:inline-block\" color=\"warning\" text=\"Eliminar del storage\">\r\n              <vs-button color=\"warning\" type=\"line\" radius icon-pack=\"feather\" icon=\"icon-x\" @click=\"$emit('changeDeleteStorage',tr)\" size=\"large\"></vs-button>\r\n            </vx-tooltip>\r\n          </vs-td>\r\n        </vs-tr>\r\n      </template>\r\n    </vs-table>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default{\r\n  data(){\r\n    return{\r\n      fileName: null,\r\n      formats: ['xls', 'xlsx', 'csv', 'txt'],\r\n      cellAutoWidth: true,\r\n      selectedFormat: 'xlsx',\r\n    }\r\n  },\r\n  props:{\r\n    arregloStorage:{\r\n      type:Array,\r\n      default:[]\r\n    }\r\n  },\r\n  methods:{\r\n    //para limipiar los campos del excel\r\n    clearFields() {\r\n      this.fileName = ''\r\n      this.cellAutoWidth = true\r\n      this.selectedFormat = 'xls'\r\n    },\r\n    //metodo par descargar el excel\r\n    exportToExcel() {\r\n      let headerTitle = ['Código','Libro'];\r\n      let headerVal = ['codigo','libro'];\r\n      let codigoSelectedMayus = this.arregloStorage\r\n      for (var i = 0; i < codigoSelectedMayus.length; i++) {\r\n        for (var key in codigoSelectedMayus[i]) {\r\n          if (typeof codigoSelectedMayus[i][key] == \"string\") {\r\n              codigoSelectedMayus[i][key] = codigoSelectedMayus[i][key].toUpperCase();\r\n          }\r\n        }\r\n      }\r\n      import('@/vendor/Export2Excel').then(excel => {\r\n        const list = codigoSelectedMayus\r\n        const data = this.formatJson(headerVal, list)\r\n        excel.export_json_to_excel({\r\n          header: headerTitle,\r\n          data,\r\n          filename: 'ArchivoCodigos',\r\n          autoWidth: this.cellAutoWidth,\r\n          bookType: this.selectedFormat\r\n        })\r\n        this.clearFields()\r\n      })\r\n    },\r\n    formatJson(filterVal, jsonData) {\r\n      return jsonData.map(v => filterVal.map(j => {\r\n          return v[j]\r\n      }))\r\n    },\r\n  }\r\n}\r\n</script>\r\n"]}]}