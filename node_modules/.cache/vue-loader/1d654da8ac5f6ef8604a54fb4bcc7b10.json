{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\periodos\\periodosInstitucion.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\periodos\\periodosInstitucion.vue","mtime":1712682816421},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nimport Vue from 'vue'\r\nimport axios from 'axios'\r\nimport vSelect from 'vue-select'\r\nimport moment from 'moment'\r\nexport default {\r\n    components: {\r\n        'v-select': vSelect,\r\n    },\r\n    data() {\r\n        return {\r\n            nombreInstitucion: '',\r\n            idInstitucion: '',\r\n            listaPeriodos: '',\r\n            tmplistaPeriodos: '',\r\n            listaPeriodosInstitucion: '',\r\n            tmp: '',\r\n            f_periodos: 1,\r\n            modalPeriodos: false,\r\n            id_eliminar: '',\r\n            region : [],\r\n            usuario:[],\r\n            estadoLimiteAcceso:\"0\",\r\n            fecha:null,\r\n        }\r\n    },\r\n  \r\n    mounted() {\r\n        let me = this;\r\n        me.tmp = JSON.parse(localStorage.getItem('institucion'));\r\n        me.nombreInstitucion = me.tmp.nombreInstitucion;\r\n        me.idInstitucion = me.tmp.idInstitucion;\r\n        me.region = me.tmp.nombreregion;\r\n        me.getPeriodosInstitucion();\r\n        me.usuario = JSON.parse(localStorage.getItem('usuario'))\r\n       \r\n        me.getPeriodos();\r\n      \r\n\r\n    },\r\n    methods: {\r\n        getPeriodosInstitucion() {\r\n            let me = this;\r\n            me.$vs.loading();\r\n            this.$http.get(this.$server_url+'periodosXInstitucion/' + me.idInstitucion)\r\n                .then(res => {\r\n                    me.listaPeriodosInstitucion = res.data;\r\n                    // console.log(res.data);\r\n                    me.$vs.loading.close();\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                    me.$vs.loading.close();\r\n                })\r\n        },\r\n        getPeriodos() {\r\n            let me = this;\r\n            this.$http.get(this.$server_url+'periodoRegion?region='+me.region)\r\n                .then(res => {\r\n                    me.tmplistaPeriodos = res.data;\r\n                    //capturo el periodo activo para limitar el acceso a agregar periodo\r\n                    let  filtrarPeriodoAcceso = me.tmplistaPeriodos.filter(p => p.estado == '1')\r\n                    //capturo la fecha actual\r\n                    var fecha = moment().add(-1, 'days').format('YYYY/MM/DD');\r\n                    \r\n                  \r\n                    // filtro la fecha limite del periodo\r\n                    let fechafinal =  filtrarPeriodoAcceso.map(p => p.fhasta_limite)\r\n                    //comparo si la fecha final ya se paso a la actual\r\n                    if(Date.parse(fechafinal) < Date.parse(fecha)) {\r\n\r\n                        me.estadoLimiteAcceso = \"0\";\r\n\r\n                    }else{\r\n                        me.estadoLimiteAcceso = \"1\";\r\n                    }\r\n                    \r\n                    me.filtroPeriodos();\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                })\r\n        },\r\n        abrirModal() {\r\n            let me = this;\r\n            me.modalPeriodos = true;\r\n        },\r\n        filtroPeriodos() {\r\n            let me = this;\r\n            // console.log(me.tmplistaPeriodos)\r\n            me.listaPeriodos = [];\r\n            for (let index = 0; index < me.tmplistaPeriodos.length; index++) {\r\n                if (me.tmplistaPeriodos[index].estado == me.f_periodos) {\r\n                    me.listaPeriodos.push(me.tmplistaPeriodos[index]);\r\n                }\r\n            }\r\n        },\r\n        verificarPeriodo(item) {\r\n            let me = this;\r\n            // console.log(item.idperiodoescolar, me.idInstitucion)\r\n            me.$vs.loading();\r\n            let data = new FormData();\r\n            data.append('idperiodoescolar', item.idperiodoescolar);\r\n            data.append('idinstitucion', me.idInstitucion)\r\n            this.$http.post(this.$server_url+'verifica_periodo', data)\r\n                .then(res => {\r\n                    // console.log(res.data)\r\n                    if (res.data == 1) {\r\n                        me.$vs.notify({\r\n                            time: 8000,\r\n                            text: 'Este periodo ya se encuentra asignado a la institucion ' + me.nombreInstitucion,\r\n                            color: 'danger',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-alert-triangle'\r\n                        })\r\n                    } else {\r\n                        me.$vs.notify({\r\n                            text: 'Periodo agregado correctamente a la institucion ' + me.nombreInstitucion,\r\n                            color: 'success',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-check'\r\n                        })\r\n                        me.modalPeriodos = false;\r\n                        me.getPeriodosInstitucion();\r\n                    }\r\n                    me.$vs.loading.close();\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                    me.$vs.loading.close();\r\n                })\r\n        },\r\n        confirmaEliminar(item) {\r\n            let me = this;\r\n            me.id_eliminar = item.id;\r\n            // console.log(me.id_eliminar)\r\n            // return\r\n            me.$vs.dialog({\r\n                type: 'confirm',\r\n                color: 'danger',\r\n                title: 'Confirmar',\r\n                text: 'Seguro desea eliminar este item?',\r\n                acceptText: 'Aceptar',\r\n                cancelText: 'Cancelar',\r\n                accept: me.eliminarItem\r\n            })\r\n        },\r\n        eliminarItem() {\r\n            let me = this;\r\n            this.$http.get(this.$server_url+'eliminarPeriodosInstitucion/'+me.id_eliminar)\r\n                .then(res => {\r\n                    me.$vs.notify({\r\n                        text: 'Periodo de esta instituciÃ³n eliminado correctamente',\r\n                        color: 'success',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check'\r\n                    })\r\n                    me.getPeriodosInstitucion();\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                })\r\n        },\r\n    }\r\n}\r\n",{"version":3,"sources":["periodosInstitucion.vue"],"names":[],"mappings":";AA6FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"periodosInstitucion.vue","sourceRoot":"src/views/periodos","sourcesContent":["<template>\r\n<div class=\"vx-col md:w-full w-full mb-base\">\r\n    <vs-popup title=\"Periodos\" fullscreen :active.sync=\"modalPeriodos\">\r\n        <vs-table max-items=\"10\" search pagination :data=\"listaPeriodos\">\r\n            <template slot=\"header\">\r\n                <vs-radio class=\"mb-3 m-2\" color=\"success\" v-model=\"f_periodos\" @change=\"filtroPeriodos\" vs-value=\"1\">Activos</vs-radio>\r\n                <vs-radio class=\"mb-3 m-2\" color=\"danger\" v-model=\"f_periodos\" @change=\"filtroPeriodos\" vs-value=\"0\">Inactivos</vs-radio>\r\n            </template>\r\n            <template slot=\"thead\">\r\n                <vs-th>Periodo escolar</vs-th>\r\n                <vs-th>Fechas</vs-th>\r\n                <vs-th>Region</vs-th>\r\n                <vs-th>Estado</vs-th>\r\n                <vs-th>Acciones</vs-th>\r\n            </template>\r\n            <template slot-scope=\"{data}\">\r\n                <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                    <vs-td :data=\"tr.periodoescolar\">\r\n                        {{tr.periodoescolar}} <br>\r\n                        <small>{{tr.descripcion}}</small>\r\n                    </vs-td>\r\n                    <vs-td>\r\n                        <small>Inicio: {{tr.fecha_inicial}} </small><br>\r\n                        <small>Fin: {{tr.fecha_final}}</small>\r\n                    </vs-td>\r\n                    <vs-td>\r\n                        <vs-chip v-if=\"tr.region_idregion == 1\"> SIERRA</vs-chip>\r\n                        <vs-chip v-if=\"tr.region_idregion == 2\"> COSTA</vs-chip>\r\n                    </vs-td>\r\n                    <vs-td>\r\n                        <vs-chip v-if=\"tr.estado == 1\" color=\"success\"> Activo</vs-chip>\r\n                        <vs-chip v-if=\"tr.estado == 0\" color=\"danger\"> Inactivo</vs-chip>\r\n                    </vs-td>\r\n                    <vs-td>\r\n                        <vs-button type=\"filled\" size=\"small\" color=\"success\" class=\"m-2\" icon-pack=\"feather\" icon=\"icon-plus\" @click=\"verificarPeriodo(tr);\">Agregar</vs-button>\r\n\r\n                    </vs-td>\r\n                </vs-tr>\r\n            </template>\r\n        </vs-table>\r\n    </vs-popup>\r\n\r\n\r\n    <vx-card>\r\n        <h4>\r\n            {{nombreInstitucion}}\r\n        </h4>\r\n      \r\n        <vs-button  v-if=\"estadoLimiteAcceso =='1' || usuario.id_group== '1'\"  type=\"border\" color=\"success\" class=\"m-2\" @click=\"abrirModal();\">Agregar periodo</vs-button>\r\n\r\n        <vs-table max-items=\"20\" search pagination :data=\"listaPeriodosInstitucion\" class=\"mt-4\">\r\n            <template slot=\"header\">\r\n                <div>\r\n                    Cantidad: {{listaPeriodosInstitucion.length}}\r\n                </div>\r\n            </template>\r\n            <template slot=\"thead\">\r\n                <vs-th width=\"40%\">Periodo escolar</vs-th>\r\n                <vs-th>RegiÃ³n</vs-th>\r\n                <vs-th>Estado</vs-th>\r\n                <vs-th>Actualizado</vs-th>\r\n                <vs-th>Acciones</vs-th>\r\n            </template>\r\n            <template slot-scope=\"{data}\">\r\n                <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                    <vs-td :data=\"tr.periodoescolar\">\r\n                        {{tr.periodoescolar}} <br>\r\n                        <small> {{tr.descripcion}} </small>\r\n                    </vs-td>\r\n                    <vs-td>\r\n                        <vs-chip> {{tr.nombreregion}}</vs-chip>\r\n                    </vs-td>\r\n                    <vs-td>\r\n                        <vs-chip v-if=\"tr.estado == 1\" color=\"success\"> Activo</vs-chip>\r\n                        <vs-chip v-if=\"tr.estado == 0\" color=\"danger\"> Inactivo</vs-chip>\r\n                    </vs-td>\r\n                     <vs-td>\r\n                        {{tr.updated_at}}\r\n                    </vs-td>\r\n                    <vs-td>\r\n                        <vx-tooltip text=\"eliminar periodo de esta instituciÃ³n\" position=\"top\" color=\"danger\" v-if=\"usuario.id_group== '1' \">\r\n                            <vs-button type=\"border\" color=\"danger\" class=\"m-2\" icon-pack=\"feather\" icon=\"icon-trash\" @click=\"confirmaEliminar(tr);\"></vs-button>\r\n                        </vx-tooltip>\r\n                    </vs-td>\r\n                </vs-tr>\r\n            </template>\r\n        </vs-table>\r\n    </vx-card>\r\n\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport Vue from 'vue'\r\nimport axios from 'axios'\r\nimport vSelect from 'vue-select'\r\nimport moment from 'moment'\r\nexport default {\r\n    components: {\r\n        'v-select': vSelect,\r\n    },\r\n    data() {\r\n        return {\r\n            nombreInstitucion: '',\r\n            idInstitucion: '',\r\n            listaPeriodos: '',\r\n            tmplistaPeriodos: '',\r\n            listaPeriodosInstitucion: '',\r\n            tmp: '',\r\n            f_periodos: 1,\r\n            modalPeriodos: false,\r\n            id_eliminar: '',\r\n            region : [],\r\n            usuario:[],\r\n            estadoLimiteAcceso:\"0\",\r\n            fecha:null,\r\n        }\r\n    },\r\n  \r\n    mounted() {\r\n        let me = this;\r\n        me.tmp = JSON.parse(localStorage.getItem('institucion'));\r\n        me.nombreInstitucion = me.tmp.nombreInstitucion;\r\n        me.idInstitucion = me.tmp.idInstitucion;\r\n        me.region = me.tmp.nombreregion;\r\n        me.getPeriodosInstitucion();\r\n        me.usuario = JSON.parse(localStorage.getItem('usuario'))\r\n       \r\n        me.getPeriodos();\r\n      \r\n\r\n    },\r\n    methods: {\r\n        getPeriodosInstitucion() {\r\n            let me = this;\r\n            me.$vs.loading();\r\n            this.$http.get(this.$server_url+'periodosXInstitucion/' + me.idInstitucion)\r\n                .then(res => {\r\n                    me.listaPeriodosInstitucion = res.data;\r\n                    // console.log(res.data);\r\n                    me.$vs.loading.close();\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                    me.$vs.loading.close();\r\n                })\r\n        },\r\n        getPeriodos() {\r\n            let me = this;\r\n            this.$http.get(this.$server_url+'periodoRegion?region='+me.region)\r\n                .then(res => {\r\n                    me.tmplistaPeriodos = res.data;\r\n                    //capturo el periodo activo para limitar el acceso a agregar periodo\r\n                    let  filtrarPeriodoAcceso = me.tmplistaPeriodos.filter(p => p.estado == '1')\r\n                    //capturo la fecha actual\r\n                    var fecha = moment().add(-1, 'days').format('YYYY/MM/DD');\r\n                    \r\n                  \r\n                    // filtro la fecha limite del periodo\r\n                    let fechafinal =  filtrarPeriodoAcceso.map(p => p.fhasta_limite)\r\n                    //comparo si la fecha final ya se paso a la actual\r\n                    if(Date.parse(fechafinal) < Date.parse(fecha)) {\r\n\r\n                        me.estadoLimiteAcceso = \"0\";\r\n\r\n                    }else{\r\n                        me.estadoLimiteAcceso = \"1\";\r\n                    }\r\n                    \r\n                    me.filtroPeriodos();\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                })\r\n        },\r\n        abrirModal() {\r\n            let me = this;\r\n            me.modalPeriodos = true;\r\n        },\r\n        filtroPeriodos() {\r\n            let me = this;\r\n            // console.log(me.tmplistaPeriodos)\r\n            me.listaPeriodos = [];\r\n            for (let index = 0; index < me.tmplistaPeriodos.length; index++) {\r\n                if (me.tmplistaPeriodos[index].estado == me.f_periodos) {\r\n                    me.listaPeriodos.push(me.tmplistaPeriodos[index]);\r\n                }\r\n            }\r\n        },\r\n        verificarPeriodo(item) {\r\n            let me = this;\r\n            // console.log(item.idperiodoescolar, me.idInstitucion)\r\n            me.$vs.loading();\r\n            let data = new FormData();\r\n            data.append('idperiodoescolar', item.idperiodoescolar);\r\n            data.append('idinstitucion', me.idInstitucion)\r\n            this.$http.post(this.$server_url+'verifica_periodo', data)\r\n                .then(res => {\r\n                    // console.log(res.data)\r\n                    if (res.data == 1) {\r\n                        me.$vs.notify({\r\n                            time: 8000,\r\n                            text: 'Este periodo ya se encuentra asignado a la institucion ' + me.nombreInstitucion,\r\n                            color: 'danger',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-alert-triangle'\r\n                        })\r\n                    } else {\r\n                        me.$vs.notify({\r\n                            text: 'Periodo agregado correctamente a la institucion ' + me.nombreInstitucion,\r\n                            color: 'success',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-check'\r\n                        })\r\n                        me.modalPeriodos = false;\r\n                        me.getPeriodosInstitucion();\r\n                    }\r\n                    me.$vs.loading.close();\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                    me.$vs.loading.close();\r\n                })\r\n        },\r\n        confirmaEliminar(item) {\r\n            let me = this;\r\n            me.id_eliminar = item.id;\r\n            // console.log(me.id_eliminar)\r\n            // return\r\n            me.$vs.dialog({\r\n                type: 'confirm',\r\n                color: 'danger',\r\n                title: 'Confirmar',\r\n                text: 'Seguro desea eliminar este item?',\r\n                acceptText: 'Aceptar',\r\n                cancelText: 'Cancelar',\r\n                accept: me.eliminarItem\r\n            })\r\n        },\r\n        eliminarItem() {\r\n            let me = this;\r\n            this.$http.get(this.$server_url+'eliminarPeriodosInstitucion/'+me.id_eliminar)\r\n                .then(res => {\r\n                    me.$vs.notify({\r\n                        text: 'Periodo de esta instituciÃ³n eliminado correctamente',\r\n                        color: 'success',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check'\r\n                    })\r\n                    me.getPeriodosInstitucion();\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                })\r\n        },\r\n    }\r\n}\r\n</script>\r\n"]}]}