{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\diagnostico\\admin\\components\\TableMateria.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\diagnostico\\admin\\components\\TableMateria.vue","mtime":1712682815726},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nimport FormatoPruebaVue from './FormatoPrueba.vue';\r\nexport default{\r\n    components:{\r\n        FormatoPruebaVue\r\n    },\r\n    props:{\r\n        arregloCodigos:{\r\n            type:Array,\r\n            default:[],\r\n        },\r\n    },\r\n    data(){\r\n        return{\r\n            arregloRespuestas:[],\r\n            popupRespuestas:false,\r\n            estudiante:'',\r\n            nombrelibro:'',\r\n            calificacion:'',\r\n            //variables para el export a excel\r\n            activePrompt:false,\r\n            codigoSelected: [],\r\n            arregloCodigos:[],\r\n            reportesActivo: 0,\r\n            fileName: null,\r\n            formats: ['xls', 'xlsx', 'csv', 'txt'],\r\n            cellAutoWidth: true,\r\n            selectedFormat: 'xls',\r\n            //fin variables de exportar excel\r\n        }\r\n    },\r\n    mounted(){\r\n        let me = this;\r\n    },\r\n    methods:{\r\n        verPrueba(tr){\r\n            let me = this;\r\n            me.nombrelibro              = tr.nombrelibro\r\n            me.estudiante               = tr.estudiante\r\n            me.calificacion             = tr\r\n            if(tr.calificacion_diagnostica == 0){\r\n                me.$vs.notify({\r\n                text:'Aún no dado esta prueba el estudiante',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-file'})\r\n                return \r\n            }\r\n            let formData = new FormData();\r\n            formData.append('diagnostico_libros_id', tr.diagnostico_libros_id);\r\n            formData.append('estudiante_id',         tr.idusuario);\r\n            this.$http.post(this.$server_url+'getDatosDiagnostico', formData)\r\n            .then(function (res) {\r\n                me.arregloRespuestas = res.data\r\n                me.popupRespuestas   = true\r\n            })\r\n            .catch(function (error) {})\r\n        },\r\n        //METODOS PARA EXCEL\r\n        //para limipiar los campos del excel\r\n        clearFields() {\r\n            this.fileName = ''\r\n            this.cellAutoWidth = true\r\n            this.selectedFormat = 'xls'\r\n        },\r\n        //metodo par descargar el excel\r\n        exportToExcel() {\r\n            let headerTitle = ['Estudiante','Cédula','Institución',  'Email','Estado','Período asignado','libro','Cóodigo','Calificacion'];\r\n            let headerVal = ['estudiante', 'cedula','nombreInstitucion','email','estado','periodo','libro','codigo','calificacion_final'];  \r\n            let codigoSelectedMayus = this.arregloCodigos\r\n            for (var i = 0; i < codigoSelectedMayus.length; i++) {\r\n                for (var key in codigoSelectedMayus[i]) {\r\n                    if (typeof codigoSelectedMayus[i][key] == \"string\") {\r\n                        codigoSelectedMayus[i][key] = codigoSelectedMayus[i][key].toUpperCase();\r\n                    }\r\n                }\r\n            }\r\n            import('@/vendor/Export2Excel').then(excel => {\r\n                const list = codigoSelectedMayus\r\n                const data = this.formatJson(headerVal, list)\r\n                excel.export_json_to_excel({\r\n                    header: headerTitle,\r\n                    data,\r\n                    filename: 'Reporte calificaciones',\r\n                    autoWidth: this.cellAutoWidth,\r\n                    bookType: this.selectedFormat\r\n                })\r\n                this.clearFields()\r\n            //     this.guardarActivo = '';\r\n            //     this.generarActivo = ' ';\r\n            //     this.textAlertCant = '';\r\n            //     this.cantidad = '';\r\n            //     this.codigoSelected = [];\r\n            })\r\n        },\r\n        formatJson(filterVal, jsonData) {\r\n            return jsonData.map(v => filterVal.map(j => {\r\n                return v[j]\r\n            }))\r\n        },\r\n    }\r\n}\r\n",{"version":3,"sources":["TableMateria.vue"],"names":[],"mappings":";AA8GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TableMateria.vue","sourceRoot":"src/views/diagnostico/admin/components","sourcesContent":["<template>\r\n    <div>\r\n        <vs-table max-items=\"10\" search pagination :data=\"arregloCodigos\">\r\n            <template slot=\"header\">\r\n                <vs-chip  color=\"primary\">Cantidad: <b> {{ arregloCodigos.length }}</b></vs-chip>\r\n                <span @click=\"exportToExcel()\" class=\"cursor-pointer\">\r\n                    <vs-chip transparent class=\"py-3 ml-2\" style=\"font-weight: bold;\" color=\"warning\"><i class=\"fa-solid fa-download\"></i><span class=\"ml-2\">Exportar</span> </vs-chip>\r\n                </span>\r\n            </template>\r\n            <template slot=\"thead\">\r\n                <vs-th>Datos Personales</vs-th>\r\n                <vs-th>Institución</vs-th>      \r\n                <vs-th>Código</vs-th>\r\n                <vs-th>Prueba diagnóstico</vs-th>\r\n                <vs-th>Calificación diagnóstica</vs-th>\r\n                <vs-th>Acciones</vs-th>\r\n            </template>\r\n            <template slot-scope=\"{data}\">\r\n                <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                    <vs-td>\r\n                        <br/>\r\n                        Nombres:\r\n                        <br>        \r\n                        <span style=\"font-weight:600;  \" >\r\n                        {{ tr.estudiante }}<br>\r\n                        </span>\r\n                        Cédula:\r\n                        <br>  \r\n                        <span style=\" font-weight:600; \" >\r\n                        {{ tr.cedula }}<br>\r\n                        </span>\r\n                        Email:\r\n                        <br>  \r\n                        <span style=\" font-weight:600; \" >\r\n                        {{ tr.email }}<br>\r\n                        </span>\r\n                    </vs-td>\r\n                    <vs-td>\r\n                        Institución:\r\n                        <br>  \r\n                        <span style=\" font-weight:600; \" >\r\n                        {{ tr.nombreInstitucion }}<br>\r\n                        </span>\r\n                        Período:\r\n                        <br>  \r\n                        <span style=\" font-weight:600; \" >\r\n                            <div v-if=\"tr.periodo == '' || tr.periodo == null\">\r\n                                No asignado\r\n                            </div>\r\n                            <div v-else>\r\n                                {{ tr.periodo }}\r\n                            </div>\r\n                        </span>\r\n                    </vs-td>\r\n                    <vs-td>\r\n                        Libro:\r\n                        <br>  \r\n                        <span style=\" font-weight:600; \" >\r\n                        {{ tr.nombrelibro }}<br>\r\n                        </span>\r\n                        Código:\r\n                        <br>  \r\n                        <span style=\" font-weight:600; \" >\r\n                            <div v-if=\"tr.statusCodigo == '1'\">\r\n                               <vs-chip color=\"primary\">{{ tr.codigo }}</vs-chip> <br>\r\n                            </div>\r\n                            <div v-else>\r\n                                <vs-chip color=\"danger\">{{ tr.codigo }}</vs-chip> <br>\r\n                            </div>\r\n                        </span>\r\n                    </vs-td>\r\n                    <vs-td>\r\n                        <div v-if=\"tr.statusCodigo == '1'\">\r\n                            <div v-if=\"tr.prueba_diagnostica == 1\">\r\n                                <p>\r\n                                    <vs-chip transparent class=\"py-2 ml-2\" style=\"font-weight: bold;\" color=\"success\">Realizada</vs-chip>\r\n                                </p>\r\n                            </div>\r\n                            <div v-if=\"tr.prueba_diagnostica == 0\">\r\n                                <p>\r\n                                    <vs-chip transparent class=\"py-2 ml-2\" style=\"font-weight: bold;\" color=\"warning\">Pendiente</vs-chip>\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </vs-td>\r\n                    <vs-td>\r\n                        <p v-if=\"tr.statusCodigo == '1'\">\r\n                            <vs-chip transparent class=\"py-2 ml-2\" style=\"font-weight: bold;\" color=\"warning\">{{tr.calificacion_final}}</vs-chip>\r\n                        </p>\r\n                    </vs-td>\r\n                    <vs-td>\r\n                        <div style=\"display: flex;\" v-if=\"tr.statusCodigo == '1'\">\r\n                            <vx-tooltip style=\"display: inline-block;\" text=\"Ver prueba diagnóstica\" position=\"top\" color=\"primary\">\r\n                                <p class=\"cursor-pointer\" @click=\"verPrueba(tr)\">\r\n                                    <vs-chip transparent class=\"py-2 ml-2\" style=\"font-weight: bold;\" color=\"primary\"><i class=\"fa-solid fa-file\"></i> <b class=\"ml-1\">Ver prueba</b></vs-chip>\r\n                                </p>\r\n                            </vx-tooltip> &nbsp;\r\n                        </div>\r\n                    </vs-td> \r\n                </vs-tr>\r\n            </template>\r\n        </vs-table> \r\n        <!--MODALES-->\r\n        <!--Modal para ver las respuestas del estudiante-->\r\n        <vs-popup class=\"holamundo\" fullscreen title=\"Resultado prueba diagnóstica\" :active.sync=\"popupRespuestas\">\r\n            <FormatoPruebaVue :estudiante=\"estudiante\" :calificacion=\"calificacion\" :nombrelibro=\"nombrelibro\" :arregloRespuestas=\"arregloRespuestas\"/>\r\n        </vs-popup>\r\n    </div>\r\n</template>\r\n<script>\r\nimport FormatoPruebaVue from './FormatoPrueba.vue';\r\nexport default{\r\n    components:{\r\n        FormatoPruebaVue\r\n    },\r\n    props:{\r\n        arregloCodigos:{\r\n            type:Array,\r\n            default:[],\r\n        },\r\n    },\r\n    data(){\r\n        return{\r\n            arregloRespuestas:[],\r\n            popupRespuestas:false,\r\n            estudiante:'',\r\n            nombrelibro:'',\r\n            calificacion:'',\r\n            //variables para el export a excel\r\n            activePrompt:false,\r\n            codigoSelected: [],\r\n            arregloCodigos:[],\r\n            reportesActivo: 0,\r\n            fileName: null,\r\n            formats: ['xls', 'xlsx', 'csv', 'txt'],\r\n            cellAutoWidth: true,\r\n            selectedFormat: 'xls',\r\n            //fin variables de exportar excel\r\n        }\r\n    },\r\n    mounted(){\r\n        let me = this;\r\n    },\r\n    methods:{\r\n        verPrueba(tr){\r\n            let me = this;\r\n            me.nombrelibro              = tr.nombrelibro\r\n            me.estudiante               = tr.estudiante\r\n            me.calificacion             = tr\r\n            if(tr.calificacion_diagnostica == 0){\r\n                me.$vs.notify({\r\n                text:'Aún no dado esta prueba el estudiante',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-file'})\r\n                return \r\n            }\r\n            let formData = new FormData();\r\n            formData.append('diagnostico_libros_id', tr.diagnostico_libros_id);\r\n            formData.append('estudiante_id',         tr.idusuario);\r\n            this.$http.post(this.$server_url+'getDatosDiagnostico', formData)\r\n            .then(function (res) {\r\n                me.arregloRespuestas = res.data\r\n                me.popupRespuestas   = true\r\n            })\r\n            .catch(function (error) {})\r\n        },\r\n        //METODOS PARA EXCEL\r\n        //para limipiar los campos del excel\r\n        clearFields() {\r\n            this.fileName = ''\r\n            this.cellAutoWidth = true\r\n            this.selectedFormat = 'xls'\r\n        },\r\n        //metodo par descargar el excel\r\n        exportToExcel() {\r\n            let headerTitle = ['Estudiante','Cédula','Institución',  'Email','Estado','Período asignado','libro','Cóodigo','Calificacion'];\r\n            let headerVal = ['estudiante', 'cedula','nombreInstitucion','email','estado','periodo','libro','codigo','calificacion_final'];  \r\n            let codigoSelectedMayus = this.arregloCodigos\r\n            for (var i = 0; i < codigoSelectedMayus.length; i++) {\r\n                for (var key in codigoSelectedMayus[i]) {\r\n                    if (typeof codigoSelectedMayus[i][key] == \"string\") {\r\n                        codigoSelectedMayus[i][key] = codigoSelectedMayus[i][key].toUpperCase();\r\n                    }\r\n                }\r\n            }\r\n            import('@/vendor/Export2Excel').then(excel => {\r\n                const list = codigoSelectedMayus\r\n                const data = this.formatJson(headerVal, list)\r\n                excel.export_json_to_excel({\r\n                    header: headerTitle,\r\n                    data,\r\n                    filename: 'Reporte calificaciones',\r\n                    autoWidth: this.cellAutoWidth,\r\n                    bookType: this.selectedFormat\r\n                })\r\n                this.clearFields()\r\n            //     this.guardarActivo = '';\r\n            //     this.generarActivo = ' ';\r\n            //     this.textAlertCant = '';\r\n            //     this.cantidad = '';\r\n            //     this.codigoSelected = [];\r\n            })\r\n        },\r\n        formatJson(filterVal, jsonData) {\r\n            return jsonData.map(v => filterVal.map(j => {\r\n                return v[j]\r\n            }))\r\n        },\r\n    }\r\n}\r\n</script>"]}]}