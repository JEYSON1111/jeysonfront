{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\codigos\\paquetes\\version2\\paquetes\\ImportPaquetes2.vue?vue&type=style&index=0&id=0ca48ca5&scoped=true&lang=css","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\codigos\\paquetes\\version2\\paquetes\\ImportPaquetes2.vue","mtime":1712682815685},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\n.tabla{\r\n  width: 100%;\r\n  margin-top: 10px;\r\n}\r\n .tabla {\r\n\r\n  border: 1px solid #D1E5F1;\r\n  padding: 2px;\r\n  border-radius: 5px;\r\n}\r\n.th1{\r\n  background-color: #E3AC6B;\r\n  border-radius: 5px;\r\n  color:white;\r\n}\r\n.td1, .th1{\r\n padding: 10px;\r\n text-align: center;\r\n border:none;\r\n}\r\n.th2{\r\n  color:#93938F;\r\n  font-size: 10px;\r\n  background-color: #E7E7BF;\r\n  text-align: center;\r\n  padding: 8px;\r\n  border-radius: 5px;\r\n}\r\n.td2{\r\n  font-size: 10px;\r\n  padding: 5px;\r\n}\r\n.tdingreso{\r\n  border: 1px solid #f2f2f2;border-radius:5px;padding:10px;font-size:8px;\r\n}\r\n/*CSS IMPORTADOR TIPO BODEGA*/\r\n\r\n.features {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n.features li {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n}\r\n.features li + * {\r\n  margin-top: 0.75rem;\r\n}\r\n.features .icon {\r\n  background-color: #1FCAC5;\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #fff;\r\n  border-radius: 50%;\r\n  width: 20px;\r\n  height: 20px;\r\n}\r\n.features .icon svg {\r\n  width: 14px;\r\n  height: 14px;\r\n}\r\n.features + * {\r\n  margin-top: 1.25rem;\r\n}\r\n",{"version":3,"sources":["ImportPaquetes2.vue"],"names":[],"mappings":";AA8sBA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ImportPaquetes2.vue","sourceRoot":"src/views/codigos/paquetes/version2/paquetes","sourcesContent":["<template>\r\n    <div>\r\n      <vs-popup title=\"Errores en excel de los codigos\" :active.sync=\"modalErrores\" style=\"padding: 0% !important;\">\r\n         <div class=\"w-full\" style=\"background: rgb(121,9,9); padding: 20px; border-radius: 5px; background: linear-gradient(90deg, rgba(121,9,9,1) 28%, rgba(255,0,48,1) 100%); color: white;\">\r\n           <div class=\"vx-row\">\r\n              <div class=\"vx-col sm:w-1/2 w-full\">\r\n                  <b>Código</b>\r\n              </div>\r\n          </div>\r\n          <vs-divider></vs-divider>\r\n          <div :key=\"index\" v-for=\"(item, index) in errores\">\r\n            <div class=\"vx-row\">\r\n                <div class=\"vx-col sm:w-1/2 w-full\">\r\n                    <span v-if=\"item.codigo\"> {{item.codigo}} </span>\r\n                </div>\r\n            </div>\r\n          </div>\r\n         </div>\r\n      </vs-popup>\r\n      <vs-popup small title=\"Confirmación\" :active.sync=\"modalConfirm\">\r\n        <div class=\"w-full mb-base\" align=\"center\">\r\n          <h4>Está seguro de aplicar estos códigos?</h4>\r\n          <h4 class=\"mt-3 text-warning\">Asignar: {{ totalCodigosReal }} códigos en {{ arrayPaquetes.length}} paquetes</h4>\r\n          <small v-if=\"ifOnlyCode == '0'\">Activación - Diagnóstica</small>\r\n          <small v-if=\"ifOnlyCode == '1'\">Diagnóstica - Activación</small>\r\n          <small v-if=\"ifOnlyCode == '2'\">Importación un solo código por libro</small>\r\n        </div>\r\n        <div class=\"w-full\" align=\"center\">\r\n          <vs-button class=\"mb-2\" color=\"danger\" type=\"gradient\" @click=\"procesarPagos()\"> Confirmar </vs-button>\r\n        </div>\r\n      </vs-popup>\r\n      <div class=\"mb-6 mt-5\" align=\"center\">\r\n        <div class=\"vx-col w-full\">\r\n          <p style=\"color:#369DDA;\">\r\n              <i class=\"fa fa-file\" aria-hidden=\"true\"></i> Importación de <b>paquetes</b> de códigos <span style=\"font-weight: bold;\">(no ingrese más de 100 paquetes en una sola carga.)</span>\r\n          </p>\r\n        </div>\r\n        <br/>\r\n        <import-excel :onSuccess=\"loadDataInTable\"  class=\"mb-4\" />\r\n        <!-- {{tableData}} -->\r\n        <vs-alert v-if=\"tableData.length > 0\" class=\"mb-3\" color=\"success\" icon-pack=\"feather\" icon=\"icon-alert-triangle\">\r\n            <span>Excel cargado exitosamente. ¿Está seguro de procesar estos códigos?</span><br>\r\n        </vs-alert>\r\n        <p v-if=\"tableData.length > 0\" class=\"text-danger\">\r\n          {{ ifOnlyCode == 0 ? 'Importación de codigo de activación y diagnóstica por libro'\r\n            :( ifOnlyCode == 1 ? 'Importación de codigo de diagnóstica y activación por libro ':  'Importacion de un solo codigo por libro' )\r\n          }}\r\n        </p>\r\n        <vs-row v-if=\"tableData.length > 0 && tableData.length <= 2000 && arregloProblemasPaquete.length == 0\" class=\"mt-3\">\r\n            <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\">\r\n              <vs-button class=\"mb-2\" color=\"primary\"  type=\"relief\" @click=\"validateCodigosPaquetes();openConfirm(0);\"> Importar {{ totalCodigosReal }} códigos en {{ arrayPaquetes.length }} paquetes </vs-button>\r\n            </vs-col>\r\n        </vs-row>\r\n        <div v-if=\"arregloProblemasPaquete.length > 0\" class=\"ml-5\" style=\"width:50%;\">\r\n          <vs-alert title=\"Archivo con inconvenientes\" color=\"danger\" active=\"true\">\r\n            <p class=\"text-center\">Existe <b>códigos</b> con problemas <b class=\"cursor-pointer\" style=\"background:black;color:white;padding:5px;border-radius:5px;\" @click=\"popupProblemasDiagnostico = true;\"><ion-icon name=\"code-outline\"></ion-icon> Mostrar códigos</b>\r\n            </p>\r\n          </vs-alert>\r\n        </div>\r\n        <!--RESULTADOS-->\r\n        <!--PAQUETES QUE NO EXISTEN-->\r\n        <vs-row v-if=\"codigosPerdidos == true && arregloErroresPaquetes.length > 0\">\r\n          <vs-card>\r\n            <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"6\">\r\n                <vs-list>\r\n                  <p>Cantidad <span>{{ arregloErroresPaquetes.length }}</span></p>\r\n                    <vs-list-header icon=\"supervisor_account\" title=\"Hubo problemas con algunos paquetes\"></vs-list-header>\r\n                    <vs-list-item :key=\"indextr\" v-for=\"(tr, indextr) in arregloErroresPaquetes\" icon=\"check\" :title=\"tr.paquete\" >\r\n                      <p> {{ tr.problema }}</p>\r\n                    </vs-list-item>\r\n                </vs-list>\r\n            </vs-col>\r\n          </vs-card>\r\n        </vs-row>\r\n        <!--RESUMEN DE CAMBIOS-->\r\n        <vs-row v-if=\"arregloResumen.length > 0\">\r\n          <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\" vs-sm=\"12\" vs-xs=\"12\" >\r\n            <vs-card>\r\n              <div class=\"header\">\r\n                <p style=\"font-weight: bold;\" class=\"text-2xl\">Resumen de la importación: </p>\r\n                <!--RESUMENT TOTAL CANTIDAD-->\r\n                <div class=\"flex justify-center mt-4\" style=\"font-size:10px;\">\r\n                  <ul class=\"features flex justify-center\">\r\n                    <li>\r\n                      <span class=\"icon\">\r\n                        <svg height=\"24\" width=\"24\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                          <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\r\n                          <path fill=\"currentColor\" d=\"M10 15.172l9.192-9.193 1.415 1.414L10 18l-6.364-6.364 1.414-1.414z\"></path>\r\n                        </svg>\r\n                      </span>\r\n                      <span><strong>Total Códigos Activación Importados: {{ sumaIngresadosA }} </strong></span>\r\n                    </li>\r\n                    <li>\r\n                      <span class=\"icon\">\r\n                        <svg height=\"24\" width=\"24\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                          <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\r\n                          <path fill=\"currentColor\" d=\"M10 15.172l9.192-9.193 1.415 1.414L10 18l-6.364-6.364 1.414-1.414z\"></path>\r\n                        </svg>\r\n                      </span>\r\n                      <span><strong>Total Códigos Diágnostico Importados: {{ sumaIngresadosD }} </strong></span>\r\n                    </li>\r\n                    <li>\r\n                      <span class=\"icon\">\r\n                        <svg height=\"24\" width=\"24\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                          <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\r\n                          <path fill=\"currentColor\" d=\"M10 15.172l9.192-9.193 1.415 1.414L10 18l-6.364-6.364 1.414-1.414z\"></path>\r\n                        </svg>\r\n                      </span>\r\n                      <span><strong>Total Códigos Afectados: {{ sumaIngresadosA + sumaIngresadosD }} </strong></span>\r\n                    </li>\r\n                    <li>\r\n                      <span class=\"icon\">\r\n                        <svg height=\"24\" width=\"24\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                          <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\r\n                          <path fill=\"currentColor\" d=\"M10 15.172l9.192-9.193 1.415 1.414L10 18l-6.364-6.364 1.414-1.414z\"></path>\r\n                        </svg>\r\n                      </span>\r\n                      <span><strong>Total paquetes: {{ arrayPaquetes.length }} </strong></span>\r\n                    </li>\r\n                    <li v-if=\"sumaNoIngresados > 0\">\r\n                      <span class=\"icon\">\r\n                        <svg height=\"24\" width=\"24\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                          <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\r\n                          <path fill=\"currentColor\" d=\"M10 15.172l9.192-9.193 1.415 1.414L10 18l-6.364-6.364 1.414-1.414z\"></path>\r\n                        </svg>\r\n                      </span>\r\n                      <span><strong>Códigos No ingresados: {{ sumaNoIngresados }} </strong></span>\r\n                    </li>\r\n                    <!--NO EXISTEN-->\r\n                    <li v-if=\"sumaNoExisteA > 0\">\r\n                      <span class=\"icon\">\r\n                        <svg height=\"24\" width=\"24\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                          <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\r\n                          <path fill=\"currentColor\" d=\"M10 15.172l9.192-9.193 1.415 1.414L10 18l-6.364-6.364 1.414-1.414z\"></path>\r\n                        </svg>\r\n                      </span>\r\n                      <span class=\"text-danger\"><strong>Total Códigos Activación No existen: {{ sumaNoExisteA }} </strong></span>\r\n                    </li>\r\n                    <li v-if=\"sumaNoExisteD > 0\">\r\n                      <span class=\"icon\">\r\n                        <svg height=\"24\" width=\"24\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                          <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\r\n                          <path fill=\"currentColor\" d=\"M10 15.172l9.192-9.193 1.415 1.414L10 18l-6.364-6.364 1.414-1.414z\"></path>\r\n                        </svg>\r\n                      </span>\r\n                      <span class=\"text-danger\"><strong>Total Códigos Diágnostico No existen: {{ sumaNoExisteD }} </strong></span>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n                <!--FIN DE TOTAL DE CODIGOS-->\r\n                <!--RESUMEN DE LA TABLA-->\r\n                <table class=\"tabla\">\r\n                    <tr>\r\n                      <th class=\"th1\">Paquete</th>\r\n                      <th class=\"th1\">Problemas</th>\r\n                      <th class=\"th1\">Ingresados</th>\r\n                    </tr>\r\n                    <tr v-for=\"(item,key) in arregloResumen\" :key=\"key\">\r\n                      <td class=\"td1\" style=\"border: 1px solid #f2f2f2;\">\r\n                        {{item.codigoPaquete}}\r\n                        <div class=\"flex justify-center mt-1\">\r\n                          <vs-chip color=\"danger\" v-if=\"item.mensaje == '1'\">No existe el paquete</vs-chip>\r\n                        </div>\r\n                      </td>\r\n                      <vs-td height=\"40%\" width=\"50%\" style=\"border: 1px solid #f2f2f2;\">\r\n                        <div class=\"overflow-y-auto h-24\" v-if=\"item.codigosHijos.length > 0\">\r\n                            <tr>\r\n                              <th class=\"th2\" style=\"font-size:10px;\">Codigo activacion</th>\r\n                              <th class=\"th2\">Codigo</th>\r\n                              <th class=\"th2\">Codigo union</th>\r\n                            </tr>\r\n                            <tr color=\"primary\" :key=\"index\" v-for=\"(item2,index) in item.codigosHijos\">\r\n                              <td class=\"td2\">{{ item2.codigo }}</td>\r\n                              <td class=\"td2\">{{ item2.codigoUnion }}</td>\r\n                              <td class=\"td2\">{{ item2.problema }}</td>\r\n                            </tr>\r\n                          </div>\r\n                        <div v-else>\r\n                          <p class=\"text-center\">No hay problemas</p>\r\n                        </div>\r\n                      </vs-td>\r\n                      <vs-td class=\"tdingreso\">\r\n                        <ul class=\"features flex justify-center\">\r\n                          <li>\r\n                            <span class=\"icon\">\r\n                              <svg height=\"24\" width=\"24\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\r\n                                <path fill=\"currentColor\" d=\"M10 15.172l9.192-9.193 1.415 1.414L10 18l-6.364-6.364 1.414-1.414z\"></path>\r\n                              </svg>\r\n                            </span>\r\n                            <span><strong>Códigos Activación Importados: {{ item.ingresoA }} </strong></span>\r\n                          </li>\r\n                          <li>\r\n                            <span class=\"icon\">\r\n                              <svg height=\"24\" width=\"24\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\r\n                                <path fill=\"currentColor\" d=\"M10 15.172l9.192-9.193 1.415 1.414L10 18l-6.364-6.364 1.414-1.414z\"></path>\r\n                              </svg>\r\n                            </span>\r\n                            <span><strong>Códigos Diágnostico Importados: {{ item.ingresoD }} </strong></span>\r\n                          </li>\r\n                          <li>\r\n                            <span class=\"icon\">\r\n                              <svg height=\"24\" width=\"24\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\r\n                                <path fill=\"currentColor\" d=\"M10 15.172l9.192-9.193 1.415 1.414L10 18l-6.364-6.364 1.414-1.414z\"></path>\r\n                              </svg>\r\n                            </span>\r\n                            <span><strong>Total Importados: {{ item.ingresoA+ item.ingresoD }} </strong></span>\r\n                          </li>\r\n                          <!--NO EXISTEN-->\r\n                          <li v-if=\"item.noExisteA > 0\">\r\n                            <span class=\"icon\">\r\n                              <svg height=\"24\" width=\"24\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\r\n                                <path fill=\"currentColor\" d=\"M10 15.172l9.192-9.193 1.415 1.414L10 18l-6.364-6.364 1.414-1.414z\"></path>\r\n                              </svg>\r\n                            </span>\r\n                            <span class=\"text-danger\"><strong>Códigos Activación No existen: {{ item.noExisteA }} </strong></span>\r\n                          </li>\r\n                          <li v-if=\"item.noExisteD > 0\">\r\n                            <span class=\"icon\">\r\n                              <svg height=\"24\" width=\"24\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\r\n                                <path fill=\"currentColor\" d=\"M10 15.172l9.192-9.193 1.415 1.414L10 18l-6.364-6.364 1.414-1.414z\"></path>\r\n                              </svg>\r\n                            </span>\r\n                            <span class=\"text-danger\"><strong>Códigos Diágnostico No existen: {{ item.noExisteD }} </strong></span>\r\n                          </li>\r\n                        </ul>\r\n                      </vs-td>\r\n                    </tr>\r\n                </table>\r\n              </div>\r\n            </vs-card>\r\n          </vs-col>\r\n        </vs-row>\r\n        <vs-row v-if=\"codigosPerdidos == true\">\r\n          <vx-card\r\n            title=\"Codigos que no se pudieron guardar\"\r\n            v-if=\"codigoConProblemas.length > 0\"\r\n            >\r\n            <TableRadiosCodigosListaVue :arregloCodigos=\"codigoConProblemas\" openModal=\"1\"/>\r\n          </vx-card>\r\n        </vs-row>\r\n      </div>\r\n      <vx-card v-if=\"tableData.length && header.length\">\r\n        <vs-table stripe pagination :max-items=\"10\" search :data=\"tableData\">\r\n          <template slot=\"header\">\r\n            <h4>Códigos a subir {{tableData.length}}</h4>\r\n          </template>\r\n          <template slot=\"thead\">\r\n            <vs-th :sort-key=\"heading\" v-for=\"heading in header\" :key=\"heading\">{{ heading }}</vs-th>\r\n          </template>\r\n          <template slot-scope=\"{data}\">\r\n            <vs-tr :data=\"tr\" :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n              <vs-td :data=\"col\" v-for=\"(col, indexcol) in data[indextr]\" :key=\"indexcol + col\">\r\n                {{ col }}\r\n              </vs-td>\r\n            </vs-tr>\r\n          </template>\r\n        </vs-table>\r\n      </vx-card>\r\n      <!--MODALES-->\r\n      <!--MODAL PROBLEMAS DIAGNOSTICO-->\r\n      <vs-popup fullscreen title=\"Problemas con los paquete\" :active.sync=\"popupProblemasDiagnostico\">\r\n        <TablaErroresPaqueteVue v-if=\"popupProblemasDiagnostico\" :items=\"10\" :arregloProblemasPaquete=\"arregloProblemasPaquete\" :onlyCodes=\"onlyCodes\"/>\r\n      </vs-popup>\r\n       <!--MODAL CONFIRMAR TIPO DE IMPORTADO-->\r\n      <vs-popup small title=\"Importación de Paquetes\" :active.sync=\"popupConfirmTipoImportado\" @close=\"validateCodigosPaquetes();\">\r\n        <p class=\"text-2xl text-warning font-bold text-center\">Que tipo de importación va a realizar?</p>\r\n        <div class=\"mt-4 mr-4 flex justify-center\">\r\n          <!-- <span class=\"mr-2\">Seleccione:</span> -->\r\n          <ul class=\"flex\">\r\n            <li>\r\n              <vs-radio v-model=\"ifOnlyCode\" vs-name=\"ifOnlyCode\" class=\"mr-4\" vs-value=\"0\">Activación - Diagnóstica</vs-radio>\r\n            </li>\r\n            <li>\r\n              <vs-radio v-model=\"ifOnlyCode\" vs-name=\"ifOnlyCode\" class=\"mr-2\" vs-value=\"1\">Diagnóstica - Activación</vs-radio>\r\n            </li>\r\n            <li>\r\n              <vs-radio v-model=\"ifOnlyCode\" class=\"ml-3\" vs-name=\"ifOnlyCode\" vs-value=\"2\">Activación</vs-radio>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div class=\"flex justify-center mt-5\">\r\n          <vs-button color=\"primary\" type=\"border\" @click=\"validateCodigosPaquetes();popupConfirmTipoImportado=false;\">Aceptar</vs-button>\r\n        </div>\r\n      </vs-popup>\r\n    </div>\r\n  </template>\r\n  <script>\r\n  import {\r\n    mapState\r\n  } from \"vuex\";\r\n  const TableRadiosCodigosListaVue      = () => import('../../../components/utils/components/GestionLiquidacion/TableRadiosCodigosLista.vue')\r\n  const ImportExcel                     = () => import('../../../components/importExcel.vue')\r\n  const TablaErroresPaqueteVue          = () => import('../../components/TablaErroresPaquete.vue')\r\n  import vSelect from 'vue-select'\r\n  export default {\r\n    components: {\r\n      ImportExcel,\r\n      vSelect,\r\n      TableRadiosCodigosListaVue,\r\n      TablaErroresPaqueteVue,\r\n    },\r\n    data () {\r\n      return {\r\n        codigosPerdidos:false,\r\n        tableData: [],\r\n        header: [],\r\n        sheetName: '',\r\n        usuario: [],\r\n        modalConfirm: false,\r\n        modalErrores: false,\r\n        errores: [],\r\n        //variables para codigos union\r\n        codigosSinCodigoUnion:[],\r\n        popupProblemasCodigosUnion:false,\r\n        //fin variables para codigos union\r\n        arregloProblemasPaquete:[],\r\n        arregloFormatoSend:[],\r\n        totalCodigos:0,\r\n        totalCodigosReal:0,\r\n        popupProblemasDiagnostico:false,\r\n        arrayPaquetes:0,\r\n        arregloResumen:[],\r\n        codigoConProblemas:[],\r\n        arregloErroresPaquetes:[],\r\n        popupConfirmTipoImportado:false,\r\n        ifOnlyCode:0,\r\n        onlyCodes:1,\r\n      }\r\n    },\r\n    created(){\r\n        this.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n        this.codigosPerdidos = false\r\n    },\r\n    computed:{\r\n      ...mapState([\"auth\",'userRoot','susuario','userAsesor']),\r\n      sumaIngresadosA(){\r\n        let me = this;\r\n        if(me.arregloResumen.length > 0){\r\n          let datosA = me.arregloResumen.filter(p => p.ingresoA)\r\n          let resultado = datosA.reduce((a, b) => a + (b[\"ingresoA\"] || 0), 0);\r\n          return resultado\r\n        }\r\n      },\r\n      sumaIngresadosD(){\r\n        let me = this;\r\n        if(me.arregloResumen.length > 0){\r\n          let datosD    = me.arregloResumen.filter(p => p.ingresoD)\r\n          let resultado = datosD.reduce((a, b) => a + (b[\"ingresoD\"] || 0), 0);\r\n          return resultado\r\n        }\r\n      },\r\n      sumaNoIngresados(){\r\n        let me = this;\r\n        if(me.arregloResumen.length > 0){\r\n          //activacion\r\n          let datosA = me.arregloResumen.filter(p => p.ingresoA)\r\n          let resultadoA = datosA.reduce((a, b) => a + (b[\"ingresoA\"] || 0), 0);\r\n          //diagnostico\r\n          let datosD     = me.arregloResumen.filter(p => p.ingresoD)\r\n          let resultadoD = datosD.reduce((a, b) => a + (b[\"ingresoD\"] || 0), 0);\r\n          let total      = me.totalCodigos - (resultadoA + resultadoD)\r\n          return total\r\n        }\r\n      },\r\n      sumaNoExisteA(){\r\n        let me = this;\r\n        if(me.arregloResumen.length > 0){\r\n          let datosD    = me.arregloResumen.filter(p => p.noExisteA)\r\n          let resultado = datosD.reduce((a, b) => a + (b[\"noExisteA\"] || 0), 0);\r\n          return resultado\r\n        }\r\n      },\r\n      sumaNoExisteD(){\r\n        let me = this;\r\n        if(me.arregloResumen.length > 0){\r\n          let datosD    = me.arregloResumen.filter(p => p.noExisteD)\r\n          let resultado = datosD.reduce((a, b) => a + (b[\"noExisteD\"] || 0), 0);\r\n          return resultado\r\n        }\r\n      },\r\n    },\r\n    methods: {\r\n        loadDataInTable ({ results, header, meta }) {\r\n        let me                          = this\r\n        this.codigosPerdidos            = false\r\n        this.arregloResumen             = []\r\n        this.codigoConProblemas         = []\r\n        this.arregloErroresPaquetes     = []\r\n        this.header                     = header\r\n        this.tableData                  = results\r\n        this.sheetName                  = meta.sheetName\r\n        this.popupConfirmTipoImportado  = true;\r\n        this.onlyCodes                  = 1\r\n        // me.validateCodigosPaquetes()\r\n        },\r\n        async validateCodigosPaquetes(){\r\n          try{\r\n            let me = this\r\n            me.arregloProblemasPaquete  = []\r\n            me.arregloFormatoSend       = []\r\n            me.arrayPaquetes            = 0\r\n            me.totalCodigosReal         = 0\r\n            me.totalCodigos             = 0\r\n            let datos                   = []\r\n            let preDatos                = []\r\n            datos                       = me.tableData\r\n            datos.map((item) => {\r\n              let obj = new Object();\r\n              obj.codigo = item.codigo.trim()\r\n              preDatos.push(obj)\r\n            })\r\n            console.log(\"preDatos\",preDatos)\r\n            const arrayNormal           = JSON.parse(JSON.stringify(preDatos));\r\n            //DE LO CONTRARIO VAMOS A VALIDAR CON LA BASE\r\n            const objetosFiltrados      = arrayNormal.filter(objeto => objeto.codigo.toLowerCase().startsWith('paq-'));\r\n            me.arrayPaquetes            = objetosFiltrados\r\n            me.totalCodigos             = arrayNormal.length - me.arrayPaquetes.length\r\n            //PROCESO\r\n            // Crear un nuevo array resultante\r\n            var nextPaquete = 1\r\n            for(let i = 0; i<objetosFiltrados.length; i++){\r\n              let nuevoArray = []\r\n              let preArray   = []\r\n              //tomo el siguiente paquete y valido si fuera el ultimo\r\n              let getPosicion = objetosFiltrados[nextPaquete]\r\n              //UNDEFINED PORQUE BUSCO EL PROXIMO PAQUETE PARA SABER QUE ES EL ULTIMO\r\n              if(getPosicion!==undefined){\r\n                //busco la posicion del ultimo paquete para agarrar los codigos hasta la ultima posicion del proximo paquete\r\n                const codigoBuscado         = objetosFiltrados[nextPaquete].codigo;\r\n                const posicionCodigoBuscado = arrayNormal.findIndex(objeto => objeto.codigo === codigoBuscado);\r\n                nuevoArray.push(arrayNormal.splice(0, posicionCodigoBuscado));\r\n                preArray = nuevoArray[0]\r\n                const resultado1 = await me.ChangeArray(preArray)\r\n              }\r\n              //EL ULTIMO PAQUETE NO TIENE POSICION DEL ULTIMO PARQUETE PORQUE TERMINA EN CODIGO\r\n              else{\r\n                nuevoArray.push(arrayNormal);\r\n                preArray = nuevoArray[0]\r\n                const resultado2 = await me.ChangeArray(preArray)\r\n              }\r\n              nextPaquete++\r\n            }\r\n            console.log(\"totalCodigos\",me.totalCodigos)\r\n            console.log(\"totalCodigosReal\",me.totalCodigosReal)\r\n            //validar que los codigos paquetes tenga los codigos correctos\r\n            if(me.totalCodigos != me.totalCodigosReal){\r\n              // me.arregloProblemasPaquete = []\r\n              // me.setErrorsPaquetes(\"En todos los paquetes\",\"Hay problemas con los paquetes corrija por favor\",[],me.arrayPaquetes)\r\n            }\r\n            if(me.arregloProblemasPaquete.length > 0){\r\n              me.popupProblemasDiagnostico = true\r\n            }\r\n          }\r\n          catch (error) {\r\n            console.log(error)\r\n            alert(\"Hubo errores en el archivo\")\r\n          }\r\n      },\r\n      async ChangeArray(array){\r\n        let me = this;\r\n        var problema         = \"\"\r\n        var preArray         = array.flat(10)\r\n        var getCodigoPaquete = preArray.splice(0,1)\r\n        var codigoPaquete    = getCodigoPaquete[0].codigo\r\n        var arrayHijos       = preArray\r\n        var ifError          = false\r\n        //VALIDAR CODIGO DE PAQUETE\r\n        const paqueteMinuscula = codigoPaquete.toLowerCase();\r\n        if(!paqueteMinuscula.startsWith(\"paq-\")){\r\n          problema = \"Problema con el paquete, formato incorrecto del paquete\"\r\n          ifError = true;\r\n        }\r\n        //VALIDAR LA CANTIDAD DE CODIGOS HIJOS UN SOLO CODIGO\r\n        if(me.ifOnlyCode == 2){\r\n          if(arrayHijos.length == 5 || arrayHijos.length == 10){ me.totalCodigosReal  = me.totalCodigosReal + arrayHijos.length;  me.generateFormato(codigoPaquete,arrayHijos); }\r\n          else{\r\n            problema = \"Problema con el paquete, insuficiencia de códigos\"\r\n            ifError = true;\r\n          }\r\n        }\r\n        //2 CODIGOS ACTIVACION Y DIAGNOSTICA o DIAGNOSTICA Y ACTIVACION\r\n        else{\r\n          if(arrayHijos.length == 10 || arrayHijos.length == 20 || arrayHijos.length == 2){ me.totalCodigosReal  = me.totalCodigosReal + arrayHijos.length;  me.generateFormato(codigoPaquete,arrayHijos); }\r\n          else{\r\n            console.log(\"arrayHijos\",arrayHijos.length,'codigoPaquete',codigoPaquete)\r\n            problema = \"Problema con el paquete, insuficiencia de códigos\"\r\n            ifError = true;\r\n          }\r\n        }\r\n        if(ifError){ me.setErrorsPaquetes(codigoPaquete,problema,arrayHijos) }\r\n      },\r\n      generateFormato(codigoPaquete,codigosHijos){\r\n        let me = this;\r\n        //2 codigos\r\n        var getcodigos = []\r\n        if(me.ifOnlyCode == 0 || me.ifOnlyCode == 1)  { getcodigos = me.formatoHijos(codigoPaquete,codigosHijos) }\r\n        else                                          { getcodigos = codigosHijos }\r\n        var cal                                       = new Object\r\n        cal.codigoPaquete                             = codigoPaquete\r\n        cal.codigosHijos                              = getcodigos\r\n        me.arregloFormatoSend.push(cal)\r\n      },\r\n      formatoHijos(codigoPaquete,codigosHijos){\r\n        let me = this;\r\n        var arregloSetear       = []\r\n        var arrayCodigosErrores = []\r\n        codigosHijos.forEach(element => {\r\n          var obj = new Object();\r\n          obj.codigo = element.codigo\r\n          arregloSetear.push(obj)\r\n        });\r\n        var preValores      = []\r\n        var codigosMostrar  = []\r\n        preValores          = arregloSetear\r\n        var getLongitud     = arregloSetear.length\r\n        var longitud        = getLongitud/2\r\n        for(var i = 0; i<longitud;i++){\r\n          // Creamos un nuevo array para almacenar los objetos quitados\r\n          const nuevoArray        = [];\r\n          var problemaCodigos     = [];\r\n          let   codigoActivacion  = \"\";\r\n          let   codigoDiagnostico = \"\";\r\n          // Quitamos los dos primeros objetos del array original y los agregamos al nuevo array\r\n          nuevoArray.push(preValores.splice(0, 2));\r\n          var setear = nuevoArray.flat()\r\n          if(setear.length == 1){\r\n            var cal = new Object\r\n            //ACTIVACION - DIAGNOSTICO)\r\n            if(me.ifOnlyCode == 0){\r\n              cal.codigoActivacion =  setear[0].codigo\r\n              cal.codigoDiagnostico  =  \"\"\r\n            }\r\n            //DIAGNOSTICO - ACTIVACION)\r\n            if(me.ifOnlyCode == 1){\r\n              cal.codigoDiagnostico =  setear[0].codigo\r\n              cal.codigoActivacion  =  \"\"\r\n            }\r\n            cal.problema          =  'formato'\r\n            problemaCodigos.push(cal)\r\n            arrayCodigosErrores.push(problemaCodigos)\r\n          }else{\r\n           //ACTIVACION - DIAGNOSTICO)\r\n           if(me.ifOnlyCode == 0){\r\n              codigoActivacion      = setear[0].codigo;\r\n              codigoDiagnostico     = setear[1].codigo\r\n            }\r\n            //DIAGNOSTICO - ACTIVACION)\r\n            if(me.ifOnlyCode == 1){\r\n              codigoDiagnostico     = setear[0].codigo\r\n              codigoActivacion      = setear[1].codigo;\r\n            }\r\n            var cal = new Object\r\n            cal.codigoActivacion  =  codigoActivacion\r\n            cal.codigoDiagnostico =  codigoDiagnostico\r\n            codigosMostrar.push(cal)\r\n            //VALIDACION\r\n            var codigosErrores     = me.validacionErrores(codigoActivacion,codigoDiagnostico)\r\n            if(codigosErrores.length > 0){\r\n              //si existe errores de formato de los codigos hijos cambio para que se pueda mostrar\r\n              me.onlyCodes = 0\r\n              arrayCodigosErrores.push(codigosErrores)\r\n            }\r\n          }//fin else\r\n        }//fin for\r\n        //enviar errores\r\n        if(arrayCodigosErrores.length > 0){\r\n          me.setErrorsPaquetes(codigoPaquete,\"Problema en el formato de los codigos hijos\",arrayCodigosErrores)\r\n        }\r\n        return codigosMostrar\r\n      },\r\n      validacionErrores(codigoActivacion,codigoDiagnostico){\r\n        let me = this\r\n        var problemaCodigos = []\r\n        //============ACTIVACION==================================\r\n        //VALIDACION SI NO SON STRING\r\n        if (typeof codigoActivacion !== 'string' || typeof codigoDiagnostico !== 'string' ) {\r\n          var cal = new Object\r\n          cal.codigoActivacion  =  codigoActivacion\r\n          cal.codigoDiagnostico =  codigoDiagnostico\r\n          cal.problema          =  'formato'\r\n          problemaCodigos.push(cal)\r\n        }\r\n        else{\r\n          const activacionMinuscula = codigoActivacion.toLowerCase();\r\n          //validar que el codigo de activacion no tenga una P\r\n          if(activacionMinuscula.startsWith(\"p\")){\r\n            //validar meñique que el codigo de activacion se permita empezar por p DONDE SEA PLM no hago nada\r\n            if(activacionMinuscula.startsWith(\"plm\")){\r\n            }else{\r\n              var cal = new Object\r\n              cal.codigoActivacion  =  codigoActivacion\r\n              cal.codigoDiagnostico =  codigoDiagnostico\r\n              cal.problema          =  'activacion'\r\n              problemaCodigos.push(cal)\r\n            }\r\n          }\r\n          //=============DIAGNOSTICO===================================\r\n          //validar que el codigo de activacion tenga una P\r\n          const diagnosticoMinuscula = codigoDiagnostico.toLowerCase();\r\n          //validar si es meñique debe tener 2 pp\r\n          if(activacionMinuscula.startsWith(\"plm\")){\r\n            //si no inicia por 2 pp\r\n            if(!diagnosticoMinuscula.startsWith(\"pp\")){\r\n              var cal = new Object\r\n              cal.codigoActivacion  =  codigoActivacion\r\n              cal.codigoDiagnostico =  codigoDiagnostico\r\n              cal.problema          =  'diagnostico'\r\n              problemaCodigos.push(cal)\r\n            }\r\n          }\r\n          //diferente a meñique\r\n          else{\r\n            if(!diagnosticoMinuscula.startsWith(\"p\")){\r\n              var cal = new Object\r\n              cal.codigoActivacion  =  codigoActivacion\r\n              cal.codigoDiagnostico =  codigoDiagnostico\r\n              cal.problema          =  'diagnostico'\r\n              problemaCodigos.push(cal)\r\n            }\r\n          }\r\n        }\r\n        return problemaCodigos\r\n      },\r\n      setErrorsPaquetes(codigoPaquete,problema,codigosErrores,paquetes=[]){\r\n        let me                = this\r\n        var cal               = new Object\r\n        cal.codigoPaquete     = codigoPaquete\r\n        cal.problema          = problema\r\n        cal.codigosHijos      = codigosErrores.flat(10)\r\n        cal.setpaquetes       = paquetes\r\n        me.arregloProblemasPaquete.push(cal)\r\n      },\r\n      procesarPagos(){\r\n        let me = this\r\n        me.$vs.loading()\r\n        let json_pagos = JSON.stringify(me.arregloFormatoSend)\r\n        let formData = new FormData();\r\n        formData.append('data_codigos',     json_pagos);\r\n        formData.append('id_usuario',       me.usuario.idusuario);\r\n        formData.append('periodo_id',       localStorage.periodo_id);\r\n        var url = \"\"\r\n        //Varias codigos\r\n        if( me.ifOnlyCode == 0 || me.ifOnlyCode == 1 ) {   url = this.$server_url+'paquetes/guardarPaquete' }\r\n        //un solo codigo\r\n        if(me.ifOnlyCode == 2) {   url = this.$server_url+'paquetes/guardarPaquete2' }\r\n        this.$http.post(url, formData)\r\n        .then(res => {\r\n            me.$vs.loading.close()\r\n            if(res.data.status == 0){\r\n              me.$vs.notify({\r\n              text:res.data.message,\r\n              color:'success',\r\n              iconPack: 'feather',\r\n              icon:'icon-check'})\r\n              return false\r\n            }\r\n            me.$vs.notify({\r\n            text:'Códigos procesados exitosamente',\r\n            color:'success',\r\n            iconPack: 'feather',\r\n            icon:'icon-check'})\r\n            me.modalConfirm                           = false\r\n            me.tableData                              = []\r\n            me.codigosPerdidos                        = true\r\n            me.arregloResumen                         = res.data.arregloResumen\r\n            me.codigoConProblemas                     = res.data.codigoConProblemas\r\n            me.arregloErroresPaquetes                 = res.data.arregloErroresPaquetes\r\n            // me.codigosLeidos = res.data.codigosLeidos\r\n            // me.codigosNoCambiados = res.data.codigosNoCambiados\r\n            // me.codigoNoExiste = res.data.codigoNoExiste\r\n            // me.codigosSinCodigoUnion  = res.data.codigosSinCodigoUnion\r\n            // if(me.codigosSinCodigoUnion.length > 0 && !me.userAsesor){\r\n            //   me.popupProblemasCodigosUnion = true\r\n            // }\r\n            // me.porcentaje = res.data.cambiados\r\n        })\r\n        .catch(function (error) {\r\n            me.$vs.notify({\r\n            text:'Verifique que la información se haya guardado correctamente.',\r\n            color:'warning',\r\n            iconPack: 'feather',\r\n            icon:'icon-alert-triangle'})\r\n            me.$vs.loading.close()\r\n        })\r\n      },\r\n      openConfirm(tipo) {\r\n        let me = this\r\n        me.tipo_selected = tipo\r\n        if(!me.tableData[0].codigo){\r\n              me.$vs.loading.close()\r\n              me.$vs.notify({ text:'Corrija el formato del excel y vuelva a intentar.', color:'warning', iconPack: 'feather', icon:'icon-alert-triangle'})\r\n              return\r\n          }\r\n        me.errores = []\r\n        $.each(me.tableData,function(key, value){\r\n          if( !value.codigo){\r\n            me.errores.push(value)\r\n          }\r\n        })\r\n        if( me.errores.length > 0 ){\r\n          me.modalErrores = true\r\n        }else{\r\n          me.modalConfirm = true\r\n        }\r\n      },\r\n      recargar(){\r\n        location.reload()\r\n      },\r\n\r\n    }\r\n  }\r\n  </script>\r\n<style scoped>\r\n.tabla{\r\n  width: 100%;\r\n  margin-top: 10px;\r\n}\r\n .tabla {\r\n\r\n  border: 1px solid #D1E5F1;\r\n  padding: 2px;\r\n  border-radius: 5px;\r\n}\r\n.th1{\r\n  background-color: #E3AC6B;\r\n  border-radius: 5px;\r\n  color:white;\r\n}\r\n.td1, .th1{\r\n padding: 10px;\r\n text-align: center;\r\n border:none;\r\n}\r\n.th2{\r\n  color:#93938F;\r\n  font-size: 10px;\r\n  background-color: #E7E7BF;\r\n  text-align: center;\r\n  padding: 8px;\r\n  border-radius: 5px;\r\n}\r\n.td2{\r\n  font-size: 10px;\r\n  padding: 5px;\r\n}\r\n.tdingreso{\r\n  border: 1px solid #f2f2f2;border-radius:5px;padding:10px;font-size:8px;\r\n}\r\n/*CSS IMPORTADOR TIPO BODEGA*/\r\n\r\n.features {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n.features li {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n}\r\n.features li + * {\r\n  margin-top: 0.75rem;\r\n}\r\n.features .icon {\r\n  background-color: #1FCAC5;\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #fff;\r\n  border-radius: 50%;\r\n  width: 20px;\r\n  height: 20px;\r\n}\r\n.features .icon svg {\r\n  width: 14px;\r\n  height: 14px;\r\n}\r\n.features + * {\r\n  margin-top: 1.25rem;\r\n}\r\n</style>\r\n"]}]}