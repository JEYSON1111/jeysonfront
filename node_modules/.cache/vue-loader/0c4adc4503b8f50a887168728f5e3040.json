{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\pedidos\\notificaciones\\screenNotificacion.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\pedidos\\notificaciones\\screenNotificacion.vue","mtime":1712682816354},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nimport io from \"socket.io-client\";\r\nimport $ from 'jquery'\r\nimport moment from 'moment'\r\nexport default{\r\n  data(){\r\n      return{\r\n        arregloNotificaciones:[],\r\n        tmparregloNotificaciones:[],\r\n        usuario:[],\r\n        arregloRespuestas:[],\r\n        pedido:{},\r\n        counterDanger: false,\r\n        respuesta:'',\r\n        busqueda:'',\r\n        // socket: io(process.env.socket),\r\n        boleano:false,\r\n      }\r\n  },\r\n  props:{\r\n    cambiarNotificacion:{\r\n      type:Boolean,\r\n      default:false\r\n    },\r\n  },\r\n  watch:{\r\n    cambiarNotificacion(results){\r\n      let me = this;\r\n      me.arregloRespuestas = []\r\n      me.pedido            = {}\r\n      me.getNotificaciones()\r\n    },\r\n    busqueda(results){\r\n      let me = this;\r\n      me.arregloRespuestas = []\r\n      me.tmparregloNotificaciones = []\r\n      if(results.length == 0){\r\n        me.tmparregloNotificaciones = me.arregloNotificaciones\r\n      }else{\r\n        let datos = me.arregloNotificaciones\r\n        me.tmparregloNotificaciones = datos.filter(p => p.nombreInstitucion.toLowerCase().includes(results));\r\n      }\r\n    },\r\n    boleano(results){\r\n      let me = this\r\n      if(results == true){\r\n        me.boleano = false\r\n        setTimeout(() => {\r\n          me.createNotify()\r\n        }, \"2000\");\r\n      }\r\n    }\r\n  },\r\n  created(){\r\n    let me = this;\r\n    me.usuario = JSON.parse(localStorage.getItem(\"usuario\"))\r\n  },\r\n  mounted(){\r\n    let me = this\r\n    moment.locale('es')\r\n    me.getNotificaciones()\r\n    // try {\r\n    //   this.socket.on('enviar', (data) => {\r\n    //     //si el mensaje envia un asesor\r\n    //     if(data.tipo == 'pedidos_chat'){\r\n    //       //si el mensaje envia un asesor\r\n    //       if(data.grupo == 11){\r\n    //         me.getNotificaciones()\r\n    //         if(me.pedido == undefined){\r\n    //         }else{\r\n    //           me.mostrarMensajes(me.pedido)\r\n    //         }\r\n    //         return\r\n    //       }\r\n    //     }\r\n    //     //Si hay una notificacion de verificaciones\r\n    //     if(data.tipo == 'verificaciones'){\r\n    //       //si el mensaje envia un asesor\r\n    //       if(data.grupo == 11){\r\n    //         if(me.usuario.id_group == 22 || me.usuario.id_group == 23 || me.usuario.id_group == 1){\r\n    //           me.$emit('rechargeVerificaciones',true)\r\n    //         }\r\n    //         return\r\n    //       }\r\n    //     }\r\n    //     if(data.grupo == 22 || data.grupo == 23 || data.grupo == 25){\r\n    //       if(me.usuario.id_group == 11 && data.id_asesor == me.usuario.idusuario){\r\n    //         me.getNotificaciones()\r\n    //         if(me.pedido == undefined){\r\n    //         }else{\r\n    //           me.mostrarMensajes(me.pedido)\r\n    //         }\r\n\r\n    //         return\r\n    //       }\r\n    //     }\r\n    //   })\r\n    // } catch (error) {\r\n    //     console.log(error)\r\n    // }\r\n  },\r\n  methods:{\r\n      getAdministradorMensaje(tr){\r\n        var resultado = \"\"\r\n        for(let i =0; i<tr.length;i++){\r\n          if(tr[i].id_group == \"23\" || tr[i].id_group == \"22\" || tr[i].id_group == \"1\" || tr[i].id_group == \"25\"){\r\n            resultado = tr[i].usuario\r\n            break;\r\n          }\r\n        }\r\n        return resultado;\r\n      },\r\n      getNotificaciones(){\r\n        let me = this\r\n        var tipo = 0\r\n        if(me.usuario.id_group == 11){\r\n        //envia el asesor\r\n        tipo = 0\r\n        }else{\r\n        //envia un facturador\r\n        tipo = 1\r\n        }\r\n        this.$http.get(this.$server_url+'verNotificacionPedidos?tipo='+tipo)\r\n          .then(function (res) {\r\n            let datos = res.data\r\n            var resultado = 0\r\n            if(datos.length > 0){\r\n              if(me.usuario.id_group == 11){\r\n              me.arregloNotificaciones = datos.filter(p => p.id_asesor == me.usuario.idusuario)\r\n              }else{\r\n                me.arregloNotificaciones = datos\r\n              }\r\n              me.tmparregloNotificaciones = me.arregloNotificaciones\r\n              //contar No vistos\r\n              resultado =  me.arregloNotificaciones.reduce((acc,valor) =>{\r\n              const respuesta = acc+ valor.contadorVistos\r\n              return respuesta\r\n              },0)\r\n            }\r\n            me.$emit('ChangecantidadMensajes',resultado)\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error + ' error');\r\n              // me.$vs.loading.close()\r\n          })\r\n      },\r\n      mostrarMensajes(tr){\r\n        let me = this\r\n        var tipo = 0\r\n        me.respuesta = ''\r\n        me.$vs.loading()\r\n        //me.arregloRespuestas = []\r\n        this.$http.get(this.$server_url+'mostrarMensajesPedido?id_pedido='+tr.id_pedido+'&id_group='+me.usuario.id_group)\r\n        .then(function (res) {\r\n          me.$vs.loading.close()\r\n          me.arregloRespuestas = res.data\r\n          me.bajar()\r\n          me.getNotificaciones()\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error + ' error');\r\n          me.$vs.loading.close()\r\n        })\r\n      },\r\n      bajar(){\r\n        $(document).ready(function() {\r\n          $(\"#tudiv\").animate({ scrollTop: \"+=55550px\" }, 800);\r\n        });\r\n      },\r\n      respuestaComentario(){\r\n        let me = this;\r\n        if(me.pedido.id_pedido == undefined || me.pedido.id_pedido == null || me.pedido.id_pedido == \"\"){\r\n          me.$vs.notify({\r\n            color: 'primary',\r\n            title: 'Mensaje',\r\n            text: 'Debe seleccionar un chat para enviar mensajes por favor'\r\n            })\r\n          return false;\r\n        }\r\n        if(me.respuesta.length >= 500){\r\n          me.$vs.notify({\r\n            color: 'primary',\r\n            title: 'Mensaje',\r\n            text: 'El motivo del ticket debe tener un maximo de 500 caracteres'\r\n            })\r\n          return false;\r\n        }\r\n          if(me.respuesta.length < 2){\r\n          me.$vs.notify({\r\n            color: 'primary',\r\n            title: 'Mensaje',\r\n            text: 'El motivo del ticket debe tener al menos 2 caracteres.'\r\n            })\r\n          return false;\r\n        }\r\n        let formData = new FormData();\r\n        formData.append('id_pedido',  me.pedido.id_pedido);\r\n        formData.append('comentario', me.respuesta);\r\n        formData.append('id_usuario', me.usuario.idusuario);\r\n        formData.append('id_group',   me.usuario.id_group)\r\n        me.$vs.loading();\r\n        this.$http.post(this.$server_url+'guardar_comentario', formData)\r\n          .then(function (res) {\r\n            me.$vs.loading.close()\r\n            me.boleano = true\r\n            me.getNotificaciones()\r\n            if(me.respuesta){\r\n              let datos = {\r\n                id_asesor:  me.pedido.id_asesor,\r\n                emisor:     me.usuario.idusuario,\r\n                grupo:      me.usuario.id_group,\r\n                tipo:       \"pedidos_chat\"\r\n              }\r\n              // me.sendSocket(datos)\r\n              me.mostrarMensajes(me.pedido)\r\n            }\r\n            me.createNotify()\r\n            // me.$vs.notify({\r\n            //   color: 'primary',\r\n            //   iconPack: 'feather',\r\n            //   icon: 'icon-check',\r\n            //   time:18000,\r\n            // })\r\n\r\n          })\r\n          .catch(function (error) {\r\n            me.$vs.loading.close()\r\n          })\r\n      },\r\n      createNotify(){\r\n        let me = this;\r\n        const tipo = document.querySelector(\"#notificacion\");\r\n        if(me.boleano){\r\n          tipo.classList.remove(\"hideTipo\");\r\n          tipo.classList.toggle(\"showTipo\");\r\n        }else{\r\n          tipo.classList.remove(\"showTipo\");\r\n          tipo.classList.toggle(\"hideTipo\");\r\n        }\r\n      },\r\n      // sendSocket(datos){\r\n      //   try {\r\n      //     this.socket.emit(\"enviar\", datos);\r\n      //     } catch (error) {\r\n      //       console.log(error)\r\n      //     }\r\n      // },\r\n      formatHorasMinutos(fecha){\r\n        let me = this;\r\n        const setFecha = moment(fecha).format('HH:mm')\r\n        return setFecha\r\n      },\r\n      formatoMes(fecha){\r\n        const setFecha = moment(fecha).format('MMMM')\r\n        const mes = setFecha.replace(/^\\w/, (c) => c.toUpperCase()).substring(0,3)\r\n        const year = moment(fecha).format('YYYY')\r\n        const day = moment(fecha).format('DD')\r\n        const resultado = year + \"-\" + mes + \"-\"+day\r\n        return resultado\r\n      },\r\n      elapsedTime(startTime) {\r\n        const x = new Date(startTime)\r\n        const now = new Date()\r\n        let timeDiff = now - x\r\n        timeDiff /= 1000\r\n\r\n        const seconds = Math.round(timeDiff)\r\n        timeDiff = Math.floor(timeDiff / 60)\r\n\r\n        const minutes = Math.round(timeDiff % 60)\r\n        timeDiff = Math.floor(timeDiff / 60)\r\n\r\n        const hours = Math.round(timeDiff % 24)\r\n        timeDiff = Math.floor(timeDiff / 24)\r\n\r\n        const days = Math.round(timeDiff % 365)\r\n        timeDiff = Math.floor(timeDiff / 365)\r\n\r\n        const years = timeDiff\r\n\r\n        if (years > 0) {\r\n            return `${years + (years > 1 ? ' Años ' : ' Año ')}`\r\n        } else if (days > 0) {\r\n            return `Hace ${days + (days > 1 ? ' Dias ' : ' Dia ')}`\r\n        } else if (hours > 0) {\r\n            return `Hace ${hours + (hours > 1 ? ' Horas ' : ' Hora ')}`\r\n        } else if (minutes > 0) {\r\n            return `Hace ${minutes + (minutes > 1 ? ' Minutos ' : ' Minuto ')}`\r\n        } else if (seconds > 0) {\r\n            return 'Hace '+ seconds + (seconds > 1 ? ' segundos' : 'justo ahora')\r\n        }\r\n\r\n        return ' Justo Ahora'\r\n      },\r\n  }\r\n}\r\n",{"version":3,"sources":["screenNotificacion.vue"],"names":[],"mappings":";AAwfile":"screenNotificacion.vue","sourceRoot":"src/views/pedidos/notificaciones","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"notificacion\" >\r\n        <span class=\"hideTipo\" id=\"notificacion\" style=\"width: 60px;height: 40px;background-color: #59E734;padding: 10px;position: relative;border-radius: 5px;color:white;position: absolute;right: 15px;bottom: 15px;\"><ion-icon name=\"checkmark-outline\" style=\"font-size: 22px;margin-left: 12px;font-weight: bold;\"></ion-icon></span>\r\n    </div>\r\n      <div class=\"container\">\r\n          <div class=\"leftSide\">\r\n              <!-- Search Chat -->\r\n              <div class=\"search_chat\">\r\n                  <div class=\"flex\" style=\"justify-content: space-around;\">\r\n                    <div>\r\n                      <p class=\"font-bold\" style=\"text-shadow: 0px 0px 0px #000;\">Chats</p>\r\n                    </div>\r\n                    <div>\r\n                      <span class=\"cursor-pointer\" @click=\"pedido={};arregloRespuestas = [];getNotificaciones()\">\r\n                        <img width=\"20\" src=\"https://cdn-icons-png.flaticon.com/512/2267/2267901.png\"/>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n              </div>\r\n              <div class=\"search_chat\">\r\n                <div>\r\n                  <input type=\"text\" v-model=\"busqueda\" placeholder=\"Buscar escuela\">\r\n                  <ion-icon name=\"search-outline\"></ion-icon>\r\n                </div>\r\n              </div>\r\n              <!-- CHAT LIST -->\r\n              <div class=\"chatlist\">\r\n                <div  class=\"block unread\" v-for=\"(tr,key) in tmparregloNotificaciones\" :key=\"key\" @click=\"pedido=tr;mostrarMensajes(tr)\">\r\n                  <div class=\"details\" >\r\n                    <div class=\"listHead\">\r\n                      <h4  style=\"font-size: 12px!important;\">{{ tr.nombreInstitucion }}  </h4>\r\n                      <p class=\"time\">{{ elapsedTime(tr.contadorMensajes[0].created_at) }}</p>\r\n                    </div>\r\n                    <div class=\"message_p\">\r\n                      <p>\r\n                        {{ tr.contadorMensajes[0].comentario }}\r\n                      </p>\r\n                      <b v-if=\"tr.contadorVistos > 0\">{{  tr.contadorVistos }}</b>\r\n                    </div>\r\n                    <p class=\"mt-4\" style=\"font-size: 10px!important;\">Pedido #{{tr.id_pedido}}</p>\r\n                    <p style=\"font-size: 10px!important;\" v-if=\"usuario.id_group == 11\">Administrador ({{ getAdministradorMensaje(tr.contadorMensajes) }})</p>\r\n                    <p v-else style=\"font-size: 10px!important;\">{{ tr.asesor }}</p>\r\n                    <p style=\"font-size: 11px;\">{{tr.ciudad}}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n          </div>\r\n          <div class=\"rightSide\">\r\n              <div class=\"header\">\r\n                  <div class=\"imgText\"  v-if=\"arregloRespuestas.length > 0\">\r\n                      <h4>{{ usuario.id_group == 11 ? 'Administrador':pedido.asesor }}<br><span>online</span></h4>\r\n                  </div>\r\n                  <ul class=\"nav_icons\">\r\n                      <li><ion-icon name=\"ellipsis-vertical\"></ion-icon></li>\r\n                  </ul>\r\n              </div>\r\n\r\n              <!-- CHAT-BOX -->\r\n              <div class=\"chatbox\" id=\"tudiv\">\r\n                  <div v-for=\"(tr,key) in arregloRespuestas\" :key=\"key\">\r\n                      <div class=\"message my_msg\" v-if=\"tr.id_group == usuario.id_group\">\r\n                        <p>{{ tr.comentario }} <br>\r\n                          <span>{{ formatHorasMinutos(tr.created_at) }} ({{ formatoMes(tr.created_at)}})</span> <ion-icon name=\"checkmark-done-outline\"></ion-icon>\r\n                        </p>\r\n                      </div>\r\n                      <div class=\"message friend_msg\" v-else>\r\n\r\n                        <p>{{ tr.comentario }} <br>\r\n                          <span>{{ formatHorasMinutos(tr.created_at) }}  ({{ formatoMes(tr.created_at)}})</span>\r\n                          <span>{{ tr.rol }}</span>\r\n                        </p>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n              <!-- CHAT INPUT -->\r\n              <div class=\"chat_input\">\r\n                  <!-- <ion-icon name=\"happy-outline\"></ion-icon> -->\r\n                  <!-- <ion-icon name=\"happy-outline\"></ion-icon> -->\r\n                  <input type=\"text\" @keyup.enter=\"respuestaComentario()\" v-model=\"respuesta\" placeholder=\"Escriba el mensaje\">\r\n                  <!-- <ion-icon name=\"mic\"></ion-icon> -->\r\n                  <ion-icon name=\"send-outline\" @click=\"respuestaComentario()\"></ion-icon>\r\n              </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport io from \"socket.io-client\";\r\nimport $ from 'jquery'\r\nimport moment from 'moment'\r\nexport default{\r\n  data(){\r\n      return{\r\n        arregloNotificaciones:[],\r\n        tmparregloNotificaciones:[],\r\n        usuario:[],\r\n        arregloRespuestas:[],\r\n        pedido:{},\r\n        counterDanger: false,\r\n        respuesta:'',\r\n        busqueda:'',\r\n        // socket: io(process.env.socket),\r\n        boleano:false,\r\n      }\r\n  },\r\n  props:{\r\n    cambiarNotificacion:{\r\n      type:Boolean,\r\n      default:false\r\n    },\r\n  },\r\n  watch:{\r\n    cambiarNotificacion(results){\r\n      let me = this;\r\n      me.arregloRespuestas = []\r\n      me.pedido            = {}\r\n      me.getNotificaciones()\r\n    },\r\n    busqueda(results){\r\n      let me = this;\r\n      me.arregloRespuestas = []\r\n      me.tmparregloNotificaciones = []\r\n      if(results.length == 0){\r\n        me.tmparregloNotificaciones = me.arregloNotificaciones\r\n      }else{\r\n        let datos = me.arregloNotificaciones\r\n        me.tmparregloNotificaciones = datos.filter(p => p.nombreInstitucion.toLowerCase().includes(results));\r\n      }\r\n    },\r\n    boleano(results){\r\n      let me = this\r\n      if(results == true){\r\n        me.boleano = false\r\n        setTimeout(() => {\r\n          me.createNotify()\r\n        }, \"2000\");\r\n      }\r\n    }\r\n  },\r\n  created(){\r\n    let me = this;\r\n    me.usuario = JSON.parse(localStorage.getItem(\"usuario\"))\r\n  },\r\n  mounted(){\r\n    let me = this\r\n    moment.locale('es')\r\n    me.getNotificaciones()\r\n    // try {\r\n    //   this.socket.on('enviar', (data) => {\r\n    //     //si el mensaje envia un asesor\r\n    //     if(data.tipo == 'pedidos_chat'){\r\n    //       //si el mensaje envia un asesor\r\n    //       if(data.grupo == 11){\r\n    //         me.getNotificaciones()\r\n    //         if(me.pedido == undefined){\r\n    //         }else{\r\n    //           me.mostrarMensajes(me.pedido)\r\n    //         }\r\n    //         return\r\n    //       }\r\n    //     }\r\n    //     //Si hay una notificacion de verificaciones\r\n    //     if(data.tipo == 'verificaciones'){\r\n    //       //si el mensaje envia un asesor\r\n    //       if(data.grupo == 11){\r\n    //         if(me.usuario.id_group == 22 || me.usuario.id_group == 23 || me.usuario.id_group == 1){\r\n    //           me.$emit('rechargeVerificaciones',true)\r\n    //         }\r\n    //         return\r\n    //       }\r\n    //     }\r\n    //     if(data.grupo == 22 || data.grupo == 23 || data.grupo == 25){\r\n    //       if(me.usuario.id_group == 11 && data.id_asesor == me.usuario.idusuario){\r\n    //         me.getNotificaciones()\r\n    //         if(me.pedido == undefined){\r\n    //         }else{\r\n    //           me.mostrarMensajes(me.pedido)\r\n    //         }\r\n\r\n    //         return\r\n    //       }\r\n    //     }\r\n    //   })\r\n    // } catch (error) {\r\n    //     console.log(error)\r\n    // }\r\n  },\r\n  methods:{\r\n      getAdministradorMensaje(tr){\r\n        var resultado = \"\"\r\n        for(let i =0; i<tr.length;i++){\r\n          if(tr[i].id_group == \"23\" || tr[i].id_group == \"22\" || tr[i].id_group == \"1\" || tr[i].id_group == \"25\"){\r\n            resultado = tr[i].usuario\r\n            break;\r\n          }\r\n        }\r\n        return resultado;\r\n      },\r\n      getNotificaciones(){\r\n        let me = this\r\n        var tipo = 0\r\n        if(me.usuario.id_group == 11){\r\n        //envia el asesor\r\n        tipo = 0\r\n        }else{\r\n        //envia un facturador\r\n        tipo = 1\r\n        }\r\n        this.$http.get(this.$server_url+'verNotificacionPedidos?tipo='+tipo)\r\n          .then(function (res) {\r\n            let datos = res.data\r\n            var resultado = 0\r\n            if(datos.length > 0){\r\n              if(me.usuario.id_group == 11){\r\n              me.arregloNotificaciones = datos.filter(p => p.id_asesor == me.usuario.idusuario)\r\n              }else{\r\n                me.arregloNotificaciones = datos\r\n              }\r\n              me.tmparregloNotificaciones = me.arregloNotificaciones\r\n              //contar No vistos\r\n              resultado =  me.arregloNotificaciones.reduce((acc,valor) =>{\r\n              const respuesta = acc+ valor.contadorVistos\r\n              return respuesta\r\n              },0)\r\n            }\r\n            me.$emit('ChangecantidadMensajes',resultado)\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error + ' error');\r\n              // me.$vs.loading.close()\r\n          })\r\n      },\r\n      mostrarMensajes(tr){\r\n        let me = this\r\n        var tipo = 0\r\n        me.respuesta = ''\r\n        me.$vs.loading()\r\n        //me.arregloRespuestas = []\r\n        this.$http.get(this.$server_url+'mostrarMensajesPedido?id_pedido='+tr.id_pedido+'&id_group='+me.usuario.id_group)\r\n        .then(function (res) {\r\n          me.$vs.loading.close()\r\n          me.arregloRespuestas = res.data\r\n          me.bajar()\r\n          me.getNotificaciones()\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error + ' error');\r\n          me.$vs.loading.close()\r\n        })\r\n      },\r\n      bajar(){\r\n        $(document).ready(function() {\r\n          $(\"#tudiv\").animate({ scrollTop: \"+=55550px\" }, 800);\r\n        });\r\n      },\r\n      respuestaComentario(){\r\n        let me = this;\r\n        if(me.pedido.id_pedido == undefined || me.pedido.id_pedido == null || me.pedido.id_pedido == \"\"){\r\n          me.$vs.notify({\r\n            color: 'primary',\r\n            title: 'Mensaje',\r\n            text: 'Debe seleccionar un chat para enviar mensajes por favor'\r\n            })\r\n          return false;\r\n        }\r\n        if(me.respuesta.length >= 500){\r\n          me.$vs.notify({\r\n            color: 'primary',\r\n            title: 'Mensaje',\r\n            text: 'El motivo del ticket debe tener un maximo de 500 caracteres'\r\n            })\r\n          return false;\r\n        }\r\n          if(me.respuesta.length < 2){\r\n          me.$vs.notify({\r\n            color: 'primary',\r\n            title: 'Mensaje',\r\n            text: 'El motivo del ticket debe tener al menos 2 caracteres.'\r\n            })\r\n          return false;\r\n        }\r\n        let formData = new FormData();\r\n        formData.append('id_pedido',  me.pedido.id_pedido);\r\n        formData.append('comentario', me.respuesta);\r\n        formData.append('id_usuario', me.usuario.idusuario);\r\n        formData.append('id_group',   me.usuario.id_group)\r\n        me.$vs.loading();\r\n        this.$http.post(this.$server_url+'guardar_comentario', formData)\r\n          .then(function (res) {\r\n            me.$vs.loading.close()\r\n            me.boleano = true\r\n            me.getNotificaciones()\r\n            if(me.respuesta){\r\n              let datos = {\r\n                id_asesor:  me.pedido.id_asesor,\r\n                emisor:     me.usuario.idusuario,\r\n                grupo:      me.usuario.id_group,\r\n                tipo:       \"pedidos_chat\"\r\n              }\r\n              // me.sendSocket(datos)\r\n              me.mostrarMensajes(me.pedido)\r\n            }\r\n            me.createNotify()\r\n            // me.$vs.notify({\r\n            //   color: 'primary',\r\n            //   iconPack: 'feather',\r\n            //   icon: 'icon-check',\r\n            //   time:18000,\r\n            // })\r\n\r\n          })\r\n          .catch(function (error) {\r\n            me.$vs.loading.close()\r\n          })\r\n      },\r\n      createNotify(){\r\n        let me = this;\r\n        const tipo = document.querySelector(\"#notificacion\");\r\n        if(me.boleano){\r\n          tipo.classList.remove(\"hideTipo\");\r\n          tipo.classList.toggle(\"showTipo\");\r\n        }else{\r\n          tipo.classList.remove(\"showTipo\");\r\n          tipo.classList.toggle(\"hideTipo\");\r\n        }\r\n      },\r\n      // sendSocket(datos){\r\n      //   try {\r\n      //     this.socket.emit(\"enviar\", datos);\r\n      //     } catch (error) {\r\n      //       console.log(error)\r\n      //     }\r\n      // },\r\n      formatHorasMinutos(fecha){\r\n        let me = this;\r\n        const setFecha = moment(fecha).format('HH:mm')\r\n        return setFecha\r\n      },\r\n      formatoMes(fecha){\r\n        const setFecha = moment(fecha).format('MMMM')\r\n        const mes = setFecha.replace(/^\\w/, (c) => c.toUpperCase()).substring(0,3)\r\n        const year = moment(fecha).format('YYYY')\r\n        const day = moment(fecha).format('DD')\r\n        const resultado = year + \"-\" + mes + \"-\"+day\r\n        return resultado\r\n      },\r\n      elapsedTime(startTime) {\r\n        const x = new Date(startTime)\r\n        const now = new Date()\r\n        let timeDiff = now - x\r\n        timeDiff /= 1000\r\n\r\n        const seconds = Math.round(timeDiff)\r\n        timeDiff = Math.floor(timeDiff / 60)\r\n\r\n        const minutes = Math.round(timeDiff % 60)\r\n        timeDiff = Math.floor(timeDiff / 60)\r\n\r\n        const hours = Math.round(timeDiff % 24)\r\n        timeDiff = Math.floor(timeDiff / 24)\r\n\r\n        const days = Math.round(timeDiff % 365)\r\n        timeDiff = Math.floor(timeDiff / 365)\r\n\r\n        const years = timeDiff\r\n\r\n        if (years > 0) {\r\n            return `${years + (years > 1 ? ' Años ' : ' Año ')}`\r\n        } else if (days > 0) {\r\n            return `Hace ${days + (days > 1 ? ' Dias ' : ' Dia ')}`\r\n        } else if (hours > 0) {\r\n            return `Hace ${hours + (hours > 1 ? ' Horas ' : ' Hora ')}`\r\n        } else if (minutes > 0) {\r\n            return `Hace ${minutes + (minutes > 1 ? ' Minutos ' : ' Minuto ')}`\r\n        } else if (seconds > 0) {\r\n            return 'Hace '+ seconds + (seconds > 1 ? ' segundos' : 'justo ahora')\r\n        }\r\n\r\n        return ' Justo Ahora'\r\n      },\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n/*SHOW / SHOW*/\r\n.showTipo{\r\n  transition: 1s ease all;\r\n  opacity: 1;\r\n  transform: translateY(0%);\r\n}\r\n.hideTipo{\r\n  opacity:0;\r\n  position: relative;\r\n  transition: 1s ease all;\r\n  transform: translateY(-30%);\r\n}\r\n.vs-notifications{\r\n  max-width: 50px!important;\r\n}\r\n.vs-noti-bottom-right{\r\n  max-width: 50px!important;\r\n}\r\n.vs-noti-primary{\r\n  max-width: 50px!important;\r\n}\r\n.activeNoti{\r\n  max-width: 50px!important;\r\n}\r\n.content-noti{\r\n  max-width: 50px!important;\r\n}\r\n.contenedor{\r\n  position: relative;\r\n  display: inline-block;\r\n  text-align: center;\r\n}\r\n.texto-encima{\r\n  position: absolute;\r\n  top: 2px;\r\n  right:  -8px;\r\n  color: white;\r\n  z-index: 1000;\r\n  font-weight: bold;\r\n  font-size: 20px;\r\n  text-shadow: 1px 1px 2px #000;\r\n  background-color: red;\r\n  border-radius: 50%;\r\n  width: 30px;\r\n  height: 30px;\r\n  padding: 1px;\r\n}\r\n/* .centrado{\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n} */\r\n* {\r\nmargin: 0;\r\npadding: 0;\r\nbox-sizing: border-box;\r\nfont-family: Arial, Helvetica, sans-serif;\r\n}\r\n\r\nbody {\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\nmin-height: 100vh;\r\nbackground: linear-gradient(\r\n  #009688 0%,\r\n  #009688 130px,\r\n  #d9dbd5 130px,\r\n  #d9dbd5 100%\r\n);\r\n}\r\n\r\n.container {\r\nposition: relative;\r\nwidth: 100%;\r\nmax-width: 100%;\r\nheight: calc(100vh - 200px);\r\nbackground: #fff;\r\nbox-shadow: 0 1px 1px rgba(0, 0, 0, 0.06), 0 2px 5px 0 rgba(0, 0, 0, 0.06);\r\ndisplay: flex;\r\n}\r\n\r\n.container .leftSide {\r\nposition: relative;\r\nflex: 30%;\r\nbackground: #fff;\r\nborder-right: 1px solid rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.container .rightSide {\r\nposition: relative;\r\nflex: 70%;\r\nbackground: #e5ddd5;\r\n}\r\n\r\n.container .rightSide::before {\r\ncontent: \"\";\r\nposition: absolute;\r\ntop: 0;\r\nleft: 0;\r\nwidth: 100%;\r\nheight: 100%;\r\nbackground: url(\"../../../assets/images/home/pedidos/pattern.png\");\r\nopacity: 0.06;\r\n}\r\n\r\n.header {\r\nposition: relative;\r\nwidth: 100%;\r\nheight: 60px;\r\nbackground: #ededed;\r\ndisplay: flex;\r\njustify-content: space-between;\r\nalign-items: center;\r\npadding: 0 15px;\r\n}\r\n\r\n.userimg {\r\nposition: relative;\r\nwidth: 40px;\r\nheight: 40px;\r\noverflow: hidden;\r\nborder-radius: 50%;\r\ncursor: pointer;\r\n}\r\n\r\n.cover {\r\nposition: absolute;\r\ntop: 0;\r\nleft: 0;\r\nwidth: 100%;\r\nheight: 100%;\r\nobject-fit: cover;\r\n}\r\n\r\n.nav_icons {\r\ndisplay: flex;\r\n}\r\n\r\n.nav_icons li {\r\ndisplay: flex;\r\nlist-style: none;\r\ncursor: pointer;\r\ncolor: #51585c;\r\nfont-size: 1.5em;\r\nmargin-left: 22px;\r\n}\r\n\r\n.search_chat {\r\nposition: relative;\r\nwidth: 100%;\r\nheight: 60px;\r\nbackground: #f6f6f6;\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\npadding: 0  15px;\r\n}\r\n\r\n.search_chat div {\r\nwidth: 100%;\r\n}\r\n\r\n.search_chat div input {\r\nwidth: 100%;\r\noutline: none;\r\nborder: none;\r\nbackground: #fff;\r\npadding: 6px;\r\nheight: 38px;\r\nborder-radius: 30px;\r\nfont-size: 14px;\r\npadding-left: 40px;\r\n}\r\n\r\n.search_chat div input::placeholder {\r\ncolor: #bbb;\r\n}\r\n\r\n.search_chat div ion-icon {\r\nposition: absolute;\r\nleft: 30px;\r\ntop: 20px;\r\nfont-size: 1.2em;\r\n}\r\n\r\n.chatlist {\r\nposition: relative;\r\nheight: calc(100% - 110px);\r\noverflow: auto;\r\n}\r\n\r\n.chatlist .block {\r\nposition: relative;\r\nwidth: 100%;\r\ndisplay: flex;\r\nalign-items: center;\r\npadding: 15px;\r\nborder-bottom: 1px solid rgba(0, 0, 0, 0.06);\r\ncursor: pointer;\r\n}\r\n\r\n.chatlist .block.active {\r\nbackground: #ebebeb;\r\n}\r\n\r\n.chatlist .block:hover {\r\nbackground: #f5f5f5;\r\n}\r\n\r\n.chatlist .block .imgBox {\r\nposition: relative;\r\nmin-width: 45px;\r\nheight: 45px;\r\noverflow: hidden;\r\nborder-radius: 50%;\r\nmargin-right: 10px;\r\nwidth: 50px;\r\n}\r\n\r\n.chatlist .block .details {\r\nposition: relative;\r\nwidth: 100%;\r\n}\r\n\r\n.chatlist .block .details .listHead {\r\ndisplay: flex;\r\njustify-content: space-between;\r\nmargin-bottom: 5px;\r\n}\r\n\r\n.chatlist .block .details .listHead h4 {\r\nfont-size: 13px;\r\nfont-weight: 600;\r\ncolor: #111;\r\n}\r\n\r\n.chatlist .block .details .listHead .time {\r\nfont-size: 0.75em;\r\ncolor: #aaa;\r\n}\r\n\r\n.chatlist .block .details .listHead .time {\r\ncolor: #111;\r\n}\r\n\r\n.chatlist .block.unread .details .listHead .time {\r\ncolor: #06d755;\r\n}\r\n\r\n.message_p {\r\ndisplay: flex;\r\njustify-content: space-between;\r\nalign-items: center;\r\n}\r\n\r\n.message_p b {\r\nbackground: #06d755;\r\ncolor: #fff;\r\nmin-width: 20px;\r\nheight: 20px;\r\nborder-radius: 50%;\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\nfont-size: 0.75rem;\r\n}\r\n\r\n.message_p p {\r\ncolor: #aaa;\r\ndisplay: -webkit-box;\r\n-webkit-line-clamp: 1;\r\nfont-size: 0.9em;\r\n-webkit-box-orient: vertical;\r\noverflow: hidden;\r\ntext-overflow: ellipsis;\r\nfont-size: 11px;\r\n}\r\n\r\n.imgText {\r\nposition: relative;\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\n}\r\n\r\n.imgText h4 {\r\nfont-weight: 500;\r\nline-height: 1.2em;\r\nmargin-left: 15px;\r\nfont-size: 14px;\r\n}\r\n\r\n.imgText h4 span {\r\nfont-size: 0.8em;\r\ncolor: #555;\r\n}\r\n\r\n/* CHAT BOX */\r\n.chatbox {\r\nposition: relative;\r\nwidth: 100%;\r\nheight: calc(100% - 120px);\r\npadding: 50px;\r\noverflow-y: auto;\r\n}\r\n\r\n.message {\r\nposition: relative;\r\ndisplay: flex;\r\nwidth: 100%;\r\nmargin: 5px 0;\r\nmin-width: 100px!important;\r\n}\r\n\r\n.message p {\r\nposition: relative;\r\nright: 0;\r\ntext-align: right;\r\nmax-width: 65%;\r\npadding: 12px;\r\nbackground: #dcf8c8;\r\nborder-radius: 10px;\r\nfont-size: 0.9em;\r\n}\r\n\r\n.message p::before {\r\ncontent: \"\";\r\nposition: absolute;\r\ntop: 0;\r\nright: -12px;\r\nwidth: 20px;\r\nheight: 20px;\r\nbackground: linear-gradient(\r\n  135deg,\r\n  #dcf8c6 0%,\r\n  #dcf8c6 50%,\r\n  transparent 50%,\r\n  transparent\r\n);\r\n}\r\n\r\n.message p span {\r\ndisplay: block;\r\nmargin-top: 5px;\r\nfont-size: 0.85em;\r\nopacity: 0.5;\r\n}\r\n\r\n.my_msg {\r\njustify-content: flex-end;\r\n}\r\n\r\n.friend_msg {\r\njustify-content: flex-start;\r\n}\r\n\r\n.friend_msg p {\r\nbackground: #fff;\r\ntext-align: left;\r\n}\r\n\r\n.message.friend_msg p::before {\r\ncontent: \"\";\r\nposition: absolute;\r\ntop: 0;\r\nleft: -12px;\r\nwidth: 20px;\r\nheight: 20px;\r\nbackground: linear-gradient(\r\n  225deg,\r\n  #fff 0%,\r\n  #fff 50%,\r\n  transparent 50%,\r\n  transparent\r\n);\r\n}\r\n\r\n.chat_input {\r\nposition: relative;\r\nwidth: 100%;\r\nheight: 60px;\r\nbackground: #f0f0f0;\r\npadding: 15px;\r\ndisplay: flex;\r\njustify-content: space-between;\r\nalign-items: center;\r\n}\r\n\r\n.chat_input ion-icon {\r\ncursor: pointer;\r\nfont-size: 1.8em;\r\ncolor: #51585c;\r\n}\r\n\r\n.chat_input ion-icon:nth-child(1) {\r\nmargin-right: 15px;\r\n}\r\n\r\n.chat_input input {\r\nposition: relative;\r\nwidth: 90%;\r\nmargin: 0 20px;\r\npadding: 10px 20px;\r\nborder: none;\r\noutline: none;\r\nborder-radius: 30px;\r\nfont-size: 1em;\r\n}\r\n\r\n</style>\r\n"]}]}