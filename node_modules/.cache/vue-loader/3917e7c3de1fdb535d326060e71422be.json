{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\pedidos\\bodega\\BodegaListadoDevoluciones.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\pedidos\\bodega\\BodegaListadoDevoluciones.vue","mtime":1712682816258},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\n    import DetalleDevolucionVue from '../components/Guias/devolucionGuias/components/DetalleDevolucion.vue'\r\n    import exportActaGuiasBodegaDevolucionVue from '../../temporadas/components/exportActaGuiasBodegaDevolucion.vue';\r\n    import vSelect from 'vue-select';\r\n    export default {\r\n        name: 'lista-de-contratos-gerencia',\r\n        components: {\r\n            'v-select': vSelect,\r\n            DetalleDevolucionVue,\r\n            exportActaGuiasBodegaDevolucionVue\r\n        },\r\n        data() {\r\n            return {\r\n                usuario:[],\r\n                listaContratos: [],\r\n                listaContratosTmp: [],\r\n                pedido:{},\r\n                noroot: '',\r\n                tipo_pedido: 0,\r\n                filtro: 0,\r\n                totalLibros: 0,\r\n                //variables para exportar\r\n                mostrarImprimirActa:false,\r\n                popupCarga:false,\r\n                //fin variables para exporta el acta\r\n                //variables para el detalle de guias\r\n                arregloDetalle:[],\r\n                popupDetalles:false,\r\n                //fin variables para el detalle de guias\r\n            }\r\n        },\r\n        computed: {\r\n            sumaPendientes() {\r\n                let me = this;\r\n                let datos = me.listaContratosTmp.filter(p => (p.estado == 0));\r\n                let resultado = datos.length\r\n                return resultado\r\n            },\r\n            SumaEntregados() {\r\n                let me = this;\r\n                let datos = me.listaContratosTmp.filter(p => (p.estado == 1));\r\n                let resultado = datos.length\r\n                return resultado\r\n            },\r\n            SumaRechazados() {\r\n                let me = this;\r\n                let datos = me.listaContratosTmp.filter(p => (p.estado == 2));\r\n                let resultado = datos.length\r\n                return resultado\r\n            },\r\n        },\r\n        mounted() {\r\n            let me = this;\r\n            me.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n            me.f_pedidos()\r\n        },\r\n        methods: {\r\n            changeHandle(e) {\r\n                let me                  = this;\r\n                me.popupCarga           = false\r\n                me.mostrarImprimirActa  = false\r\n            },\r\n            ImprimirActa(){\r\n                let me                  = this;\r\n                me.popupCarga           = true\r\n                me.mostrarImprimirActa  = true\r\n            },\r\n            f_pedidos() {\r\n                let me = this;\r\n                me.$vs.loading()\r\n                this.$http.get(this.$server_url + 'guias?listadoGuias=yes')\r\n                    .then((res) => {\r\n                        var predatos = []\r\n                        let datos = res.data\r\n                        if( me.usuario.id_group == 22 || me.usuario.id_group == 23 || me.usuario.id_group == 1 ){\r\n                            predatos= datos.filter(p => p.pedido_facturacion == 1)\r\n                        }\r\n                        if( me.usuario.id_group == 17 || me.usuario.id_group == 27 ){\r\n                            predatos= datos.filter(p => p.pedido_bodega == 1)\r\n                        }\r\n                        if( me.usuario.id_group == 11 || me.usuario.id_group == 11 ){\r\n                            predatos= datos.filter(p => p.pedido_asesor == 1)\r\n                        }\r\n                        \r\n                        me.listaContratosTmp = predatos.filter(p => p.cantidad_devolver != 0)\r\n                        me.filtroTipo();\r\n                        me.$vs.loading.close()\r\n                    }).catch((err) => {\r\n                        console.log(err)\r\n                        me.$vs.loading.close()\r\n                    });\r\n            },\r\n            filtroTipo() {\r\n                let me = this;\r\n                me.listaContratos = []\r\n                //pendientes\r\n                if (me.filtro == 0) {\r\n                    let datos = me.listaContratosTmp.filter(p => (p.estado == 0));\r\n                    me.listaContratos = datos\r\n                    return\r\n                }\r\n                //aprobados\r\n                if (me.filtro == 1) {\r\n                    let datos = me.listaContratosTmp.filter(p => (p.estado == 1));\r\n                    me.listaContratos = datos\r\n                    return\r\n                }\r\n                //aprobados\r\n                if (me.filtro == 2) {\r\n                    let datos = me.listaContratosTmp.filter(p => (p.estado == 2));\r\n                    me.listaContratos = datos\r\n                    return\r\n                }\r\n            },\r\n            getDetalles(tr) {\r\n                let me = this;\r\n                me.arregloDetalle = []\r\n                me.$vs.loading();\r\n                this.$http.get(this.$server_url+'guias?detalle=yes&id='+tr.id)\r\n                    .then(function (res) {\r\n                        let datos = res.data\r\n                        me.arregloDetalle = datos.filter(p => p.cantidad_devuelta > 0)\r\n                        me.popupDetalles  = true\r\n                        me.$vs.loading.close()\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(error + ' error');\r\n                        me.$vs.loading.close()\r\n                    })\r\n            },\r\n            openConfirm(){\r\n                this.$vs.dialog({\r\n                    type:'confirm',\r\n                    color: 'danger',\r\n                    title: `Confirmar`,\r\n                    acceptText:'aceptar',\r\n                    cancelText:'cancelar',\r\n                    text: 'Esta seguro de recibir esta devoluci√≥n de guias?',\r\n                    accept:this.enviarGuiasBDMilton\r\n                })\r\n            },\r\n            enviarGuiasBDMilton(){\r\n                let me = this;\r\n                //validacion \r\n                if(me.pedido.codigo_contrato == null || me.pedido.codigo_contrato == \"\" || me.pedido.codigo_contrato == undefined || me.pedido.iniciales == \"\" || me.pedido.iniciales == null || me.pedido.iniciales == \"null\"){\r\n                    me.$vs.notify({\r\n                        text: 'El codigo del periodo o las iniciales del asesor no estan configuradas',\r\n                        color: 'warning',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-alert-triangle'\r\n                    })\r\n                }\r\n                let formData = new FormData();\r\n                formData.append('id_pedido',            me.pedido.id)\r\n                formData.append('codigo_contrato',      me.pedido.codigo_contrato)\r\n                formData.append('iniciales',            me.pedido.iniciales);\r\n                formData.append('region_idregion',      me.pedido.region_idregion)\r\n                formData.append('id_periodo',           me.pedido.periodo_id)\r\n                me.$vs.loading()\r\n                this.$http.post(this.$server_url+'guardarDevolucionBDMilton', formData)\r\n                .then(function (res) {\r\n                    me.$vs.loading.close()\r\n                    if(res.data.status == 0){\r\n                        me.$vs.notify({\r\n                            text: res.data.message,\r\n                            color: 'danger',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-alert-triangle',\r\n                            time:3000\r\n                        })\r\n                        return\r\n                    }\r\n                    me.$vs.notify({\r\n                        text: 'Se guardo correctamente',\r\n                        color: 'primary',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-alert-triangle'\r\n                    })\r\n                    me.f_pedidos()\r\n                    me.actualizarBodegaProlipa(res.data)\r\n                })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close()\r\n                    me.$vs.notify({\r\n                        text: 'No se puedo guardar',\r\n                        color: 'danger',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-alert-triangle'\r\n                    })\r\n                })\r\n            },\r\n            actualizarBodegaProlipa(ven_codigo) {\r\n                let me = this\r\n                me.$vs.loading();\r\n                let formData = new FormData();\r\n                formData.append('devolverGuias' ,'yes')\r\n                formData.append('acta'          , ven_codigo)\r\n                formData.append('asesor_id'     , this.pedido.asesor_id)\r\n                this.$http.post(this.$server_url + 'entregarPedido', formData)\r\n                    .then(res => {\r\n                        // me.f_notificaciones('Pedido entregado', 'success', 'check')\r\n                        me.f_pedidos();\r\n                        me.$vs.loading.close();\r\n                    })\r\n                    .catch(err => {\r\n                        console.log(err)\r\n                        me.$vs.loading.close();\r\n                    })\r\n            },\r\n            f_notificaciones(msj, color, icono) {\r\n                let me = this;\r\n                me.$vs.notify({\r\n                    text: msj,\r\n                    color: color,\r\n                    iconPack: 'feather',\r\n                    icon: icono\r\n                })\r\n                return;\r\n            }\r\n        },\r\n    }\r\n    ",{"version":3,"sources":["BodegaListadoDevoluciones.vue"],"names":[],"mappings":";AAyfile":"BodegaListadoDevoluciones.vue","sourceRoot":"src/views/pedidos/bodega","sourcesContent":["<template>\r\n    <div>\r\n        <div>\r\n            <vs-radio class=\"m-3\" v-model=\"filtro\" @input=\"filtroTipo();\" vs-name=\"radios1tipo\" vs-value=\"0\"><b>{{ sumaPendientes  }}</b> Pendientes</vs-radio>\r\n            <vs-radio class=\"m-3\" v-model=\"filtro\" @input=\"filtroTipo();\" vs-name=\"radios1tipo\" vs-value=\"1\"><b>{{ SumaEntregados }}</b> Entregados</vs-radio>\r\n            <vs-radio class=\"m-3\" v-model=\"filtro\" @input=\"filtroTipo();\" vs-name=\"radios1tipo\" vs-value=\"2\"><b>{{ SumaRechazados }}</b> Rechazados</vs-radio>\r\n        </div>\r\n        <div class=\"m-2 mb-4\">\r\n            <vs-table search :data=\"listaContratos\">\r\n                <template slot=\"header\">\r\n                    <vs-chip color=\"primary\" class=\"ml-1\">Cantidad: {{listaContratos.length}}</vs-chip>\r\n                </template>\r\n                <template slot=\"thead\">\r\n                    <vs-th width=\"25%\" sort-key=\"apellidos\">Asesor / Responsable</vs-th>\r\n                    <vs-th width=\"30%\" sort-key=\"total_venta\">detalles</vs-th>\r\n                    <vs-th>Acciones</vs-th>\r\n                </template>\r\n                <template slot-scope=\"{data}\">\r\n                    <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                        <vs-td> \r\n                            <small>id: </small> {{tr.id}} <br />\r\n                            <small><b>Acta:</b></small> {{ tr.ven_codigo }}<br />\r\n                            <small><b>Asesor:</b></small> {{tr.asesor }}<br />\r\n                            <vs-chip color=\"primary\">{{ tr.periodo }}</vs-chip>\r\n                        </vs-td>\r\n                        <vs-td >\r\n                            <small v-if=\"tr.estado == 1\"><b>Fecha bodega recibe: </b></small> <span> {{tr.fecha_aprobacion != null ?  tr.fecha_aprobacion: ''}}</span><br />\r\n                        </vs-td>\r\n                        <vs-td>\r\n                            <div class=\"flex\">\r\n                                <vs-button class=\"m-1\" icon=\"visibility\" type=\"border\" @click=\"getDetalles(tr)\">ver guias</vs-button>\r\n                                <vs-button v-if=\"tr.estado > 0\" class=\"m-1\" icon-pack=\"feather\" icon=\"icon-printer\" type=\"border\" color=\"dark\" @click=\"pedido = tr;ImprimirActa(tr)\">Imprimir acta</vs-button>\r\n                                <vx-tooltip style=\"display: inline-block;\" text=\"Marcar como guias recibidas por el asesor\" position=\"top\" color=\"dark\">\r\n                                    <vs-button v-if=\"tr.estado == 0\" class=\"m-1\" icon=\"check\" type=\"border\" color=\"warning\" @click=\"pedido = tr;openConfirm(tr)\">Recibir guias</vs-button>\r\n                                </vx-tooltip>\r\n                            </div>\r\n                        </vs-td>\r\n                    </vs-tr>\r\n                </template>\r\n            </vs-table>\r\n        </div>\r\n        <!--MODAL CARGAR-->\r\n        <vs-popup class=\"holamundo\" title=\"Cargando\" :active.sync=\"popupCarga\">\r\n            <p class=\"text-warning text-3xl bg-dark\"><i class=\"fa-solid fa-cloud\"></i> <b class=\"ml-2\">Espere mientras se descarga el archivo</b></p>\r\n            <img class=\"mt-2\" style=\"margin-left: 35px;\" src=\"https://cdn-icons-png.flaticon.com/512/4578/4578845.png\" />\r\n        </vs-popup>\r\n        <!--DETALLES-->\r\n        <vs-popup class=\"holamundo\" fullscreen :title=\"'Detalles de la Devoluci√≥n'\" :active.sync=\"popupDetalles\">\r\n            <DetalleDevolucionVue v-if=\"popupDetalles\" :arregloDetalle=\"arregloDetalle\"/>\r\n        </vs-popup>\r\n        <!--EXPORTAR ACTA BODEGA - ASESOR-->\r\n        <div v-if=\"mostrarImprimirActa\">\r\n            <exportActaGuiasBodegaDevolucionVue style=\"display: none;\" :pedido = \"pedido\" @change=\"changeHandle\"/>\r\n        </div>\r\n    </div>\r\n    </template>\r\n    <script>\r\n    import DetalleDevolucionVue from '../components/Guias/devolucionGuias/components/DetalleDevolucion.vue'\r\n    import exportActaGuiasBodegaDevolucionVue from '../../temporadas/components/exportActaGuiasBodegaDevolucion.vue';\r\n    import vSelect from 'vue-select';\r\n    export default {\r\n        name: 'lista-de-contratos-gerencia',\r\n        components: {\r\n            'v-select': vSelect,\r\n            DetalleDevolucionVue,\r\n            exportActaGuiasBodegaDevolucionVue\r\n        },\r\n        data() {\r\n            return {\r\n                usuario:[],\r\n                listaContratos: [],\r\n                listaContratosTmp: [],\r\n                pedido:{},\r\n                noroot: '',\r\n                tipo_pedido: 0,\r\n                filtro: 0,\r\n                totalLibros: 0,\r\n                //variables para exportar\r\n                mostrarImprimirActa:false,\r\n                popupCarga:false,\r\n                //fin variables para exporta el acta\r\n                //variables para el detalle de guias\r\n                arregloDetalle:[],\r\n                popupDetalles:false,\r\n                //fin variables para el detalle de guias\r\n            }\r\n        },\r\n        computed: {\r\n            sumaPendientes() {\r\n                let me = this;\r\n                let datos = me.listaContratosTmp.filter(p => (p.estado == 0));\r\n                let resultado = datos.length\r\n                return resultado\r\n            },\r\n            SumaEntregados() {\r\n                let me = this;\r\n                let datos = me.listaContratosTmp.filter(p => (p.estado == 1));\r\n                let resultado = datos.length\r\n                return resultado\r\n            },\r\n            SumaRechazados() {\r\n                let me = this;\r\n                let datos = me.listaContratosTmp.filter(p => (p.estado == 2));\r\n                let resultado = datos.length\r\n                return resultado\r\n            },\r\n        },\r\n        mounted() {\r\n            let me = this;\r\n            me.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n            me.f_pedidos()\r\n        },\r\n        methods: {\r\n            changeHandle(e) {\r\n                let me                  = this;\r\n                me.popupCarga           = false\r\n                me.mostrarImprimirActa  = false\r\n            },\r\n            ImprimirActa(){\r\n                let me                  = this;\r\n                me.popupCarga           = true\r\n                me.mostrarImprimirActa  = true\r\n            },\r\n            f_pedidos() {\r\n                let me = this;\r\n                me.$vs.loading()\r\n                this.$http.get(this.$server_url + 'guias?listadoGuias=yes')\r\n                    .then((res) => {\r\n                        var predatos = []\r\n                        let datos = res.data\r\n                        if( me.usuario.id_group == 22 || me.usuario.id_group == 23 || me.usuario.id_group == 1 ){\r\n                            predatos= datos.filter(p => p.pedido_facturacion == 1)\r\n                        }\r\n                        if( me.usuario.id_group == 17 || me.usuario.id_group == 27 ){\r\n                            predatos= datos.filter(p => p.pedido_bodega == 1)\r\n                        }\r\n                        if( me.usuario.id_group == 11 || me.usuario.id_group == 11 ){\r\n                            predatos= datos.filter(p => p.pedido_asesor == 1)\r\n                        }\r\n                        \r\n                        me.listaContratosTmp = predatos.filter(p => p.cantidad_devolver != 0)\r\n                        me.filtroTipo();\r\n                        me.$vs.loading.close()\r\n                    }).catch((err) => {\r\n                        console.log(err)\r\n                        me.$vs.loading.close()\r\n                    });\r\n            },\r\n            filtroTipo() {\r\n                let me = this;\r\n                me.listaContratos = []\r\n                //pendientes\r\n                if (me.filtro == 0) {\r\n                    let datos = me.listaContratosTmp.filter(p => (p.estado == 0));\r\n                    me.listaContratos = datos\r\n                    return\r\n                }\r\n                //aprobados\r\n                if (me.filtro == 1) {\r\n                    let datos = me.listaContratosTmp.filter(p => (p.estado == 1));\r\n                    me.listaContratos = datos\r\n                    return\r\n                }\r\n                //aprobados\r\n                if (me.filtro == 2) {\r\n                    let datos = me.listaContratosTmp.filter(p => (p.estado == 2));\r\n                    me.listaContratos = datos\r\n                    return\r\n                }\r\n            },\r\n            getDetalles(tr) {\r\n                let me = this;\r\n                me.arregloDetalle = []\r\n                me.$vs.loading();\r\n                this.$http.get(this.$server_url+'guias?detalle=yes&id='+tr.id)\r\n                    .then(function (res) {\r\n                        let datos = res.data\r\n                        me.arregloDetalle = datos.filter(p => p.cantidad_devuelta > 0)\r\n                        me.popupDetalles  = true\r\n                        me.$vs.loading.close()\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(error + ' error');\r\n                        me.$vs.loading.close()\r\n                    })\r\n            },\r\n            openConfirm(){\r\n                this.$vs.dialog({\r\n                    type:'confirm',\r\n                    color: 'danger',\r\n                    title: `Confirmar`,\r\n                    acceptText:'aceptar',\r\n                    cancelText:'cancelar',\r\n                    text: 'Esta seguro de recibir esta devoluci√≥n de guias?',\r\n                    accept:this.enviarGuiasBDMilton\r\n                })\r\n            },\r\n            enviarGuiasBDMilton(){\r\n                let me = this;\r\n                //validacion \r\n                if(me.pedido.codigo_contrato == null || me.pedido.codigo_contrato == \"\" || me.pedido.codigo_contrato == undefined || me.pedido.iniciales == \"\" || me.pedido.iniciales == null || me.pedido.iniciales == \"null\"){\r\n                    me.$vs.notify({\r\n                        text: 'El codigo del periodo o las iniciales del asesor no estan configuradas',\r\n                        color: 'warning',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-alert-triangle'\r\n                    })\r\n                }\r\n                let formData = new FormData();\r\n                formData.append('id_pedido',            me.pedido.id)\r\n                formData.append('codigo_contrato',      me.pedido.codigo_contrato)\r\n                formData.append('iniciales',            me.pedido.iniciales);\r\n                formData.append('region_idregion',      me.pedido.region_idregion)\r\n                formData.append('id_periodo',           me.pedido.periodo_id)\r\n                me.$vs.loading()\r\n                this.$http.post(this.$server_url+'guardarDevolucionBDMilton', formData)\r\n                .then(function (res) {\r\n                    me.$vs.loading.close()\r\n                    if(res.data.status == 0){\r\n                        me.$vs.notify({\r\n                            text: res.data.message,\r\n                            color: 'danger',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-alert-triangle',\r\n                            time:3000\r\n                        })\r\n                        return\r\n                    }\r\n                    me.$vs.notify({\r\n                        text: 'Se guardo correctamente',\r\n                        color: 'primary',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-alert-triangle'\r\n                    })\r\n                    me.f_pedidos()\r\n                    me.actualizarBodegaProlipa(res.data)\r\n                })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close()\r\n                    me.$vs.notify({\r\n                        text: 'No se puedo guardar',\r\n                        color: 'danger',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-alert-triangle'\r\n                    })\r\n                })\r\n            },\r\n            actualizarBodegaProlipa(ven_codigo) {\r\n                let me = this\r\n                me.$vs.loading();\r\n                let formData = new FormData();\r\n                formData.append('devolverGuias' ,'yes')\r\n                formData.append('acta'          , ven_codigo)\r\n                formData.append('asesor_id'     , this.pedido.asesor_id)\r\n                this.$http.post(this.$server_url + 'entregarPedido', formData)\r\n                    .then(res => {\r\n                        // me.f_notificaciones('Pedido entregado', 'success', 'check')\r\n                        me.f_pedidos();\r\n                        me.$vs.loading.close();\r\n                    })\r\n                    .catch(err => {\r\n                        console.log(err)\r\n                        me.$vs.loading.close();\r\n                    })\r\n            },\r\n            f_notificaciones(msj, color, icono) {\r\n                let me = this;\r\n                me.$vs.notify({\r\n                    text: msj,\r\n                    color: color,\r\n                    iconPack: 'feather',\r\n                    icon: icono\r\n                })\r\n                return;\r\n            }\r\n        },\r\n    }\r\n    </script>\r\n    "]}]}