{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\zonas\\listaZona.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\zonas\\listaZona.vue","mtime":1712682816698},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nimport Vue from 'vue'\r\nimport axios from 'axios'\r\nimport vSelect from 'vue-select';\r\nexport default {\r\n    data() {\r\n        return{\r\n            options1: [\r\n                { text: '--Seleccione--', value: null },\r\n                { text: 'Si', value: true },\r\n                { text: 'No', value: false },\r\n            ],\r\n            Zona: [],\r\n            popupActivoGuardar: false,\r\n            popupActivoEditar: false,\r\n            popupActivoDesactivar: false,\r\n            popupActivoEliminar: false,\r\n            tabZona: {\r\n                idzona: '',\r\n                zn_nombre: '',\r\n                zn_estado: '',\r\n                updated_at: ''\r\n            },\r\n            cantidad:[],\r\n            idzona: 0,\r\n            busquedaxnombre: \"\",\r\n            busqueda:\"\",\r\n            valor:\"0\",\r\n            valorBusqueda:0,\r\n            checkBox_mostraractivos:true,\r\n            checkBox_mostrarinactivos:false,\r\n        }\r\n    },\r\n    watch: {\r\n        valorBusqueda(newValue) {\r\n            if (newValue === '0') {\r\n                this.Zona = [];\r\n            }else if (newValue === '1') {\r\n                this.Zona = [];\r\n            }\r\n        }\r\n    },\r\n    components: {\r\n        'v-select': vSelect,\r\n    },\r\n    mounted() {\r\n        this.getZona();\r\n    },\r\n    methods: {\r\n        getZona() {\r\n            let me = this;\r\n            this.checkBox_mostraractivos = true;\r\n            me.$vs.loading()\r\n            this.$http.get(this.$server_url+'GetZona_todo')\r\n            .then(res => {\r\n            this.Zona = res.data;\r\n            me.$vs.loading.close()\r\n            })\r\n            .catch(err => {\r\n            console.log(err)\r\n            me.$vs.loading.close()\r\n            })\r\n        },\r\n        getZonaParametro() {\r\n            let me = this;\r\n            this.busqueda='nombre';\r\n            if(me.busquedaxnombre.length < 2){\r\n                me.$vs.notify({\r\n                text:'Minimo 2 caracteres de busqueda',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n                return false;\r\n            }\r\n            me.$vs.loading()\r\n            if(me.busquedaxnombre !== null && me.busquedaxnombre !== '' && me.busquedaxnombre !== 0){\r\n                this.$http.get(this.$server_url+'GetZonaParametro?busqueda='+me.busqueda+'&razonbusqueda='+me.busquedaxnombre)\r\n                // this.$http.get(this.$server_url+'GetAsignacionesParametro?busqueda='+me.busqueda+'&razonbusqueda='+me.busquedaInstitucion)\r\n                .then(function (res) {\r\n                    // me.tmpVenta = res.data;\r\n                    // let resultado = res.data.filter(c => c.cliCi !== 0);\r\n                    me.Zona = res.data;\r\n                    if(me.Zona.length === 0){\r\n                        me.$vs.notify({\r\n                            text: 'No hay coincidencias en la búsqueda',\r\n                            color: 'danger',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-x'\r\n                        })\r\n                        me.Zona = [];\r\n                        me.$vs.loading.close()\r\n                    }else{\r\n                        // me.filtroRegion();\r\n                        me.$vs.loading.close()\r\n                        if(res.data.message){\r\n                            me.$vs.notify({\r\n                            text: res.data.message,\r\n                            color: 'success',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-user'\r\n                            })\r\n                        }   \r\n                    }\r\n                })\r\n                .catch(function (error) {\r\n                    if (error.response && error.response.status === 404) {\r\n                        me.$vs.notify({\r\n                            text: 'No hay institución para esta búsqueda',\r\n                            color: 'danger',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-x'\r\n                        })\r\n                    me.Zona = [];\r\n                    me.$vs.loading.close()\r\n                    } else {\r\n                        console.log(error + ' error');\r\n                        me.$vs.loading.close();\r\n                    }\r\n                })\r\n            }else{\r\n                this.$http.get(this.$server_url+'GetZonaParametro?busqueda='+me.busqueda+'&razonbusqueda='+me.valorBusqueda)\r\n                .then(function (res) {\r\n                    me.Zona = res.data;\r\n                    me.$vs.loading.close()\r\n                })\r\n                .catch(function (error) {\r\n                    me.Zona = [];\r\n                    me.$vs.loading.close()\r\n                })           \r\n            }\r\n            \r\n        },              \r\n        //SECCION GUARDAR NUEVO Zona\r\n        getNuevo() {\r\n            this.popupActivoGuardar = true\r\n            this.tabZona.zn_nombre = ''\r\n        },\r\n        guardarnuevo() {\r\n            let me = this;\r\n            const usuariorespo = localStorage.getItem(\"usuario\");\r\n            const usuarioObjeto = JSON.parse(usuariorespo);\r\n            // Verificar si ya existe un registro con el mismo código de asesor-institución\r\n            let resultado = me.Zona.find(v => v.zn_nombre == this.tabZona.zn_nombre);\r\n            if (resultado) {\r\n                me.$vs.notify({\r\n                    text: 'Ya existe un registro de este Zona',\r\n                    color: 'danger',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-alert-triangle'\r\n                });\r\n                return;\r\n            }\r\n            //VALIDACION DE CAMPOS NULOS Y VACIOS            \r\n            if (this.tabZona.zn_nombre === '' || this.tabZona.zn_nombre === null) {\r\n                me.$vs.notify({\r\n                    text: 'Escriba el nombre de la Zona antes de guardar',\r\n                    color: 'danger',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-alert-triangle'\r\n                });\r\n                return;\r\n            }\r\n            let datos  = {\r\n                \"idzona\": this.tabZona.idzona,\r\n                \"zn_nombre\": this.tabZona.zn_nombre,\r\n                \"zn_estado\": this.tabZona.zn_estado,\r\n                \"user_created\": usuarioObjeto.idusuario,\r\n            }\r\n            me.$vs.loading()\r\n            this.$http.post(this.$server_url+'PostRegistrar_modificar_i_zona', datos)\r\n            .then(res => {\r\n                me.$vs.loading.close()\r\n                this.getZona();\r\n                me.$vs.notify({\r\n                    text: 'Zona guardado con exito',\r\n                    color: 'success',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-check'\r\n                })\r\n                this.popupActivoEditar = false;\r\n                this.popupActivoDesactivar = false;\r\n                this.popupActivoGuardar = false;\r\n                this.popupActivoEliminar = false;\r\n            })\r\n            .catch(function () {\r\n                me.$vs.loading.close()\r\n                me.$vs.notify({\r\n                    text: 'La Asignación no se pudo guardar',\r\n                    color: 'danger',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-x'\r\n                })\r\n            })\r\n        },\r\n        getEditar(tr) {\r\n        this.popupActivoEditar = true\r\n        this.tabZona.idzona = tr.idzona\r\n        this.tabZona.zn_nombre = tr.zn_nombre\r\n        },\r\n        editar() {\r\n            let me = this;\r\n            const usuariorespo = localStorage.getItem(\"usuario\");\r\n            const usuarioObjeto = JSON.parse(usuariorespo);\r\n            if (this.tabZona.zn_nombre === '' || this.tabZona.zn_nombre === null) {\r\n                me.$vs.notify({\r\n                    text: 'Escriba el nombre del Zona antes de editar',\r\n                    color: 'danger',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-alert-triangle'\r\n                });\r\n                return;\r\n            }           \r\n            let datos  = {                \r\n                \"idzona\": this.tabZona.idzona,\r\n                \"zn_nombre\": this.tabZona.zn_nombre,\r\n            }\r\n        me.$vs.loading()\r\n        //axios.post(this.$apifacturacion_url + 'f_Producto/AggOrUpdateProducto', datos)\r\n        this.$http.post(this.$server_url+'PostRegistrar_modificar_i_zona', datos)\r\n            .then(res => {\r\n                me.$vs.loading.close()\r\n                this.getZona();\r\n                me.$vs.notify({\r\n                    text: 'Zona editada con exito',\r\n                    color: 'success',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-check'\r\n                })\r\n                this.popupActivoEditar = false;\r\n                this.popupActivoDesactivar = false;\r\n                this.popupActivoGuardar = false;\r\n                this.popupActivoEliminar = false;\r\n            })\r\n            .catch(error => {\r\n                if (error.response && error.response.status === 500) {\r\n                    me.$vs.notify({\r\n                        text: 'Revise los campos que esten en el formato correcto',\r\n                        color: 'danger',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-x'\r\n                    })\r\n                me.$vs.loading.close()\r\n                } else {\r\n                console.log(error);\r\n                me.$vs.loading.close()\r\n                    me.$vs.notify({\r\n                        text: 'Zona no se pudo editar',\r\n                        color: 'danger',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-x'\r\n                    })\r\n                }\r\n            })\r\n        },\r\n        popup_desactivar_activar_zn(tr) {\r\n            this.popupActivoDesactivar = true\r\n            this.idzona = tr.idzona\r\n            this.tabZona.zn_estado = tr.zn_estado\r\n        },\r\n        desactivar_activar_tipo_documento() {\r\n            let me = this;\r\n            let valornuevo = this.tabZona.zn_estado;\r\n            //console.log(valornuevo+'valornuevoeatdoprocutp'+this.idzona);\r\n            if(valornuevo == 1){\r\n                valornuevo = 0;\r\n                let datos  = {\r\n                    \"idzona\": this.idzona,\r\n                    \"zn_estado\": valornuevo,\r\n                }\r\n                me.$vs.loading()\r\n                //axios.post(this.$apifacturacion_url + 'f_Producto/AggOrUpdateProducto', datos)\r\n                this.$http.post(this.$server_url+'Desactivar_i_zona', datos)\r\n                .then(res => {\r\n                    me.$vs.loading.close()\r\n                    this.getZona();\r\n                    me.$vs.notify({\r\n                        text: 'Cambio de estado exitoso',\r\n                        color: 'success',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check'\r\n                    })\r\n                    this.popupActivoEditar = false;\r\n                    this.popupActivoDesactivar = false;\r\n                    this.popupActivoGuardar = false;\r\n                    this.popupActivoEliminar = false;\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                    me.$vs.loading.close()\r\n                    me.$vs.notify({\r\n                        text: 'No se pudo realizar el cambio de estado',\r\n                        color: 'danger',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-x'\r\n                    })\r\n                })\r\n            }else if (valornuevo == 0){\r\n                valornuevo = 1;\r\n                let datos  = {\r\n                    \"idzona\": this.idzona,\r\n                    \"zn_estado\": valornuevo,\r\n                }\r\n                me.$vs.loading()\r\n                //axios.post(this.$apifacturacion_url + 'f_Producto/AggOrUpdateProducto', datos)\r\n                this.$http.post(this.$server_url+'Desactivar_i_zona', datos)\r\n                .then(res => {\r\n                    me.$vs.loading.close()\r\n                    this.getZona();\r\n                    me.$vs.notify({\r\n                        text: 'Cambio de estado exitoso',\r\n                        color: 'success',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check'\r\n                    })\r\n                    this.popupActivoEditar = false;\r\n                    this.popupActivoDesactivar = false;\r\n                    this.popupActivoGuardar = false;\r\n                    this.popupActivoEliminar = false;\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                    me.$vs.loading.close()\r\n                    me.$vs.notify({\r\n                        text: 'No se pudo realizar el cambio de estado',\r\n                        color: 'danger',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-x'\r\n                    })\r\n                })\r\n            }        \r\n        },    \r\n        getPreguntaEliminar(tr) {\r\n            this.popupActivoEliminar = true\r\n            this.idzona = tr.idzona\r\n        },\r\n        getEliminar() {\r\n            let me = this;\r\n            let datos  = {\r\n                \"idzona\": this.idzona,\r\n            }\r\n            me.$vs.loading()\r\n            this.$http.post(this.$server_url + \"Eliminar_tipo_documento\", datos)\r\n                .then(res => {\r\n                    me.$vs.loading.close()\r\n                    this.getZona();\r\n                    me.$vs.notify({\r\n                        text: 'Se elimino la asignación correctamente',\r\n                        color: 'success',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check'\r\n                    })\r\n                    this.popupActivoEditar = false;\r\n                    this.popupActivoDesactivar = false;\r\n                    this.popupActivoGuardar = false;\r\n                    this.popupActivoEliminar = false;\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                    me.$vs.loading.close()\r\n                    me.$vs.notify({\r\n                        text: 'No se pudo eliminar la asignación',\r\n                        color: 'danger',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-x'\r\n                    })\r\n                })\r\n        },\r\n        getCancelar() {\r\n            this.popupActivoEditar = false;\r\n            this.popupActivoGuardar = false;\r\n            this.popupActivoEliminar = false;\r\n            this.popupActivoDesactivar = false;\r\n        },\r\n    }\r\n}\r\n",{"version":3,"sources":["listaZona.vue"],"names":[],"mappings":";AAgfile":"listaZona.vue","sourceRoot":"src/views/zonas","sourcesContent":["<template>\r\n    <vx-card fixed-height=\"true\">\r\n        <!-- <vs-row vs-justify=\"flex-start\">            \r\n            <vs-col type=\"flex\" vs-justify=\"flex-start\" vs-align=\"flex-start\" class=\"m-2\" vs-w=\"12\">                \r\n                <p>Búsqueda por filtros</p>\r\n                <br>\r\n                <vs-card class=\"seccionmostrartodo\">\r\n                    <vs-row>                \r\n                        <vs-input class=\"w\" @keyup.enter=\"getZonaParametro()\" icon-after=\"true\" label-placeholder=\"icon-after\" style=\"margin:0px 0px 20px 0px;\"  icon=\"search\" placeholder=\"Buscar\" v-model=\"busquedaxnombre\"/>\r\n                        <vs-button color=\"warning\" type=\"filled\" style=\"margin-left:10px;\" @click=\"getZonaParametro();\" icon=\"search\"></vs-button>\r\n                    </vs-row>\r\n                    <vs-row>                \r\n                        <ul  class=\"leftx\" style=\"display:flex;margin:0px 0px 0px 20px;\">\r\n                            <li class=\"modelx\">\r\n                            </li> \r\n                            <li style=\"margin:10px 10px 0px 0px;\">\r\n                                <vs-radio vs-name=\"radios1\" vs-value=\"0\" v-model=\"valorBusqueda\"  @input=\"busqueda='nombre'\">Nombre</vs-radio>\r\n                            </li>\r\n                        </ul>  \r\n                    </vs-row>                    \r\n                </vs-card>\r\n            </vs-col>\r\n        </vs-row> -->\r\n        <vs-button icon=\"add\" type=\"border\" color=\"success\" class=\"mr-2\" @click=\"getNuevo()\">Agregar Zona</vs-button>\r\n        <vs-table max-items=\"10\" pagination search :data=\"Zona\">\r\n            <template slot=\"header\">\r\n                        <span>Cantidad: <b> {{ Zona.length }}</b></span>\r\n                    </template>\r\n            <template slot=\"thead\">\r\n                <vs-th width=\"200\">\r\n                    Código\r\n                </vs-th>\r\n                <vs-th width=\"400\">\r\n                    Información Zona\r\n                </vs-th>\r\n                <vs-th width=\"50\">Estado</vs-th>\r\n                <vs-th width=\"100\">\r\n                    Acciones\r\n                </vs-th>\r\n            </template>\r\n            <template slot-scope=\"{data}\">\r\n                <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                    <vs-td :data=\"data[indextr].idzona\">\r\n                        {{ data[indextr].idzona }}\r\n                    </vs-td>\r\n                    <vs-td>\r\n                        <!-- {{ tr }} -->\r\n                        <small><b>Zona:</b> {{tr.zn_nombre}}</small><br>\r\n                    </vs-td>\r\n                    <vs-td>\r\n                        <vs-chip v-if=\"tr.zn_estado == 1\" color=\"success\">Activo</vs-chip>\r\n                        <vs-chip v-else color=\"danger\">Inactivo</vs-chip>\r\n                    </vs-td>\r\n                    <vs-td :data=\"data[indextr].idzona\">\r\n                        <vs-dropdown vs-custom-content vs-trigger-click title=\"Opciones\">\r\n                            <vs-button class=\"a-icons\" href.prevent icon=\"more_vert\" type=\"border\"></vs-button>\r\n                            <vs-dropdown-menu style=\"width: 250px;\" class=\"cursor\">\r\n                                <vs-dropdown-item>\r\n                                    <vs-button v-if=\"tr.zn_estado == 1\" color=\"#28C76F\" type=\"line\" class=\"w-full\" @click=\"popupActivo=true;getEditar(tr)\">Editar</vs-button>\r\n                                    <!-- <vs-button v-if=\"tr.zn_estado == 1\" color=\"#EA5455\" type=\"line\" class=\"w-full\" @click=\"popupActivo=true;getPreguntaEliminar(tr)\">Eliminar</vs-button> -->\r\n                                    <vs-button v-if=\"tr.zn_estado == 1\" color=\"#EA5455\" type=\"line\" class=\"w-full\" @click=\"popupActivo=true;popup_desactivar_activar_zn(tr)\">Desactivar Asignación</vs-button>\r\n                                    <vs-button v-if=\"tr.zn_estado == 0\" color=\"#28C76F\" type=\"line\" class=\"w-full\" @click=\"popupActivo=true;popup_desactivar_activar_zn(tr)\">Activar Asignación</vs-button>\r\n                                </vs-dropdown-item>\r\n                            </vs-dropdown-menu>\r\n                        </vs-dropdown>\r\n                    </vs-td>\r\n                </vs-tr>\r\n            </template>\r\n        </vs-table>\r\n        <!-- SECCION REGISTRO -->\r\n        <vs-popup class=\"crear\" title=\"Registro nueva Zona\" :active.sync=\"popupActivoGuardar\">\r\n            <vs-row>         \r\n                <!-- {{ tabZona }} -->\r\n                <vs-col vs-align=\"center\" vs-lg=\"12\" vs-sm=\"12\" vs-xs=\"12\" style=\"text-align: center;\"><b>Información Zona</b></vs-col>\r\n                <vs-col vs-justify=\"center\" vs-align=\"center\" vs-lg=\"12\" vs-sm=\"12\" vs-xs=\"12\">\r\n                    <vs-row vs-type=\"flex\" vs-justify=\"center\" vs-w=\"12\">\r\n                        <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"10\">\r\n                            <vs-input label=\"Nombre\" placeholder=\"Nombre\" class=\"w-full\" icon=\"mode_edit\" v-model=\"tabZona.zn_nombre\" />\r\n                        </vs-col>\r\n                    </vs-row>\r\n                </vs-col>              \r\n            </vs-row>\r\n            <br><br>\r\n            <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\" class=\"mt-2\">\r\n                <vs-button @click=\"guardarnuevo()\" type=\"relief\">Guardar</vs-button>&emsp;\r\n                <vs-button @click=\"getCancelar()\" color=\"danger\" type=\"relief\">Cancelar</vs-button>\r\n            </vs-col>\r\n        </vs-popup>\r\n        <!-- SECCION EDITAR -->\r\n        <vs-popup class=\"editar\" :title=\"`Edición Zona: ${tabZona.idzona}`\" :active.sync=\"popupActivoEditar\">\r\n            <vs-row>\r\n                <!-- {{ tabZona }} -->             \r\n                <vs-col vs-align=\"center\" vs-lg=\"12\" vs-sm=\"12\" vs-xs=\"12\" style=\"text-align: center;\"><b>Información Zona</b></vs-col>\r\n                <vs-col vs-justify=\"center\" vs-align=\"center\" vs-lg=\"12\" vs-sm=\"12\" vs-xs=\"12\">\r\n                    <vs-row vs-type=\"flex\" vs-justify=\"center\" vs-w=\"12\">\r\n                        <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"10\">\r\n                            <vs-input label=\"Nombre\" placeholder=\"Nombre\" class=\"w-full\" icon=\"mode_edit\" v-model=\"tabZona.zn_nombre\" />\r\n                        </vs-col>\r\n                    </vs-row>\r\n                </vs-col>\r\n            </vs-row>\r\n            <br><br>\r\n            <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\" class=\"mt-2\">\r\n                <vs-button @click=\"editar()\" type=\"relief\">Editar</vs-button>&emsp;\r\n                <vs-button @click=\"getCancelar()\" color=\"danger\" type=\"relief\">Cancelar</vs-button>\r\n            </vs-col>\r\n        </vs-popup>\r\n        <vs-popup class=\"eliminar\" :title=\"`¿Confirma que desea eliminar Zona: ${idzona}?`\" :active.sync=\"popupActivoEliminar\">\r\n            <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"3\" class=\"mt-2\"></vs-col>\r\n            <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"3\" class=\"mt-2\">\r\n                <vs-button @click=\"getEliminar()\" type=\"relief\">Aceptar</vs-button>\r\n            </vs-col>\r\n            <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"3\" class=\"mt-2\">\r\n                <vs-button @click=\"getCancelar()\" color=\"danger\" type=\"relief\">Cancelar</vs-button>\r\n            </vs-col>\r\n        </vs-popup>\r\n        <vs-popup class=\"desactivar\" :title=\"`¿Confirma que desea cambiar el estado del Zona: ${idzona}?`\" :active.sync=\"popupActivoDesactivar\">\r\n            <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"3\" class=\"mt-2\"></vs-col>\r\n            <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"3\" class=\"mt-2\">\r\n                <vs-button @click=\"desactivar_activar_tipo_documento()\" type=\"relief\">Aceptar</vs-button>\r\n            </vs-col>\r\n            <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"3\" class=\"mt-2\">\r\n                <vs-button @click=\"getCancelar()\" color=\"danger\" type=\"relief\">Cancelar</vs-button>\r\n            </vs-col>\r\n        </vs-popup>\r\n    </vx-card>\r\n    </template>\r\n<script>\r\nimport Vue from 'vue'\r\nimport axios from 'axios'\r\nimport vSelect from 'vue-select';\r\nexport default {\r\n    data() {\r\n        return{\r\n            options1: [\r\n                { text: '--Seleccione--', value: null },\r\n                { text: 'Si', value: true },\r\n                { text: 'No', value: false },\r\n            ],\r\n            Zona: [],\r\n            popupActivoGuardar: false,\r\n            popupActivoEditar: false,\r\n            popupActivoDesactivar: false,\r\n            popupActivoEliminar: false,\r\n            tabZona: {\r\n                idzona: '',\r\n                zn_nombre: '',\r\n                zn_estado: '',\r\n                updated_at: ''\r\n            },\r\n            cantidad:[],\r\n            idzona: 0,\r\n            busquedaxnombre: \"\",\r\n            busqueda:\"\",\r\n            valor:\"0\",\r\n            valorBusqueda:0,\r\n            checkBox_mostraractivos:true,\r\n            checkBox_mostrarinactivos:false,\r\n        }\r\n    },\r\n    watch: {\r\n        valorBusqueda(newValue) {\r\n            if (newValue === '0') {\r\n                this.Zona = [];\r\n            }else if (newValue === '1') {\r\n                this.Zona = [];\r\n            }\r\n        }\r\n    },\r\n    components: {\r\n        'v-select': vSelect,\r\n    },\r\n    mounted() {\r\n        this.getZona();\r\n    },\r\n    methods: {\r\n        getZona() {\r\n            let me = this;\r\n            this.checkBox_mostraractivos = true;\r\n            me.$vs.loading()\r\n            this.$http.get(this.$server_url+'GetZona_todo')\r\n            .then(res => {\r\n            this.Zona = res.data;\r\n            me.$vs.loading.close()\r\n            })\r\n            .catch(err => {\r\n            console.log(err)\r\n            me.$vs.loading.close()\r\n            })\r\n        },\r\n        getZonaParametro() {\r\n            let me = this;\r\n            this.busqueda='nombre';\r\n            if(me.busquedaxnombre.length < 2){\r\n                me.$vs.notify({\r\n                text:'Minimo 2 caracteres de busqueda',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n                return false;\r\n            }\r\n            me.$vs.loading()\r\n            if(me.busquedaxnombre !== null && me.busquedaxnombre !== '' && me.busquedaxnombre !== 0){\r\n                this.$http.get(this.$server_url+'GetZonaParametro?busqueda='+me.busqueda+'&razonbusqueda='+me.busquedaxnombre)\r\n                // this.$http.get(this.$server_url+'GetAsignacionesParametro?busqueda='+me.busqueda+'&razonbusqueda='+me.busquedaInstitucion)\r\n                .then(function (res) {\r\n                    // me.tmpVenta = res.data;\r\n                    // let resultado = res.data.filter(c => c.cliCi !== 0);\r\n                    me.Zona = res.data;\r\n                    if(me.Zona.length === 0){\r\n                        me.$vs.notify({\r\n                            text: 'No hay coincidencias en la búsqueda',\r\n                            color: 'danger',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-x'\r\n                        })\r\n                        me.Zona = [];\r\n                        me.$vs.loading.close()\r\n                    }else{\r\n                        // me.filtroRegion();\r\n                        me.$vs.loading.close()\r\n                        if(res.data.message){\r\n                            me.$vs.notify({\r\n                            text: res.data.message,\r\n                            color: 'success',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-user'\r\n                            })\r\n                        }   \r\n                    }\r\n                })\r\n                .catch(function (error) {\r\n                    if (error.response && error.response.status === 404) {\r\n                        me.$vs.notify({\r\n                            text: 'No hay institución para esta búsqueda',\r\n                            color: 'danger',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-x'\r\n                        })\r\n                    me.Zona = [];\r\n                    me.$vs.loading.close()\r\n                    } else {\r\n                        console.log(error + ' error');\r\n                        me.$vs.loading.close();\r\n                    }\r\n                })\r\n            }else{\r\n                this.$http.get(this.$server_url+'GetZonaParametro?busqueda='+me.busqueda+'&razonbusqueda='+me.valorBusqueda)\r\n                .then(function (res) {\r\n                    me.Zona = res.data;\r\n                    me.$vs.loading.close()\r\n                })\r\n                .catch(function (error) {\r\n                    me.Zona = [];\r\n                    me.$vs.loading.close()\r\n                })           \r\n            }\r\n            \r\n        },              \r\n        //SECCION GUARDAR NUEVO Zona\r\n        getNuevo() {\r\n            this.popupActivoGuardar = true\r\n            this.tabZona.zn_nombre = ''\r\n        },\r\n        guardarnuevo() {\r\n            let me = this;\r\n            const usuariorespo = localStorage.getItem(\"usuario\");\r\n            const usuarioObjeto = JSON.parse(usuariorespo);\r\n            // Verificar si ya existe un registro con el mismo código de asesor-institución\r\n            let resultado = me.Zona.find(v => v.zn_nombre == this.tabZona.zn_nombre);\r\n            if (resultado) {\r\n                me.$vs.notify({\r\n                    text: 'Ya existe un registro de este Zona',\r\n                    color: 'danger',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-alert-triangle'\r\n                });\r\n                return;\r\n            }\r\n            //VALIDACION DE CAMPOS NULOS Y VACIOS            \r\n            if (this.tabZona.zn_nombre === '' || this.tabZona.zn_nombre === null) {\r\n                me.$vs.notify({\r\n                    text: 'Escriba el nombre de la Zona antes de guardar',\r\n                    color: 'danger',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-alert-triangle'\r\n                });\r\n                return;\r\n            }\r\n            let datos  = {\r\n                \"idzona\": this.tabZona.idzona,\r\n                \"zn_nombre\": this.tabZona.zn_nombre,\r\n                \"zn_estado\": this.tabZona.zn_estado,\r\n                \"user_created\": usuarioObjeto.idusuario,\r\n            }\r\n            me.$vs.loading()\r\n            this.$http.post(this.$server_url+'PostRegistrar_modificar_i_zona', datos)\r\n            .then(res => {\r\n                me.$vs.loading.close()\r\n                this.getZona();\r\n                me.$vs.notify({\r\n                    text: 'Zona guardado con exito',\r\n                    color: 'success',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-check'\r\n                })\r\n                this.popupActivoEditar = false;\r\n                this.popupActivoDesactivar = false;\r\n                this.popupActivoGuardar = false;\r\n                this.popupActivoEliminar = false;\r\n            })\r\n            .catch(function () {\r\n                me.$vs.loading.close()\r\n                me.$vs.notify({\r\n                    text: 'La Asignación no se pudo guardar',\r\n                    color: 'danger',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-x'\r\n                })\r\n            })\r\n        },\r\n        getEditar(tr) {\r\n        this.popupActivoEditar = true\r\n        this.tabZona.idzona = tr.idzona\r\n        this.tabZona.zn_nombre = tr.zn_nombre\r\n        },\r\n        editar() {\r\n            let me = this;\r\n            const usuariorespo = localStorage.getItem(\"usuario\");\r\n            const usuarioObjeto = JSON.parse(usuariorespo);\r\n            if (this.tabZona.zn_nombre === '' || this.tabZona.zn_nombre === null) {\r\n                me.$vs.notify({\r\n                    text: 'Escriba el nombre del Zona antes de editar',\r\n                    color: 'danger',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-alert-triangle'\r\n                });\r\n                return;\r\n            }           \r\n            let datos  = {                \r\n                \"idzona\": this.tabZona.idzona,\r\n                \"zn_nombre\": this.tabZona.zn_nombre,\r\n            }\r\n        me.$vs.loading()\r\n        //axios.post(this.$apifacturacion_url + 'f_Producto/AggOrUpdateProducto', datos)\r\n        this.$http.post(this.$server_url+'PostRegistrar_modificar_i_zona', datos)\r\n            .then(res => {\r\n                me.$vs.loading.close()\r\n                this.getZona();\r\n                me.$vs.notify({\r\n                    text: 'Zona editada con exito',\r\n                    color: 'success',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-check'\r\n                })\r\n                this.popupActivoEditar = false;\r\n                this.popupActivoDesactivar = false;\r\n                this.popupActivoGuardar = false;\r\n                this.popupActivoEliminar = false;\r\n            })\r\n            .catch(error => {\r\n                if (error.response && error.response.status === 500) {\r\n                    me.$vs.notify({\r\n                        text: 'Revise los campos que esten en el formato correcto',\r\n                        color: 'danger',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-x'\r\n                    })\r\n                me.$vs.loading.close()\r\n                } else {\r\n                console.log(error);\r\n                me.$vs.loading.close()\r\n                    me.$vs.notify({\r\n                        text: 'Zona no se pudo editar',\r\n                        color: 'danger',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-x'\r\n                    })\r\n                }\r\n            })\r\n        },\r\n        popup_desactivar_activar_zn(tr) {\r\n            this.popupActivoDesactivar = true\r\n            this.idzona = tr.idzona\r\n            this.tabZona.zn_estado = tr.zn_estado\r\n        },\r\n        desactivar_activar_tipo_documento() {\r\n            let me = this;\r\n            let valornuevo = this.tabZona.zn_estado;\r\n            //console.log(valornuevo+'valornuevoeatdoprocutp'+this.idzona);\r\n            if(valornuevo == 1){\r\n                valornuevo = 0;\r\n                let datos  = {\r\n                    \"idzona\": this.idzona,\r\n                    \"zn_estado\": valornuevo,\r\n                }\r\n                me.$vs.loading()\r\n                //axios.post(this.$apifacturacion_url + 'f_Producto/AggOrUpdateProducto', datos)\r\n                this.$http.post(this.$server_url+'Desactivar_i_zona', datos)\r\n                .then(res => {\r\n                    me.$vs.loading.close()\r\n                    this.getZona();\r\n                    me.$vs.notify({\r\n                        text: 'Cambio de estado exitoso',\r\n                        color: 'success',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check'\r\n                    })\r\n                    this.popupActivoEditar = false;\r\n                    this.popupActivoDesactivar = false;\r\n                    this.popupActivoGuardar = false;\r\n                    this.popupActivoEliminar = false;\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                    me.$vs.loading.close()\r\n                    me.$vs.notify({\r\n                        text: 'No se pudo realizar el cambio de estado',\r\n                        color: 'danger',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-x'\r\n                    })\r\n                })\r\n            }else if (valornuevo == 0){\r\n                valornuevo = 1;\r\n                let datos  = {\r\n                    \"idzona\": this.idzona,\r\n                    \"zn_estado\": valornuevo,\r\n                }\r\n                me.$vs.loading()\r\n                //axios.post(this.$apifacturacion_url + 'f_Producto/AggOrUpdateProducto', datos)\r\n                this.$http.post(this.$server_url+'Desactivar_i_zona', datos)\r\n                .then(res => {\r\n                    me.$vs.loading.close()\r\n                    this.getZona();\r\n                    me.$vs.notify({\r\n                        text: 'Cambio de estado exitoso',\r\n                        color: 'success',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check'\r\n                    })\r\n                    this.popupActivoEditar = false;\r\n                    this.popupActivoDesactivar = false;\r\n                    this.popupActivoGuardar = false;\r\n                    this.popupActivoEliminar = false;\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                    me.$vs.loading.close()\r\n                    me.$vs.notify({\r\n                        text: 'No se pudo realizar el cambio de estado',\r\n                        color: 'danger',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-x'\r\n                    })\r\n                })\r\n            }        \r\n        },    \r\n        getPreguntaEliminar(tr) {\r\n            this.popupActivoEliminar = true\r\n            this.idzona = tr.idzona\r\n        },\r\n        getEliminar() {\r\n            let me = this;\r\n            let datos  = {\r\n                \"idzona\": this.idzona,\r\n            }\r\n            me.$vs.loading()\r\n            this.$http.post(this.$server_url + \"Eliminar_tipo_documento\", datos)\r\n                .then(res => {\r\n                    me.$vs.loading.close()\r\n                    this.getZona();\r\n                    me.$vs.notify({\r\n                        text: 'Se elimino la asignación correctamente',\r\n                        color: 'success',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check'\r\n                    })\r\n                    this.popupActivoEditar = false;\r\n                    this.popupActivoDesactivar = false;\r\n                    this.popupActivoGuardar = false;\r\n                    this.popupActivoEliminar = false;\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                    me.$vs.loading.close()\r\n                    me.$vs.notify({\r\n                        text: 'No se pudo eliminar la asignación',\r\n                        color: 'danger',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-x'\r\n                    })\r\n                })\r\n        },\r\n        getCancelar() {\r\n            this.popupActivoEditar = false;\r\n            this.popupActivoGuardar = false;\r\n            this.popupActivoEliminar = false;\r\n            this.popupActivoDesactivar = false;\r\n        },\r\n    }\r\n}\r\n</script>"]}]}