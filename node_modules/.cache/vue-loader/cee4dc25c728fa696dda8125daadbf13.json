{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\pedidos2\\pedidos\\ListadoPrincipalPedidos.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\pedidos2\\pedidos\\ListadoPrincipalPedidos.vue","mtime":1712682816389},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\n  import vSelect from 'vue-select'\r\n  import {\r\n    mapState\r\n} from \"vuex\";\r\n  const FormatoPedidosVue         = ()  => import('@/views/pedidos/components/formato/FormatoPedidos.vue')\r\n  const CargarFormatoVue          = ()  => import('@/views/pedidos/components/formato/CargarFormato')\r\n  const listado_pedidosVue        = ()  => import('@/views/pedidos/listado_pedidos2.vue')\r\n  import Codigosmix from \"@/mixins/Codigosmix\";\r\n  export default{\r\n    components:{\r\n      vSelect,\r\n      listado_pedidosVue,\r\n      FormatoPedidosVue,\r\n      CargarFormatoVue,\r\n    },\r\n    mixins: [Codigosmix],\r\n    data(){\r\n      return{\r\n        usuario:[],\r\n        periodoSelect:'',\r\n        changePeriodo:false,\r\n        popupFormato:false,\r\n        enviarPeriodo:'',\r\n        //variables formato\r\n        arregloSeries:[],\r\n        //fin variables formato\r\n        popupCargarFormato:false,\r\n        pedidos:[],\r\n      }\r\n    },\r\n    computed:{\r\n    ...mapState([\"auth\",'userRoot','susuario','ObjectPedido','groupFacturador','userAsesor']),\r\n    },\r\n    watch:{\r\n      periodoSelect(results){\r\n        let me = this;\r\n        if(results == null || results == null || results == undefined){\r\n          me.changePeriodo = false\r\n          localStorage.removeItem('pid')\r\n          localStorage.removeItem('pnombre')\r\n        }else{\r\n          me.changePeriodo = true\r\n          localStorage.setItem('pid',    results.idperiodoescolar)\r\n          localStorage.setItem('pnombre',results.periodoescolar)\r\n          me.getPedidos()\r\n        }\r\n      }\r\n    },\r\n    created(){\r\n      let me = this;\r\n      me.usuario = JSON.parse(localStorage.getItem(\"usuario\"))\r\n    },\r\n    mounted(){\r\n      let me = this;\r\n      me.getSeries()\r\n      let searchPeriodoActive = localStorage.pid\r\n      let searchPeriodoName   = localStorage.pnombre\r\n      if(searchPeriodoActive){\r\n        me.periodoSelect = { idperiodoescolar:searchPeriodoActive, periodoescolar:searchPeriodoName }\r\n      }\r\n    },\r\n    props:{\r\n      arregloPeriodos:{\r\n            type:Array,\r\n            default:function(){\r\n                return []\r\n            }\r\n        }\r\n    },\r\n    methods:{\r\n      addPedido(){\r\n        let me = this\r\n        let datos = {\r\n          id_pedido:0,\r\n          id_periodo:this.periodoSelect.idperiodoescolar,\r\n          periodo:this.periodoSelect.periodoescolar\r\n        }\r\n        this.$store.dispatch('setPedido',datos)\r\n        localStorage.setItem(\"id_periodo_selected\",     this.periodoSelect.idperiodoescolar)\r\n        localStorage.setItem(\"nombre_periodo_selected\", this.periodoSelect.periodoescolar)\r\n        me.$emit('showPedido',1)\r\n      },\r\n      showPedido(e){\r\n          let me = this\r\n          me.$emit('showPedido',e)\r\n      },\r\n\r\n      changeHandleRecarga(e){\r\n        let me = this;\r\n        me.limpiarCache()\r\n        me.getPedidos()\r\n      },\r\n      updateVentaReal(){\r\n        let me = this\r\n        //si es asesor envio a actualizar la venta real\r\n        if(me.userAsesor) {\r\n          if(me.periodoSelect == null || me.periodoSelect == \"\" || me.periodoSelect == undefined ) { return }\r\n          const { idusuario } = me.usuario; const { idperiodoescolar } = me.periodoSelect\r\n          this.$http.get(this.$server_url+`pedigo_Pagos?updateVentaReal=1&idAsesor=${idusuario}&idPeriodo=${idperiodoescolar}`)\r\n          .then(res => { })\r\n        }\r\n      },\r\n      getPedidos(){\r\n        let me        = this\r\n        var ruta      = \"\"\r\n        me.pedidos    = []\r\n        if(me.periodoSelect == null || me.periodoSelect == \"\" || me.periodoSelect == undefined ) { return }\r\n        if(me.usuario.id_group == 22) ruta = this.$server_url+'get_pedidos_periodo_facturador/'+me.periodoSelect.idperiodoescolar+'/'+me.usuario.idusuario\r\n        else ruta = this.$server_url+'get_pedidos_periodo/'+me.periodoSelect.idperiodoescolar+'/'+me.usuario.id_group+'/'+me.usuario.idusuario\r\n        me.$vs.loading();\r\n        this.$http.get(ruta)\r\n        .then(res => {\r\n          me.$vs.loading.close();\r\n          let datos = res.data.filter(p => p.facturacion_vee == 1)\r\n          if(me.usuario.id_group == 22){\r\n          // me.pedidos    = datos.filter(p =>  ( (p.ifagregado_anticipo_aprobado == 1 || p.ifagregado_anticipo_aprobado == 3 ) || (p.anticipo == 0 || p.anticipo == '' || p.anticipo == null)) )\r\n          me.pedidos    = datos.filter(p =>  ( (p.ifagregado_anticipo_aprobado == 1 || p.ifagregado_anticipo_aprobado == 3 ) || (p.ifanticipo == 0 || p.ifanticipo == null)) )\r\n          return\r\n          }\r\n          if(me.userRoot || me.userAsesor){\r\n            me.pedidos    = res.data\r\n            return\r\n          }\r\n          else{\r\n            me.pedidos    = datos\r\n          }\r\n        })\r\n        .catch((e)=>{\r\n          me.$vs.loading.close();\r\n        })\r\n      },\r\n      getSeries(){\r\n        let me = this\r\n        me.arregloSeries = []\r\n        this.$http.get(this.$server_url+'series_full')\r\n        .then(res => {\r\n            me.arregloSeries = res.data\r\n        })\r\n      },\r\n      verFormato(){\r\n        let me = this;\r\n        let datos  = me.arregloPeriodos\r\n        let setear = datos.filter(p => p.idperiodoescolar == me.periodoSelect.idperiodoescolar)\r\n        me.enviarPeriodo  = setear[0]\r\n        me.popupFormato   = true\r\n      },\r\n      //Metodos para cargar formato\r\n      rechargeFormato(e){\r\n        let me = this;\r\n        me.popupCargarFormato = false;\r\n        me.popupFormato       = true;\r\n      },\r\n    }\r\n  }\r\n  ",{"version":3,"sources":["ListadoPrincipalPedidos.vue"],"names":[],"mappings":";AAsfile":"ListadoPrincipalPedidos.vue","sourceRoot":"src/views/pedidos2/pedidos","sourcesContent":["<template>\r\n    <div>\r\n      <div class=\"flex mt-5\">\r\n        <div style=\"width: 40%;\">\r\n          <p> <ion-icon name=\"contract-outline\"></ion-icon>  Filtro de pedidos por períodos</p>\r\n        </div>\r\n        <div style=\"width: 60%;\">\r\n          <!-- idperiodoescolar -->\r\n          <v-select :options=\"arregloPeriodos\" @input=\"limpiarCache();getPedidos();updateVentaReal();\" :reduce=\"arregloPeriodos => arregloPeriodos\" label=\"periodoescolar\" class=\"w-full\" v-model=\"periodoSelect\" />\r\n            <br>\r\n        </div>\r\n      </div>\r\n      <vs-divider>\r\n        <vs-button color=\"warning\" v-if=\"changePeriodo == false\" type=\"flat\" icon=\"star\">Ningun período Seleccionado</vs-button>\r\n        <vs-button  v-else color=\"success\" type=\"flat\" icon=\"star\">Periodo seleccionado: <b>{{ periodoSelect.periodoescolar }}</b></vs-button>\r\n      </vs-divider>\r\n      <!-- BOTON GENERAR FORMATO-->\r\n      <div class=\"mt-2 flex\"  v-if=\"changePeriodo\" >\r\n        <vs-button v-if=\"usuario.id_group == 23 || userRoot == true\" type=\"gradient\" class=\"p-2 mr-3\"><ion-icon name=\"grid-outline\"></ion-icon> <span class=\"ml-2\" @click=\"verFormato();\">Generar formato</span> </vs-button>\r\n      </div>\r\n      <br><br>\r\n      <!--VER PEDIDOS-->\r\n      <div v-if=\"changePeriodo\" style=\"margin-top: -10px;\">\r\n        <vs-button color=\"primary\" v-if=\"userAsesor\" icon=\"add\" type=\"border\" @click=\"addPedido()\">Crear Pedido</vs-button>\r\n        <listado_pedidosVue class=\"mt-3\" @showPedido=\"showPedido\" :periodoSelect=\"periodoSelect\" :pedidos=\"pedidos\" @changeRecarge=\"changeHandleRecarga\" :userRoot=\"Boolean(userRoot)\" :userAsesor=\"Boolean(userAsesor)\" :groupFacturador=\"Boolean(groupFacturador)\"/>\r\n      </div>\r\n      <!--MODAL FORMATO PEDIDOS PRECIOS-->\r\n      <vs-popup fullscreen :title=\"'Formato de libros del período ' +enviarPeriodo.periodoescolar\" :active.sync=\"popupFormato\">\r\n        <vs-button  class=\"ml-2\" color=\"success\" v-if=\"userRoot == true\" type=\"gradient\"><ion-icon style=\"font-size:15px;\" name=\"code-download-outline\"></ion-icon> <span class=\"ml-2\" @click=\"popupFormato = false;popupCargarFormato = true;\">Cargar formato</span> </vs-button>\r\n        <FormatoPedidosVue v-if=\"popupFormato\" :enviarPeriodo=\"enviarPeriodo\" :arregloSeries=\"arregloSeries\"/>\r\n      </vs-popup>\r\n      <!--CARGAR FORMATO ANTERIOR PARA LLENAR EN EL PERIODO NUEVO-->\r\n      <vs-popup :title=\"'Cargar formato para el período '\" :active.sync=\"popupCargarFormato\">\r\n        <CargarFormatoVue v-if=\"popupCargarFormato\" :periodoSelect=\"periodoSelect\" @rechargeFormato=\"rechargeFormato\"/>\r\n      </vs-popup>\r\n    </div>\r\n  </template>\r\n  <script>\r\n  import vSelect from 'vue-select'\r\n  import {\r\n    mapState\r\n} from \"vuex\";\r\n  const FormatoPedidosVue         = ()  => import('@/views/pedidos/components/formato/FormatoPedidos.vue')\r\n  const CargarFormatoVue          = ()  => import('@/views/pedidos/components/formato/CargarFormato')\r\n  const listado_pedidosVue        = ()  => import('@/views/pedidos/listado_pedidos2.vue')\r\n  import Codigosmix from \"@/mixins/Codigosmix\";\r\n  export default{\r\n    components:{\r\n      vSelect,\r\n      listado_pedidosVue,\r\n      FormatoPedidosVue,\r\n      CargarFormatoVue,\r\n    },\r\n    mixins: [Codigosmix],\r\n    data(){\r\n      return{\r\n        usuario:[],\r\n        periodoSelect:'',\r\n        changePeriodo:false,\r\n        popupFormato:false,\r\n        enviarPeriodo:'',\r\n        //variables formato\r\n        arregloSeries:[],\r\n        //fin variables formato\r\n        popupCargarFormato:false,\r\n        pedidos:[],\r\n      }\r\n    },\r\n    computed:{\r\n    ...mapState([\"auth\",'userRoot','susuario','ObjectPedido','groupFacturador','userAsesor']),\r\n    },\r\n    watch:{\r\n      periodoSelect(results){\r\n        let me = this;\r\n        if(results == null || results == null || results == undefined){\r\n          me.changePeriodo = false\r\n          localStorage.removeItem('pid')\r\n          localStorage.removeItem('pnombre')\r\n        }else{\r\n          me.changePeriodo = true\r\n          localStorage.setItem('pid',    results.idperiodoescolar)\r\n          localStorage.setItem('pnombre',results.periodoescolar)\r\n          me.getPedidos()\r\n        }\r\n      }\r\n    },\r\n    created(){\r\n      let me = this;\r\n      me.usuario = JSON.parse(localStorage.getItem(\"usuario\"))\r\n    },\r\n    mounted(){\r\n      let me = this;\r\n      me.getSeries()\r\n      let searchPeriodoActive = localStorage.pid\r\n      let searchPeriodoName   = localStorage.pnombre\r\n      if(searchPeriodoActive){\r\n        me.periodoSelect = { idperiodoescolar:searchPeriodoActive, periodoescolar:searchPeriodoName }\r\n      }\r\n    },\r\n    props:{\r\n      arregloPeriodos:{\r\n            type:Array,\r\n            default:function(){\r\n                return []\r\n            }\r\n        }\r\n    },\r\n    methods:{\r\n      addPedido(){\r\n        let me = this\r\n        let datos = {\r\n          id_pedido:0,\r\n          id_periodo:this.periodoSelect.idperiodoescolar,\r\n          periodo:this.periodoSelect.periodoescolar\r\n        }\r\n        this.$store.dispatch('setPedido',datos)\r\n        localStorage.setItem(\"id_periodo_selected\",     this.periodoSelect.idperiodoescolar)\r\n        localStorage.setItem(\"nombre_periodo_selected\", this.periodoSelect.periodoescolar)\r\n        me.$emit('showPedido',1)\r\n      },\r\n      showPedido(e){\r\n          let me = this\r\n          me.$emit('showPedido',e)\r\n      },\r\n\r\n      changeHandleRecarga(e){\r\n        let me = this;\r\n        me.limpiarCache()\r\n        me.getPedidos()\r\n      },\r\n      updateVentaReal(){\r\n        let me = this\r\n        //si es asesor envio a actualizar la venta real\r\n        if(me.userAsesor) {\r\n          if(me.periodoSelect == null || me.periodoSelect == \"\" || me.periodoSelect == undefined ) { return }\r\n          const { idusuario } = me.usuario; const { idperiodoescolar } = me.periodoSelect\r\n          this.$http.get(this.$server_url+`pedigo_Pagos?updateVentaReal=1&idAsesor=${idusuario}&idPeriodo=${idperiodoescolar}`)\r\n          .then(res => { })\r\n        }\r\n      },\r\n      getPedidos(){\r\n        let me        = this\r\n        var ruta      = \"\"\r\n        me.pedidos    = []\r\n        if(me.periodoSelect == null || me.periodoSelect == \"\" || me.periodoSelect == undefined ) { return }\r\n        if(me.usuario.id_group == 22) ruta = this.$server_url+'get_pedidos_periodo_facturador/'+me.periodoSelect.idperiodoescolar+'/'+me.usuario.idusuario\r\n        else ruta = this.$server_url+'get_pedidos_periodo/'+me.periodoSelect.idperiodoescolar+'/'+me.usuario.id_group+'/'+me.usuario.idusuario\r\n        me.$vs.loading();\r\n        this.$http.get(ruta)\r\n        .then(res => {\r\n          me.$vs.loading.close();\r\n          let datos = res.data.filter(p => p.facturacion_vee == 1)\r\n          if(me.usuario.id_group == 22){\r\n          // me.pedidos    = datos.filter(p =>  ( (p.ifagregado_anticipo_aprobado == 1 || p.ifagregado_anticipo_aprobado == 3 ) || (p.anticipo == 0 || p.anticipo == '' || p.anticipo == null)) )\r\n          me.pedidos    = datos.filter(p =>  ( (p.ifagregado_anticipo_aprobado == 1 || p.ifagregado_anticipo_aprobado == 3 ) || (p.ifanticipo == 0 || p.ifanticipo == null)) )\r\n          return\r\n          }\r\n          if(me.userRoot || me.userAsesor){\r\n            me.pedidos    = res.data\r\n            return\r\n          }\r\n          else{\r\n            me.pedidos    = datos\r\n          }\r\n        })\r\n        .catch((e)=>{\r\n          me.$vs.loading.close();\r\n        })\r\n      },\r\n      getSeries(){\r\n        let me = this\r\n        me.arregloSeries = []\r\n        this.$http.get(this.$server_url+'series_full')\r\n        .then(res => {\r\n            me.arregloSeries = res.data\r\n        })\r\n      },\r\n      verFormato(){\r\n        let me = this;\r\n        let datos  = me.arregloPeriodos\r\n        let setear = datos.filter(p => p.idperiodoescolar == me.periodoSelect.idperiodoescolar)\r\n        me.enviarPeriodo  = setear[0]\r\n        me.popupFormato   = true\r\n      },\r\n      //Metodos para cargar formato\r\n      rechargeFormato(e){\r\n        let me = this;\r\n        me.popupCargarFormato = false;\r\n        me.popupFormato       = true;\r\n      },\r\n    }\r\n  }\r\n  </script>\r\n"]}]}