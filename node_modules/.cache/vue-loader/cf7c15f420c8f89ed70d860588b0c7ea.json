{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\evaluaciones\\revisarEvaluacion.vue?vue&type=style&index=0&id=22ee8bf1&lang=css","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\evaluaciones\\revisarEvaluacion.vue","mtime":1712682815874},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\n.inputRespuesta {\r\n    height: 80px;\r\n    border-radius: 5px;\r\n    border: 1px solid #d5d5d5;\r\n    font-size: 18px;\r\n    padding: 5px 10px 5px 10px;\r\n    resize: vertical;\r\n}\r\n\r\n.altura{\r\n    max-height: 350px;\r\n}\r\n",{"version":3,"sources":["revisarEvaluacion.vue"],"names":[],"mappings":";AAkgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"revisarEvaluacion.vue","sourceRoot":"src/views/evaluaciones","sourcesContent":["<template>\r\n<div class=\"vx-row\">\r\n    <!------BARRA SUPERIOR-------->\r\n    <div class=\"vx-col sm:w-3/4 w-full\" style=\"font-size: 18px;\">\r\n        <div v-if=\"evaluaciones[0]===undefined\">No existe evaluación</div>\r\n        <vx-card v-else v-bind:title=\"evaluaciones[0].nombreasignatura\" title-color=\"primary\">\r\n            <div class=\"vx-row mt-0\">\r\n                <div class=\"vx-col w-full\" align=\"justify\">\r\n                    <b>Inicia: </b> {{evaluaciones[0].fecha_inicio}} - <b>finaliza: </b> {{evaluaciones[0].fecha_fin}}<br>\r\n                    <b>Duración: </b> <span> {{evaluaciones[0].duracion}} minutos </span><br>\r\n                    <div v-if=\"evaluaciones[0].descripcion==='' || evaluaciones[0].descripcion === null || evaluaciones[0].descripcion === 'null'\"></div>\r\n                    <div v-else><b>Descripción: </b> {{evaluaciones[0].descripcion}}<br></div>\r\n                    <div v-if=\"usuario.id_group===6 && previsualizar_eval!=1\"><b>Grupo: </b> {{estudianteSelected.grupo}} <br></div>\r\n                </div>\r\n            </div>\r\n\r\n            <ul v-if=\"previsualizar_eval==1 && usuario.id_group===6\" align=\"center\" class=\"mt-2 mb-0\" style=\"border: 1px solid #D5D5D5; border-radius: 5px;\">\r\n                <vs-radio v-for=\"(grupos_g, key) in evaluaciones[0].grupos_evaluacion\" :key=\"key\" v-model=\"radios1\" v-bind:vs-value=\"grupos_g\" class=\"m-3\" @input=\"verPreguntasEvaluacionGrupos()\">\r\n                    Grupo {{grupos_g}}\r\n                </vs-radio>\r\n            </ul>\r\n        </vx-card>\r\n\r\n        <!-------INICIO SECCION RESPONDER---------->\r\n        <vx-card class=\"mt-5 mb-6\" id=\"seccionImprimir\">\r\n            <div class=\"w-full\" align=\"center\" v-if=\"volverActivo===true && previsualizar_eval!=1\">\r\n                <div class=\"mb-2\">Esta evaluación aún no ha sido resuelta.</div>\r\n            </div>\r\n\r\n            <div class=\"text-center\" v-else>\r\n                <div cols=\"12\" v-for=\"(item, index) in preguntas.items\" :key=\"index\" v-bind:id=\"'contenPreg'+(index+1)\" style=\"display: none;\" class=\"mb-4\">\r\n\r\n                    <div class=\"mb-5\" style=\"font-size: 20px;\" align=\"center\">\r\n                        <vs-divider v-if=\"index>0 && vertodo===true\" />\r\n                        <div align=\"right\">\r\n                            <b>{{item.puntaje}}</b> / {{item.puntaje_pregunta}} pts<br>\r\n                            {{item.nombre_tipo}}\r\n                        </div>\r\n                        <div align=\"left\">\r\n                            <b>{{ index+1 }}) {{item.descripcion}}</b> <br>\r\n                        </div>\r\n                        <img style=\"border-radius: 5px;\" v-if=\"item.img_pregunta\" v-bind:src=\"$data_url+'archivos/img/img_preguntas/'+item.img_pregunta\" class=\"img-responsive mt-2 altura\" min-width=\"350px\" width=\"450px\">\r\n                    </div>\r\n\r\n                    <ol type=\"a\">\r\n                        <div align=\"left\" style=\"font-size: 18px;\">\r\n                            <!-----PREGUNTAS SELECCION---->\r\n                            <div v-if=\"item.id_tipo_pregunta===1 || item.id_tipo_pregunta===5 || item.id_tipo_pregunta===3\">\r\n                                <div v-for=\"(itemop, index) in item.opciones\" :key=\"index\">\r\n                                    <li>\r\n                                        <vs-checkbox disabled=\"true\" class=\"mb-4\" v-model=\"opcionesSelec\" v-bind:vs-value=\"itemop.id_opcion_pregunta\">\r\n                                            {{ itemop.opcion }}\r\n                                            <img style=\"border-radius: 5px;\" v-if=\"itemop.img_opcion\" v-bind:src=\"$data_url+'archivos/img/img_preguntas/'+itemop.img_opcion\" class=\"img-responsive altura\" width=\"300px\">\r\n                                            <b v-if=\"itemop.tipo===1\" style=\"color: #43D59B; font-size: 20px;\" class=\"ml-2\">✓</b>\r\n                                        </vs-checkbox>\r\n                                    </li>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <!-----PREGUNTAS ESCRITAS---->\r\n                            <div v-if=\"item.id_tipo_pregunta===2 || item.id_tipo_pregunta===6\">\r\n                                <div align=\"right\" class=\"mb-3\" v-if=\"usuario.id_group != 4 && previsualizar_eval!=1\">\r\n                                    <vs-input type=\"number\" v-model=\"calificacionManual\" style=\"display: inline-block; width: 80px;\" />\r\n                                    <vs-button v-if=\"calificacionManual>=0 && calificacionManual<=item.puntaje_pregunta\" style=\"display: inline-block; width: 80px; padding-left: 12px;\" @click=\"calificarManual(item.puntaje, item.id_respuesta_pregunta)\">calificar</vs-button>\r\n                                    <vs-button v-else disabled style=\"display: inline-block; width: 80px; padding-left: 12px;\">calificar</vs-button>\r\n                                </div>\r\n\r\n                                <div v-for=\"(itemop, index1) in item.opciones\" :key=\"index1\">\r\n                                    <textarea disabled=\"true\" v-bind:placeholder=\"item.respuesta\" class=\"w-full respAbierta inputRespuesta\" />\r\n                                    Respuesta correcta: {{itemop.opcion}}\r\n                        </div>\r\n                        <div v-if=\"item.opciones.length <= 0\">\r\n                            <textarea disabled=\"true\" v-bind:placeholder=\"item.respuesta\" class=\"w-full respAbierta inputRespuesta\" />\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                </ol>\r\n            </div>\r\n\r\n        <div v-if=\"preguntas.items===undefined\"></div>\r\n        <div v-else>\r\n            <vs-pagination class=\"mt-6\" color=\"success\" v-if=\"iniciarActivo===true\" :total=\"preguntas.items.length\" v-model=\"currentx\" @input=\"verPreguntaSelec(currentx-1)\"></vs-pagination>\r\n        </div>\r\n        </div>\r\n    </vx-card>\r\n</div>\r\n\r\n<!------BARRA DERECHA-------->\r\n<div class=\"vx-col sm:w-1/4 w-full\">\r\n    <vx-card>\r\n        <div align=\"center\" v-if=\"previsualizar_eval==1 && usuario.id_group===6\">\r\n            <vs-alert color=\"primary\" title=\"Aviso\" active=\"true\">\r\n                Las respuestas no se muestran en el perfil del estudiante.\r\n            </vs-alert>\r\n        </div>\r\n\r\n        <div align=\"center\" v-if=\"previsualizar_eval!=1 && preguntasPendientesRevision.length>0\">\r\n            <vs-alert color=\"warning\" title=\"Aviso\" active=\"true\" class=\"mb-4\">\r\n                Existen preguntas pendientes de revisión por el docente.\r\n            </vs-alert>\r\n            <div class=\"btn-group mb-6\">\r\n                <vs-button v-for=\"(itemrev, indexrev) in preguntasPendientesRevision\" :key=\"indexrev\" @click=\"vertodo=false; currentx=(preguntasPendientesRevision[indexrev]+1); verPreguntaSelec(preguntasPendientesRevision[indexrev]+1)\" color=\"warning\" type=\"border\" class=\"m-1\">\r\n                    {{ preguntasPendientesRevision[indexrev]+1 }}\r\n                </vs-button>\r\n            </div>\r\n        </div>\r\n\r\n        <div v-if=\"evaluaciones[0]===undefined\"></div>\r\n        <div v-else>\r\n        <div v-if=\"previsualizar_eval!=1\" align=\"center\">\r\n            <vs-divider v-if=\"usuario.id_group === 6\" class=\"mt-2\"> Estudiante </vs-divider>\r\n            <v-select v-if=\"usuario.id_group === 6\" class=\"mb-6 w-full\" @input=\"verEvalEstudiante()\" v-model=\"estudianteSelected\" :options=\"estudiantes\" :value=\"estudianteSelected\" :dir=\"$vs.rtl ? 'rtl' : 'ltr'\" />\r\n\r\n            <vs-divider class=\"mt-2\"> Calificación </vs-divider>\r\n            <div v-if=\"volverActivo===true\">\r\n                El estudiante seleccionado aún no ha realizado la evaluación.\r\n                <div style=\"font-size: 50px; color: #2974FE;\" class=\"mb-4\">0<span style=\"font-size: 30px;\"> / {{evaluaciones[0].puntos}}</span></div>\r\n            </div>\r\n            <div v-else>\r\n                <div style=\"font-size: 50px; color: #2974FE;\" class=\"mb-4\">{{calificacionObtenida}}<span style=\"font-size: 30px;\"> / {{evaluaciones[0].puntos}}</span></div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n\r\n        <div align=\"center\" v-if=\"volverActivo===false\">\r\n            <vs-divider> Preguntas </vs-divider>\r\n            <div class=\"btn-group\">\r\n            <vs-button v-for=\"(item, index) in preguntas.items\" :key=\"index\" @click=\"vertodo=false; currentx=(index+1); verPreguntaSelec(index)\" color=\"primary\" type=\"border\" class=\"m-1\">\r\n                {{ index+1 }}\r\n                <!--<div v-if=\"preguntas.items[index].id_tipo_pregunta===2\">pendiente</div>-->\r\n            </vs-button>\r\n            </div>\r\n        </div>\r\n\r\n\r\n        <div align=\"center\">\r\n            <vs-button v-if=\"volverActivo===false\" color=\"dark\" type=\"border\" class=\"mt-6 m-1\" @click=\"mostrarTodo()\">Ver todo</vs-button>\r\n\r\n\r\n            <vs-button v-if=\"volverActivo===false\" color=\"warning\" type=\"border\" class=\"mt-6 m-1\" @click=\"$router.push('/evaluacion_imprimir')\">&nbsp;&nbsp;&nbsp;&nbsp;PDF&nbsp;&nbsp;&nbsp;&nbsp;</vs-button>\r\n\r\n            <!--<div v-if=\"previsualizar_eval==1 && volverActivo===false\" align=\"center\" class=\"w-full\"><vs-button color=\"warning\" type=\"border\" class=\"mt-6 m-1\" @click=\"imprimirEval()\">Imprimir</vs-button></div>-->\r\n\r\n            <vs-button v-if=\"usuario.id_group === 4\" color=\"success\" type=\"border\" class=\"mt-6\" @click=\"$router.push('/estudiante/evaluaciones')\"><b>← Volver</b></vs-button>\r\n\r\n            <vs-button v-else color=\"success\" type=\"border\" class=\"mt-6 m-1\" @click=\"$router.push('/evaluaciones')\"><b>← Volver</b></vs-button>\r\n        </div>\r\n\r\n    </vx-card>\r\n    </div>\r\n\r\n</div>\r\n</template>\r\n<script>\r\nimport flatPickr from 'vue-flatpickr-component';\r\nimport 'flatpickr/dist/flatpickr.css';\r\nimport Vue from 'vue'\r\nimport axios from 'axios'\r\nimport vSelect from 'vue-select'\r\nimport moment from 'moment'\r\nimport $ from 'jquery'\r\nimport VueRouter from 'vue-router'\r\nvar respondidas = [];\r\nvar x = null;\r\nexport default {\r\n    data() {\r\n        return {\r\n            preguntas: [],\r\n            pregunta: {\r\n                descripcion: '',\r\n                id_tema: '',\r\n                respuesta: '',\r\n                opcion1: '',\r\n                opcion2: '',\r\n                opcion3: '',\r\n                img_pregunta: '',\r\n                img_respuesta: '',\r\n                img_opcion1: '',\r\n                img_opcion2: '',\r\n                img_opcion3: ''\r\n            },\r\n            evaluaciones: [],\r\n            evaluacion: {\r\n                nombre: '',\r\n                asignatura: '',\r\n                descripcion: '',\r\n                fecha_inicio: '',\r\n                fecha_fin: '',\r\n                estado: '',\r\n                duracion: '',\r\n                nombre_evaluacion: ''\r\n            },\r\n            usuario: [],\r\n            estudiante: null,\r\n            nombre_estudiante: null,\r\n            apellido_estudiante: null,\r\n            opcionesSelec: [],\r\n            activeConfirm: false,\r\n            urlOrigen: '',\r\n            iniciarActivo: true,\r\n            currentx: 1,\r\n            volverActivo: false,\r\n            verbtniniciar: true,\r\n            calificacion: 0,\r\n            id_evalRevisar: '',\r\n            estudianteSelected: '',\r\n            estudiantes: [],\r\n            puntaje: '',\r\n            previsualizar_eval: 1,\r\n            grupo_selected: '',\r\n            radios1: 1,\r\n            respuestasEstudiante: [],\r\n            calificacionObtenida: '',\r\n            respuestasEscritas: [],\r\n            interarResEscr: 0,\r\n            grupo: '',\r\n            vertodo: false,\r\n            calificacionManual: 0,\r\n            grupoSelectedVal: 1,\r\n            preguntasPendientesRevision: [],\r\n        }\r\n    },\r\n    components: {\r\n        'v-select': vSelect,\r\n        flatPickr\r\n    },\r\n    created() {\r\n        this.id_evalRevisar = localStorage.getItem(\"id_evalRevisar\");\r\n        this.previsualizar_eval = localStorage.getItem(\"previsualizar_eval\");\r\n        this.$vs.loading()\r\n        this.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n        var url = location.pathname.split('/');\r\n        var urlBack = window.location.href\r\n        var urlV = urlBack.split('/')\r\n        this.urlOrigen = urlV[0] + '/' + urlV[1] + '/' + urlV[2] + '/estudiante/evaluaciones'\r\n    },\r\n    mounted() {\r\n        this.datosInicio(this.id_evalRevisar, this.previsualizar_eval)\r\n    },\r\n    methods: {\r\n        datosInicio(id_evalRevisar, previsualizar_eval) {\r\n            let me = this;\r\n            let formData = new FormData();\r\n            formData.append('codigo', localStorage.codigo);\r\n            formData.append('evaluacion', id_evalRevisar);\r\n\r\n            me.$http.post(this.$server_url+'estudiantesEvalCurso', formData)\r\n                .then(function (response) {\r\n                    if (response.data[0] === undefined) {\r\n                        if( me.previsualizar_eval!=1 ){\r\n                            me.$vs.notify({\r\n                                text: 'Ningun estudiante ha realizado esta evaluación.',\r\n                                color: 'warning',\r\n                                iconPack: 'feather'\r\n                            })\r\n                        }\r\n                        me.$vs.loading.close()\r\n                    } else {\r\n                        me.estudiantes = response.data;\r\n                        me.estudianteSelected = {\r\n                            id: response.data[0].id,\r\n                            label: response.data[0].label,\r\n                            grupo: response.data[0].grupo\r\n                        }\r\n                        me.grupoSelectedVal = response.data[0].grupo\r\n                        me.nombre_estudiante = response.data[0].label;\r\n                    }\r\n\r\n                    me.$http.get(me.$server_url+'evaluacionEstudiante/' + id_evalRevisar)\r\n                        .then(function (response) {\r\n                            if (response.data.length > 0) {\r\n                                me.evaluaciones = response.data\r\n\r\n                                me.$http.get(me.$server_url+'getRespuestas/' + id_evalRevisar)\r\n                                .then(function (response) {\r\n                                    var pregOpcion = response.data.items;\r\n                                    if (pregOpcion === undefined) {\r\n                                        me.$vs.notify({\r\n                                            text: 'Esta evaluación aun no tiene preguntas asignadas',\r\n                                            color: 'warning',\r\n                                            iconPack: 'feather'\r\n                                        })\r\n                                        me.$vs.loading.close()\r\n                                        return\r\n                                    }\r\n\r\n                                    if (previsualizar_eval == 1) {\r\n                                        me.verPreguntasEvaluacionGrupos();\r\n                                        me.iniciar();\r\n                                    } else {\r\n\r\n                                        me.verEvalEstudiante();\r\n                                        me.iniciar();\r\n                                    }\r\n                                })\r\n                                .catch(function (error) {\r\n                                    console.log(error);\r\n                                })\r\n                            } else {\r\n                                alert('No existen preguntas para esta evaluación');\r\n                                //window.location.href = this.urlOrigen;\r\n                            }\r\n                        })\r\n                        .catch(function (error) {\r\n                            console.log(error);\r\n                        })\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n\r\n\r\n\r\n        },\r\n        getEvaluacion(item) {\r\n            let me = this\r\n            var formData = new FormData();\r\n            if (me.usuario.id_group === 4) {\r\n                formData.append('estudiante', me.usuario.idusuario);\r\n            } else {\r\n                formData.append('estudiante', me.estudianteSelected.id);\r\n            }\r\n            formData.append('evaluacion', me.id_evalRevisar);\r\n            me.$http.post(this.$server_url+`verifRespEvaluacion`, formData).then(res => {\r\n                if (res.data === 0) {\r\n                    me.volverActivo = true\r\n                } else {\r\n                    me.volverActivo = false\r\n                    me.calificacionObtenida = (res.data[0].calificacion).toFixed(2)\r\n                    localStorage.calificacionImprimir = me.calificacionObtenida +'/'+ me.evaluaciones[0].puntos\r\n                }\r\n                me.$vs.loading.close()\r\n            })\r\n        },\r\n        iniciar() {\r\n            let me = this\r\n            if (me.preguntas.items === undefined) {\r\n                console.log();\r\n            } else {\r\n                me.iniciarActivo = true;\r\n                for (let j = 1; j <= me.preguntas.items.length; j++) {\r\n                    document.getElementById(\"contenPreg\" + j).style.display = \"none\";\r\n                }\r\n                me.verbtniniciar = false;\r\n                document.getElementById(\"contenPreg1\").style.display = \"block\"; ///muestra la primera pregunta\r\n            }\r\n            me.$vs.loading.close()\r\n        },\r\n        verPreguntaSelec(index) {\r\n            let me = this\r\n            for (let i = (me.preguntas.items.length + 1); i <= (me.respuestasEscritas.length + me.preguntas.items.length); i++) {\r\n                document.getElementById(\"contenPregEscr\" + i).style.display = \"none\";\r\n            }\r\n\r\n            for (let j = 1; j <= me.preguntas.items.length; j++) {\r\n                document.getElementById(\"contenPreg\" + j).style.display = \"none\";\r\n            }\r\n            try{\r\n                document.getElementById(\"contenPreg\" + (index + 1)).style.display = \"block\";\r\n            }catch (error){\r\n\r\n            }\r\n\r\n        },\r\n        verEvalEstudiante() {\r\n            let me = this;\r\n            if (me.estudianteSelected.grupo === undefined) {\r\n                me.$vs.notify({\r\n                    text: 'Ningún estudiante ha respondido esta evaluación todavía.',\r\n                    color: 'warning',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-alert-triangle'\r\n                })\r\n                return;\r\n            }\r\n            me.grupo = me.estudianteSelected.grupo;\r\n            var estudiante;\r\n            if (me.usuario.id_group === 4) {\r\n                me.grupo = localStorage.getItem(\"grupo_estudiante\")\r\n                estudiante = me.usuario.idusuario\r\n                localStorage.nombresImprimir = me.usuario.nombres + ' ' + me.usuario.apellidos\r\n            } else {\r\n                estudiante = me.estudianteSelected.id\r\n                localStorage.nombresImprimir = me.estudianteSelected.label\r\n            }\r\n\r\n            if( estudiante===undefined ){\r\n                console.log('no existen estudiantes');\r\n            }else{\r\n                let formData = new FormData();\r\n                localStorage.grupoevalImprimir = me.grupo\r\n                localStorage.estudianteEvalImprimir = estudiante\r\n                formData.append('grupo', me.grupo);\r\n                formData.append('evaluacion', me.id_evalRevisar);\r\n                formData.append('estudiante', estudiante);\r\n                me.$vs.loading()\r\n                me.$http.post(this.$server_url+'pregEvaluacionEstudiante', formData)\r\n                .then(function (response) {\r\n                    if (response.data.length === 0) {\r\n                        me.preguntasPendientesRevision=[];\r\n                        me.preguntas=[];\r\n                        me.calificacionObtenida=0;\r\n                        me.$vs.loading.close()\r\n                        me.$vs.notify({\r\n                            text: 'El estudiante seleccionado no ha resuelto la evaluación',\r\n                            color: 'warning',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-alert-triangle'\r\n                        })\r\n                    } else {\r\n                        me.preguntasPendientesRevision=[];\r\n                        me.calificacionObtenida = '';\r\n                        me.preguntas = response.data;\r\n                        me.getEvaluacion(me.id_evalRevisar);\r\n                        me.currentx = 1;\r\n\r\n                        var resps = []\r\n                        var respString = []\r\n                        for (var i = 0; i < response.data.items.length; i++) {\r\n                            respString = (response.data.items[i].respuesta).split(',')\r\n                            for (var j = 0; j < respString.length; j++) {\r\n                                resps.push(parseInt(respString[j]))\r\n                            }\r\n                            respString = []\r\n                        }\r\n                        me.opcionesSelec = resps;\r\n\r\n\r\n                        for (var i = 0; i < response.data.items.length; i++) {\r\n                            if( response.data.items[i].id_tipo_pregunta === 6 || response.data.items[i].id_tipo_pregunta === 2 ){\r\n                                me.preguntasPendientesRevision.push(i)\r\n                            }\r\n                        }\r\n\r\n                        me.$vs.loading.close()\r\n                    }\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error)\r\n                })\r\n            }\r\n\r\n        },\r\n        verPreguntasEvaluacionGrupos() {\r\n            let me = this\r\n            let formData = new FormData();\r\n            formData.append('grupo', me.radios1);\r\n            formData.append('evaluacion', me.id_evalRevisar);\r\n            me.$http.post(this.$server_url+`pregEvaluacionGrupo`, formData).then(res => {\r\n                if (res.data.length === 0) {\r\n                    // me.volverActivo=true\r\n                    me.$vs.loading.close()\r\n                } else {\r\n                    me.preguntas = res.data;\r\n                    me.currentx = 1;\r\n                }\r\n            })\r\n        },\r\n        mostrarTodo() {\r\n            let me = this\r\n            me.vertodo = true;\r\n            if (me.preguntas.items === undefined) {\r\n                console.log();\r\n            } else {\r\n                for (let j = 1; j <= me.preguntas.items.length; j++) {\r\n                    document.getElementById(\"contenPreg\" + j).style.display = \"block\";\r\n                }\r\n            }\r\n\r\n            for (let j = (me.preguntas.items.length + 1); j <= (me.respuestasEscritas.length + me.preguntas.items.length); j++) {\r\n                document.getElementById(\"contenPregEscr\" + j).style.display = \"block\";\r\n            }\r\n\r\n        },\r\n        calificarManual(puntaje, id_respuesta) {\r\n            let me = this\r\n            me.calificacionObtenida = (parseFloat(me.calificacionManual) + (parseFloat(me.calificacionObtenida) - parseFloat(puntaje))).toFixed(2);\r\n            me.preguntasPendientesRevision=[]\r\n            let formData = new FormData();\r\n            formData.append('estudiante', me.estudianteSelected.id);\r\n            formData.append('calificacion', me.calificacionObtenida);\r\n            formData.append('evaluacion', me.id_evalRevisar);\r\n            formData.append('puntaje', me.calificacionManual);\r\n            formData.append('id_respuesta', id_respuesta);\r\n\r\n            me.$http.post(this.$server_url+`modificarEvaluacion`, formData).then(res => {\r\n                me.verEvalEstudiante()\r\n                me.$vs.notify({\r\n                    text: 'Calificación guardada correctamente',\r\n                    color: 'success',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-check'\r\n                })\r\n            })\r\n            me.calificacionManual = 0;\r\n        },\r\n        imprimirEval(){\r\n            let me = this\r\n            me.mostrarTodo()\r\n            var ficha = document.getElementById('seccionImprimir');\r\n            window.print();\r\n            /*var ficha = document.getElementById('seccionImprimir');\r\n            var ventimp = window.open(' ', 'popimpr');\r\n            ventimp.document.write( ficha.innerHTML );\r\n            ventimp.document.close();\r\n            ventimp.print( );\r\n            ventimp.close();*/\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n.inputRespuesta {\r\n    height: 80px;\r\n    border-radius: 5px;\r\n    border: 1px solid #d5d5d5;\r\n    font-size: 18px;\r\n    padding: 5px 10px 5px 10px;\r\n    resize: vertical;\r\n}\r\n\r\n.altura{\r\n    max-height: 350px;\r\n}\r\n</style>\r\n"]}]}