{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\documentosMinisterio\\editarDocumentos.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\documentosMinisterio\\editarDocumentos.vue","mtime":1712682815807},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nimport axios from 'axios'\r\nimport vSelect from 'vue-select'\r\nimport vueFilePond from \"vue-filepond\";\r\nimport \"filepond/dist/filepond.min.css\";\r\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.min.css\";\r\nimport FilePondPluginFileValidateType from \"filepond-plugin-file-validate-type\";\r\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\r\nconst FilePond = vueFilePond(\r\n    FilePondPluginFileValidateType,\r\n    FilePondPluginImagePreview\r\n);\r\nexport default {\r\n    components: {\r\n        FilePond,\r\n        'v-select': vSelect,\r\n    },\r\n    data() {\r\n        return {\r\n            estado: false,\r\n            documento: {},\r\n            asignatura: {},\r\n            documentos: [],\r\n            asignaturas: [],\r\n            usuario: [],\r\n            id: ''\r\n        }\r\n    },\r\n    created() {\r\n        this.documento = JSON.parse(localStorage.getItem('doc'))\r\n        this.asignatura = this.documento.asignaturas\r\n    },\r\n    mounted() {\r\n        let me = this\r\n        me.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n        console.log(this.documento.nombre)\r\n        this.getAsignaturas()\r\n        this.getDocumento()\r\n    },\r\n    methods: {\r\n        onprocessfile(error, file) {\r\n            this.getDocumento()\r\n            this.myFiles.push(JSON.parse(file.serverId))\r\n            console.log(this.myFiles)\r\n        },\r\n        onprocessfilestart(file) {\r\n            console.log(\"upload\");\r\n            this.disable = true\r\n            this.isActive = true\r\n        },\r\n        onUpdateFiles(file) {\r\n            this.formData.image = file;\r\n        },\r\n        handleFilePondInit: function () {\r\n            console.log(\"FilePond has initialized\");\r\n        },\r\n        resp(r) {\r\n            console.log(r)\r\n            console.log(\"hi\")\r\n        },\r\n        getAsignaturas() {\r\n            let me = this\r\n            this.$http.get(this.$server_url + 'asignaturasDoc/' + me.usuario.idusuario).then(res => {\r\n                    me.asignaturas = res.data;\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n        },\r\n        getDocumento() {\r\n            let me = this;\r\n            this.$vs.loading()\r\n            this.$http.get(this.$server_url + 'document?id=' + this.documento.id)\r\n                .then(res => {\r\n                    me.documentos = res.data\r\n                    console.log(res.data)\r\n                    me.$vs.loading.close()\r\n\r\n                })\r\n                .catch(error => {\r\n                    console.log('no se conecto a los documentos ministeriales ' + error)\r\n                    me.$vs.loading.close()\r\n                })\r\n        },\r\n        descargaArchivo(item) {\r\n            axios({\r\n                url: 'https://data.prolipadigital.com.ec/documentos/' + item, //your url\r\n                method: 'GET',\r\n                responseType: 'blob', // important\r\n            }).then((response) => {\r\n                const url = window.URL.createObjectURL(new Blob([response.data]));\r\n                const link = document.createElement('a');\r\n                link.href = url;\r\n                link.setAttribute('download', item); //or any other extension\r\n                document.body.appendChild(link);\r\n                link.click();\r\n            });\r\n        },\r\n        mostrarArchivo(item) {\r\n            window.open('https://view.officeapps.live.com/op/embed.aspx?src=https://data.prolipadigital.com.ec/documentos/' + item)\r\n        },\r\n        agregarDocumento() {\r\n            let me = this;\r\n            this.documento.asignaturas = this.asignatura\r\n            this.$http.post(this.$server_url + 'document?id=' + this.documento.id, this.documento)\r\n                .then(function (response) {})\r\n                .catch(function (error) {})\r\n        },\r\n        openConfirm(id, nombre) {\r\n            let me = this;\r\n            me.id = id\r\n\r\n            this.$vs.dialog({\r\n                type: 'confirm',\r\n                color: 'danger',\r\n                title: `Confirmación`,\r\n                text: 'Está seguro en eliminar este archivo',\r\n                accept: this.getEliminar\r\n            })\r\n        },\r\n        getEliminar(id) {\r\n            let me = this;\r\n            console.log(id)\r\n            this.$http.post(this.$server_url + \"archivoDelete?id=\" + me.id)\r\n\r\n                .then(function (response) {\r\n                    me.$vs.notify({\r\n                        color: 'warning',\r\n                        text: 'Registro eliminado'\r\n                    })\r\n                    me.getDocumento()\r\n                })\r\n                .catch(function (error) {})\r\n        }\r\n    },\r\n}\r\n",{"version":3,"sources":["editarDocumentos.vue"],"names":[],"mappings":";AAkEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"editarDocumentos.vue","sourceRoot":"src/views/documentosMinisterio","sourcesContent":["<template>\r\n<div class=\"vx-col md:w-full w-full mb-base h-screen\">\r\n    <vx-card class=\"h-full\">\r\n        <div class=\"vx-row mt-4\">\r\n            <div class=\"vx-col sm:w-1/2 lg:w-1/2 w-full\" align=\"left\">\r\n                <div style=\"font-size: 12px; \">Nombre: </div>\r\n                <vs-input type=\"text\" class=\"inputx w-full mb-6\" v-model=\"documento.nombre\" @input=\"agregarDocumento()\" maxlength=\"100\" placeholder=\"Nombre del documento\" />\r\n            </div>\r\n            <div class=\"vx-col sm:w-1/2 lg:w-1/2 w-full\" align=\"left\">\r\n                <div style=\"font-size: 12px; \">Descripción: </div>\r\n                <vs-input type=\"text\" class=\"inputx w-full mb-6\" v-model=\"documento.descripcion\" @input=\"agregarDocumento()\" maxlength=\"100\" placeholder=\"Descripción del documento\" />\r\n            </div>\r\n        </div>\r\n        <div class=\"vx-row mb-4\">\r\n            <div class=\"vx-col sm:w-1/2 lg:w-1/2 w-full\" align=\"left\">\r\n                <div style=\"font-size: 12px; \">Asignaturas: </div>\r\n                <v-select multiple class=\"w-full\" v-model=\"asignatura\" :options=\"asignaturas\" @input=\"agregarDocumento()\"/>\r\n            </div>\r\n        </div>\r\n        <div class=\"vx-row mb-4\">\r\n            <div class=\"vx-col sm:w-1/2 lg:w-1/2 w-full\" align=\"left\">\r\n                <div style=\"font-size: 12px; \">Estado: </div>\r\n                <vs-switch v-model=\"documento.status\" @input=\"agregarDocumento()\"></vs-switch>\r\n            </div>\r\n        </div>\r\n        <vs-divider>Archivos cargados</vs-divider>\r\n        <vs-button @click=\"estado = !estado\">Agregar archivo</vs-button>\r\n        <div v-if=\"estado == true\" class=\"vx-col w-full h-64 borde-unidad\">\r\n            <FilePond class=\"h-64\" label-idle=\"Suelta los archivos aquí...\" max-files=\"4\" v-bind:allow-multiple=\"true\" :chunkUploads=\"false\" :chunkForce=\"false\" :onprocessfilestart=\"onprocessfilestart\" chunkRetryDelays=\"[100,100,100]\" chunkSize=\"100\" @onUpdateFiles=\"onUpdateFiles\" @progressfiles=\"resp\" :server=\"$data_url+'api/uploadDocuemntos?id='+documento.id\" @init=\"handleFilePondInit\" :storeAsFile=\"true\" :onprocessfile=\"onprocessfile\" />\r\n        </div>\r\n        <div class=\"vx-col  w-full\">\r\n            <vs-table max-items=\"10\" search pagination :data=\"documentos\" style=\"margin-top:-20px\" class=\"stripe\">\r\n                <template slot=\"thead\">\r\n                    <vs-th>Nombre</vs-th>\r\n                    <vs-th>url</vs-th>\r\n                    <vs-th>Fecha de creación</vs-th>\r\n                </template>\r\n                <template slot-scope=\"{data}\">\r\n                    <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                        <vs-td>\r\n                            {{data[indextr].nombre}} <br>\r\n                        </vs-td>\r\n                        <vs-td class=\"text-center\">\r\n                            <vx-tooltip text=\"Descargar archivo en mi equipo\" position=\"bottom\" style=\"display: inline-block\" color=\"success\">\r\n                                <vs-button style=\"display: inline\" class=\"m-1\" :href=\"'https://data.prolipadigital.com.ec/documentos/'+data[indextr].url\" size=\"small\" icon-pack=\"feather\" icon=\"icon-arrow-down\" color=\"success\" type=\"border\">Descargar</vs-button>\r\n                            </vx-tooltip>\r\n                            <vx-tooltip style=\"display: inline-block;\" text=\"Visualizar archivo\" position=\"bottom\" color=\"primary\">\r\n                                <vs-button style=\"display: inline\" @click=\"mostrarArchivo(data[indextr].url)\" size=\"small\" icon-pack=\"feather\" icon=\"icon-eye\" color=\"primary\" type=\"border\">Visualizar</vs-button>\r\n                            </vx-tooltip>\r\n                            <!-- <a :href=\"'https://data.prolipadigital.com.ec/documentos/'+data[indextr].url\" download>Descargar</a> -->\r\n                        </vs-td>\r\n                        <vs-td>\r\n                            {{data[indextr].updated_at}} <br>\r\n                        </vs-td>\r\n                        <vs-td>\r\n                            <vs-button type=\"border\" size=\"small\" icon-pack=\"feather\" icon=\"icon-trash\" class=\"mr-2\" color=\"danger\" @click=\"openConfirm(data[indextr].id,data[indextr].nombre)\"></vs-button>\r\n                        </vs-td>\r\n                    </vs-tr>\r\n                </template>\r\n            </vs-table>\r\n        </div>\r\n    </vx-card>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nimport vSelect from 'vue-select'\r\nimport vueFilePond from \"vue-filepond\";\r\nimport \"filepond/dist/filepond.min.css\";\r\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.min.css\";\r\nimport FilePondPluginFileValidateType from \"filepond-plugin-file-validate-type\";\r\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\r\nconst FilePond = vueFilePond(\r\n    FilePondPluginFileValidateType,\r\n    FilePondPluginImagePreview\r\n);\r\nexport default {\r\n    components: {\r\n        FilePond,\r\n        'v-select': vSelect,\r\n    },\r\n    data() {\r\n        return {\r\n            estado: false,\r\n            documento: {},\r\n            asignatura: {},\r\n            documentos: [],\r\n            asignaturas: [],\r\n            usuario: [],\r\n            id: ''\r\n        }\r\n    },\r\n    created() {\r\n        this.documento = JSON.parse(localStorage.getItem('doc'))\r\n        this.asignatura = this.documento.asignaturas\r\n    },\r\n    mounted() {\r\n        let me = this\r\n        me.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n        console.log(this.documento.nombre)\r\n        this.getAsignaturas()\r\n        this.getDocumento()\r\n    },\r\n    methods: {\r\n        onprocessfile(error, file) {\r\n            this.getDocumento()\r\n            this.myFiles.push(JSON.parse(file.serverId))\r\n            console.log(this.myFiles)\r\n        },\r\n        onprocessfilestart(file) {\r\n            console.log(\"upload\");\r\n            this.disable = true\r\n            this.isActive = true\r\n        },\r\n        onUpdateFiles(file) {\r\n            this.formData.image = file;\r\n        },\r\n        handleFilePondInit: function () {\r\n            console.log(\"FilePond has initialized\");\r\n        },\r\n        resp(r) {\r\n            console.log(r)\r\n            console.log(\"hi\")\r\n        },\r\n        getAsignaturas() {\r\n            let me = this\r\n            this.$http.get(this.$server_url + 'asignaturasDoc/' + me.usuario.idusuario).then(res => {\r\n                    me.asignaturas = res.data;\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n        },\r\n        getDocumento() {\r\n            let me = this;\r\n            this.$vs.loading()\r\n            this.$http.get(this.$server_url + 'document?id=' + this.documento.id)\r\n                .then(res => {\r\n                    me.documentos = res.data\r\n                    console.log(res.data)\r\n                    me.$vs.loading.close()\r\n\r\n                })\r\n                .catch(error => {\r\n                    console.log('no se conecto a los documentos ministeriales ' + error)\r\n                    me.$vs.loading.close()\r\n                })\r\n        },\r\n        descargaArchivo(item) {\r\n            axios({\r\n                url: 'https://data.prolipadigital.com.ec/documentos/' + item, //your url\r\n                method: 'GET',\r\n                responseType: 'blob', // important\r\n            }).then((response) => {\r\n                const url = window.URL.createObjectURL(new Blob([response.data]));\r\n                const link = document.createElement('a');\r\n                link.href = url;\r\n                link.setAttribute('download', item); //or any other extension\r\n                document.body.appendChild(link);\r\n                link.click();\r\n            });\r\n        },\r\n        mostrarArchivo(item) {\r\n            window.open('https://view.officeapps.live.com/op/embed.aspx?src=https://data.prolipadigital.com.ec/documentos/' + item)\r\n        },\r\n        agregarDocumento() {\r\n            let me = this;\r\n            this.documento.asignaturas = this.asignatura\r\n            this.$http.post(this.$server_url + 'document?id=' + this.documento.id, this.documento)\r\n                .then(function (response) {})\r\n                .catch(function (error) {})\r\n        },\r\n        openConfirm(id, nombre) {\r\n            let me = this;\r\n            me.id = id\r\n\r\n            this.$vs.dialog({\r\n                type: 'confirm',\r\n                color: 'danger',\r\n                title: `Confirmación`,\r\n                text: 'Está seguro en eliminar este archivo',\r\n                accept: this.getEliminar\r\n            })\r\n        },\r\n        getEliminar(id) {\r\n            let me = this;\r\n            console.log(id)\r\n            this.$http.post(this.$server_url + \"archivoDelete?id=\" + me.id)\r\n\r\n                .then(function (response) {\r\n                    me.$vs.notify({\r\n                        color: 'warning',\r\n                        text: 'Registro eliminado'\r\n                    })\r\n                    me.getDocumento()\r\n                })\r\n                .catch(function (error) {})\r\n        }\r\n    },\r\n}\r\n</script>\r\n"]}]}