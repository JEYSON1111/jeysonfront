{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\certificados\\components\\ReporteCapacitacionGrupal.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\certificados\\components\\ReporteCapacitacionGrupal.vue","mtime":1712682815589},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nimport vSelect from 'vue-select';\r\nimport chart from \"vue-apexcharts\";\r\nexport default{\r\n    components: { apexchart: chart,vSelect },\r\n    data(){\r\n        return{\r\n            valorSelect:'',\r\n            tipo:0,\r\n            series: [{\r\n                name: 'Reporte Capacitaciones',\r\n                data: [1,5,6,8,10,6,1]\r\n            }],\r\n            options: {\r\n                chart: {\r\n                height: 350,\r\n                type: 'bar',\r\n                },\r\n                plotOptions: {\r\n                    bar: {\r\n                        borderRadius: 10,\r\n                        dataLabels: {\r\n                        position: 'top', // top, center, bottom\r\n                        },\r\n                    },\r\n                },\r\n                dataLabels: {\r\n                    enabled: true,\r\n                    formatter: function (val) {\r\n                        return val + ' Capacit.';\r\n                    },\r\n                    offsetY: -20,\r\n                    style: {\r\n                        fontSize: '12px',\r\n                        colors: ['#304758'],\r\n                    },\r\n                },\r\n                xaxis: {\r\n                    categories: [\r\n                       \r\n                    ],\r\n                    position: 'top',\r\n                    axisBorder: {\r\n                        show: false,\r\n                    },\r\n                    axisTicks: {\r\n                        show: false,\r\n                    },\r\n                    crosshairs: {\r\n                        fill: {\r\n                        type: 'gradient',\r\n                        gradient: {\r\n                            colorFrom: '#D8E3F0',\r\n                            colorTo: '#BED1E6',\r\n                            stops: [0, 100],\r\n                            opacityFrom: 0.4,\r\n                            opacityTo: 0.5,\r\n                        },\r\n                        },\r\n                    },\r\n                    tooltip: {\r\n                        enabled: true,\r\n                    },\r\n                },\r\n                yaxis: {\r\n                    axisBorder: {\r\n                        show: false,\r\n                    },\r\n                    axisTicks: {\r\n                        show: false,\r\n                    },\r\n                    labels: {\r\n                        show: false,\r\n                        formatter: function (val) {\r\n                        return val + '%';\r\n                        },\r\n                    },\r\n                },\r\n                title: {\r\n                    text: '',\r\n                    floating: true,\r\n                    offsetY: 330,\r\n                    align: 'center',\r\n                    style: {\r\n                        color: '#444',\r\n                    },\r\n                },\r\n            },\r\n        }\r\n    },\r\n    props:{\r\n        lista_asesores:{\r\n            type:Array,\r\n            default:[],\r\n        },\r\n        periodos:{\r\n            type:Array,\r\n            default:[],\r\n        },\r\n        arregloCapacitadores:{\r\n            type:Array,\r\n            default:[],\r\n        },\r\n    },\r\n    mounted(){\r\n        let me = this;\r\n    },\r\n    methods:{\r\n        getReporte(){\r\n            let me = this;\r\n            me.tipo = 0;\r\n            console.log(\"rap\")\r\n            this.series[0].data = []\r\n            if( me.valorSelect == \"\" || me.valorSelect == null || me.valorSelect == undefined ){\r\n                me.$vs.notify({\r\n                text:'Seleccione algun valor de filtro',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n                return\r\n            }\r\n            me.$vs.loading()\r\n            this.$http.get(this.$server_url+'reporteCapacitacionesGrupal/'+me.valorSelect)\r\n                .then(function (res) {\r\n                    me.$vs.loading.close()\r\n                    me.pasarInfo(res.data) \r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                    me.$vs.loading.close()\r\n                })\r\n        },\r\n        pasarInfo(item){\r\n            let me = this\r\n            const names                     = item.map(p => p.capacitador.substring(0,17)+'..');\r\n            const valores                   = item.map(p => p.contador);\r\n            this.options.xaxis.categories   = names\r\n            this.series[0].data             = valores;\r\n            me.tipo = 1         \r\n            setTimeout(function() {me.$vs.loading.close()}, 2000);\r\n        },\r\n    }\r\n    \r\n}\r\n",{"version":3,"sources":["ReporteCapacitacionGrupal.vue"],"names":[],"mappingsfile":"ReporteCapacitacionGrupal.vue","sourceRoot":"src/views/certificados/components","sourcesContent":["<template>\r\n    <div>\r\n        <vs-divider>Filtro de Reporte</vs-divider>\r\n        <div class=\"vx-row mb-4\">\r\n            <div class=\"vx-col w-full sm:w-full md:w-1/2 lg:w-1/2 xl:w-1/2 p-2 bg-gray-500\" >\r\n                <div>\r\n                    Seleccione el per√≠odo a filtrar\r\n                    <v-select :options=\"periodos\" @input=\"getReporte()\" :reduce=\"periodos => periodos.idperiodoescolar\" label=\"periodoescolar\" class=\"w-full\" v-model=\"valorSelect\" />\r\n                </div>    \r\n            </div>\r\n            <div class=\"vx-col w-full sm:w-full md:w-1/2 lg:w-1/2 xl:w-1/2 p-2 bg-gray-500\" >   \r\n                <vs-button  @click=\"getReporte()\" class=\"mt-5\" color=\"primary\" type=\"border\" icon=\"search\">Buscar</vs-button>\r\n            </div>\r\n        </div>\r\n        <div v-if=\"tipo == 1\">\r\n            <apexchart\r\n            type=\"bar\"\r\n            height=\"350\"\r\n            :options=\"options\"\r\n            :series=\"[series[0]]\"\r\n            ></apexchart>\r\n        </div>\r\n       <br><br><br><br><br><br><br><br><br><br>\r\n    </div>\r\n</template>\r\n<script>\r\nimport vSelect from 'vue-select';\r\nimport chart from \"vue-apexcharts\";\r\nexport default{\r\n    components: { apexchart: chart,vSelect },\r\n    data(){\r\n        return{\r\n            valorSelect:'',\r\n            tipo:0,\r\n            series: [{\r\n                name: 'Reporte Capacitaciones',\r\n                data: [1,5,6,8,10,6,1]\r\n            }],\r\n            options: {\r\n                chart: {\r\n                height: 350,\r\n                type: 'bar',\r\n                },\r\n                plotOptions: {\r\n                    bar: {\r\n                        borderRadius: 10,\r\n                        dataLabels: {\r\n                        position: 'top', // top, center, bottom\r\n                        },\r\n                    },\r\n                },\r\n                dataLabels: {\r\n                    enabled: true,\r\n                    formatter: function (val) {\r\n                        return val + ' Capacit.';\r\n                    },\r\n                    offsetY: -20,\r\n                    style: {\r\n                        fontSize: '12px',\r\n                        colors: ['#304758'],\r\n                    },\r\n                },\r\n                xaxis: {\r\n                    categories: [\r\n                       \r\n                    ],\r\n                    position: 'top',\r\n                    axisBorder: {\r\n                        show: false,\r\n                    },\r\n                    axisTicks: {\r\n                        show: false,\r\n                    },\r\n                    crosshairs: {\r\n                        fill: {\r\n                        type: 'gradient',\r\n                        gradient: {\r\n                            colorFrom: '#D8E3F0',\r\n                            colorTo: '#BED1E6',\r\n                            stops: [0, 100],\r\n                            opacityFrom: 0.4,\r\n                            opacityTo: 0.5,\r\n                        },\r\n                        },\r\n                    },\r\n                    tooltip: {\r\n                        enabled: true,\r\n                    },\r\n                },\r\n                yaxis: {\r\n                    axisBorder: {\r\n                        show: false,\r\n                    },\r\n                    axisTicks: {\r\n                        show: false,\r\n                    },\r\n                    labels: {\r\n                        show: false,\r\n                        formatter: function (val) {\r\n                        return val + '%';\r\n                        },\r\n                    },\r\n                },\r\n                title: {\r\n                    text: '',\r\n                    floating: true,\r\n                    offsetY: 330,\r\n                    align: 'center',\r\n                    style: {\r\n                        color: '#444',\r\n                    },\r\n                },\r\n            },\r\n        }\r\n    },\r\n    props:{\r\n        lista_asesores:{\r\n            type:Array,\r\n            default:[],\r\n        },\r\n        periodos:{\r\n            type:Array,\r\n            default:[],\r\n        },\r\n        arregloCapacitadores:{\r\n            type:Array,\r\n            default:[],\r\n        },\r\n    },\r\n    mounted(){\r\n        let me = this;\r\n    },\r\n    methods:{\r\n        getReporte(){\r\n            let me = this;\r\n            me.tipo = 0;\r\n            console.log(\"rap\")\r\n            this.series[0].data = []\r\n            if( me.valorSelect == \"\" || me.valorSelect == null || me.valorSelect == undefined ){\r\n                me.$vs.notify({\r\n                text:'Seleccione algun valor de filtro',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n                return\r\n            }\r\n            me.$vs.loading()\r\n            this.$http.get(this.$server_url+'reporteCapacitacionesGrupal/'+me.valorSelect)\r\n                .then(function (res) {\r\n                    me.$vs.loading.close()\r\n                    me.pasarInfo(res.data) \r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                    me.$vs.loading.close()\r\n                })\r\n        },\r\n        pasarInfo(item){\r\n            let me = this\r\n            const names                     = item.map(p => p.capacitador.substring(0,17)+'..');\r\n            const valores                   = item.map(p => p.contador);\r\n            this.options.xaxis.categories   = names\r\n            this.series[0].data             = valores;\r\n            me.tipo = 1         \r\n            setTimeout(function() {me.$vs.loading.close()}, 2000);\r\n        },\r\n    }\r\n    \r\n}\r\n</script>"]}]}