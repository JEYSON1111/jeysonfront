{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\pedidos\\components\\seriesBasicas.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\pedidos\\components\\seriesBasicas.vue","mtime":1712682816309},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nimport Vue from 'vue'\r\nimport axios from 'axios'\r\nimport vSelect from 'vue-select'\r\nexport default {\r\n    data() {\r\n        return{\r\n            series:[],\r\n            activeConfirm:false,\r\n            id:0,\r\n            popupAddTema:false,\r\n            serie:{\r\n                serie_basica:'',\r\n            },\r\n            estado:'',\r\n            permisoRoot:false,\r\n            usuario:[],\r\n            title:'',\r\n        }\r\n    },\r\n    components: {\r\n        'v-select': vSelect,\r\n    },\r\n    props:{\r\n        id_periodo:{\r\n            type:Number,\r\n            default:0,\r\n        },\r\n    },  \r\n    methods:{\r\n        //para obtener el listado de las series\r\n        getSeries() {\r\n            let me = this;\r\n            this.$http.get(this.$server_url+'getSeriesBasicas/'+me.id_periodo)\r\n                .then(function (res) {\r\n                    me.series = res.data\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                })\r\n        },\r\n        //para eliminar la serie\r\n         eliminarSerie() {\r\n              let me = this;      \r\n              me.$vs.loading()\r\n              this.$http.delete(this.$server_url+'series/'+me.id)\r\n              .then(res => {\r\n                 me.getSeries();\r\n                  me.$vs.loading.close()\r\n                  me.$vs.notify({\r\n                  text:'Serie eliminada con exito',\r\n                  color:'success',\r\n                  iconPack: 'feather',\r\n                  icon:'icon-check'})\r\n              })\r\n        },\r\n        //para abrir el popup de confimacion para eliminar\r\n        openConfirm(id,estado){\r\n            this.id = id;\r\n            this.$vs.dialog({\r\n                type:'confirm',\r\n                color: 'danger',\r\n                title: `Confirmacion`,\r\n                text: 'Estas seguro de eliminar esta serie?.',\r\n                accept:this.eliminarSerie\r\n            })\r\n        },\r\n        //para guardar las series\r\n         guardarSerie(){\r\n            let me = this;\r\n            //datos que se obtienen de los inputs\r\n            let formData = new FormData();\r\n            formData.append('id',      me.id)\r\n            let estado = 0\r\n            if(me.serie.serie_basica == 0 )  estado = 1\r\n            if(me.serie.serie_basica == 1 )  estado = 0\r\n            formData.append('estado', estado)\r\n            me.$vs.loading();\r\n            this.$http.post(this.$server_url+'cambiarSerieBasica', formData)\r\n                .then(function (res) {\r\n                    me.$vs.loading.close();\r\n                    me.$vs.notify({\r\n                        text: res.data.message,\r\n                        color: 'primary',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-alert-triangle'\r\n                    })\r\n                    me.getSeries()\r\n                    limpiar()\r\n                })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close();\r\n                })\r\n        },\r\n        //para limpiar los campos\r\n        limpiar(){\r\n           let me = this;\r\n           me.id = 0;\r\n           me.serie.serie_basica = \"0\";\r\n        },\r\n    },\r\n    created(){\r\n        this.usuario = JSON.parse(localStorage.getItem(\"usuario\"))\r\n       \r\n \r\n    },\r\n    mounted(){\r\n        this.getSeries() \r\n    },\r\n}\r\n",{"version":3,"sources":["seriesBasicas.vue"],"names":[],"mappings":";AAyfile":"seriesBasicas.vue","sourceRoot":"src/views/pedidos/components","sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"con-tab-ejemplo\">\r\n            <div>\r\n                <vs-table max-items=\"10\" search pagination :data=\"series\">\r\n                    <template slot=\"header\">\r\n                    <div style=\"display:flex;\">\r\n                        <vs-chip color=\"primary\" style=\"font-size:12px;\">\r\n                          Cantidad: {{series.length}}\r\n                        </vs-chip>\r\n                    </div>    \r\n                </template>\r\n                    <template slot=\"thead\">\r\n                        <vs-th>Nombre serie</vs-th>\r\n                        <vs-th>Serie BÃ¡sica</vs-th>\r\n                        <vs-th>Acciones</vs-th>\r\n                    </template>\r\n                    <template slot-scope=\"{data}\">\r\n                        <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                            <vs-td>\r\n                                {{data[indextr].nombre_serie}}<br>\r\n                            </vs-td>\r\n                            <vs-td width=\"15%\" style=\"text-align: center;\">\r\n                                <vs-alert color=\"success\" v-if=\"tr.serie_basica == 1\"><i class=\"fa-solid fa-check\"></i> Si</vs-alert>\r\n                                <vs-alert color=\"warning\" v-if=\"tr.serie_basica == 0\">No</vs-alert>\r\n                            </vs-td>\r\n                            <vs-td>\r\n                                <div style=\"display: flex;\">\r\n                                    <vx-tooltip style=\"display: inline-block;\" text=\"Editar serie\" position=\"top\" color=\"primary\">\r\n                                        <vs-button class=\"modal-default-button\" size=\"small\" color=\"primary\" @click=\"serie.serie_basica = tr.serie_basica;id = tr.id;guardarSerie()\" type=\"filled\" icon-pack=\"feather\" icon=\"icon-edit\"> Cambiar estado</vs-button>\r\n                                    </vx-tooltip> &nbsp;\r\n                                </div>\r\n                            </vs-td> \r\n                        </vs-tr>\r\n                    </template>\r\n                </vs-table>   \r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport Vue from 'vue'\r\nimport axios from 'axios'\r\nimport vSelect from 'vue-select'\r\nexport default {\r\n    data() {\r\n        return{\r\n            series:[],\r\n            activeConfirm:false,\r\n            id:0,\r\n            popupAddTema:false,\r\n            serie:{\r\n                serie_basica:'',\r\n            },\r\n            estado:'',\r\n            permisoRoot:false,\r\n            usuario:[],\r\n            title:'',\r\n        }\r\n    },\r\n    components: {\r\n        'v-select': vSelect,\r\n    },\r\n    props:{\r\n        id_periodo:{\r\n            type:Number,\r\n            default:0,\r\n        },\r\n    },  \r\n    methods:{\r\n        //para obtener el listado de las series\r\n        getSeries() {\r\n            let me = this;\r\n            this.$http.get(this.$server_url+'getSeriesBasicas/'+me.id_periodo)\r\n                .then(function (res) {\r\n                    me.series = res.data\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                })\r\n        },\r\n        //para eliminar la serie\r\n         eliminarSerie() {\r\n              let me = this;      \r\n              me.$vs.loading()\r\n              this.$http.delete(this.$server_url+'series/'+me.id)\r\n              .then(res => {\r\n                 me.getSeries();\r\n                  me.$vs.loading.close()\r\n                  me.$vs.notify({\r\n                  text:'Serie eliminada con exito',\r\n                  color:'success',\r\n                  iconPack: 'feather',\r\n                  icon:'icon-check'})\r\n              })\r\n        },\r\n        //para abrir el popup de confimacion para eliminar\r\n        openConfirm(id,estado){\r\n            this.id = id;\r\n            this.$vs.dialog({\r\n                type:'confirm',\r\n                color: 'danger',\r\n                title: `Confirmacion`,\r\n                text: 'Estas seguro de eliminar esta serie?.',\r\n                accept:this.eliminarSerie\r\n            })\r\n        },\r\n        //para guardar las series\r\n         guardarSerie(){\r\n            let me = this;\r\n            //datos que se obtienen de los inputs\r\n            let formData = new FormData();\r\n            formData.append('id',      me.id)\r\n            let estado = 0\r\n            if(me.serie.serie_basica == 0 )  estado = 1\r\n            if(me.serie.serie_basica == 1 )  estado = 0\r\n            formData.append('estado', estado)\r\n            me.$vs.loading();\r\n            this.$http.post(this.$server_url+'cambiarSerieBasica', formData)\r\n                .then(function (res) {\r\n                    me.$vs.loading.close();\r\n                    me.$vs.notify({\r\n                        text: res.data.message,\r\n                        color: 'primary',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-alert-triangle'\r\n                    })\r\n                    me.getSeries()\r\n                    limpiar()\r\n                })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close();\r\n                })\r\n        },\r\n        //para limpiar los campos\r\n        limpiar(){\r\n           let me = this;\r\n           me.id = 0;\r\n           me.serie.serie_basica = \"0\";\r\n        },\r\n    },\r\n    created(){\r\n        this.usuario = JSON.parse(localStorage.getItem(\"usuario\"))\r\n       \r\n \r\n    },\r\n    mounted(){\r\n        this.getSeries() \r\n    },\r\n}\r\n</script>"]}]}