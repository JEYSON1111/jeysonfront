{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\salle\\administrador\\evaluaciones\\components\\reporte\\ReporteCompartivaAreasDocente.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\salle\\administrador\\evaluaciones\\components\\reporte\\ReporteCompartivaAreasDocente.vue","mtime":1712682816518},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\n  import ReporteAsignaturaSalleVue from '@/views/salle/administrador/evaluaciones/components/reporte/detalle/ReporteAsignaturaSalle'\r\n  import flatPickr from 'vue-flatpickr-component';\r\n  import 'flatpickr/dist/flatpickr.css';\r\n  import vSelect from 'vue-select'\r\n  import ECharts from 'vue-echarts/components/ECharts'\r\n  import 'echarts/lib/component/tooltip'\r\n  import 'echarts/lib/component/legend'\r\n  import 'echarts/lib/chart/bar'\r\n  import 'echarts/lib/chart/radar'\r\n  import 'echarts/lib/chart/pie'\r\n  import theme from '../../theme.json'\r\n  import VueApexCharts from 'vue-apexcharts'\r\n  ECharts.registerTheme('ovilia-green', theme)\r\nexport default{\r\n  data(){\r\n    return{\r\n      //variables areas\r\n      data_docentes_areas:[],\r\n      columnChart: {},\r\n      key_areas:[],\r\n      //fin variables areas\r\n      //variables mejores docentes\r\n      barChartTopDoc: {},\r\n      //fin variables mejores docentes\r\n      //variables para exportar a excel\r\n      activePromptExcel: false,\r\n      fileName: null,\r\n      formats: ['xls', 'xlsx', 'csv', 'txt'],\r\n      selectedFormat: 'xls',\r\n      fileNameAs: '',\r\n      //fin variables para exportar a excel\r\n    }\r\n  },\r\n  components:{\r\n    'v-select': vSelect,\r\n    flatPickr,\r\n    ECharts,\r\n    VueApexCharts,\r\n    ReporteAsignaturaSalleVue,\r\n  },\r\n  props:{\r\n    institucion_selected:{\r\n      type:String,\r\n      default:''\r\n    },\r\n    periodoSelect:{\r\n      type:String,\r\n      default:''\r\n    },\r\n    searchReporte:{\r\n      type:Boolean,\r\n      default:false,\r\n    }\r\n  },\r\n  watch:{\r\n    institucion_selected(results){\r\n      let me = this;\r\n      me.data_docentes_areas = []\r\n      me.columnChart         = {}\r\n      me.key_areas           = []\r\n      me.barChartTopDoc      = {}\r\n      if(results && me.periodoSelect){\r\n        me.getPromedioAreas()\r\n      }\r\n    },\r\n    periodoSelect(results){\r\n      let me = this;\r\n      me.data_docentes_areas = []\r\n      me.columnChart         = {}\r\n      me.key_areas           = []\r\n      me.barChartTopDoc      = {}\r\n      if(results && me.institucion_selected){\r\n        me.getPromedioAreas()\r\n      }\r\n    },\r\n    searchReporte(results){\r\n      let me = this\r\n      me.data_docentes_areas = []\r\n      me.columnChart         = {}\r\n      me.key_areas           = []\r\n      me.barChartTopDoc      = {}\r\n      if(me.periodoSelect && me.institucion_selected){\r\n        me.getPromedioAreas()\r\n      }\r\n    }\r\n  },\r\n  mounted(){\r\n    let me = this;\r\n  },\r\n  methods: {\r\n    getPromedioAreas(){\r\n      let me = this\r\n      me.data_docentes_areas = []\r\n      me.columnChart         = []\r\n      me.$vs.loading()\r\n      this.$http.get(this.$server_url+'salle_promedio_areas/'+me.periodoSelect+'/'+me.institucion_selected.idInstitucion)\r\n      .then(res => {\r\n        if(res.data.length == 0){\r\n          me.$vs.loading.close()\r\n          this.$vs.notify({\r\n          text:'No se encontro datos',\r\n          color:'warning',\r\n          iconPack: 'feather',\r\n          icon:'icon-check'})\r\n          return\r\n        }\r\n        me.data_docentes_areas = res.data.items\r\n        me.data_docentes_areas.sort((a, b) => {\r\n          return b.puntaje_evaluacion - a.puntaje_evaluacion;\r\n        });\r\n        //grafico mejores docentes por areas\r\n        me.graficoTopDocAreas()\r\n        let areas = []\r\n        //obtener los puntajes de todas las evaluaciones por area de los docentes\r\n        $.each(res.data.items,function(key, value){\r\n          $.each(value.areas,function(keyA, valueA){\r\n            areas.push({ nombre_area: valueA.nombre_area, puntaje: valueA.puntaje, id_area: valueA.id_area })\r\n          });\r\n        });\r\n        // console.log(\"ar\",areas)\r\n        let areas_agrupadas = []\r\n        areas_agrupadas = me.groupArrayOfObjects(areas, \"nombre_area\")\r\n        // console.log(\"or\",areas_agrupadas)\r\n        me.key_areas = []\r\n        let key_areas_1 = []\r\n        $.each(areas_agrupadas,function(key, value){\r\n          key_areas_1.push(key)\r\n          me.key_areas.push(value[0])\r\n        });\r\n        // console.log(\"uno\",key_areas_1)\r\n        // console.log(\"dos\",me.key_areas)\r\n        let puntajes_areas = []\r\n        let nombre_areas = []\r\n        for( let i=0; i<key_areas_1.length; i++){\r\n          let acum_puntaje = 0\r\n          $.each(areas_agrupadas[key_areas_1[i]],function(key, value){\r\n            acum_puntaje += value.puntaje\r\n          });\r\n          let porcentaje_area = ((acum_puntaje * 100) / ((areas_agrupadas[key_areas_1[i]].length) * 100) ).toFixed(2)\r\n          puntajes_areas.push(porcentaje_area)\r\n          nombre_areas.push(key_areas_1[i])\r\n        }\r\n        console.log(\"fi1\",puntajes_areas)\r\n        console.log(\"fi2\",nombre_areas)\r\n        me.columnChart = {\r\n          series: [{\r\n            name: 'Promedio',\r\n            data: puntajes_areas\r\n          }],\r\n          chartOptions: {\r\n            colors: ['#E6AD4A','#28C76F','#EA5455','#87ceeb','#7367F0','#28C76F','#EA5455','#87ceeb','#7367F0','#28C76F','#EA5455','#87ceeb','#7367F0','#28C76F','#EA5455','#87ceeb','#7367F0'],\r\n            plotOptions: { bar: { horizontal: false, endingShape: 'rounded', columnWidth: '55%', }, },\r\n            dataLabels: { enabled: false },\r\n            stroke: { show: true, width: 2, colors: ['transparent'] },\r\n            xaxis: { categories: nombre_areas },\r\n            yaxis: { title: { text: '(Promedio)' } },\r\n            fill: { opacity: 1 },\r\n          tooltip: { y: { formatter: function(val) { return val + \"%\" } } }\r\n          }\r\n        }\r\n        me.$vs.loading.close()\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n        me.$vs.loading.close()\r\n      })\r\n    },\r\n    groupArrayOfObjects(list, key) {\r\n      return list.reduce(function(rv, x) {\r\n        (rv[x[key]] = rv[x[key]] || []).push(x);\r\n        return rv;\r\n      }, {});\r\n    },\r\n    graficoTopDocAreas(){\r\n      let me = this\r\n      let puntaje_evaluaciones  = []\r\n      let nombre_docentes       = []\r\n      $.each(me.data_docentes_areas,function(key, value){\r\n        puntaje_evaluaciones.push(value.puntaje_evaluacion)\r\n        nombre_docentes.push(value.nombre_docente)\r\n      });\r\n      me.barChartTopDoc = {}\r\n      me.barChartTopDoc = {\r\n        series: [{\r\n          data: puntaje_evaluaciones\r\n        }],\r\n        chartOptions: {\r\n          colors: ['#7367F0', '#28C76F', '#EA5455', '#FF9F43', '#1E1E1E','#7367F0', '#28C76F', '#EA5455', '#FF9F43', '#1E1E1E','#7367F0', '#28C76F', '#EA5455', '#FF9F43', '#1E1E1E'],\r\n          plotOptions: { bar: { horizontal: true, } },\r\n          dataLabels: { enabled: true },\r\n          xaxis: { categories: nombre_docentes, }\r\n        }\r\n      }\r\n    },\r\n    //METODOS PARA EXPORTAR A EXCEL\r\n    exportToExcel() {\r\n      let me = this\r\n      let excel_areas = []\r\n      $.each(me.data_docentes_areas,function(key, value){\r\n        $.each(value.areas,function(keyA, valueA){\r\n            excel_areas.push({ nombre_docente: value.nombre_docente, nombre_area: valueA.nombre_area, puntaje: valueA.puntaje})\r\n        });\r\n      });\r\n      let headerTitle = ['Docente', 'Area', 'Puntaje'];\r\n      let headerVal = ['nombre_docente', 'nombre_area', 'puntaje'];\r\n      import('@/vendor/Export2Excel').then(excel => {\r\n        const list = excel_areas\r\n        const data = this.formatJson(headerVal, list)\r\n        excel.export_json_to_excel({\r\n            header: headerTitle,\r\n            data,\r\n            filename: this.fileName,\r\n            autoWidth: this.cellAutoWidth,\r\n            bookType: this.selectedFormat\r\n        })\r\n      })\r\n    },\r\n    clearFields() {\r\n      this.fileName = ''\r\n      this.cellAutoWidth = true\r\n      this.selectedFormat = 'xls'\r\n    },\r\n    formatJson(filterVal, jsonData) {\r\n      return jsonData.map(v => filterVal.map(j => {\r\n          return v[j]\r\n      }))\r\n    },\r\n  },\r\n}\r\n",{"version":3,"sources":["ReporteCompartivaAreasDocente.vue"],"names":[],"mappings":";AAofile":"ReporteCompartivaAreasDocente.vue","sourceRoot":"src/views/salle/administrador/evaluaciones/components/reporte","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"vx-row\">\r\n      <div class=\"vx-col sm:w-full mb-base\">\r\n        <!-- <vx-card title=\"Promedios por áreas\"  v-if=\"data_docentes_areas.length > 0\" subtitle=\"Comparación de promedios de todas las áreas de la institución seleccionada\">\r\n          <vue-apex-charts type=\"bar\" height=\"350\" :options=\"columnChart.chartOptions\" :series=\"columnChart.series\"></vue-apex-charts>\r\n          <br>\r\n        </vx-card> -->\r\n        <div class=\"vx-row mb-6\" v-if=\"data_docentes_areas.length > 0\">\r\n          <!--TOP DOCENTES POR AREAS-->\r\n          <div style=\"min-width: 400px;\" class=\"vx-col sm:w-full w-full md:w-full mb-3\">\r\n            <vx-card title=\"Top docentes áreas\" subtitle=\"Docentes mejor puntuados por area\">\r\n                <div  style=\"overflow-y: scroll; overflow-x: hidden; height:450px;\" id=\"div_top_area\">\r\n                  <vs-button size=\"small\" style=\"padding: 7px; font-size: 12px; float: right; margin-right: 10px;\" icon-pack=\"feather\" icon=\"icon-download\" color=\"#0CBFBD\" @click=\"fileName='reporte_docentes_areas'; activePromptExcel=true\">Exportar</vs-button>\r\n                  <br><br>\r\n                  <div :key=\"index\" v-for=\"(evaluacion, index) in data_docentes_areas\" class=\"mb-base\">\r\n                    <b style=\"color: #0CBFBD;\">{{evaluacion.nombre_docente.toUpperCase()}} </b> <b>{{evaluacion.puntaje_evaluacion}}%</b> <br>\r\n                    <div :key=\"indexA\" v-for=\"(area, indexA) in evaluacion.areas\">\r\n                        <div style=\"width: 60%; display: inline-block;\"><b>Área: </b> <span style=\"color: #3477E7;\"> {{area.nombre_area}} </span></div>\r\n                        <div style=\"width: 40%; display: inline-block;\"><b>Puntaje: </b> <span style=\"color: #8B34E7;\"> {{area.puntaje}}% </span> </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n            </vx-card>\r\n          </div>\r\n          <!--REPORTE MEJORES DOCENTES-->\r\n          <div style=\"min-width: 400px;\" class=\"vx-col sm:w-full w-full md:w-full mb-3\">\r\n            <vx-card title=\"Top docentes\" subtitle=\"Docentes mejor puntuados en calificacion final\">\r\n              <div  style=\"overflow-y: scroll; overflow-x: hidden; height:450px;\" id=\"div_top_1\">\r\n              <vue-apex-charts type=\"bar\" height=\"3000\" :options=\"barChartTopDoc.chartOptions\" :series=\"barChartTopDoc.series\"></vue-apex-charts>\r\n              </div>\r\n            </vx-card>\r\n          </div>\r\n        </div>\r\n        <!--SELECCIONAR AREA PARA REPORTE POR ASIGNATURAS-->\r\n        <!-- <div v-if=\"key_areas.length > 0\">\r\n          <ReporteAsignaturaSalleVue :key_areas=\"key_areas\" :institucion_selected=\"institucion_selected\" :periodoSelect=\"periodoSelect\"/>\r\n        </div> -->\r\n      </div>\r\n    </div>\r\n    <!--MODALES-->\r\n    <!----modal exportar--------->\r\n    <vs-prompt title=\"Exportar a Excel\" class=\"export-options\" @cancle=\"clearFields\" @accept=\"exportToExcel\" accept-text=\"Exportar\" :active.sync=\"activePromptExcel\">\r\n      <vs-input v-model=\"fileName\" placeholder=\"Ingrese el nombre del archivo\" class=\"w-full\" />\r\n      <v-select v-model=\"selectedFormat\" :options=\"formats\" class=\"my-4\" />\r\n      <div class=\"flex\">\r\n      </div>\r\n    </vs-prompt>\r\n    <!----fin modal exportar--------->\r\n  </div>\r\n</template>\r\n<script>\r\n  import ReporteAsignaturaSalleVue from '@/views/salle/administrador/evaluaciones/components/reporte/detalle/ReporteAsignaturaSalle'\r\n  import flatPickr from 'vue-flatpickr-component';\r\n  import 'flatpickr/dist/flatpickr.css';\r\n  import vSelect from 'vue-select'\r\n  import ECharts from 'vue-echarts/components/ECharts'\r\n  import 'echarts/lib/component/tooltip'\r\n  import 'echarts/lib/component/legend'\r\n  import 'echarts/lib/chart/bar'\r\n  import 'echarts/lib/chart/radar'\r\n  import 'echarts/lib/chart/pie'\r\n  import theme from '../../theme.json'\r\n  import VueApexCharts from 'vue-apexcharts'\r\n  ECharts.registerTheme('ovilia-green', theme)\r\nexport default{\r\n  data(){\r\n    return{\r\n      //variables areas\r\n      data_docentes_areas:[],\r\n      columnChart: {},\r\n      key_areas:[],\r\n      //fin variables areas\r\n      //variables mejores docentes\r\n      barChartTopDoc: {},\r\n      //fin variables mejores docentes\r\n      //variables para exportar a excel\r\n      activePromptExcel: false,\r\n      fileName: null,\r\n      formats: ['xls', 'xlsx', 'csv', 'txt'],\r\n      selectedFormat: 'xls',\r\n      fileNameAs: '',\r\n      //fin variables para exportar a excel\r\n    }\r\n  },\r\n  components:{\r\n    'v-select': vSelect,\r\n    flatPickr,\r\n    ECharts,\r\n    VueApexCharts,\r\n    ReporteAsignaturaSalleVue,\r\n  },\r\n  props:{\r\n    institucion_selected:{\r\n      type:String,\r\n      default:''\r\n    },\r\n    periodoSelect:{\r\n      type:String,\r\n      default:''\r\n    },\r\n    searchReporte:{\r\n      type:Boolean,\r\n      default:false,\r\n    }\r\n  },\r\n  watch:{\r\n    institucion_selected(results){\r\n      let me = this;\r\n      me.data_docentes_areas = []\r\n      me.columnChart         = {}\r\n      me.key_areas           = []\r\n      me.barChartTopDoc      = {}\r\n      if(results && me.periodoSelect){\r\n        me.getPromedioAreas()\r\n      }\r\n    },\r\n    periodoSelect(results){\r\n      let me = this;\r\n      me.data_docentes_areas = []\r\n      me.columnChart         = {}\r\n      me.key_areas           = []\r\n      me.barChartTopDoc      = {}\r\n      if(results && me.institucion_selected){\r\n        me.getPromedioAreas()\r\n      }\r\n    },\r\n    searchReporte(results){\r\n      let me = this\r\n      me.data_docentes_areas = []\r\n      me.columnChart         = {}\r\n      me.key_areas           = []\r\n      me.barChartTopDoc      = {}\r\n      if(me.periodoSelect && me.institucion_selected){\r\n        me.getPromedioAreas()\r\n      }\r\n    }\r\n  },\r\n  mounted(){\r\n    let me = this;\r\n  },\r\n  methods: {\r\n    getPromedioAreas(){\r\n      let me = this\r\n      me.data_docentes_areas = []\r\n      me.columnChart         = []\r\n      me.$vs.loading()\r\n      this.$http.get(this.$server_url+'salle_promedio_areas/'+me.periodoSelect+'/'+me.institucion_selected.idInstitucion)\r\n      .then(res => {\r\n        if(res.data.length == 0){\r\n          me.$vs.loading.close()\r\n          this.$vs.notify({\r\n          text:'No se encontro datos',\r\n          color:'warning',\r\n          iconPack: 'feather',\r\n          icon:'icon-check'})\r\n          return\r\n        }\r\n        me.data_docentes_areas = res.data.items\r\n        me.data_docentes_areas.sort((a, b) => {\r\n          return b.puntaje_evaluacion - a.puntaje_evaluacion;\r\n        });\r\n        //grafico mejores docentes por areas\r\n        me.graficoTopDocAreas()\r\n        let areas = []\r\n        //obtener los puntajes de todas las evaluaciones por area de los docentes\r\n        $.each(res.data.items,function(key, value){\r\n          $.each(value.areas,function(keyA, valueA){\r\n            areas.push({ nombre_area: valueA.nombre_area, puntaje: valueA.puntaje, id_area: valueA.id_area })\r\n          });\r\n        });\r\n        // console.log(\"ar\",areas)\r\n        let areas_agrupadas = []\r\n        areas_agrupadas = me.groupArrayOfObjects(areas, \"nombre_area\")\r\n        // console.log(\"or\",areas_agrupadas)\r\n        me.key_areas = []\r\n        let key_areas_1 = []\r\n        $.each(areas_agrupadas,function(key, value){\r\n          key_areas_1.push(key)\r\n          me.key_areas.push(value[0])\r\n        });\r\n        // console.log(\"uno\",key_areas_1)\r\n        // console.log(\"dos\",me.key_areas)\r\n        let puntajes_areas = []\r\n        let nombre_areas = []\r\n        for( let i=0; i<key_areas_1.length; i++){\r\n          let acum_puntaje = 0\r\n          $.each(areas_agrupadas[key_areas_1[i]],function(key, value){\r\n            acum_puntaje += value.puntaje\r\n          });\r\n          let porcentaje_area = ((acum_puntaje * 100) / ((areas_agrupadas[key_areas_1[i]].length) * 100) ).toFixed(2)\r\n          puntajes_areas.push(porcentaje_area)\r\n          nombre_areas.push(key_areas_1[i])\r\n        }\r\n        console.log(\"fi1\",puntajes_areas)\r\n        console.log(\"fi2\",nombre_areas)\r\n        me.columnChart = {\r\n          series: [{\r\n            name: 'Promedio',\r\n            data: puntajes_areas\r\n          }],\r\n          chartOptions: {\r\n            colors: ['#E6AD4A','#28C76F','#EA5455','#87ceeb','#7367F0','#28C76F','#EA5455','#87ceeb','#7367F0','#28C76F','#EA5455','#87ceeb','#7367F0','#28C76F','#EA5455','#87ceeb','#7367F0'],\r\n            plotOptions: { bar: { horizontal: false, endingShape: 'rounded', columnWidth: '55%', }, },\r\n            dataLabels: { enabled: false },\r\n            stroke: { show: true, width: 2, colors: ['transparent'] },\r\n            xaxis: { categories: nombre_areas },\r\n            yaxis: { title: { text: '(Promedio)' } },\r\n            fill: { opacity: 1 },\r\n          tooltip: { y: { formatter: function(val) { return val + \"%\" } } }\r\n          }\r\n        }\r\n        me.$vs.loading.close()\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n        me.$vs.loading.close()\r\n      })\r\n    },\r\n    groupArrayOfObjects(list, key) {\r\n      return list.reduce(function(rv, x) {\r\n        (rv[x[key]] = rv[x[key]] || []).push(x);\r\n        return rv;\r\n      }, {});\r\n    },\r\n    graficoTopDocAreas(){\r\n      let me = this\r\n      let puntaje_evaluaciones  = []\r\n      let nombre_docentes       = []\r\n      $.each(me.data_docentes_areas,function(key, value){\r\n        puntaje_evaluaciones.push(value.puntaje_evaluacion)\r\n        nombre_docentes.push(value.nombre_docente)\r\n      });\r\n      me.barChartTopDoc = {}\r\n      me.barChartTopDoc = {\r\n        series: [{\r\n          data: puntaje_evaluaciones\r\n        }],\r\n        chartOptions: {\r\n          colors: ['#7367F0', '#28C76F', '#EA5455', '#FF9F43', '#1E1E1E','#7367F0', '#28C76F', '#EA5455', '#FF9F43', '#1E1E1E','#7367F0', '#28C76F', '#EA5455', '#FF9F43', '#1E1E1E'],\r\n          plotOptions: { bar: { horizontal: true, } },\r\n          dataLabels: { enabled: true },\r\n          xaxis: { categories: nombre_docentes, }\r\n        }\r\n      }\r\n    },\r\n    //METODOS PARA EXPORTAR A EXCEL\r\n    exportToExcel() {\r\n      let me = this\r\n      let excel_areas = []\r\n      $.each(me.data_docentes_areas,function(key, value){\r\n        $.each(value.areas,function(keyA, valueA){\r\n            excel_areas.push({ nombre_docente: value.nombre_docente, nombre_area: valueA.nombre_area, puntaje: valueA.puntaje})\r\n        });\r\n      });\r\n      let headerTitle = ['Docente', 'Area', 'Puntaje'];\r\n      let headerVal = ['nombre_docente', 'nombre_area', 'puntaje'];\r\n      import('@/vendor/Export2Excel').then(excel => {\r\n        const list = excel_areas\r\n        const data = this.formatJson(headerVal, list)\r\n        excel.export_json_to_excel({\r\n            header: headerTitle,\r\n            data,\r\n            filename: this.fileName,\r\n            autoWidth: this.cellAutoWidth,\r\n            bookType: this.selectedFormat\r\n        })\r\n      })\r\n    },\r\n    clearFields() {\r\n      this.fileName = ''\r\n      this.cellAutoWidth = true\r\n      this.selectedFormat = 'xls'\r\n    },\r\n    formatJson(filterVal, jsonData) {\r\n      return jsonData.map(v => filterVal.map(j => {\r\n          return v[j]\r\n      }))\r\n    },\r\n  },\r\n}\r\n</script>\r\n<style scoped>\r\n.chips_selects:hover{\r\n    background-color: black !important;\r\n}\r\n#div_top_1::-webkit-scrollbar {\r\n  width: 10px;\r\n}\r\n\r\n/* Track */\r\n#div_top_1::-webkit-scrollbar-track {\r\n  box-shadow: inset 0 0 5px rgb(211, 207, 241);\r\n  border-radius: 10px;\r\n}\r\n\r\n/* Handle */\r\n#div_top_1::-webkit-scrollbar-thumb {\r\n  background: #ff2aa6;\r\n  border-radius: 10px;\r\n}\r\n\r\n/* Handle on hover */\r\n#div_top_1::-webkit-scrollbar-thumb:hover {\r\n  background: #ff2da8;\r\n}\r\n#div_top_area::-webkit-scrollbar {\r\n  width: 10px;\r\n}\r\n\r\n/* Track */\r\n#div_top_area::-webkit-scrollbar-track {\r\n  box-shadow: inset 0 0 5px rgb(211, 207, 241);\r\n  border-radius: 10px;\r\n}\r\n\r\n/* Handle */\r\n#div_top_area::-webkit-scrollbar-thumb {\r\n  background: #2ee982;\r\n  border-radius: 10px;\r\n}\r\n\r\n/* Handle on hover */\r\n#div_top_area::-webkit-scrollbar-thumb:hover {\r\n  background: #2ee982;\r\n}\r\n\r\n#div_top_asignatura::-webkit-scrollbar {\r\n  width: 10px;\r\n}\r\n/* Track */\r\n#div_top_asignatura::-webkit-scrollbar-track {\r\n  box-shadow: inset 0 0 5px rgb(211, 207, 241);\r\n  border-radius: 10px;\r\n}\r\n\r\n/* Handle */\r\n#div_top_asignatura::-webkit-scrollbar-thumb {\r\n  background: #773BF7;\r\n  border-radius: 10px;\r\n}\r\n\r\n/* Handle on hover */\r\n#div_top_asignatura::-webkit-scrollbar-thumb:hover {\r\n  background: #773BF7;\r\n}\r\n</style>\r\n\r\n"]}]}