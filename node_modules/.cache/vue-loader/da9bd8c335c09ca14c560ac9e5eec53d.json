{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\facturacion\\10_10_1_4\\orden_pedido\\grupo_producto_crud.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\facturacion\\10_10_1_4\\orden_pedido\\grupo_producto_crud.vue","mtime":1712682815911},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nimport Vue from 'vue'\r\nimport axios from 'axios'\r\nimport vSelect from 'vue-select';\r\nexport default {\r\n    data() {\r\n        return{\r\n            options1: [\r\n                { text: '--Seleccione--', value: null },\r\n                { text: 'Si', value: true },\r\n                { text: 'No', value: false },\r\n            ],\r\n            GrupoProductos: [],\r\n            popupActivoGuardar: false,\r\n            popupActivoEditar: false,\r\n            popupActivoDesactivar: false,\r\n            popupActivoEliminar: false,\r\n            tabGrupoProducto: {\r\n                gru_pro_codigo: '',\r\n                gru_pro_nombre: '',\r\n                gru_pro_estado: '',\r\n            },\r\n            gru_pro_codigo: 0,\r\n            Producto_sinfiltro: [],\r\n            Producto_inactivos: [],\r\n            busquedaxcodigo: \"\",\r\n            valorBusqueda:\"0\",\r\n            checkBox_mostrarinactivos:false,\r\n            //showAgregarNuevo: false,\r\n        }\r\n    },\r\n    components: {\r\n        'v-select': vSelect,\r\n    },\r\n    mounted() {\r\n        this.getGrupoProducto();\r\n    },\r\n    methods: {\r\n        getGrupoProducto() {\r\n            let me = this;\r\n            me.$vs.loading()\r\n            this.$http.get(this.$server_url+'GetGrupoProducto_todo')\r\n            //axios.get(this.$apifacturacion_url + 'f_Producto')\r\n            .then(res => {\r\n            //let resultado = res.data.productos.filter(p => p.proCodigo !== 0);\r\n            //this.Productos = resultado;\r\n            this.GrupoProductos = res.data;\r\n            me.$vs.loading.close()\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                me.$vs.loading.close()\r\n            })\r\n        },\r\n        //SECCION GUARDAR NUEVO PRODUCTO\r\n        getNuevo() {\r\n            this.popupActivoGuardar = true\r\n            this.tabGrupoProducto.gru_pro_codigo = ''\r\n            this.tabGrupoProducto.gru_pro_nombre = ''\r\n            this.tabGrupoProducto.gru_pro_estado = ''\r\n        },\r\n        guardarnuevo() {\r\n        let me = this;\r\n        const usuariorespo = localStorage.getItem(\"usuario\");\r\n        const usuarioObjeto = JSON.parse(usuariorespo);\r\n        //VALIDACION DE CAMPOS NULOS Y VACIOS\r\n        if (this.tabGrupoProducto.gru_pro_nombre === '' || this.tabGrupoProducto.gru_pro_nombre === null) {\r\n            me.$vs.notify({\r\n                text: 'Escriba el nombre del grupo del producto antes de guardar',\r\n                color: 'danger',\r\n                iconPack: 'feather',\r\n                icon: 'icon-alert-triangle'\r\n            });\r\n            return;\r\n        }\r\n        let datos  = {\r\n            \"gru_pro_nombre\": this.tabGrupoProducto.gru_pro_nombre,\r\n            \"user_created\": usuarioObjeto.idusuario,\r\n        }\r\n        me.$vs.loading()\r\n        //axios.post(this.$apifacturacion_url + 'f_Vendedor', datos)\r\n        this.$http.post(this.$server_url+'PostGrupoProducto_Registrar_modificar', datos)\r\n            .then(res => {\r\n                me.$vs.loading.close()\r\n                this.getGrupoProducto();\r\n                me.$vs.notify({\r\n                    text: 'Grupo Producto guardado con exito',\r\n                    color: 'success',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-check'\r\n                })\r\n                this.popupActivoEditar = false;\r\n                this.popupActivoDesactivar = false;\r\n                this.popupActivoGuardar = false;\r\n                this.popupActivoEliminar = false;\r\n            })\r\n            .catch(function () {\r\n                me.$vs.loading.close()\r\n                me.$vs.notify({\r\n                    text: 'Grupo Producto no se pudo guardar',\r\n                    color: 'danger',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-x'\r\n                })\r\n            })\r\n        },\r\n        // getGrupoProducto() {\r\n        // axios.get('https://localhost:7252/api/Vendedor')\r\n        //     .then(res => {\r\n        //     let resultado = res.data.filter(c => c.cliCi !== null && c.cliCi !== '');\r\n        //     this.Vendedores = resultado;\r\n        //     console.log(this.Vendedores);\r\n        //     })\r\n        //     .catch(err => {\r\n        //     console.log(err);\r\n        //     });\r\n        // },\r\n        getEditar(tr) {\r\n        this.popupActivoEditar = true\r\n        this.tabGrupoProducto.gru_pro_codigo = tr.gru_pro_codigo\r\n        this.tabGrupoProducto.gru_pro_nombre = tr.gru_pro_nombre\r\n        // this.$router.push('/prueba/editar/' + this.id);\r\n        // console.log(id);\r\n        // this.$params.id;\r\n        },\r\n        editar() {\r\n        let me = this;\r\n        if (this.tabGrupoProducto.gru_pro_nombre === '' || this.tabGrupoProducto.gru_pro_nombre === null) {\r\n                me.$vs.notify({\r\n                    text: 'Escriba el nombre del grupo del producto antes de editar',\r\n                    color: 'danger',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-alert-triangle'\r\n                });\r\n                return;\r\n            }\r\n        let datos  = {\r\n                \"gru_pro_codigo\": this.tabGrupoProducto.gru_pro_codigo,\r\n                \"gru_pro_nombre\": this.tabGrupoProducto.gru_pro_nombre,\r\n            }\r\n        me.$vs.loading()\r\n        //axios.post(this.$apifacturacion_url + 'f_Producto/AggOrUpdateProducto', datos)\r\n        this.$http.post(this.$server_url+'PostGrupoProducto_Registrar_modificar', datos)\r\n            .then(res => {\r\n                me.$vs.loading.close()\r\n                this.getGrupoProducto();\r\n                me.$vs.notify({\r\n                    text: 'Grupo Producto editado con exito',\r\n                    color: 'success',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-check'\r\n                })\r\n                this.popupActivoEditar = false;\r\n                this.popupActivoDesactivar = false;\r\n                this.popupActivoGuardar = false;\r\n                this.popupActivoEliminar = false;\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                me.$vs.loading.close()\r\n                me.$vs.notify({\r\n                    text: 'Grupo Producto no se pudo editar',\r\n                    color: 'danger',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-x'\r\n                })\r\n            })\r\n        },\r\n        popup_desactivar_activar_producto(tr) {\r\n            this.popupActivoDesactivar = true\r\n            this.gru_pro_codigo = tr.gru_pro_codigo\r\n            this.tabGrupoProducto.gru_pro_nombre = tr.gru_pro_nombre\r\n            this.tabGrupoProducto.gru_pro_estado = tr.gru_pro_estado\r\n        },\r\n        desactivar_activar_producto() {\r\n        let me = this;\r\n        let valornuevo = this.tabGrupoProducto.gru_pro_estado;\r\n        console.log(valornuevo+'valornuevoeatdoprocutp'+this.gru_pro_codigo);\r\n        if(valornuevo == 1){\r\n            valornuevo = 0;\r\n            let datos  = {\r\n                \"gru_pro_codigo\": this.gru_pro_codigo,\r\n                \"gru_pro_estado\": valornuevo,\r\n            }\r\n            me.$vs.loading()\r\n            //axios.post(this.$apifacturacion_url + 'f_Producto/AggOrUpdateProducto', datos)\r\n            this.$http.post(this.$server_url+'Desactivar_GrupoProducto', datos)\r\n            .then(res => {\r\n                me.$vs.loading.close()\r\n                this.getGrupoProducto();\r\n                me.$vs.notify({\r\n                    text: 'Cambio de estado exitoso',\r\n                    color: 'success',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-check'\r\n                })\r\n                this.popupActivoEditar = false;\r\n                this.popupActivoDesactivar = false;\r\n                this.popupActivoGuardar = false;\r\n                this.popupActivoEliminar = false;\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                me.$vs.loading.close()\r\n                me.$vs.notify({\r\n                    text: 'No se pudo realizar el cambio de estado',\r\n                    color: 'danger',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-x'\r\n                })\r\n            })\r\n        }else if (valornuevo == 0){\r\n            valornuevo = 1;\r\n            let datos  = {\r\n                \"gru_pro_codigo\": this.gru_pro_codigo,\r\n                \"gru_pro_estado\": valornuevo,\r\n            }\r\n            me.$vs.loading()\r\n            //axios.post(this.$apifacturacion_url + 'f_Producto/AggOrUpdateProducto', datos)\r\n            this.$http.post(this.$server_url+'Desactivar_GrupoProducto', datos)\r\n            .then(res => {\r\n                me.$vs.loading.close()\r\n                this.getGrupoProducto();\r\n                me.$vs.notify({\r\n                    text: 'Cambio de estado exitoso',\r\n                    color: 'success',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-check'\r\n                })\r\n                this.popupActivoEditar = false;\r\n                this.popupActivoDesactivar = false;\r\n                this.popupActivoGuardar = false;\r\n                this.popupActivoEliminar = false;\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                me.$vs.loading.close()\r\n                me.$vs.notify({\r\n                    text: 'No se pudo realizar el cambio de estado',\r\n                    color: 'danger',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-x'\r\n                })\r\n            })\r\n        }\r\n        \r\n        },        \r\n        getPreguntaEliminar(tr) {\r\n            this.popupActivoEliminar = true\r\n            this.pro_codigo = tr.pro_codigo\r\n        },\r\n\r\n        getEliminar() {\r\n            let me = this;\r\n            let datos  = {\r\n                \"pro_codigo\": this.pro_codigo,\r\n            }\r\n            me.$vs.loading()\r\n            this.$http.post(this.$server_url + \"Eliminar_producto\", datos)\r\n                .then(data => {\r\n                    me.$vs.loading.close()\r\n                    this.getGrupoProducto();\r\n                    this.getProductoParametro();\r\n                    me.$vs.notify({\r\n                        text: 'Producto eliminado con exito',\r\n                        color: 'success',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check'\r\n                    })\r\n\r\n                    this.popupActivoEditar = false;\r\n                    this.popupActivoDesactivar = false;\r\n                    this.popupActivoGuardar = false;\r\n                    this.popupActivoEliminar = false;\r\n                })\r\n                .catch(function () {\r\n                    me.$vs.loading.close()\r\n                    me.$vs.notify({\r\n                        text: 'Producto no se pudo eliminar',\r\n                        color: 'danger',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-x'\r\n                    })\r\n                })\r\n        },\r\n\r\n\r\n        getCancelar() {\r\n            this.popupActivoEditar = false;\r\n            this.popupActivoGuardar = false;\r\n            this.popupActivoEliminar = false;\r\n            this.popupActivoDesactivar = false;\r\n        },\r\n    },\r\n    // created(){\r\n    //     let url = \"https://localhost:7252/api/Vendedor\";\r\n    //     axios.get(url).then((response) => this.Vendedores = response.data);\r\n    //     // fetch(\"https://localhost:7252/api/Vendedor/\")\r\n    //     // .then(response => response.json())\r\n    //     // .then((data) => (this.Vendedores = data));\r\n    //     // // .then(data => (this.totalVuePackages = data.total));\r\n    // }\r\n}\r\n",{"version":3,"sources":["grupo_producto_crud.vue"],"names":[],"mappingsfile":"grupo_producto_crud.vue","sourceRoot":"src/views/facturacion/10_10_1_4/orden_pedido","sourcesContent":["<template>\r\n    <vx-card fixed-height=\"true\">\r\n        <vs-row vs-justify=\"flex-start\">\r\n            <vs-button type=\"border\" color=\"success\" class=\"mr-2\" @click=\"getNuevo()\">Agregar Nuevo Grupo Producto</vs-button>\r\n        </vs-row>\r\n        <!-- <vs-button type=\"border\" color=\"success\" class=\"mr-2\" @click=\"getNuevo()\">Agregar Nuevo Producto</vs-button> -->\r\n        <vs-table max-items=\"10\" pagination search :data=\"GrupoProductos\">\r\n            <template slot=\"header\">\r\n                        <vs-chip  color=\"primary\">Cantidad: <b> {{ GrupoProductos.length }}</b></vs-chip>\r\n                    </template>\r\n            <!-- {{cliCi}} -->\r\n            <template slot=\"thead\">\r\n                <vs-th width=\"200\">\r\n                    Id\r\n                </vs-th>\r\n                <vs-th colspan=\"1\" width=\"400\">\r\n                    Nombre\r\n                </vs-th>\r\n                <vs-th width=\"150\">Estado</vs-th>\r\n                <vs-th width=\"200\">\r\n                    Acciones\r\n                </vs-th>\r\n            </template>\r\n            <template slot-scope=\"{data}\">\r\n                <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                    <vs-td :data=\"data[indextr].gru_pro_codigo\">\r\n                        {{ data[indextr].gru_pro_codigo }}\r\n                    </vs-td>\r\n                    <vs-td>\r\n                        <!-- {{ tr }} -->\r\n                        {{tr.gru_pro_nombre}} <br>\r\n                    </vs-td>\r\n                    <vs-td>\r\n                        <vs-chip v-if=\"tr.gru_pro_estado == 1\" color=\"success\">Activo</vs-chip>\r\n                        <vs-chip v-else color=\"danger\">Inactivo</vs-chip>\r\n                    </vs-td>\r\n                    <vs-td :data=\"data[indextr].gru_pro_codigo\">\r\n                        <vs-dropdown vs-custom-content vs-trigger-click title=\"Opciones\">\r\n                            <vs-button class=\"a-icons\" href.prevent icon=\"more_vert\" type=\"border\"></vs-button>\r\n                            <vs-dropdown-menu style=\"width: 250px;\" class=\"cursor\">\r\n                                <vs-dropdown-item>\r\n                                    <vs-button v-if=\"tr.gru_pro_estado == 1\" color=\"#28C76F\" type=\"line\" class=\"w-full\" @click=\"popupActivo=true;getEditar(tr)\">Editar</vs-button>\r\n                                    <vs-button v-if=\"tr.gru_pro_estado == 1\" color=\"#EA5455\" type=\"line\" class=\"w-full\" @click=\"popupActivo=true;popup_desactivar_activar_producto(tr)\">Desactivar grupo producto</vs-button>\r\n                                    <vs-button v-if=\"tr.gru_pro_estado == 0\" color=\"#28C76F\" type=\"line\" class=\"w-full\" @click=\"popupActivo=true;popup_desactivar_activar_producto(tr)\">Activar grupo producto</vs-button>\r\n                                    <!-- <vs-button color=\"#EA5455\" type=\"line\" class=\"w-full\" @click=\"popupActivo=true;getPreguntaEliminar(tr)\">Eliminar</vs-button> -->\r\n                                </vs-dropdown-item>\r\n                            </vs-dropdown-menu>\r\n                        </vs-dropdown>\r\n                    </vs-td>\r\n                </vs-tr>\r\n            </template>\r\n        </vs-table>\r\n        <!-- SECCION REGISTRO -->\r\n        <vs-popup class=\"crear\" title=\"Registro nuevo grupo de producto\" :active.sync=\"popupActivoGuardar\">\r\n            <vs-row>\r\n                <!-- {{ tabGrupoProducto }} -->\r\n                <!-- <vs-col vs-justify=\"center\" vs-align=\"center\" vs-lg=\"6\" vs-sm=\"6\" vs-xs=\"6\">\r\n                    <vs-row vs-type=\"flex\" vs-justify=\"center\" vs-w=\"12\">\r\n                        <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"10\">\r\n                            <vs-input label=\"Cédula *\" placeholder=\"Cédula\" class=\"w-full\" icon=\"mode_edit\" v-model=\"tabGrupoProducto.venDCodigo\" />\r\n                        </vs-col>\r\n                    </vs-row>\r\n                </vs-col> -->\r\n                <vs-col vs-justify=\"center\" vs-align=\"center\" vs-lg=\"12\" vs-sm=\"12\" vs-xs=\"12\">\r\n                    <vs-row vs-type=\"flex\" vs-justify=\"center\" vs-w=\"12\">\r\n                        <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"6\">\r\n                            <!-- {{tabusuario.pv_tipo_usuario}}  //Para ver que propiedad quiero guardar -->\r\n                            <vs-input label=\"Nombre de grupo de producto \" placeholder=\"Nombre de grupo de producto\" class=\"w-full\" icon=\"mode_edit\" v-model=\"tabGrupoProducto.gru_pro_nombre\" />\r\n                        </vs-col>\r\n                    </vs-row>\r\n                </vs-col>\r\n            </vs-row>\r\n            <br><br>\r\n            <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\" class=\"mt-2\">\r\n                <vs-button @click=\"guardarnuevo()\" type=\"relief\">Guardar</vs-button>&emsp;\r\n                <vs-button @click=\"getCancelar()\" color=\"danger\" type=\"relief\">Cancelar</vs-button>\r\n            </vs-col>\r\n        </vs-popup>\r\n        <!-- SECCION EDITAR -->\r\n        <vs-popup class=\"editar\" :title=\"`Edición producto: ${tabGrupoProducto.gru_pro_codigo}`\" :active.sync=\"popupActivoEditar\">\r\n            <vs-row>\r\n                <!-- {{ tabGrupoProducto }} -->\r\n                <!-- <vs-col vs-justify=\"center\" vs-align=\"center\" vs-lg=\"6\" vs-sm=\"6\" vs-xs=\"6\">\r\n                    <vs-row vs-type=\"flex\" vs-justify=\"center\" vs-w=\"12\">\r\n                        <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"10\">\r\n                            <vs-input label=\"Cédula *\" placeholder=\"Cédula\" class=\"w-full\" icon=\"mode_edit\" v-model=\"tabGrupoProducto.venDCodigo\" />\r\n                        </vs-col>\r\n                    </vs-row>\r\n                </vs-col> -->\r\n                <vs-col vs-justify=\"center\" vs-align=\"center\" vs-lg=\"12\" vs-sm=\"12\" vs-xs=\"12\">\r\n                    <vs-row vs-type=\"flex\" vs-justify=\"center\" vs-w=\"12\">\r\n                        <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"6\">\r\n                            <!-- {{tabusuario.pv_tipo_usuario}}  //Para ver que propiedad quiero guardar -->\r\n                            <vs-input label=\"Nombre de grupo de producto \" placeholder=\"Nombre de grupo de producto\" class=\"w-full\" icon=\"mode_edit\" v-model=\"tabGrupoProducto.gru_pro_nombre\" />\r\n                        </vs-col>\r\n                    </vs-row>\r\n                </vs-col>\r\n            </vs-row>\r\n            <br><br>\r\n            <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\" class=\"mt-2\">\r\n                <vs-button @click=\"editar()\" type=\"relief\">Editar</vs-button>&emsp;\r\n                <vs-button @click=\"getCancelar()\" color=\"danger\" type=\"relief\">Cancelar</vs-button>\r\n            </vs-col>\r\n        </vs-popup>\r\n        <vs-popup class=\"eliminar\" :title=\"`¿Confirma que desea eliminar el registro: ${gru_pro_codigo}?`\" :active.sync=\"popupActivoEliminar\">\r\n            <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"3\" class=\"mt-2\"></vs-col>\r\n            <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"3\" class=\"mt-2\">\r\n                <vs-button @click=\"getEliminar()\" type=\"relief\">Aceptar</vs-button>\r\n            </vs-col>\r\n            <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"3\" class=\"mt-2\">\r\n                <vs-button @click=\"getCancelar()\" color=\"danger\" type=\"relief\">Cancelar</vs-button>\r\n            </vs-col>\r\n        </vs-popup>\r\n        <vs-popup class=\"desactivar\" :title=\"`¿Confirma que desea cambiar el estado del grupo de producto: ${tabGrupoProducto.gru_pro_nombre}?`\" :active.sync=\"popupActivoDesactivar\">\r\n            <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"3\" class=\"mt-2\"></vs-col>\r\n            <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"3\" class=\"mt-2\">\r\n                <vs-button @click=\"desactivar_activar_producto()\" type=\"relief\">Aceptar</vs-button>\r\n            </vs-col>\r\n            <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"3\" class=\"mt-2\">\r\n                <vs-button @click=\"getCancelar()\" color=\"danger\" type=\"relief\">Cancelar</vs-button>\r\n            </vs-col>\r\n        </vs-popup>\r\n    </vx-card>\r\n    </template>\r\n<script>\r\nimport Vue from 'vue'\r\nimport axios from 'axios'\r\nimport vSelect from 'vue-select';\r\nexport default {\r\n    data() {\r\n        return{\r\n            options1: [\r\n                { text: '--Seleccione--', value: null },\r\n                { text: 'Si', value: true },\r\n                { text: 'No', value: false },\r\n            ],\r\n            GrupoProductos: [],\r\n            popupActivoGuardar: false,\r\n            popupActivoEditar: false,\r\n            popupActivoDesactivar: false,\r\n            popupActivoEliminar: false,\r\n            tabGrupoProducto: {\r\n                gru_pro_codigo: '',\r\n                gru_pro_nombre: '',\r\n                gru_pro_estado: '',\r\n            },\r\n            gru_pro_codigo: 0,\r\n            Producto_sinfiltro: [],\r\n            Producto_inactivos: [],\r\n            busquedaxcodigo: \"\",\r\n            valorBusqueda:\"0\",\r\n            checkBox_mostrarinactivos:false,\r\n            //showAgregarNuevo: false,\r\n        }\r\n    },\r\n    components: {\r\n        'v-select': vSelect,\r\n    },\r\n    mounted() {\r\n        this.getGrupoProducto();\r\n    },\r\n    methods: {\r\n        getGrupoProducto() {\r\n            let me = this;\r\n            me.$vs.loading()\r\n            this.$http.get(this.$server_url+'GetGrupoProducto_todo')\r\n            //axios.get(this.$apifacturacion_url + 'f_Producto')\r\n            .then(res => {\r\n            //let resultado = res.data.productos.filter(p => p.proCodigo !== 0);\r\n            //this.Productos = resultado;\r\n            this.GrupoProductos = res.data;\r\n            me.$vs.loading.close()\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                me.$vs.loading.close()\r\n            })\r\n        },\r\n        //SECCION GUARDAR NUEVO PRODUCTO\r\n        getNuevo() {\r\n            this.popupActivoGuardar = true\r\n            this.tabGrupoProducto.gru_pro_codigo = ''\r\n            this.tabGrupoProducto.gru_pro_nombre = ''\r\n            this.tabGrupoProducto.gru_pro_estado = ''\r\n        },\r\n        guardarnuevo() {\r\n        let me = this;\r\n        const usuariorespo = localStorage.getItem(\"usuario\");\r\n        const usuarioObjeto = JSON.parse(usuariorespo);\r\n        //VALIDACION DE CAMPOS NULOS Y VACIOS\r\n        if (this.tabGrupoProducto.gru_pro_nombre === '' || this.tabGrupoProducto.gru_pro_nombre === null) {\r\n            me.$vs.notify({\r\n                text: 'Escriba el nombre del grupo del producto antes de guardar',\r\n                color: 'danger',\r\n                iconPack: 'feather',\r\n                icon: 'icon-alert-triangle'\r\n            });\r\n            return;\r\n        }\r\n        let datos  = {\r\n            \"gru_pro_nombre\": this.tabGrupoProducto.gru_pro_nombre,\r\n            \"user_created\": usuarioObjeto.idusuario,\r\n        }\r\n        me.$vs.loading()\r\n        //axios.post(this.$apifacturacion_url + 'f_Vendedor', datos)\r\n        this.$http.post(this.$server_url+'PostGrupoProducto_Registrar_modificar', datos)\r\n            .then(res => {\r\n                me.$vs.loading.close()\r\n                this.getGrupoProducto();\r\n                me.$vs.notify({\r\n                    text: 'Grupo Producto guardado con exito',\r\n                    color: 'success',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-check'\r\n                })\r\n                this.popupActivoEditar = false;\r\n                this.popupActivoDesactivar = false;\r\n                this.popupActivoGuardar = false;\r\n                this.popupActivoEliminar = false;\r\n            })\r\n            .catch(function () {\r\n                me.$vs.loading.close()\r\n                me.$vs.notify({\r\n                    text: 'Grupo Producto no se pudo guardar',\r\n                    color: 'danger',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-x'\r\n                })\r\n            })\r\n        },\r\n        // getGrupoProducto() {\r\n        // axios.get('https://localhost:7252/api/Vendedor')\r\n        //     .then(res => {\r\n        //     let resultado = res.data.filter(c => c.cliCi !== null && c.cliCi !== '');\r\n        //     this.Vendedores = resultado;\r\n        //     console.log(this.Vendedores);\r\n        //     })\r\n        //     .catch(err => {\r\n        //     console.log(err);\r\n        //     });\r\n        // },\r\n        getEditar(tr) {\r\n        this.popupActivoEditar = true\r\n        this.tabGrupoProducto.gru_pro_codigo = tr.gru_pro_codigo\r\n        this.tabGrupoProducto.gru_pro_nombre = tr.gru_pro_nombre\r\n        // this.$router.push('/prueba/editar/' + this.id);\r\n        // console.log(id);\r\n        // this.$params.id;\r\n        },\r\n        editar() {\r\n        let me = this;\r\n        if (this.tabGrupoProducto.gru_pro_nombre === '' || this.tabGrupoProducto.gru_pro_nombre === null) {\r\n                me.$vs.notify({\r\n                    text: 'Escriba el nombre del grupo del producto antes de editar',\r\n                    color: 'danger',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-alert-triangle'\r\n                });\r\n                return;\r\n            }\r\n        let datos  = {\r\n                \"gru_pro_codigo\": this.tabGrupoProducto.gru_pro_codigo,\r\n                \"gru_pro_nombre\": this.tabGrupoProducto.gru_pro_nombre,\r\n            }\r\n        me.$vs.loading()\r\n        //axios.post(this.$apifacturacion_url + 'f_Producto/AggOrUpdateProducto', datos)\r\n        this.$http.post(this.$server_url+'PostGrupoProducto_Registrar_modificar', datos)\r\n            .then(res => {\r\n                me.$vs.loading.close()\r\n                this.getGrupoProducto();\r\n                me.$vs.notify({\r\n                    text: 'Grupo Producto editado con exito',\r\n                    color: 'success',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-check'\r\n                })\r\n                this.popupActivoEditar = false;\r\n                this.popupActivoDesactivar = false;\r\n                this.popupActivoGuardar = false;\r\n                this.popupActivoEliminar = false;\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                me.$vs.loading.close()\r\n                me.$vs.notify({\r\n                    text: 'Grupo Producto no se pudo editar',\r\n                    color: 'danger',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-x'\r\n                })\r\n            })\r\n        },\r\n        popup_desactivar_activar_producto(tr) {\r\n            this.popupActivoDesactivar = true\r\n            this.gru_pro_codigo = tr.gru_pro_codigo\r\n            this.tabGrupoProducto.gru_pro_nombre = tr.gru_pro_nombre\r\n            this.tabGrupoProducto.gru_pro_estado = tr.gru_pro_estado\r\n        },\r\n        desactivar_activar_producto() {\r\n        let me = this;\r\n        let valornuevo = this.tabGrupoProducto.gru_pro_estado;\r\n        console.log(valornuevo+'valornuevoeatdoprocutp'+this.gru_pro_codigo);\r\n        if(valornuevo == 1){\r\n            valornuevo = 0;\r\n            let datos  = {\r\n                \"gru_pro_codigo\": this.gru_pro_codigo,\r\n                \"gru_pro_estado\": valornuevo,\r\n            }\r\n            me.$vs.loading()\r\n            //axios.post(this.$apifacturacion_url + 'f_Producto/AggOrUpdateProducto', datos)\r\n            this.$http.post(this.$server_url+'Desactivar_GrupoProducto', datos)\r\n            .then(res => {\r\n                me.$vs.loading.close()\r\n                this.getGrupoProducto();\r\n                me.$vs.notify({\r\n                    text: 'Cambio de estado exitoso',\r\n                    color: 'success',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-check'\r\n                })\r\n                this.popupActivoEditar = false;\r\n                this.popupActivoDesactivar = false;\r\n                this.popupActivoGuardar = false;\r\n                this.popupActivoEliminar = false;\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                me.$vs.loading.close()\r\n                me.$vs.notify({\r\n                    text: 'No se pudo realizar el cambio de estado',\r\n                    color: 'danger',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-x'\r\n                })\r\n            })\r\n        }else if (valornuevo == 0){\r\n            valornuevo = 1;\r\n            let datos  = {\r\n                \"gru_pro_codigo\": this.gru_pro_codigo,\r\n                \"gru_pro_estado\": valornuevo,\r\n            }\r\n            me.$vs.loading()\r\n            //axios.post(this.$apifacturacion_url + 'f_Producto/AggOrUpdateProducto', datos)\r\n            this.$http.post(this.$server_url+'Desactivar_GrupoProducto', datos)\r\n            .then(res => {\r\n                me.$vs.loading.close()\r\n                this.getGrupoProducto();\r\n                me.$vs.notify({\r\n                    text: 'Cambio de estado exitoso',\r\n                    color: 'success',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-check'\r\n                })\r\n                this.popupActivoEditar = false;\r\n                this.popupActivoDesactivar = false;\r\n                this.popupActivoGuardar = false;\r\n                this.popupActivoEliminar = false;\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                me.$vs.loading.close()\r\n                me.$vs.notify({\r\n                    text: 'No se pudo realizar el cambio de estado',\r\n                    color: 'danger',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-x'\r\n                })\r\n            })\r\n        }\r\n        \r\n        },        \r\n        getPreguntaEliminar(tr) {\r\n            this.popupActivoEliminar = true\r\n            this.pro_codigo = tr.pro_codigo\r\n        },\r\n\r\n        getEliminar() {\r\n            let me = this;\r\n            let datos  = {\r\n                \"pro_codigo\": this.pro_codigo,\r\n            }\r\n            me.$vs.loading()\r\n            this.$http.post(this.$server_url + \"Eliminar_producto\", datos)\r\n                .then(data => {\r\n                    me.$vs.loading.close()\r\n                    this.getGrupoProducto();\r\n                    this.getProductoParametro();\r\n                    me.$vs.notify({\r\n                        text: 'Producto eliminado con exito',\r\n                        color: 'success',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check'\r\n                    })\r\n\r\n                    this.popupActivoEditar = false;\r\n                    this.popupActivoDesactivar = false;\r\n                    this.popupActivoGuardar = false;\r\n                    this.popupActivoEliminar = false;\r\n                })\r\n                .catch(function () {\r\n                    me.$vs.loading.close()\r\n                    me.$vs.notify({\r\n                        text: 'Producto no se pudo eliminar',\r\n                        color: 'danger',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-x'\r\n                    })\r\n                })\r\n        },\r\n\r\n\r\n        getCancelar() {\r\n            this.popupActivoEditar = false;\r\n            this.popupActivoGuardar = false;\r\n            this.popupActivoEliminar = false;\r\n            this.popupActivoDesactivar = false;\r\n        },\r\n    },\r\n    // created(){\r\n    //     let url = \"https://localhost:7252/api/Vendedor\";\r\n    //     axios.get(url).then((response) => this.Vendedores = response.data);\r\n    //     // fetch(\"https://localhost:7252/api/Vendedor/\")\r\n    //     // .then(response => response.json())\r\n    //     // .then((data) => (this.Vendedores = data));\r\n    //     // // .then(data => (this.totalVuePackages = data.total));\r\n    // }\r\n}\r\n</script>"]}]}