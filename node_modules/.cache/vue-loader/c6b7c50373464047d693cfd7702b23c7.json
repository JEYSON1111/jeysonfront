{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\pedidos\\components\\Guias\\entregaGuias\\DevolucionGuias.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\pedidos\\components\\Guias\\entregaGuias\\DevolucionGuias.vue","mtime":1712682816270},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nexport default{\r\n    data(){\r\n        return{\r\n            usuario:[],\r\n            buton:false,\r\n        }\r\n    },\r\n    props:{\r\n        pedido:{\r\n           type:Object,\r\n           default:{} \r\n        }\r\n    },\r\n    created(){\r\n        let me = this;\r\n        me.usuario = JSON.parse(localStorage.getItem(\"usuario\"))\r\n    },\r\n    methods:{\r\n        openConfirm(){\r\n            let me = this\r\n            this.$vs.dialog({\r\n                type:'confirm',\r\n                color: 'danger',\r\n                acceptText:'aceptar',\r\n                cancelText:'cancelar',\r\n                title: `Confirmar`,\r\n                text: 'Estas seguro de registrar esta devolucion de guias de la escuela '+me.pedido.nombreInstitucion,\r\n                accept:this.guardarStock\r\n            })\r\n        },\r\n        guardarStock(){\r\n            let me = this;\r\n            //setear valores nulos\r\n            var setValores = []\r\n            setValores = me.pedido.entregas.filter(p => p.formato !=null)\r\n            let formData = new FormData();\r\n            formData.append('institucion_id',       me.pedido.institucion_id);\r\n            formData.append('periodo_id',           me.pedido.periodo_id);\r\n            formData.append('asesor_id',            me.usuario.idusuario);\r\n            formData.append('data_detalle',         JSON.stringify(setValores))\r\n            //tipo 1 = resta; 0 = suma\r\n            formData.append('tipo',                 0)\r\n            me.$vs.loading()\r\n            this.$http.post(this.$server_url+'PedidoGuiaEntregas', formData)\r\n            .then(res => {\r\n                me.$vs.loading.close()\r\n                me.$vs.notify({\r\n                    text:res.data.message,\r\n                    color:'success',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check'\r\n                }) \r\n                me.$emit('recharge',true)\r\n                me.buton = false\r\n            })\r\n            .catch((e) => {\r\n                me.$vs.loading.close()\r\n            })\r\n        },\r\n        revisarCantidad(tr){\r\n            let me = this;\r\n            if( (tr.formato > (tr.cantidad_entregada - tr.devolucion)) || (tr.formato < 0 || tr.formato == 0  ) ){\r\n                me.$vs.notify({\r\n                text:'Stock insuficiente o valor inferior a 1',\r\n                color:'danger',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n                let datos = me.pedido.entregas\r\n                me.pedido.entregas = []\r\n                datos.forEach(element => {\r\n                    var cal = new Object();\r\n                    cal.nombrelibro                 = element.nombrelibro\r\n                    cal.pro_codigo                  = element.pro_codigo\r\n                    cal.cantidad_entregada          = element.cantidad_entregada\r\n                    cal.pro_stock                   = element.pro_stock\r\n                    cal.devolucion                  = element.devolucion\r\n                    cal.pedidos_guias_entrega_id    = element.pedidos_guias_entrega_id\r\n                    if(element.pro_codigo == tr.pro_codigo){\r\n                        cal.formato = \"\"\r\n                    }else{\r\n                        cal.formato = element.formato\r\n                    }\r\n                    me.pedido.entregas.push(cal)\r\n                });    \r\n                return\r\n            }\r\n            me.buton = true\r\n        },\r\n        statusButton(){\r\n            let me = this;\r\n            me.buton = false\r\n        },\r\n    }\r\n   \r\n}\r\n",{"version":3,"sources":["DevolucionGuias.vue"],"names":[],"mappings":";AAuCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"DevolucionGuias.vue","sourceRoot":"src/views/pedidos/components/Guias/entregaGuias","sourcesContent":["<template>\r\n    <div>\r\n        <p class=\"text-warning font-bold text-2xl mt-2\">Registro de guias que la escuela {{ pedido.nombreInstitucion }} devuelve</p>\r\n        <vs-divider></vs-divider>\r\n        <vs-table max-items=\"10\" search pagination :data=\"pedido.entregas\">\r\n            <template slot=\"header\">\r\n                <vs-chip  color=\"primary\">Cantidad: <b> {{ pedido.entregas.length }}</b></vs-chip>\r\n            </template>\r\n            <template slot=\"thead\">\r\n                <vs-th>Código</vs-th>\r\n                <vs-th>Su stock</vs-th>\r\n                <vs-th>Cantidad que tiene la escuela</vs-th>\r\n                <vs-th>Cantidad</vs-th>\r\n            </template>\r\n            <template slot-scope=\"{data}\">\r\n                <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                    <vs-td>\r\n                        {{data[indextr].nombrelibro}}<br>\r\n                        <p><b>código:</b> {{ tr.pro_codigo }}</p>\r\n                    </vs-td>\r\n                    <vs-td>\r\n                        {{ tr.pro_stock }}\r\n                    </vs-td>\r\n                    <vs-td>\r\n                        {{ tr.cantidad_entregada - tr.devolucion }}\r\n                    </vs-td> \r\n                    <vs-td>\r\n                        <vs-input type=\"number\" min=\"1\" v-if=\"tr.cantidad_entregada > tr.devolucion\" :max=\"tr.cantidad_entregada - tr.devolucion\" @input=\"statusButton()\" @blur=\"revisarCantidad(tr)\" label-placeholder=\"Ingrese la cantidad\" v-model=\"tr.formato\"/>\r\n                        <p v-else class=\"text-danger\">No hay guias para devolver</p>\r\n                    </vs-td>\r\n                </vs-tr>\r\n            </template>\r\n        </vs-table>   \r\n        <div style=\"margin-top: -35px;\">\r\n            <vs-button v-if=\"buton\" @click=\"openConfirm()\" color=\"success\" icon=\"save\" type=\"relief\">Guardar</vs-button>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nexport default{\r\n    data(){\r\n        return{\r\n            usuario:[],\r\n            buton:false,\r\n        }\r\n    },\r\n    props:{\r\n        pedido:{\r\n           type:Object,\r\n           default:{} \r\n        }\r\n    },\r\n    created(){\r\n        let me = this;\r\n        me.usuario = JSON.parse(localStorage.getItem(\"usuario\"))\r\n    },\r\n    methods:{\r\n        openConfirm(){\r\n            let me = this\r\n            this.$vs.dialog({\r\n                type:'confirm',\r\n                color: 'danger',\r\n                acceptText:'aceptar',\r\n                cancelText:'cancelar',\r\n                title: `Confirmar`,\r\n                text: 'Estas seguro de registrar esta devolucion de guias de la escuela '+me.pedido.nombreInstitucion,\r\n                accept:this.guardarStock\r\n            })\r\n        },\r\n        guardarStock(){\r\n            let me = this;\r\n            //setear valores nulos\r\n            var setValores = []\r\n            setValores = me.pedido.entregas.filter(p => p.formato !=null)\r\n            let formData = new FormData();\r\n            formData.append('institucion_id',       me.pedido.institucion_id);\r\n            formData.append('periodo_id',           me.pedido.periodo_id);\r\n            formData.append('asesor_id',            me.usuario.idusuario);\r\n            formData.append('data_detalle',         JSON.stringify(setValores))\r\n            //tipo 1 = resta; 0 = suma\r\n            formData.append('tipo',                 0)\r\n            me.$vs.loading()\r\n            this.$http.post(this.$server_url+'PedidoGuiaEntregas', formData)\r\n            .then(res => {\r\n                me.$vs.loading.close()\r\n                me.$vs.notify({\r\n                    text:res.data.message,\r\n                    color:'success',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check'\r\n                }) \r\n                me.$emit('recharge',true)\r\n                me.buton = false\r\n            })\r\n            .catch((e) => {\r\n                me.$vs.loading.close()\r\n            })\r\n        },\r\n        revisarCantidad(tr){\r\n            let me = this;\r\n            if( (tr.formato > (tr.cantidad_entregada - tr.devolucion)) || (tr.formato < 0 || tr.formato == 0  ) ){\r\n                me.$vs.notify({\r\n                text:'Stock insuficiente o valor inferior a 1',\r\n                color:'danger',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n                let datos = me.pedido.entregas\r\n                me.pedido.entregas = []\r\n                datos.forEach(element => {\r\n                    var cal = new Object();\r\n                    cal.nombrelibro                 = element.nombrelibro\r\n                    cal.pro_codigo                  = element.pro_codigo\r\n                    cal.cantidad_entregada          = element.cantidad_entregada\r\n                    cal.pro_stock                   = element.pro_stock\r\n                    cal.devolucion                  = element.devolucion\r\n                    cal.pedidos_guias_entrega_id    = element.pedidos_guias_entrega_id\r\n                    if(element.pro_codigo == tr.pro_codigo){\r\n                        cal.formato = \"\"\r\n                    }else{\r\n                        cal.formato = element.formato\r\n                    }\r\n                    me.pedido.entregas.push(cal)\r\n                });    \r\n                return\r\n            }\r\n            me.buton = true\r\n        },\r\n        statusButton(){\r\n            let me = this;\r\n            me.buton = false\r\n        },\r\n    }\r\n   \r\n}\r\n</script>"]}]}