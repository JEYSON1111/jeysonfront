{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\usuarios\\tipos\\InstitucionesAsesor.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\usuarios\\tipos\\InstitucionesAsesor.vue","mtime":1712682816660},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nexport default {\r\n    data() {\r\n        return{\r\n            tmparregloAsesores:[],\r\n            arregloAsesores:[],\r\n            usuario:[],\r\n            escuelas:[],\r\n            region:'2',\r\n            //para el reporte excel\r\n            fileName: null,\r\n            activePrompt: false,\r\n            codigoSelected: [],\r\n            reportesActivo: 0,\r\n            fileName: null,\r\n            formats: ['xls', 'xlsx', 'csv', 'txt'],\r\n            cellAutoWidth: true,\r\n            selectedFormat: 'xls',\r\n            //fin variables para exportar\r\n        }\r\n    },\r\n    props:{\r\n        periodo_idSierra:{\r\n            type:Number,\r\n            default:0,\r\n        },\r\n        periodo_idCosta:{\r\n            type:Number,\r\n            default:0,\r\n        },\r\n        cedula:{\r\n            type:String,\r\n            default:'0',\r\n        },\r\n    },\r\n    created() {\r\n        let me = this;\r\n        me.usuario = JSON.parse(localStorage.getItem(\"usuario\"))\r\n        me.getEscuelas();\r\n    },\r\n    methods:{\r\n         //cantidad de escuelas del asesor\r\n        async getEscuelas() {\r\n            let me = this;\r\n            this.$http.get(this.$server_url+'getInstitucionesxAsesor?cedula='+me.cedula)\r\n                .then(function (res) {\r\n                    me.tmparregloAsesores = res.data\r\n                    me.filtroInstituciones()\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                })\r\n        },\r\n        filtroInstituciones(){\r\n            let me = this;\r\n            me.arregloAsesores = []\r\n            let datos = me.tmparregloAsesores;\r\n            me.arregloAsesores = datos.filter(p => p.region == me.region)\r\n        },\r\n         //para limipiar los campos del excel\r\n         clearFields() {\r\n            this.fileName = ''\r\n            this.cellAutoWidth = true\r\n            this.selectedFormat = 'xls'\r\n        },\r\n        //metodo par descargar el excel\r\n           exportToExcel() {\r\n            let headerTitle = ['Institucion' ,'Ciudad', 'Periodo'];\r\n            let headerVal = [ 'nombreInstitucion','ciudad','periodo'];\r\n            let codigoSelectedMayus = this.codigoSelected\r\n            for (var i = 0; i < codigoSelectedMayus.length; i++) {\r\n                for (var key in codigoSelectedMayus[i]) {\r\n                    if (typeof codigoSelectedMayus[i][key] == \"string\") {\r\n                        codigoSelectedMayus[i][key] = codigoSelectedMayus[i][key].toUpperCase();\r\n                    }\r\n                }\r\n            }\r\n            import('@/vendor/Export2Excel').then(excel => {\r\n                const list = codigoSelectedMayus\r\n                const data = this.formatJson(headerVal, list)\r\n                excel.export_json_to_excel({\r\n                    header: headerTitle,\r\n                    data,\r\n                    filename: this.fileName,\r\n                    autoWidth: this.cellAutoWidth,\r\n                    bookType: this.selectedFormat\r\n                })\r\n                this.clearFields()\r\n                this.guardarActivo = '';\r\n                this.generarActivo = ' ';\r\n                this.textAlertCant = '';\r\n                this.cantidad = '';\r\n                this.codigoSelected = [];\r\n            })\r\n        },\r\n        formatJson(filterVal, jsonData) {\r\n            return jsonData.map(v => filterVal.map(j => {\r\n                return v[j]\r\n            }))\r\n        },\r\n    }\r\n}\r\n",{"version":3,"sources":["InstitucionesAsesor.vue"],"names":[],"mappingsfile":"InstitucionesAsesor.vue","sourceRoot":"src/views/usuarios/tipos","sourcesContent":["<template>\r\n    <div>\r\n        <div v-if=\"usuario.id_group == 11 || usuario.id_group == 1\">\r\n            <div>\r\n             <br/><br/>\r\n                <vs-table   multiple stripe v-model=\"codigoSelected\"  max-items=\"25\" search pagination :data=\"arregloAsesores\" style=\"margin-top:-40px\">\r\n                    <template slot=\"header\">\r\n                        <ul class=\"leftx\" style=\"display:flex;flex-direction: row;\">\r\n                            <li class=\"ml-2\">\r\n                            <vs-radio v-model=\"region\" vs-name=\"radios1\" @input=\"filtroInstituciones()\" vs-value=\"1\">Sierra</vs-radio>\r\n                            </li>\r\n                            <li class=\"ml-2\">\r\n                            <vs-radio v-model=\"region\" vs-name=\"radios1\" @input=\"filtroInstituciones()\" vs-value=\"2\">Costa</vs-radio>\r\n                            </li>\r\n                            <li>\r\n                                <vs-chip class=\"ml-3\" transparent color=\"danger\" style=\"margin-top:-3px;\">\r\n                                   Cantidad {{ arregloAsesores.length }}\r\n                                </vs-chip>\r\n                            </li>\r\n                            <vs-button color=\"warning\" type=\"line\" icon=\"description\"  size=\"small\" class=\"mr-5 ml-3\" style=\"font-size: 14px;margin-top: -10px;\" @click=\"activePrompt=true;\">Exportar</vs-button>\r\n                        </ul>\r\n                    </template>\r\n                    <template slot=\"thead\">\r\n                        <vs-th sort-key=\"nombreInstitucion\">Institución</vs-th>\r\n                        <vs-th sort-key=\"ciudad\">Ciudad</vs-th>\r\n                        <vs-th sort-key=\"periodo\">Período</vs-th>\r\n                    </template>\r\n                    <template slot-scope=\"{data}\">\r\n                        <vs-tr :data=\"tr\"  :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                            <vs-td>\r\n                                {{tr.nombreInstitucion}}\r\n                            </vs-td>\r\n                            <vs-td>\r\n                                {{data[indextr].ciudad}}<br>\r\n                            </vs-td>\r\n                            <vs-td>\r\n                               <p> {{ tr.periodo }}</p>\r\n                                 <vs-chip :color=\"tr.estado == 1?'primary':'danger'\">\r\n                                   {{tr.estado == 1 ?'Activo':'No activo'}}\r\n                                </vs-chip>\r\n                            </vs-td>\r\n                        </vs-tr>\r\n                    </template>\r\n                </vs-table>\r\n            </div>\r\n        </div>\r\n        <!--MODAL PARA EXPORTAR A EXCEL-->\r\n        <vs-prompt title=\"Exportar a Excel\" class=\"export-options\" @cancle=\"clearFields\" @accept=\"exportToExcel\" accept-text=\"Exportar\" @close=\"clearFields\" :active.sync=\"activePrompt\">\r\n            <vs-alert class=\"mb-3\" color=\"danger\" icon-pack=\"feather\" icon=\"icon-info\">\r\n                <span>Recuerde <b>seleccionar</b> los registros que desea exportar.</span>\r\n            </vs-alert>\r\n            <vs-input v-model=\"fileName\" placeholder=\"Ingrese el nombre del archivo\" class=\"w-full\" />\r\n            <v-select v-model=\"selectedFormat\" :options=\"formats\" class=\"my-4\" />\r\n            <div class=\"flex\">\r\n            </div>\r\n        </vs-prompt>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data() {\r\n        return{\r\n            tmparregloAsesores:[],\r\n            arregloAsesores:[],\r\n            usuario:[],\r\n            escuelas:[],\r\n            region:'2',\r\n            //para el reporte excel\r\n            fileName: null,\r\n            activePrompt: false,\r\n            codigoSelected: [],\r\n            reportesActivo: 0,\r\n            fileName: null,\r\n            formats: ['xls', 'xlsx', 'csv', 'txt'],\r\n            cellAutoWidth: true,\r\n            selectedFormat: 'xls',\r\n            //fin variables para exportar\r\n        }\r\n    },\r\n    props:{\r\n        periodo_idSierra:{\r\n            type:Number,\r\n            default:0,\r\n        },\r\n        periodo_idCosta:{\r\n            type:Number,\r\n            default:0,\r\n        },\r\n        cedula:{\r\n            type:String,\r\n            default:'0',\r\n        },\r\n    },\r\n    created() {\r\n        let me = this;\r\n        me.usuario = JSON.parse(localStorage.getItem(\"usuario\"))\r\n        me.getEscuelas();\r\n    },\r\n    methods:{\r\n         //cantidad de escuelas del asesor\r\n        async getEscuelas() {\r\n            let me = this;\r\n            this.$http.get(this.$server_url+'getInstitucionesxAsesor?cedula='+me.cedula)\r\n                .then(function (res) {\r\n                    me.tmparregloAsesores = res.data\r\n                    me.filtroInstituciones()\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                })\r\n        },\r\n        filtroInstituciones(){\r\n            let me = this;\r\n            me.arregloAsesores = []\r\n            let datos = me.tmparregloAsesores;\r\n            me.arregloAsesores = datos.filter(p => p.region == me.region)\r\n        },\r\n         //para limipiar los campos del excel\r\n         clearFields() {\r\n            this.fileName = ''\r\n            this.cellAutoWidth = true\r\n            this.selectedFormat = 'xls'\r\n        },\r\n        //metodo par descargar el excel\r\n           exportToExcel() {\r\n            let headerTitle = ['Institucion' ,'Ciudad', 'Periodo'];\r\n            let headerVal = [ 'nombreInstitucion','ciudad','periodo'];\r\n            let codigoSelectedMayus = this.codigoSelected\r\n            for (var i = 0; i < codigoSelectedMayus.length; i++) {\r\n                for (var key in codigoSelectedMayus[i]) {\r\n                    if (typeof codigoSelectedMayus[i][key] == \"string\") {\r\n                        codigoSelectedMayus[i][key] = codigoSelectedMayus[i][key].toUpperCase();\r\n                    }\r\n                }\r\n            }\r\n            import('@/vendor/Export2Excel').then(excel => {\r\n                const list = codigoSelectedMayus\r\n                const data = this.formatJson(headerVal, list)\r\n                excel.export_json_to_excel({\r\n                    header: headerTitle,\r\n                    data,\r\n                    filename: this.fileName,\r\n                    autoWidth: this.cellAutoWidth,\r\n                    bookType: this.selectedFormat\r\n                })\r\n                this.clearFields()\r\n                this.guardarActivo = '';\r\n                this.generarActivo = ' ';\r\n                this.textAlertCant = '';\r\n                this.cantidad = '';\r\n                this.codigoSelected = [];\r\n            })\r\n        },\r\n        formatJson(filterVal, jsonData) {\r\n            return jsonData.map(v => filterVal.map(j => {\r\n                return v[j]\r\n            }))\r\n        },\r\n    }\r\n}\r\n</script>\r\n"]}]}