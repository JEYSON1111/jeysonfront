{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\layouts\\main\\Main.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\layouts\\main\\Main.vue","mtime":1712682815247},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\n    import Vue from \"vue\";\r\n    import axios from \"axios\";\r\n    import Vidle from \"v-idle\";\r\n    import BackToTop from \"vue-backtotop\";\r\n    import HNavMenu from \"@/layouts/components/horizontal-nav-menu/HorizontalNavMenu.vue\";\r\n    //import navMenuItems from '@/layouts/components/vertical-nav-menu/navMenuItems.js'\r\n    import TheNavbarHorizontal from \"@/layouts/components/navbar/TheNavbarHorizontal.vue\";\r\n    import TheNavbarVertical from \"@/layouts/components/navbar/TheNavbarVertical.vue\";\r\n    import TheFooter from \"@/layouts/components/TheFooter.vue\";\r\n    import themeConfig from \"@/../VirtualConfig.js\";\r\n    import VNavMenu from \"@/layouts/components/vertical-nav-menu/VerticalNavMenu.vue\";\r\n    import DataViewSidebar from \"./bloqueo\";\r\n    import BloqueoSession from \"./session\";\r\n    // import io from \"socket.io-client\";\r\n    import {\r\n        mapState\r\n    } from \"vuex\";\r\n    import InfoEstudiante from \"./infoEstudiante.vue\";\r\n    Vue.use(Vidle);\r\n    Vue.use(axios);\r\n    export default {\r\n        components: {\r\n            BackToTop,\r\n            HNavMenu,\r\n            TheFooter,\r\n            TheNavbarHorizontal,\r\n            TheNavbarVertical,\r\n            VNavMenu,\r\n            DataViewSidebar,\r\n            BloqueoSession,\r\n            InfoEstudiante\r\n        },\r\n        data() {\r\n            return {\r\n                activePrompt: false,\r\n                usuario: [],\r\n                navMenuItems: [],\r\n                footerType: themeConfig.footerType || \"static\",\r\n                hideScrollToTop: themeConfig.hideScrollToTop,\r\n                isNavbarDark: false,\r\n                navbarColor: themeConfig.navbarColor || \"#fff\",\r\n                navbarType: themeConfig.navbarType || \"floating\",\r\n                routerTransition: themeConfig.routerTransition || \"none\",\r\n                routeTitle: this.$route.meta.pageTitle,\r\n                sidebarData: {},\r\n                addNewDataSidebar: false,\r\n                addNewDataSidebarr: false,\r\n                IfinfoEstudiante: false,\r\n                // socket: io(process.env.socket),\r\n            };\r\n        },\r\n        mounted() {\r\n            let me = this;\r\n            if (!localStorage.usuario) {\r\n                if (this.$store.state.auth == true) {\r\n                    console.log(this.auth);\r\n                    this.$router.push(\"/home\");\r\n                } else {\r\n                    this.$router.push(\"/\");\r\n                }\r\n            }\r\n            this.getMenu();\r\n            this.getPeriodo();\r\n            this.getVerInstitucionActiva();\r\n            // if(this.usuario.id_group == 4){\r\n            //     this.validateInformationStudent()\r\n            // }\r\n            if(me.usuario.id_group != 4 && me.usuario.id_group != 6 && me.usuario.id_group != 12 && me.usuario.id_group != 13){\r\n             me.getUserRoot()\r\n            }\r\n        },\r\n        watch: {\r\n            $route() {\r\n                this.routeTitle = this.$route.meta.pageTitle;\r\n            },\r\n            isThemeDark(val) {\r\n                const color = this.navbarColor === \"#046AE7\" && val ? \"#10163a\" : \"#046AE7\";\r\n                this.updateNavbarColor(color);\r\n            },\r\n            \"$store.state.mainLayoutType\"(val) {\r\n                this.setNavMenuVisibility(val);\r\n            },\r\n        },\r\n        computed: {\r\n            ...mapState([\"auth\",'userRoot','susuario']),\r\n            bodyOverlay() {\r\n                return this.$store.state.bodyOverlay;\r\n            },\r\n            contentAreaClass() {\r\n                if (this.mainLayoutType === \"vertical\") {\r\n                    if (this.verticalNavMenuWidth === \"default\")\r\n                        return \"content-area-reduced\";\r\n                    else if (this.verticalNavMenuWidth === \"reduced\")\r\n                        return \"content-area-lg\";\r\n                    else return \"content-area-full\";\r\n                } else return \"content-area-full\";\r\n            },\r\n            footerClasses() {\r\n                return {\r\n                    \"footer-hidden\": this.footerType === \"hidden\",\r\n                    \"footer-sticky\": this.footerType === \"sticky\",\r\n                    \"footer-static\": this.footerType === \"static\",\r\n                };\r\n            },\r\n            isAppPage() {\r\n                return this.$route.meta.no_scroll;\r\n            },\r\n            isThemeDark() {\r\n                return this.$store.state.theme === \"dark\";\r\n            },\r\n            layoutTypeClass() {\r\n                return `main-${this.mainLayoutType}`;\r\n            },\r\n            mainLayoutType() {\r\n                return this.$store.state.mainLayoutType;\r\n            },\r\n            navbarClasses() {\r\n                return {\r\n                    \"navbar-hidden\": this.navbarType === \"hidden\",\r\n                    \"navbar-sticky\": this.navbarType === \"sticky\",\r\n                    \"navbar-static\": this.navbarType === \"static\",\r\n                    \"navbar-floating\": this.navbarType === \"floating\",\r\n                };\r\n            },\r\n            verticalNavMenuWidth() {\r\n                return this.$store.state.verticalNavMenuWidth;\r\n            },\r\n            windowWidth() {\r\n                return this.$store.state.windowWidth;\r\n            },\r\n        },\r\n        methods: {\r\n            getUserRoot() {\r\n                let me = this;\r\n                this.$store.dispatch('getUserInfo')\r\n                this.$http.get(this.$server_url + 'permisos/' + this.usuario.idusuario)\r\n                    .then((result) => {\r\n                        //root\r\n                        let preRoot = false\r\n                        if(result.data.length > 0){ preRoot = true; this.$store.dispatch('setRoot',true) }\r\n                        else{ preRoot = false; this.$store.dispatch('setRoot',false) }\r\n                        //grupo facturador\r\n                        if(this.usuario.id_group == 23 || this.usuario.id_group == 22 || preRoot){ this.$store.dispatch('setGroupFacturador',true) }\r\n                        //asesor\r\n                        if(this.usuario.id_group == 11 ) { this.$store.dispatch('setGroup',{ \"grupo\":11,\"permiso\":true }) }\r\n                        //grupo Bodega\r\n                        if(this.usuario.id_group == 17 || this.usuario.id_group == 27 || preRoot){ this.$store.dispatch('setGrupoBodega',true) }\r\n\r\n                    })\r\n                    .catch((err) => {\r\n                        console.log(err)\r\n                    })\r\n                },\r\n            onidle() {\r\n                // alert(\"Se ha cerrado la sesiÃ³n\");\r\n                this.addNewDataSidebarr = true\r\n\r\n            },\r\n            onremind(hora) {\r\n                // Alerta segundos restantes hasta las 00:00\r\n                //   alert(hora);\r\n            },\r\n            addNewData() {\r\n                this.sidebarData = {};\r\n                this.toggleDataSidebar(true);\r\n            },\r\n            toggleDataSidebar(val = false) {\r\n                this.addNewDataSidebar = val;\r\n            },\r\n            toggleDataSidebarEstudiante(val = false) {\r\n                this.IfinfoEstudiante = val;\r\n            },\r\n            getMenu() {\r\n                let me = this;\r\n\r\n                if (me.usuario.idusuario == null) {\r\n                    return false;\r\n                }\r\n                me.$vs.loading();\r\n                this.$http\r\n                    .get(this.$server_url + \"menu?idgrupo=\" + me.usuario.id_group)\r\n                    .then(function (response) {\r\n                        me.$vs.loading.close();\r\n                        me.navMenuItems = response.data;\r\n                        // console.log(me.navMenuItems);\r\n                    })\r\n                    .catch(function (error) {\r\n                        me.$vs.loading.close();\r\n                    });\r\n            },\r\n            changeRouteTitle(title) {\r\n                this.routeTitle = title;\r\n            },\r\n            updateNavbarColor(val) {\r\n                this.navbarColor = val;\r\n                if (val === \"#fff\") this.isNavbarDark = false;\r\n                else this.isNavbarDark = true;\r\n            },\r\n            setNavMenuVisibility(layoutType) {\r\n                if (\r\n                    (layoutType === \"horizontal\" && this.windowWidth >= 1200) ||\r\n                    (layoutType === \"vertical\" && this.windowWidth < 1200)\r\n                ) {\r\n                    this.$store.commit(\"TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE\", false);\r\n                    this.$store.dispatch(\"updateVerticalNavMenuWidth\", \"no-nav-menu\");\r\n                } else {\r\n                    this.$store.commit(\"TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE\", true);\r\n                }\r\n            },\r\n            getPeriodo() {\r\n                let me = this;\r\n                this.$http\r\n                    .get(\r\n                        this.$server_url +\r\n                        \"periodoInstitucion?idInstitucion=\" +\r\n                        me.usuario.institucion_idInstitucion\r\n                    )\r\n                    .then(function (response) {\r\n                        console.log(response.data);\r\n                        if (response.data == 1) {\r\n                            me.addNewDataSidebar = false;\r\n                        } else {\r\n                            me.addNewDataSidebar = true;\r\n                            localStorage.removeItem(\"tk\");\r\n                        }\r\n                    })\r\n                    .catch(function (error) {});\r\n            },\r\n            getVerInstitucionActiva() {\r\n                let me = this;\r\n                this.$http\r\n                    .get(\r\n                        this.$server_url +\r\n                        \"institucionActiva?idInstitucion=\" +\r\n                        me.usuario.institucion_idInstitucion\r\n                    )\r\n                    .then(function (response) {\r\n                        console.log(response.data[0].estado);\r\n                        if (response.data[0].estado == 1) {\r\n                            me.addNewDataSidebar = false;\r\n                        } else {\r\n                            me.addNewDataSidebar = true;\r\n                            localStorage.removeItem(\"tk\");\r\n                        }\r\n                    })\r\n                    .catch(function (error) {});\r\n            },\r\n\r\n            //metodo para validar datos del estudiante\r\n            validateInformationStudent() {\r\n                let me = this;\r\n                let institucion = me.usuario.institucion_idInstitucion\r\n                let estudiante = me.usuario.idusuario\r\n                this.$http.get(this.$server_url + 'informationStudent?institucion_id=' + institucion + '&idusuario=' + estudiante)\r\n                    .then(function (res) {\r\n                        if (res.data.status == 1) {\r\n                            me.IfinfoEstudiante = false\r\n                        } else {\r\n                            me.IfinfoEstudiante = true\r\n                            me.$vs.notify({\r\n                                text: res.data.message,\r\n                                color: 'success',\r\n                                iconPack: 'feather',\r\n                                icon: 'icon-check'\r\n                            })\r\n                            return\r\n                        }\r\n\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(error + ' error');\r\n                    })\r\n            },\r\n            saveHistoricoVisitas() {\r\n                let me = this;\r\n                let formData = new FormData();\r\n                formData.append('idusuario', me.usuario.idusuario)\r\n                formData.append('institucion_id', me.usuario.institucion_idInstitucion)\r\n                formData.append('id_group', me.usuario.id_group)\r\n                formData.append('recurso', '15')\r\n                formData.append('datos', 'Ingreso al sistema')\r\n                this.$http.post(this.$server_url + 'historico', formData)\r\n                    .then(res => {\r\n                        console.log(res.data.message)\r\n                    })\r\n                    .catch(function (e) {\r\n                        console.log(e)\r\n                    })\r\n            },\r\n        },\r\n        created() {\r\n            let me = this;\r\n            const color =\r\n                this.navbarColor === \"#fff\" && this.isThemeDark ?\r\n                \"#10163a\" :\r\n                this.navbarColor;\r\n            this.updateNavbarColor(color);\r\n            this.setNavMenuVisibility(this.$store.state.mainLayoutType);\r\n            try {\r\n                this.usuario = JSON.parse(localStorage.getItem(\"usuario\"));\r\n                // console.log(this.usuario);\r\n                if (this.usuario == null || this.usuario.length != 1) {\r\n                    localStorage.removeItem(\"tk\");\r\n                    localStorage.removeItem(\"token\");\r\n                }\r\n            } catch (error) {\r\n                localStorage.removeItem(\"tk\");\r\n                localStorage.removeItem(\"token\");\r\n            }\r\n            var hoy = new Date();\r\n            var fecha =\r\n                hoy.getDate() + \"-\" + (hoy.getMonth() + 1) + \"-\" + hoy.getFullYear();\r\n            var hora = hoy.getHours() + \":\" + hoy.getMinutes() + \":\" + hoy.getSeconds();\r\n            if (this.usuario.id_group == 6) {\r\n                var grupo = \"Docente\";\r\n            }\r\n            if (this.usuario.id_group == 4) {\r\n                var grupo = \"Estudiante\";\r\n            }\r\n            if (this.usuario.id_group == 1) {\r\n                var grupo = \"Administrador\";\r\n            }\r\n            var usr = new Object();\r\n            usr.id = this.usuario.idusuario;\r\n            usr.nombres = this.usuario.nombres;\r\n            usr.idusuario = this.usuario.idusuario;\r\n            usr.nombres = this.usuario.nombres;\r\n            usr.apellidos = this.usuario.apellidos;\r\n            usr.email = this.usuario.email;\r\n            usr.grupo = this.usuario.id_group;\r\n            usr.Institucion = this.usuario.nombreInstitucion;\r\n            usr.token = localStorage.tk;\r\n            usr.fecha = fecha + \" \" + hora;\r\n            // try {\r\n            //     this.socket.on(this.usuario.idusuario, (data) => {\r\n            //         this.addNewDataSidebarr = true\r\n            //     })\r\n            //     this.socket.emit(\"sessionclose\", usr);\r\n            // } catch (error) {\r\n            //     console.log(error)\r\n            // }\r\n\r\n            //SOCKET DE NOTIFICACIONES MENSAJES PEDIDOS\r\n            // try {\r\n            //     this.socket.on('enviar', (data) => {\r\n            //         console.log(\"nuevo mensaje\",data)\r\n            //         if(data.tipo == 'pedidos_chat'){\r\n            //              //si el mensaje envia un asesor\r\n            //             if(data.grupo == 11){\r\n            //                 if(me.usuario.id_group == 22 || me.usuario.id_group == 23){\r\n            //                 me.$vs.notify({\r\n            //                 text:'Tienes un nuevo mensaje del pedido',\r\n            //                 color:'success',\r\n            //                 iconPack: 'feather',\r\n            //                 icon:'icon-check',\r\n            //                 time:5000,\r\n            //                 })\r\n            //                 return\r\n            //                 }\r\n            //             }\r\n            //             if(data.grupo == 22 || data.grupo == 23){\r\n            //                 if(me.usuario.id_group == 11 && data.id_asesor == me.usuario.idusuario){\r\n            //                 me.$vs.notify({\r\n            //                     text:'Tienes un nuevo mensaje del pedido',\r\n            //                     color:'success',\r\n            //                     iconPack: 'feather',\r\n            //                     icon:'icon-check',\r\n            //                     time:5000,\r\n            //                     })\r\n            //                     return\r\n            //                 }\r\n            //             }\r\n            //         }\r\n            //     })\r\n            // } catch (error) {\r\n            //     console.log(error)\r\n            // }\r\n\r\n            // axios\r\n            //     .post(\"https://foro.prolipadigital.com.ec/estudiantes\", {\r\n            //         idusuario: this.usuario.idusuario,\r\n            //         cedula: this.usuario.cedula,\r\n            //         nombres: this.usuario.nombres,\r\n            //         apellidos: this.usuario.apellidos,\r\n            //         email: this.usuario.email,\r\n            //         idgrupo: this.usuario.id_group,\r\n            //         token: localStorage.tk,\r\n            //         fecha: fecha,\r\n            //         hora: hora,\r\n            //     })\r\n            //     .then(function (response) {\r\n            //         console.log(me.response);\r\n            //     })\r\n            //     .catch(function (error) {});\r\n            this.saveHistoricoVisitas();\r\n        },\r\n    };\r\n    ",{"version":3,"sources":["Main.vue"],"names":[],"mappingsfile":"Main.vue","sourceRoot":"src/layouts/main","sourcesContent":["<!-- =========================================================================================\r\n    File Name: Main.vue\r\n    Description: Main layout\r\n    ----------------------------------------------------------------------------------------\r\n    Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\r\n    Author: Pixinvent\r\n    Author URL: http://www.themeforest.net/user/pixinvent\r\n========================================================================================== -->\r\n\r\n<template>\r\n    <div class=\"layout--main\" :class=\"[\r\n          layoutTypeClass,\r\n          navbarClasses,\r\n          footerClasses,\r\n          { 'no-scroll': isAppPage },\r\n        ]\">\r\n        <v-idle style=\"display: none\" @idle=\"onidle\" @remind=\"onremind\" :loop=\"false\" :reminders=\"[10, 5]\" :wait=\"5\" :duration=\"3600\" />\r\n        <data-view-sidebar :isSidebarActive=\"addNewDataSidebar\" @closeSidebar=\"toggleDataSidebar\" :data=\"sidebarData\" />\r\n        <InfoEstudiante :isSidebarActive=\"IfinfoEstudiante\" @closeInfoEstudiante=\"toggleDataSidebarEstudiante\" :data=\"sidebarData\" />\r\n        <bloqueo-session :isSidebarActive=\"addNewDataSidebarr\" />\r\n        <v-nav-menu :navMenuItems=\"navMenuItems\" title=\"Prolipa\" parent=\".layout--main\" />\r\n        <div id=\"content-area\" :class=\"[contentAreaClass, { 'show-overlay': bodyOverlay }]\">\r\n            <div id=\"content-overlay\" />\r\n\r\n            <!-- Navbar -->\r\n            <template v-if=\"mainLayoutType === 'horizontal' && windowWidth >= 1200\">\r\n                <the-navbar-horizontal :navbarType=\"navbarType\" :class=\"[\r\n                { 'text-white': isNavbarDark && !isThemeDark },\r\n                { 'text-base': !isNavbarDark && isThemeDark },\r\n              ]\" />\r\n\r\n                <div style=\"height: 62px\" v-if=\"navbarType === 'static'\"></div>\r\n\r\n                <h-nav-menu :class=\"[\r\n                { 'text-white': isNavbarDark && !isThemeDark },\r\n                { 'text-base': !isNavbarDark && isThemeDark },\r\n              ]\" :navMenuItems=\"navMenuItems\" />\r\n            </template>\r\n\r\n            <template v-else>\r\n                <the-navbar-vertical :navbarColor=\"navbarColor\" :class=\"[\r\n                { 'text-white': isNavbarDark && !isThemeDark },\r\n                { 'text-base': !isNavbarDark && isThemeDark },\r\n              ]\" />\r\n            </template>\r\n            <!-- /Navbar -->\r\n\r\n            <div class=\"content-wrapper\">\r\n                <div class=\"router-view\">\r\n                    <div class=\"router-content\">\r\n                        <transition :name=\"routerTransition\">\r\n                            <div v-if=\"$route.meta.breadcrumb || $route.meta.pageTitle\" class=\"router-header flex flex-wrap items-center mb-6\">\r\n                                <div class=\"content-area__heading\" :class=\"{\r\n                        'pr-4 border-0 md:border-r border-solid border-grey-light':\r\n                          $route.meta.breadcrumb,\r\n                      }\">\r\n                                    <h2 class=\"mb-1\">{{ routeTitle }}</h2>\r\n                                </div>\r\n\r\n                                <!-- BREADCRUMB -->\r\n                                <vx-breadcrumb class=\"ml-4 md:block hidden\" v-if=\"$route.meta.breadcrumb\" :route=\"$route\" :isRTL=\"$vs.rtl\" />\r\n\r\n                                <!-- DROPDOWN -->\r\n                                <!-- <vs-dropdown vs-trigger-click class=\"ml-auto md:block hidden cursor-pointer\">\r\n                                    <vs-button radius icon=\"icon-settings\" icon-pack=\"feather\" />\r\n\r\n                                    <vs-dropdown-menu class=\"w-32\">\r\n                                        <vs-dropdown-item>\r\n                                            <div @click=\"$router.push('/pages/profile').catch(() => {})\" class=\"flex items-center\">\r\n                                                <feather-icon icon=\"UserIcon\" class=\"inline-block mr-2\" svgClasses=\"w-4 h-4\" />\r\n                                                <span>Profile</span>\r\n                                            </div>\r\n                                        </vs-dropdown-item>\r\n                                        <vs-dropdown-item>\r\n                                            <div @click=\"$router.push('/apps/todo').catch(() => {})\" class=\"flex items-center\">\r\n                                                <feather-icon icon=\"CheckSquareIcon\" class=\"inline-block mr-2\" svgClasses=\"w-4 h-4\" />\r\n                                                <span>Tasks</span>\r\n                                            </div>\r\n                                        </vs-dropdown-item>\r\n                                        <vs-dropdown-item>\r\n                                            <div @click=\"$router.push('/apps/email').catch(() => {})\" class=\"flex items-center\">\r\n                                                <feather-icon icon=\"MailIcon\" class=\"inline-block mr-2\" svgClasses=\"w-4 h-4\" />\r\n                                                <span>Inbox</span>\r\n                                            </div>\r\n                                        </vs-dropdown-item>\r\n                                    </vs-dropdown-menu>\r\n\r\n                                </vs-dropdown> -->\r\n                            </div>\r\n                        </transition>\r\n\r\n                        <div class=\"content-area__content\">\r\n                            <back-to-top bottom=\"5%\" :right=\"$vs.rtl ? 'calc(100% - 2.2rem - 38px)' : '30px'\" visibleoffset=\"500\" v-if=\"!hideScrollToTop\">\r\n                                <vs-button icon-pack=\"feather\" icon=\"icon-arrow-up\" class=\"shadow-lg btn-back-to-top\" />\r\n                            </back-to-top>\r\n\r\n                            <transition :name=\"routerTransition\" mode=\"out-in\">\r\n                                <router-view @changeRouteTitle=\"changeRouteTitle\" @setAppClasses=\"\r\n                        (classesStr) => $emit('setAppClasses', classesStr)\r\n                      \" />\r\n                            </transition>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <the-footer />\r\n        </div>\r\n    </div>\r\n    </template>\r\n\r\n    <script>\r\n    import Vue from \"vue\";\r\n    import axios from \"axios\";\r\n    import Vidle from \"v-idle\";\r\n    import BackToTop from \"vue-backtotop\";\r\n    import HNavMenu from \"@/layouts/components/horizontal-nav-menu/HorizontalNavMenu.vue\";\r\n    //import navMenuItems from '@/layouts/components/vertical-nav-menu/navMenuItems.js'\r\n    import TheNavbarHorizontal from \"@/layouts/components/navbar/TheNavbarHorizontal.vue\";\r\n    import TheNavbarVertical from \"@/layouts/components/navbar/TheNavbarVertical.vue\";\r\n    import TheFooter from \"@/layouts/components/TheFooter.vue\";\r\n    import themeConfig from \"@/../VirtualConfig.js\";\r\n    import VNavMenu from \"@/layouts/components/vertical-nav-menu/VerticalNavMenu.vue\";\r\n    import DataViewSidebar from \"./bloqueo\";\r\n    import BloqueoSession from \"./session\";\r\n    // import io from \"socket.io-client\";\r\n    import {\r\n        mapState\r\n    } from \"vuex\";\r\n    import InfoEstudiante from \"./infoEstudiante.vue\";\r\n    Vue.use(Vidle);\r\n    Vue.use(axios);\r\n    export default {\r\n        components: {\r\n            BackToTop,\r\n            HNavMenu,\r\n            TheFooter,\r\n            TheNavbarHorizontal,\r\n            TheNavbarVertical,\r\n            VNavMenu,\r\n            DataViewSidebar,\r\n            BloqueoSession,\r\n            InfoEstudiante\r\n        },\r\n        data() {\r\n            return {\r\n                activePrompt: false,\r\n                usuario: [],\r\n                navMenuItems: [],\r\n                footerType: themeConfig.footerType || \"static\",\r\n                hideScrollToTop: themeConfig.hideScrollToTop,\r\n                isNavbarDark: false,\r\n                navbarColor: themeConfig.navbarColor || \"#fff\",\r\n                navbarType: themeConfig.navbarType || \"floating\",\r\n                routerTransition: themeConfig.routerTransition || \"none\",\r\n                routeTitle: this.$route.meta.pageTitle,\r\n                sidebarData: {},\r\n                addNewDataSidebar: false,\r\n                addNewDataSidebarr: false,\r\n                IfinfoEstudiante: false,\r\n                // socket: io(process.env.socket),\r\n            };\r\n        },\r\n        mounted() {\r\n            let me = this;\r\n            if (!localStorage.usuario) {\r\n                if (this.$store.state.auth == true) {\r\n                    console.log(this.auth);\r\n                    this.$router.push(\"/home\");\r\n                } else {\r\n                    this.$router.push(\"/\");\r\n                }\r\n            }\r\n            this.getMenu();\r\n            this.getPeriodo();\r\n            this.getVerInstitucionActiva();\r\n            // if(this.usuario.id_group == 4){\r\n            //     this.validateInformationStudent()\r\n            // }\r\n            if(me.usuario.id_group != 4 && me.usuario.id_group != 6 && me.usuario.id_group != 12 && me.usuario.id_group != 13){\r\n             me.getUserRoot()\r\n            }\r\n        },\r\n        watch: {\r\n            $route() {\r\n                this.routeTitle = this.$route.meta.pageTitle;\r\n            },\r\n            isThemeDark(val) {\r\n                const color = this.navbarColor === \"#046AE7\" && val ? \"#10163a\" : \"#046AE7\";\r\n                this.updateNavbarColor(color);\r\n            },\r\n            \"$store.state.mainLayoutType\"(val) {\r\n                this.setNavMenuVisibility(val);\r\n            },\r\n        },\r\n        computed: {\r\n            ...mapState([\"auth\",'userRoot','susuario']),\r\n            bodyOverlay() {\r\n                return this.$store.state.bodyOverlay;\r\n            },\r\n            contentAreaClass() {\r\n                if (this.mainLayoutType === \"vertical\") {\r\n                    if (this.verticalNavMenuWidth === \"default\")\r\n                        return \"content-area-reduced\";\r\n                    else if (this.verticalNavMenuWidth === \"reduced\")\r\n                        return \"content-area-lg\";\r\n                    else return \"content-area-full\";\r\n                } else return \"content-area-full\";\r\n            },\r\n            footerClasses() {\r\n                return {\r\n                    \"footer-hidden\": this.footerType === \"hidden\",\r\n                    \"footer-sticky\": this.footerType === \"sticky\",\r\n                    \"footer-static\": this.footerType === \"static\",\r\n                };\r\n            },\r\n            isAppPage() {\r\n                return this.$route.meta.no_scroll;\r\n            },\r\n            isThemeDark() {\r\n                return this.$store.state.theme === \"dark\";\r\n            },\r\n            layoutTypeClass() {\r\n                return `main-${this.mainLayoutType}`;\r\n            },\r\n            mainLayoutType() {\r\n                return this.$store.state.mainLayoutType;\r\n            },\r\n            navbarClasses() {\r\n                return {\r\n                    \"navbar-hidden\": this.navbarType === \"hidden\",\r\n                    \"navbar-sticky\": this.navbarType === \"sticky\",\r\n                    \"navbar-static\": this.navbarType === \"static\",\r\n                    \"navbar-floating\": this.navbarType === \"floating\",\r\n                };\r\n            },\r\n            verticalNavMenuWidth() {\r\n                return this.$store.state.verticalNavMenuWidth;\r\n            },\r\n            windowWidth() {\r\n                return this.$store.state.windowWidth;\r\n            },\r\n        },\r\n        methods: {\r\n            getUserRoot() {\r\n                let me = this;\r\n                this.$store.dispatch('getUserInfo')\r\n                this.$http.get(this.$server_url + 'permisos/' + this.usuario.idusuario)\r\n                    .then((result) => {\r\n                        //root\r\n                        let preRoot = false\r\n                        if(result.data.length > 0){ preRoot = true; this.$store.dispatch('setRoot',true) }\r\n                        else{ preRoot = false; this.$store.dispatch('setRoot',false) }\r\n                        //grupo facturador\r\n                        if(this.usuario.id_group == 23 || this.usuario.id_group == 22 || preRoot){ this.$store.dispatch('setGroupFacturador',true) }\r\n                        //asesor\r\n                        if(this.usuario.id_group == 11 ) { this.$store.dispatch('setGroup',{ \"grupo\":11,\"permiso\":true }) }\r\n                        //grupo Bodega\r\n                        if(this.usuario.id_group == 17 || this.usuario.id_group == 27 || preRoot){ this.$store.dispatch('setGrupoBodega',true) }\r\n\r\n                    })\r\n                    .catch((err) => {\r\n                        console.log(err)\r\n                    })\r\n                },\r\n            onidle() {\r\n                // alert(\"Se ha cerrado la sesiÃ³n\");\r\n                this.addNewDataSidebarr = true\r\n\r\n            },\r\n            onremind(hora) {\r\n                // Alerta segundos restantes hasta las 00:00\r\n                //   alert(hora);\r\n            },\r\n            addNewData() {\r\n                this.sidebarData = {};\r\n                this.toggleDataSidebar(true);\r\n            },\r\n            toggleDataSidebar(val = false) {\r\n                this.addNewDataSidebar = val;\r\n            },\r\n            toggleDataSidebarEstudiante(val = false) {\r\n                this.IfinfoEstudiante = val;\r\n            },\r\n            getMenu() {\r\n                let me = this;\r\n\r\n                if (me.usuario.idusuario == null) {\r\n                    return false;\r\n                }\r\n                me.$vs.loading();\r\n                this.$http\r\n                    .get(this.$server_url + \"menu?idgrupo=\" + me.usuario.id_group)\r\n                    .then(function (response) {\r\n                        me.$vs.loading.close();\r\n                        me.navMenuItems = response.data;\r\n                        // console.log(me.navMenuItems);\r\n                    })\r\n                    .catch(function (error) {\r\n                        me.$vs.loading.close();\r\n                    });\r\n            },\r\n            changeRouteTitle(title) {\r\n                this.routeTitle = title;\r\n            },\r\n            updateNavbarColor(val) {\r\n                this.navbarColor = val;\r\n                if (val === \"#fff\") this.isNavbarDark = false;\r\n                else this.isNavbarDark = true;\r\n            },\r\n            setNavMenuVisibility(layoutType) {\r\n                if (\r\n                    (layoutType === \"horizontal\" && this.windowWidth >= 1200) ||\r\n                    (layoutType === \"vertical\" && this.windowWidth < 1200)\r\n                ) {\r\n                    this.$store.commit(\"TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE\", false);\r\n                    this.$store.dispatch(\"updateVerticalNavMenuWidth\", \"no-nav-menu\");\r\n                } else {\r\n                    this.$store.commit(\"TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE\", true);\r\n                }\r\n            },\r\n            getPeriodo() {\r\n                let me = this;\r\n                this.$http\r\n                    .get(\r\n                        this.$server_url +\r\n                        \"periodoInstitucion?idInstitucion=\" +\r\n                        me.usuario.institucion_idInstitucion\r\n                    )\r\n                    .then(function (response) {\r\n                        console.log(response.data);\r\n                        if (response.data == 1) {\r\n                            me.addNewDataSidebar = false;\r\n                        } else {\r\n                            me.addNewDataSidebar = true;\r\n                            localStorage.removeItem(\"tk\");\r\n                        }\r\n                    })\r\n                    .catch(function (error) {});\r\n            },\r\n            getVerInstitucionActiva() {\r\n                let me = this;\r\n                this.$http\r\n                    .get(\r\n                        this.$server_url +\r\n                        \"institucionActiva?idInstitucion=\" +\r\n                        me.usuario.institucion_idInstitucion\r\n                    )\r\n                    .then(function (response) {\r\n                        console.log(response.data[0].estado);\r\n                        if (response.data[0].estado == 1) {\r\n                            me.addNewDataSidebar = false;\r\n                        } else {\r\n                            me.addNewDataSidebar = true;\r\n                            localStorage.removeItem(\"tk\");\r\n                        }\r\n                    })\r\n                    .catch(function (error) {});\r\n            },\r\n\r\n            //metodo para validar datos del estudiante\r\n            validateInformationStudent() {\r\n                let me = this;\r\n                let institucion = me.usuario.institucion_idInstitucion\r\n                let estudiante = me.usuario.idusuario\r\n                this.$http.get(this.$server_url + 'informationStudent?institucion_id=' + institucion + '&idusuario=' + estudiante)\r\n                    .then(function (res) {\r\n                        if (res.data.status == 1) {\r\n                            me.IfinfoEstudiante = false\r\n                        } else {\r\n                            me.IfinfoEstudiante = true\r\n                            me.$vs.notify({\r\n                                text: res.data.message,\r\n                                color: 'success',\r\n                                iconPack: 'feather',\r\n                                icon: 'icon-check'\r\n                            })\r\n                            return\r\n                        }\r\n\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(error + ' error');\r\n                    })\r\n            },\r\n            saveHistoricoVisitas() {\r\n                let me = this;\r\n                let formData = new FormData();\r\n                formData.append('idusuario', me.usuario.idusuario)\r\n                formData.append('institucion_id', me.usuario.institucion_idInstitucion)\r\n                formData.append('id_group', me.usuario.id_group)\r\n                formData.append('recurso', '15')\r\n                formData.append('datos', 'Ingreso al sistema')\r\n                this.$http.post(this.$server_url + 'historico', formData)\r\n                    .then(res => {\r\n                        console.log(res.data.message)\r\n                    })\r\n                    .catch(function (e) {\r\n                        console.log(e)\r\n                    })\r\n            },\r\n        },\r\n        created() {\r\n            let me = this;\r\n            const color =\r\n                this.navbarColor === \"#fff\" && this.isThemeDark ?\r\n                \"#10163a\" :\r\n                this.navbarColor;\r\n            this.updateNavbarColor(color);\r\n            this.setNavMenuVisibility(this.$store.state.mainLayoutType);\r\n            try {\r\n                this.usuario = JSON.parse(localStorage.getItem(\"usuario\"));\r\n                // console.log(this.usuario);\r\n                if (this.usuario == null || this.usuario.length != 1) {\r\n                    localStorage.removeItem(\"tk\");\r\n                    localStorage.removeItem(\"token\");\r\n                }\r\n            } catch (error) {\r\n                localStorage.removeItem(\"tk\");\r\n                localStorage.removeItem(\"token\");\r\n            }\r\n            var hoy = new Date();\r\n            var fecha =\r\n                hoy.getDate() + \"-\" + (hoy.getMonth() + 1) + \"-\" + hoy.getFullYear();\r\n            var hora = hoy.getHours() + \":\" + hoy.getMinutes() + \":\" + hoy.getSeconds();\r\n            if (this.usuario.id_group == 6) {\r\n                var grupo = \"Docente\";\r\n            }\r\n            if (this.usuario.id_group == 4) {\r\n                var grupo = \"Estudiante\";\r\n            }\r\n            if (this.usuario.id_group == 1) {\r\n                var grupo = \"Administrador\";\r\n            }\r\n            var usr = new Object();\r\n            usr.id = this.usuario.idusuario;\r\n            usr.nombres = this.usuario.nombres;\r\n            usr.idusuario = this.usuario.idusuario;\r\n            usr.nombres = this.usuario.nombres;\r\n            usr.apellidos = this.usuario.apellidos;\r\n            usr.email = this.usuario.email;\r\n            usr.grupo = this.usuario.id_group;\r\n            usr.Institucion = this.usuario.nombreInstitucion;\r\n            usr.token = localStorage.tk;\r\n            usr.fecha = fecha + \" \" + hora;\r\n            // try {\r\n            //     this.socket.on(this.usuario.idusuario, (data) => {\r\n            //         this.addNewDataSidebarr = true\r\n            //     })\r\n            //     this.socket.emit(\"sessionclose\", usr);\r\n            // } catch (error) {\r\n            //     console.log(error)\r\n            // }\r\n\r\n            //SOCKET DE NOTIFICACIONES MENSAJES PEDIDOS\r\n            // try {\r\n            //     this.socket.on('enviar', (data) => {\r\n            //         console.log(\"nuevo mensaje\",data)\r\n            //         if(data.tipo == 'pedidos_chat'){\r\n            //              //si el mensaje envia un asesor\r\n            //             if(data.grupo == 11){\r\n            //                 if(me.usuario.id_group == 22 || me.usuario.id_group == 23){\r\n            //                 me.$vs.notify({\r\n            //                 text:'Tienes un nuevo mensaje del pedido',\r\n            //                 color:'success',\r\n            //                 iconPack: 'feather',\r\n            //                 icon:'icon-check',\r\n            //                 time:5000,\r\n            //                 })\r\n            //                 return\r\n            //                 }\r\n            //             }\r\n            //             if(data.grupo == 22 || data.grupo == 23){\r\n            //                 if(me.usuario.id_group == 11 && data.id_asesor == me.usuario.idusuario){\r\n            //                 me.$vs.notify({\r\n            //                     text:'Tienes un nuevo mensaje del pedido',\r\n            //                     color:'success',\r\n            //                     iconPack: 'feather',\r\n            //                     icon:'icon-check',\r\n            //                     time:5000,\r\n            //                     })\r\n            //                     return\r\n            //                 }\r\n            //             }\r\n            //         }\r\n            //     })\r\n            // } catch (error) {\r\n            //     console.log(error)\r\n            // }\r\n\r\n            // axios\r\n            //     .post(\"https://foro.prolipadigital.com.ec/estudiantes\", {\r\n            //         idusuario: this.usuario.idusuario,\r\n            //         cedula: this.usuario.cedula,\r\n            //         nombres: this.usuario.nombres,\r\n            //         apellidos: this.usuario.apellidos,\r\n            //         email: this.usuario.email,\r\n            //         idgrupo: this.usuario.id_group,\r\n            //         token: localStorage.tk,\r\n            //         fecha: fecha,\r\n            //         hora: hora,\r\n            //     })\r\n            //     .then(function (response) {\r\n            //         console.log(me.response);\r\n            //     })\r\n            //     .catch(function (error) {});\r\n            this.saveHistoricoVisitas();\r\n        },\r\n    };\r\n    </script>\r\n"]}]}