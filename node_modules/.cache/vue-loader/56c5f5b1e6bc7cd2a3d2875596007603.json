{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\pedidos\\facturacion_api\\producto.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\pedidos\\facturacion_api\\producto.vue","mtime":1712682816322},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nimport Vue from 'vue'\r\nimport axios from 'axios'\r\nimport vSelect from 'vue-select';\r\nexport default {\r\n    data() {\r\n        return{\r\n            options1: [\r\n                { text: '--Seleccione--', value: null },\r\n                { text: 'Si', value: true },\r\n                { text: 'No', value: false },\r\n            ],\r\n            Productos: [],\r\n            popupActivoGuardar: false,\r\n            popupActivoEditar: false,\r\n            tabProducto: {\r\n                proCodigo: '',\r\n                gruProCodigo: '',\r\n                proNombre: '',\r\n                proDescripcion: '',\r\n                proIva: '',\r\n                proValor: '',\r\n                proDescuento: '',\r\n                proStock: '',\r\n                proCosto: '',\r\n                proPeso: ''\r\n            },\r\n            proCodigo: 0,\r\n            Grupos: [],\r\n            busquedaxcodigo: \"\",\r\n            valorBusqueda:\"0\",\r\n        }\r\n    },\r\n    components: {\r\n        'v-select': vSelect,\r\n    },\r\n    mounted() {\r\n        this.getProducto();\r\n    },\r\n    methods: {\r\n        validarDescuento() {\r\n            const descuento = this.tabProducto.proDescuento;\r\n            if (/^\\d/.test(descuento)) { // si comienza con un dígito\r\n             if (!/^\\d{0,1}(\\.\\d{1,5})?$/.test(descuento)) {\r\n                this.tabProducto.proDescuento = '';\r\n                }\r\n            } else if (/^[,.e]/.test(descuento)) { // si comienza con una coma o un punto\r\n                if (!/^([,.]\\d{1,5})?$/.test(descuento)) {\r\n                this.tabProducto.proDescuento = '';\r\n                }\r\n            } else { // si comienza con cualquier otro caracter\r\n                this.tabProducto.proDescuento = '';\r\n            }\r\n        },\r\n        validarValor() {\r\n            const valor = this.tabProducto.proValor;\r\n            if (/^\\d/.test(valor)) { // si comienza con un dígito\r\n             if (!/^\\d{0,18}(\\.\\d{1,5})?$/.test(valor)) {\r\n                this.tabProducto.proValor = '';\r\n                }\r\n            } else if (/^[,.e]/.test(valor)) { // si comienza con una coma o un punto\r\n                if (!/^([,.]\\d{1,5})?$/.test(valor)) {\r\n                this.tabProducto.proValor = '';\r\n                }\r\n            } else { // si comienza con cualquier otro caracter\r\n                this.tabProducto.proValor = '';\r\n            }\r\n        },\r\n        validarStock() {\r\n            let stock = this.tabProducto.proStock;\r\n            if (!/^\\d+$/.test(stock) || isNaN(stock)) {\r\n                this.tabProducto.proStock = '';\r\n            }\r\n        },\r\n        validarCosto() {\r\n            const costo = this.tabProducto.proCosto;\r\n            if (/^\\d/.test(costo)) { // si comienza con un dígito\r\n             if (!/^\\d{0,18}(\\.\\d{1,5})?$/.test(costo)) {\r\n                this.tabProducto.proCosto = '';\r\n                }\r\n            } else if (/^[,.e]/.test(costo)) { // si comienza con una coma o un punto\r\n                if (!/^([,.]\\d{1,5})?$/.test(costo)) {\r\n                this.tabProducto.proCosto = '';\r\n                }\r\n            } else { // si comienza con cualquier otro caracter\r\n                this.tabProducto.proCosto = '';\r\n            }\r\n        },\r\n        validarPeso() {\r\n            const peso = this.tabProducto.proPeso;\r\n            if (/^\\d/.test(peso)) { // si comienza con un dígito\r\n             if (!/^\\d{0,15}(\\.\\d{1,5})?$/.test(peso)) {\r\n                this.tabProducto.proPeso = '';\r\n                }\r\n            } else if (/^[,.e]/.test(peso)) { // si comienza con una coma o un punto\r\n                if (!/^([,.]\\d{1,5})?$/.test(peso)) {\r\n                this.tabProducto.proPeso = '';\r\n                }\r\n            } else { // si comienza con cualquier otro caracter\r\n                this.tabProducto.proPeso = '';\r\n            }\r\n        },\r\n        getProducto() {\r\n            let me = this;\r\n            this.$http.get(this.$server_url+'Get_Producto')\r\n            //axios.get(this.$apifacturacion_url + 'f_Producto')\r\n            .then(res => {\r\n            //let resultado = res.data.productos.filter(p => p.proCodigo !== 0);\r\n            //this.Productos = resultado;\r\n            this.Grupos = res.data.grupos;\r\n            // console.log(this.Productos);\r\n            // console.log(this.Grupos);\r\n            })\r\n            .catch(err => {\r\n            console.log(err)\r\n            })\r\n        },\r\n        getProductoParametro() {\r\n            let me = this;\r\n            if(me.busquedaxcodigo.length < 2){\r\n                me.$vs.notify({\r\n                text:'Minimo 2 caracteres de busqueda',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n                return false;\r\n            }\r\n            me.$vs.loading()\r\n            //axios.get(this.$apifacturacion_url + 'f_Producto/GetxParametros?busqueda='+me.busqueda+'&razonbusqueda='+me.busquedaxcodigo)\r\n            this.$http.get(this.$server_url+'Get_Productoxbusquedayrazonbusqueda?busqueda='+me.busqueda+'&razonbusqueda='+me.busquedaxcodigo)\r\n            .then(function (res) {\r\n                // me.tmpVenta = res.data;\r\n                // let resultado = res.data.filter(c => c.cliCi !== 0);\r\n                me.Productos = res.data;\r\n                // me.filtroRegion();\r\n                me.$vs.loading.close()\r\n                if(res.data.message){\r\n                    me.$vs.notify({\r\n                    text: res.data.message,\r\n                    color: 'success',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-user'\r\n                    })\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                if (error.response && error.response.status === 404) {\r\n                    me.$vs.notify({\r\n                        text: 'No hay productos para esta búsqueda',\r\n                        color: 'danger',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-x'\r\n                    })\r\n                me.Productos = [];\r\n                me.$vs.loading.close()\r\n                } else {\r\n                    console.log(error + ' error');\r\n                    me.$vs.loading.close();\r\n                }\r\n            })\r\n        },\r\n        // getProducto() {\r\n        // axios.get('https://localhost:7252/api/Vendedor')\r\n        //     .then(res => {\r\n        //     let resultado = res.data.filter(c => c.cliCi !== null && c.cliCi !== '');\r\n        //     this.Vendedores = resultado;\r\n        //     console.log(this.Vendedores);\r\n        //     })\r\n        //     .catch(err => {\r\n        //     console.log(err);\r\n        //     });\r\n        // },\r\n        getEditar(tr) {\r\n        this.popupActivoEditar = true\r\n        this.tabProducto.proCodigo = tr.proCodigo\r\n        this.tabProducto.gruProCodigo = tr.gruProCodigo\r\n        this.tabProducto.proNombre = tr.proNombre\r\n        this.tabProducto.proDescripcion = tr.proDescripcion\r\n        this.tabProducto.proIva = tr.proIva\r\n        this.tabProducto.proValor = tr.proValor\r\n        this.tabProducto.proDescuento = tr.proDescuento\r\n        this.tabProducto.proStock = tr.proStock\r\n        this.tabProducto.proCosto = tr.proCosto\r\n        this.tabProducto.proPeso = tr.proPeso\r\n        // this.$router.push('/prueba/editar/' + this.id);\r\n        // console.log(id);\r\n        // this.$params.id;\r\n        },\r\n        editar() {\r\n        let me = this;\r\n        if (this.tabProducto.proCodigo === '' || this.tabProducto.proCodigo === null) {\r\n                me.$vs.notify({\r\n                    text: 'Escriba el código del Vendedor antes de editar',\r\n                    color: 'danger',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-alert-triangle'\r\n                });\r\n                return;\r\n            }\r\n            if (this.tabProducto.gruProCodigo === '' || this.tabProducto.gruProCodigo === null) {\r\n                me.$vs.notify({\r\n                    text: 'Seleccione un grupo antes de editar',\r\n                    color: 'danger',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-alert-triangle'\r\n                });\r\n                return;\r\n            }\r\n        let datos  = {\r\n                \"proCodigo\": this.tabProducto.proCodigo,\r\n                \"gruProCodigo\": this.tabProducto.gruProCodigo,\r\n                \"proNombre\": this.tabProducto.proNombre,\r\n                \"proDescripcion\": this.tabProducto.proDescripcion,\r\n                \"proIva\": this.tabProducto.proIva,\r\n                \"proValor\": parseFloat(this.tabProducto.proValor),\r\n                \"proDescuento\": parseFloat(this.tabProducto.proDescuento),\r\n                \"proStock\": parseInt(this.tabProducto.proStock),\r\n                \"proCosto\": parseFloat(this.tabProducto.proCosto),\r\n                \"proPeso\": parseFloat(this.tabProducto.proPeso)\r\n            }\r\n        me.$vs.loading()\r\n        //axios.post(this.$apifacturacion_url + 'f_Producto/AggOrUpdateProducto', datos)\r\n        this.$http.post(this.$server_url+'Post_ProductoEditar', datos)\r\n            .then(res => {\r\n                me.$vs.loading.close()\r\n                this.getProductoParametro();\r\n                me.$vs.notify({\r\n                    text: 'Producto editado con exito',\r\n                    color: 'success',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-check'\r\n                })\r\n                this.popupActivoEditar = false;\r\n                this.popupActivoGuardar = false;\r\n                this.popupActivoEliminar = false;\r\n            })\r\n            .catch(error => {\r\n                if (error.response && error.response.status === 500) {\r\n                    me.$vs.notify({\r\n                        text: 'Revise los campos Valor, Descuento que esten en el formato correcto',\r\n                        color: 'danger',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-x'\r\n                    })\r\n                console.log('Cambie el valor del prodescuento a uno válido');\r\n                me.$vs.loading.close()\r\n                } else {\r\n                console.log(error);\r\n                me.$vs.loading.close()\r\n                    me.$vs.notify({\r\n                        text: 'Producto no se pudo editar',\r\n                        color: 'danger',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-x'\r\n                    })\r\n                }\r\n            })\r\n        },\r\n        getCancelar() {\r\n            this.popupActivoEditar = false;\r\n            this.popupActivoGuardar = false;\r\n            this.popupActivoEliminar = false;\r\n        },\r\n    },\r\n    // created(){\r\n    //     let url = \"https://localhost:7252/api/Vendedor\";\r\n    //     axios.get(url).then((response) => this.Vendedores = response.data);\r\n    //     // fetch(\"https://localhost:7252/api/Vendedor/\")\r\n    //     // .then(response => response.json())\r\n    //     // .then((data) => (this.Vendedores = data));\r\n    //     // // .then(data => (this.totalVuePackages = data.total));\r\n    // }\r\n}\r\n",{"version":3,"sources":["producto.vue"],"names":[],"mappings":";AAkfile":"producto.vue","sourceRoot":"src/views/pedidos/facturacion_api","sourcesContent":["<template>\r\n    <vx-card fixed-height=\"true\">\r\n        <vs-row vs-justify=\"flex-start\">\r\n            <vs-col type=\"flex\" vs-justify=\"flex-start\" vs-align=\"flex-start\" class=\"m-2\" vs-w=\"12\">\r\n                <p>Búsqueda por filtros</p>\r\n                <br>\r\n                <vs-card>\r\n                    <div style=\"\">\r\n                        <vs-input class=\"w-full\" @keyup.enter=\"getProductoParametro()\" icon-after=\"true\" label-placeholder=\"icon-after\" style=\"margin:0px 0px 20px 0px;\"  icon=\"search\" placeholder=\"Buscar\" v-model=\"busquedaxcodigo\"/>\r\n                    </div>\r\n                    <div style=\"\">\r\n                        <ul class=\"leftx\" style=\"display:flex;margin:0px 0px 0px 20px;\">\r\n                            <li class=\"modelx\">\r\n                            </li>\r\n                            <li style=\"margin:10px 20px 0px 0px;\">\r\n                                <vs-radio vs-name=\"radios1\" vs-value=\"0\" v-model=\"valorBusqueda\" @input=\"busqueda='codigopro'\">Iniciales</vs-radio>\r\n                            </li>\r\n                            <li style=\"margin:10px 10px 0px 0px;\">\r\n                                <vs-radio vs-name=\"radios2\" vs-value=\"1\" v-model=\"valorBusqueda\"  @input=\"busqueda='nombres'\">Nombres</vs-radio>\r\n                            </li>\r\n                            <li>\r\n                                <vs-button color=\"warning\" type=\"filled\" style=\"margin-left:10px;\" @click=\"getProductoParametro();\" icon=\"search\"></vs-button>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </vs-card>\r\n            </vs-col>\r\n        </vs-row>\r\n        <!-- <vs-button type=\"border\" color=\"success\" class=\"mr-2\" @click=\"getNuevo()\">Agregar Nuevo Producto</vs-button> -->\r\n        <vs-table max-items=\"10\" pagination search :data=\"Productos\">\r\n            <template slot=\"header\">\r\n                        <vs-chip  color=\"primary\">Cantidad: <b> {{ Productos.length }}</b></vs-chip>\r\n                    </template>\r\n            <!-- {{cliCi}} -->\r\n            <template slot=\"thead\">\r\n                <vs-th>\r\n                    Id\r\n                </vs-th>\r\n                <vs-th colspan=\"2\">\r\n                    Información Producto\r\n                </vs-th>\r\n                <vs-th>\r\n                    Acciones\r\n                </vs-th>\r\n            </template>\r\n            <template slot-scope=\"{data}\">\r\n                <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                    <vs-td :data=\"data[indextr].proCodigo\">\r\n                        {{ data[indextr].proCodigo }}\r\n                    </vs-td>\r\n                    <vs-td>\r\n                        <small><b>Grupo:</b> {{tr.gruProCodigoNavigation.gruProNombre}} </small><br>\r\n                        <small><b>Nombres:</b> {{tr.proNombre}}</small><br>\r\n                        <small><b>Descripción:</b> {{tr.proDescripcion}}</small><br>\r\n                        <small><b>Iva:</b> \r\n                            <template v-if=\"data[indextr].proIva == true\">\r\n                            Si\r\n                            </template>\r\n                            <template v-else-if=\"data[indextr].proIva == false\">\r\n                                No\r\n                            </template>\r\n                            <template v-else-if=\"data[indextr].proIva == null\">\r\n                                Vacio\r\n                            </template>    \r\n                        </small><br>\r\n                        <small><b>Valor:</b> {{tr.proValor}}</small><br>\r\n                    </vs-td>\r\n                    <vs-td>\r\n                        <small><b>Descuento:</b> {{tr.proDescuento}}</small><br>\r\n                        <small><b>Stock:</b> {{tr.proStock}}</small><br>\r\n                        <small><b>Costo:</b> {{tr.proCosto}}</small><br>\r\n                        <small><b>Peso:</b> {{tr.proPeso}}</small><br>\r\n                    </vs-td>\r\n                    <vs-td :data=\"data[indextr].proCodigo\">\r\n                        <vs-button type=\"border\" size=\"small\" icon-pack=\"feather\" icon=\"icon-edit\" class=\"mr-2 inline\" color=\"success\" @click=\"getEditar(tr)\"></vs-button>\r\n                        <!-- <vs-button type=\"border\" size=\"small\" icon-pack=\"feather\" icon=\"icon-trash\" class=\"mr-2 inline\" color=\"danger\" @click=\"getPreguntaEliminar(tr)\"></vs-button> -->\r\n                    </vs-td>\r\n                </vs-tr>\r\n            </template>\r\n        </vs-table>\r\n        <vs-popup class=\"editar\" :title=\"`Edición producto: ${tabProducto.proCodigo}`\" :active.sync=\"popupActivoEditar\">\r\n            <vs-row>\r\n                {{ tabProducto }}\r\n                <vs-col vs-align=\"center\" vs-lg=\"12\" vs-sm=\"12\" vs-xs=\"12\" style=\"text-align: center;\"><b>Información Vendedor</b></vs-col>\r\n                <!-- <vs-col vs-justify=\"center\" vs-align=\"center\" vs-lg=\"6\" vs-sm=\"6\" vs-xs=\"6\">\r\n                    <vs-row vs-type=\"flex\" vs-justify=\"center\" vs-w=\"12\">\r\n                        <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"10\">\r\n                            <vs-input label=\"Cédula *\" placeholder=\"Cédula\" class=\"w-full\" icon=\"mode_edit\" v-model=\"tabProducto.venDCodigo\" />\r\n                        </vs-col>\r\n                    </vs-row>\r\n                </vs-col> -->\r\n                <vs-col vs-justify=\"center\" vs-align=\"center\" vs-lg=\"6\" vs-sm=\"6\" vs-xs=\"6\">\r\n                    <vs-row vs-type=\"flex\" vs-justify=\"center\" vs-w=\"12\">\r\n                        <vs-col vs-justify=\"center\" vs-align=\"center\" vs-w=\"10\">\r\n                            <!-- {{tabusuario.pv_tipo_usuario}}  //Para ver que propiedad quiero guardar -->\r\n                            <font style=\"font-size: 11.5px\">&nbsp;Grupo</font><br>\r\n                            <v-select :options=\"Grupos\" :reduce=\"Grupos => Grupos.gruProCodigo\" label=\"gruProNombre\" class=\"w-full h-100\" placeholder=\"--Seleccione--\" v-model=\"tabProducto.gruProCodigo\" />\r\n                        </vs-col>\r\n                    </vs-row>\r\n                </vs-col>\r\n                <vs-col vs-justify=\"center\" vs-align=\"center\" vs-lg=\"6\" vs-sm=\"6\" vs-xs=\"6\">\r\n                    <vs-row vs-type=\"flex\" vs-justify=\"center\" vs-w=\"12\">\r\n                        <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"10\">\r\n                            <!-- {{tabusuario.pv_tipo_usuario}}  //Para ver que propiedad quiero guardar -->\r\n                            <vs-input label=\"Nombre \" placeholder=\"Nombre\" class=\"w-full\" icon=\"mode_edit\" v-model=\"tabProducto.proNombre\" />\r\n                        </vs-col>\r\n                    </vs-row>\r\n                </vs-col>\r\n                <vs-col vs-justify=\"center\" vs-align=\"center\" vs-lg=\"6\" vs-sm=\"6\" vs-xs=\"6\">\r\n                    <vs-row vs-type=\"flex\" vs-justify=\"center\" vs-w=\"12\">\r\n                        <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"10\">\r\n                            <!-- {{tabusuario.pv_tipo_usuario}}  //Para ver que propiedad quiero guardar -->\r\n                            <vs-input label=\"Descripción \" placeholder=\"Descripción\" class=\"w-full\" icon=\"mode_edit\" v-model=\"tabProducto.proDescripcion\" />\r\n                        </vs-col>\r\n                    </vs-row>\r\n                </vs-col>\r\n                <vs-col vs-justify=\"center\" vs-align=\"center\" vs-lg=\"6\" vs-sm=\"6\" vs-xs=\"6\">\r\n                    <vs-row vs-type=\"flex\" vs-justify=\"center\" vs-w=\"12\">\r\n                        <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"10\">\r\n                            <!-- {{tabusuario.pv_tipo_usuario}}  //Para ver que propiedad quiero guardar -->\r\n                            <!-- <vs-input label=\"Iva *\" type=\"number\" placeholder=\"Iva\" class=\"w-full\" icon=\"mode_edit\" v-model=\"tabProducto.proIva\" /> -->\r\n                            <vs-select label=\"Iva\" class=\"w-full\" v-model=\"tabProducto.proIva\">\r\n                                <vs-select-item :key=\"index\" :value=\"item.value\" :text=\"item.text\" v-for=\"item,index in options1\" />\r\n                            </vs-select>\r\n                        </vs-col>\r\n                    </vs-row>\r\n                </vs-col>\r\n                <vs-col vs-justify=\"center\" vs-align=\"center\" vs-lg=\"6\" vs-sm=\"6\" vs-xs=\"6\">\r\n                    <vs-row vs-type=\"flex\" vs-justify=\"center\" vs-w=\"12\">\r\n                        <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"10\">\r\n                            <!-- {{tabusuario.pv_tipo_usuario}}  //Para ver que propiedad quiero guardar -->\r\n                            <vs-input label=\"Valor \" type=\"number\" placeholder=\"Valor\" class=\"w-full\" icon=\"mode_edit\" v-model=\"tabProducto.proValor\" @keypress=\"validarValor\" />\r\n                        </vs-col>\r\n                    </vs-row>\r\n                </vs-col>\r\n                <vs-col vs-justify=\"center\" vs-align=\"center\" vs-lg=\"6\" vs-sm=\"6\" vs-xs=\"6\">\r\n                    <vs-row vs-type=\"flex\" vs-justify=\"center\" vs-w=\"12\">\r\n                        <vs-col vs-justify=\"center\" vs-align=\"center\" vs-w=\"10\">\r\n                            <!-- {{tabusuario.pv_tipo_usuario}}  //Para ver que propiedad quiero guardar -->\r\n                            <font style=\"font-size: 11.5px; display: inline-flex;\">&nbsp;Descuento * &emsp; Formato: 0.00</font><br>\r\n                            <vs-input type=\"number\" id=\"pro-descuento-input\" placeholder=\"Descuento\" class=\"w-full\" icon=\"mode_edit\" v-model=\"tabProducto.proDescuento\" @keypress=\"validarDescuento\" />\r\n                        </vs-col>\r\n                    </vs-row>\r\n                </vs-col>\r\n                <vs-col vs-justify=\"center\" vs-align=\"center\" vs-lg=\"6\" vs-sm=\"6\" vs-xs=\"6\">\r\n                    <vs-row vs-type=\"flex\" vs-justify=\"center\" vs-w=\"12\">\r\n                        <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"10\">\r\n                            <!-- {{tabusuario.pv_tipo_usuario}}  //Para ver que propiedad quiero guardar -->\r\n                            <vs-input label=\"Stock \" type=\"number\" placeholder=\"Stock\" class=\"w-full\" icon=\"mode_edit\" v-model=\"tabProducto.proStock\" @keypress=\"validarStock\" />\r\n                        </vs-col>\r\n                    </vs-row>\r\n                </vs-col>\r\n                <vs-col vs-justify=\"center\" vs-align=\"center\" vs-lg=\"6\" vs-sm=\"6\" vs-xs=\"6\">\r\n                    <vs-row vs-type=\"flex\" vs-justify=\"center\" vs-w=\"12\">\r\n                        <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"10\">\r\n                            <!-- {{tabusuario.pv_tipo_usuario}}  //Para ver que propiedad quiero guardar -->\r\n                            <vs-input label=\"Costo \" type=\"number\" placeholder=\"Costo\" class=\"w-full\" icon=\"mode_edit\" v-model=\"tabProducto.proCosto\" @keypress=\"validarCosto\" />\r\n                        </vs-col>\r\n                    </vs-row>\r\n                </vs-col>\r\n                <vs-col vs-justify=\"center\" vs-align=\"center\" vs-lg=\"12\" vs-sm=\"12\" vs-xs=\"12\">\r\n                    <vs-row vs-type=\"flex\" vs-justify=\"center\" vs-w=\"12\">\r\n                        <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"6\">\r\n                            <!-- {{tabusuario.pv_tipo_usuario}}  //Para ver que propiedad quiero guardar -->\r\n                            <vs-input label=\"Peso \" type=\"number\" placeholder=\"Peso\" class=\"w-full\" icon=\"mode_edit\" v-model=\"tabProducto.proPeso\" @keypress=\"validarPeso\"/>\r\n                        </vs-col>\r\n                    </vs-row>\r\n                </vs-col>\r\n            </vs-row>\r\n            <br><br>\r\n            <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\" class=\"mt-2\">\r\n                <vs-button @click=\"editar()\" type=\"relief\">Editar</vs-button>&emsp;\r\n                <vs-button @click=\"getCancelar()\" color=\"danger\" type=\"relief\">Cancelar</vs-button>\r\n            </vs-col>\r\n        </vs-popup>\r\n    </vx-card>\r\n    </template>\r\n<script>\r\nimport Vue from 'vue'\r\nimport axios from 'axios'\r\nimport vSelect from 'vue-select';\r\nexport default {\r\n    data() {\r\n        return{\r\n            options1: [\r\n                { text: '--Seleccione--', value: null },\r\n                { text: 'Si', value: true },\r\n                { text: 'No', value: false },\r\n            ],\r\n            Productos: [],\r\n            popupActivoGuardar: false,\r\n            popupActivoEditar: false,\r\n            tabProducto: {\r\n                proCodigo: '',\r\n                gruProCodigo: '',\r\n                proNombre: '',\r\n                proDescripcion: '',\r\n                proIva: '',\r\n                proValor: '',\r\n                proDescuento: '',\r\n                proStock: '',\r\n                proCosto: '',\r\n                proPeso: ''\r\n            },\r\n            proCodigo: 0,\r\n            Grupos: [],\r\n            busquedaxcodigo: \"\",\r\n            valorBusqueda:\"0\",\r\n        }\r\n    },\r\n    components: {\r\n        'v-select': vSelect,\r\n    },\r\n    mounted() {\r\n        this.getProducto();\r\n    },\r\n    methods: {\r\n        validarDescuento() {\r\n            const descuento = this.tabProducto.proDescuento;\r\n            if (/^\\d/.test(descuento)) { // si comienza con un dígito\r\n             if (!/^\\d{0,1}(\\.\\d{1,5})?$/.test(descuento)) {\r\n                this.tabProducto.proDescuento = '';\r\n                }\r\n            } else if (/^[,.e]/.test(descuento)) { // si comienza con una coma o un punto\r\n                if (!/^([,.]\\d{1,5})?$/.test(descuento)) {\r\n                this.tabProducto.proDescuento = '';\r\n                }\r\n            } else { // si comienza con cualquier otro caracter\r\n                this.tabProducto.proDescuento = '';\r\n            }\r\n        },\r\n        validarValor() {\r\n            const valor = this.tabProducto.proValor;\r\n            if (/^\\d/.test(valor)) { // si comienza con un dígito\r\n             if (!/^\\d{0,18}(\\.\\d{1,5})?$/.test(valor)) {\r\n                this.tabProducto.proValor = '';\r\n                }\r\n            } else if (/^[,.e]/.test(valor)) { // si comienza con una coma o un punto\r\n                if (!/^([,.]\\d{1,5})?$/.test(valor)) {\r\n                this.tabProducto.proValor = '';\r\n                }\r\n            } else { // si comienza con cualquier otro caracter\r\n                this.tabProducto.proValor = '';\r\n            }\r\n        },\r\n        validarStock() {\r\n            let stock = this.tabProducto.proStock;\r\n            if (!/^\\d+$/.test(stock) || isNaN(stock)) {\r\n                this.tabProducto.proStock = '';\r\n            }\r\n        },\r\n        validarCosto() {\r\n            const costo = this.tabProducto.proCosto;\r\n            if (/^\\d/.test(costo)) { // si comienza con un dígito\r\n             if (!/^\\d{0,18}(\\.\\d{1,5})?$/.test(costo)) {\r\n                this.tabProducto.proCosto = '';\r\n                }\r\n            } else if (/^[,.e]/.test(costo)) { // si comienza con una coma o un punto\r\n                if (!/^([,.]\\d{1,5})?$/.test(costo)) {\r\n                this.tabProducto.proCosto = '';\r\n                }\r\n            } else { // si comienza con cualquier otro caracter\r\n                this.tabProducto.proCosto = '';\r\n            }\r\n        },\r\n        validarPeso() {\r\n            const peso = this.tabProducto.proPeso;\r\n            if (/^\\d/.test(peso)) { // si comienza con un dígito\r\n             if (!/^\\d{0,15}(\\.\\d{1,5})?$/.test(peso)) {\r\n                this.tabProducto.proPeso = '';\r\n                }\r\n            } else if (/^[,.e]/.test(peso)) { // si comienza con una coma o un punto\r\n                if (!/^([,.]\\d{1,5})?$/.test(peso)) {\r\n                this.tabProducto.proPeso = '';\r\n                }\r\n            } else { // si comienza con cualquier otro caracter\r\n                this.tabProducto.proPeso = '';\r\n            }\r\n        },\r\n        getProducto() {\r\n            let me = this;\r\n            this.$http.get(this.$server_url+'Get_Producto')\r\n            //axios.get(this.$apifacturacion_url + 'f_Producto')\r\n            .then(res => {\r\n            //let resultado = res.data.productos.filter(p => p.proCodigo !== 0);\r\n            //this.Productos = resultado;\r\n            this.Grupos = res.data.grupos;\r\n            // console.log(this.Productos);\r\n            // console.log(this.Grupos);\r\n            })\r\n            .catch(err => {\r\n            console.log(err)\r\n            })\r\n        },\r\n        getProductoParametro() {\r\n            let me = this;\r\n            if(me.busquedaxcodigo.length < 2){\r\n                me.$vs.notify({\r\n                text:'Minimo 2 caracteres de busqueda',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n                return false;\r\n            }\r\n            me.$vs.loading()\r\n            //axios.get(this.$apifacturacion_url + 'f_Producto/GetxParametros?busqueda='+me.busqueda+'&razonbusqueda='+me.busquedaxcodigo)\r\n            this.$http.get(this.$server_url+'Get_Productoxbusquedayrazonbusqueda?busqueda='+me.busqueda+'&razonbusqueda='+me.busquedaxcodigo)\r\n            .then(function (res) {\r\n                // me.tmpVenta = res.data;\r\n                // let resultado = res.data.filter(c => c.cliCi !== 0);\r\n                me.Productos = res.data;\r\n                // me.filtroRegion();\r\n                me.$vs.loading.close()\r\n                if(res.data.message){\r\n                    me.$vs.notify({\r\n                    text: res.data.message,\r\n                    color: 'success',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-user'\r\n                    })\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                if (error.response && error.response.status === 404) {\r\n                    me.$vs.notify({\r\n                        text: 'No hay productos para esta búsqueda',\r\n                        color: 'danger',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-x'\r\n                    })\r\n                me.Productos = [];\r\n                me.$vs.loading.close()\r\n                } else {\r\n                    console.log(error + ' error');\r\n                    me.$vs.loading.close();\r\n                }\r\n            })\r\n        },\r\n        // getProducto() {\r\n        // axios.get('https://localhost:7252/api/Vendedor')\r\n        //     .then(res => {\r\n        //     let resultado = res.data.filter(c => c.cliCi !== null && c.cliCi !== '');\r\n        //     this.Vendedores = resultado;\r\n        //     console.log(this.Vendedores);\r\n        //     })\r\n        //     .catch(err => {\r\n        //     console.log(err);\r\n        //     });\r\n        // },\r\n        getEditar(tr) {\r\n        this.popupActivoEditar = true\r\n        this.tabProducto.proCodigo = tr.proCodigo\r\n        this.tabProducto.gruProCodigo = tr.gruProCodigo\r\n        this.tabProducto.proNombre = tr.proNombre\r\n        this.tabProducto.proDescripcion = tr.proDescripcion\r\n        this.tabProducto.proIva = tr.proIva\r\n        this.tabProducto.proValor = tr.proValor\r\n        this.tabProducto.proDescuento = tr.proDescuento\r\n        this.tabProducto.proStock = tr.proStock\r\n        this.tabProducto.proCosto = tr.proCosto\r\n        this.tabProducto.proPeso = tr.proPeso\r\n        // this.$router.push('/prueba/editar/' + this.id);\r\n        // console.log(id);\r\n        // this.$params.id;\r\n        },\r\n        editar() {\r\n        let me = this;\r\n        if (this.tabProducto.proCodigo === '' || this.tabProducto.proCodigo === null) {\r\n                me.$vs.notify({\r\n                    text: 'Escriba el código del Vendedor antes de editar',\r\n                    color: 'danger',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-alert-triangle'\r\n                });\r\n                return;\r\n            }\r\n            if (this.tabProducto.gruProCodigo === '' || this.tabProducto.gruProCodigo === null) {\r\n                me.$vs.notify({\r\n                    text: 'Seleccione un grupo antes de editar',\r\n                    color: 'danger',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-alert-triangle'\r\n                });\r\n                return;\r\n            }\r\n        let datos  = {\r\n                \"proCodigo\": this.tabProducto.proCodigo,\r\n                \"gruProCodigo\": this.tabProducto.gruProCodigo,\r\n                \"proNombre\": this.tabProducto.proNombre,\r\n                \"proDescripcion\": this.tabProducto.proDescripcion,\r\n                \"proIva\": this.tabProducto.proIva,\r\n                \"proValor\": parseFloat(this.tabProducto.proValor),\r\n                \"proDescuento\": parseFloat(this.tabProducto.proDescuento),\r\n                \"proStock\": parseInt(this.tabProducto.proStock),\r\n                \"proCosto\": parseFloat(this.tabProducto.proCosto),\r\n                \"proPeso\": parseFloat(this.tabProducto.proPeso)\r\n            }\r\n        me.$vs.loading()\r\n        //axios.post(this.$apifacturacion_url + 'f_Producto/AggOrUpdateProducto', datos)\r\n        this.$http.post(this.$server_url+'Post_ProductoEditar', datos)\r\n            .then(res => {\r\n                me.$vs.loading.close()\r\n                this.getProductoParametro();\r\n                me.$vs.notify({\r\n                    text: 'Producto editado con exito',\r\n                    color: 'success',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-check'\r\n                })\r\n                this.popupActivoEditar = false;\r\n                this.popupActivoGuardar = false;\r\n                this.popupActivoEliminar = false;\r\n            })\r\n            .catch(error => {\r\n                if (error.response && error.response.status === 500) {\r\n                    me.$vs.notify({\r\n                        text: 'Revise los campos Valor, Descuento que esten en el formato correcto',\r\n                        color: 'danger',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-x'\r\n                    })\r\n                console.log('Cambie el valor del prodescuento a uno válido');\r\n                me.$vs.loading.close()\r\n                } else {\r\n                console.log(error);\r\n                me.$vs.loading.close()\r\n                    me.$vs.notify({\r\n                        text: 'Producto no se pudo editar',\r\n                        color: 'danger',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-x'\r\n                    })\r\n                }\r\n            })\r\n        },\r\n        getCancelar() {\r\n            this.popupActivoEditar = false;\r\n            this.popupActivoGuardar = false;\r\n            this.popupActivoEliminar = false;\r\n        },\r\n    },\r\n    // created(){\r\n    //     let url = \"https://localhost:7252/api/Vendedor\";\r\n    //     axios.get(url).then((response) => this.Vendedores = response.data);\r\n    //     // fetch(\"https://localhost:7252/api/Vendedor/\")\r\n    //     // .then(response => response.json())\r\n    //     // .then((data) => (this.Vendedores = data));\r\n    //     // // .then(data => (this.totalVuePackages = data.total));\r\n    // }\r\n}\r\n</script>"]}]}