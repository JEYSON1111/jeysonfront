{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\docentes\\archivos.vue?vue&type=style&index=0&id=74dec1ab&lang=css","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\docentes\\archivos.vue","mtime":1712682815746},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\n.texto {\r\n    width: 130px;\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n    text-align: center\r\n}\r\n",{"version":3,"sources":["archivos.vue"],"names":[],"mappings":";AAkJA;AACA;AACA;AACA;AACA;AACA;AACA","file":"archivos.vue","sourceRoot":"src/views/docentes","sourcesContent":["<template>\r\n<div class=\"vx-row\">\r\n    <div class=\"vx-col w-full\">\r\n        <vue-dropzone class=\"vx-card\" ref=\"dropzone\" id=\"drop1\" @vdropzone-complete=\"guardar\" :options=\"dropzoneOptions\"></vue-dropzone>\r\n        <div class=\"vx-row\">\r\n            <div class=\"vx-col w-full mt-4 sm:w-1/4 md:w-1/4 lg:w-2/4 xl:w-4/4  mt-3\" v-for=\"(item,$index) in listaContenido\" :key=\"$index\">\r\n                <div class=\"text-center items-center justify-center\">\r\n                    <vx-tooltip :text=\"item.nombre\" position=\"top\">\r\n                        <a v-bind:href=\"'./'+item.url\" target=\"_blank\">\r\n                            <div class=\"texto\">\r\n                                {{item.nombre}}\r\n                            </div>\r\n                            <vs-avatar color=\"primary\" icon-pack=\"feather\" icon=\"icon-file\" />\r\n                        </a>\r\n                    </vx-tooltip>\r\n                    <p class=\"mt-2\">{{item.updated_at}}</p>\r\n                    <vs-button type=\"line\" v-if=\"item.curso_idcurso != null\" @click=\"quitarContenido(item.idcontenido)\" line-origin=\"right\" color=\"danger\">Eliminar</vs-button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport vSelect from 'vue-select'\r\nimport 'vue-select/dist/vue-select.css';\r\nimport VueDocPreview from 'vue-doc-preview'\r\nimport Vue from 'vue'\r\nimport axios from 'axios'\r\nimport vue2Dropzone from 'vue2-dropzone'\r\nimport 'vue2-dropzone/dist/vue2Dropzone.min.css'\r\nVue.use(axios)\r\nexport default {\r\n    components: {\r\n        'v-select': vSelect,\r\n        vueDropzone: vue2Dropzone,\r\n        VueDocPreview\r\n    },\r\n    data() {\r\n        return {\r\n            asignaturas: [],\r\n            listaContenido: [],\r\n            file: [],\r\n            idasignatura: '',\r\n            dropzoneOptions: {\r\n                url: './',\r\n                dictDefaultMessage: \"<i class='fa fa-cloud-upload'></i> Click o arrastra un archivo aqu√≠.\",\r\n                chunking: true,\r\n                thumbnailWidth: 150,\r\n                maxFilesize: 10.5,\r\n                addRemoveLinks: true,\r\n                headers: {\r\n                    \"My-Awesome-Header\": \"header value\"\r\n                }\r\n            },\r\n        }\r\n    },\r\n    mounted() {\r\n        this.getAsignaturas();\r\n        this.getContenido();\r\n    },\r\n    methods: {\r\n        async getAsignaturas() {\r\n            let me = this;\r\n            // this.$http.get(this.$server_url+\"asignatura/\"+me.usuario.idusuario)\r\n            this.$http.get(this.$server_url+\"asignatura/5763\")\r\n                .then(function (response) {\r\n                    me.asignaturas = response.data\r\n                })\r\n                .catch(function (error) {})\r\n        },\r\n        async guardar(file) {\r\n            let me = this\r\n            me.$vs.loading({\r\n                color: '#046AE7'\r\n            })\r\n            let formData = new FormData();\r\n            formData.append('archivo', file);\r\n            formData.append('idcurso', localStorage.idcurso);\r\n            const config = { headers: { 'Content-Type': 'multipart/form-data' } };\r\n\r\n            axios.post(this.$data_url+'api/addContenido', formData,config)\r\n                .then(function (response) {\r\n                    me.getContenido();\r\n                    me.file = '';\r\n                    me.$refs.dropzone.removeAllFiles();\r\n                    me.$vs.loading.close()\r\n                })\r\n                .catch(function (error) {\r\n                    if (error.response.status == 422) {\r\n                        me.errors = error.response.data.errors;\r\n                        me.$vs.loading.close()\r\n                    }\r\n                })\r\n        },\r\n        async quitarContenido(id) {\r\n            let me = this;\r\n            me.$vs.loading({\r\n                color: '#046AE7'\r\n            })\r\n            axios\r\n                .get(this.$server_url+\"eliminarContenido?id=\" + id)\r\n                .then(function (response) {\r\n                    me.getContenido();\r\n                    me.$vs.loading.close()\r\n                })\r\n                .catch(function (error) {\r\n                    if (error.response.status == 422) {\r\n                        me.errors = error.response.data.errors;\r\n                    }\r\n                });\r\n        },\r\n        async getContenido() {\r\n            let me = this;\r\n            me.$vs.loading({\r\n                color: '#046AE7'\r\n            })\r\n            var url = this.$server_url+\"getContenido?idcurso=908&idasignatura=\" + me.idasignatura;\r\n            this.$http.get(url).then(function (response) {\r\n                    var respuesta = response.data;\r\n                    me.listaContenido = response.data;\r\n                    me.$vs.loading.close()\r\n                })\r\n                .catch(function (error) {});\r\n        },\r\n        async getContenidoTodo() {\r\n            let me = this;\r\n            me.$vs.loading({\r\n                color: '#046AE7'\r\n            })\r\n            var url = this.$server_url+\"getContenidoTodo?idcurso=908&idusuario=5763&todo=1\";\r\n            this.$http.get(url).then(function (response) {\r\n                    var respuesta = response.data;\r\n                    me.listaContenido = response.data;\r\n                    me.$vs.loading.close()\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                });\r\n        },\r\n    },\r\n}\r\n</script>\r\n\r\n<style>\r\n.texto {\r\n    width: 130px;\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n    text-align: center\r\n}\r\n</style>\r\n"]}]}