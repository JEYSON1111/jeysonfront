{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\prueba2.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\prueba2.vue","mtime":1712682816482},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nimport vSelect from 'vue-select'\r\n\r\nexport default {\r\n  data() {\r\n    return{\r\n      arrayReport: [],\r\n      arrayTodo: [],\r\n      codigoSelected: [],\r\n      //variables para el export a excel\r\n      activePrompt:false,\r\n      reportesActivo: 0,\r\n      fileName: null,\r\n      formats: ['xls', 'xlsx', 'csv', 'txt'],\r\n      cellAutoWidth: true,\r\n      selectedFormat: 'xlsx',\r\n      //fin variables para el export a excel\r\n    }\r\n  },\r\n  components: {\r\n    vSelect\r\n  },\r\n  mounted(){\r\n    this.getReporte();\r\n  },\r\n  methods:{\r\n    getReporte(){\r\n      let me = this;\r\n      me.$vs.loading()\r\n      this.$http.get(this.$server_url+'getReporteAsesores')\r\n        .then(function (res) {\r\n            me.$vs.loading.close()\r\n           me.arrayReport = res.data;\r\n           if(me.arrayReport.length > 0){\r\n            me.getReporteTodo();\r\n           }\r\n        })\r\n        .catch(function (error) {\r\n            me.$vs.loading.close()\r\n            me.$vs.notify({\r\n                title: 'Error',\r\n                text: 'Ocurrio un error al cargar los datos',\r\n                color: 'danger',\r\n                iconPack: 'feather',\r\n                icon: 'icon-alert-circle'\r\n            })\r\n            console.log(error + ' error');\r\n        })\r\n    },\r\n    getReporteTodo(){\r\n      let me = this;\r\n      me.arrayTodo = [];\r\n      this.$http.get(this.$server_url+'getReporteAsesores?todo=1')\r\n        .then(function (res) {\r\n          let datos = res.data;\r\n          datos = res.data;\r\n          if(datos.length > 0){\r\n            //voy a recorrer con un bucle y modificar con  datos.JSON.parse(tr.opciones)\r\n            me.arrayTodo = datos.map(p => {\r\n              p.opciones = JSON.parse(p.opciones);\r\n              //buscar en array de arrayReport la propiedad cantidad donde sea el institucion_id igual a p.institucion_id\r\n              let cantidad              = me.arrayReport.find(x => x.institucion_id == p.institucion_id);\r\n              p.cantidad                = cantidad ? cantidad.cantidad : null;\r\n              //opciones = {\\\"presentacion\\\":true,\\\"entrega_muestras\\\":false,\\\"reunion\\\":false,\\\"seguimiento\\\":false,\\\"cierre\\\":false,\\\"cobranza\\\":false,\\\"post_venta\\\":false,\\\"retiro_cartas\\\":false,\\\"retiro_muestras\\\":false,\\\"sinSello\\\":true,\\\"editorial\\\":\\\"\\\",\\\"otraEditorial\\\":false}\",\r\n              p.presentacion            = p.opciones.presentacion == true ? 'Presentacion' : '';\r\n              p.entrega_muestras        = p.opciones.entrega_muestras == true ? 'Entrega de muestras' : '';\r\n              p.reunion                 = p.opciones.reunion == true ? 'Reunion' : '';\r\n              p.seguimiento             = p.opciones.seguimiento == true ? 'Seguimiento' : '';\r\n              p.cierre                  = p.opciones.cierre == true ? 'Cierre' : '';\r\n              p.cobranza                = p.opciones.cobranza == true ? 'Cobranza' : '';\r\n              p.post_venta              = p.opciones.post_venta == true ? 'Post venta' : '';\r\n              p.retiro_cartas           = p.opciones.retiro_cartas == true ? 'Retiro de cartas' : '';\r\n              p.retiro_muestras         = p.opciones.retiro_muestras == true ? 'Retiro de muestras' : '';\r\n              p.sinSello                = p.opciones.sinSello == true ? 'Sin sello' : 'Con sello';\r\n              p.editorial               = p.opciones.editorial;\r\n              p.otraEditorial           = p.opciones.otraEditorial == true ? 'Otra editorial' : '';\r\n              p.otraEditorialText       = p.opciones.otraEditorialText;\r\n              return p;\r\n            })\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error + ' error');\r\n        })\r\n    },\r\n    //METODOS PARA EXCEL\r\n    //para limipiar los campos del excel\r\n    clearFields() {\r\n      this.fileName = ''\r\n      this.cellAutoWidth = true\r\n      this.selectedFormat = 'xlsx'\r\n    },\r\n      //metodo par descargar el excel\r\n      exportToExcel() {\r\n        let headerTitle = ['Asesor','Institucion','Ciclo Escolar','Sello','Estado','Observaciones','Fecha Creación','Fecha finalización','Visitas','Tipo'];\r\n        let headerVal = ['asesor','nombreInstitucion','cicloEscolar','sinSello','estadoAgenda','observaciones2','startDate','fecha_que_visita','cantidad','tipo'];\r\n        let codigoSelectedMayus = this.arrayTodo;\r\n        for (var i = 0; i < codigoSelectedMayus.length; i++) {\r\n            for (var key in codigoSelectedMayus[i]) {\r\n                if (typeof codigoSelectedMayus[i][key] == \"string\") {\r\n                    codigoSelectedMayus[i][key] = codigoSelectedMayus[i][key].toUpperCase();\r\n                }\r\n            }\r\n        }\r\n        import('@/vendor/Export2Excel').then(excel => {\r\n            const list = codigoSelectedMayus\r\n            const data = this.formatJson(headerVal, list)\r\n            var nombrefile = \"\"\r\n            nombrefile = this.fileName\r\n            // if(this.openModal == 1){\r\n            //     nombrefile = this.fileName\r\n            // }else{\r\n            //     nombrefile = \"Reporte de asesores\"\r\n            // }\r\n            excel.export_json_to_excel({\r\n                header: headerTitle,\r\n                data,\r\n                filename: nombrefile,\r\n                autoWidth: this.cellAutoWidth,\r\n                bookType: this.selectedFormat\r\n            })\r\n            this.clearFields()\r\n            this.guardarActivo = '';\r\n            this.generarActivo = ' ';\r\n            this.textAlertCant = '';\r\n            this.cantidad = '';\r\n            this.codigoSelected = [];\r\n        })\r\n    },\r\n      formatJson(filterVal, jsonData) {\r\n        return jsonData.map(v => filterVal.map(j => {\r\n            return v[j]\r\n        }))\r\n      },\r\n  }\r\n}\r\n",{"version":3,"sources":["prueba2.vue"],"names":[],"mappingsfile":"prueba2.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div>\r\n    <div>\r\n      <vs-table max-items=\"50\" search pagination :data=\"arrayReport\" >\r\n        <template slot=\"header\">\r\n            Cantidad: {{arrayReport.length}}\r\n            <vs-button color=\"warning\" size=\"small\" class=\"ml-3\" style=\"font-size: 14px;\" @click=\"tipo= 1;activePrompt=true;\">Exportar</vs-button>\r\n        </template>\r\n        <template slot=\"thead\">\r\n          <vs-th>Asesor</vs-th>\r\n            <vs-th>Institucion</vs-th>\r\n            <!-- <vs-th>Ciudad</vs-th> -->\r\n            <vs-th>Cantidad de visitas</vs-th>\r\n            <vs-th>Tipo</vs-th>\r\n        </template>\r\n        <template slot-scope=\"{data}\">\r\n            <vs-tr :data=\"tr\" :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n              <vs-td>{{ tr.asesor }}</vs-td>\r\n              <vs-td>\r\n                  {{data[indextr].nombreInstitucion}}<br>\r\n                  <small>{{tr.region}}</small>\r\n              </vs-td>\r\n              <!-- <vs-td>\r\n                  {{data[indextr].ciudad}}<br>\r\n              </vs-td> -->\r\n              <vs-td>\r\n                  {{data[indextr].cantidad}}<br>\r\n              </vs-td>\r\n              <vs-td>{{ tr.tipo }}</vs-td>\r\n            </vs-tr>\r\n        </template>\r\n    </vs-table>\r\n    <vs-prompt title=\"Exportar a Excel\" class=\"export-options\" @cancle=\"clearFields\" @accept=\"exportToExcel\" accept-text=\"Exportar\" @close=\"clearFields\" :active.sync=\"activePrompt\">\r\n        <vs-alert class=\"mb-3\" color=\"danger\" icon-pack=\"feather\" icon=\"icon-info\">\r\n            <span>Recuerde <b>seleccionar</b> los registros que desea exportar.</span>\r\n        </vs-alert>\r\n        <vs-input v-model=\"fileName\" placeholder=\"Ingrese el nombre del archivo\" class=\"w-full\" />\r\n        <v-select v-model=\"selectedFormat\" :options=\"formats\" class=\"my-4\" />\r\n    </vs-prompt>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport vSelect from 'vue-select'\r\n\r\nexport default {\r\n  data() {\r\n    return{\r\n      arrayReport: [],\r\n      arrayTodo: [],\r\n      codigoSelected: [],\r\n      //variables para el export a excel\r\n      activePrompt:false,\r\n      reportesActivo: 0,\r\n      fileName: null,\r\n      formats: ['xls', 'xlsx', 'csv', 'txt'],\r\n      cellAutoWidth: true,\r\n      selectedFormat: 'xlsx',\r\n      //fin variables para el export a excel\r\n    }\r\n  },\r\n  components: {\r\n    vSelect\r\n  },\r\n  mounted(){\r\n    this.getReporte();\r\n  },\r\n  methods:{\r\n    getReporte(){\r\n      let me = this;\r\n      me.$vs.loading()\r\n      this.$http.get(this.$server_url+'getReporteAsesores')\r\n        .then(function (res) {\r\n            me.$vs.loading.close()\r\n           me.arrayReport = res.data;\r\n           if(me.arrayReport.length > 0){\r\n            me.getReporteTodo();\r\n           }\r\n        })\r\n        .catch(function (error) {\r\n            me.$vs.loading.close()\r\n            me.$vs.notify({\r\n                title: 'Error',\r\n                text: 'Ocurrio un error al cargar los datos',\r\n                color: 'danger',\r\n                iconPack: 'feather',\r\n                icon: 'icon-alert-circle'\r\n            })\r\n            console.log(error + ' error');\r\n        })\r\n    },\r\n    getReporteTodo(){\r\n      let me = this;\r\n      me.arrayTodo = [];\r\n      this.$http.get(this.$server_url+'getReporteAsesores?todo=1')\r\n        .then(function (res) {\r\n          let datos = res.data;\r\n          datos = res.data;\r\n          if(datos.length > 0){\r\n            //voy a recorrer con un bucle y modificar con  datos.JSON.parse(tr.opciones)\r\n            me.arrayTodo = datos.map(p => {\r\n              p.opciones = JSON.parse(p.opciones);\r\n              //buscar en array de arrayReport la propiedad cantidad donde sea el institucion_id igual a p.institucion_id\r\n              let cantidad              = me.arrayReport.find(x => x.institucion_id == p.institucion_id);\r\n              p.cantidad                = cantidad ? cantidad.cantidad : null;\r\n              //opciones = {\\\"presentacion\\\":true,\\\"entrega_muestras\\\":false,\\\"reunion\\\":false,\\\"seguimiento\\\":false,\\\"cierre\\\":false,\\\"cobranza\\\":false,\\\"post_venta\\\":false,\\\"retiro_cartas\\\":false,\\\"retiro_muestras\\\":false,\\\"sinSello\\\":true,\\\"editorial\\\":\\\"\\\",\\\"otraEditorial\\\":false}\",\r\n              p.presentacion            = p.opciones.presentacion == true ? 'Presentacion' : '';\r\n              p.entrega_muestras        = p.opciones.entrega_muestras == true ? 'Entrega de muestras' : '';\r\n              p.reunion                 = p.opciones.reunion == true ? 'Reunion' : '';\r\n              p.seguimiento             = p.opciones.seguimiento == true ? 'Seguimiento' : '';\r\n              p.cierre                  = p.opciones.cierre == true ? 'Cierre' : '';\r\n              p.cobranza                = p.opciones.cobranza == true ? 'Cobranza' : '';\r\n              p.post_venta              = p.opciones.post_venta == true ? 'Post venta' : '';\r\n              p.retiro_cartas           = p.opciones.retiro_cartas == true ? 'Retiro de cartas' : '';\r\n              p.retiro_muestras         = p.opciones.retiro_muestras == true ? 'Retiro de muestras' : '';\r\n              p.sinSello                = p.opciones.sinSello == true ? 'Sin sello' : 'Con sello';\r\n              p.editorial               = p.opciones.editorial;\r\n              p.otraEditorial           = p.opciones.otraEditorial == true ? 'Otra editorial' : '';\r\n              p.otraEditorialText       = p.opciones.otraEditorialText;\r\n              return p;\r\n            })\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error + ' error');\r\n        })\r\n    },\r\n    //METODOS PARA EXCEL\r\n    //para limipiar los campos del excel\r\n    clearFields() {\r\n      this.fileName = ''\r\n      this.cellAutoWidth = true\r\n      this.selectedFormat = 'xlsx'\r\n    },\r\n      //metodo par descargar el excel\r\n      exportToExcel() {\r\n        let headerTitle = ['Asesor','Institucion','Ciclo Escolar','Sello','Estado','Observaciones','Fecha Creación','Fecha finalización','Visitas','Tipo'];\r\n        let headerVal = ['asesor','nombreInstitucion','cicloEscolar','sinSello','estadoAgenda','observaciones2','startDate','fecha_que_visita','cantidad','tipo'];\r\n        let codigoSelectedMayus = this.arrayTodo;\r\n        for (var i = 0; i < codigoSelectedMayus.length; i++) {\r\n            for (var key in codigoSelectedMayus[i]) {\r\n                if (typeof codigoSelectedMayus[i][key] == \"string\") {\r\n                    codigoSelectedMayus[i][key] = codigoSelectedMayus[i][key].toUpperCase();\r\n                }\r\n            }\r\n        }\r\n        import('@/vendor/Export2Excel').then(excel => {\r\n            const list = codigoSelectedMayus\r\n            const data = this.formatJson(headerVal, list)\r\n            var nombrefile = \"\"\r\n            nombrefile = this.fileName\r\n            // if(this.openModal == 1){\r\n            //     nombrefile = this.fileName\r\n            // }else{\r\n            //     nombrefile = \"Reporte de asesores\"\r\n            // }\r\n            excel.export_json_to_excel({\r\n                header: headerTitle,\r\n                data,\r\n                filename: nombrefile,\r\n                autoWidth: this.cellAutoWidth,\r\n                bookType: this.selectedFormat\r\n            })\r\n            this.clearFields()\r\n            this.guardarActivo = '';\r\n            this.generarActivo = ' ';\r\n            this.textAlertCant = '';\r\n            this.cantidad = '';\r\n            this.codigoSelected = [];\r\n        })\r\n    },\r\n      formatJson(filterVal, jsonData) {\r\n        return jsonData.map(v => filterVal.map(j => {\r\n            return v[j]\r\n        }))\r\n      },\r\n  }\r\n}\r\n</script>\r\n"]}]}