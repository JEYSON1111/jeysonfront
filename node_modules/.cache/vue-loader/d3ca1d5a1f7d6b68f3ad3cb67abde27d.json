{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\codigos\\components\\CodigosRegalados\\ImportSoloCodigos.vue?vue&type=style&index=0&id=529e84ad&scoped=true&lang=css","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\codigos\\components\\CodigosRegalados\\ImportSoloCodigos.vue","mtime":1712682815614},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\n.tabla{\r\n  width: 100%;\r\n  margin-top: 10px;\r\n}\r\n .tabla {\r\n\r\n  border: 1px solid #D1E5F1;\r\n  padding: 2px;\r\n  border-radius: 5px;\r\n}\r\n.th1{\r\n  background-color: #D9AF15;\r\n  border-radius: 5px;\r\n  color:white;\r\n}\r\n.td1, .th1{\r\n padding: 10px;\r\n text-align: center;\r\n border:none;\r\n}\r\n/*CSS IMPORTADOR TIPO BODEGA*/\r\n\r\n.features {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n.features li {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n}\r\n.features li + * {\r\n  margin-top: 0.75rem;\r\n}\r\n.features .icon {\r\n  background-color: #1FCAC5;\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #fff;\r\n  border-radius: 50%;\r\n  width: 20px;\r\n  height: 20px;\r\n}\r\n.features .icon svg {\r\n  width: 14px;\r\n  height: 14px;\r\n}\r\n.features + * {\r\n  margin-top: 1.25rem;\r\n}\r\n",{"version":3,"sources":["ImportSoloCodigos.vue"],"names":[],"mappings":";AA4zBA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ImportSoloCodigos.vue","sourceRoot":"src/views/codigos/components/CodigosRegalados","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"mt-5\" v-if=\"groupBodega\">\r\n      <p class=\"text-center font-bold bg-success\" style=\"color:white;padding:10px;border-radius: 10px;\">Import Gestión Paquetes</p>\r\n      <div class=\"mt-5\">\r\n        <ul class=\"con-s flex\">\r\n          <li class=\"mr-4\">\r\n            <label for=\"\">Institución</label>\r\n            <vs-switch v-model=\"switch1\" vs-icon-off=\"error_outline\" vs-icon-on=\"done\"/>\r\n          </li>\r\n          <li>\r\n            <label for=\"\">Venta Directa Donación Ingeniero Miguel Calderón y Carlos Cevallos</label>\r\n            <vs-switch color=\"success\" v-model=\"switch2\" vs-icon=\"done\"/>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <!--TIPOS BODEGA-->\r\n      <div class=\"flex justify-center\">\r\n        <div class=\"mt-2\">\r\n          <ul class=\"flex\">\r\n            <li class=\"modelx mr-2\">\r\n              Seleccione:\r\n            </li>\r\n            <li>\r\n              <vs-radio v-model=\"TipoImportacion\" class=\"mr-3\" vs-name=\"radios1TipoImportacion\" vs-value=\"5\">Regalado</vs-radio>\r\n            </li>\r\n            <li>\r\n              <vs-radio v-model=\"TipoImportacion\" class=\"mr-3\" vs-name=\"radios1TipoImportacion\" vs-value=\"6\">Regalado y bloqueado</vs-radio>\r\n            </li>\r\n            <li>\r\n              <vs-radio v-model=\"TipoImportacion\" class=\"mr-3\" vs-name=\"radios1TipoImportacion\" vs-value=\"7\">Bloqueado</vs-radio>\r\n            </li>\r\n            <li>\r\n              <vs-radio v-model=\"TipoImportacion\" vs-name=\"radios1TipoImportacion\" vs-value=\"8\">Guia</vs-radio>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <!--Institucion-->\r\n      <div v-if=\"switch1\">\r\n        <TableSelectInstitucion @changeHandle=\"changeHandle\"/>\r\n      </div>\r\n      <br><br>\r\n      <div class=\"vx-row\" style=\"margin-top:-40px;\">\r\n        <!--FACTURA-->\r\n        <div class=\"vx-col w-full sm:w-full md:w-1/2 lg:w-1/2 xl:w-1/2\">\r\n          <div class=\"flex\">\r\n            <ul class=\"centerx\">\r\n              <li>\r\n                <vs-checkbox  v-model=\"checkFactura\" class=\"ml-5 mt-2\">Guardar factura</vs-checkbox>\r\n              </li>\r\n            </ul>\r\n            <vx-input-group class=\"mb-base px-5\" v-if=\"checkFactura\">\r\n              <template slot=\"prepend\">\r\n                <div class=\"prepend-text bg-success\">\r\n                  <span>Número de la factura</span>\r\n                </div>\r\n              </template>\r\n              <vs-input @keydown.space=\"(event) => event.preventDefault()\" v-model=\"factura\" placeholder=\"Ejemplo. F-9999\"/>\r\n            </vx-input-group>\r\n            <div v-if=\"arregloCodigosDiagnosticoNoexisten.length > 0\">\r\n              <vs-button color=\"dark\" size=\"small\" class=\"ml-2 p-3\" @click=\"popupCodigosDiagnosticoNoexisten = true;\" style=\"margin-top: -3px;\" type=\"filled\">MOSTRAR CÓDIGOS NO EXISTE DIÁGNOSTICO</vs-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!--</FACTURA-->\r\n        <div class=\"vx-col w-full sm:w-full md:w-1/2 lg:w-1/2 xl:w-1/2\">\r\n          <vs-input icon=\"icon-message-square\" class=\"w-full\" icon-pack=\"feather\" placeholder=\"Comentario\" v-model=\"observacion\"/>\r\n        </div>\r\n      </div>\r\n      <vs-divider></vs-divider>\r\n      <div class=\"mb-6 mt-4\" align=\"center\">\r\n        <div class=\"vx-col w-full\">\r\n          <p style=\"color:#2D9ADA;\" v-if=\"tableData.length == 0\">\r\n            <i class=\"fa fa-file\" aria-hidden=\"true\"></i>Importacion de códigos <span style=\"font-weight: bold;\">(no ingrese más de 1500 registros en una sola carga.)</span>\r\n          </p>\r\n        </div>\r\n        <vs-alert v-if=\"tableData.length > 0\" color=\"warning\" style=\"height:100px;\" class=\"mb-3 mt-2\"  icon-pack=\"feather\" icon=\"icon-alert-triangle\">\r\n          <p class=\"text-2xl font-bold text-center\">{{ titleImportacion }}</p>\r\n          <vs-divider style=\"margin-top:-2px;\"></vs-divider>\r\n          <span>Excel cargado exitosamente. ¿Estás seguro de importar estos <b>{{ totalCodigos }}</b> códigos?</span><br>\r\n        </vs-alert>\r\n        <vs-row v-if=\"tableData.length > 0 && tableData.length <= 1500 \" class=\"mt-2\">\r\n          <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\">\r\n              <vs-button class=\"mb-2\" color=\"danger\"  type=\"relief\" @click=\"openConfirm(0)\">Importar códigos </vs-button>\r\n          </vs-col>\r\n        </vs-row>\r\n        <!---CONTADOR DE CODIGOS INGRESADOS-->\r\n        <vs-row v-if=\"codigosPerdidos == true\" class=\"mt-5\">\r\n          <div v-if=\"tipoBodega == '1' || tipoBodega == '2'\" style=\"width: 100%;\" class=\"flex justify-center\">\r\n            <ul class=\"features flex justify-center\">\r\n              <li>\r\n                <span class=\"icon\">\r\n                  <svg height=\"24\" width=\"24\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\r\n                    <path fill=\"currentColor\" d=\"M10 15.172l9.192-9.193 1.415 1.414L10 18l-6.364-6.364 1.414-1.414z\"></path>\r\n                  </svg>\r\n                </span>\r\n                <span><strong>Códigos Activación Importados: {{ contadorA }} </strong></span>\r\n              </li>\r\n              <li>\r\n                <span class=\"icon\">\r\n                  <svg height=\"24\" width=\"24\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\r\n                    <path fill=\"currentColor\" d=\"M10 15.172l9.192-9.193 1.415 1.414L10 18l-6.364-6.364 1.414-1.414z\"></path>\r\n                  </svg>\r\n                </span>\r\n                <span><strong>Códigos Diágnostico Importados: {{ contadorD }} </strong></span>\r\n              </li>\r\n              <li>\r\n                <span class=\"icon\">\r\n                  <svg height=\"24\" width=\"24\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\r\n                    <path fill=\"currentColor\" d=\"M10 15.172l9.192-9.193 1.415 1.414L10 18l-6.364-6.364 1.414-1.414z\"></path>\r\n                  </svg>\r\n                </span>\r\n                <span><strong>Total Importados: {{ contadorA+ contadorD }} </strong></span>\r\n              </li>\r\n              <li v-if=\"sumaNoIngresados > 0\">\r\n                <span class=\"icon\">\r\n                  <svg height=\"24\" width=\"24\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\r\n                    <path fill=\"currentColor\" d=\"M10 15.172l9.192-9.193 1.415 1.414L10 18l-6.364-6.364 1.414-1.414z\"></path>\r\n                  </svg>\r\n                </span>\r\n                <span><strong class=\"text-danger\">Códigos No ingresados: {{ sumaNoIngresados }} </strong></span>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <vs-col v-if=\"tipoBodega == '0'\" vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\" v>\r\n            <vs-alert active=\"true\" >\r\n                Se importo   {{ porcentaje }} códigos\r\n                <vs-button v-if=\"codigosSinCodigoUnion.length > 0\" @click=\"popupProblemasCodigosUnion = true;\" color=\"primary\" type=\"border\">Mostrar códigos sin código unión</vs-button>\r\n            </vs-alert>\r\n          </vs-col>\r\n        </vs-row>\r\n        <!--RESUMEN PAQUETES-->\r\n        <div v-if=\"codigosPerdidos == true && (tipoBodega == '3')\">\r\n          <vs-card v-if=\"arregloErroresPaquetes.length > 0\">\r\n            <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"6\">\r\n                <vs-list>\r\n                  <p>Cantidad <span>{{ arregloErroresPaquetes.length }}</span></p>\r\n                    <vs-list-header icon=\"supervisor_account\" title=\"Hubo problemas con algunos paquetes\"></vs-list-header>\r\n                    <vs-list-item :key=\"indextr\" v-for=\"(tr, indextr) in arregloErroresPaquetes\" icon=\"check\" :title=\"tr.paquete\" >\r\n                      <p> {{ tr.problema }}</p>\r\n                    </vs-list-item>\r\n                </vs-list>\r\n            </vs-col>\r\n          </vs-card>\r\n          <TableResumenPaqueteVue :arregloResumen=\"arregloResumen\" :arregloFormatoSend=\"arregloFormatoSend\"/>\r\n        </div>\r\n         <!---FIN CONTADOR DE CODIGOS INGRESADOS-->\r\n        <br/>\r\n        <import-excel :onSuccess=\"loadDataInTable\"  class=\"mb-4\" />\r\n        <!--FORMATO-->\r\n        <div>\r\n          <vs-row>\r\n            <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\" vs-sm = \"12\" vs-xs=\"12\" >\r\n              <vs-card>\r\n                <div class=\"header\">\r\n                  <p style=\"font-weight: bold;\">Formato del archivo excel</p>\r\n                  <table class=\"tabla\">\r\n                      <tr>\r\n                        <th class=\"th1\">codigo</th>\r\n                      </tr>\r\n                      <tr>\r\n                        <td class=\"td1\">xxx</td>\r\n                      </tr>\r\n                  </table>\r\n                </div>\r\n              </vs-card>\r\n            </vs-col>\r\n          </vs-row>\r\n        </div>\r\n        <!--FORMATO-->\r\n        <vs-row >\r\n          <vs-col v-if=\"codigosNoCambiados.length > 0\" vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"6\">\r\n            <vs-list>\r\n              <vs-list-header icon=\"supervisor_account\" title=\"Códigos que no se pudieron cambiar\"></vs-list-header>\r\n              <vs-list-item :key=\"indextr\" v-for=\"(tr, indextr) in codigosNoCambiados\" icon=\"check\" :title=\"tr.codigo\" >\r\n                <p v-if=\"tr.mensaje !='0'\"> {{ tr.mensaje }}</p>\r\n              </vs-list-item>\r\n            </vs-list>\r\n          </vs-col>\r\n          <vs-col v-if=\"codigosNoExisten.length > 0\" vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"6\">\r\n            <vs-list>\r\n              <vs-list-header icon=\"supervisor_account\" title=\"Códigos que no existen\"></vs-list-header>\r\n              <vs-list-item :key=\"indextr\" v-for=\"(tr, indextr) in codigosNoExisten\" icon=\"check\" :title=\"tr.codigo\" >\r\n              </vs-list-item>\r\n            </vs-list>\r\n          </vs-col>\r\n        </vs-row>\r\n        <vs-row>\r\n        </vs-row>\r\n        <vs-row v-if=\"codigosPerdidos == true\">\r\n          <vx-card\r\n            title=\"Codigos que no se pudieron guardar\"\r\n            v-if=\"codigoConProblemas.length > 0\"\r\n            >\r\n            <gestionCodigosLista :arregloCodigos=\"codigoConProblemas\" openModal=\"1\"/>\r\n          </vx-card>\r\n        </vs-row>\r\n      </div>\r\n      <vx-card v-if=\"tableData.length && header.length\">\r\n        <vs-table stripe pagination :max-items=\"10\" search :data=\"tableData\">\r\n          <template slot=\"header\">\r\n            <h4>Códigos a subir {{tableData.length}}</h4>\r\n          </template>\r\n          <template slot=\"thead\">\r\n            <vs-th :sort-key=\"heading\" v-for=\"heading in header\" :key=\"heading\">{{ heading }}</vs-th>\r\n          </template>\r\n          <template slot-scope=\"{data}\">\r\n            <vs-tr :data=\"tr\" :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n              <vs-td :data=\"col\" v-for=\"(col, indexcol) in data[indextr]\" :key=\"indexcol + col\">\r\n                {{ col }}\r\n              </vs-td>\r\n            </vs-tr>\r\n          </template>\r\n        </vs-table>\r\n      </vx-card>\r\n    </div>\r\n    <!--MODALES-->\r\n    <vs-popup title=\"Errores en excel de los codigos\" :active.sync=\"modalErrores\" style=\"padding: 0% !important;\">\r\n      <div class=\"w-full\" style=\"background: rgb(121,9,9); padding: 20px; border-radius: 5px; background: linear-gradient(90deg, rgba(121,9,9,1) 28%, rgba(255,0,48,1) 100%); color: white;\">\r\n        <div class=\"vx-row\">\r\n          <div class=\"vx-col sm:w-1/2 w-full\">\r\n            <b>Código</b>\r\n          </div>\r\n          <div class=\"vx-col sm:w-1/2 w-full\">\r\n            <b>Institución</b>\r\n          </div>\r\n        </div>\r\n        <vs-divider></vs-divider>\r\n        <div :key=\"index\" v-for=\"(item, index) in errores\">\r\n          <div class=\"vx-row\">\r\n              <div class=\"vx-col sm:w-1/2 w-full\">\r\n                <span v-if=\"item.codigo\"> {{item.codigo}} </span>\r\n              </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </vs-popup>\r\n    <!--MODAL PARA CONFIRMAR-->\r\n    <vs-popup small title=\"Confirmación\" :active.sync=\"modalConfirm\">\r\n      <p class=\"text-2xl font-bold text-center\">{{ titleImportacion }}</p>\r\n      <vs-divider style=\"margin-top:-2px;\"></vs-divider>\r\n      <p class=\"text-center\" v-if=\"TipoImportacion == '5'\">Acción: Regalado</p>\r\n      <p class=\"text-center\" v-if=\"TipoImportacion == '6'\">Acción: Regalados y bloqueados</p>\r\n      <p class=\"text-center\" v-if=\"TipoImportacion == '7'\">Acción: Bloqueados</p>\r\n      <p class=\"text-center\" v-if=\"TipoImportacion == '8'\">Acción: GUIA</p>\r\n      <div class=\"w-full mb-base mt-2\" align=\"center\">\r\n        <h4>Está seguro de aplicar estos <span class=\"text-success\">{{ totalCodigos }}</span> códigos? al periodo <b class=\"text-danger\">{{  periodoDescripcion }}</b></h4>\r\n      </div>\r\n      <div class=\"w-full\" align=\"center\">\r\n        <vs-button class=\"mb-2\" color=\"danger\" type=\"gradient\" @click=\"procesarPagos()\"> Confirmar </vs-button>\r\n      </div>\r\n    </vs-popup>\r\n    <!--MODAL PROBLEMAS DIAGNOSTICO O PAQUETES-->\r\n    <vs-popup fullscreen small title=\"Problemas con los códigos de su archivo\" :active.sync=\"popupProblemasDiagnostico\">\r\n      <div v-if=\"tipoBodega == 1 || tipoBodega == 2\">\r\n        <TableProblemasDiagnosticoVue v-if=\"popupProblemasDiagnostico\" :items=\"10\" :arregloProblemasDiagnostico=\"arregloProblemasDiagnostico\"/>\r\n      </div>\r\n      <div v-if=\"tipoBodega == 3\">\r\n        <TablaErroresPaqueteVue v-if=\"popupProblemasDiagnostico\" :items=\"10\" :arregloProblemasPaquete=\"arregloProblemasPaquete\"/>\r\n      </div>\r\n    </vs-popup>\r\n    <vs-popup small title=\"Codigos diágnostico no existen\" :active.sync=\"popupCodigosDiagnosticoNoexisten\">\r\n      <TableProblemasDiagnosticoVue v-if=\"popupCodigosDiagnosticoNoexisten\" :items=\"5\" :arregloProblemasDiagnostico=\"arregloCodigosDiagnosticoNoexisten\"/>\r\n    </vs-popup>\r\n    <!--MODAL CONFIRMAR TIPO DE IMPORTADO-->\r\n    <vs-popup small title=\"Tipo de Importación\" :active.sync=\"popupConfirmTipoImportado\">\r\n      <TipoImportacionVue v-if=\"popupConfirmTipoImportado\" @changeTipo=\"changeTipo\"/>\r\n    </vs-popup>\r\n      <!--MODAL PARA MOSTRAR CODIGOS SIN CODIGO UNION-->\r\n      <vs-popup classContent=\"popup-example\" title=\"Códigos sin código Unión\" fullscreen :active.sync=\"popupProblemasCodigosUnion\">\r\n      <gestionCodigosLista :arregloCodigos=\"codigosSinCodigoUnion\" openModal=\"0\"/>\r\n    </vs-popup>\r\n  </div>\r\n</template>\r\n<script>\r\n  import {\r\n    mapState\r\n} from \"vuex\";\r\nimport ImportExcel from '@/views/codigos/components/importExcel'\r\nimport vSelect from 'vue-select'\r\nconst gestionCodigosLista           = () => import('@/views/codigos/components/utils/gestionCodigosLista')\r\nconst TableProblemasDiagnosticoVue  = () => import('@/views/codigos/components/utils/TableProblemasDiagnostico')\r\nconst TipoImportacionVue            = () => import('@/views/codigos/components/utils/components/GestionLiquidacion/TipoImportacion')\r\nconst TablaErroresPaqueteVue        = () => import('@/views/codigos/paquetes/components/TablaErroresPaquete')\r\nconst TableResumenPaqueteVue        = () => import('@/views/codigos/components/utils/components/GestionLiquidacion/TableResumenPaquete')\r\nconst TableSelectInstitucion        = () => import('@/views/codigos/components/utils/components/GestionLiquidacion/TableSelectInstitucion.vue');\r\nexport default {\r\n  components: {\r\n    ImportExcel,\r\n    vSelect,\r\n    gestionCodigosLista,\r\n    TableProblemasDiagnosticoVue,\r\n    TipoImportacionVue,\r\n    TablaErroresPaqueteVue,\r\n    TableResumenPaqueteVue,\r\n    TableSelectInstitucion,\r\n  },\r\n  data () {\r\n    return {\r\n      codigosPerdidos:false,\r\n      tableData: [],\r\n      header: [],\r\n      sheetName: '',\r\n      usuario: [],\r\n      modalConfirm: false,\r\n      modalErrores: false,\r\n      errores: [],\r\n      cedulas_no_encontradas: [],\r\n      codigosNoExisten:[],\r\n      codigosNoCambiados:[],\r\n      arregloCodigosDiagnosticoNoexisten:[],\r\n      popupCodigosDiagnosticoNoexisten:false,\r\n      porcentaje:0,\r\n      instituciones:[],\r\n      busquedaInstitucion:'',\r\n      nombreInstitucion:'',\r\n      institucion_id:0,\r\n      periodo_id:0,\r\n      codigosNoExisten:[],\r\n      cantidadNoExisten:0,\r\n      error:false,\r\n      periodoDescripcion:'',\r\n      ciudadDescripcion:'',\r\n      factura:'',\r\n      checkFactura:true,\r\n      //0 => regalado ; 1 => regalado y bloqueado ; 2 => bloqueado ; 3 => Bloqueado ; 4 => guia => 5 => regalado sin institucion; 6 => regalado y bloqueado sin institucion\r\n      TipoImportacion:5,\r\n      //VARIABLES PARA TIPO DE ACTIVACION O DIAGNOSTICO\r\n      tipoBodega:0,\r\n      arregloProblemasDiagnostico:[],\r\n      popupProblemasDiagnostico:false,\r\n      popupConfirmTipoImportado:false,\r\n      contadorA:0,\r\n      contadorD:0,\r\n      titleImportacion:'Importacion Sticker (Activación)',\r\n      //FIN VARIABLES PARA TIPO DE ACTIVACION O DIAGNOSTICO\r\n      //variables para codigos union\r\n      codigosSinCodigoUnion:[],\r\n      popupProblemasCodigosUnion:false,\r\n      //fin variables para codigos union\r\n      totalCodigos:0,\r\n      //variables paquete\r\n      cantidadPaquete:20,\r\n      //FIN VARIABLES PARA TIPO DE ACTIVACION O DIAGNOSTICO\r\n      //VARIABLES PARA ERRORES CODIGOS PAQUETES\r\n      arregloProblemasPaquete:[],\r\n      arregloFormatoSend:[],\r\n      arrayPaquetes:[],\r\n      totalCodigos:0,\r\n      arregloErroresPaquetes:[],\r\n      codigoConProblemas:[],\r\n      //FIN VARIABLES PARA ERRORES CODIGOS PAQUETES\r\n      //fin variables paquetes\r\n      observacion:'',\r\n      //variables para opcionales de importacion\r\n      switch1:false,\r\n      switch2:false,\r\n      //fin variables para opcionales de importacion\r\n    }\r\n  },\r\n  created(){\r\n    this.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n    this.codigosPerdidos = false\r\n  },\r\n  watch:{\r\n    factura(results){\r\n      if(results !=\"\"){\r\n        this.factura = results.replace(/\\s/g, \"\");\r\n      }\r\n    },\r\n    switch2(results){\r\n      if(results){\r\n        this.switch1 = true\r\n      }\r\n    },\r\n  },\r\n  computed:{\r\n    ...mapState([\"auth\",'userRoot','susuario','ObjectPedido','groupFacturador','groupBodega']),\r\n    sumaNoIngresados(){\r\n      let me = this;\r\n      if(me.codigosPerdidos){\r\n        let total      = me.totalCodigos - (me.contadorA + me.contadorD)\r\n        return total\r\n      }\r\n    },\r\n  },\r\n  methods: {\r\n    changeHandle(tr){\r\n      let me = this;\r\n      //si hay institucion seleccionada asignar valores\r\n      if(tr.idInstitucion){\r\n        me.nombreInstitucion     = tr.nombreInstitucion\r\n        me.institucion_id        = tr.idInstitucion\r\n        if(tr.EstadoConfiguracion == 1){\r\n        me.periodo_id            = tr.periodo_configurado\r\n        me.periodoDescripcion    = tr.periodoNombreConfigurado\r\n        }else{\r\n        me.periodo_id            = tr.periodo_id\r\n        me.periodoDescripcion    = tr.periodo\r\n        }\r\n        me.ciudadDescripcion     = tr.ciudad\r\n      }\r\n      //limpiar\r\n      else{\r\n        me.nombreInstitucion     = ''\r\n        me.institucion_id        = 0\r\n        me.periodo_id            = 0\r\n        me.periodoDescripcion    = ''\r\n        me.ciudadDescripcion     = ''\r\n      }\r\n    },\r\n\r\n    changeTipo(e){\r\n      let me = this\r\n      me.tipoBodega                 = e.sendtipoBodega\r\n      me.titleImportacion           = e.sendtitleImportacion\r\n      me.cantidadPaquete            = e.sendcantidadPaquete\r\n      me.popupConfirmTipoImportado  = false;\r\n      me.ejecutarValidacion()\r\n    },\r\n    ejecutarValidacion(){\r\n      let me = this;\r\n      if(me.tipoBodega == 1 || me.tipoBodega == 2) { me.validateCodigos() }\r\n      if(me.tipoBodega == 3) { me.validateCodigosPaquete() }\r\n    },\r\n    validateCodigos(){\r\n      let me                            = this;\r\n      try{\r\n        let datos                       = []\r\n        me.arregloProblemasDiagnostico  = []\r\n        datos                           = me.tableData\r\n        var preValores                  = []\r\n        //quitar types NumRow\r\n        datos.forEach(element => {\r\n          var obj = new Object();\r\n          obj.codigo = element.codigo.trim().toUpperCase()\r\n          preValores.push(obj)\r\n        });\r\n        var getLongitud = datos.length\r\n        var longitud    = getLongitud/2\r\n        for(var i = 0; i<longitud;i++){\r\n          // Creamos un nuevo array para almacenar los objetos quitados\r\n          const nuevoArray        = [];\r\n          let   codigoActivacion  = \"\";\r\n          let   codigoDiagnostico = \"\";\r\n          // Quitamos los dos primeros objetos del array original y los agregamos al nuevo array\r\n          nuevoArray.push(preValores.splice(0, 2));\r\n          var setear = nuevoArray.flat()\r\n          //====VALIDACION SI SOLO HAY UN CODIGO====\r\n          if(setear.length == 1){\r\n            var cal = new Object\r\n            //ACTIVACION - DIAGNOSTICO)\r\n            if(me.tipoBodega == 1){\r\n              cal.codigoActivacion =  setear[0].codigo\r\n              cal.codigoDiagnostico  =  \"\"\r\n            }\r\n            //DIAGNOSTICO - ACTIVACION)\r\n            if(me.tipoBodega == 2){\r\n              cal.codigoDiagnostico =  setear[0].codigo\r\n              cal.codigoActivacion  =  \"\"\r\n            }\r\n            cal.problema          =  'formato'\r\n            me.arregloProblemasDiagnostico.push(cal)\r\n          }\r\n          //==SI TODO ESTA NORMAL===\r\n          else{\r\n            //ACTIVACION - DIAGNOSTICO)\r\n            if(me.tipoBodega == 1){\r\n              codigoActivacion      = setear[0].codigo;\r\n              codigoDiagnostico     = setear[1].codigo\r\n            }\r\n            //DIAGNOSTICO - ACTIVACION)\r\n            if(me.tipoBodega == 2){\r\n              codigoDiagnostico     = setear[0].codigo\r\n              codigoActivacion      = setear[1].codigo;\r\n            }\r\n            //============ACTIVACION==================================\r\n            //VALIDACION SI NO SON STRING\r\n            if (typeof codigoActivacion !== 'string' || typeof codigoDiagnostico !== 'string' ) {\r\n              var cal = new Object\r\n              cal.codigoActivacion  =  codigoActivacion\r\n              cal.codigoDiagnostico =  codigoDiagnostico\r\n              cal.problema          =  'formato'\r\n              me.arregloProblemasDiagnostico.push(cal)\r\n            }\r\n            else{\r\n              const activacionMinuscula = codigoActivacion.toLowerCase();\r\n              //validar que el codigo de activacion no tenga una P\r\n              if(activacionMinuscula.startsWith(\"p\")){\r\n                //validar meñique que el codigo de activacion se permita empezar por p DONDE SEA PLM no hago nada\r\n                if(activacionMinuscula.startsWith(\"plm\")){\r\n                }else{\r\n                  var cal = new Object\r\n                  cal.codigoActivacion  =  codigoActivacion\r\n                  cal.codigoDiagnostico =  codigoDiagnostico\r\n                  cal.problema          =  'activacion'\r\n                  me.arregloProblemasDiagnostico.push(cal)\r\n                }\r\n              }\r\n              //=============DIAGNOSTICO===================================\r\n              //validar que el codigo de activacion tenga una P\r\n              const diagnosticoMinuscula = codigoDiagnostico.toLowerCase();\r\n              //validar si es meñique debe tener 2 pp\r\n              if(activacionMinuscula.startsWith(\"plm\")){\r\n                //si no inicia por 2 pp\r\n                if(!diagnosticoMinuscula.startsWith(\"pp\")){\r\n                  var cal = new Object\r\n                  cal.codigoActivacion  =  codigoActivacion\r\n                  cal.codigoDiagnostico =  codigoDiagnostico\r\n                  cal.problema          =  'diagnostico'\r\n                  me.arregloProblemasDiagnostico.push(cal)\r\n                }\r\n              }\r\n              //diferente a meñique\r\n              else{\r\n                if(!diagnosticoMinuscula.startsWith(\"p\")){\r\n                  var cal = new Object\r\n                  cal.codigoActivacion  =  codigoActivacion\r\n                  cal.codigoDiagnostico =  codigoDiagnostico\r\n                  cal.problema          =  'diagnostico'\r\n                  me.arregloProblemasDiagnostico.push(cal)\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }//Fin FOR\r\n        //si hay errores en el archivo mostramos un modal\r\n        if(me.arregloProblemasDiagnostico.length > 0){\r\n          me.popupProblemasDiagnostico = true\r\n        }\r\n      }\r\n      catch (err) {\r\n        console.log(\"err\",err)\r\n        alert(\"Hubo problemas con tu archivo excel\")\r\n      }\r\n    },\r\n    //==================================METODOS PAQUETES===================\r\n    validateCodigosPaquete(){\r\n      let me                                = this;\r\n      try{\r\n        me.arregloFormatoSend               = []\r\n        const problema                      = \"Problema con el paquete\"\r\n        me.arregloProblemasPaquete          = []\r\n        let preValores                      = []\r\n        preValores                          = JSON.parse(JSON.stringify(me.tableData));\r\n        let datos                           = []\r\n        preValores.forEach(element => {\r\n          var obj = new Object();\r\n          obj.codigo = element.codigo.trim().toUpperCase()\r\n          datos.push(obj)\r\n        });\r\n        //validar si son mas de 200 paquetes\r\n        if(datos.length > 200){\r\n          me.$vs.notify({\r\n          text:'No puedes subir mas de 200 paquetes',\r\n          color:'warning',\r\n          iconPack: 'feather',\r\n          icon:'icon-check'})\r\n          return false;\r\n        }\r\n        datos.forEach(element => {\r\n          let ifErrsPaquete                 = false\r\n          let codigoPaquete                 = element.codigo\r\n          //validar que el codigo sea string\r\n          if (typeof codigoPaquete !== 'string' )   { ifErrsPaquete        = true }\r\n          else{\r\n            const paqueteMinuscula = codigoPaquete.toLowerCase();\r\n            if(!paqueteMinuscula.startsWith(\"paq-\")) { ifErrsPaquete        = true }\r\n          }\r\n          //si existe un errores\r\n          if(ifErrsPaquete){\r\n            var cal               = new Object\r\n            cal.codigoPaquete     =  codigoPaquete\r\n            cal.problema          =  problema\r\n            cal.codigosHijos      =  []\r\n            me.arregloProblemasPaquete.push(cal)\r\n          }else{\r\n            me.arregloFormatoSend.push({codigoPaquete:codigoPaquete})\r\n          }\r\n        });\r\n        //si hay errores en el archivo mostramos un modal\r\n        if(me.arregloProblemasPaquete.length > 0){ me.popupProblemasDiagnostico = true }\r\n      }\r\n      catch (err) {\r\n        console.log(\"err\",err)\r\n        alert(\"Hubo problemas con tu archivo excel\")\r\n      }\r\n    },\r\n    //===================================FIN METODOS PAQUETES===============\r\n    loadDataInTable ({ results, header, meta }) {\r\n      let me = this;\r\n      this.totalCodigos                       = 0\r\n      this.arregloProblemasDiagnostico        = []\r\n      this.arregloCodigosDiagnosticoNoexisten = []\r\n      this.codigosNoExisten                   = []\r\n      this.header                             = header\r\n      const newArrayOfObj = results.map(obj => {\r\n        // Obtenemos todas las claves del objeto\r\n        const keys = Object.keys(obj);\r\n        // Seleccionamos la primera clave dinámicamente\r\n        const firstKey = keys[0];\r\n        // Eliminamos la primera propiedad del objeto y obtener los valores restantes\r\n        const { [firstKey]: deletedKey, ...rest } = obj;\r\n        // Retornamos un nuevo objeto con la primera propiedad reemplazada por \"codigo\" y las restantes\r\n        return {\r\n          codigo: deletedKey,\r\n          ...rest\r\n        };\r\n      });\r\n      this.tableData                          = newArrayOfObj\r\n      me.totalCodigos                         = newArrayOfObj.length\r\n      me.codigosPerdidos                      = false\r\n      this.codigosNoCambiados                 = []\r\n      this.sheetName = meta.sheetName\r\n      this.popupConfirmTipoImportado          = true;\r\n      this.arregloProblemasPaquete            = []\r\n      this.arregloResumen                     = []\r\n      this.arregloCodigosDiagnosticoNoexisten = []\r\n      this.arregloFormatoSend                 = []\r\n    },\r\n    procesarPagos(){\r\n      let me = this\r\n      if(me.switch2){\r\n        if(me.switch1){}\r\n        else{\r\n          me.$vs.notify({\r\n          text:'Debe seleccionar una institución por favor',\r\n          color:'warning',\r\n          iconPack: 'feather',\r\n          icon:'icon-check'})\r\n          return false;\r\n        }\r\n      }\r\n      //validar institucion\r\n      if(me.switch1){\r\n        if(me.institucion_id == 0){\r\n          me.$vs.notify({\r\n          text:'Debe seleccionar una institución por favor',\r\n          color:'warning',\r\n          iconPack: 'feather',\r\n          icon:'icon-check'})\r\n          return false;\r\n        }\r\n      }\r\n      if(me.checkFactura){\r\n        if(me.factura == \"\"){\r\n          me.$vs.notify({\r\n          text:'Debe ingresar el número de factura por favor',\r\n          color:'warning',\r\n          iconPack: 'feather',\r\n          icon:'icon-check'})\r\n          return false;\r\n        }\r\n      }else{\r\n        me.factura  = \"\"\r\n      }\r\n      if(me.observacion == \"\"){\r\n        me.$vs.notify({\r\n        text:'Debe ingresar un comentario por favor',\r\n        color:'warning',\r\n        iconPack: 'feather',\r\n        icon:'icon-check'})\r\n        return false;\r\n      }\r\n      //si escogio tipo de importacion Diagnostico\r\n      if(me.tipoBodega == 1 || me.tipoBodega == 2){\r\n        if(me.arregloProblemasDiagnostico.length > 0){\r\n          me.$vs.notify({\r\n          text:'Existe codigos de activación con problemas corriga por favor',\r\n          color:'warning',\r\n          iconPack: 'feather',\r\n          icon:'icon-check'})\r\n          return false\r\n        }\r\n      }\r\n      //si escogio tipo de paquete\r\n      if(me.tipoBodega == 3){\r\n        if(me.arregloProblemasPaquete.length > 0){\r\n          me.$vs.notify({\r\n          text:'Existe codigos del paquete con problemas corriga por favor',\r\n          color:'warning',\r\n          iconPack: 'feather',\r\n          icon:'icon-check'})\r\n          return false\r\n        }\r\n        if(me.arregloFormatoSend.length > 200){\r\n          me.$vs.notify({\r\n          text:'No puedes subir mas de 200 paquetes',\r\n          color:'warning',\r\n          iconPack: 'feather',\r\n          icon:'icon-check'})\r\n          return false;\r\n        }\r\n        if(me.arregloFormatoSend.length == 0){\r\n          me.$vs.notify({\r\n          text:'Hubo problemas para subir los paquetes',\r\n          color:'warning',\r\n          iconPack: 'feather',\r\n          icon:'icon-check'})\r\n          return false\r\n        }\r\n      }\r\n      let formData           = new FormData();\r\n      let mensaje            = \"\"\r\n      let mensajeInstitucion = \"\"\r\n      let mensajeVenta       = \"\"\r\n      //envio venta directa\r\n      if(me.switch2){ formData.append('venta_estado', 1); mensajeVenta = \"Venta_Directa_\"}\r\n      //si selecciono una institucion\r\n      if(me.switch1) {\r\n        mensajeInstitucion = me.nombreInstitucion+\"_\"+me.periodoDescripcion+\"_\";\r\n        formData.append('institucion_id', me.institucion_id);\r\n        formData.append('periodo_id',     me.periodo_id)\r\n      }else{  formData.append('periodo_id',     localStorage.getItem('periodo_id')); }\r\n      if(me.TipoImportacion == 5) { mensaje = \"Regalado_\" }\r\n      if(me.TipoImportacion == 6) { mensaje = \"Regalado_y_bloqueado_\" }\r\n      if(me.TipoImportacion == 7) { mensaje = \"Bloqueado_\" }\r\n      if(me.TipoImportacion == 8) { mensaje = \"Guia_\" }\r\n      var json_pagos = \"\"\r\n      if(me.tipoBodega == 3 ) {  json_pagos = JSON.stringify(me.arregloFormatoSend) }\r\n      else                                         {  json_pagos = JSON.stringify(me.tableData) }\r\n      formData.append('data_codigos',   json_pagos);\r\n      formData.append('id_usuario',     me.usuario.idusuario);\r\n      formData.append('comentario',     mensajeVenta+mensajeInstitucion+mensaje+\"_\"+me.factura+\"_\"+me.observacion)\r\n      formData.append('factura',        me.factura)\r\n      formData.append('tipoBodega',     me.tipoBodega)\r\n      formData.append('regalado',       me.TipoImportacion)\r\n      var url = \"\"\r\n      //tipo importacion Anterior\r\n      if(me.tipoBodega == '0'){\r\n        url = this.$server_url+'codigos/import/gestion'\r\n      }\r\n      //tipo importacion Activacion - Diagnostico\r\n      if(me.tipoBodega == '1' || me.tipoBodega == '2' ){\r\n        url = this.$server_url+'codigos/import/gestion/diagnostico'\r\n      }\r\n      //tipo paquete\r\n        if(me.tipoBodega == '3' ){\r\n        url = this.$server_url+'paquetes/importPaqueteGestion'\r\n      }\r\n      me.$vs.loading()\r\n      this.$http.post(url, formData)\r\n      .then(res => {\r\n        me.$vs.loading.close()\r\n        me.$vs.notify({\r\n        text:'Códigos procesados exitosamente',\r\n        color:'success',\r\n        iconPack: 'feather',\r\n        icon:'icon-check'})\r\n        me.modalConfirm                             = false\r\n        me.tableData                                = []\r\n        me.codigoConProblemas                       = res.data.codigoConProblemas\r\n        //activacion - diagnostica normal\r\n        if( this.tipoBodega == 1 || this.tipoBodega == 2){\r\n          me.contadorA                              = res.data.contadorA\r\n          me.contadorD                              = res.data.contadorD\r\n          if(res.data.CodigosDiagnosticoNoexisten.length > 0){\r\n            me.arregloCodigosDiagnosticoNoexisten   = res.data.CodigosDiagnosticoNoexisten\r\n            me.popupCodigosDiagnosticoNoexisten     = true\r\n          }\r\n        }\r\n        //paquetes\r\n        if( this.tipoBodega == 3 ){\r\n          me.arregloResumen                         = res.data.arregloResumen\r\n          me.codigoConProblemas                     = res.data.codigoConProblemas\r\n          me.arregloErroresPaquetes                 = res.data.arregloErroresPaquetes\r\n        }\r\n        if( this.tipoBodega == 0){\r\n          me.porcentaje                             = res.data.ingresados\r\n          me.codigosNoCambiados                     = res.data.codigosNoCambiados\r\n          me.codigosNoExisten                       = res.data.codigosNoExisten\r\n          me.codigosSinCodigoUnion                  = res.data.codigosSinCodigoUnion\r\n          if(me.codigosSinCodigoUnion.length > 0){\r\n              me.popupProblemasCodigosUnion         = true\r\n          }\r\n        }\r\n        me.factura                                  = ''\r\n        me.observacion                              = \"\"\r\n        me.codigosPerdidos                          = true\r\n      })\r\n      .catch(function (error) {\r\n        me.$vs.notify({\r\n        text:'Verifique que la información se haya guardado correctamente.',\r\n        color:'warning',\r\n        iconPack: 'feather',\r\n        icon:'icon-alert-triangle'})\r\n        me.$vs.loading.close()\r\n        // setTimeout(function() {location.reload()}, 1000);\r\n      })\r\n    },\r\n    openConfirm(tipo) {\r\n      let me = this\r\n      //volver a revisar que este bien el formato del excel\r\n      me.ejecutarValidacion()\r\n      if( !me.tableData[0].codigo){\r\n        me.$vs.loading.close()\r\n        me.$vs.notify({ text:'Corrija el formato del excel y vuelva a intentar.', color:'warning', iconPack: 'feather', icon:'icon-alert-triangle'})\r\n        return\r\n      }\r\n      if(me.arregloProblemasDiagnostico.length > 0){\r\n        me.$vs.notify({ text:'Corrija el formato del excel y vuelva a intentar.', color:'warning', iconPack: 'feather', icon:'icon-alert-triangle'})\r\n        return\r\n      }\r\n      if(me.arregloProblemasPaquete.length > 0){\r\n        me.$vs.notify({ text:'Corrija el formato del excel y vuelva a intentar.', color:'warning', iconPack: 'feather', icon:'icon-alert-triangle'})\r\n        return\r\n      }\r\n      me.errores = []\r\n      $.each(me.tableData,function(key, value){\r\n        if( !value.codigo){\r\n          me.errores.push(value)\r\n        }\r\n      })\r\n      if( me.errores.length > 0 ){\r\n        me.modalErrores = true\r\n      }else{\r\n        me.modalConfirm = true\r\n      }\r\n    },\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n.tabla{\r\n  width: 100%;\r\n  margin-top: 10px;\r\n}\r\n .tabla {\r\n\r\n  border: 1px solid #D1E5F1;\r\n  padding: 2px;\r\n  border-radius: 5px;\r\n}\r\n.th1{\r\n  background-color: #D9AF15;\r\n  border-radius: 5px;\r\n  color:white;\r\n}\r\n.td1, .th1{\r\n padding: 10px;\r\n text-align: center;\r\n border:none;\r\n}\r\n/*CSS IMPORTADOR TIPO BODEGA*/\r\n\r\n.features {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n.features li {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n}\r\n.features li + * {\r\n  margin-top: 0.75rem;\r\n}\r\n.features .icon {\r\n  background-color: #1FCAC5;\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #fff;\r\n  border-radius: 50%;\r\n  width: 20px;\r\n  height: 20px;\r\n}\r\n.features .icon svg {\r\n  width: 14px;\r\n  height: 14px;\r\n}\r\n.features + * {\r\n  margin-top: 1.25rem;\r\n}\r\n</style>\r\n"]}]}