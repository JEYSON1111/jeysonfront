{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\salle\\administrador\\evaluaciones\\components\\Preguntas\\PreguntasMover.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\salle\\administrador\\evaluaciones\\components\\Preguntas\\PreguntasMover.vue","mtime":1712682816514},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nimport vSelect from 'vue-select'\r\nimport PreguntasTableVue from './PreguntasTable.vue'\r\nexport default{\r\n  props:{\r\n    pregSelected:{\r\n      type:Array,\r\n      default:[]\r\n    },\r\n    arregloPeriodos:{\r\n      type:Array,\r\n      default:[]\r\n    },\r\n  },\r\n  components:{\r\n    vSelect,\r\n    PreguntasTableVue,\r\n  },\r\n  data(){\r\n    return{\r\n      usuario:[],\r\n      arregloAsignaturas:[],\r\n      arregloAreas:[],\r\n      preguntasRender:[],\r\n      PreguntasNoIngresadas:[],\r\n      periodoSelect:'',\r\n      areaSelect:'',\r\n      asignaturaSelect:'',\r\n      ingresadas:0,\r\n      duplicate:0,\r\n      userRoot:false,\r\n    }\r\n  },\r\n  created(){\r\n    let me = this;\r\n    me.usuario = JSON.parse(localStorage.getItem(\"usuario\"))\r\n    me.renderPreguntas()\r\n  },\r\n  mounted(){\r\n    let me                    = this\r\n    me.ingresadas             = 0\r\n    me.PreguntasNoIngresadas  = []\r\n    if(me.arregloPeriodos.length > 0){\r\n      me.periodoSelect = me.arregloPeriodos[0].id\r\n      me.getAreas()\r\n    }\r\n    me.getUserRoot(me.usuario);\r\n  },\r\n  methods:{\r\n    getUserRoot(dato) {\r\n      let me = this;\r\n      me.$vs.loading()\r\n      this.$http.get(this.$server_url + 'permisos/' + dato.idusuario)\r\n        .then((result) => {\r\n            if (result.data.length > 0) {\r\n              me.userRoot = true;\r\n            }\r\n            me.$vs.loading.close()\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        })\r\n    },\r\n    renderPreguntas(){\r\n      let me = this;\r\n      me.preguntasRender = []\r\n      me.pregSelected.forEach(element => {\r\n        var cal = new Object()\r\n        cal.nombre_asignatura   = element.pregunta.nombre_asignatura\r\n        cal.id_pregunta         = element.pregunta.id_pregunta\r\n        cal.id_tipo_pregunta    = element.pregunta.id_tipo_pregunta\r\n        cal.descripcion         = element.pregunta.descripcion\r\n        cal.img_pregunta        = element.pregunta.img_pregunta\r\n        cal.puntaje_pregunta    = element.pregunta.puntaje_pregunta\r\n        cal.estado              = element.pregunta.estado\r\n        cal.n_evaluacion        = element.pregunta.n_evaluacion\r\n        cal.id_area             = element.pregunta.id_area\r\n        cal.periodo             = element.pregunta.periodo\r\n        me.preguntasRender.push(cal)\r\n      });\r\n    },\r\n    getAreas(){\r\n      let me                 = this\r\n      me.arregloAreas        = []\r\n      me.arregloAsignaturas  = []\r\n      me.areaSelect          = \"\"\r\n      me.asignaturaSelect    = \"\"\r\n      if(me.periodoSelect == null || me.periodoSelect == \"\" || me.periodoSelect == undefined){\r\n        me.$vs.notify({\r\n        text:'Seleccione una Evaluación Período por favor',\r\n        color:'warning',\r\n        iconPack: 'feather',\r\n        icon:'icon-check'})\r\n        return\r\n      }\r\n      this.$http.get(this.$server_url+'areas_salle')\r\n      .then(res => {\r\n        let datos = res.data\r\n        if(datos.length > 0){\r\n          me.arregloAreas = datos.filter(p => p.n_evaluacion == me.periodoSelect)\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n          console.log(error);\r\n      })\r\n    },\r\n    getAsignaturasFiltro(){\r\n      let me = this\r\n      me.asignaturaSelect  = \"\"\r\n      this.$http.get(this.$server_url+'asignaturas_area_salle/' + me.areaSelect.id_area)\r\n      .then(res => {\r\n        me.arregloAsignaturas= res.data;\r\n      })\r\n      .catch(function (error) {\r\n          console.log(error);\r\n      })\r\n    },\r\n    moverPreguntas(){\r\n      let me = this\r\n      if(me.periodoSelect == null || me.periodoSelect == undefined || me.periodoSelect == \"\"){\r\n        me.$vs.notify({\r\n        text:'Seleccione una período de evaluación por favor',\r\n        color:'warning',\r\n        iconPack: 'feather',\r\n        icon:'icon-check',\r\n        })\r\n        return\r\n      }\r\n      if(me.asignaturaSelect == null || me.asignaturaSelect == undefined || me.asignaturaSelect == \"\"){\r\n        me.$vs.notify({\r\n        text:'Seleccione una asignatura por favor',\r\n        color:'warning',\r\n        iconPack: 'feather',\r\n        icon:'icon-check',\r\n        })\r\n        return\r\n      }\r\n\r\n      let formData = new FormData();\r\n      formData.append('data_preguntas', JSON.stringify(me.preguntasRender));\r\n      formData.append('n_evaluacion',   me.periodoSelect)\r\n      formData.append('id_asignatura',  me.asignaturaSelect)\r\n      formData.append('user_created',   me.usuario.idusuario)\r\n      formData.append('duplicate',      me.duplicate)\r\n      me.$vs.loading()\r\n      this.$http.post(this.$server_url+'salle/MoverPreguntas', formData)\r\n      .then(res => {\r\n      me.$vs.loading.close()\r\n      if(res.data.status == 0){\r\n        me.$vs.notify({\r\n        text:res.data.message,\r\n        color:'warning',\r\n        iconPack: 'feather',\r\n        icon:'icon-check',\r\n        })\r\n        return\r\n      }\r\n      me.PreguntasNoIngresadas  = res.data.PreguntasNoIngresadas\r\n      let msg                   = `Se movio ${res.data.ingresadas}  preguntas correctamente `\r\n      me.$vs.notify({\r\n        text:msg,\r\n        color:'success',\r\n        iconPack: 'feather',\r\n        icon:'icon-check',\r\n        time:4000,\r\n        })\r\n        let datos = {\r\n          \"ingresadas\" : res.data.ingresadas ,\r\n          \"PreguntasNoIngresadas\":res.data.PreguntasNoIngresadas\r\n        }\r\n        me.$emit('changeMove',datos)\r\n      })\r\n    },\r\n    moverPreguntasInactivas(e){\r\n      me.$emit('changeMove',e)\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["PreguntasMover.vue"],"names":[],"mappingsfile":"PreguntasMover.vue","sourceRoot":"src/views/salle/administrador/evaluaciones/components/Preguntas","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"vx-row mb-6\">\r\n      <div class=\"vx-col w-full\">\r\n        <p>Período Evaluación:</p>\r\n        <v-select :options=\"arregloPeriodos\" @input=\"getAreas()\" :reduce=\"arregloPeriodos => arregloPeriodos.id\" label=\"nombre\" class=\"w-full\" v-model=\"periodoSelect\" />\r\n      </div>\r\n    </div>\r\n    <div class=\"vx-row mb-6\">\r\n      <div class=\"vx-col w-full\">\r\n        <p>Área:</p>\r\n        <v-select :options=\"arregloAreas\" :reduce=\"arregloAreas => arregloAreas\" label=\"nombre_area\" v-model=\"areaSelect\" @input=\"getAsignaturasFiltro()\"></v-select>\r\n      </div>\r\n    </div>\r\n    <div class=\"vx-row mb-6\">\r\n      <div class=\"vx-col w-full\">\r\n        <p>Asignatura:</p>\r\n        <v-select :options=\"arregloAsignaturas\" :reduce=\"arregloAsignaturas => arregloAsignaturas.id_asignatura\" label=\"nombre_asignatura\" v-model=\"asignaturaSelect\"></v-select>\r\n      </div>\r\n    </div>\r\n    <div class=\"flex justify-center mb-6\" v-if=\"userRoot\">\r\n      <ul class=\"flex\">\r\n        <li class=\"modelx mr-2\">\r\n          Permitir duplicar preguntas\r\n        </li>\r\n        <li>\r\n          <vs-radio v-model=\"duplicate\" class=\"mr-2\" vs-name=\"radios1duplicate\" vs-value=\"1\">Si</vs-radio>\r\n        </li>\r\n        <li>\r\n          <vs-radio v-model=\"duplicate\"  vs-name=\"radios1duplicate\" vs-value=\"0\">No</vs-radio>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <div class=\"flex justify-center mb-6\">\r\n      <vs-button class=\"mr-3 mb-2\" icon=\"check\" @click=\"moverPreguntas()\">Mover preguntas</vs-button>\r\n      <vs-button color=\"warning\" type=\"border\" icon=\"close\" class=\"mb-2\" @click=\"$emit('changeRecharge',1)\">Cancelar</vs-button>\r\n    </div>\r\n    <!--TABLE PREGUNTAS-->\r\n    <vs-divider>Preguntas a ser movidas</vs-divider>\r\n    <PreguntasTableVue :pregSelected=\"pregSelected\" @changeMove=\"moverPreguntasInactivas\"/>\r\n    <!--MODALES-->\r\n  </div>\r\n</template>\r\n<script>\r\nimport vSelect from 'vue-select'\r\nimport PreguntasTableVue from './PreguntasTable.vue'\r\nexport default{\r\n  props:{\r\n    pregSelected:{\r\n      type:Array,\r\n      default:[]\r\n    },\r\n    arregloPeriodos:{\r\n      type:Array,\r\n      default:[]\r\n    },\r\n  },\r\n  components:{\r\n    vSelect,\r\n    PreguntasTableVue,\r\n  },\r\n  data(){\r\n    return{\r\n      usuario:[],\r\n      arregloAsignaturas:[],\r\n      arregloAreas:[],\r\n      preguntasRender:[],\r\n      PreguntasNoIngresadas:[],\r\n      periodoSelect:'',\r\n      areaSelect:'',\r\n      asignaturaSelect:'',\r\n      ingresadas:0,\r\n      duplicate:0,\r\n      userRoot:false,\r\n    }\r\n  },\r\n  created(){\r\n    let me = this;\r\n    me.usuario = JSON.parse(localStorage.getItem(\"usuario\"))\r\n    me.renderPreguntas()\r\n  },\r\n  mounted(){\r\n    let me                    = this\r\n    me.ingresadas             = 0\r\n    me.PreguntasNoIngresadas  = []\r\n    if(me.arregloPeriodos.length > 0){\r\n      me.periodoSelect = me.arregloPeriodos[0].id\r\n      me.getAreas()\r\n    }\r\n    me.getUserRoot(me.usuario);\r\n  },\r\n  methods:{\r\n    getUserRoot(dato) {\r\n      let me = this;\r\n      me.$vs.loading()\r\n      this.$http.get(this.$server_url + 'permisos/' + dato.idusuario)\r\n        .then((result) => {\r\n            if (result.data.length > 0) {\r\n              me.userRoot = true;\r\n            }\r\n            me.$vs.loading.close()\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        })\r\n    },\r\n    renderPreguntas(){\r\n      let me = this;\r\n      me.preguntasRender = []\r\n      me.pregSelected.forEach(element => {\r\n        var cal = new Object()\r\n        cal.nombre_asignatura   = element.pregunta.nombre_asignatura\r\n        cal.id_pregunta         = element.pregunta.id_pregunta\r\n        cal.id_tipo_pregunta    = element.pregunta.id_tipo_pregunta\r\n        cal.descripcion         = element.pregunta.descripcion\r\n        cal.img_pregunta        = element.pregunta.img_pregunta\r\n        cal.puntaje_pregunta    = element.pregunta.puntaje_pregunta\r\n        cal.estado              = element.pregunta.estado\r\n        cal.n_evaluacion        = element.pregunta.n_evaluacion\r\n        cal.id_area             = element.pregunta.id_area\r\n        cal.periodo             = element.pregunta.periodo\r\n        me.preguntasRender.push(cal)\r\n      });\r\n    },\r\n    getAreas(){\r\n      let me                 = this\r\n      me.arregloAreas        = []\r\n      me.arregloAsignaturas  = []\r\n      me.areaSelect          = \"\"\r\n      me.asignaturaSelect    = \"\"\r\n      if(me.periodoSelect == null || me.periodoSelect == \"\" || me.periodoSelect == undefined){\r\n        me.$vs.notify({\r\n        text:'Seleccione una Evaluación Período por favor',\r\n        color:'warning',\r\n        iconPack: 'feather',\r\n        icon:'icon-check'})\r\n        return\r\n      }\r\n      this.$http.get(this.$server_url+'areas_salle')\r\n      .then(res => {\r\n        let datos = res.data\r\n        if(datos.length > 0){\r\n          me.arregloAreas = datos.filter(p => p.n_evaluacion == me.periodoSelect)\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n          console.log(error);\r\n      })\r\n    },\r\n    getAsignaturasFiltro(){\r\n      let me = this\r\n      me.asignaturaSelect  = \"\"\r\n      this.$http.get(this.$server_url+'asignaturas_area_salle/' + me.areaSelect.id_area)\r\n      .then(res => {\r\n        me.arregloAsignaturas= res.data;\r\n      })\r\n      .catch(function (error) {\r\n          console.log(error);\r\n      })\r\n    },\r\n    moverPreguntas(){\r\n      let me = this\r\n      if(me.periodoSelect == null || me.periodoSelect == undefined || me.periodoSelect == \"\"){\r\n        me.$vs.notify({\r\n        text:'Seleccione una período de evaluación por favor',\r\n        color:'warning',\r\n        iconPack: 'feather',\r\n        icon:'icon-check',\r\n        })\r\n        return\r\n      }\r\n      if(me.asignaturaSelect == null || me.asignaturaSelect == undefined || me.asignaturaSelect == \"\"){\r\n        me.$vs.notify({\r\n        text:'Seleccione una asignatura por favor',\r\n        color:'warning',\r\n        iconPack: 'feather',\r\n        icon:'icon-check',\r\n        })\r\n        return\r\n      }\r\n\r\n      let formData = new FormData();\r\n      formData.append('data_preguntas', JSON.stringify(me.preguntasRender));\r\n      formData.append('n_evaluacion',   me.periodoSelect)\r\n      formData.append('id_asignatura',  me.asignaturaSelect)\r\n      formData.append('user_created',   me.usuario.idusuario)\r\n      formData.append('duplicate',      me.duplicate)\r\n      me.$vs.loading()\r\n      this.$http.post(this.$server_url+'salle/MoverPreguntas', formData)\r\n      .then(res => {\r\n      me.$vs.loading.close()\r\n      if(res.data.status == 0){\r\n        me.$vs.notify({\r\n        text:res.data.message,\r\n        color:'warning',\r\n        iconPack: 'feather',\r\n        icon:'icon-check',\r\n        })\r\n        return\r\n      }\r\n      me.PreguntasNoIngresadas  = res.data.PreguntasNoIngresadas\r\n      let msg                   = `Se movio ${res.data.ingresadas}  preguntas correctamente `\r\n      me.$vs.notify({\r\n        text:msg,\r\n        color:'success',\r\n        iconPack: 'feather',\r\n        icon:'icon-check',\r\n        time:4000,\r\n        })\r\n        let datos = {\r\n          \"ingresadas\" : res.data.ingresadas ,\r\n          \"PreguntasNoIngresadas\":res.data.PreguntasNoIngresadas\r\n        }\r\n        me.$emit('changeMove',datos)\r\n      })\r\n    },\r\n    moverPreguntasInactivas(e){\r\n      me.$emit('changeMove',e)\r\n    }\r\n  }\r\n}\r\n</script>\r\n"]}]}