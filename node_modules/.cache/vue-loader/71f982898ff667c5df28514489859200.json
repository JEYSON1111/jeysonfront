{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\cuadernos\\cuadernos.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\cuadernos\\cuadernos.vue","mtime":1712682815709},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nimport Vue from 'vue'\r\nimport axios from 'axios'\r\nimport vSelect from 'vue-select'\r\nexport default {\r\n    data() {\r\n        return{\r\n            usuario:[],\r\n            cuadernos:[],\r\n            asignaturas:[],\r\n            activeConfirm:false,\r\n            popupEditCuaderno:false,\r\n            update:false,\r\n            id:0,\r\n            idcuaderno:0,\r\n            popupAddCuaderno:false,\r\n            cuaderno:{\r\n                nombrecuaderno:'',\r\n                descripcioncuaderno:'',\r\n                webcuaderno:'',\r\n                execuaderno:'',\r\n                pdfconguia:'',\r\n                pdfsinguia:'',\r\n                guiadidactica:'',\r\n                zipcuaderno:'',\r\n                asignatura:'',\r\n                portada:'',\r\n            },\r\n            permisoRoot:false,\r\n        }\r\n    },\r\n    components: {\r\n        'v-select': vSelect,      \r\n    },\r\n    methods:{\r\n        //para obtener el listado de los usuarios root\r\n        getUserRoot() {\r\n            let me = this;\r\n            this.$http.get(this.$server_url+'permisos?permiso=yes&usuario_id='+me.usuario.idusuario)\r\n                .then(function (res) {\r\n                    if(res.data.status == '1'){\r\n                        me.permisoRoot = true\r\n                    }else{\r\n                        me.permisoRoot = false\r\n                    }\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                })\r\n        },\r\n        //para obtener el listado de los cuadernos\r\n        getCuadernos() {\r\n            let me = this;\r\n            me.$vs.loading();\r\n            this.$http.get(this.$server_url+'getCuadernos')\r\n                .then(function (res) {\r\n                    me.cuadernos = res.data.cuaderno\r\n                    me.$vs.loading.close()\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                    me.$vs.loading.close()\r\n                })\r\n        },\r\n        //para obtener el listado de asignaturas\r\n        getAsinaturas() {\r\n            let me = this;\r\n            me.$vs.loading();\r\n            this.$http.get(this.$server_url+'getCuadernos')\r\n                .then(function (res) {\r\n                    me.asignaturas = res.data.asignaturas\r\n                    me.$vs.loading.close()\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                    me.$vs.loading.close()\r\n                })\r\n        },\r\n        //para eliminar la area\r\n        eliminarCuaderno() {\r\n            let me = this;\r\n            let formData = new FormData();\r\n            formData.append('idcuaderno',me.idcuaderno); \r\n            me.$vs.loading()\r\n            this.$http.post(this.$server_url+'cuadernoEliminar', formData)\r\n            .then(res => { \r\n            me.getCuadernos();\r\n            me.$vs.loading.close()\r\n            me.$vs.notify({\r\n            text:'Cuaderno eliminado con exito',\r\n            color:'success',\r\n            iconPack: 'feather',\r\n            icon:'icon-check'})\r\n            })\r\n        },\r\n        //para abrir el popup de confimacion para eliminar\r\n        openConfirm(idcuaderno){\r\n            let me = this;\r\n            me.idcuaderno = idcuaderno;\r\n            me.$vs.dialog({\r\n            type:'confirm',\r\n            color: 'danger',\r\n            title: `Confirmacion`,\r\n            text: 'Estas seguro de eliminar.',\r\n            accept:me.eliminarCuaderno\r\n            })\r\n        },\r\n        //para guardar los cuadernos\r\n        guardarCuaderno(){\r\n            let me = this;\r\n            let formData = new FormData();\r\n            if(me.update){\r\n                formData.append('crud',                 \"yes\");\r\n                formData.append('idcuaderno',           me.id);\r\n                formData.append('nombrecuaderno',       me.cuaderno.nombrecuaderno);\r\n                formData.append('descripcioncuaderno',  me.cuaderno.descripcioncuaderno);\r\n                formData.append('webcuaderno',          me.cuaderno.webcuaderno);\r\n                formData.append('execuaderno',          me.cuaderno.execuaderno);\r\n                formData.append('pdfconguia',           me.cuaderno.pdfconguia);\r\n                formData.append('pdfsinguia',           me.cuaderno.pdfsinguia);\r\n                formData.append('guiadidactica',        me.cuaderno.guiadidactica);\r\n                formData.append('zipcuaderno',          me.cuaderno.zipcuaderno);\r\n                formData.append('asignatura_idasignatura', me.cuaderno.asignatura.idasignatura);\r\n                formData.append('portada',              me.cuaderno.portada);\r\n            }else{\r\n                formData.append('crud',                 \"yes\");\r\n                formData.append('nombrecuaderno',       me.cuaderno.nombrecuaderno);\r\n                formData.append('descripcioncuaderno',  me.cuaderno.descripcioncuaderno);\r\n                formData.append('webcuaderno',          me.cuaderno.webcuaderno);\r\n                formData.append('execuaderno',          me.cuaderno.execuaderno);\r\n                formData.append('pdfconguia',           me.cuaderno.pdfconguia);\r\n                formData.append('pdfsinguia',           me.cuaderno.pdfsinguia);\r\n                formData.append('guiadidactica',        me.cuaderno.guiadidactica);\r\n                formData.append('zipcuaderno',          me.cuaderno.zipcuaderno);\r\n                formData.append('asignatura_idasignatura', me.cuaderno.asignatura.idasignatura);\r\n            }\r\n            me.$vs.loading();\r\n            this.$http.post(this.$server_url+'cuadernos', formData)\r\n                .then(function (res) {\r\n                    me.$vs.notify({\r\n                        text: res.data.message,\r\n                        color: 'primary',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-alert-triangle'\r\n                    })\r\n                    me.getCuadernos()\r\n                    me.popupAddCuaderno=false,\r\n                    me.popupEditCuaderno=false,\r\n                    me.update = false;\r\n                    limpiar()\r\n                    me.$vs.loading.close();\r\n                })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close();\r\n                })\r\n        },\r\n        //para editar los campos\r\n        openModalEditar(data={}){\r\n            let me = this;\r\n            me.popupEditCuaderno = true;\r\n            //llenar la data en los campos\r\n            me.id = data.idcuaderno;\r\n            me.cuaderno.nombrecuaderno = data.nombrecuaderno;\r\n            me.cuaderno.descripcioncuaderno = data.descripcioncuaderno;\r\n            me.cuaderno.webcuaderno = data.webcuaderno;\r\n            me.cuaderno.execuaderno = data.execuaderno;\r\n            me.cuaderno.pdfconguia = data.pdfconguia;\r\n            me.cuaderno.pdfsinguia = data.pdfsinguia;\r\n            me.cuaderno.guiadidactica = data.guiadidactica;\r\n            me.cuaderno.zipcuaderno = data.zipcuaderno;\r\n            me.cuaderno.portada = data.portada;\r\n            me.cuaderno.asignatura = {idasignatura:data.asignatura_idasignatura, nombreasignatura:data.nombreasignatura};\r\n        },\r\n        //para limpiar los campos\r\n        limpiar(){\r\n           let me = this;\r\n           me.cuaderno.nombrecuaderno = \"\";\r\n           me.cuaderno.descripcioncuaderno = \"\";\r\n           me.cuaderno.webcuaderno = \"\";\r\n           me.cuaderno.execuaderno = \"\";\r\n           me.cuaderno.pdfconguia = \"\";\r\n           me.cuaderno.pdfsinguia = \"\";\r\n           me.cuaderno.guiadidactica = \"\";\r\n           me.cuaderno.zipcuaderno = \"\";\r\n           me.cuaderno.asignatura = \"\";\r\n           me.cuaderno.portada = \"\"; \r\n        },\r\n        //para ver el libro sin guia en el admin\r\n        datopdfsinguia(data={}) {\r\n            let me = this\r\n            if (data.pdfsinguia === null || data.pdfsinguia === 'null') {\r\n                me.$vs.notify({\r\n                    text: 'El PDF sin guía aun no está disponible',\r\n                    color: 'warning',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-alert-triangle'\r\n                })\r\n                return\r\n            }\r\n            localStorage.url = data.pdfsinguia;\r\n            let route = this.$router.resolve({path: '/admin/cuaderno/pdfsinguia'});\r\n            window.open(route.href, '_blank');\r\n        },\r\n        //para ver el cuaderno con guia en el admin\r\n        datopdfconguia(data={}) {\r\n            let me = this\r\n            if (data.pdfconguia === null || data.pdfconguia === 'null') {\r\n                me.$vs.notify({\r\n                    text: 'El PDF con guía aun no está disponible',\r\n                    color: 'warning',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-alert-triangle'\r\n                })\r\n                return\r\n            }\r\n            localStorage.url = data.pdfconguia;\r\n            let route = this.$router.resolve({path: '/admin/cuaderno/pdfconguia'});\r\n            window.open(route.href, '_blank');\r\n        },\r\n        datopdfguiadidactica(data={}) {\r\n            let me = this\r\n            if (data.guiadidactica === null || data.guiadidactica === 'null') {\r\n                me.$vs.notify({\r\n                    text: 'La guía didáctica aun no está disponible',\r\n                    color: 'warning',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-alert-triangle'\r\n                })\r\n                return\r\n            }\r\n            localStorage.url = data.guiadidactica;\r\n            let route = this.$router.resolve({path: '/admin/cuaderno/pdfguiadidactica'});\r\n            window.open(route.href, '_blank');\r\n        },\r\n    },\r\n    created(){\r\n        this.usuario = JSON.parse(localStorage.getItem(\"usuario\"))\r\n        this.getCuadernos();\r\n        this.getAsinaturas();\r\n        this.getUserRoot()\r\n    }\r\n}\r\n",{"version":3,"sources":["cuadernos.vue"],"names":[],"mappings":";AAofile":"cuadernos.vue","sourceRoot":"src/views/cuadernos","sourcesContent":["<template>\r\n    <div>\r\n        <div v-if=\"cuadernos.length >0 \">\r\n            <vs-button color=\"dark\" v-if=\"permisoRoot\" class=\"mt-2\" @click=\"limpiar();popupAddCuaderno=true;\" type=\"filled\">Crear Cuaderno</vs-button>\r\n            <vs-table max-items=\"10\" search pagination :data=\"cuadernos\">\r\n                <template slot=\"header\">\r\n                    <vs-chip  color=\"primary\">Cantidad: <b> {{ cuadernos.length }}</b></vs-chip>\r\n                </template>\r\n                <template slot=\"thead\">\r\n                    <vs-th>Cuaderno</vs-th>\r\n                    <vs-th>Web Cuaderno</vs-th>\r\n                    <vs-th>Asignatura</vs-th>\r\n                    <vs-th>Pdfs</vs-th>\r\n                    <vs-th>Portada</vs-th>\r\n                    <vs-th>Acciones</vs-th>\r\n                </template>\r\n                <template slot-scope=\"{data}\">\r\n                    <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\"> \r\n                        <vs-td>\r\n                            {{data[indextr].nombrecuaderno}}<br>\r\n                            <p style=\"font-size:11px;\"> Descrip. {{data[indextr].descripcioncuaderno}}</p>\r\n                        </vs-td>\r\n                        <vs-td>\r\n                             {{data[indextr].webcuaderno}}<br>\r\n                             <p style=\"font-size:11px;\"> zip. {{data[indextr].zipcuaderno}}</p>\r\n                        </vs-td>\r\n                        <vs-td>\r\n                            {{data[indextr].nombreasignatura}}<br>\r\n                        </vs-td>\r\n                        <vs-td>\r\n                            <span @click=\"datopdfsinguia(data[indextr])\"  >\r\n                                SG: <p style=\"cursor:pointer;color:coral; text-decoration: underline;\">{{data[indextr].pdfsinguia}}</p> \r\n                            </span>\r\n                            <span @click=\"datopdfconguia(data[indextr])\">\r\n                                G: <p style=\"cursor:pointer;color:coral; text-decoration: underline;\">{{data[indextr].pdfconguia}}</p> \r\n                            </span>\r\n                             <span  @click=\"datopdfguiadidactica(data[indextr])\">\r\n                                G. Didactica: <p style=\"cursor:pointer;color:coral; text-decoration: underline;\">{{data[indextr].guiadidactica}}</p>\r\n                            </span>\r\n                        </vs-td>\r\n                        <vs-td>\r\n                            <a style=\"cursor:pointer;\" >\r\n                                <img v-if=\"data[indextr].weblibro != null \"  class=\"responsive card-img-top image\"  v-bind:src=\"$data_url+'archivos/upload/cuadernodigital/'+data[indextr].webcuaderno+'/portada.jpg'\" alt=\"Card image cap\">\r\n                                <img v-else class=\"responsive card-img-top image\" v-bind:src=\"$data_url+'archivos/upload/cuadernodigital/'+data[indextr].webcuaderno+'/portada.jpg'\" width=\"50\" alt=\"Card image cap\">\r\n                            </a>\r\n                        </vs-td>\r\n                        <vs-td style=\"display:flex;\">\r\n                            <vx-tooltip style=\"display: inline-block;\" text=\"Editar cuaderno\" position=\"top\" color=\"primary\">\r\n                                <vs-button class=\"modal-default-button\" size=\"small\"  color=\"success\" @click=\"update=true;openModalEditar(data[indextr])\" type=\"filled\" icon-pack=\"feather\" icon=\"icon-edit\"> </vs-button>\r\n                            </vx-tooltip> &nbsp;\r\n                            <vx-tooltip style=\"display: inline-block;\"   text=\"Eliminar cuaderno\" position=\"top\" color=\"primary\">\r\n                                <vs-button class=\"modal-default-button\" size=\"small\" color=\"danger\" @click=\"openConfirm(data[indextr].idcuaderno)\" type=\"filled\" icon-pack=\"feather\" icon=\"icon-x-square\"> </vs-button>\r\n                            </vx-tooltip> &nbsp;\r\n                        </vs-td>\r\n                    </vs-tr>\r\n                </template>\r\n            </vs-table>   \r\n        </div>\r\n        <div v-else class=\"p-3\">\r\n            <p> No existe areas aun. </p>\r\n        </div>\r\n        <!--PARA LOS MODALES -->\r\n        <!-- Modal Agregar-->\r\n        <div class=\"demo-alignment\">\r\n            <vs-popup classContent=\"popup-example\" title=\"Agregar Cuaderno\" :active.sync=\"popupAddCuaderno\">\r\n                <vs-input class=\"inputx mb-3 w-full\" label=\"Nombre Cuaderno\" v-model=\"cuaderno.nombrecuaderno\" />\r\n                <vs-input class=\"inputx mb-3 w-full\" label=\"Descripcion Cuaderno\" v-model=\"cuaderno.descripcioncuaderno\" />\r\n                <vs-input class=\"inputx mb-3 w-full\" label=\"Web Cuaderno\" v-model=\"cuaderno.webcuaderno\" />\r\n                <vs-input class=\"inputx mb-3 w-full\" label=\"Exe Cuaderno\" v-model=\"cuaderno.execuaderno\" />\r\n                <vs-input class=\"inputx mb-3 w-full\" label=\"Pdf con guia\" v-model=\"cuaderno.pdfconguia\" />\r\n                <vs-input class=\"inputx mb-3 w-full\" label=\"Pdf sin guia\" v-model=\"cuaderno.pdfsinguia\" />\r\n                <vs-input class=\"inputx mb-3 w-full\" label=\"Guia didactica\" v-model=\"cuaderno.guiadidactica\" />\r\n                <vs-input class=\"inputx mb-3 w-full\" label=\"Zip Cuaderno\" v-model=\"cuaderno.zipcuaderno\" />\r\n                Asignatura\r\n                <v-select :options=\"asignaturas\" :reduce=\"asignaturas => asignaturas\" label=\"nombreasignatura\" class=\"w-full\" v-model=\"cuaderno.asignatura\" />\r\n                 <br><br>       \r\n                <vs-button color=\"success\" class=\"w-full mb-3\" @click=\"guardarCuaderno()\" type=\"gradient\" >Guardar</vs-button>\r\n            </vs-popup>\r\n        </div>\r\n        <!-- Modal Editar-->\r\n        <div class=\"demo-alignment\">\r\n            <vs-popup classContent=\"popup-example\" title=\"Editar Area\" :active.sync=\"popupEditCuaderno\">\r\n              <vs-input class=\"inputx mb-3 w-full\" label=\"Nombre Cuaderno\" v-model=\"cuaderno.nombrecuaderno\" />\r\n                <vs-input class=\"inputx mb-3 w-full\" label=\"Descripcion Cuaderno\" v-model=\"cuaderno.descripcioncuaderno\" />\r\n                <vs-input class=\"inputx mb-3 w-full\" label=\"Web Cuaderno\" v-model=\"cuaderno.webcuaderno\" />\r\n                <vs-input class=\"inputx mb-3 w-full\" label=\"Exe Cuaderno\" v-model=\"cuaderno.execuaderno\" />\r\n                <vs-input class=\"inputx mb-3 w-full\" label=\"Pdf con guia\" v-model=\"cuaderno.pdfconguia\" />\r\n                <vs-input class=\"inputx mb-3 w-full\" label=\"Pdf sin guia\" v-model=\"cuaderno.pdfsinguia\" />\r\n                <vs-input class=\"inputx mb-3 w-full\" label=\"Guia didactica\" v-model=\"cuaderno.guiadidactica\" />\r\n                <vs-input class=\"inputx mb-3 w-full\" label=\"Zip Cuaderno\" v-model=\"cuaderno.zipcuaderno\" />\r\n                <vs-input class=\"inputx mb-3 w-full\" label=\"Portada\" v-model=\"cuaderno.portada\" />\r\n                Asignatura\r\n                <v-select :options=\"asignaturas\" :reduce=\"asignaturas => asignaturas\" label=\"nombreasignatura\" class=\"w-full\" v-model=\"cuaderno.asignatura\" />\r\n                 <br><br>       \r\n                <vs-button color=\"success\" class=\"w-full mb-3\" @click=\"guardarCuaderno()\" type=\"gradient\" >Guardar</vs-button>\r\n            </vs-popup>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport Vue from 'vue'\r\nimport axios from 'axios'\r\nimport vSelect from 'vue-select'\r\nexport default {\r\n    data() {\r\n        return{\r\n            usuario:[],\r\n            cuadernos:[],\r\n            asignaturas:[],\r\n            activeConfirm:false,\r\n            popupEditCuaderno:false,\r\n            update:false,\r\n            id:0,\r\n            idcuaderno:0,\r\n            popupAddCuaderno:false,\r\n            cuaderno:{\r\n                nombrecuaderno:'',\r\n                descripcioncuaderno:'',\r\n                webcuaderno:'',\r\n                execuaderno:'',\r\n                pdfconguia:'',\r\n                pdfsinguia:'',\r\n                guiadidactica:'',\r\n                zipcuaderno:'',\r\n                asignatura:'',\r\n                portada:'',\r\n            },\r\n            permisoRoot:false,\r\n        }\r\n    },\r\n    components: {\r\n        'v-select': vSelect,      \r\n    },\r\n    methods:{\r\n        //para obtener el listado de los usuarios root\r\n        getUserRoot() {\r\n            let me = this;\r\n            this.$http.get(this.$server_url+'permisos?permiso=yes&usuario_id='+me.usuario.idusuario)\r\n                .then(function (res) {\r\n                    if(res.data.status == '1'){\r\n                        me.permisoRoot = true\r\n                    }else{\r\n                        me.permisoRoot = false\r\n                    }\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                })\r\n        },\r\n        //para obtener el listado de los cuadernos\r\n        getCuadernos() {\r\n            let me = this;\r\n            me.$vs.loading();\r\n            this.$http.get(this.$server_url+'getCuadernos')\r\n                .then(function (res) {\r\n                    me.cuadernos = res.data.cuaderno\r\n                    me.$vs.loading.close()\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                    me.$vs.loading.close()\r\n                })\r\n        },\r\n        //para obtener el listado de asignaturas\r\n        getAsinaturas() {\r\n            let me = this;\r\n            me.$vs.loading();\r\n            this.$http.get(this.$server_url+'getCuadernos')\r\n                .then(function (res) {\r\n                    me.asignaturas = res.data.asignaturas\r\n                    me.$vs.loading.close()\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                    me.$vs.loading.close()\r\n                })\r\n        },\r\n        //para eliminar la area\r\n        eliminarCuaderno() {\r\n            let me = this;\r\n            let formData = new FormData();\r\n            formData.append('idcuaderno',me.idcuaderno); \r\n            me.$vs.loading()\r\n            this.$http.post(this.$server_url+'cuadernoEliminar', formData)\r\n            .then(res => { \r\n            me.getCuadernos();\r\n            me.$vs.loading.close()\r\n            me.$vs.notify({\r\n            text:'Cuaderno eliminado con exito',\r\n            color:'success',\r\n            iconPack: 'feather',\r\n            icon:'icon-check'})\r\n            })\r\n        },\r\n        //para abrir el popup de confimacion para eliminar\r\n        openConfirm(idcuaderno){\r\n            let me = this;\r\n            me.idcuaderno = idcuaderno;\r\n            me.$vs.dialog({\r\n            type:'confirm',\r\n            color: 'danger',\r\n            title: `Confirmacion`,\r\n            text: 'Estas seguro de eliminar.',\r\n            accept:me.eliminarCuaderno\r\n            })\r\n        },\r\n        //para guardar los cuadernos\r\n        guardarCuaderno(){\r\n            let me = this;\r\n            let formData = new FormData();\r\n            if(me.update){\r\n                formData.append('crud',                 \"yes\");\r\n                formData.append('idcuaderno',           me.id);\r\n                formData.append('nombrecuaderno',       me.cuaderno.nombrecuaderno);\r\n                formData.append('descripcioncuaderno',  me.cuaderno.descripcioncuaderno);\r\n                formData.append('webcuaderno',          me.cuaderno.webcuaderno);\r\n                formData.append('execuaderno',          me.cuaderno.execuaderno);\r\n                formData.append('pdfconguia',           me.cuaderno.pdfconguia);\r\n                formData.append('pdfsinguia',           me.cuaderno.pdfsinguia);\r\n                formData.append('guiadidactica',        me.cuaderno.guiadidactica);\r\n                formData.append('zipcuaderno',          me.cuaderno.zipcuaderno);\r\n                formData.append('asignatura_idasignatura', me.cuaderno.asignatura.idasignatura);\r\n                formData.append('portada',              me.cuaderno.portada);\r\n            }else{\r\n                formData.append('crud',                 \"yes\");\r\n                formData.append('nombrecuaderno',       me.cuaderno.nombrecuaderno);\r\n                formData.append('descripcioncuaderno',  me.cuaderno.descripcioncuaderno);\r\n                formData.append('webcuaderno',          me.cuaderno.webcuaderno);\r\n                formData.append('execuaderno',          me.cuaderno.execuaderno);\r\n                formData.append('pdfconguia',           me.cuaderno.pdfconguia);\r\n                formData.append('pdfsinguia',           me.cuaderno.pdfsinguia);\r\n                formData.append('guiadidactica',        me.cuaderno.guiadidactica);\r\n                formData.append('zipcuaderno',          me.cuaderno.zipcuaderno);\r\n                formData.append('asignatura_idasignatura', me.cuaderno.asignatura.idasignatura);\r\n            }\r\n            me.$vs.loading();\r\n            this.$http.post(this.$server_url+'cuadernos', formData)\r\n                .then(function (res) {\r\n                    me.$vs.notify({\r\n                        text: res.data.message,\r\n                        color: 'primary',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-alert-triangle'\r\n                    })\r\n                    me.getCuadernos()\r\n                    me.popupAddCuaderno=false,\r\n                    me.popupEditCuaderno=false,\r\n                    me.update = false;\r\n                    limpiar()\r\n                    me.$vs.loading.close();\r\n                })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close();\r\n                })\r\n        },\r\n        //para editar los campos\r\n        openModalEditar(data={}){\r\n            let me = this;\r\n            me.popupEditCuaderno = true;\r\n            //llenar la data en los campos\r\n            me.id = data.idcuaderno;\r\n            me.cuaderno.nombrecuaderno = data.nombrecuaderno;\r\n            me.cuaderno.descripcioncuaderno = data.descripcioncuaderno;\r\n            me.cuaderno.webcuaderno = data.webcuaderno;\r\n            me.cuaderno.execuaderno = data.execuaderno;\r\n            me.cuaderno.pdfconguia = data.pdfconguia;\r\n            me.cuaderno.pdfsinguia = data.pdfsinguia;\r\n            me.cuaderno.guiadidactica = data.guiadidactica;\r\n            me.cuaderno.zipcuaderno = data.zipcuaderno;\r\n            me.cuaderno.portada = data.portada;\r\n            me.cuaderno.asignatura = {idasignatura:data.asignatura_idasignatura, nombreasignatura:data.nombreasignatura};\r\n        },\r\n        //para limpiar los campos\r\n        limpiar(){\r\n           let me = this;\r\n           me.cuaderno.nombrecuaderno = \"\";\r\n           me.cuaderno.descripcioncuaderno = \"\";\r\n           me.cuaderno.webcuaderno = \"\";\r\n           me.cuaderno.execuaderno = \"\";\r\n           me.cuaderno.pdfconguia = \"\";\r\n           me.cuaderno.pdfsinguia = \"\";\r\n           me.cuaderno.guiadidactica = \"\";\r\n           me.cuaderno.zipcuaderno = \"\";\r\n           me.cuaderno.asignatura = \"\";\r\n           me.cuaderno.portada = \"\"; \r\n        },\r\n        //para ver el libro sin guia en el admin\r\n        datopdfsinguia(data={}) {\r\n            let me = this\r\n            if (data.pdfsinguia === null || data.pdfsinguia === 'null') {\r\n                me.$vs.notify({\r\n                    text: 'El PDF sin guía aun no está disponible',\r\n                    color: 'warning',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-alert-triangle'\r\n                })\r\n                return\r\n            }\r\n            localStorage.url = data.pdfsinguia;\r\n            let route = this.$router.resolve({path: '/admin/cuaderno/pdfsinguia'});\r\n            window.open(route.href, '_blank');\r\n        },\r\n        //para ver el cuaderno con guia en el admin\r\n        datopdfconguia(data={}) {\r\n            let me = this\r\n            if (data.pdfconguia === null || data.pdfconguia === 'null') {\r\n                me.$vs.notify({\r\n                    text: 'El PDF con guía aun no está disponible',\r\n                    color: 'warning',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-alert-triangle'\r\n                })\r\n                return\r\n            }\r\n            localStorage.url = data.pdfconguia;\r\n            let route = this.$router.resolve({path: '/admin/cuaderno/pdfconguia'});\r\n            window.open(route.href, '_blank');\r\n        },\r\n        datopdfguiadidactica(data={}) {\r\n            let me = this\r\n            if (data.guiadidactica === null || data.guiadidactica === 'null') {\r\n                me.$vs.notify({\r\n                    text: 'La guía didáctica aun no está disponible',\r\n                    color: 'warning',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-alert-triangle'\r\n                })\r\n                return\r\n            }\r\n            localStorage.url = data.guiadidactica;\r\n            let route = this.$router.resolve({path: '/admin/cuaderno/pdfguiadidactica'});\r\n            window.open(route.href, '_blank');\r\n        },\r\n    },\r\n    created(){\r\n        this.usuario = JSON.parse(localStorage.getItem(\"usuario\"))\r\n        this.getCuadernos();\r\n        this.getAsinaturas();\r\n        this.getUserRoot()\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.image{\r\n    width: 50px;\r\n    border-radius: 5px;\r\n    margin-bottom: 50px;\r\n}\r\n</style>"]}]}