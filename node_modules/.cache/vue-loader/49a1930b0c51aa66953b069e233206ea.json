{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\temporadas\\components\\TableVerificados.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\temporadas\\components\\TableVerificados.vue","mtime":1712682816595},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nexport default{\r\n  data(){\r\n    return{\r\n      usuario:[],\r\n      userAsesor:false,\r\n      titleTipoPago:'',\r\n      tmpCodigos:[],\r\n      filtro:0,\r\n    }\r\n  },\r\n  props:{\r\n      arregloVerificados:{\r\n          type:Array,\r\n          default:[]\r\n      },\r\n      verTipo:{\r\n          type:Number,\r\n          default:2\r\n      },\r\n      desdePedido:{\r\n          type:Number,\r\n          default:0\r\n      },\r\n      sendPedido:{\r\n          type:Object,\r\n          default:{}\r\n      },\r\n      setcobro_venta_directa:{\r\n        type:Number,\r\n        default:0\r\n      },\r\n      settipoPago:{\r\n        type:Number,\r\n        default:0,\r\n      },\r\n      datosInstitucion:{\r\n        type:Object,\r\n        default:function(){\r\n          return {}\r\n        }\r\n      },\r\n      arrayCodigosVerificacion:{\r\n        type:Array,\r\n        default:function(){\r\n          return []\r\n        }\r\n      }\r\n    },\r\n    watch:{\r\n      setcobro_venta_directa(results){\r\n        let me = this;\r\n        me.setcobro_venta_directa = results\r\n        me.setearWords()\r\n      },\r\n      settipoPago(results){\r\n        let me = this\r\n        me.settipoPago = results\r\n        me.setearWords()\r\n      },\r\n      arrayCodigosVerificacion(results){\r\n        let me = this\r\n        me.arrayCodigosVerificacion = results\r\n        me.tmpCodigos = me.arrayCodigosVerificacion\r\n        me.filtroCodigos()\r\n      }\r\n    },\r\n    created(){\r\n      let me = this;\r\n      me.usuario = JSON.parse(localStorage.getItem(\"usuario\"))\r\n    },\r\n    mounted(){\r\n      let me  =this\r\n      if(me.usuario.id_group == 11) me.userAsesor = true\r\n      me.tmpCodigos = me.arrayCodigosVerificacion\r\n      me.filtroCodigos()\r\n      me.setearWords()\r\n    },\r\n    computed:{\r\n      //sumar la cantidad de todos los codigos\r\n      sumaTodos(){\r\n        let me        = this;\r\n        let resultado = 0\r\n        resultado = me.arrayCodigosVerificacion.length\r\n        return resultado\r\n      },\r\n      //suma los que tiene venta directa\r\n      sumaVentaDirecta(){\r\n        let me        = this;\r\n        let resultado = 0\r\n        resultado = me.arrayCodigosVerificacion.filter(x => x.venta_estado == '1' && x.estado_liquidacion == '0').length\r\n        return resultado\r\n      },\r\n      //suma los que tiene venta lista\r\n      sumaVentaLista(){\r\n        let me        = this;\r\n        let resultado = 0\r\n        resultado = me.arrayCodigosVerificacion.filter(x => x.venta_estado == '2' && x.estado_liquidacion == '0').length\r\n        return resultado\r\n      },\r\n      //suma los que tiene regalados\r\n      sumaRegalados(){\r\n        let me        = this;\r\n        let resultado = 0\r\n        resultado = me.arrayCodigosVerificacion.filter(x => x.estado_liquidacion == 2).length\r\n        return resultado\r\n      },\r\n    },\r\n    methods:{\r\n      setearWords(){\r\n        let me = this;\r\n        if(me.settipoPago  == 0) me.titleTipoPago = \"Tipo pago no configurado\"\r\n        if(me.settipoPago  == 1) me.titleTipoPago = \"Cancelar Total\"\r\n        if(me.settipoPago  == 2) me.titleTipoPago = \"Descontar\"\r\n        if(me.settipoPago  == 3) me.titleTipoPago = \"Regalado\"\r\n      },\r\n      verCodigos(tr){\r\n        let me = this;\r\n        let datos = {\r\n          tipo:me.verTipo,\r\n          filtro:me.filtro,\r\n          data:tr\r\n        }\r\n        me.$emit('recharge',datos)\r\n      },\r\n      filtroCodigos(){\r\n        let me = this;\r\n        me.tmpCodigos = []\r\n        let datos     = []\r\n        if(me.filtro == 0) datos = me.arrayCodigosVerificacion\r\n        if(me.filtro == 1) datos = me.arrayCodigosVerificacion.filter(x => x.venta_estado == 1 && x.estado_liquidacion == 0)\r\n        if(me.filtro == 2) datos = me.arrayCodigosVerificacion.filter(x => x.venta_estado == 2 && x.estado_liquidacion == 0)\r\n        if(me.filtro == 3) datos = me.arrayCodigosVerificacion.filter(x => x.estado_liquidacion == 2)\r\n        console.log(\"uwu\",datos)\r\n        //agrupar\r\n        datos.forEach(item => {\r\n          const nombre_libro    = item.nombre_libro;\r\n          const codigo          = item.codigo;\r\n          const precio          = item.precio;\r\n          const libro_id        = item.libro_id;\r\n          const IdVerificacion  = item.IdVerificacion;\r\n          const verificacion_id = item.verificacion_id;\r\n          const libro_idlibro   = item.libro_idlibro;\r\n          // Busca si ya existe un objeto con el mismo libro en groupedData\r\n          const existingGroup = me.tmpCodigos.find(group => group.nombre_libro === nombre_libro);\r\n          // Si no existe, crea un nuevo objeto y agrégalo a groupedData\r\n          if (!existingGroup) {\r\n            me.tmpCodigos.push({ nombre_libro, codigo, precio, libro_id, IdVerificacion,verificacion_id, libro_idlibro ,cantidad: 1,  });\r\n          } else {\r\n            // Si existe, incrementa la cantidad en el objeto existente\r\n            existingGroup.cantidad++;\r\n          }\r\n        });\r\n        me.tmpCodigos.map((item) => {\r\n          item.valor        = item.precio * item.cantidad\r\n          me.sumaTotalVALOR += item.valor\r\n        });\r\n      }\r\n    }\r\n}\r\n",{"version":3,"sources":["TableVerificados.vue"],"names":[],"mappings":";AAsfile":"TableVerificados.vue","sourceRoot":"src/views/temporadas/components","sourcesContent":["<template>\r\n  <div>\r\n    <div v-if=\"desdePedido == 1\" class=\"flex justify-start mt-5\">\r\n      <div v-if=\"setcobro_venta_directa == '0'\">\r\n        <p v-if=\"!userAsesor\"  class=\"text-danger text-center\">Cobro de venta directa no configurado <span class=\"font-bold\">(Tipo Pago: {{ titleTipoPago }})  </span> </p>\r\n      </div>\r\n      <div v-if=\"setcobro_venta_directa == '1'\">\r\n        <p class=\"text-success text-center\">Cobro venta directa 100%   <span class=\"font-bold\">(Tipo Pago: {{ titleTipoPago }})  </span></p>\r\n      </div>\r\n      <div v-if=\"setcobro_venta_directa == '2'\">\r\n        <p class=\"text-success text-center\">Cobro venta directa Comision %{{ sendPedido.descuento  }} de la escuela <span class=\"font-bold\">(Tipo Pago: {{ titleTipoPago }})  </span></p>\r\n      </div>\r\n      <div v-if=\"setcobro_venta_directa == '3'\">\r\n        <p class=\"text-success text-center\">% Descuento Personalizado</p>\r\n      </div>\r\n    </div>\r\n    <ul class=\"flex mt-5\">\r\n      <li>\r\n        <vs-radio v-model=\"filtro\" @input=\"filtroCodigos();\" class=\"mr-3\" vs-name=\"radios1filtro\" vs-value=\"0\">Todo <b>{{ sumaTodos }}</b></vs-radio>\r\n      </li>\r\n      <li>\r\n        <vs-radio v-model=\"filtro\" @input=\"filtroCodigos();\" class=\"mr-3\" vs-name=\"radios1filtro\" vs-value=\"1\">Venta directa <b>{{ sumaVentaDirecta }}</b></vs-radio>\r\n      </li>\r\n      <li>\r\n        <vs-radio v-model=\"filtro\" @input=\"filtroCodigos();\" class=\"mr-3\" vs-name=\"radios1filtro\" vs-value=\"2\">Venta lista <b>{{ sumaVentaLista}}</b></vs-radio>\r\n      </li>\r\n      <li>\r\n        <vs-radio v-model=\"filtro\" @input=\"filtroCodigos();\" class=\"mr-3\" vs-name=\"radios1filtro\" vs-value=\"3\">Regalados <b>{{ sumaRegalados }}</b></vs-radio>\r\n      </li>\r\n    </ul>\r\n    <div>\r\n      <vs-table max-items=\"10\" search pagination :data=\"tmpCodigos\" class=\"\">\r\n        <template slot=\"header\">\r\n          <vs-chip>Cantidad de filas: {{ tmpCodigos.length }}</vs-chip>\r\n        </template>\r\n        <template slot=\"thead\">\r\n            <vs-th>Libro</vs-th>\r\n            <vs-th>Código Liquidación</vs-th>\r\n            <vs-th>Cantidad</vs-th>\r\n            <vs-th>Precio</vs-th>\r\n            <vs-th>Valor</vs-th>\r\n            <vs-th>Acciones</vs-th>\r\n        </template>\r\n        <template slot-scope=\"{data}\">\r\n            <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                <vs-td>\r\n                    {{data[indextr].nombre_libro}}<br>\r\n                </vs-td>\r\n                <vs-td>\r\n                    {{data[indextr].codigo}}<br>\r\n                </vs-td>\r\n                <vs-td>\r\n                    {{tr.cantidad}}\r\n                </vs-td>\r\n                <vs-td>\r\n                {{tr.precio}}\r\n                </vs-td>\r\n                <vs-td>\r\n                ${{ tr.valor | filtrarDecimal }}\r\n                </vs-td>\r\n                <vs-td>\r\n                    <vs-button color=\"success\" type=\"relief\" @click=\"verCodigos(tr)\" icon=\"code\">Ver códigos</vs-button>\r\n                </vs-td>\r\n            </vs-tr>\r\n        </template>\r\n      </vs-table>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default{\r\n  data(){\r\n    return{\r\n      usuario:[],\r\n      userAsesor:false,\r\n      titleTipoPago:'',\r\n      tmpCodigos:[],\r\n      filtro:0,\r\n    }\r\n  },\r\n  props:{\r\n      arregloVerificados:{\r\n          type:Array,\r\n          default:[]\r\n      },\r\n      verTipo:{\r\n          type:Number,\r\n          default:2\r\n      },\r\n      desdePedido:{\r\n          type:Number,\r\n          default:0\r\n      },\r\n      sendPedido:{\r\n          type:Object,\r\n          default:{}\r\n      },\r\n      setcobro_venta_directa:{\r\n        type:Number,\r\n        default:0\r\n      },\r\n      settipoPago:{\r\n        type:Number,\r\n        default:0,\r\n      },\r\n      datosInstitucion:{\r\n        type:Object,\r\n        default:function(){\r\n          return {}\r\n        }\r\n      },\r\n      arrayCodigosVerificacion:{\r\n        type:Array,\r\n        default:function(){\r\n          return []\r\n        }\r\n      }\r\n    },\r\n    watch:{\r\n      setcobro_venta_directa(results){\r\n        let me = this;\r\n        me.setcobro_venta_directa = results\r\n        me.setearWords()\r\n      },\r\n      settipoPago(results){\r\n        let me = this\r\n        me.settipoPago = results\r\n        me.setearWords()\r\n      },\r\n      arrayCodigosVerificacion(results){\r\n        let me = this\r\n        me.arrayCodigosVerificacion = results\r\n        me.tmpCodigos = me.arrayCodigosVerificacion\r\n        me.filtroCodigos()\r\n      }\r\n    },\r\n    created(){\r\n      let me = this;\r\n      me.usuario = JSON.parse(localStorage.getItem(\"usuario\"))\r\n    },\r\n    mounted(){\r\n      let me  =this\r\n      if(me.usuario.id_group == 11) me.userAsesor = true\r\n      me.tmpCodigos = me.arrayCodigosVerificacion\r\n      me.filtroCodigos()\r\n      me.setearWords()\r\n    },\r\n    computed:{\r\n      //sumar la cantidad de todos los codigos\r\n      sumaTodos(){\r\n        let me        = this;\r\n        let resultado = 0\r\n        resultado = me.arrayCodigosVerificacion.length\r\n        return resultado\r\n      },\r\n      //suma los que tiene venta directa\r\n      sumaVentaDirecta(){\r\n        let me        = this;\r\n        let resultado = 0\r\n        resultado = me.arrayCodigosVerificacion.filter(x => x.venta_estado == '1' && x.estado_liquidacion == '0').length\r\n        return resultado\r\n      },\r\n      //suma los que tiene venta lista\r\n      sumaVentaLista(){\r\n        let me        = this;\r\n        let resultado = 0\r\n        resultado = me.arrayCodigosVerificacion.filter(x => x.venta_estado == '2' && x.estado_liquidacion == '0').length\r\n        return resultado\r\n      },\r\n      //suma los que tiene regalados\r\n      sumaRegalados(){\r\n        let me        = this;\r\n        let resultado = 0\r\n        resultado = me.arrayCodigosVerificacion.filter(x => x.estado_liquidacion == 2).length\r\n        return resultado\r\n      },\r\n    },\r\n    methods:{\r\n      setearWords(){\r\n        let me = this;\r\n        if(me.settipoPago  == 0) me.titleTipoPago = \"Tipo pago no configurado\"\r\n        if(me.settipoPago  == 1) me.titleTipoPago = \"Cancelar Total\"\r\n        if(me.settipoPago  == 2) me.titleTipoPago = \"Descontar\"\r\n        if(me.settipoPago  == 3) me.titleTipoPago = \"Regalado\"\r\n      },\r\n      verCodigos(tr){\r\n        let me = this;\r\n        let datos = {\r\n          tipo:me.verTipo,\r\n          filtro:me.filtro,\r\n          data:tr\r\n        }\r\n        me.$emit('recharge',datos)\r\n      },\r\n      filtroCodigos(){\r\n        let me = this;\r\n        me.tmpCodigos = []\r\n        let datos     = []\r\n        if(me.filtro == 0) datos = me.arrayCodigosVerificacion\r\n        if(me.filtro == 1) datos = me.arrayCodigosVerificacion.filter(x => x.venta_estado == 1 && x.estado_liquidacion == 0)\r\n        if(me.filtro == 2) datos = me.arrayCodigosVerificacion.filter(x => x.venta_estado == 2 && x.estado_liquidacion == 0)\r\n        if(me.filtro == 3) datos = me.arrayCodigosVerificacion.filter(x => x.estado_liquidacion == 2)\r\n        console.log(\"uwu\",datos)\r\n        //agrupar\r\n        datos.forEach(item => {\r\n          const nombre_libro    = item.nombre_libro;\r\n          const codigo          = item.codigo;\r\n          const precio          = item.precio;\r\n          const libro_id        = item.libro_id;\r\n          const IdVerificacion  = item.IdVerificacion;\r\n          const verificacion_id = item.verificacion_id;\r\n          const libro_idlibro   = item.libro_idlibro;\r\n          // Busca si ya existe un objeto con el mismo libro en groupedData\r\n          const existingGroup = me.tmpCodigos.find(group => group.nombre_libro === nombre_libro);\r\n          // Si no existe, crea un nuevo objeto y agrégalo a groupedData\r\n          if (!existingGroup) {\r\n            me.tmpCodigos.push({ nombre_libro, codigo, precio, libro_id, IdVerificacion,verificacion_id, libro_idlibro ,cantidad: 1,  });\r\n          } else {\r\n            // Si existe, incrementa la cantidad en el objeto existente\r\n            existingGroup.cantidad++;\r\n          }\r\n        });\r\n        me.tmpCodigos.map((item) => {\r\n          item.valor        = item.precio * item.cantidad\r\n          me.sumaTotalVALOR += item.valor\r\n        });\r\n      }\r\n    }\r\n}\r\n</script>\r\n"]}]}