{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\estudiantes\\evaluaciones.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\estudiantes\\evaluaciones.vue","mtime":1712682815829},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nimport flatPickr from 'vue-flatpickr-component';\r\nimport 'flatpickr/dist/flatpickr.css';\r\nimport Vue from 'vue'\r\nimport axios from 'axios'\r\nimport vSelect from 'vue-select'\r\nimport moment from 'moment'\r\nimport VueRouter from 'vue-router'\r\nexport default {\r\n    data() {\r\n        return {\r\n            evaluaciones: [],\r\n            evaluacion: {\r\n                nombre: '',\r\n                asignatura: '',\r\n                descripcion: '',\r\n                fecha_inicio: '',\r\n                fecha_fin: '',\r\n                estado: '',\r\n                puntos: '',\r\n            },\r\n            editarActivo: false,\r\n            usuario: [],\r\n            estudiante: null,\r\n            nombre_estudiante: null,\r\n            apellido_estudiante: null,\r\n            activeConfirm: false,\r\n            grupo_estudiante: '',\r\n            urlOrigen: '',\r\n        }\r\n    },\r\n    components: {\r\n        'v-select': vSelect,\r\n        flatPickr\r\n    },\r\n    created() {\r\n        this.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n        this.estudiante = this.usuario.idusuario\r\n        this.nombre_estudiante = this.usuario.nombres\r\n        this.apellido_estudiante = this.usuario.apellidos\r\n        \r\n        var urlBack = window.location.href\r\n        var urlV = urlBack.split('/')\r\n        this.urlOrigen = urlV[0]+'/'+urlV[1]+'/'+urlV[2]+'/responderEvaluacion'\r\n\r\n        this.verEvalPend();\r\n    },\r\n    methods: {\r\n        openConfirm(item) {\r\n            this.grupo_estudiante = item.grupo;\r\n            var date = moment();\r\n            var fecha_actual = date.format('YYYY-MM-DD HH:mm:ss');\r\n            if (fecha_actual < item.fecha_fin && fecha_actual > item.fecha_inicio) {\r\n                this.evaluacion.id = item.id;\r\n                this.$vs.dialog({\r\n                    type: 'confirm',\r\n                    color: 'primary',\r\n                    title: `Confirmar`,\r\n                    text: 'Resolver esta evaluación ahora',\r\n                    accept: this.irEvaluacion\r\n                })\r\n            } else {\r\n                this.$vs.notify({\r\n                text:'Esta evaluación aún no está disponible.',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-alert-circle'})\r\n            }\r\n        },\r\n        irEvaluacion() {\r\n            localStorage.setItem('id_evalRevisar', this.evaluacion.id);\r\n            localStorage.setItem('grupo_estudiante', this.grupo_estudiante);\r\n            //this.$router.push('/responderEvaluacion')\r\n            window.location.href = this.urlOrigen+'/'+this.evaluacion.id;\r\n        },\r\n        verEvalPend(){\r\n            this.evaluaciones = [];\r\n            this.$vs.loading()\r\n            let formData = new FormData();              \r\n                formData.append('codigo', localStorage.codigo);\r\n                formData.append('estudiante', this.usuario.idusuario);\r\n\r\n            this.$http.post(this.$server_url+'evaluacionesEstudianteCurso', formData).then(res => {\r\n                this.evaluaciones = res.data;\r\n                this.$vs.loading.close()\r\n            })\r\n        },\r\n        verEvalComplet(){\r\n            this.evaluaciones = [];\r\n            this.$vs.loading()\r\n            let formData = new FormData();              \r\n                formData.append('codigo', localStorage.codigo);\r\n                formData.append('estudiante', this.usuario.idusuario);\r\n\r\n            this.$http.post(this.$server_url+'evalCompleEstCurso', formData).then(res => {\r\n                this.evaluaciones = res.data;\r\n                this.$vs.loading.close()\r\n            })\r\n        },\r\n        irRevision(item){\r\n            localStorage.setItem('id_evalRevisar', item.id);\r\n            localStorage.setItem('grupo_estudiante', item.grupo); \r\n            this.$router.push('/revisarevaluacion')\r\n        }\r\n    },\r\n}\r\n",{"version":3,"sources":["evaluaciones.vue"],"names":[],"mappings":";AAufile":"evaluaciones.vue","sourceRoot":"src/views/estudiantes","sourcesContent":["<template>\r\n\r\n<div>\r\n\r\n<vx-card>\r\n    <vs-button color=\"primary\" type=\"border\" class=\"m-1\" @click=\"$router.go(-1)\"><b>← Volver</b></vs-button>\r\n\r\n    <vs-tabs alignment=\"fixed\">\r\n      <vs-tab label=\"Evaluaciones Pendientes\" @click=\"verEvalPend()\">\r\n        <div v-if=\"evaluaciones.length===0\" class=\"mt-6\">No tiene evaluaciones pendientes</div>\r\n        <div class=\"vx-row mb-6 mt-4\">\r\n            <vs-list :key=\"index\" v-for=\"(item, index) in evaluaciones\">\r\n                <vs-list-header color=\"#3BA0FF\" v-bind:title=\"'Evaluación '+(index + 1)\"></vs-list-header>\r\n                \r\n                <vs-list-item>\r\n                    <template slot=\"avatar\">\r\n                        Asignatura: {{item.nombreasignatura}}<br>\r\n                        Disponible: desde {{item.fecha_inicio}} hasta {{item.fecha_fin}}<br>\r\n                        Duración: {{item.duracion}} minutos<br>\r\n                        Puntos: {{item.puntos}}<br>\r\n                        Observaciones: {{item.descripcion}}\r\n                    </template>\r\n                    <vs-button @click=\"openConfirm(item);\" color=\"success\" class=\"m-1\">Resolver</vs-button>\r\n                </vs-list-item>\r\n            </vs-list>\r\n\r\n        </div>\r\n      </vs-tab>\r\n\r\n\r\n        <vs-tab label=\"Evaluaciones Completadas\" @click=\"verEvalComplet()\">\r\n            <div v-if=\"evaluaciones.length===0\" class=\"mt-6\">No tiene evaluaciones resueltas</div>\r\n            <div v-else align=\"right\">Click en la calificación para ver la evaluación resuelta.</div>\r\n            <vs-list :key=\"index\" v-for=\"(item, index) in evaluaciones\" class=\"mt-6\">\r\n                <vs-list-header color=\"#3BA0FF\" v-bind:title=\"'Evaluación '+(index + 1)\"></vs-list-header>\r\n                \r\n                <vs-list-item>\r\n                    <template slot=\"avatar\">\r\n                        Asignatura: {{item.nombreasignatura}}<br>\r\n                        Disponible: desde {{item.fecha_inicio}} hasta {{item.fecha_fin}}<br>\r\n                        Puntos: {{item.puntos}}<br>\r\n                        Observaciones: {{item.descripcion}}\r\n                    </template>\r\n                    \r\n                    <vs-button color=\"success\" type=\"border\" class=\"m-1\" @click=\"irRevision(item)\">{{item.calificacion}} - Ver</vs-button>\r\n                </vs-list-item>\r\n            </vs-list>\r\n        </vs-tab>\r\n    </vs-tabs>\r\n\r\n</vx-card>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport flatPickr from 'vue-flatpickr-component';\r\nimport 'flatpickr/dist/flatpickr.css';\r\nimport Vue from 'vue'\r\nimport axios from 'axios'\r\nimport vSelect from 'vue-select'\r\nimport moment from 'moment'\r\nimport VueRouter from 'vue-router'\r\nexport default {\r\n    data() {\r\n        return {\r\n            evaluaciones: [],\r\n            evaluacion: {\r\n                nombre: '',\r\n                asignatura: '',\r\n                descripcion: '',\r\n                fecha_inicio: '',\r\n                fecha_fin: '',\r\n                estado: '',\r\n                puntos: '',\r\n            },\r\n            editarActivo: false,\r\n            usuario: [],\r\n            estudiante: null,\r\n            nombre_estudiante: null,\r\n            apellido_estudiante: null,\r\n            activeConfirm: false,\r\n            grupo_estudiante: '',\r\n            urlOrigen: '',\r\n        }\r\n    },\r\n    components: {\r\n        'v-select': vSelect,\r\n        flatPickr\r\n    },\r\n    created() {\r\n        this.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n        this.estudiante = this.usuario.idusuario\r\n        this.nombre_estudiante = this.usuario.nombres\r\n        this.apellido_estudiante = this.usuario.apellidos\r\n        \r\n        var urlBack = window.location.href\r\n        var urlV = urlBack.split('/')\r\n        this.urlOrigen = urlV[0]+'/'+urlV[1]+'/'+urlV[2]+'/responderEvaluacion'\r\n\r\n        this.verEvalPend();\r\n    },\r\n    methods: {\r\n        openConfirm(item) {\r\n            this.grupo_estudiante = item.grupo;\r\n            var date = moment();\r\n            var fecha_actual = date.format('YYYY-MM-DD HH:mm:ss');\r\n            if (fecha_actual < item.fecha_fin && fecha_actual > item.fecha_inicio) {\r\n                this.evaluacion.id = item.id;\r\n                this.$vs.dialog({\r\n                    type: 'confirm',\r\n                    color: 'primary',\r\n                    title: `Confirmar`,\r\n                    text: 'Resolver esta evaluación ahora',\r\n                    accept: this.irEvaluacion\r\n                })\r\n            } else {\r\n                this.$vs.notify({\r\n                text:'Esta evaluación aún no está disponible.',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-alert-circle'})\r\n            }\r\n        },\r\n        irEvaluacion() {\r\n            localStorage.setItem('id_evalRevisar', this.evaluacion.id);\r\n            localStorage.setItem('grupo_estudiante', this.grupo_estudiante);\r\n            //this.$router.push('/responderEvaluacion')\r\n            window.location.href = this.urlOrigen+'/'+this.evaluacion.id;\r\n        },\r\n        verEvalPend(){\r\n            this.evaluaciones = [];\r\n            this.$vs.loading()\r\n            let formData = new FormData();              \r\n                formData.append('codigo', localStorage.codigo);\r\n                formData.append('estudiante', this.usuario.idusuario);\r\n\r\n            this.$http.post(this.$server_url+'evaluacionesEstudianteCurso', formData).then(res => {\r\n                this.evaluaciones = res.data;\r\n                this.$vs.loading.close()\r\n            })\r\n        },\r\n        verEvalComplet(){\r\n            this.evaluaciones = [];\r\n            this.$vs.loading()\r\n            let formData = new FormData();              \r\n                formData.append('codigo', localStorage.codigo);\r\n                formData.append('estudiante', this.usuario.idusuario);\r\n\r\n            this.$http.post(this.$server_url+'evalCompleEstCurso', formData).then(res => {\r\n                this.evaluaciones = res.data;\r\n                this.$vs.loading.close()\r\n            })\r\n        },\r\n        irRevision(item){\r\n            localStorage.setItem('id_evalRevisar', item.id);\r\n            localStorage.setItem('grupo_estudiante', item.grupo); \r\n            this.$router.push('/revisarevaluacion')\r\n        }\r\n    },\r\n}\r\n</script>"]}]}