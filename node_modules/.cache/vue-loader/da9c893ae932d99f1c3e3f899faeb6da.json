{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\pedidos\\gerencia\\reportes\\ReporteInstitucionVenta.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\pedidos\\gerencia\\reportes\\ReporteInstitucionVenta.vue","mtime":1712682816339},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nimport vSelect from 'vue-select'\r\nexport default{\r\n    data(){\r\n        return{\r\n            arregloReporte:[],\r\n            arregloPeriodos:[\r\n                {\r\n                    id:\"C22\",\r\n                    label:\"Costa 22\",\r\n                    region:'2'\r\n                },\r\n                {\r\n                    id:\"C21\",\r\n                    label:\"Costa 21\",\r\n                    region:'2'\r\n                },\r\n                {\r\n                    id:\"C20\",\r\n                    label:\"Costa 20\",\r\n                    region:'2'\r\n                },\r\n                {\r\n                    id:\"S22\",\r\n                    label:\"Sierra 22\",\r\n                    region:'2'\r\n                },\r\n                {\r\n                    id:\"S21\",\r\n                    label:\"Sierra 21\",\r\n                    region:'2'\r\n                },\r\n                {\r\n                    id:\"S20\",\r\n                    label:\"Sierra 20\",\r\n                    region:'2'\r\n                },\r\n            ],\r\n            periodoSelect:'',\r\n            //variables para el export a excel\r\n            activePrompt:false,\r\n            codigoSelected: [],\r\n            reportesActivo: 0,\r\n            fileName: null,\r\n            formats: ['xls', 'xlsx', 'csv', 'txt'],\r\n            cellAutoWidth: true,\r\n            selectedFormat: 'xls',\r\n        }\r\n    },\r\n    components:{\r\n        vSelect,\r\n    },\r\n    mounted(){\r\n        let me = this;\r\n    },\r\n    methods:{\r\n        getInstitucionesReporte(){\r\n            let me = this;\r\n            me.arregloReporte = []\r\n            if( me.periodoSelect == \"\" || me.periodoSelect == null || me.periodoSelect == undefined ){\r\n                me.$vs.notify({\r\n                text:'Seleccione un período por favor',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n                return\r\n            }\r\n            me.$vs.loading()\r\n            this.$http.get(this.$server_url+'reporteVentaInstituciones?periodo_id='+me.periodoSelect)\r\n                .then(function (res) {\r\n                    me.$vs.loading.close()\r\n                    let datos = res.data\r\n                    datos.forEach(element => {\r\n                        var cal = new Object();\r\n                        cal.VEN_VALOR   = parseFloat(element.VEN_VALOR).toFixed(2)\r\n                        cal.PERIODO     = element.PERIODO\r\n                        cal.ven_neta    = parseFloat(element.ven_neta).toFixed(2)\r\n                        cal.INSTITUCION = element.INSTITUCION\r\n                        cal.INS_CIUDAD  = element.INS_CIUDAD \r\n                        cal.CONTRATO    = element.CONTRATO \r\n                        cal.VENDEDOR    = element.VENDEDOR\r\n                        me.arregloReporte.push(cal)\r\n                    });\r\n                })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close()\r\n                    console.log(error + ' error');\r\n                })\r\n            \r\n        },\r\n        filtrarDecimal(numero){\r\n            let me = this\r\n            if(numero == 0){\r\n                return numero\r\n            }else{\r\n                let preNumero = parseFloat(numero)\r\n                const transformar = (preNumero).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\r\n                return transformar\r\n            }\r\n        },\r\n        //METODOS PARA EXCEL\r\n        //para limipiar los campos del excel\r\n        clearFields() {\r\n            this.fileName = ''\r\n            this.cellAutoWidth = true\r\n            this.selectedFormat = 'xls'\r\n        },\r\n        //metodo par descargar el excel\r\n        exportToExcel() {\r\n            let headerTitle = ['Institución','Ciudad','Contrato',  'Venta Bruta','Venta Neta','Vendedor'];\r\n            let headerVal = ['INSTITUCION', 'INS_CIUDAD','CONTRATO','VEN_VALOR','ven_neta','VENDEDOR'];  \r\n            let codigoSelectedMayus = this.codigoSelected\r\n            for (var i = 0; i < codigoSelectedMayus.length; i++) {\r\n                for (var key in codigoSelectedMayus[i]) {\r\n                    if (typeof codigoSelectedMayus[i][key] == \"string\") {\r\n                        codigoSelectedMayus[i][key] = codigoSelectedMayus[i][key].toUpperCase();\r\n                    }\r\n                }\r\n            }\r\n            import('@/vendor/Export2Excel').then(excel => {\r\n                const list = codigoSelectedMayus\r\n                const data = this.formatJson(headerVal, list)\r\n                excel.export_json_to_excel({\r\n                    header: headerTitle,\r\n                    data,\r\n                    filename: this.fileName,\r\n                    autoWidth: this.cellAutoWidth,\r\n                    bookType: this.selectedFormat\r\n                })\r\n                this.clearFields()\r\n                this.guardarActivo = '';\r\n                this.generarActivo = ' ';\r\n                this.textAlertCant = '';\r\n                this.cantidad = '';\r\n                this.codigoSelected = [];\r\n            })\r\n        },\r\n        formatJson(filterVal, jsonData) {\r\n            return jsonData.map(v => filterVal.map(j => {\r\n                return v[j]\r\n            }))\r\n        },\r\n    }\r\n}\r\n",{"version":3,"sources":["ReporteInstitucionVenta.vue"],"names":[],"mappings":";AAqfile":"ReporteInstitucionVenta.vue","sourceRoot":"src/views/pedidos/gerencia/reportes","sourcesContent":["<template>\r\n    <vx-card>\r\n        <div class=\"flex mt-5\">\r\n            <div style=\"width: 40%;\">\r\n                <p> <ion-icon name=\"contract-outline\"></ion-icon>  Filtro de instituciones por período</p>\r\n            </div>\r\n            <div style=\"width: 60%;\">\r\n                <v-select @input=\"getInstitucionesReporte()\" :options=\"arregloPeriodos\" :reduce=\"arregloPeriodos => arregloPeriodos.id\" label=\"label\" class=\"w-full\" v-model=\"periodoSelect\" />\r\n            </div>\r\n        </div>\r\n        <vs-divider></vs-divider>\r\n        <div v-if=\"arregloReporte.length > 0\">\r\n            <vs-table multiple v-model=\"codigoSelected\" max-items=\"10\" search pagination :data=\"arregloReporte\">\r\n                <template slot=\"header\">\r\n                    <vs-chip  color=\"primary\">Cantidad: <b> {{ arregloReporte.length }}</b></vs-chip>\r\n                    <span class=\"cursor-pointer\" @click=\"activePrompt=true;\"><vs-chip  color=\"success\" ><b><ion-icon name=\"download-outline\"></ion-icon> Exportar</b></vs-chip></span>\r\n                </template>\r\n                <template slot=\"thead\">\r\n                    <vs-th>Institución</vs-th>\r\n                    <vs-th>Venta bruta</vs-th>\r\n                    <vs-th>Venta neta</vs-th>\r\n                </template>\r\n                <template slot-scope=\"{data}\">\r\n                    <vs-tr :data=\"tr\" :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                        <vs-td>\r\n                            {{data[indextr].INSTITUCION}}<br>\r\n                            <p><b>Ciudad:</b> {{ tr.INS_CIUDAD }}</p>\r\n                            <p><b>Contrato:</b> {{ tr.CONTRATO }}</p>\r\n                            <p><b>Vendedor:</b> {{ tr.VENDEDOR }}</p>\r\n                        </vs-td>\r\n                        <vs-td>\r\n                            {{ filtrarDecimal(tr.VEN_VALOR) }}\r\n                        </vs-td>\r\n                        <vs-td>\r\n                            {{ filtrarDecimal(tr.ven_neta) }}\r\n                        </vs-td>\r\n                    </vs-tr>\r\n                </template>\r\n            </vs-table>    \r\n        </div>\r\n        <!--MODAL PARA EXPORTAR A EXCEL-->\r\n        <vs-prompt title=\"Exportar a Excel\" class=\"export-options\" @cancle=\"clearFields\" @accept=\"exportToExcel\" accept-text=\"Exportar\" @close=\"clearFields\" :active.sync=\"activePrompt\">\r\n        <vs-alert class=\"mb-3\" color=\"danger\" icon-pack=\"feather\" icon=\"icon-info\">\r\n            <span>Recuerde <b>seleccionar</b> los registros que desea exportar.</span>\r\n        </vs-alert>\r\n        <vs-input v-model=\"fileName\" placeholder=\"Ingrese el nombre del archivo\" class=\"w-full\" />\r\n        <v-select v-model=\"selectedFormat\" :options=\"formats\" class=\"my-4\" />\r\n        <div class=\"flex\">\r\n        </div>\r\n        </vs-prompt>\r\n    </vx-card>\r\n</template>\r\n<script>\r\nimport vSelect from 'vue-select'\r\nexport default{\r\n    data(){\r\n        return{\r\n            arregloReporte:[],\r\n            arregloPeriodos:[\r\n                {\r\n                    id:\"C22\",\r\n                    label:\"Costa 22\",\r\n                    region:'2'\r\n                },\r\n                {\r\n                    id:\"C21\",\r\n                    label:\"Costa 21\",\r\n                    region:'2'\r\n                },\r\n                {\r\n                    id:\"C20\",\r\n                    label:\"Costa 20\",\r\n                    region:'2'\r\n                },\r\n                {\r\n                    id:\"S22\",\r\n                    label:\"Sierra 22\",\r\n                    region:'2'\r\n                },\r\n                {\r\n                    id:\"S21\",\r\n                    label:\"Sierra 21\",\r\n                    region:'2'\r\n                },\r\n                {\r\n                    id:\"S20\",\r\n                    label:\"Sierra 20\",\r\n                    region:'2'\r\n                },\r\n            ],\r\n            periodoSelect:'',\r\n            //variables para el export a excel\r\n            activePrompt:false,\r\n            codigoSelected: [],\r\n            reportesActivo: 0,\r\n            fileName: null,\r\n            formats: ['xls', 'xlsx', 'csv', 'txt'],\r\n            cellAutoWidth: true,\r\n            selectedFormat: 'xls',\r\n        }\r\n    },\r\n    components:{\r\n        vSelect,\r\n    },\r\n    mounted(){\r\n        let me = this;\r\n    },\r\n    methods:{\r\n        getInstitucionesReporte(){\r\n            let me = this;\r\n            me.arregloReporte = []\r\n            if( me.periodoSelect == \"\" || me.periodoSelect == null || me.periodoSelect == undefined ){\r\n                me.$vs.notify({\r\n                text:'Seleccione un período por favor',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n                return\r\n            }\r\n            me.$vs.loading()\r\n            this.$http.get(this.$server_url+'reporteVentaInstituciones?periodo_id='+me.periodoSelect)\r\n                .then(function (res) {\r\n                    me.$vs.loading.close()\r\n                    let datos = res.data\r\n                    datos.forEach(element => {\r\n                        var cal = new Object();\r\n                        cal.VEN_VALOR   = parseFloat(element.VEN_VALOR).toFixed(2)\r\n                        cal.PERIODO     = element.PERIODO\r\n                        cal.ven_neta    = parseFloat(element.ven_neta).toFixed(2)\r\n                        cal.INSTITUCION = element.INSTITUCION\r\n                        cal.INS_CIUDAD  = element.INS_CIUDAD \r\n                        cal.CONTRATO    = element.CONTRATO \r\n                        cal.VENDEDOR    = element.VENDEDOR\r\n                        me.arregloReporte.push(cal)\r\n                    });\r\n                })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close()\r\n                    console.log(error + ' error');\r\n                })\r\n            \r\n        },\r\n        filtrarDecimal(numero){\r\n            let me = this\r\n            if(numero == 0){\r\n                return numero\r\n            }else{\r\n                let preNumero = parseFloat(numero)\r\n                const transformar = (preNumero).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\r\n                return transformar\r\n            }\r\n        },\r\n        //METODOS PARA EXCEL\r\n        //para limipiar los campos del excel\r\n        clearFields() {\r\n            this.fileName = ''\r\n            this.cellAutoWidth = true\r\n            this.selectedFormat = 'xls'\r\n        },\r\n        //metodo par descargar el excel\r\n        exportToExcel() {\r\n            let headerTitle = ['Institución','Ciudad','Contrato',  'Venta Bruta','Venta Neta','Vendedor'];\r\n            let headerVal = ['INSTITUCION', 'INS_CIUDAD','CONTRATO','VEN_VALOR','ven_neta','VENDEDOR'];  \r\n            let codigoSelectedMayus = this.codigoSelected\r\n            for (var i = 0; i < codigoSelectedMayus.length; i++) {\r\n                for (var key in codigoSelectedMayus[i]) {\r\n                    if (typeof codigoSelectedMayus[i][key] == \"string\") {\r\n                        codigoSelectedMayus[i][key] = codigoSelectedMayus[i][key].toUpperCase();\r\n                    }\r\n                }\r\n            }\r\n            import('@/vendor/Export2Excel').then(excel => {\r\n                const list = codigoSelectedMayus\r\n                const data = this.formatJson(headerVal, list)\r\n                excel.export_json_to_excel({\r\n                    header: headerTitle,\r\n                    data,\r\n                    filename: this.fileName,\r\n                    autoWidth: this.cellAutoWidth,\r\n                    bookType: this.selectedFormat\r\n                })\r\n                this.clearFields()\r\n                this.guardarActivo = '';\r\n                this.generarActivo = ' ';\r\n                this.textAlertCant = '';\r\n                this.cantidad = '';\r\n                this.codigoSelected = [];\r\n            })\r\n        },\r\n        formatJson(filterVal, jsonData) {\r\n            return jsonData.map(v => filterVal.map(j => {\r\n                return v[j]\r\n            }))\r\n        },\r\n    }\r\n}\r\n</script>"]}]}