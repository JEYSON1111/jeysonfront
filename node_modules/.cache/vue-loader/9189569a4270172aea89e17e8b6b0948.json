{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\evaluaciones\\ReportesComponent.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\evaluaciones\\ReportesComponent.vue","mtime":1712682815868},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\n    import flatPickr from 'vue-flatpickr-component';\r\n    import 'flatpickr/dist/flatpickr.css';\r\n    import Vue from 'vue'\r\n    import axios from 'axios'\r\n    import vSelect from 'vue-select'\r\n    import moment from 'moment'\r\n    export default {\r\n        data(){\r\n            return {\r\n                docentes: [],\r\n                docente: {cedula: '', nombres: '', apellidos: '', email: '', foto_user: ''},\r\n    \r\n                asignaturas: [],\r\n                asignatura: {id: '', label: ''},\r\n                editarActivo: false,\r\n                docenteSelected: [],\r\n                asignaturaSelected: {id: '', label: ''},\r\n                popupAddTema: false,\r\n                popupEditTema: false,\r\n                usuario: [],\r\n                id_login: null,\r\n                unidades: [\r\n                    {\r\n                    id: \"1\",\r\n                    label: \"Unidad 1\",\r\n                    },\r\n                ]\r\n            }\r\n        },\r\n        components: {\r\n            'v-select': vSelect,\r\n            flatPickr\r\n        },\r\n        created(){\r\n            this.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n            this.id_login = this.usuario.idusuario\r\n            this.$http.get(this.$server_url+'docentesInstitucion/'+this.id_login).then(res => {\r\n                this.docentes = res.data;\r\n                //console.log('res.data: ' + res.data[0].cedula);\r\n            }),\r\n            this.$http.get(this.$server_url+'asignaturasDoc/'+this.id_login).then(res => {\r\n                this.asignaturas = res.data;\r\n            })\r\n        },\r\n        methods: {\r\n            onResize() {\r\n            if (window.innerWidth < 769)\r\n                this.isMobile = true;\r\n            else\r\n                this.isMobile = false;\r\n            },\r\n            limpiar(){\r\n                this.docente.nombre = '';\r\n                this.docente.asignatura = '';\r\n                this.docente.unidad = '';\r\n            },\r\n            agregar(){//datos que se obtienen de los inputs\r\n                if(this.docente.nombre.trim() === '' || this.docente.unidad.id.trim() === ''){\r\n                    alert('Debes completar todos los campos antes de guardar');\r\n                    return;\r\n                }\r\n                let formData = new FormData();\r\n                    formData.append('nombre', this.docente.nombre);\r\n                    formData.append('asignatura', this.docente.asignatura.id);\r\n                    formData.append('unidad', this.docente.unidad.id);\r\n                this.$http.post(this.$server_url+'tema', formData)\r\n                .then(res => {\r\n                    this.temas.push(res.data)\r\n                    this.popupAddTema = false\r\n                    this.$vs.notify({\r\n                    text:'Tema guardado exitosamente',\r\n                    color:'success',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check'})\r\n                    \r\n                    location.reload();\r\n                })\r\n            },\r\n            eliminarTema(item, index){ //index => return\r\n                let formData = new FormData();\r\n                    formData.append('id', item.id);\r\n                this.$http.delete(this.$server_url+'tema', formData).then(() => {\r\n                    this.temas.splice(index, 1);\r\n                })\r\n                .catch(function (error) {\r\n                    alert('NO SE PUEDE ELIMINAR ESTE TEMA PORQUE TIENE PREGUNTAS ASIGNADAS.');\r\n                })\r\n            },\r\n            editarFormulario(item){\r\n                this.asignaturaSelected = {id: item.id_asignatura, label: item.nombreasignatura};\r\n                this.docente.nombre = item.label;//nombre_tema=label\r\n                this.docente.asignatura = {id: item.id_asignatura, label: item.nombreasignatura};\r\n                this.docente.unidad = {id: item.unidad, label: 'Unidad '+item.unidad};\r\n                this.docente.id = item.id;\r\n                this.editarActivo = true;//activa el form editar\r\n            },\r\n            editarTema(item){\r\n                let formData = new FormData();\r\n                    formData.append('id', item.id);\r\n                    formData.append('nombre', this.docente.nombre);\r\n                    formData.append('asignatura', this.docente.asignatura.id);\r\n                    formData.append('unidad', this.docente.unidad.id);\r\n                this.$http.post(this.$server_url+`tema`, formData).then(res => {\r\n                    const index = this.temas.findIndex(\r\n                        temaBuscar => temaBuscar.id === res.data.id)\r\n                    this.tema[index] = res.data;\r\n                    this.$http.get(this.$server_url+'tema').then(res => {\r\n                        \r\n                        this.editarActivo = false;//desactiva el form editar\r\n                        this.temas = res.data;\r\n                        this.popupEditTema = false\r\n                        this.$vs.notify({\r\n                        text:'Tema editado exitosamente',\r\n                        color:'success',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check'})\r\n                    })\r\n                    \r\n                });\r\n            },\r\n        },\r\n    }\r\n",{"version":3,"sources":["ReportesComponent.vue"],"names":[],"mappings":";AAkfile":"ReportesComponent.vue","sourceRoot":"src/views/evaluaciones","sourcesContent":["<template>\r\n    <div>\r\n\r\n        <!-- Modal Agregar-->\r\n        <div class=\"demo-alignment\">\r\n            <vs-popup classContent=\"popup-example\" title=\"Agregar Tema\" :active.sync=\"popupAddTema\">\r\n                <vs-input class=\"inputx mb-3\" placeholder=\"Nombre Tema\" v-model=\"docente.nombre\" style=\"width: 100%;\" />\r\n                \r\n                Asignatura: \r\n                <v-select class=\"mb-3\" v-model=\"docente.asignatura\" :options=\"asignaturas\" :value=\"asignaturaSelected\" :dir=\"$vs.rtl ? 'rtl' : 'ltr'\" />\r\n\r\n                Unidad:\r\n                <v-select class=\"mb-3\" v-model=\"docente.unidad\" :options=\"unidades\" :dir=\"$vs.rtl ? 'rtl' : 'ltr'\" />\r\n\r\n                <vs-button color=\"success\" type=\"gradient\" @click=\"agregar()\">Guardar</vs-button>\r\n            </vs-popup>\r\n        </div>\r\n        <!----FIN MODAL AGREGAR-->\r\n\r\n\r\n\r\n        <!-- Modal Editar Temas-->\r\n        <div class=\"demo-alignment\">\r\n            <vs-popup classContent=\"popup-example\" title=\"Editar Tema\" :active.sync=\"popupEditTema\">\r\n\r\n                <vs-input class=\"inputx mb-3\" placeholder=\"Nombre Tema\" v-model=\"docente.nombre\" style=\"width: 100%;\"/>\r\n\r\n                <v-select class=\"mb-3\" v-model=\"docente.asignatura\" :options=\"asignaturas\" :dir=\"$vs.rtl ? 'rtl' : 'ltr'\" />\r\n\r\n                <v-select class=\"mb-3\" v-model=\"docente.unidad\" :options=\"unidades\" :dir=\"$vs.rtl ? 'rtl' : 'ltr'\" />\r\n\r\n                <vs-button color=\"success\" type=\"gradient\" @click=\"editarTema(tema)\">Editar</vs-button>\r\n            </vs-popup>\r\n        </div>\r\n        <!----FIN MODAL EDITAR---->\r\n\r\n\r\n\r\n        <!--LISTADO DE TEMA-->\r\n        <div align=\"center\">\r\n\r\n            <vs-breadcrumb\r\n            :items=\"\r\n            [\r\n                {\r\n                title: 'Cursos',\r\n                url: '/cursosInstitucion',\r\n                },\r\n                {\r\n                title: 'Docentes',\r\n                url: '/docentesInstitucion'\r\n                },\r\n                {\r\n                title: 'Estudiantes',\r\n                url: '/estudiantesInstitucion'\r\n                },\r\n                {\r\n                title: 'Active',\r\n                url: '/blog'\r\n                }\r\n            ]\"\r\n            ></vs-breadcrumb>\r\n\r\n            <vs-table multiple v-model=\"docenteSelected\" pagination max-items=\"3\" search :data=\"docentes\">\r\n\r\n                <template slot=\"thead\">\r\n                    <vs-th sort-key=\"pregunta\">Docente</vs-th>\r\n                    <vs-th></vs-th>\r\n                    <vs-th>Acciones</vs-th>\r\n                </template>\r\n\r\n                <template slot-scope=\"{data}\">\r\n                <vs-tr :data=\"tr\" :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n\r\n                    <vs-td :data=\"data[indextr].cedula\">\r\n                        {{ 'Cédula: ' + data[indextr].cedula }}<br>\r\n                        {{ 'Nombre: ' + data[indextr].nombres +' '+ data[indextr].apellidos }}<br>\r\n                        {{ 'Email: ' + data[indextr].email }}<br>\r\n                    </vs-td>\r\n\r\n                    <vs-td>\r\n                        <img v-if=\"data[indextr].foto_user!='' && data[indextr].foto_user!='null' && data[indextr].foto_user!=null\" v-bind:src=\"$data_url+'archivos/img/'+data[indextr].foto_user\" class=\"img-responsive\" width=\"50px\"><br>\r\n                    </vs-td>\r\n\r\n                    <vs-td :data=\"data[indextr].idusuario\">\r\n                        <vs-button radius icon-pack=\"feather\" icon=\"icon-file\" @click=\"editarFormulario(data[indextr]); popupEditTema=true\" color=\"success\" type=\"gradient\" style=\"display: inline-block;\"></vs-button>\r\n                    </vs-td>\r\n\r\n                </vs-tr>\r\n                </template>\r\n            </vs-table>\r\n\r\n        </div>\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\n    import flatPickr from 'vue-flatpickr-component';\r\n    import 'flatpickr/dist/flatpickr.css';\r\n    import Vue from 'vue'\r\n    import axios from 'axios'\r\n    import vSelect from 'vue-select'\r\n    import moment from 'moment'\r\n    export default {\r\n        data(){\r\n            return {\r\n                docentes: [],\r\n                docente: {cedula: '', nombres: '', apellidos: '', email: '', foto_user: ''},\r\n    \r\n                asignaturas: [],\r\n                asignatura: {id: '', label: ''},\r\n                editarActivo: false,\r\n                docenteSelected: [],\r\n                asignaturaSelected: {id: '', label: ''},\r\n                popupAddTema: false,\r\n                popupEditTema: false,\r\n                usuario: [],\r\n                id_login: null,\r\n                unidades: [\r\n                    {\r\n                    id: \"1\",\r\n                    label: \"Unidad 1\",\r\n                    },\r\n                ]\r\n            }\r\n        },\r\n        components: {\r\n            'v-select': vSelect,\r\n            flatPickr\r\n        },\r\n        created(){\r\n            this.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n            this.id_login = this.usuario.idusuario\r\n            this.$http.get(this.$server_url+'docentesInstitucion/'+this.id_login).then(res => {\r\n                this.docentes = res.data;\r\n                //console.log('res.data: ' + res.data[0].cedula);\r\n            }),\r\n            this.$http.get(this.$server_url+'asignaturasDoc/'+this.id_login).then(res => {\r\n                this.asignaturas = res.data;\r\n            })\r\n        },\r\n        methods: {\r\n            onResize() {\r\n            if (window.innerWidth < 769)\r\n                this.isMobile = true;\r\n            else\r\n                this.isMobile = false;\r\n            },\r\n            limpiar(){\r\n                this.docente.nombre = '';\r\n                this.docente.asignatura = '';\r\n                this.docente.unidad = '';\r\n            },\r\n            agregar(){//datos que se obtienen de los inputs\r\n                if(this.docente.nombre.trim() === '' || this.docente.unidad.id.trim() === ''){\r\n                    alert('Debes completar todos los campos antes de guardar');\r\n                    return;\r\n                }\r\n                let formData = new FormData();\r\n                    formData.append('nombre', this.docente.nombre);\r\n                    formData.append('asignatura', this.docente.asignatura.id);\r\n                    formData.append('unidad', this.docente.unidad.id);\r\n                this.$http.post(this.$server_url+'tema', formData)\r\n                .then(res => {\r\n                    this.temas.push(res.data)\r\n                    this.popupAddTema = false\r\n                    this.$vs.notify({\r\n                    text:'Tema guardado exitosamente',\r\n                    color:'success',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check'})\r\n                    \r\n                    location.reload();\r\n                })\r\n            },\r\n            eliminarTema(item, index){ //index => return\r\n                let formData = new FormData();\r\n                    formData.append('id', item.id);\r\n                this.$http.delete(this.$server_url+'tema', formData).then(() => {\r\n                    this.temas.splice(index, 1);\r\n                })\r\n                .catch(function (error) {\r\n                    alert('NO SE PUEDE ELIMINAR ESTE TEMA PORQUE TIENE PREGUNTAS ASIGNADAS.');\r\n                })\r\n            },\r\n            editarFormulario(item){\r\n                this.asignaturaSelected = {id: item.id_asignatura, label: item.nombreasignatura};\r\n                this.docente.nombre = item.label;//nombre_tema=label\r\n                this.docente.asignatura = {id: item.id_asignatura, label: item.nombreasignatura};\r\n                this.docente.unidad = {id: item.unidad, label: 'Unidad '+item.unidad};\r\n                this.docente.id = item.id;\r\n                this.editarActivo = true;//activa el form editar\r\n            },\r\n            editarTema(item){\r\n                let formData = new FormData();\r\n                    formData.append('id', item.id);\r\n                    formData.append('nombre', this.docente.nombre);\r\n                    formData.append('asignatura', this.docente.asignatura.id);\r\n                    formData.append('unidad', this.docente.unidad.id);\r\n                this.$http.post(this.$server_url+`tema`, formData).then(res => {\r\n                    const index = this.temas.findIndex(\r\n                        temaBuscar => temaBuscar.id === res.data.id)\r\n                    this.tema[index] = res.data;\r\n                    this.$http.get(this.$server_url+'tema').then(res => {\r\n                        \r\n                        this.editarActivo = false;//desactiva el form editar\r\n                        this.temas = res.data;\r\n                        this.popupEditTema = false\r\n                        this.$vs.notify({\r\n                        text:'Tema editado exitosamente',\r\n                        color:'success',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check'})\r\n                    })\r\n                    \r\n                });\r\n            },\r\n        },\r\n    }\r\n</script>"]}]}