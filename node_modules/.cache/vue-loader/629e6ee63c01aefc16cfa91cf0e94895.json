{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\juegos\\ponchado.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\juegos\\ponchado.vue","mtime":1712682816084},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nimport Vue from 'vue'\r\nimport axios from 'axios'\r\nimport vSelect from 'vue-select'\r\nimport $ from \"jquery\"\r\nVue.filter('upper', function (value) {\r\n    return value.toUpperCase()\r\n})\r\nexport default {\r\n    components: {\r\n        'v-select': vSelect,\r\n    },\r\n    data() {\r\n        return {\r\n            popUpFicha: false,\r\n            infoJuego: [],\r\n            total_jugar: 0,\r\n            a_jugar: 5,\r\n            letras: [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"Ñ\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"Á\", \"É\", \"Í\", \"Ó\", \"Ú\", '1', '2', '3', '4', '5', '6', '7', '8', '9', '0'],\r\n            presionado: 'gradient',\r\n            estado: true,\r\n            tmp: '',\r\n            palabra_buscar: '',\r\n            presionada: '',\r\n            reloj: '',\r\n            x: null,\r\n            game: true,\r\n            win: false,\r\n            lost: false,\r\n            contador_aciertos: 0,\r\n            errores: 7, //maximo de errores permitidos en cada palabra -  imagenes para el ahorcado\r\n            contador_errores: 0,\r\n            aleatorio: 0,\r\n            palabra_escrita: [],\r\n            botones: [],\r\n            color_botones: [],\r\n            grupo_palabras_total: [],\r\n            grupo_descripcion: [],\r\n            grupo_palabras: [],\r\n            grupo_george: [],\r\n            contadorFlag: 0,\r\n            palabra_descripcion: '',\r\n            palabra_longitud: 0,\r\n            encontradas_total: [],\r\n            inicio_fin: true,\r\n            boton_siguiente: false,\r\n            rel: null,\r\n            segundos: 0,\r\n            minutos: 0,\r\n            x: null,\r\n            porcentaje_aciertos: 0,\r\n            porcentaje_errores: 0,\r\n            calificacion_tmp: 0,\r\n            total_calificacion: 0,\r\n            colorTexto: 'negro',\r\n            usuario: [],\r\n            calificaciones: [],\r\n            imgUrl: 'ah1',\r\n            imgExtension: '.png',\r\n            id_juego: '',\r\n            juego_realizado: false,\r\n            modalCalificacion: false,\r\n            codigo_curso: '',\r\n            previsualizar: '',\r\n        }\r\n    },\r\n    mounted() {\r\n        this.getDatos();\r\n    },\r\n    created() {\r\n        let me = this;\r\n        me.id_juego = me.$route.params.id\r\n        me.previsualizar = me.$route.params.codigo\r\n        me.codigo_curso = JSON.parse(localStorage.getItem('curso_juego'));\r\n        // console.log( me.codigo_curso.codigo )\r\n        me.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n        //if (me.usuario.id_group === 4) {\r\n        let formData = new FormData();\r\n        formData.append('id_juego', me.id_juego);\r\n        formData.append('idusuario', me.usuario.idusuario);\r\n        this.$http.post(this.$server_url+'calificacion_estudiante', formData)\r\n            .then(res => {\r\n                me.calificaciones = res.data;\r\n                if (me.calificaciones.length > 0) {\r\n                    me.juego_realizado = true\r\n                    me.$vs.notify({\r\n                        text: 'Nuevo intento',\r\n                        color: 'warning',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check'\r\n                    })\r\n                    //me.$router.go(-1);\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n        //}\r\n    },\r\n    methods: {\r\n        getDatos() {\r\n            let me = this;\r\n            me.inicio_fin = true;\r\n            me.imgUrl = 'ah1';\r\n            me.porcentaje_aciertos = 0;\r\n            me.porcentaje_errores = 0;\r\n            me.boton_siguiente = false;\r\n            me.game = true;\r\n            me.win = false;\r\n            me.lost = false;\r\n            me.palabra_escrita = [];\r\n            me.botones = [];\r\n            me.color_botones = [];\r\n            me.contador_aciertos = 0;\r\n            me.contador_errores = 0;\r\n            me.palabra_longitud = 0;\r\n            window.$(\".imagen-ponchado-ganar\").hide();\r\n            me.$vs.loading()\r\n\r\n            this.$http.get(this.$server_url+'juego_y_contenido/' + me.id_juego)\r\n                .then(res => {\r\n                    me.infoJuego = res.data.items;\r\n                    // console.log(me.infoJuego[0])\r\n                    me.grupo_palabras_total = me.infoJuego[0].preguntas\r\n                    me.calificacion_tmp = me.infoJuego[0].puntos\r\n                    for (let i = 0; i < me.grupo_palabras_total.length; i++) {\r\n                        me.grupo_palabras.push(me.grupo_palabras_total[i].respuesta)\r\n                        me.grupo_descripcion.push(me.grupo_palabras_total[i].pregunta)\r\n                    }\r\n                    me.$vs.loading.close()\r\n                    if (this.a_jugar > this.grupo_palabras_total.length) {\r\n                        this.a_jugar = this.grupo_palabras_total.length\r\n                    }\r\n                    this.total_jugar = this.a_jugar\r\n                    this.f_tiempo(this.infoJuego[0].duracion);\r\n                    this.generarAleatorio();\r\n                })\r\n                .catch(error => {\r\n                    console.log(error)\r\n                    me.$vs.loading.close()\r\n\r\n                })\r\n        },\r\n        generarAleatorio() {\r\n            if (this.a_jugar == 0) {\r\n                clearInterval(this.x);\r\n                this.modalCalificacion = true;\r\n                return this.inicio_fin = false\r\n            }\r\n\r\n            window.$(\".imagen-ponchado\").show('slow');\r\n            window.$(\".imagen-ponchado\").removeClass('gana-palabra-ponchado')\r\n            this.imgUrl = 'ah1';\r\n            this.porcentaje_aciertos = 0;\r\n            this.porcentaje_errores = 0;\r\n            this.boton_siguiente = false;\r\n            this.game = true;\r\n            this.win = false;\r\n            this.lost = false;\r\n            this.palabra_escrita = [];\r\n            this.botones = [];\r\n            this.color_botones = [];\r\n            this.contador_aciertos = 0;\r\n            this.contador_errores = 0;\r\n            this.palabra_longitud = 0;\r\n            this.aleatorio = Math.floor(Math.random() * this.grupo_palabras.length)\r\n            // console.log(this.grupo_palabras)\r\n            for (let i = 0; i < this.grupo_palabras[this.aleatorio].length; i++) {\r\n                if (this.grupo_palabras[this.aleatorio][i] != \" \") {\r\n                    this.palabra_longitud++;\r\n                    //calcular la longitud de la palabra sin espacios en blanco, para los aciertos\r\n                }\r\n                if (this.grupo_palabras[this.aleatorio][i] == \" \") {\r\n                    this.palabra_escrita.push('*')\r\n                } else {\r\n                    this.palabra_escrita.push('')\r\n                }\r\n            }\r\n\r\n            this.palabra_buscar = this.mayusculas(this.grupo_palabras[this.aleatorio])\r\n            this.palabra_descripcion = this.grupo_descripcion[this.aleatorio]\r\n            console.log(this.palabra_buscar, this.grupo_palabras)\r\n        },\r\n        comparar(caracter, posicion) {\r\n\r\n            if (this.game) {\r\n                this.contadorFlag = 0;\r\n                this.botones[posicion] = true;\r\n                for (let i = 0; i < this.palabra_buscar.length; i++) {\r\n                    if (caracter == this.palabra_buscar[i]) {\r\n                        this.palabra_escrita[i] = caracter\r\n                        this.contador_aciertos++;\r\n                        this.porcentaje_aciertos = (this.contador_aciertos * 100) / this.palabra_longitud\r\n                        this.contadorFlag++\r\n                    }\r\n                }\r\n                // console.log( this.palabra_escrita )\r\n                if (this.contadorFlag == 0) {\r\n                    window.$(\".imagen-ponchado\").hide()\r\n                    this.contador_errores++;\r\n                    this.imgUrl = 'ah' + (this.contador_errores + 1);\r\n                    this.porcentaje_errores = (this.contador_errores * 100) / this.errores\r\n                    window.$(\".imagen-ponchado\").animate({\r\n                        height: 'toggle',\r\n                        opacity: 'toggle'\r\n                    }, 'slow');\r\n                }\r\n                if (this.contador_aciertos == this.palabra_longitud) {\r\n                    window.$(\".imagen-ponchado\").hide()\r\n                    this.imgUrl = 'ganar';\r\n                    window.$(\".imagen-ponchado\").addClass('gana-palabra-ponchado')\r\n                    this.win = true\r\n                    this.game = false;\r\n                    this.$vs.notify({\r\n                        text: 'Lo conseguiste, continua así',\r\n                        color: 'success',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check'\r\n                    })\r\n                    window.$(\".imagen-ponchado\").animate({\r\n                        height: 'toggle',\r\n                        opacity: 'toggle'\r\n                    }, 'slow');\r\n                }\r\n                if (this.contador_errores == this.errores) {\r\n                    this.lost = true;\r\n                    this.game = false;\r\n                    this.$vs.notify({\r\n                        text: 'ohhh, más suerte la próxima',\r\n                        color: 'danger',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check'\r\n                    })\r\n                }\r\n                if (!this.game) {\r\n                    this.encontradas_total.push({\r\n                        palabra: this.palabra_buscar,\r\n                        presionadas: this.palabra_escrita.join(\"\"),\r\n                        calificacion: ((this.contador_aciertos * this.calificacion_tmp) / this.palabra_longitud).toFixed(2)\r\n                    })\r\n                    this.grupo_palabras.splice(this.aleatorio, 1)\r\n                    this.grupo_descripcion.splice(this.aleatorio, 1)\r\n                    this.boton_siguiente = true;\r\n                    this.total_calificacion = 0;\r\n                    for (let index = 0; index < this.encontradas_total.length; index++) {\r\n                        this.total_calificacion += parseFloat(this.encontradas_total[index].calificacion);\r\n                        console.log(this.encontradas_total[index].calificacion)\r\n                    }\r\n                    this.total_calificacion = (this.total_calificacion / this.encontradas_total.length).toFixed(2);\r\n                    console.log(this.total_calificacion, this.encontradas_total.length)\r\n                }\r\n\r\n            }\r\n        },\r\n        f_siguiente() {\r\n            this.a_jugar--;\r\n            this.generarAleatorio();\r\n        },\r\n        mayusculas(value) {\r\n            if (value >= 0 && value <= 9) {\r\n                console.log('son numeritos')\r\n                return value;\r\n            } else {\r\n                return value.toUpperCase()\r\n            }\r\n        },\r\n        f_tiempo(numero) {\r\n            let me = this;\r\n            let n = numero * 60,\r\n                now, distance,\r\n                hours,\r\n                minutes,\r\n                seconds,\r\n                conteoSegundos = 1000;\r\n            me.x = setInterval(function () {\r\n                n--;\r\n                now = n * 1000;\r\n                // Find the distance between now and the count down date\r\n                distance = n + now;\r\n\r\n                // Time calculations for days, hours, minutes and seconds\r\n                // var days = Math.floor(distance / (1000 * 60 * 60 * 24));\r\n                hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n                minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n                seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n\r\n                // Output the result in an element with id=\"demo\"\r\n                me.reloj = (hours + \"h \" + minutes + \"m \" + seconds + \"s \");\r\n                // If the count down is over, write some text \r\n                if (distance < 1) {\r\n                    clearInterval(me.x);\r\n                    me.colorTexto = 'rojo';\r\n                    me.modalCalificacion = true;\r\n                    me.boton_siguiente = false;\r\n                    me.$vs.notify({\r\n                        text: 'Se agotó el tiempo.',\r\n                        color: 'warning',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check'\r\n                    })\r\n                    me.inicio_fin = false\r\n                }\r\n            }, conteoSegundos);\r\n        },\r\n        guardarCalificacion() {\r\n            let me = this;\r\n            me.modalCalificacion = false;\r\n            me.boton_siguiente = false;\r\n            // console.log(me.id_juego,\r\n            //     me.codigo_curso.codigo,\r\n            //     me.usuario.idusuario,\r\n            //     me.total_calificacion)\r\n            me.$vs.loading();\r\n\r\n            let formData1 = new FormData();\r\n            formData1.append('id_juego', me.id_juego);\r\n            formData1.append('codigo_curso', me.codigo_curso.codigo);\r\n            formData1.append('id_usuario', me.usuario.idusuario);\r\n            formData1.append('calificacion', me.total_calificacion);\r\n            this.$http.post(this.$server_url+'j_guardar_calificacion', formData1).then(res => {\r\n                    me.$vs.notify({\r\n                        text: 'Calificación enviada a su docente, correctamente',\r\n                        color: 'success',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check'\r\n                    })\r\n                    me.$vs.loading.close()\r\n                })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close()\r\n                    console.log(error);\r\n                })\r\n        },\r\n        recargar() {\r\n            window.location.reload()\r\n        }\r\n    }\r\n}\r\n",{"version":3,"sources":["ponchado.vue"],"names":[],"mappings":";AAqfile":"ponchado.vue","sourceRoot":"src/views/juegos","sourcesContent":["<template>\r\n<div class=\"vx-col md:w-full w-full mb-base\">\r\n    <vs-popup title=\"Guardar calificación\" :active.sync=\"modalCalificacion\">\r\n        <div v-if=\"previsualizar === 'previsualizar'\">\r\n            <h5>Este juego esta en modo de previsualización, no se permite calificar.</h5>\r\n        </div>\r\n        <div v-else>\r\n            <h5 class=\"mb-base p-5\">¿Desea enviar esta calificación, para que registre su docente?</h5>\r\n            <vs-button size=\"small\" style=\"display: inline-block;font-size: 13px;\" class=\"m-1\" type=\"relief\" color=\"primary\" @click=\"guardarCalificacion()\">Si, enviar calificación</vs-button>\r\n            <vs-button size=\"small\" style=\"display: inline-block;font-size: 13px;\" class=\"m-1\" type=\"relief\" color=\"danger\" @click=\"recargar()\">No, intentar nuevamente </vs-button>\r\n        </div>\r\n    </vs-popup>\r\n    <vs-popup title=\"Ficha técnica\" :active.sync=\"popUpFicha\">\r\n        <div v-for=\"(itemF,$indexF) in infoJuego\" :key=\"$indexF\">\r\n            <div class=\"vx-row w-full mb-base\">\r\n                <div class=\"vx-col sm:w-1/3 w-full\" align=\"right\">\r\n                    <b>Nombre del juego:</b>\r\n                </div>\r\n                <div class=\"vx-col sm:w-2/3 w-full\" align=\"left\">\r\n                    {{itemF.nombre_juego}}\r\n                </div>\r\n            </div>\r\n            <div class=\"vx-row w-full mb-base\">\r\n                <div class=\"vx-col sm:w-1/3 w-full\" align=\"right\">\r\n                    <b>Asignatura:</b>\r\n                </div>\r\n                <div class=\"vx-col sm:w-2/3 w-full\" align=\"left\">\r\n                    {{itemF.temas[0].nombreasignatura}}\r\n                </div>\r\n            </div>\r\n            <div class=\"vx-row w-full mb-base\">\r\n                <div class=\"vx-col sm:w-1/3 w-full\" align=\"right\">\r\n                    <b>Bloque curricular:</b>\r\n                </div>\r\n                <div class=\"vx-col sm:w-2/3 w-full\" align=\"left\">\r\n                    {{itemF.bloque_curricular}}\r\n                </div>\r\n            </div>\r\n            <div class=\"vx-row w-full mb-base\">\r\n                <div class=\"vx-col sm:w-1/3 w-full\" align=\"right\">\r\n                    <b>Grado:</b>\r\n                </div>\r\n                <div class=\"vx-col sm:w-2/3 w-full\" align=\"left\">\r\n                    {{itemF.grado}}\r\n                </div>\r\n            </div>\r\n            <!--<div class=\"vx-row w-full mb-base\">\r\n                <div class=\"vx-col sm:w-1/3 w-full\" align=\"right\">\r\n                    <b>Unidad:</b>\r\n                </div>\r\n                <div v-for=\"(itemU,$indexU) in itemF.temas\" :key=\"$indexU\">\r\n                    {{itemU.unidad}}\r\n                </div>\r\n            </div>-->\r\n            <div class=\"vx-row w-full mb-base\">\r\n                <div class=\"vx-col sm:w-1/3 w-full\" align=\"right\">\r\n                    <b>Tema:</b>\r\n                </div>\r\n                <div class=\"vx-col sm:w-2/3 w-full\" align=\"left\">\r\n                    <div v-for=\"(itemT,$indexT) in itemF.temas\" :key=\"$indexT\">\r\n                        Unidad {{itemT.unidad}}<br>\r\n                        {{itemT.nombre_tema}}<br><br>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"vx-row w-full mb-base\">\r\n                <div class=\"vx-col sm:w-1/3 w-full\" align=\"right\">\r\n                    <b>Destreza(s) que apoya:</b>\r\n                </div>\r\n                <div class=\"vx-col sm:w-2/3 w-full\" align=\"left\">\r\n                    {{itemF.destrezas}}\r\n                </div>\r\n            </div>\r\n            <div class=\"vx-row w-full mb-base\">\r\n                <div class=\"vx-col sm:w-1/3 w-full\" align=\"right\">\r\n                    <b>Habilidades que desarrolla:</b>\r\n                </div>\r\n                <div class=\"vx-col sm:w-2/3 w-full\" align=\"left\">\r\n                    {{itemF.habilidades}}\r\n                </div>\r\n            </div>\r\n            <div class=\"vx-row w-full mb-base\">\r\n                <div class=\"vx-col sm:w-1/3 w-full\" align=\"right\">\r\n                    <b>Intencion didáctica:</b>\r\n                </div>\r\n                <div class=\"vx-col sm:w-2/3 w-full\" align=\"left\">\r\n                    {{itemF.intencion_didactica}}\r\n                </div>\r\n            </div>\r\n            <div class=\"vx-row w-full mb-base\">\r\n                <div class=\"vx-col sm:w-1/3 w-full\" align=\"right\">\r\n                    <b>Consigna o sugerencia metodológica:</b>\r\n                </div>\r\n                <div class=\"vx-col sm:w-2/3 w-full\" align=\"left\">\r\n                    {{itemF.consigna}}\r\n                </div>\r\n            </div>\r\n            <div class=\"vx-row w-full mb-base\">\r\n                <div class=\"vx-col sm:w-1/3 w-full\" align=\"right\">\r\n                    <b>Consideraciones previas:</b>\r\n                </div>\r\n                <div class=\"vx-col sm:w-2/3 w-full\" align=\"left\">\r\n                    {{itemF.consideraciones}}\r\n                </div>\r\n            </div>\r\n            <div class=\"vx-row w-full mb-base\">\r\n                <div class=\"vx-col sm:w-1/3 w-full\" align=\"right\">\r\n                    <b>Elaborado por:</b>\r\n                </div>\r\n                <div class=\"vx-col sm:w-2/3 w-full\" align=\"left\">\r\n                    {{itemF.elaborado_por}}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </vs-popup>\r\n    <!-- <div v-if=\"juego_realizado===false\"> -->\r\n    <div>\r\n        <div v-for=\"(item,$index) in infoJuego\" :key=\"$index\" class=\"mt-4\">\r\n            <vx-card>\r\n                <h3>{{item.nombre_juego}}</h3>\r\n                <div class=\"vx-row text-left\">\r\n                    <div class=\"vx-col sm:w-1/2\">\r\n                        <h5 class=\"text-left\">\r\n                            <small>Tiempo restante:</small> <b :class=\"colorTexto\"> {{reloj}}</b>\r\n                        </h5>\r\n                    </div>\r\n                    <div class=\"vx-col sm:w-1/2 text-right\">\r\n                        <vs-button class=\"text-right\" size=\"small\" color=\"primary\" type=\"border\" @click=\"popUpFicha=true\" style=\"padding: 5px 10px 5px 10px; font-size: 14px;\">Ficha</vs-button>\r\n                    </div>\r\n                </div>\r\n            </vx-card>\r\n            <section v-if=\"inicio_fin\">\r\n                <div class=\"vx-row mismo-alto\">\r\n                    <div class=\"vx-col sm:w-2/3\">\r\n                        <vx-card class=\"mt-4\">\r\n                            <div class=\"text-left\">Palabras restantes: <b> {{a_jugar}}</b> </div>\r\n                            <div class=\"v-row text-left\">\r\n                                <vs-progress :percent=\"porcentaje_aciertos\" color=\"success\"> {{porcentaje_aciertos}}% </vs-progress>\r\n                                <vs-progress :percent=\"porcentaje_errores\" color=\"danger\"> {{porcentaje_errores}}% </vs-progress>\r\n                            </div>\r\n                            <div class=\"text-center mt-4 mb-base\">\r\n                                <h4 class=\"\">{{palabra_descripcion}}</h4>\r\n                            </div>\r\n                            <div class=\"row ponchado\">\r\n                                <div class=\"col-lg-8 col-md-8 col-sm-12 col-xs-12\">\r\n                                    <div class=\"cadena-escritura animate__animated\"></div>\r\n                                    <h2 class=\"text-center m-3\">\r\n                                        <span v-for=\"(p,index) in palabra_escrita\" :key=\"index\">\r\n                                            <vs-button v-if=\"p != '*'\" type=\"border\" class=\"letra pt-2 pb-2 pr-4 pl-4 m-1\">{{p}}</vs-button>\r\n                                            <span v-else> - </span>\r\n                                        </span>\r\n                                    </h2>\r\n                                    <div class=\"vx-row text-center\">\r\n                                        <div class=\"vx-col md:w-1/1 ml-6 mr-6 mb-base\">\r\n                                            <span v-for=\"(itemL, indexL) in letras\" :key=\"indexL\">\r\n                                                <vs-button size=\"small\" style=\"display: inline-block;font-size: 13px;\" class=\"m-1\" type=\"gradient\" color=\"primary\" @click=\"comparar(itemL, indexL)\" :class=\"{success:color_botones[indexL] == true }\" :disabled=\"botones[indexL]\">\r\n                                                    {{itemL}}\r\n                                                </vs-button>\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </vx-card>\r\n                    </div>\r\n                    <div class=\"vx-col sm:w-1/3 text-center\">\r\n                        <vx-card class=\"p-5 mt-4\">\r\n                            <div class=\"text-right\">\r\n                                <vs-button type=\"border\" v-if=\"boton_siguiente\" @click=\"f_siguiente\">Siguiente Palabra</vs-button>\r\n                            </div>\r\n                            <div class=\"w-full container-ponchado\" align=\"center\">\r\n                                <img class=\"medida-imagen imagen-ponchado\" v-bind:src=\"$data_url+'archivos/images/imagenes_juegos/ponchado/'+imgUrl+'.png'\">\r\n                            </div>\r\n                        </vx-card>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <section v-else>\r\n                <vx-card class=\"mt-3\">\r\n\r\n                    <div align=\"center\" class=\"mt-4\">\r\n                        <vs-table stripe pagination max-items=\"25\" search :data=\"encontradas_total\">\r\n                            <template slot=\"header\">\r\n                                <h3>Resultados</h3>\r\n                            </template>\r\n                            <template slot=\"thead\">\r\n                                <vs-th sort-key=\"nombre_evaluacion\">Palabra</vs-th>\r\n                                <vs-th sort-key=\"fecha\">Encontrada</vs-th>\r\n                                <vs-th sort-key=\"fecha\">Puntaje</vs-th>\r\n                            </template>\r\n\r\n                            <template slot-scope=\"{data}\">\r\n                                <vs-tr :data=\"tr\" :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                                    <vs-td :data=\"data[indextr].palabra\">\r\n                                        {{ data[indextr].palabra }}\r\n                                    </vs-td>\r\n                                    <vs-td :data=\"data[indextr].presionadas\">\r\n                                        {{ data[indextr].presionadas }}\r\n                                    </vs-td>\r\n                                    <vs-td :data=\"data[indextr].presionadas\">\r\n                                        {{ data[indextr].calificacion }}\r\n                                    </vs-td>\r\n                                </vs-tr>\r\n                                <vs-tr>\r\n                                    <vs-td> </vs-td>\r\n                                    <vs-td><b>Promedio</b></vs-td>\r\n                                    <vs-td><b>{{total_calificacion}} </b></vs-td>\r\n                                </vs-tr>\r\n                            </template>\r\n                        </vs-table>\r\n                    </div>\r\n                    <p>Palabras a responder: <b>{{total_jugar}} </b></p>\r\n                    <p>Palabras completadas: <b>{{encontradas_total.length}} </b></p>\r\n                </vx-card>\r\n\r\n            </section>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- <div v-else class=\"text-center\">\r\n        <vx-card>\r\n            Este juego ya fue realizado.\r\n        </vx-card>\r\n    </div> -->\r\n</div>\r\n</template>\r\n\r\n<script src=\"https://code.jquery.com/jquery-3.5.0.js\"></script><script>\r\nimport Vue from 'vue'\r\nimport axios from 'axios'\r\nimport vSelect from 'vue-select'\r\nimport $ from \"jquery\"\r\nVue.filter('upper', function (value) {\r\n    return value.toUpperCase()\r\n})\r\nexport default {\r\n    components: {\r\n        'v-select': vSelect,\r\n    },\r\n    data() {\r\n        return {\r\n            popUpFicha: false,\r\n            infoJuego: [],\r\n            total_jugar: 0,\r\n            a_jugar: 5,\r\n            letras: [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"Ñ\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"Á\", \"É\", \"Í\", \"Ó\", \"Ú\", '1', '2', '3', '4', '5', '6', '7', '8', '9', '0'],\r\n            presionado: 'gradient',\r\n            estado: true,\r\n            tmp: '',\r\n            palabra_buscar: '',\r\n            presionada: '',\r\n            reloj: '',\r\n            x: null,\r\n            game: true,\r\n            win: false,\r\n            lost: false,\r\n            contador_aciertos: 0,\r\n            errores: 7, //maximo de errores permitidos en cada palabra -  imagenes para el ahorcado\r\n            contador_errores: 0,\r\n            aleatorio: 0,\r\n            palabra_escrita: [],\r\n            botones: [],\r\n            color_botones: [],\r\n            grupo_palabras_total: [],\r\n            grupo_descripcion: [],\r\n            grupo_palabras: [],\r\n            grupo_george: [],\r\n            contadorFlag: 0,\r\n            palabra_descripcion: '',\r\n            palabra_longitud: 0,\r\n            encontradas_total: [],\r\n            inicio_fin: true,\r\n            boton_siguiente: false,\r\n            rel: null,\r\n            segundos: 0,\r\n            minutos: 0,\r\n            x: null,\r\n            porcentaje_aciertos: 0,\r\n            porcentaje_errores: 0,\r\n            calificacion_tmp: 0,\r\n            total_calificacion: 0,\r\n            colorTexto: 'negro',\r\n            usuario: [],\r\n            calificaciones: [],\r\n            imgUrl: 'ah1',\r\n            imgExtension: '.png',\r\n            id_juego: '',\r\n            juego_realizado: false,\r\n            modalCalificacion: false,\r\n            codigo_curso: '',\r\n            previsualizar: '',\r\n        }\r\n    },\r\n    mounted() {\r\n        this.getDatos();\r\n    },\r\n    created() {\r\n        let me = this;\r\n        me.id_juego = me.$route.params.id\r\n        me.previsualizar = me.$route.params.codigo\r\n        me.codigo_curso = JSON.parse(localStorage.getItem('curso_juego'));\r\n        // console.log( me.codigo_curso.codigo )\r\n        me.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n        //if (me.usuario.id_group === 4) {\r\n        let formData = new FormData();\r\n        formData.append('id_juego', me.id_juego);\r\n        formData.append('idusuario', me.usuario.idusuario);\r\n        this.$http.post(this.$server_url+'calificacion_estudiante', formData)\r\n            .then(res => {\r\n                me.calificaciones = res.data;\r\n                if (me.calificaciones.length > 0) {\r\n                    me.juego_realizado = true\r\n                    me.$vs.notify({\r\n                        text: 'Nuevo intento',\r\n                        color: 'warning',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check'\r\n                    })\r\n                    //me.$router.go(-1);\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n        //}\r\n    },\r\n    methods: {\r\n        getDatos() {\r\n            let me = this;\r\n            me.inicio_fin = true;\r\n            me.imgUrl = 'ah1';\r\n            me.porcentaje_aciertos = 0;\r\n            me.porcentaje_errores = 0;\r\n            me.boton_siguiente = false;\r\n            me.game = true;\r\n            me.win = false;\r\n            me.lost = false;\r\n            me.palabra_escrita = [];\r\n            me.botones = [];\r\n            me.color_botones = [];\r\n            me.contador_aciertos = 0;\r\n            me.contador_errores = 0;\r\n            me.palabra_longitud = 0;\r\n            window.$(\".imagen-ponchado-ganar\").hide();\r\n            me.$vs.loading()\r\n\r\n            this.$http.get(this.$server_url+'juego_y_contenido/' + me.id_juego)\r\n                .then(res => {\r\n                    me.infoJuego = res.data.items;\r\n                    // console.log(me.infoJuego[0])\r\n                    me.grupo_palabras_total = me.infoJuego[0].preguntas\r\n                    me.calificacion_tmp = me.infoJuego[0].puntos\r\n                    for (let i = 0; i < me.grupo_palabras_total.length; i++) {\r\n                        me.grupo_palabras.push(me.grupo_palabras_total[i].respuesta)\r\n                        me.grupo_descripcion.push(me.grupo_palabras_total[i].pregunta)\r\n                    }\r\n                    me.$vs.loading.close()\r\n                    if (this.a_jugar > this.grupo_palabras_total.length) {\r\n                        this.a_jugar = this.grupo_palabras_total.length\r\n                    }\r\n                    this.total_jugar = this.a_jugar\r\n                    this.f_tiempo(this.infoJuego[0].duracion);\r\n                    this.generarAleatorio();\r\n                })\r\n                .catch(error => {\r\n                    console.log(error)\r\n                    me.$vs.loading.close()\r\n\r\n                })\r\n        },\r\n        generarAleatorio() {\r\n            if (this.a_jugar == 0) {\r\n                clearInterval(this.x);\r\n                this.modalCalificacion = true;\r\n                return this.inicio_fin = false\r\n            }\r\n\r\n            window.$(\".imagen-ponchado\").show('slow');\r\n            window.$(\".imagen-ponchado\").removeClass('gana-palabra-ponchado')\r\n            this.imgUrl = 'ah1';\r\n            this.porcentaje_aciertos = 0;\r\n            this.porcentaje_errores = 0;\r\n            this.boton_siguiente = false;\r\n            this.game = true;\r\n            this.win = false;\r\n            this.lost = false;\r\n            this.palabra_escrita = [];\r\n            this.botones = [];\r\n            this.color_botones = [];\r\n            this.contador_aciertos = 0;\r\n            this.contador_errores = 0;\r\n            this.palabra_longitud = 0;\r\n            this.aleatorio = Math.floor(Math.random() * this.grupo_palabras.length)\r\n            // console.log(this.grupo_palabras)\r\n            for (let i = 0; i < this.grupo_palabras[this.aleatorio].length; i++) {\r\n                if (this.grupo_palabras[this.aleatorio][i] != \" \") {\r\n                    this.palabra_longitud++;\r\n                    //calcular la longitud de la palabra sin espacios en blanco, para los aciertos\r\n                }\r\n                if (this.grupo_palabras[this.aleatorio][i] == \" \") {\r\n                    this.palabra_escrita.push('*')\r\n                } else {\r\n                    this.palabra_escrita.push('')\r\n                }\r\n            }\r\n\r\n            this.palabra_buscar = this.mayusculas(this.grupo_palabras[this.aleatorio])\r\n            this.palabra_descripcion = this.grupo_descripcion[this.aleatorio]\r\n            console.log(this.palabra_buscar, this.grupo_palabras)\r\n        },\r\n        comparar(caracter, posicion) {\r\n\r\n            if (this.game) {\r\n                this.contadorFlag = 0;\r\n                this.botones[posicion] = true;\r\n                for (let i = 0; i < this.palabra_buscar.length; i++) {\r\n                    if (caracter == this.palabra_buscar[i]) {\r\n                        this.palabra_escrita[i] = caracter\r\n                        this.contador_aciertos++;\r\n                        this.porcentaje_aciertos = (this.contador_aciertos * 100) / this.palabra_longitud\r\n                        this.contadorFlag++\r\n                    }\r\n                }\r\n                // console.log( this.palabra_escrita )\r\n                if (this.contadorFlag == 0) {\r\n                    window.$(\".imagen-ponchado\").hide()\r\n                    this.contador_errores++;\r\n                    this.imgUrl = 'ah' + (this.contador_errores + 1);\r\n                    this.porcentaje_errores = (this.contador_errores * 100) / this.errores\r\n                    window.$(\".imagen-ponchado\").animate({\r\n                        height: 'toggle',\r\n                        opacity: 'toggle'\r\n                    }, 'slow');\r\n                }\r\n                if (this.contador_aciertos == this.palabra_longitud) {\r\n                    window.$(\".imagen-ponchado\").hide()\r\n                    this.imgUrl = 'ganar';\r\n                    window.$(\".imagen-ponchado\").addClass('gana-palabra-ponchado')\r\n                    this.win = true\r\n                    this.game = false;\r\n                    this.$vs.notify({\r\n                        text: 'Lo conseguiste, continua así',\r\n                        color: 'success',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check'\r\n                    })\r\n                    window.$(\".imagen-ponchado\").animate({\r\n                        height: 'toggle',\r\n                        opacity: 'toggle'\r\n                    }, 'slow');\r\n                }\r\n                if (this.contador_errores == this.errores) {\r\n                    this.lost = true;\r\n                    this.game = false;\r\n                    this.$vs.notify({\r\n                        text: 'ohhh, más suerte la próxima',\r\n                        color: 'danger',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check'\r\n                    })\r\n                }\r\n                if (!this.game) {\r\n                    this.encontradas_total.push({\r\n                        palabra: this.palabra_buscar,\r\n                        presionadas: this.palabra_escrita.join(\"\"),\r\n                        calificacion: ((this.contador_aciertos * this.calificacion_tmp) / this.palabra_longitud).toFixed(2)\r\n                    })\r\n                    this.grupo_palabras.splice(this.aleatorio, 1)\r\n                    this.grupo_descripcion.splice(this.aleatorio, 1)\r\n                    this.boton_siguiente = true;\r\n                    this.total_calificacion = 0;\r\n                    for (let index = 0; index < this.encontradas_total.length; index++) {\r\n                        this.total_calificacion += parseFloat(this.encontradas_total[index].calificacion);\r\n                        console.log(this.encontradas_total[index].calificacion)\r\n                    }\r\n                    this.total_calificacion = (this.total_calificacion / this.encontradas_total.length).toFixed(2);\r\n                    console.log(this.total_calificacion, this.encontradas_total.length)\r\n                }\r\n\r\n            }\r\n        },\r\n        f_siguiente() {\r\n            this.a_jugar--;\r\n            this.generarAleatorio();\r\n        },\r\n        mayusculas(value) {\r\n            if (value >= 0 && value <= 9) {\r\n                console.log('son numeritos')\r\n                return value;\r\n            } else {\r\n                return value.toUpperCase()\r\n            }\r\n        },\r\n        f_tiempo(numero) {\r\n            let me = this;\r\n            let n = numero * 60,\r\n                now, distance,\r\n                hours,\r\n                minutes,\r\n                seconds,\r\n                conteoSegundos = 1000;\r\n            me.x = setInterval(function () {\r\n                n--;\r\n                now = n * 1000;\r\n                // Find the distance between now and the count down date\r\n                distance = n + now;\r\n\r\n                // Time calculations for days, hours, minutes and seconds\r\n                // var days = Math.floor(distance / (1000 * 60 * 60 * 24));\r\n                hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n                minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n                seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n\r\n                // Output the result in an element with id=\"demo\"\r\n                me.reloj = (hours + \"h \" + minutes + \"m \" + seconds + \"s \");\r\n                // If the count down is over, write some text \r\n                if (distance < 1) {\r\n                    clearInterval(me.x);\r\n                    me.colorTexto = 'rojo';\r\n                    me.modalCalificacion = true;\r\n                    me.boton_siguiente = false;\r\n                    me.$vs.notify({\r\n                        text: 'Se agotó el tiempo.',\r\n                        color: 'warning',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check'\r\n                    })\r\n                    me.inicio_fin = false\r\n                }\r\n            }, conteoSegundos);\r\n        },\r\n        guardarCalificacion() {\r\n            let me = this;\r\n            me.modalCalificacion = false;\r\n            me.boton_siguiente = false;\r\n            // console.log(me.id_juego,\r\n            //     me.codigo_curso.codigo,\r\n            //     me.usuario.idusuario,\r\n            //     me.total_calificacion)\r\n            me.$vs.loading();\r\n\r\n            let formData1 = new FormData();\r\n            formData1.append('id_juego', me.id_juego);\r\n            formData1.append('codigo_curso', me.codigo_curso.codigo);\r\n            formData1.append('id_usuario', me.usuario.idusuario);\r\n            formData1.append('calificacion', me.total_calificacion);\r\n            this.$http.post(this.$server_url+'j_guardar_calificacion', formData1).then(res => {\r\n                    me.$vs.notify({\r\n                        text: 'Calificación enviada a su docente, correctamente',\r\n                        color: 'success',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check'\r\n                    })\r\n                    me.$vs.loading.close()\r\n                })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close()\r\n                    console.log(error);\r\n                })\r\n        },\r\n        recargar() {\r\n            window.location.reload()\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n.stars {\r\n    display: inline-block;\r\n    /* text-shadow: 2px 2px 0 #AAA; */\r\n    font-size: 4em;\r\n}\r\n\r\n.alfabeto,\r\n.estrellas {\r\n    /*max-width: 500px;*/\r\n    height: auto;\r\n    /*margin: 0 auto;*/\r\n    padding: 20px;\r\n    line-height: 30px;\r\n    text-align: center;\r\n}\r\n\r\n.estrellas {\r\n    color: #444;\r\n}\r\n\r\n.rojo {\r\n    color: red;\r\n}\r\n\r\n.negro {\r\n    color: #444;\r\n}\r\n\r\n.container-ponchado {\r\n    height: 310px;\r\n    ;\r\n}\r\n\r\n.medida-imagen {\r\n    width: 175px;\r\n    height: 300px;\r\n}\r\n\r\n.gana-palabra-ponchado {\r\n    animation: rotating 2s linear infinite alternate;\r\n    mix-blend-mode: multiply;\r\n}\r\n\r\n@-webkit-keyframes rotating {\r\n    0% {\r\n        -webkit-transform: rotate(0deg);\r\n    }\r\n\r\n    25% {\r\n        -webkit-transform: rotate(3deg);\r\n    }\r\n\r\n    50% {\r\n        -webkit-transform: rotate(0deg);\r\n    }\r\n\r\n    75% {\r\n        -webkit-transform: rotate(-3deg);\r\n    }\r\n\r\n    100% {\r\n        -webkit-transform: rotate(0deg);\r\n    }\r\n}\r\n</style>\r\n"]}]}