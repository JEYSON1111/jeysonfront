{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\institucion\\addLibrerias.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\institucion\\addLibrerias.vue","mtime":1712682816015},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\n    import Vue from 'vue'\r\n    import axios from 'axios'\r\n    import \"vue-select/dist/vue-select.css\";\r\n    import vSelect from \"vue-select\";\r\n    import DataViewSidebar from './addlibro'\r\n    Vue.use(axios)\r\n    Vue.component(\"v-select\", vSelect);\r\n    export default {\r\n        components: {\r\n            DataViewSidebar,\r\n        },\r\n        data() {\r\n            return {\r\n                niveles:[],\r\n                setniveles: {},\r\n                nivel:'',\r\n                institucion: [],\r\n                libreriasL: [],\r\n                planlector: [],\r\n                listaLibrerias: [],\r\n                listaplanlector: [],\r\n                tabAsesorInstitucion: {\r\n                    asin_id: '',\r\n                    asin_idInstitucion: '',\r\n                    asin_idusuario: '',\r\n                    asin_estado: '',\r\n                    updated_at: ''\r\n                },\r\n                idplanlector: '',\r\n                id: '',\r\n                sidebarData: {},\r\n                addNewDataSidebar: false,\r\n            }\r\n        },\r\n        created(){\r\n            let me = this;\r\n            me.selectLibrerias()\r\n        },\r\n        mounted() {\r\n            this.getInstitucion();        \r\n            this.getListalibrerias();\r\n        },\r\n        methods: {\r\n            getInstitucion() {\r\n                let me = this;\r\n                this.$http.get(this.$server_url+'institucion/' + localStorage.idinstitucion)\r\n                    .then(function (response) {\r\n                        me.institucion = response.data;\r\n                    })\r\n                    .catch(function (error) {})\r\n            },\r\n            selectLibrerias() {\r\n                let me = this;\r\n                 this.$http.get(this.$server_url+'GetAsesor')\r\n                    .then(function (response) {\r\n                        me.listaLibrerias = response.data\r\n                    })\r\n                    .catch(function (error) {})\r\n            },\r\n            getListalibrerias() {\r\n                let me = this;\r\n                me.$vs.loading();     \r\n                this.$http.get(this.$server_url+\"GetAserorInstitucion?institucion_id=\"+localStorage.idinstitucion)\r\n                    .then(function (response) {\r\n                        me.$vs.loading.close();\r\n                        me.libreriasL = response.data\r\n                    })\r\n                    .catch(function (error) {\r\n                        me.$vs.loading.close();\r\n                    })\r\n            }, \r\n            guardarLibrerias() {\r\n                let me = this;\r\n                const usuariorespo = localStorage.getItem(\"usuario\");\r\n                const usuarioObjeto = JSON.parse(usuariorespo);\r\n                \r\n                // Verifica que el campo no este vacio o nulo\r\n                if (this.tabAsesorInstitucion.asin_idusuario === '' || this.tabAsesorInstitucion.asin_idusuario === null) {\r\n                    me.$vs.notify({\r\n                        text: 'Seleccione antes de guardar',\r\n                        color: 'danger',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-alert-triangle'\r\n                    });\r\n                    return;\r\n                }\r\n\r\n                // Verificar si ya existe un registro con el mismo código de asesor-institución\r\n                let resultado = me.libreriasL.find(v => v.asin_idusuario == this.tabAsesorInstitucion.asin_idusuario );\r\n                if (resultado) {\r\n                    me.$vs.notify({\r\n                        text: 'Ya existe un registro de esta Asignación',\r\n                        color: 'danger',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-alert-triangle'\r\n                    });\r\n                    return;\r\n                }\r\n\r\n                let datos  = {\r\n                \"asin_idInstitucion\": localStorage.idinstitucion,\r\n                \"asin_idusuario\": this.tabAsesorInstitucion.asin_idusuario,\r\n                \"asin_estado\": this.tabAsesorInstitucion.asin_idusuario,\r\n                \"user_created\": usuarioObjeto.idusuario,\r\n                }                            \r\n                this.$http.post(this.$server_url+'PostRegistrar_modificar_asesor_institucion', datos)\r\n                    .then(function (response) {\r\n                        me.getListalibrerias();\r\n                        me.$vs.notify({\r\n                            color: 'success',\r\n                            title: 'Aceptado',\r\n                            text: 'Libro Guardado'\r\n                        })\r\n                    })\r\n                    .catch(function (error) {})\r\n            },\r\n            eliminar(id) {\r\n                this.id = id\r\n                this.$vs.dialog({\r\n                    color: 'danger',\r\n                    title: `Eliminar Asignación Libreria ( `+ this.id +` )`,\r\n                    text: 'Seguro desea eliminar?',\r\n                    acceptText: 'Aceptar',\r\n                    accept: this.acceptAlert,\r\n                })\r\n            },\r\n            acceptAlert() {\r\n                let me = this;\r\n                this.$http.post(this.$server_url+\"Eliminar_asignacion?asin_id=\"+ me.id)\r\n                    .then(function (response) {\r\n                        me.$vs.notify({\r\n                            color: 'success',\r\n                            title: 'Aceptado',\r\n                            text: 'Asignación libreria eliminada'\r\n                        })\r\n                        me.getListalibrerias();\r\n                    })\r\n                    .catch(function (error) {\r\n                        me.$vs.notify({\r\n                            color: 'danger',\r\n                            title: 'Error',\r\n                            text: error\r\n                        })\r\n                    })\r\n            },           \r\n        },\r\n    }\r\n",{"version":3,"sources":["addLibrerias.vue"],"names":[],"mappingsfile":"addLibrerias.vue","sourceRoot":"src/views/institucion","sourcesContent":["<template>\r\n    <vs-card id=\"data-list-list-view\" class=\"data-list-container\">\r\n        <div class=\"mt-5 ml-2\">\r\n            <h3>\r\n                {{institucion.nombreInstitucion}}\r\n            </h3>\r\n            <vs-tabs alignment=\"fixed\">\r\n                <vs-tab label=\"Librerias\">\r\n                    <div>\r\n                        <vs-card class=\"p-3\">\r\n                            <vs-row>\r\n                                <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\">\r\n                                    <b>Asignación librerias</b>\r\n                                    <!-- {{ tabAsesorInstitucion.asin_idusuario }} -->\r\n                                    <v-select :options=\"listaLibrerias\" class=\"ml-3\" style=\"width:60%\" :reduce=\"listaLibrerias => listaLibrerias.idusuario\" label=\"NombreApellidoAsesor\" v-model=\"tabAsesorInstitucion.asin_idusuario\"></v-select>\r\n                                </vs-col>\r\n                            </vs-row>    \r\n                           <vs-row class=\"mt-5\"> \r\n                                <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\">\r\n                                     <vs-button class=\"mr-3 mb-2\" @click=\"guardarLibrerias()\">Guardar</vs-button>\r\n                                </vs-col>\r\n                            </vs-row>\r\n                            Cantidad de librerias asignadas: <b> &nbsp; {{libreriasL.length}}</b>\r\n                        </vs-card>\r\n                        <vs-table max-items=\"10\" pagination search :data=\"libreriasL\">\r\n                            <template slot=\"header\">\r\n                                        <vs-chip  color=\"primary\">Cantidad: <b> {{ libreriasL.length }}</b></vs-chip>\r\n                                    </template>\r\n                            <!-- {{cliCi}} -->\r\n                            <template slot=\"thead\">\r\n                                <vs-th width=\"200\">\r\n                                    Código\r\n                                </vs-th>\r\n                                <vs-th width=\"500\">\r\n                                    Información Asignación\r\n                                </vs-th>\r\n                                <vs-th width=\"100\">\r\n                                    Acciones\r\n                                </vs-th>\r\n                            </template>\r\n                            <template slot-scope=\"{data}\">\r\n                                <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                                    <vs-td :data=\"data[indextr].asin_id\">\r\n                                        {{ data[indextr].asin_id }}\r\n                                    </vs-td>\r\n                                    <vs-td>\r\n                                        <small ><b>Libreria:</b> {{tr.nombres}} {{tr.apellidos}}</small>\r\n                                    </vs-td>\r\n                                    <vs-td :data=\"data[indextr].asin_id\">\r\n                                        <vs-button size=\"small\" icon-pack=\"feather\" icon=\"icon-trash\" class=\"mr-2\" color=\"danger\" @click=\"eliminar(tr.asin_id)\"></vs-button>\r\n                                    </vs-td>\r\n                                </vs-tr>\r\n                            </template>\r\n                        </vs-table>\r\n                    </div>\r\n                </vs-tab>               \r\n            </vs-tabs>\r\n        </div>\r\n    </vs-card>\r\n</template>    \r\n    \r\n<script>\r\n    import Vue from 'vue'\r\n    import axios from 'axios'\r\n    import \"vue-select/dist/vue-select.css\";\r\n    import vSelect from \"vue-select\";\r\n    import DataViewSidebar from './addlibro'\r\n    Vue.use(axios)\r\n    Vue.component(\"v-select\", vSelect);\r\n    export default {\r\n        components: {\r\n            DataViewSidebar,\r\n        },\r\n        data() {\r\n            return {\r\n                niveles:[],\r\n                setniveles: {},\r\n                nivel:'',\r\n                institucion: [],\r\n                libreriasL: [],\r\n                planlector: [],\r\n                listaLibrerias: [],\r\n                listaplanlector: [],\r\n                tabAsesorInstitucion: {\r\n                    asin_id: '',\r\n                    asin_idInstitucion: '',\r\n                    asin_idusuario: '',\r\n                    asin_estado: '',\r\n                    updated_at: ''\r\n                },\r\n                idplanlector: '',\r\n                id: '',\r\n                sidebarData: {},\r\n                addNewDataSidebar: false,\r\n            }\r\n        },\r\n        created(){\r\n            let me = this;\r\n            me.selectLibrerias()\r\n        },\r\n        mounted() {\r\n            this.getInstitucion();        \r\n            this.getListalibrerias();\r\n        },\r\n        methods: {\r\n            getInstitucion() {\r\n                let me = this;\r\n                this.$http.get(this.$server_url+'institucion/' + localStorage.idinstitucion)\r\n                    .then(function (response) {\r\n                        me.institucion = response.data;\r\n                    })\r\n                    .catch(function (error) {})\r\n            },\r\n            selectLibrerias() {\r\n                let me = this;\r\n                 this.$http.get(this.$server_url+'GetAsesor')\r\n                    .then(function (response) {\r\n                        me.listaLibrerias = response.data\r\n                    })\r\n                    .catch(function (error) {})\r\n            },\r\n            getListalibrerias() {\r\n                let me = this;\r\n                me.$vs.loading();     \r\n                this.$http.get(this.$server_url+\"GetAserorInstitucion?institucion_id=\"+localStorage.idinstitucion)\r\n                    .then(function (response) {\r\n                        me.$vs.loading.close();\r\n                        me.libreriasL = response.data\r\n                    })\r\n                    .catch(function (error) {\r\n                        me.$vs.loading.close();\r\n                    })\r\n            }, \r\n            guardarLibrerias() {\r\n                let me = this;\r\n                const usuariorespo = localStorage.getItem(\"usuario\");\r\n                const usuarioObjeto = JSON.parse(usuariorespo);\r\n                \r\n                // Verifica que el campo no este vacio o nulo\r\n                if (this.tabAsesorInstitucion.asin_idusuario === '' || this.tabAsesorInstitucion.asin_idusuario === null) {\r\n                    me.$vs.notify({\r\n                        text: 'Seleccione antes de guardar',\r\n                        color: 'danger',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-alert-triangle'\r\n                    });\r\n                    return;\r\n                }\r\n\r\n                // Verificar si ya existe un registro con el mismo código de asesor-institución\r\n                let resultado = me.libreriasL.find(v => v.asin_idusuario == this.tabAsesorInstitucion.asin_idusuario );\r\n                if (resultado) {\r\n                    me.$vs.notify({\r\n                        text: 'Ya existe un registro de esta Asignación',\r\n                        color: 'danger',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-alert-triangle'\r\n                    });\r\n                    return;\r\n                }\r\n\r\n                let datos  = {\r\n                \"asin_idInstitucion\": localStorage.idinstitucion,\r\n                \"asin_idusuario\": this.tabAsesorInstitucion.asin_idusuario,\r\n                \"asin_estado\": this.tabAsesorInstitucion.asin_idusuario,\r\n                \"user_created\": usuarioObjeto.idusuario,\r\n                }                            \r\n                this.$http.post(this.$server_url+'PostRegistrar_modificar_asesor_institucion', datos)\r\n                    .then(function (response) {\r\n                        me.getListalibrerias();\r\n                        me.$vs.notify({\r\n                            color: 'success',\r\n                            title: 'Aceptado',\r\n                            text: 'Libro Guardado'\r\n                        })\r\n                    })\r\n                    .catch(function (error) {})\r\n            },\r\n            eliminar(id) {\r\n                this.id = id\r\n                this.$vs.dialog({\r\n                    color: 'danger',\r\n                    title: `Eliminar Asignación Libreria ( `+ this.id +` )`,\r\n                    text: 'Seguro desea eliminar?',\r\n                    acceptText: 'Aceptar',\r\n                    accept: this.acceptAlert,\r\n                })\r\n            },\r\n            acceptAlert() {\r\n                let me = this;\r\n                this.$http.post(this.$server_url+\"Eliminar_asignacion?asin_id=\"+ me.id)\r\n                    .then(function (response) {\r\n                        me.$vs.notify({\r\n                            color: 'success',\r\n                            title: 'Aceptado',\r\n                            text: 'Asignación libreria eliminada'\r\n                        })\r\n                        me.getListalibrerias();\r\n                    })\r\n                    .catch(function (error) {\r\n                        me.$vs.notify({\r\n                            color: 'danger',\r\n                            title: 'Error',\r\n                            text: error\r\n                        })\r\n                    })\r\n            },           \r\n        },\r\n    }\r\n</script>\r\n    "]}]}