{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\admin\\preguntasFaq.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\admin\\preguntasFaq.vue","mtime":1712682815456},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\n\r\nexport default {\r\n    data() {\r\n        return{\r\n            counterDanger: false,\r\n            update:false,\r\n            popupAddPregunta:false,\r\n            popupEditPregunta:false,\r\n            preguntasFaq:[],\r\n            itemEstado:[],\r\n            estadoPregunta:'',\r\n            pregunta:{\r\n                descripcion:'',\r\n                respuesta:'',\r\n                archivo:'',\r\n                url:'',\r\n                video:'',\r\n            },\r\n            preguntasfaq_id:0,\r\n            //para subir archivos,\r\n            attachments:[],\r\n            form: new FormData,\r\n            errorImage:'no',\r\n            tamanioError:\"no\",\r\n        }\r\n    },\r\n    created(){\r\n        let me = this;\r\n        me.preguntasfaq();\r\n    },\r\n    methods:{\r\n        //para subir archivos\r\n        fieldChange(e){\r\n            let me = this;\r\n                me.errorImage = 'no'\r\n                me.tamanioError=\"no\"\r\n                this.attachments = [];\r\n                let selectedFiles=e.target.files;\r\n                let validar = e.target.files[0].type;\r\n\r\n                let tamanio = e.target.files[0].size;\r\n                \r\n                if(tamanio > 1000000){\r\n                    me.tamanioError=\"yes\"\r\n                    me.$vs.notify({\r\n                        text:'El tamaño de la imagen excede 1MB',\r\n                        color:'warning',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check'})  \r\n                        return false;  \r\n                }\r\n                \r\n            \r\n                if(validar == 'image/png' || validar == 'image/jpg' || validar == 'image/jpeg'){\r\n                    for(let i=0;i<selectedFiles.length;i++){\r\n\r\n                      this.attachments.push(selectedFiles[i]);\r\n                     }\r\n                     me.errorImage = 'no'\r\n                }else{\r\n                  me.errorImage = 'yes'\r\n                  me.$vs.notify({\r\n                    text:'Formato de imagen no aceptada solo se acepta png/jpg/jpeg',\r\n                    color:'success',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check'})\r\n                    return false;\r\n                  \r\n                \r\n                }\r\n            \r\n               \r\n        },\r\n\r\n         //traer las preguntas frecuentes\r\n        async preguntasfaq(){\r\n            let me = this;\r\n            await this.$http.get(this.$server_url+\"preguntasfaq?todo=yes\")\r\n            .then(function (response) {\r\n                me.preguntasFaq = response.data\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error)\r\n            });\r\n\r\n            \r\n        },\r\n        ConfirmCambiadoEstadoCodigo(item,estado){\r\n                let me = this;\r\n                me.itemEstado = item;\r\n                me.estadoPregunta = estado;\r\n               \r\n                this.$vs.dialog({\r\n                    type:'confirm',\r\n                    color: 'danger',\r\n                    title: `Confirm`,\r\n                    text:  'Esta seguro de cambiar el estado de la Pregunta?',\r\n                    accept:this.ActivarModalEstadoPregunta\r\n                })\r\n        },\r\n        ActivarModalEstadoPregunta(){\r\n            let me = this;\r\n            let formData = new FormData();\r\n            formData.append(\"preguntasfaq_id\", me.itemEstado.preguntasfaq_id);\r\n            formData.append(\"estado\", me.estadoPregunta);\r\n\r\n                me.$vs.loading()\r\n                this.$http.post(this.$server_url+'cambioEstadoPregunta', formData)\r\n                .then(res => {\r\n                    // console.log(res.data)\r\n\r\n                    if(res.data.message){\r\n                         me.$vs.notify({\r\n                            text: res.data.message,\r\n                            color: 'primary',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-check'\r\n                        })\r\n                        return false;\r\n                    }\r\n                    me.preguntasfaq();\r\n                    me.$vs.loading.close()\r\n                    me.$vs.notify({\r\n                            text: \"Se cambio de estado correctamente\",\r\n                            color: 'primary',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-check'\r\n                    })\r\n                    \r\n                })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close();\r\n                    console.log(error)\r\n                });\r\n        },\r\n\r\n         //para guardar las preguntas\r\n\r\n         guardarPregunta(){\r\n        \r\n            let me = this;\r\n         \r\n            if(me.tamanioError == 'yes'){\r\n                me.$vs.notify({\r\n                    text:'El tamaño de la imagen excede 1MB',\r\n                    color:'warning',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check'})  \r\n                    return false;  \r\n            }\r\n           \r\n            if(me.errorImage == 'yes'){\r\n                me.$vs.notify({\r\n                    text:'El formato de la imagen solo se acepta jpg/png/jpeg',\r\n                    color:'warning',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check'})  \r\n                    return false;      \r\n            }     \r\n            \r\n\r\n        \r\n            if(me.pregunta.descripcion.length < 5 || me.pregunta.respuesta.length < 5){\r\n                me.$vs.notify({\r\n                text:'Minimo 5 caracteres un campo se encuentra',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})  \r\n                return false;      \r\n            }\r\n\r\n              if(me.pregunta.descripcion.length >= 300){\r\n                me.$vs.notify({\r\n                text:'Maximo 300 caracteres para la Pregunta',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})  \r\n                return false;      \r\n            }\r\n\r\n              if(me.pregunta.respuesta.length >= 300){\r\n                me.$vs.notify({\r\n                text:'Maximo 300 caracteres para la descripcion',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})  \r\n                return false;      \r\n            }\r\n\r\n                let formData = new FormData();\r\n                //Si no se envia imagenes\r\n                if(me.attachments.length == 0){\r\n                      //Si no envia imagenes y se quiere editar\r\n                    if(me.update){\r\n                        formData.append('sinimagen', \"yes\");\r\n                        formData.append('preguntasfaq_id', me.preguntasfaq_id);\r\n                        formData.append('pregunta', me.pregunta.descripcion);\r\n\r\n                        if(me.pregunta.video == null){\r\n                           \r\n                        }else{\r\n                                if(me.pregunta.video.length > 10){\r\n\r\n                                    formData.append('video', me.pregunta.video);  \r\n                                }\r\n                                else{\r\n                                    formData.append('video', me.pregunta.video);\r\n                                }\r\n\r\n                        }\r\n                            \r\n                        \r\n                        formData.append('respuesta', me.pregunta.respuesta);\r\n                    }\r\n                      //Si  no envia imagenes y se quiere guardar\r\n                    else{\r\n                        formData.append('sinimagen', \"yes\");\r\n                        formData.append('pregunta', me.pregunta.descripcion);\r\n\r\n                        if(me.pregunta.video == null){\r\n                           \r\n                        }else{\r\n                         \r\n                                if(me.pregunta.video.length > 10){\r\n\r\n                                    // var obtenerFrame = me.pregunta.video.replace('watch?v=','embed/');\r\n                                  \r\n                                    formData.append('video', me.pregunta.video);  \r\n\r\n                                }\r\n                                else{\r\n                                    formData.append('video', me.pregunta.video);\r\n                                }\r\n\r\n                        }\r\n                      \r\n                        formData.append('respuesta', me.pregunta.respuesta); \r\n                    }\r\n                }else{\r\n                    //Si se envia imagenes\r\n                    for(let i=0; i<this.attachments.length;i++){\r\n                        \r\n                        //Si se envia imagenes y se quiere editar\r\n                        if(me.update){\r\n                            formData.append('preguntasfaq_id', me.preguntasfaq_id);\r\n                            formData.append('pregunta', me.pregunta.descripcion);\r\n                            formData.append('respuesta', me.pregunta.respuesta);\r\n\r\n                            \r\n                                if(me.pregunta.video == null){\r\n                           \r\n                                }else{\r\n                                        if(me.pregunta.video.length > 10){\r\n\r\n                                            formData.append('video', me.pregunta.video);  \r\n\r\n                                        }\r\n                                        else{\r\n                                            formData.append('video', me.pregunta.video);\r\n                                        }\r\n\r\n                                }\r\n                            formData.append('archivo[]',this.attachments[i]);\r\n                        }\r\n                          //Si se envia imagenes y se quiere guardar\r\n                        else{\r\n                            formData.append('pregunta', me.pregunta.descripcion);\r\n                            formData.append('respuesta', me.pregunta.respuesta); \r\n\r\n                            if(me.pregunta.video.length > 10){\r\n                         \r\n                            formData.append('video', me.pregunta.video);  \r\n\r\n                            }else{\r\n\r\n                                formData.append('video', me.pregunta.video);\r\n                            }\r\n                            formData.append('archivo[]',this.attachments[i]);\r\n                        \r\n                        }\r\n                     }\r\n                }\r\n\r\n          \r\n           \r\n         \r\n            const config = { headers: { 'Content-Type': 'multipart/form-data' } };\r\n            document.querySelectorAll('.upload-file').value=[];\r\n            me.$vs.loading()\r\n            this.$http.post(this.$server_url+'preguntasfaq', formData,config)\r\n                .then(function (res) {\r\n                    me.$vs.loading.close();\r\n                    me.$vs.notify({\r\n                        text: res.data,\r\n                        color: 'primary',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-alert-triangle'\r\n                    })\r\n                    me.preguntasfaq()\r\n                    me.popupAddPregunta=false,\r\n                    me.popupEditPregunta=false,\r\n                    // me.update = false;\r\n                    limpiar()\r\n                  \r\n                })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close();\r\n                })\r\n        },\r\n        //para editar los campos\r\n        openModalEditar(data={}){\r\n            let me = this;\r\n            me.attachments = [];\r\n            document.querySelectorAll('.upload-file').value=[];\r\n            me.popupEditPregunta = true;\r\n            //llenar la data en los campos\r\n            me.preguntasfaq_id = data.preguntasfaq_id;\r\n            me.pregunta.descripcion = data.pregunta;  \r\n            me.pregunta.respuesta = data.descripcion;\r\n            me.pregunta.archivo = data.archivo;\r\n            me.pregunta.url = data.url;\r\n            me.pregunta.video = data.video\r\n \r\n        },\r\n        limpiar(){\r\n            let me = this;\r\n            me.pregunta.descripcion = \"\";\r\n            me.pregunta.respuesta = \"\";\r\n            me.pregunta.archivo = \"\";\r\n            me.pregunta.url = \"\";\r\n            me.pregunta.video = \"\";\r\n            me.attachments = [];\r\n        }\r\n\r\n    }\r\n}\r\n",{"version":3,"sources":["preguntasFaq.vue"],"names":[],"mappings":";;AA2HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"preguntasFaq.vue","sourceRoot":"src/views/admin","sourcesContent":["<template>\r\n    <div>\r\n        <vs-card>\r\n        \r\n          <vs-button color=\"dark\" style=\"margin:10px;\" @click=\"update=false;popupAddPregunta=true;limpiar();\" type=\"filled\">Crear Pregunta</vs-button>\r\n\r\n           <div v-if=\"preguntasFaq.length >0 \">\r\n              <br>\r\n                <vs-table max-items=\"10\" search pagination :data=\"preguntasFaq\" style=\"margin-top:-40px\">\r\n                    <template slot=\"thead\">\r\n                        \r\n                        <vs-th>Pregunta</vs-th>\r\n                        <vs-th>Descripcion</vs-th>\r\n                        <vs-th>Video</vs-th>\r\n                        <vs-th>Imagen</vs-th>\r\n                        <vs-th>Accion</vs-th>\r\n                       \r\n                    </template>\r\n                    <template slot-scope=\"{data}\">\r\n                        <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                            \r\n                            <vs-td>\r\n                               \r\n                                {{data[indextr].pregunta}}<br>\r\n                                \r\n                            </vs-td>\r\n                            <vs-td>\r\n                                {{data[indextr].descripcion}}<br>\r\n                            </vs-td>\r\n                            <vs-td>\r\n                                <a :href=\"data[indextr].video\" target=\"_blank\">{{data[indextr].video}}</a><br>\r\n                            </vs-td>\r\n\r\n                            <vs-td>\r\n                                <div v-if=\"tr.url == null\"> \r\n                                    \r\n                                </div>\r\n                                <div v-else> \r\n                                    <img width=\"100\" :src=\"$server_url+'preguntas_frecuentes/'+tr.url\"/>\r\n                                </div>\r\n                                \r\n                                <br>\r\n                            </vs-td>\r\n\r\n\r\n                            <vs-td>\r\n                                <div style=\"display:flex;\">\r\n                                  \r\n                                    <vx-tooltip style=\"display: inline-block;\" text=\"Editar Faq\" position=\"top\" color=\"primary\">\r\n                                        <vs-button size=\"small\" class=\"modal-default-button\" color=\"warning\" @click=\"update=true;openModalEditar(data[indextr])\"  type=\"filled\" icon-pack=\"feather\" icon=\"icon-edit\">\r\n                                        </vs-button>\r\n                                    </vx-tooltip> &nbsp;\r\n\r\n                                    <vx-tooltip style=\"display:inline-block\" color=\"danger\" text=\"Desactivar Pregunta\">\r\n                                        <vs-button style=\"display:inline-block\" v-if=\"data[indextr].estado_pregunta == '1'\" color=\"danger\" type=\"filled\" icon-pack=\"feather\" icon=\"icon-x-circle\" @click=\"ConfirmCambiadoEstadoCodigo(data[indextr], 0)\" size=\"small\"></vs-button>\r\n                                    </vx-tooltip>\r\n                                \r\n                                    <vx-tooltip style=\"display:inline-block\" color=\"primary\" text=\"Activar Pregunta\">\r\n                                        <vs-button style=\"display:inline-block\" v-if=\"data[indextr].estado_pregunta == '0'\" color=\"success\" type=\"filled\" icon-pack=\"feather\" icon=\"icon-check\" @click=\"ConfirmCambiadoEstadoCodigo(data[indextr], 1)\" size=\"small\"></vs-button>\r\n                                    </vx-tooltip> \r\n\r\n                                </div>\r\n                            </vs-td>\r\n                           \r\n                            \r\n                        </vs-tr>\r\n                    </template>\r\n                </vs-table>   \r\n            </div>\r\n            <div v-else class=\"p-3\">\r\n                <p> No existe preguntas frecuentes aun. </p>\r\n            </div>\r\n        </vs-card>\r\n        <!--PARA LOS MODALES -->\r\n        <!-- Modal Agregar-->\r\n        <div class=\"demo-alignment\">\r\n            <vs-popup classContent=\"popup-example\" title=\"Agregar Pregunta\" :active.sync=\"popupAddPregunta\">\r\n                \r\n                <vs-input class=\"inputx mb-3 w-full\" label=\"Pregunta\" v-model=\"pregunta.descripcion\" />\r\n     \r\n                <vs-input class=\"inputx mb-3 w-full\" label=\"Link video\" v-model=\"pregunta.video\" />\r\n    \r\n                    <!-- <p v-html=\"image\" class=\"foro-detalle p-5\"></p> -->\r\n                <vs-divider color=\"warning\">Respuesta</vs-divider>\r\n                 <vs-textarea counter=\"300\" :counter-danger.sync=\"counterDanger\" style=\"width:100%;\" label=\"Descripcion\" v-model=\"pregunta.respuesta\" />\r\n\r\n                <!-- <vs-input class=\"inputx mb-3 w-full\" label=\"Descripcion\" v-model=\"pregunta.respuesta\" /> -->\r\n                 Imagen:                    \r\n                <input type=\"file\" class=\"upload-file\" style=\"margin-top:20px;\"  @change=\"fieldChange\" />\r\n                 \r\n                 <br><br>       \r\n                <vs-button color=\"success\" class=\"w-full mb-3\" @click=\"guardarPregunta()\" type=\"gradient\" >Guardar</vs-button>\r\n            </vs-popup>\r\n        </div>\r\n\r\n          <!-- Modal Editar-->\r\n        <div class=\"demo-alignment\">\r\n            <vs-popup classContent=\"popup-example\" title=\"Editar Pregunta\" :active.sync=\"popupEditPregunta\">\r\n\r\n                <vs-input class=\"inputx mb-3 w-full\" label=\"Pregunta\" v-model=\"pregunta.descripcion\" />\r\n                <!-- <vs-input class=\"inputx mb-3 w-full\" label=\"Descripcion\" v-model=\"pregunta.respuesta\" /> -->\r\n                <vs-textarea counter=\"300\" :counter-danger.sync=\"counterDanger\" style=\"width:100%;\" label=\"Descripcion\" v-model=\"pregunta.respuesta\" />\r\n                <vs-input class=\"inputx mb-3 w-full\" label=\"Link video\" v-model=\"pregunta.video\" />\r\n                <div v-if=\"pregunta.url == null\"> \r\n                                \r\n                </div>\r\n                <div v-else> \r\n                    <p style=\"font-size:12px;\">Imagen actual</p>\r\n                    <img width=\"100\" style=\"margin-top:10px;\" :src=\"$server_url+'preguntas_frecuentes/'+pregunta.url\"/>\r\n                </div>\r\n\r\n                 <vs-input class=\"inputx mb-3 w-full\" disabled label=\"Nombre imagen actual\" v-model=\"pregunta.archivo\" />\r\n                Cambiar imagen:                    \r\n                <input type=\"file\" class=\"upload-file\" style=\"margin-top:20px;\"  @change=\"fieldChange\" />\r\n                <br><br>       \r\n                <vs-button color=\"success\" class=\"w-full mb-3\" @click=\"guardarPregunta()\" type=\"gradient\" >Actualizar</vs-button>\r\n            </vs-popup>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n    data() {\r\n        return{\r\n            counterDanger: false,\r\n            update:false,\r\n            popupAddPregunta:false,\r\n            popupEditPregunta:false,\r\n            preguntasFaq:[],\r\n            itemEstado:[],\r\n            estadoPregunta:'',\r\n            pregunta:{\r\n                descripcion:'',\r\n                respuesta:'',\r\n                archivo:'',\r\n                url:'',\r\n                video:'',\r\n            },\r\n            preguntasfaq_id:0,\r\n            //para subir archivos,\r\n            attachments:[],\r\n            form: new FormData,\r\n            errorImage:'no',\r\n            tamanioError:\"no\",\r\n        }\r\n    },\r\n    created(){\r\n        let me = this;\r\n        me.preguntasfaq();\r\n    },\r\n    methods:{\r\n        //para subir archivos\r\n        fieldChange(e){\r\n            let me = this;\r\n                me.errorImage = 'no'\r\n                me.tamanioError=\"no\"\r\n                this.attachments = [];\r\n                let selectedFiles=e.target.files;\r\n                let validar = e.target.files[0].type;\r\n\r\n                let tamanio = e.target.files[0].size;\r\n                \r\n                if(tamanio > 1000000){\r\n                    me.tamanioError=\"yes\"\r\n                    me.$vs.notify({\r\n                        text:'El tamaño de la imagen excede 1MB',\r\n                        color:'warning',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check'})  \r\n                        return false;  \r\n                }\r\n                \r\n            \r\n                if(validar == 'image/png' || validar == 'image/jpg' || validar == 'image/jpeg'){\r\n                    for(let i=0;i<selectedFiles.length;i++){\r\n\r\n                      this.attachments.push(selectedFiles[i]);\r\n                     }\r\n                     me.errorImage = 'no'\r\n                }else{\r\n                  me.errorImage = 'yes'\r\n                  me.$vs.notify({\r\n                    text:'Formato de imagen no aceptada solo se acepta png/jpg/jpeg',\r\n                    color:'success',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check'})\r\n                    return false;\r\n                  \r\n                \r\n                }\r\n            \r\n               \r\n        },\r\n\r\n         //traer las preguntas frecuentes\r\n        async preguntasfaq(){\r\n            let me = this;\r\n            await this.$http.get(this.$server_url+\"preguntasfaq?todo=yes\")\r\n            .then(function (response) {\r\n                me.preguntasFaq = response.data\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error)\r\n            });\r\n\r\n            \r\n        },\r\n        ConfirmCambiadoEstadoCodigo(item,estado){\r\n                let me = this;\r\n                me.itemEstado = item;\r\n                me.estadoPregunta = estado;\r\n               \r\n                this.$vs.dialog({\r\n                    type:'confirm',\r\n                    color: 'danger',\r\n                    title: `Confirm`,\r\n                    text:  'Esta seguro de cambiar el estado de la Pregunta?',\r\n                    accept:this.ActivarModalEstadoPregunta\r\n                })\r\n        },\r\n        ActivarModalEstadoPregunta(){\r\n            let me = this;\r\n            let formData = new FormData();\r\n            formData.append(\"preguntasfaq_id\", me.itemEstado.preguntasfaq_id);\r\n            formData.append(\"estado\", me.estadoPregunta);\r\n\r\n                me.$vs.loading()\r\n                this.$http.post(this.$server_url+'cambioEstadoPregunta', formData)\r\n                .then(res => {\r\n                    // console.log(res.data)\r\n\r\n                    if(res.data.message){\r\n                         me.$vs.notify({\r\n                            text: res.data.message,\r\n                            color: 'primary',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-check'\r\n                        })\r\n                        return false;\r\n                    }\r\n                    me.preguntasfaq();\r\n                    me.$vs.loading.close()\r\n                    me.$vs.notify({\r\n                            text: \"Se cambio de estado correctamente\",\r\n                            color: 'primary',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-check'\r\n                    })\r\n                    \r\n                })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close();\r\n                    console.log(error)\r\n                });\r\n        },\r\n\r\n         //para guardar las preguntas\r\n\r\n         guardarPregunta(){\r\n        \r\n            let me = this;\r\n         \r\n            if(me.tamanioError == 'yes'){\r\n                me.$vs.notify({\r\n                    text:'El tamaño de la imagen excede 1MB',\r\n                    color:'warning',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check'})  \r\n                    return false;  \r\n            }\r\n           \r\n            if(me.errorImage == 'yes'){\r\n                me.$vs.notify({\r\n                    text:'El formato de la imagen solo se acepta jpg/png/jpeg',\r\n                    color:'warning',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check'})  \r\n                    return false;      \r\n            }     \r\n            \r\n\r\n        \r\n            if(me.pregunta.descripcion.length < 5 || me.pregunta.respuesta.length < 5){\r\n                me.$vs.notify({\r\n                text:'Minimo 5 caracteres un campo se encuentra',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})  \r\n                return false;      \r\n            }\r\n\r\n              if(me.pregunta.descripcion.length >= 300){\r\n                me.$vs.notify({\r\n                text:'Maximo 300 caracteres para la Pregunta',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})  \r\n                return false;      \r\n            }\r\n\r\n              if(me.pregunta.respuesta.length >= 300){\r\n                me.$vs.notify({\r\n                text:'Maximo 300 caracteres para la descripcion',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})  \r\n                return false;      \r\n            }\r\n\r\n                let formData = new FormData();\r\n                //Si no se envia imagenes\r\n                if(me.attachments.length == 0){\r\n                      //Si no envia imagenes y se quiere editar\r\n                    if(me.update){\r\n                        formData.append('sinimagen', \"yes\");\r\n                        formData.append('preguntasfaq_id', me.preguntasfaq_id);\r\n                        formData.append('pregunta', me.pregunta.descripcion);\r\n\r\n                        if(me.pregunta.video == null){\r\n                           \r\n                        }else{\r\n                                if(me.pregunta.video.length > 10){\r\n\r\n                                    formData.append('video', me.pregunta.video);  \r\n                                }\r\n                                else{\r\n                                    formData.append('video', me.pregunta.video);\r\n                                }\r\n\r\n                        }\r\n                            \r\n                        \r\n                        formData.append('respuesta', me.pregunta.respuesta);\r\n                    }\r\n                      //Si  no envia imagenes y se quiere guardar\r\n                    else{\r\n                        formData.append('sinimagen', \"yes\");\r\n                        formData.append('pregunta', me.pregunta.descripcion);\r\n\r\n                        if(me.pregunta.video == null){\r\n                           \r\n                        }else{\r\n                         \r\n                                if(me.pregunta.video.length > 10){\r\n\r\n                                    // var obtenerFrame = me.pregunta.video.replace('watch?v=','embed/');\r\n                                  \r\n                                    formData.append('video', me.pregunta.video);  \r\n\r\n                                }\r\n                                else{\r\n                                    formData.append('video', me.pregunta.video);\r\n                                }\r\n\r\n                        }\r\n                      \r\n                        formData.append('respuesta', me.pregunta.respuesta); \r\n                    }\r\n                }else{\r\n                    //Si se envia imagenes\r\n                    for(let i=0; i<this.attachments.length;i++){\r\n                        \r\n                        //Si se envia imagenes y se quiere editar\r\n                        if(me.update){\r\n                            formData.append('preguntasfaq_id', me.preguntasfaq_id);\r\n                            formData.append('pregunta', me.pregunta.descripcion);\r\n                            formData.append('respuesta', me.pregunta.respuesta);\r\n\r\n                            \r\n                                if(me.pregunta.video == null){\r\n                           \r\n                                }else{\r\n                                        if(me.pregunta.video.length > 10){\r\n\r\n                                            formData.append('video', me.pregunta.video);  \r\n\r\n                                        }\r\n                                        else{\r\n                                            formData.append('video', me.pregunta.video);\r\n                                        }\r\n\r\n                                }\r\n                            formData.append('archivo[]',this.attachments[i]);\r\n                        }\r\n                          //Si se envia imagenes y se quiere guardar\r\n                        else{\r\n                            formData.append('pregunta', me.pregunta.descripcion);\r\n                            formData.append('respuesta', me.pregunta.respuesta); \r\n\r\n                            if(me.pregunta.video.length > 10){\r\n                         \r\n                            formData.append('video', me.pregunta.video);  \r\n\r\n                            }else{\r\n\r\n                                formData.append('video', me.pregunta.video);\r\n                            }\r\n                            formData.append('archivo[]',this.attachments[i]);\r\n                        \r\n                        }\r\n                     }\r\n                }\r\n\r\n          \r\n           \r\n         \r\n            const config = { headers: { 'Content-Type': 'multipart/form-data' } };\r\n            document.querySelectorAll('.upload-file').value=[];\r\n            me.$vs.loading()\r\n            this.$http.post(this.$server_url+'preguntasfaq', formData,config)\r\n                .then(function (res) {\r\n                    me.$vs.loading.close();\r\n                    me.$vs.notify({\r\n                        text: res.data,\r\n                        color: 'primary',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-alert-triangle'\r\n                    })\r\n                    me.preguntasfaq()\r\n                    me.popupAddPregunta=false,\r\n                    me.popupEditPregunta=false,\r\n                    // me.update = false;\r\n                    limpiar()\r\n                  \r\n                })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close();\r\n                })\r\n        },\r\n        //para editar los campos\r\n        openModalEditar(data={}){\r\n            let me = this;\r\n            me.attachments = [];\r\n            document.querySelectorAll('.upload-file').value=[];\r\n            me.popupEditPregunta = true;\r\n            //llenar la data en los campos\r\n            me.preguntasfaq_id = data.preguntasfaq_id;\r\n            me.pregunta.descripcion = data.pregunta;  \r\n            me.pregunta.respuesta = data.descripcion;\r\n            me.pregunta.archivo = data.archivo;\r\n            me.pregunta.url = data.url;\r\n            me.pregunta.video = data.video\r\n \r\n        },\r\n        limpiar(){\r\n            let me = this;\r\n            me.pregunta.descripcion = \"\";\r\n            me.pregunta.respuesta = \"\";\r\n            me.pregunta.archivo = \"\";\r\n            me.pregunta.url = \"\";\r\n            me.pregunta.video = \"\";\r\n            me.attachments = [];\r\n        }\r\n\r\n    }\r\n}\r\n</script>"]}]}