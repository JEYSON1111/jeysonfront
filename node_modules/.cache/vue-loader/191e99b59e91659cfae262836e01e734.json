{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\Perfil.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\Perfil.vue","mtime":1712682815365},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nimport flatPickr from 'vue-flatpickr-component';\r\nimport vSelect from 'vue-select'\r\nimport 'vue-select/dist/vue-select.css';\r\nimport VueDocPreview from 'vue-doc-preview'\r\nimport Vue from 'vue'\r\nimport axios from 'axios'\r\nimport vue2Dropzone from 'vue2-dropzone'\r\nimport 'vue2-dropzone/dist/vue2Dropzone.min.css'\r\nVue.use(axios)\r\nexport default {\r\n    components: {\r\n        'v-select': vSelect,\r\n        vueDropzone: vue2Dropzone,\r\n        VueDocPreview,\r\n        flatPickr\r\n    },\r\n    data() {\r\n        return {\r\n            file: [],\r\n            user:[],\r\n            usuario: [],\r\n            error: '',\r\n            password: '',\r\n            passwordc: '',\r\n            btn: true,\r\n            ciudad: [],\r\n            instituciones: [],\r\n            idregion: '',\r\n            idciudad: '',\r\n            ciudadSelect:'',\r\n            institucion_estudiante: [],\r\n             configdateTimePicker: {\r\n                enableTime: true,\r\n                dateFormat: 'Y-m-d'\r\n            },\r\n            paralelos:[],\r\n            cursos:[],\r\n\r\n        }\r\n    },\r\n    created() {\r\n        this.infoRegistro();\r\n        this.user = JSON.parse(localStorage.getItem('usuario'));\r\n        this.institucion_estudiante = {idInstitucion: this.usuario.institucion_idInstitucion, nombreInstitucion: this.usuario.nombreInstitucion}\r\n    },\r\n    mounted() {\r\n        let me = this;\r\n        me.getCiudadSelect();\r\n        me.getInstituciones();\r\n        me.userInfo();\r\n    },\r\n    computed: {\r\n        activeUserInfo() {\r\n            return this.$store.state.AppActiveUser\r\n        }\r\n    },\r\n    methods: {\r\n        infoRegistro() {\r\n            let me = this;\r\n            this.$http.get(this.$server_url+'infoRegistro')\r\n                .then(function (res) {\r\n                    me.paralelos = res.data.paralelos\r\n                    me.cursos = res.data.cursos  \r\n\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                    \r\n\r\n                })\r\n        },\r\n        userInfo(){\r\n            let me = this;\r\n            this.$http.get(this.$server_url+'userInformacion?idusuario='+me.user.idusuario)\r\n                .then(function (res) {\r\n                    me.usuario = res.data[0]\r\n                    me.usuario.curso = {orden:me.usuario.curso, nombrenivel:me.usuario.nombrenivel};\r\n                    me.usuario.paralelo = {paralelo_id:me.usuario.paralelo, descripcion:me.usuario.descripcion};\r\n               \r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                \r\n                })\r\n        },\r\n        verificar() {\r\n            var n = this.password.localeCompare(this.passwordc);\r\n            if (n == 0) {\r\n                this.btn = false;\r\n                this.error = \"\"\r\n            } else {\r\n                this.btn = true;\r\n                this.error = \"ContraseÃ±as no coinciden\"\r\n            }\r\n        },\r\n        async guardar() {\r\n            let me = this\r\n             if(me.usuario.nombres.length >= 200){\r\n                me.$vs.notify({\r\n                    color: 'primary',\r\n                    title: 'Mensaje',\r\n                    text: 'Los nombres no pueden un maximo de 200 caracteres'\r\n                    })\r\n                return false;\r\n            }\r\n\r\n            if(me.usuario.apellidos.length >= 200){\r\n                me.$vs.notify({\r\n                    color: 'primary',\r\n                    title: 'Mensaje',\r\n                    text: 'Los apellidos no pueden un maximo de 200 caracteres'\r\n                    })\r\n                return false;\r\n            }\r\n\r\n            if(me.usuario.telefono.length >= 20){\r\n                me.$vs.notify({\r\n                    color: 'primary',\r\n                    title: 'Mensaje',\r\n                    text: 'El telefono no puede tener un maximo de 20 caracteres'\r\n                    })\r\n                return false;\r\n            }\r\n\r\n            if(me.usuario.email.length >= 200){\r\n                me.$vs.notify({\r\n                    color: 'primary',\r\n                    title: 'Mensaje',\r\n                    text: 'El email no puede un maximo de 200 caracteres'\r\n                    })\r\n                return false;\r\n            }\r\n\r\n            if(me.usuario.cedula.length >= 20){\r\n                me.$vs.notify({\r\n                    color: 'primary',\r\n                    title: 'Mensaje',\r\n                    text: 'La cedula no puede un maximo de 20 caracteres'\r\n                    })\r\n                return false;\r\n            }\r\n\r\n            let formData = new FormData();\r\n            formData.append('archivo', me.file);\r\n            formData.append('idusuario', this.usuario.idusuario);\r\n            formData.append('cedula', this.usuario.cedula);\r\n            formData.append('nombres', this.usuario.nombres);\r\n            formData.append('apellidos', this.usuario.apellidos);\r\n            formData.append('email', this.usuario.email);\r\n            formData.append('telefono', this.usuario.telefono);\r\n            formData.append('nacionalidad', this.usuario.nacionalidad);\r\n            formData.append('fecha_nacimiento', this.usuario.fecha_nacimiento);\r\n            if(this.usuario.iniciales == null || this.usuario.iniciales == \"null\" ){\r\n                formData.append('iniciales', \"\"); \r\n            }else{\r\n                 formData.append('iniciales', this.usuario.iniciales);\r\n            }\r\n            if(this.usuario.curso == null || this.usuario.curso == undefined || this.usuario.curso == \"\"){\r\n\r\n            }else{\r\n                 formData.append('curso', this.usuario.curso.orden);\r\n            }\r\n             if(this.usuario.paralelo == null || this.usuario.paralelo == undefined || this.usuario.paralelo == \"\"){\r\n\r\n            }else{\r\n                formData.append('paralelo', this.usuario.paralelo.paralelo_id);\r\n            }\r\n            formData.append('genero', this.usuario.sexo);\r\n            // formData.append('password', this.password);\r\n             me.$vs.loading();\r\n            formData.append('institucion_idInstitucion', this.usuario.institucion_idInstitucion);\r\n\r\n            axios.post(this.$data_url+'api/perfil', formData)\r\n                .then(function (response) {\r\n\r\n                   me.file = '';\r\n                    me.$vs.loading.close();\r\n                    localStorage.setItem('usuario', JSON.stringify(response.data[0]));\r\n                      \r\n                    location.reload();\r\n                    me.userInfo()\r\n                })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close()\r\n                })\r\n        },\r\n        obtenerImagen(e) {\r\n            let file = e.target.files[0];\r\n            this.file = file;\r\n        },\r\n        getInstituciones() {\r\n            let me = this;\r\n            this.$http.get(this.$server_url+'selectInstitucion?idregion=' + me.idregion + '&idciudad=' + me.idciudad)\r\n                .then(function (response) {\r\n                    me.instituciones = response.data;\r\n                })\r\n                .catch(function (error) {})\r\n        },\r\n        getInstitucion() {\r\n            let me = this;\r\n            me.institucion_estudiante = []\r\n            this.$http.get(this.$server_url+'selectInstitucion?idregion=' + me.idregion + '&idciudad=' + me.idciudad)\r\n                .then(function (response) {\r\n                    me.instituciones = response.data;\r\n                    // console.log( me.instituciones )\r\n                })\r\n                .catch(function (error) {})\r\n        },\r\n        async getCiudadSelect() {\r\n            let me = this;\r\n            this.$http.get(this.$server_url+\"ciudad\").then(function (response) {\r\n                me.ciudad = response.data\r\n            });\r\n        },\r\n    },\r\n}\r\n",{"version":3,"sources":["Perfil.vue"],"names":[],"mappings":";AA0GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Perfil.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n<vx-card title=\"Mi Perfil\">\r\n    <div  style=\"display: flex;justify-content: center\">\r\n    <div v-if=\"usuario.foto_user == 'default.png' \">\r\n        <vs-avatar   :src=\"activeUserInfo.photoURL\" alt=\"user-img\" size=\"120px\" class=\"rounded-full shadow-md cursor-pointer block\" />\r\n    </div>\r\n    <div v-else>\r\n        <vs-avatar style=\"margin-auto;display:block;\" :src=\"$data_url+'archivos/'+'perfil/'+usuario.foto_user\" alt=\"user-img\" size=\"120px\" class=\"rounded-full shadow-md cursor-pointer block\" />\r\n    </div>\r\n    </div>\r\n    <div class=\"vx-row mb-6\">\r\n        <div class=\"vx-col w-full sm:w-1/2\">\r\n            Foto de Perfil\r\n            <vs-input type=\"file\" class=\"w-full\" icon-pack=\"feather\" icon=\"icon-user\" accept=\"image/png, image/gif, image/jpeg, image/gif, image/jpg\" icon-no-border @change=\"obtenerImagen\" />\r\n        </div>\r\n        <div class=\"vx-col w-full sm:w-1/2\">\r\n            <vs-input class=\"w-full\" icon-pack=\"feather\" disabled icon=\"icon-smartphone\" icon-no-border label=\"CÃ©dula\" v-model=\"usuario.cedula\" />\r\n        </div>\r\n    </div>\r\n\r\n\r\n    <div class=\"vx-row mb-6\">\r\n        <div class=\"vx-col w-full sm:w-1/2\">\r\n            <vs-input class=\"w-full\" icon-pack=\"feather\" icon=\"icon-user\" icon-no-border label=\"Nombres\" v-model=\"usuario.nombres\" />\r\n        </div>\r\n        <div class=\"vx-col w-full sm:w-1/2\">\r\n            <vs-input class=\"w-full\" icon-pack=\"feather\" icon=\"icon-user\" icon-no-border label=\"Apellidos\" v-model=\"usuario.apellidos\" />\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"vx-row mb-6\">\r\n        <div class=\"vx-col w-full sm:w-1/2\">\r\n            <vs-input type=\"email\" class=\"w-full\" disabled icon-pack=\"feather\" icon=\"icon-mail\" icon-no-border label=\"Correo\" v-model=\"usuario.email\" />\r\n        </div>\r\n        <div class=\"vx-col w-full sm:w-1/2\">\r\n            <vs-input class=\"w-full\" type=\"tel\"  icon-pack=\"feather\" icon=\"icon-smartphone\" icon-no-border label=\"TelÃ©fono\" v-model=\"usuario.telefono\" />\r\n        </div>\r\n    </div>\r\n    <div class=\"vx-row mb-6\">\r\n        <div class=\"vx-col w-full sm:w-1/2\">\r\n            <vs-input type=\"email\" class=\"w-full\"  icon-pack=\"feather\" icon=\"icon-mail\" icon-no-border label=\"Nacionalidad\" v-model=\"usuario.nacionalidad\" />\r\n        </div>\r\n        <div class=\"vx-col w-full sm:w-1/2\">\r\n            <ul class=\"flex mt-5\">\r\n                <li>\r\n                <vs-radio v-model=\"usuario.sexo\" vs-name=\"radios1\" vs-value=\"hombre\">Hombre</vs-radio>\r\n                </li>\r\n                <li>\r\n                <vs-radio  v-model=\"usuario.sexo\" class=\"ml-2\" vs-name=\"radios1\" vs-value=\"mujer\">Mujer</vs-radio>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n    <div class=\"vx-row mb-6\">\r\n        <div class=\"vx-col w-full sm:w-1/2\">\r\n            Grado:\r\n             <v-select :options=\"cursos\" :reduce=\"cursos => cursos\" label=\"nombrenivel\" class=\"w-full\" v-model=\"usuario.curso\" />\r\n        </div>\r\n        <div class=\"vx-col w-full sm:w-1/2\">\r\n            Paralelo\r\n             <v-select id=\"paralelo\" :options=\"paralelos\" :reduce=\"paralelos => paralelos\" label=\"descripcion\" class=\"w-full\" v-model=\"usuario.paralelo\" />\r\n        </div>\r\n    </div>\r\n     <div class=\"vx-row mb-6\">\r\n        <div class=\"vx-col sm:w-1/3 w-full\">\r\n            <span>Fecha Nacimiento</span>\r\n        </div>\r\n        <div class=\"vx-col sm:w-2/3 w-full\">\r\n              <flat-pickr :config=\"configdateTimePicker\" v-model=\"usuario.fecha_nacimiento\" placeholder=\"Fecha Nacimiento\" class=\"m-1\" style=\"display: inline-block;width: 100%\" />\r\n        </div>\r\n    </div>\r\n    <div class=\"vx-row mb-6\" v-if=\"user.id_group == 11\">\r\n        <div class=\"vx-col sm:w-1/3 w-full\">\r\n            <span>Iniciales</span>\r\n        </div>\r\n        <div class=\"vx-col sm:w-2/3 w-full\">\r\n            <vs-input class=\"w-full\" type=\"tel\" disabled  icon-pack=\"feather\" icon=\"icon-check\" icon-no-border label=\"Iniciales\" v-model=\"usuario.iniciales\" />\r\n        </div>\r\n    </div>\r\n\r\n\r\n    <div class=\"vx-row mb-6\">\r\n        <div class=\"vx-col sm:w-1/3 w-full\">\r\n            <span>Ciudad</span>\r\n        </div>\r\n        <div class=\"vx-col sm:w-2/3 w-full\">\r\n            <p>{{ usuario.ciudad }}</p>\r\n        </div>\r\n    </div>\r\n    <div class=\"vx-row mb-6\">\r\n        <div class=\"vx-col sm:w-1/3 w-full\">\r\n            <span>InstituciÃ³n</span>\r\n            <vs-input class=\"w-full\" type=\"tel\" hidden icon-pack=\"feather\" v-model=\"usuario.institucion_idInstitucion\" />\r\n\r\n        </div>\r\n        <div class=\"vx-col sm:w-2/3 w-full\">\r\n            <p>{{ usuario.nombreInstitucion }}</p>\r\n        </div>\r\n    </div>\r\n    <div class=\"vx-row text-center\">\r\n        <vs-button  @click=\"guardar\" class=\"w-full mr-3 mb-2\" color=\"success\">Guardar</vs-button>\r\n    </div>\r\n</vx-card>\r\n</template>\r\n\r\n<script>\r\nimport flatPickr from 'vue-flatpickr-component';\r\nimport vSelect from 'vue-select'\r\nimport 'vue-select/dist/vue-select.css';\r\nimport VueDocPreview from 'vue-doc-preview'\r\nimport Vue from 'vue'\r\nimport axios from 'axios'\r\nimport vue2Dropzone from 'vue2-dropzone'\r\nimport 'vue2-dropzone/dist/vue2Dropzone.min.css'\r\nVue.use(axios)\r\nexport default {\r\n    components: {\r\n        'v-select': vSelect,\r\n        vueDropzone: vue2Dropzone,\r\n        VueDocPreview,\r\n        flatPickr\r\n    },\r\n    data() {\r\n        return {\r\n            file: [],\r\n            user:[],\r\n            usuario: [],\r\n            error: '',\r\n            password: '',\r\n            passwordc: '',\r\n            btn: true,\r\n            ciudad: [],\r\n            instituciones: [],\r\n            idregion: '',\r\n            idciudad: '',\r\n            ciudadSelect:'',\r\n            institucion_estudiante: [],\r\n             configdateTimePicker: {\r\n                enableTime: true,\r\n                dateFormat: 'Y-m-d'\r\n            },\r\n            paralelos:[],\r\n            cursos:[],\r\n\r\n        }\r\n    },\r\n    created() {\r\n        this.infoRegistro();\r\n        this.user = JSON.parse(localStorage.getItem('usuario'));\r\n        this.institucion_estudiante = {idInstitucion: this.usuario.institucion_idInstitucion, nombreInstitucion: this.usuario.nombreInstitucion}\r\n    },\r\n    mounted() {\r\n        let me = this;\r\n        me.getCiudadSelect();\r\n        me.getInstituciones();\r\n        me.userInfo();\r\n    },\r\n    computed: {\r\n        activeUserInfo() {\r\n            return this.$store.state.AppActiveUser\r\n        }\r\n    },\r\n    methods: {\r\n        infoRegistro() {\r\n            let me = this;\r\n            this.$http.get(this.$server_url+'infoRegistro')\r\n                .then(function (res) {\r\n                    me.paralelos = res.data.paralelos\r\n                    me.cursos = res.data.cursos  \r\n\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                    \r\n\r\n                })\r\n        },\r\n        userInfo(){\r\n            let me = this;\r\n            this.$http.get(this.$server_url+'userInformacion?idusuario='+me.user.idusuario)\r\n                .then(function (res) {\r\n                    me.usuario = res.data[0]\r\n                    me.usuario.curso = {orden:me.usuario.curso, nombrenivel:me.usuario.nombrenivel};\r\n                    me.usuario.paralelo = {paralelo_id:me.usuario.paralelo, descripcion:me.usuario.descripcion};\r\n               \r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                \r\n                })\r\n        },\r\n        verificar() {\r\n            var n = this.password.localeCompare(this.passwordc);\r\n            if (n == 0) {\r\n                this.btn = false;\r\n                this.error = \"\"\r\n            } else {\r\n                this.btn = true;\r\n                this.error = \"ContraseÃ±as no coinciden\"\r\n            }\r\n        },\r\n        async guardar() {\r\n            let me = this\r\n             if(me.usuario.nombres.length >= 200){\r\n                me.$vs.notify({\r\n                    color: 'primary',\r\n                    title: 'Mensaje',\r\n                    text: 'Los nombres no pueden un maximo de 200 caracteres'\r\n                    })\r\n                return false;\r\n            }\r\n\r\n            if(me.usuario.apellidos.length >= 200){\r\n                me.$vs.notify({\r\n                    color: 'primary',\r\n                    title: 'Mensaje',\r\n                    text: 'Los apellidos no pueden un maximo de 200 caracteres'\r\n                    })\r\n                return false;\r\n            }\r\n\r\n            if(me.usuario.telefono.length >= 20){\r\n                me.$vs.notify({\r\n                    color: 'primary',\r\n                    title: 'Mensaje',\r\n                    text: 'El telefono no puede tener un maximo de 20 caracteres'\r\n                    })\r\n                return false;\r\n            }\r\n\r\n            if(me.usuario.email.length >= 200){\r\n                me.$vs.notify({\r\n                    color: 'primary',\r\n                    title: 'Mensaje',\r\n                    text: 'El email no puede un maximo de 200 caracteres'\r\n                    })\r\n                return false;\r\n            }\r\n\r\n            if(me.usuario.cedula.length >= 20){\r\n                me.$vs.notify({\r\n                    color: 'primary',\r\n                    title: 'Mensaje',\r\n                    text: 'La cedula no puede un maximo de 20 caracteres'\r\n                    })\r\n                return false;\r\n            }\r\n\r\n            let formData = new FormData();\r\n            formData.append('archivo', me.file);\r\n            formData.append('idusuario', this.usuario.idusuario);\r\n            formData.append('cedula', this.usuario.cedula);\r\n            formData.append('nombres', this.usuario.nombres);\r\n            formData.append('apellidos', this.usuario.apellidos);\r\n            formData.append('email', this.usuario.email);\r\n            formData.append('telefono', this.usuario.telefono);\r\n            formData.append('nacionalidad', this.usuario.nacionalidad);\r\n            formData.append('fecha_nacimiento', this.usuario.fecha_nacimiento);\r\n            if(this.usuario.iniciales == null || this.usuario.iniciales == \"null\" ){\r\n                formData.append('iniciales', \"\"); \r\n            }else{\r\n                 formData.append('iniciales', this.usuario.iniciales);\r\n            }\r\n            if(this.usuario.curso == null || this.usuario.curso == undefined || this.usuario.curso == \"\"){\r\n\r\n            }else{\r\n                 formData.append('curso', this.usuario.curso.orden);\r\n            }\r\n             if(this.usuario.paralelo == null || this.usuario.paralelo == undefined || this.usuario.paralelo == \"\"){\r\n\r\n            }else{\r\n                formData.append('paralelo', this.usuario.paralelo.paralelo_id);\r\n            }\r\n            formData.append('genero', this.usuario.sexo);\r\n            // formData.append('password', this.password);\r\n             me.$vs.loading();\r\n            formData.append('institucion_idInstitucion', this.usuario.institucion_idInstitucion);\r\n\r\n            axios.post(this.$data_url+'api/perfil', formData)\r\n                .then(function (response) {\r\n\r\n                   me.file = '';\r\n                    me.$vs.loading.close();\r\n                    localStorage.setItem('usuario', JSON.stringify(response.data[0]));\r\n                      \r\n                    location.reload();\r\n                    me.userInfo()\r\n                })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close()\r\n                })\r\n        },\r\n        obtenerImagen(e) {\r\n            let file = e.target.files[0];\r\n            this.file = file;\r\n        },\r\n        getInstituciones() {\r\n            let me = this;\r\n            this.$http.get(this.$server_url+'selectInstitucion?idregion=' + me.idregion + '&idciudad=' + me.idciudad)\r\n                .then(function (response) {\r\n                    me.instituciones = response.data;\r\n                })\r\n                .catch(function (error) {})\r\n        },\r\n        getInstitucion() {\r\n            let me = this;\r\n            me.institucion_estudiante = []\r\n            this.$http.get(this.$server_url+'selectInstitucion?idregion=' + me.idregion + '&idciudad=' + me.idciudad)\r\n                .then(function (response) {\r\n                    me.instituciones = response.data;\r\n                    // console.log( me.instituciones )\r\n                })\r\n                .catch(function (error) {})\r\n        },\r\n        async getCiudadSelect() {\r\n            let me = this;\r\n            this.$http.get(this.$server_url+\"ciudad\").then(function (response) {\r\n                me.ciudad = response.data\r\n            });\r\n        },\r\n    },\r\n}\r\n</script>\r\n\r\n<style>\r\n.uploading-image {\r\n    display: flex;\r\n}\r\n</style>\r\n"]}]}