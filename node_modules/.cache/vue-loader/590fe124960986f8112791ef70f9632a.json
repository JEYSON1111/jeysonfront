{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\pedidos2\\pedidos\\reportes\\PedidosPromociosContratos.vue?vue&type=style&index=0&id=47b074e1&lang=css","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\pedidos2\\pedidos\\reportes\\PedidosPromociosContratos.vue","mtime":1712682816413},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\n.fixed-column {\r\n  position: sticky;\r\n  left: 0;\r\n  background-color: white;\r\n}\r\n.fixed-column2 {\r\n  position: sticky;\r\n  top: 0;\r\n  background-color: white;\r\n}\r\n",{"version":3,"sources":["PedidosPromociosContratos.vue"],"names":[],"mappings":";AAsPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PedidosPromociosContratos.vue","sourceRoot":"src/views/pedidos2/pedidos/reportes","sourcesContent":["\r\n<template>\r\n  <vx-card class=\"w-full flex flex-col space-y-2\"\r\n  title=\"Reporte de pedidos de libros por asesor\"\r\n  >\r\n    <div class=\"vx-row\">\r\n      <div class=\"sm:w-full md:w-full lg:w-1/3 xl:w-1/3 ml-3\">\r\n        <small>Período</small>\r\n        <v-select :options=\"periodos\" :disabled=\"periodoEspecifico == '1' ? true : false\" :reduce=\"periodos => periodos\" @input=\"arrayReporte = [];getLibros();\" label=\"periodoescolar\" class=\"w-full\" v-model=\"periodo\" />\r\n      </div>\r\n      <div class=\"vx-col w-full sm:w-1/2 md:w-1/2 lg:w-1/1 xl:w-1/2 mb-6\">\r\n        <small>Asesores</small>\r\n        <div class=\"flex\">\r\n          <v-select :options=\"arrayAsesores\" @input=\"arrayReporte=[];getLibros();\" :reduce=\"arrayAsesores => arrayAsesores.id_asesor\" label=\"asesor\" class=\"w-full\" v-model=\"asesorSelect\" />\r\n            <vs-button icon=\"search\" class=\"ml-1\" @click=\"getReporte();\">Buscar</vs-button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <br>\r\n    <vs-button @click=\"exportData\" color=\"primary\" class=\"btn btn-sm mt-5\" icon-pack=\"feather\" icon=\"icon-printer\" v-if=\"arrayReporte.length > 0\">\r\n      Exportar\r\n    </vs-button>\r\n    <vs-table max-items=\"50\" search stripe pagination :data=\"arrayReporte\">\r\n      <template slot=\"header\">\r\n        <vs-chip>Cantidad {{arrayReporte.length}}</vs-chip>\r\n      </template>\r\n      <template slot=\"thead\">\r\n        <vs-th class=\"\" sort-key=\"fecha_inicio\">Institución</vs-th>\r\n        <vs-th class=\"\" sort-key=\"fecha_inicio\">Contratos</vs-th>\r\n        <vs-th class=\"\" v-for=\"(value, key) in arrayReporte[0]\" :key=\"key\"\r\n          v-if=\"key !== 'id_pedido' && key !== 'contrato_generado' && key !== 'nombreInstitucion' && key !== 'ciudad'\">\r\n          {{ key.toUpperCase().replace('_', ' ') }}\r\n        </vs-th>\r\n      </template>\r\n      <template slot-scope=\"{data}\">\r\n        <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n          <vs-td>\r\n            <div>\r\n              <div style=\"width: 200px;\" class=\"flex flex-col gap-2\">\r\n                <span> Pedido # {{ tr.id_pedido }}</span>\r\n                <span class=\"flex font-bold\">{{ tr.nombreInstitucion }}</span>\r\n                <span class=\"text-xs\">{{ tr.ciudad }}</span>\r\n              </div>\r\n            </div>\r\n          </vs-td>\r\n          <vs-td class=\"fixed-column\">\r\n            <div>\r\n              <div style=\"width: 200px;\" class=\"flex flex-col gap-2\">\r\n               <span class=\"flex font-bold\">{{ tr.contrato_generado }}</span>\r\n              </div>\r\n            </div>\r\n            <br>\r\n          </vs-td>\r\n          <vs-td v-for=\"(value, key) in tr\" :key=\"key\"\r\n            v-if=\"key !== 'id_pedido' && key !== 'contrato_generado' &&  key !== 'nombreInstitucion' && key !== 'ciudad'\">\r\n            <span v-if=\"value > 0\" style=\"background-color: #3FACB1;color:white;border-radius: 50%;padding: 10px;cursor-pointer;border: 5px solid #71B5B9;\">\r\n              {{ value }}\r\n            </span>\r\n            <span v-else>\r\n            </span>\r\n          </vs-td>\r\n        </vs-tr>\r\n      </template>\r\n    </vs-table>\r\n  </vx-card>\r\n</template>\r\n<script>\r\nimport vSelect from 'vue-select';\r\nimport moment from 'moment';\r\nimport * as XLSX from 'xlsx';\r\n\r\nexport default ({\r\n  components: {\r\n    vSelect,\r\n  },\r\n  data: () => ({\r\n    title: 'Reporte de capacitaciones',\r\n    periodo: null,\r\n    periodos: [\r\n    ],\r\n\r\n    //////////////////////////\r\n    arrayAsesores:[],\r\n    asesorSelect:'',\r\n    arrayLibros:[],\r\n    arrayReporte:[],\r\n  }),\r\n  created() {\r\n    let me = this\r\n    this.getPeriodos();\r\n    this.getAsesores();\r\n    this.periodo = this.periodos[0];\r\n    this.currentUser  = JSON.parse(localStorage.getItem('usuario'));\r\n  },\r\n  mounted(){\r\n    let me = this;\r\n  },\r\n  props: {\r\n    periodoSelect: {\r\n      type: Object,\r\n      default: () => {},\r\n    },\r\n    periodoEspecifico:{\r\n      type: String,\r\n      default: \"0\",\r\n    }\r\n  },\r\n  methods: {\r\n    getPeriodos() {\r\n      const me = this;\r\n      me.$http.get(`${me.$server_url}get_periodos_seminarios`)\r\n        .then((res) => {\r\n          me.periodos = res.data.filter(p => p.idperiodoescolar != 20 && p.idperiodoescolar != 17 && p.idperiodoescolar != 15 && p.idperiodoescolar != 14 && p.idperiodoescolar > 11 )\r\n          me.periodo = me.periodos.filter(p => p.idperiodoescolar == me.periodoSelect.idperiodoescolar)[0];\r\n          if(me.periodo.idperiodoescolar) {\r\n            me.getLibros();\r\n          }\r\n        })\r\n        .catch((err) => this.showError(\"Error al obtener los periodos\"));\r\n    },\r\n    getLibros() {\r\n      const me = this;\r\n      me.arrayLibros = [];\r\n      if(me.periodo == null || me.periodo == \"\" || me.periodo == undefined ) { return }\r\n      if(me.asesorSelect == '' || me.asesorSelect == null || me.asesorSelect == undefined)  { return; }\r\n      this.$http.get(this.$server_url+`pedidos2/pedidos?geAllLibrosxAsesor=yes&asesor_id=${me.asesorSelect}&periodo_id=${me.periodo.idperiodoescolar}`)\r\n      //this.$http.get(this.$server_url+`pedidos2/pedidos?getLibrosFormato=yes&periodo_id=${me.periodo.idperiodoescolar}`)\r\n        .then((res) => {\r\n          let datos                 = res.data;\r\n          let librosNormales        = []\r\n          let libroPlanLector       = []\r\n          let getNormalesOrdenado   = []\r\n          let getPlanLectorOrdenado = []\r\n          if(datos.length == 0)     { me.showError(\"No hay libros para este asesor\"); return; }\r\n          librosNormales            = datos.filter(p => p.id_serie != 6)\r\n          libroPlanLector           = datos.filter(p => p.id_serie == 6)\r\n          getNormalesOrdenado       = me.ordenarLibros(librosNormales)\r\n          getPlanLectorOrdenado     = me.ordenarLibros(libroPlanLector)\r\n          //unir array con spread operator\r\n          me.arrayLibros            = [...getNormalesOrdenado,...getPlanLectorOrdenado]\r\n        })\r\n        .catch((err) => {\r\n          this.showError(\"Error al obtener los libros\", err);\r\n        });\r\n    },\r\n    ordenarLibros(datos){\r\n      let me = this\r\n      let predatos  = []\r\n      let valores   = []\r\n      predatos = datos\r\n      valores = predatos.sort(function(a, b) {\r\n      var nombreA = a.codigo.toLowerCase();\r\n      var nombreB = b.codigo.toLowerCase();\r\n      var numA = parseInt(nombreA.match(/\\d+$/)); // extraer el número del final (si existe)\r\n      var numB = parseInt(nombreB.match(/\\d+$/)); // extraer el número del final (si existe)\r\n      nombreA = nombreA.replace(/\\d+$/, ''); // quitar el número del final\r\n      nombreB = nombreB.replace(/\\d+$/, ''); // quitar el número del final\r\n      if (nombreA < nombreB) {\r\n          return -1;\r\n      }\r\n      if (nombreA > nombreB) {\r\n          return 1;\r\n      }\r\n      if (numA && !numB) { // si a tiene número y b no, b va primero\r\n          return 1;\r\n      }\r\n      if (!numA && numB) { // si b tiene número y a no, a va primero\r\n          return -1;\r\n      }\r\n      if (numA && numB) { // si ambos tienen número, compararlos\r\n          if (numA < 10 && numB >= 10) { // si a es menor que 10 y b es 10 o mayor, a va primero\r\n          return -1;\r\n          }\r\n          if (numA >= 10 && numB < 10) { // si b es menor que 10 y a es 10 o mayor, b va primero\r\n          return 1;\r\n          }\r\n          return numA - numB; // comparar los números directamente\r\n      }\r\n      return 0; // si son iguales en todo, no hay diferencia\r\n      });\r\n      return valores\r\n    },\r\n    getReporte(){\r\n      let me = this;\r\n      me.arrayReporte = []\r\n      if(me.asesorSelect == '' || me.asesorSelect == null || me.asesorSelect == undefined)  { me.showError(\"Seleccione un asesor\"); return; }\r\n      if(me.periodo == '' || me.periodo == null || me.periodo == undefined)                 { me.showError(\"Seleccione un período\");  return;  }\r\n      me.$vs.loading();\r\n      //api post\r\n      let formData = new FormData();\r\n      formData.append('getValoresLibrosContratos', 'yes');\r\n      formData.append('asesor_id', me.asesorSelect);\r\n      formData.append('periodo_id', me.periodo.idperiodoescolar);\r\n      formData.append('arrayLibros', JSON.stringify(me.arrayLibros));\r\n      this.$http.post(this.$server_url+`pedidos2/pedidos`, formData)\r\n      // this.$http.get(this.$server_url+`pedidos2/pedidos?getValoresLibrosContratos=yes&asesor_id=${me.asesorSelect}&periodo_id=${me.periodo.idperiodoescolar}`)\r\n        .then((res) => {\r\n          me.$vs.loading.close();\r\n          let datos = res.data\r\n          datos.forEach(element => {\r\n            var cal               = new Object();\r\n            cal.id_pedido         = element.id_pedido\r\n            cal.contrato_generado = element.contrato_generado\r\n            cal.nombreInstitucion = element.nombreInstitucion\r\n            cal.ciudad            = element.ciudad\r\n            for (let index = 0; index < element.librosFormato.length; index++) {\r\n              // cal[element.librosFormato[index].nombrelibro] = element.librosFormato[index].valor\r\n              cal[element.librosFormato[index].codigo] = element.librosFormato[index].valor\r\n            }\r\n            me.arrayReporte.push(cal)\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          this.showError(\"Error al obtener el reporte\");\r\n          me.$vs.loading.close();\r\n        });\r\n    },\r\n    getAsesores() {\r\n      let me = this;\r\n      me.arrayAsesores = []\r\n      this.$http.get(this.$server_url+'pedidos2/pedidos?getAsesoresPedidos=1')\r\n      .then(function (res) {\r\n        me.arrayAsesores = res.data\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error + ' error');\r\n      })\r\n    },\r\n    exportData() {\r\n      const ws = XLSX.utils.json_to_sheet(this.arrayReporte);\r\n      const wb = XLSX.utils.book_new();\r\n      XLSX.utils.book_append_sheet(wb, ws, 'ReporteContratos');\r\n      XLSX.writeFile(wb, 'ReporteContratos.xlsx');\r\n    },\r\n    showError(msg) {\r\n      this.$vs.notify({\r\n        title: 'Error',\r\n        text: msg,\r\n        color: 'danger',\r\n      });\r\n    },\r\n  },\r\n})\r\n</script>\r\n\r\n<style>\r\n.fixed-column {\r\n  position: sticky;\r\n  left: 0;\r\n  background-color: white;\r\n}\r\n.fixed-column2 {\r\n  position: sticky;\r\n  top: 0;\r\n  background-color: white;\r\n}\r\n</style>\r\n"]}]}