{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\codigos\\components\\ImportLimpiarData.vue?vue&type=style&index=0&id=20061815&scoped=true&lang=css","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\codigos\\components\\ImportLimpiarData.vue","mtime":1712682815625},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\n.tabla{\r\n  width: 100%;\r\n  margin-top: 10px;\r\n}\r\n .tabla {\r\n\r\n  border: 1px solid #D1E5F1;\r\n  padding: 2px;\r\n  border-radius: 5px;\r\n}\r\n.th1{\r\n  background-color: #BE75E3;\r\n  border-radius: 5px;\r\n  color:white;\r\n}\r\n.td1, .th1{\r\n padding: 10px;\r\n text-align: center;\r\n border:none;\r\n}\r\n",{"version":3,"sources":["ImportLimpiarData.vue"],"names":[],"mappings":";AAmmBA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ImportLimpiarData.vue","sourceRoot":"src/views/codigos/components","sourcesContent":["\r\n<template>\r\n  <div>\r\n    <vs-popup title=\"Errores en excel de los codigos\" :active.sync=\"modalErrores\" style=\"padding: 0% !important;\">\r\n       <div class=\"w-full\" style=\"background: rgb(121,9,9); padding: 20px; border-radius: 5px; background: linear-gradient(90deg, rgba(121,9,9,1) 28%, rgba(255,0,48,1) 100%); color: white;\">\r\n         <div class=\"vx-row\">\r\n            <div class=\"vx-col sm:w-1/2 w-full\">\r\n                <b>Código</b>\r\n            </div>\r\n            <div class=\"vx-col sm:w-1/2 w-full\">\r\n                <b>Institución</b>\r\n            </div>\r\n        </div>\r\n        <vs-divider></vs-divider>\r\n        <div :key=\"index\" v-for=\"(item, index) in errores\">\r\n          <div class=\"vx-row\">\r\n              <div class=\"vx-col sm:w-1/2 w-full\">\r\n                  <span v-if=\"item.codigo\"> {{item.codigo}} </span>\r\n              </div>\r\n              <div class=\"vx-col sm:w-1/2 w-full\">\r\n                  <span v-if=\"item.Id_institucion\"> {{item.Id_institucion}} </span>\r\n              </div>\r\n               <div class=\"vx-col sm:w-1/2 w-full\">\r\n                  <span v-if=\"item.comentario\"> {{item.comentario}} </span>\r\n              </div>\r\n              <div class=\"vx-col sm:w-1/2 w-full\">\r\n                  <span v-if=\"item.venta_estado\"> {{item.venta_estado}} </span>\r\n              </div>\r\n          </div>\r\n        </div>\r\n       </div>\r\n    </vs-popup>\r\n    <vs-popup title=\"Códigos no encontrados\" :active.sync=\"modalCedulas\" @accept=\"recargar()\" @close=\"recargar()\" @cancel=\"recargar()\"  style=\"padding: 0% !important;\">\r\n       <div class=\"w-full\" style=\"background: rgb(235,147,25); background: linear-gradient(90deg, rgba(235,147,25,1) 28%, rgba(255,166,0,1) 100%); color: white; border-radius: 5px; padding: 10px;\">\r\n        <div class=\"vx-row\">\r\n          <div class=\"vx-col w-full\" align=\"center\">\r\n           <b>Codigos a las que no se aplicaron correctamente</b>\r\n          </div>\r\n        </div>\r\n        <vs-divider></vs-divider>\r\n        <div :key=\"index\" v-for=\"(item, index) in cedulas_no_encontradas\">\r\n          <div class=\"vx-row\">\r\n              <div class=\"vx-col w-full\" align=\"center\"> <span> {{item}} </span> </div>\r\n          </div>\r\n        </div>\r\n       </div>\r\n    </vs-popup>\r\n    <vs-popup small title=\"Confirmación\" :active.sync=\"modalConfirm\">\r\n      <div class=\"w-full mb-base\" align=\"center\">\r\n        <h4>Está seguro de aplicar estas códigos?</h4>\r\n      </div>\r\n      <div class=\"w-full\" align=\"center\">\r\n        <vs-button class=\"mb-2\" color=\"danger\" type=\"gradient\" @click=\"procesarPagos()\"> Confirmar </vs-button>\r\n      </div>\r\n    </vs-popup>\r\n    <vs-card>\r\n      <div slot=\"header\">\r\n        <p>Generar devolucion</p>\r\n      </div>\r\n      <div v-if=\"tipo == '1'\">\r\n          <vs-row class=\"mt-3\">\r\n            <vs-col vs-type=\"flex\" vs-justify=\"left\" vs-align=\"left\" vs-w=\"12\">\r\n                <div style=\"width:95%;display:flex;\">\r\n                  <div style=\"width:95%;\">\r\n                  <p style=\"margin-left:30px;\">Busqueda de la institución</p>\r\n                    <vs-input icon=\"search\" class=\"mt-2\" style=\"width:95%;margin-left: 30px;\" placeholder=\"Search\" @keyup.enter=\"getInstitucion()\"  v-model=\"busquedaInstitucion\"/>\r\n                  </div>\r\n                  <div style=\"width:10%;margin-left:20px;margin-top:15px;\">\r\n                      <vs-button radius color=\"warning\" class=\"mt-3 ml-5\" @click=\"getInstitucion()\" type=\"filled\" icon=\"search\"></vs-button>\r\n                  </div>\r\n                </div>\r\n            </vs-col>\r\n        </vs-row>\r\n        <vs-row>\r\n          <vs-col vs-type=\"flex\" vs-justify=\"center\"  vs-align=\"center\" vs-w=\"12\">\r\n              <vs-table stripe max-items=\"50\" v-if=\"instituciones.length > 0\" style=\"width: 100%;\" search pagination :data=\"instituciones\">\r\n                  <template slot=\"header\">\r\n                      <div class=\"vx-row\">\r\n                          <div class=\"vx-col w-full m-3\">\r\n                              Cantidad: {{instituciones.length}}\r\n                          </div>\r\n                      </div>\r\n                  </template>\r\n                  <template slot=\"thead\">\r\n                      <vs-th sort-key=\"idInstitucion\">#</vs-th>\r\n                      <vs-th sort-key=\"nombreInstitucion\">Institución (asesor)</vs-th>\r\n                      <vs-th sort-key=\"nombre\">Localidad</vs-th>\r\n                      <!-- <vs-th sort-key=\"nombre\">Estado Periodo</vs-th> -->\r\n                      <vs-th sort-key=\"nombre\">Accion</vs-th>\r\n                  </template>\r\n                  <template slot-scope=\"{data}\">\r\n                      <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                            <vs-td :data=\"data[indextr].idInstitucion \">\r\n                              {{data[indextr].idInstitucion }}\r\n                          </vs-td>\r\n                          <vs-td :data=\"data[indextr].nombreInstitucion\">\r\n                            {{data[indextr].nombreInstitucion}}<br>\r\n                            <div v-if=\"data[indextr].nombre_asesor == null &&  data[indextr].apellido_asesor == null\">\r\n                                <small> <i style=\"color:red;\">No existe asesor </i></small><br>\r\n                            </div>\r\n                            <div v-else>\r\n                                <small> <i>{{data[indextr].nombre_asesor}} {{data[indextr].apellido_asesor}} </i></small><br>\r\n                            </div>\r\n                            <small>{{data[indextr].fecha_registro}} </small>\r\n                          </vs-td>\r\n                          <vs-td :data=\"data[indextr].nombreregion\">\r\n                              {{data[indextr].nombreregion}} <br>\r\n                              <small>{{data[indextr].ciudad}}</small>\r\n                          </vs-td>\r\n                          <!-- <vs-td>\r\n                            <small class=\"\" >{{ tr.periodo }}</small><br>\r\n                            <vs-chip v-if=\"tr.statusPeriodo == '1'\" color=\"success\" style=\"margin-left:-5px;\">{{ tr.estadoPeriodo }}</vs-chip>\r\n                            <vs-chip v-else color=\"danger\" style=\"margin-left:-5px;\">{{ tr.estadoPeriodo }}</vs-chip>\r\n                          </vs-td> -->\r\n                          <vs-td>\r\n                              <vs-button type=\"relief\" @click=\"asignarInstitucion(tr)\">Asignar Institucion</vs-button>\r\n                          </vs-td>\r\n                      </vs-tr>\r\n                  </template>\r\n              </vs-table>\r\n          </vs-col>\r\n        </vs-row>\r\n        <vs-row class=\"mt-2\">\r\n          <vs-col  vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\">\r\n              <vs-input label=\"Cliente\"  v-model=\"cliente\" style=\"width:95%;\" placeholder=\"Nombre\"/>\r\n          </vs-col>\r\n        </vs-row>\r\n        <vs-row class=\"mt-3\">\r\n          <vs-col vs-type=\"flex\" vs-justify=\"start\" vs-align=\"start\" vs-w=\"6\">\r\n            <ul class=\"leftx\" style=\"display:flex;flex-direction: row;\">\r\n              <li class=\"mt-1 ml-10\">Región</li>\r\n              <li class=\"ml-2\">\r\n              <vs-radio v-model=\"region\" vs-name=\"radiosRegion\" @input=\"getPeriodos()\" vs-value=\"1\">Sierra</vs-radio>\r\n              </li>\r\n              <li class=\"ml-2\">\r\n              <vs-radio v-model=\"region\" vs-name=\"radiosRegion\" @input=\"getPeriodos()\" vs-value=\"2\">Costa</vs-radio>\r\n              </li>\r\n            </ul>\r\n          </vs-col>\r\n          <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"6\">\r\n            <ul class=\"leftx\" style=\"display:flex;flex-direction: row;\">\r\n              <li>Devolver liquidados</li>\r\n              <li class=\"ml-2\">\r\n              <vs-radio v-model=\"dLiquidado\" vs-name=\"radiosdLiquidado\" vs-value=\"0\">No</vs-radio>\r\n              </li>\r\n              <li class=\"ml-2\">\r\n              <vs-radio v-model=\"dLiquidado\" vs-name=\"radiosdLiquidado\" vs-value=\"1\">Si</vs-radio>\r\n              </li>\r\n            </ul>\r\n         </vs-col>\r\n        </vs-row>\r\n        <div class=\"vx-col w-full mt-3\">\r\n            <p style=\"margin-left: 30px;\">Seleccione el periodo:</p>\r\n            <v-select  style=\"width:95%;margin-left: 30px;\" :options=\"arregloPeriodos\" :reduce=\"arregloPeriodos => arregloPeriodos\" label=\"periodo\"  v-model=\"periodo\" />\r\n        </div>\r\n        <br>\r\n        <vs-row>\r\n            <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\">\r\n            <vs-textarea counter=\"500\" style=\"width:95%;\" label=\"Observacion\" :counter-danger.sync=\"counterDanger\" v-model=\"observacion\" />\r\n            </vs-col>\r\n        </vs-row>\r\n      </div>\r\n      <div class=\"mb-6 mt-5\" align=\"center\">\r\n          <div class=\"vx-col w-full\">\r\n            <p style=\"color:#B251E3;\">\r\n              <i class=\"fa fa-file\" aria-hidden=\"true\"></i>{{title}}<span style=\"font-weight: bold;\"> (No ingrese más de 1000 registros en una sola carga.)</span>\r\n            </p>\r\n            <div v-if=\"nombreInstitucion.length > 1\">\r\n              <p style=\"color:red;font-weight:bold;\">Institucion asignada <span>{{nombreInstitucion}}</span></p>\r\n            </div>\r\n          </div>\r\n          <br/>\r\n          <import-excel :onSuccess=\"loadDataInTable\"  class=\"mb-4\" />\r\n        <div>\r\n            <vs-row>\r\n              <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\" vs-sm = \"12\" vs-xs=\"12\" >\r\n                <vs-card>\r\n                  <div class=\"header\">\r\n                    <p style=\"font-weight: bold;\">Formato del archivo excel</p>\r\n                    <table class=\"tabla\">\r\n                        <tr>\r\n                          <th class=\"th1\">codigo</th>\r\n                        </tr>\r\n                        <tr>\r\n                          <td class=\"td1\">xxx</td>\r\n                        </tr>\r\n                    </table>\r\n                  </div>\r\n                </vs-card>\r\n              </vs-col>\r\n            </vs-row>\r\n        </div>\r\n          <!-- {{tableData}} -->\r\n          <vs-alert v-if=\"tableData.length > 0\" class=\"mb-3\" color=\"success\" icon-pack=\"feather\" icon=\"icon-alert-triangle\">\r\n              <span>Excel cargado exitosamente. ¿Está seguro de procesar estos códigos?</span><br>\r\n          </vs-alert>\r\n          <vs-row v-if=\"tableData.length > 0 && tableData.length <= 1000 \">\r\n              <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\">\r\n                <vs-button class=\"mb-2\" color=\"primary\"  type=\"relief\" @click=\"openConfirm(0)\">devolver codigos </vs-button>\r\n              </vs-col>\r\n          </vs-row>\r\n          <vs-row v-if=\"codigosPerdidos == true\">\r\n              <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\">\r\n                  <vs-alert active=\"true\" style=\"height: 60px;\">\r\n                      Se devolvio  {{ porcentaje }} códigos\r\n                      <vs-button v-if=\"codigosSinCodigoUnion.length > 0\" @click=\"popupProblemasCodigosUnion = true;\" color=\"primary\" type=\"border\">Mostrar códigos sin código unión</vs-button>\r\n                  </vs-alert>\r\n              </vs-col>\r\n          </vs-row>\r\n          <vs-row v-if=\"codigosPerdidos == true\">\r\n             <vs-card>\r\n              <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"6\">\r\n                  <vs-list>\r\n                    <p>Cantidad <span>{{ codigosNoCambiados.length }}</span></p>\r\n                      <vs-list-header icon=\"supervisor_account\" title=\"Códigos que no se pudieron cambiar\"></vs-list-header>\r\n                      <vs-list-item :key=\"indextr\" v-for=\"(tr, indextr) in codigosNoCambiados\" icon=\"check\" :title=\"tr.codigo\" >\r\n                        <p v-if=\"tr.mensaje !='0'\"> {{ tr.mensaje }}</p>\r\n                      </vs-list-item>\r\n                  </vs-list>\r\n              </vs-col>\r\n              <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"6\">\r\n                  <vs-list>\r\n                    <p>Cantidad <span>{{ codigoNoExiste.length }}</span></p>\r\n                      <vs-list-header icon=\"supervisor_account\" title=\"Códigos que no existen\"></vs-list-header>\r\n                      <vs-list-item :key=\"s\" v-for=\"(tr, s) in codigoNoExiste\" icon=\"check\" :title=\"tr.codigo\" >\r\n                      </vs-list-item>\r\n                  </vs-list>\r\n              </vs-col>\r\n            </vs-card>\r\n          </vs-row>\r\n      </div>\r\n    </vs-card>\r\n    <vs-row v-if=\"codigosPerdidos == true\">\r\n        <vs-card>\r\n          <div class=\"header\">\r\n              <span style=\"font-weight:bold;\">Codigos que ya ha sido liquidados / o estan en otra institución</span>\r\n          </div>\r\n          <gestionCodigosListaVue :arregloCodigos=\"codigosConLiquidacion\" openModal=\"1\"/>\r\n        </vs-card>\r\n    </vs-row>\r\n    <vx-card v-if=\"tableData.length && header.length\">\r\n      <vs-table stripe pagination :max-items=\"10\" search :data=\"tableData\">\r\n        <template slot=\"header\">\r\n          <h4>Códigos a subir {{tableData.length}}</h4>\r\n        </template>\r\n        <template slot=\"thead\">\r\n          <vs-th :sort-key=\"heading\" v-for=\"heading in header\" :key=\"heading\">{{ heading }}</vs-th>\r\n        </template>\r\n        <template slot-scope=\"{data}\">\r\n          <vs-tr :data=\"tr\" :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n            <vs-td :data=\"col\" v-for=\"(col, indexcol) in data[indextr]\" :key=\"indexcol + col\">\r\n              {{ col }}\r\n            </vs-td>\r\n          </vs-tr>\r\n        </template>\r\n      </vs-table>\r\n    </vx-card>\r\n     <!--MODAL PARA EXPORTAR A EXCEL-->\r\n    <vs-prompt title=\"Exportar a Excel\" class=\"export-options\" @cancle=\"clearFields\" @accept=\"exportToExcel\" accept-text=\"Exportar\" @close=\"clearFields\" :active.sync=\"activePrompt\">\r\n      <vs-alert class=\"mb-3\" color=\"danger\" icon-pack=\"feather\" icon=\"icon-info\">\r\n          <span>Recuerde <b>seleccionar</b> los códigos que desea exportar.</span>\r\n      </vs-alert>\r\n      <vs-input v-model=\"fileName\" placeholder=\"Ingrese el nombre del archivo\" class=\"w-full\" />\r\n      <v-select v-model=\"selectedFormat\" :options=\"formats\" class=\"my-4\" />\r\n    </vs-prompt>\r\n    <!--MODAL PARA MOSTRAR CODIGOS SIN CODIGO UNION-->\r\n    <vs-popup classContent=\"popup-example\" title=\"Códigos sin código Unión\" fullscreen :active.sync=\"popupProblemasCodigosUnion\">\r\n      <gestionCodigosListaVue :arregloCodigos=\"codigosSinCodigoUnion\" openModal=\"0\"/>\r\n    </vs-popup>\r\n  </div>\r\n</template>\r\n<script>\r\nimport ImportExcel from './importExcel.vue'\r\nimport vSelect from 'vue-select'\r\nimport gestionCodigosListaVue from './utils/gestionCodigosLista.vue'\r\nexport default {\r\n  components: {\r\n    ImportExcel,\r\n    vSelect,\r\n    gestionCodigosListaVue,\r\n  },\r\n  data () {\r\n    return {\r\n      codigosPerdidos:false,\r\n      tableData: [],\r\n      header: [],\r\n      sheetName: '',\r\n      usuario: [],\r\n      modalConfirm: false,\r\n      modalErrores: false,\r\n      errores: [],\r\n      tipo_selected: '',\r\n      cedulas_no_encontradas: [],\r\n      modalCedulas: false,\r\n      codigosNoCambiados:[],\r\n      codigosConLiquidacion:[],\r\n      codigoNoExiste:[],\r\n      porcentaje:0,\r\n      usuarioSeleccionado:'',\r\n      razonBusqueda:'',\r\n      valorBusqueda:'cedula',\r\n      estudiantesCursos:[],\r\n      region:'2',\r\n      periodos:[],\r\n      periodo:{\r\n        getPeriodo:''\r\n      },\r\n      datos:{\r\n        usuario:'',\r\n        idusuario:'',\r\n        periodo:'',\r\n      },\r\n      //variables para el export a excel\r\n      activePrompt:false,\r\n      codigoSelected: [],\r\n      reportesActivo: 0,\r\n      fileName: null,\r\n      formats: ['xls', 'xlsx', 'csv', 'txt'],\r\n      cellAutoWidth: true,\r\n      selectedFormat: 'xlsx',\r\n      codigosNoExisten:[],\r\n      cantidadNoExisten:0,\r\n      instituciones:[],\r\n      busquedaInstitucion:'',\r\n      nombreInstitucion:'',\r\n      institucion_id:'',\r\n      cliente:'',\r\n      observacion:'',\r\n      counterDanger: false,\r\n      arregloPeriodos:[],\r\n      periodo:'',\r\n      tipo:'1',\r\n      title:'Estos códigos van a ser devueltos seran quitados el usuario, venta_estado, etc. Mientras no esten liquidados ni Leidos',\r\n      //variables para codigos union\r\n      codigosSinCodigoUnion:[],\r\n      popupProblemasCodigosUnion:false,\r\n      //fin variables para codigos union\r\n      dLiquidado:0,\r\n    }\r\n  },\r\n  created(){\r\n        this.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n        this.codigosPerdidos = false\r\n        this.getPeriodos()\r\n    },\r\n  methods: {\r\n    loadDataInTable ({ results, header, meta }) {\r\n      this.codigosPerdidos  = false;\r\n      this.header           = header\r\n      this.tableData        = results\r\n      this.sheetName        = meta.sheetName\r\n    },\r\n    procesarPagos(){\r\n      let me = this\r\n      if(me.institucion_id <= 0){\r\n          me.$vs.notify({\r\n          text:'Seleccione una institución por favor',\r\n          color:'warning',\r\n          iconPack: 'feather',\r\n          icon:'icon-check'})\r\n          return false\r\n      }\r\n      if(me.tipo == 1){\r\n        if(me.cliente.trim() == \"\"){\r\n          me.$vs.notify({\r\n          text:'Debe ingresar un cliente por favor',\r\n          color:'warning',\r\n          iconPack: 'feather',\r\n          icon:'icon-check'})\r\n          return\r\n      }\r\n      if(me.periodo == undefined  || me.periodo == null || me.periodo == \"\"){\r\n        me.$vs.notify({\r\n        text:'Seleccione un periodo',\r\n        color:'success',\r\n        iconPack: 'feather',\r\n        icon:'icon-check'})\r\n        return false\r\n        }\r\n      }\r\n      if(me.observacion == \"\"){\r\n          me.$vs.notify({\r\n          text:'Debe ingresar una observación',\r\n          color:'warning',\r\n          iconPack: 'feather',\r\n          icon:'icon-check'})\r\n          return\r\n        }\r\n        if(me.observacion.length < 5){\r\n          me.$vs.notify({\r\n          text:'La observación debe tener al menos 5 caracteres',\r\n          color:'warning',\r\n          iconPack: 'feather',\r\n          icon:'icon-check'})\r\n          return\r\n        }\r\n\r\n        me.$vs.loading()\r\n        let json_pagos = JSON.stringify(me.tableData)\r\n        let formData = new FormData();\r\n        formData.append('data_codigos',   json_pagos);\r\n        formData.append('admin',          'yes')\r\n        formData.append('id_usuario',     me.usuario.idusuario);\r\n        formData.append('usuario_editor', me.usuario.idusuario);\r\n        formData.append('cliente',        me.cliente);\r\n        formData.append('observacion',    me.observacion);\r\n        formData.append('institucion_id', me.institucion_id);\r\n        formData.append('periodo_id',     me.periodo.idperiodoescolar)\r\n        if(me.dLiquidado == 1)            formData.append('dLiquidado',     me.dLiquidado)\r\n        this.$http.post(this.$server_url+'codigos/bodega/devolver', formData)\r\n        .then(res => {\r\n          me.codigosConLiquidacion = res.data.codigosConLiquidacion\r\n          me.$vs.loading.close()\r\n          if(res.data.status == 0){\r\n            me.$vs.notify({\r\n            text:res.data.message,\r\n            color:'success',\r\n            iconPack: 'feather',\r\n            icon:'icon-check'})\r\n            return false\r\n          }\r\n          me.$vs.notify({\r\n          text:'Códigos procesados exitosamente',\r\n          color:'success',\r\n          iconPack: 'feather',\r\n          icon:'icon-check'})\r\n          me.modalConfirm           = false\r\n          me.tableData              = []\r\n          me.codigosPerdidos        = true\r\n          me.codigosNoCambiados     = res.data.codigosNoCambiados\r\n          me.codigosSinCodigoUnion  = res.data.codigosSinCodigoUnion\r\n          if(me.codigosSinCodigoUnion.length > 0){\r\n            me.popupProblemasCodigosUnion = true\r\n          }\r\n          me.codigoNoExiste         = res.data.codigoNoExiste\r\n          me.porcentaje             = res.data.cambiados\r\n        })\r\n        .catch(function (error) {\r\n            me.$vs.notify({\r\n            text:'Verifique que la información se haya guardado correctamente.',\r\n            color:'warning',\r\n            iconPack: 'feather',\r\n            icon:'icon-alert-triangle'})\r\n            me.$vs.loading.close()\r\n            // setTimeout(function() {location.reload()}, 1000);\r\n        })\r\n    },\r\n    openConfirm(tipo) {\r\n      let me = this\r\n      me.tipo_selected = tipo\r\n      if( !me.tableData[0].codigo){\r\n            me.$vs.loading.close()\r\n            me.$vs.notify({ text:'Corrija el formato del excel y vuelva a intentar.', color:'warning', iconPack: 'feather', icon:'icon-alert-triangle'})\r\n            return\r\n      }\r\n      me.errores = []\r\n      $.each(me.tableData,function(key, value){\r\n        if( !value.codigo){\r\n          me.errores.push(value)\r\n        }\r\n      })\r\n      if( me.errores.length > 0 ){\r\n        me.modalErrores = true\r\n      }else{\r\n        me.modalConfirm = true\r\n      }\r\n    },\r\n    recargar(){\r\n      location.reload()\r\n    },\r\n     busquedaFiltroEstudiante(){\r\n      let me = this;\r\n      me.estudiantesCursos = [];\r\n      if(me.razonBusqueda.length < 5){\r\n        me.$vs.notify({\r\n        text:'Minimo 5 caracteres de busqueda',\r\n        color:'warning',\r\n        iconPack: 'feather',\r\n        icon:'icon-check'})\r\n        return false;\r\n      }\r\n      me.$vs.loading();\r\n        //para los administradores\r\n        this.$http.get(this.$server_url+'busquedaFiltroEstudiante?busqueda='+me.valorBusqueda+'&razonBusqueda='+me.razonBusqueda)\r\n        .then(function (res) {\r\n          me.$vs.loading.close()\r\n          if(res.data.status == '0'){\r\n            me.$vs.notify({\r\n            text: res.data.message,\r\n            color:'primary',\r\n            iconPack: 'feather',\r\n            icon:'icon-check'})\r\n            return false;\r\n          }else{\r\n            me.estudiantesCursos = res.data\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error + ' error');\r\n            me.$vs.loading.close()\r\n        })\r\n    },\r\n\r\n    asignarUsuario(tr){\r\n       let me = this;\r\n       me.datos.usuario = tr.name_usuario\r\n       me.datos.idusuario  = tr.idusuario\r\n       me.estudiantesCursos = []\r\n    },\r\n      //lista de ciudades para usar en el select\r\n    getPeriodos() {\r\n      let me = this\r\n      this.$http.get(this.$server_url + 'periodo?porAllEstados=yes&region='+me.region).then(res => {\r\n              me.arregloPeriodos = res.data;\r\n          })\r\n          .catch(function (error) {\r\n              console.log(error)\r\n          })\r\n    },\r\n\r\n     //PARA ASIGNAR UNA INSTITUCION\r\n    getInstitucion() {\r\n      let me                = this;\r\n      me.instituciones      = [];\r\n      me.nombreInstitucion  = \"\";\r\n      me.institucion_id     = \"\";\r\n      me.cliente            = \"\";\r\n      if(me.busquedaInstitucion.length < 5){\r\n          me.$vs.notify({\r\n          text:'Minimo 5 caracteres de busqueda',\r\n          color:'warning',\r\n          iconPack: 'feather',\r\n          icon:'icon-check'})\r\n\r\n          return false;\r\n      }\r\n      me.$vs.loading()\r\n      this.$http.get(this.$server_url + 'listaInsitucion?busqueda='+me.busquedaInstitucion)\r\n        .then(function (res) {\r\n            me.instituciones = res.data;\r\n            me.$vs.loading.close()\r\n            if(res.data.message){\r\n                me.$vs.notify({\r\n                text: res.data.message,\r\n                color: 'success',\r\n                iconPack: 'feather',\r\n                icon: 'icon-user'\r\n                })\r\n            }\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error + ' error');\r\n            me.$vs.loading.close()\r\n        })\r\n    },\r\n     asignarInstitucion(tr){\r\n       let me = this;\r\n       me.nombreInstitucion = tr.nombreInstitucion\r\n       me.cliente           = tr.nombreInstitucion\r\n       me.institucion_id    = tr.idInstitucion\r\n       me.instituciones     = []\r\n       me.getPeriodo(tr.idInstitucion)\r\n     },\r\n\r\n      //METODOS PARA EXCEL\r\n       //para limipiar los campos del excel\r\n        clearFields() {\r\n            this.fileName = ''\r\n            this.cellAutoWidth = true\r\n            this.selectedFormat = 'xls'\r\n        },\r\n        //metodo par descargar el excel\r\n           exportToExcel() {\r\n            let headerTitle = ['codigo','institucion estudiante','periodo estudiante',  'estudiante','cedula', 'estado','liquidacion','código de barras','bc_estado','venta estado','institucion barras','periodo barras'];\r\n            let headerVal = ['codigo', 'nombreInstitucion','periodo','estudiante','cedula', 'codigoEstado','liquidacion','status','barrasEstado','ventaEstado','institucionBarra','periodo_barras'];\r\n            let codigoSelectedMayus = this.codigoSelected\r\n            for (var i = 0; i < codigoSelectedMayus.length; i++) {\r\n                for (var key in codigoSelectedMayus[i]) {\r\n                    if (typeof codigoSelectedMayus[i][key] == \"string\") {\r\n                        codigoSelectedMayus[i][key] = codigoSelectedMayus[i][key].toUpperCase();\r\n                    }\r\n                }\r\n            }\r\n            import('@/vendor/Export2Excel').then(excel => {\r\n                const list = codigoSelectedMayus\r\n                const data = this.formatJson(headerVal, list)\r\n                excel.export_json_to_excel({\r\n                    header: headerTitle,\r\n                    data,\r\n                    filename: this.fileName,\r\n                    autoWidth: this.cellAutoWidth,\r\n                    bookType: this.selectedFormat\r\n                })\r\n                this.clearFields()\r\n                this.guardarActivo = '';\r\n                this.generarActivo = ' ';\r\n                this.textAlertCant = '';\r\n                this.cantidad = '';\r\n                this.codigoSelected = [];\r\n            })\r\n        },\r\n        formatJson(filterVal, jsonData) {\r\n            return jsonData.map(v => filterVal.map(j => {\r\n                return v[j]\r\n            }))\r\n        },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.tabla{\r\n  width: 100%;\r\n  margin-top: 10px;\r\n}\r\n .tabla {\r\n\r\n  border: 1px solid #D1E5F1;\r\n  padding: 2px;\r\n  border-radius: 5px;\r\n}\r\n.th1{\r\n  background-color: #BE75E3;\r\n  border-radius: 5px;\r\n  color:white;\r\n}\r\n.td1, .th1{\r\n padding: 10px;\r\n text-align: center;\r\n border:none;\r\n}\r\n</style>\r\n"]}]}