{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\usuarios\\tipos\\listaUsuarios.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\usuarios\\tipos\\listaUsuarios.vue","mtime":1712682816672},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nimport institucionesAsesorVue from './InstitucionesAsesor.vue'\r\nimport editarUsuarioVue from './components/editarUsuario.vue';\r\nexport default{\r\n    data(){\r\n        return{\r\n            usuario:[],\r\n            usuarios:[],\r\n            arregloAsesores:[],\r\n            //para el reporte excel\r\n            fileName: null,\r\n            activePrompt: false,\r\n            codigoSelected: [],\r\n            reportesActivo: 0,\r\n            fileName: null,\r\n            formats: ['xls', 'xlsx', 'csv', 'txt'],\r\n            cellAutoWidth: true,\r\n            selectedFormat: 'xls',\r\n            //fin variables para exportar\r\n            cedula:0,\r\n            lookInstituciones:false,\r\n            popupActivo:false,\r\n            instituciones:[],\r\n            api:'',\r\n            permisoRoot:false,\r\n        }\r\n    },\r\n    components:{\r\n        institucionesAsesorVue,\r\n        editarUsuarioVue,\r\n    },\r\n    props:{\r\n        periodo_idSierra:{\r\n            type:Number,\r\n            default:0,\r\n        },\r\n        periodo_idCosta:{\r\n            type:Number,\r\n            default:0,\r\n        },\r\n    },\r\n    created(){\r\n        let me = this;\r\n        me.usuario = JSON.parse(localStorage.getItem(\"usuario\"))\r\n        me.$http.get(me.$server_url+'institucionesResportes').then(res => {\r\n            me.instituciones = res.data;\r\n        })\r\n    },\r\n    mounted(){\r\n        let me = this;\r\n        me.getAsesoresInstituciones();\r\n        me.getUserRoot()\r\n    },\r\n    methods:{\r\n        //para obtener el listado de los usuarios root\r\n        getUserRoot() {\r\n            let me = this;\r\n            this.$http.get(this.$server_url+'permisos?permiso=yes&usuario_id='+me.usuario.idusuario)\r\n                .then(function (res) {\r\n                    if(res.data.status == '1'){\r\n                        me.permisoRoot = true\r\n                    }else{\r\n                        me.permisoRoot = false\r\n                    }\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                })\r\n        },\r\n        changeHandleEditar(){\r\n            let me = this;\r\n            me.getAsesoresInstituciones()\r\n            me.popupActivo = false\r\n        },\r\n        //editar\r\n        getEdit(data={}){\r\n            let me = this;\r\n            me.usuarios = data\r\n        },\r\n        getAsesoresInstituciones(){\r\n            let me = this;\r\n            me.$vs.loading();\r\n            this.$http.get(this.$server_url+'getAsesoresInstituciones')\r\n                .then(function (res) {\r\n                    me.$vs.loading.close();\r\n                    me.arregloAsesores = res.data\r\n                })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close();\r\n                    console.log(error + ' error');\r\n                })\r\n        },\r\n        verInstituciones(tr){\r\n            let me = this;\r\n            me.cedula = tr.cedula;\r\n            me.lookInstituciones = true;\r\n        },\r\n        verApi(){\r\n            let me = this;\r\n            let ruta = \"https://server1.prolipadigital.com.ec/\"+me.api;\r\n            window.open(ruta,'_blank')\r\n        },\r\n        //para limipiar los campos del excel\r\n        clearFields() {\r\n            this.fileName = ''\r\n            this.cellAutoWidth = true\r\n            this.selectedFormat = 'xls'\r\n        },\r\n        //metodo par descargar el excel\r\n        exportToExcel() {\r\n            let headerTitle = ['Asesor' ,'Cedula', 'Cantidad visitas'];\r\n            let headerVal = [ 'asesor','cedula','cantidad_instituciones'];\r\n            let codigoSelectedMayus = this.codigoSelected\r\n            for (var i = 0; i < codigoSelectedMayus.length; i++) {\r\n                for (var key in codigoSelectedMayus[i]) {\r\n                    if (typeof codigoSelectedMayus[i][key] == \"string\") {\r\n                        codigoSelectedMayus[i][key] = codigoSelectedMayus[i][key].toUpperCase();\r\n                    }\r\n                }\r\n            }\r\n            import('@/vendor/Export2Excel').then(excel => {\r\n                const list = codigoSelectedMayus\r\n                const data = this.formatJson(headerVal, list)\r\n                excel.export_json_to_excel({\r\n                    header: headerTitle,\r\n                    data,\r\n                    filename: this.fileName,\r\n                    autoWidth: this.cellAutoWidth,\r\n                    bookType: this.selectedFormat\r\n                })\r\n                this.clearFields()\r\n                this.guardarActivo = '';\r\n                this.generarActivo = ' ';\r\n                this.textAlertCant = '';\r\n                this.cantidad = '';\r\n                this.codigoSelected = [];\r\n            })\r\n        },\r\n        formatJson(filterVal, jsonData) {\r\n            return jsonData.map(v => filterVal.map(j => {\r\n                return v[j]\r\n            }))\r\n        },\r\n    }\r\n}\r\n",{"version":3,"sources":["listaUsuarios.vue"],"names":[],"mappings":";AAsfile":"listaUsuarios.vue","sourceRoot":"src/views/usuarios/tipos","sourcesContent":["<template>\r\n    <vx-card>\r\n        <vs-card v-if=\"lookInstituciones\">\r\n            <vs-button @click=\"lookInstituciones = false;\" color=\"danger\" type=\"line\" icon=\"person_add\">Lista asesores</vs-button>\r\n            <institucionesAsesorVue\r\n              class=\"mt-3\"\r\n              :periodo_idSierra=\"periodo_idSierra\"\r\n              :periodo_idCosta=\"periodo_idCosta\"\r\n              :cedula=\"cedula\"\r\n            />\r\n        </vs-card>\r\n        <div\r\n            v-else\r\n            title=\"Lista de asesores\"\r\n            title-color=\"primary\"\r\n            subtitle-color=\"warning\"\r\n            subtitle=\"Seleccione para exportar.\"\r\n            code-toggler>\r\n            <p class=\"text-primary text-2xl font-medium\">Lista de asesores</p>\r\n            <div class=\"flex mt-2\" style=\"flex-wrap: wrap;\" v-if=\"permisoRoot\">\r\n                <vs-divider>Apis de milton</vs-divider>\r\n                <vx-tooltip style=\"display: inline-block;\" text=\"Generar las iniciales en los asesores\" position=\"top\" color=\"dark\">\r\n                    <button class=\"btna\" @click=\"api='cargar_codigos_vendedores';verApi();\" >Generar iniciales</button>\r\n                </vx-tooltip>\r\n                <vx-tooltip style=\"display: inline-block;\" text=\"Generar el campo id_ciudad_milton en la tabla ciudad para ciudades nuevas\" position=\"top\" color=\"dark\">\r\n                    <button class=\"btna\" @click=\"api='cargar_codigo_ciudad';verApi();\">Generar cod. Ciudades</button>\r\n                </vx-tooltip>\r\n                <!-- <vx-tooltip style=\"display: inline-block;\" text=\"Generar el campo codigo_institucion_milton en la tabla instituciones nuevas(Primero abrir la api de ciudades)\" position=\"top\" color=\"dark\">\r\n                    <button class=\"btna\" @click=\"api='guardar_institucines_base_milton';verApi();\">Generar cod. Instituciones</button>\r\n                </vx-tooltip> -->\r\n                <vx-tooltip style=\"display: inline-block;\" text=\"Generar el campo cod_usuario en la tabla usuario para los facturadores\" position=\"top\" color=\"dark\">\r\n                    <button class=\"btna\" @click=\"api='cargar_codigos_usuarios';verApi();\">Generar cod. Usuarios</button>\r\n                </vx-tooltip>\r\n            </div>\r\n            <vs-divider></vs-divider>\r\n            <vs-table multiple stripe v-model=\"codigoSelected\"  pagination max-items=\"25\" search :data=\"arregloAsesores\">\r\n                <template slot=\"header\">\r\n                    <div style=\"display:flex;\">\r\n                        <vs-chip color=\"success\" style=\"font-size:12px;\">\r\n                          Total asesores: {{arregloAsesores.length}}\r\n                        </vs-chip>\r\n                        <vs-button color=\"warning\" type=\"line\" icon=\"description\"  size=\"small\" class=\"mr-5 ml-3\" style=\"font-size: 14px;\" @click=\"activePrompt=true;\">Exportar</vs-button>\r\n                    </div>\r\n                </template>\r\n                <template slot=\"thead\">\r\n                    <vs-th sort-key=\"asesor\">Asesor</vs-th>\r\n                    <vs-th sort-key=\"cedula\">Cédula</vs-th>\r\n                    <vs-th sort-key=\"cedula\">Iniciales</vs-th>\r\n                    <vs-th sort-key=\"cedula\">Cantidad de instituciones</vs-th>\r\n                    <vs-th sort-key=\"cedula\">Acciones</vs-th>\r\n                </template>\r\n                <template slot-scope=\"{data}\">\r\n                    <vs-tr :data=\"tr\" :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                        <vs-td :data=\"data[indextr].asesor\">\r\n                            <span class=\"font-bold\">Nombres:</span>\r\n                            <p>{{data[indextr].asesor}}</p>\r\n                            <span class=\"font-bold\">Usuario:</span>\r\n                            <p>{{data[indextr].name_usuario}}</p>\r\n                        </vs-td>\r\n                        <vs-td :data=\"data[indextr].cedula\">\r\n                            {{data[indextr].cedula}}\r\n                        </vs-td>\r\n                        <vs-td>\r\n                            {{ tr.iniciales }}\r\n                        </vs-td>\r\n                        <vs-td :data=\"data[indextr].cedula\">\r\n                            <vs-chip  color=\"success\">\r\n                                {{data[indextr].cantidad_instituciones}}\r\n                            </vs-chip>\r\n                        </vs-td>\r\n                        <vs-td :data=\"data[indextr].nombrevideo\">\r\n                            <div class=\"flex\">\r\n                                <vx-tooltip style=\"display: inline-block;\" text=\"editar\" position=\"top\" color=\"warning\">\r\n                                    <vs-button type=\"line\" size=\"small\" icon-pack=\"feather\" icon=\"icon-edit\" color=\"warning\" @click=\"popupActivo=true;getEdit(tr)\"></vs-button>\r\n                                </vx-tooltip>\r\n                                <vx-tooltip style=\"display: inline-block;\" text=\"Ver instituciones\" position=\"top\" color=\"success\">\r\n                                    <vs-button size=\"small\" @click=\"verInstituciones(tr)\" class=\"modal-default-button\" color=\"success\" type=\"line\" icon-pack=\"feather\" icon=\"icon-clipboard\">\r\n                                    </vs-button>\r\n                                </vx-tooltip>\r\n                            </div>\r\n                        </vs-td>\r\n                    </vs-tr>\r\n                </template>\r\n            </vs-table>\r\n        </div>\r\n        <!--MODAL PARA EXPORTAR A EXCEL-->\r\n        <vs-prompt title=\"Exportar a Excel\" class=\"export-options\" @cancle=\"clearFields\" @accept=\"exportToExcel\" accept-text=\"Exportar\" @close=\"clearFields\" :active.sync=\"activePrompt\">\r\n            <vs-alert class=\"mb-3\" color=\"danger\" icon-pack=\"feather\" icon=\"icon-info\">\r\n                <span>Recuerde <b>seleccionar</b> los registros que desea exportar.</span>\r\n            </vs-alert>\r\n            <vs-input v-model=\"fileName\" placeholder=\"Ingrese el nombre del archivo\" class=\"w-full\" />\r\n            <v-select v-model=\"selectedFormat\" :options=\"formats\" class=\"my-4\" />\r\n            <div class=\"flex\">\r\n            </div>\r\n        </vs-prompt>\r\n        <!--Modal de Editar-->\r\n        <vs-popup class=\"editpop\"  fullscreen=\"true\" title=\"Editar\" :active.sync=\"popupActivo\">\r\n            <editarUsuarioVue @saveChange=\"changeHandleEditar\" :usuarios=\"usuarios\" :instituciones=\"instituciones\"/>\r\n        </vs-popup>\r\n    </vx-card>\r\n</template>\r\n<script>\r\nimport institucionesAsesorVue from './InstitucionesAsesor.vue'\r\nimport editarUsuarioVue from './components/editarUsuario.vue';\r\nexport default{\r\n    data(){\r\n        return{\r\n            usuario:[],\r\n            usuarios:[],\r\n            arregloAsesores:[],\r\n            //para el reporte excel\r\n            fileName: null,\r\n            activePrompt: false,\r\n            codigoSelected: [],\r\n            reportesActivo: 0,\r\n            fileName: null,\r\n            formats: ['xls', 'xlsx', 'csv', 'txt'],\r\n            cellAutoWidth: true,\r\n            selectedFormat: 'xls',\r\n            //fin variables para exportar\r\n            cedula:0,\r\n            lookInstituciones:false,\r\n            popupActivo:false,\r\n            instituciones:[],\r\n            api:'',\r\n            permisoRoot:false,\r\n        }\r\n    },\r\n    components:{\r\n        institucionesAsesorVue,\r\n        editarUsuarioVue,\r\n    },\r\n    props:{\r\n        periodo_idSierra:{\r\n            type:Number,\r\n            default:0,\r\n        },\r\n        periodo_idCosta:{\r\n            type:Number,\r\n            default:0,\r\n        },\r\n    },\r\n    created(){\r\n        let me = this;\r\n        me.usuario = JSON.parse(localStorage.getItem(\"usuario\"))\r\n        me.$http.get(me.$server_url+'institucionesResportes').then(res => {\r\n            me.instituciones = res.data;\r\n        })\r\n    },\r\n    mounted(){\r\n        let me = this;\r\n        me.getAsesoresInstituciones();\r\n        me.getUserRoot()\r\n    },\r\n    methods:{\r\n        //para obtener el listado de los usuarios root\r\n        getUserRoot() {\r\n            let me = this;\r\n            this.$http.get(this.$server_url+'permisos?permiso=yes&usuario_id='+me.usuario.idusuario)\r\n                .then(function (res) {\r\n                    if(res.data.status == '1'){\r\n                        me.permisoRoot = true\r\n                    }else{\r\n                        me.permisoRoot = false\r\n                    }\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                })\r\n        },\r\n        changeHandleEditar(){\r\n            let me = this;\r\n            me.getAsesoresInstituciones()\r\n            me.popupActivo = false\r\n        },\r\n        //editar\r\n        getEdit(data={}){\r\n            let me = this;\r\n            me.usuarios = data\r\n        },\r\n        getAsesoresInstituciones(){\r\n            let me = this;\r\n            me.$vs.loading();\r\n            this.$http.get(this.$server_url+'getAsesoresInstituciones')\r\n                .then(function (res) {\r\n                    me.$vs.loading.close();\r\n                    me.arregloAsesores = res.data\r\n                })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close();\r\n                    console.log(error + ' error');\r\n                })\r\n        },\r\n        verInstituciones(tr){\r\n            let me = this;\r\n            me.cedula = tr.cedula;\r\n            me.lookInstituciones = true;\r\n        },\r\n        verApi(){\r\n            let me = this;\r\n            let ruta = \"https://server1.prolipadigital.com.ec/\"+me.api;\r\n            window.open(ruta,'_blank')\r\n        },\r\n        //para limipiar los campos del excel\r\n        clearFields() {\r\n            this.fileName = ''\r\n            this.cellAutoWidth = true\r\n            this.selectedFormat = 'xls'\r\n        },\r\n        //metodo par descargar el excel\r\n        exportToExcel() {\r\n            let headerTitle = ['Asesor' ,'Cedula', 'Cantidad visitas'];\r\n            let headerVal = [ 'asesor','cedula','cantidad_instituciones'];\r\n            let codigoSelectedMayus = this.codigoSelected\r\n            for (var i = 0; i < codigoSelectedMayus.length; i++) {\r\n                for (var key in codigoSelectedMayus[i]) {\r\n                    if (typeof codigoSelectedMayus[i][key] == \"string\") {\r\n                        codigoSelectedMayus[i][key] = codigoSelectedMayus[i][key].toUpperCase();\r\n                    }\r\n                }\r\n            }\r\n            import('@/vendor/Export2Excel').then(excel => {\r\n                const list = codigoSelectedMayus\r\n                const data = this.formatJson(headerVal, list)\r\n                excel.export_json_to_excel({\r\n                    header: headerTitle,\r\n                    data,\r\n                    filename: this.fileName,\r\n                    autoWidth: this.cellAutoWidth,\r\n                    bookType: this.selectedFormat\r\n                })\r\n                this.clearFields()\r\n                this.guardarActivo = '';\r\n                this.generarActivo = ' ';\r\n                this.textAlertCant = '';\r\n                this.cantidad = '';\r\n                this.codigoSelected = [];\r\n            })\r\n        },\r\n        formatJson(filterVal, jsonData) {\r\n            return jsonData.map(v => filterVal.map(j => {\r\n                return v[j]\r\n            }))\r\n        },\r\n    }\r\n}\r\n</script>\r\n<style lang=\"scss\">\r\n@import '@/assets/scss/general/general.scss';\r\n    .btna{\r\n        font-size: 14px!important;\r\n        @include button-1;\r\n        background-color:var(--colorazul);\r\n    }\r\n    .btna:hover{\r\n        opacity: 0.7;\r\n    }\r\n    // .btna:nth-child(1){\r\n    //     background-color:var(--colortomate);\r\n    // }\r\n    // .btna:nth-child(2){\r\n    //     background-color:var(--colorazul);\r\n    // }\r\n    // .btna:nth-child(3){\r\n    //     background-color:var(--detalles);\r\n    // }\r\n</style>\r\n"]}]}