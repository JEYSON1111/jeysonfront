{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\asesor\\seguimiento\\components\\components\\muestraDetalle.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\asesor\\seguimiento\\components\\components\\muestraDetalle.vue","mtime":1712682815527},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nimport flatPickr from 'vue-flatpickr-component';\r\nimport 'flatpickr/dist/flatpickr.css';\r\nimport Vue from 'vue'\r\nimport axios from 'axios'\r\nimport vSelect from 'vue-select'\r\nexport default {\r\n    data() {\r\n       return{\r\n           eliminarEstado:false,\r\n           popupEditEvidencia:1,\r\n            detalleMuestra:[],\r\n            evidencia:{\r\n                libro_id:'',\r\n                cantidad:'',\r\n                cantidad_devolucion:'',\r\n                fecha_devolucion:null,\r\n                evidencia:'',\r\n            },\r\n            configdateTimePicker: {\r\n                enableTime: true,\r\n                dateFormat: 'Y-m-d'\r\n            },\r\n            libros:[]\r\n       } \r\n    },\r\n    mounted(){\r\n        let me = this;\r\n        me.DetalleMuestras();\r\n        me.getLibros()\r\n    },\r\n    props:{\r\n        id:{\r\n            type:String,\r\n            default:\"0\"\r\n        }\r\n    },\r\n     components: {\r\n        'v-select': vSelect,\r\n        flatPickr\r\n\r\n    },\r\n\r\n    methods:{\r\n\r\n            //para obtener el listado de Tipos de Area\r\n        getLibros() {\r\n            let me = this;\r\n            this.$http.get(this.$server_url + 'listaLibro')\r\n                .then(function (res) {\r\n                    me.libros = res.data.libros\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error')\r\n                })\r\n        },\r\n\r\n          //METODOS PARA LA ENVIDENCIAS\r\n        //Listar el detalle de la muestra\r\n        async DetalleMuestras() {\r\n            let me = this;\r\n            this.$http.get(this.$server_url+'muestraDetalle?muestra_id=' + me.id)\r\n                .then(function (res) {\r\n                    me.detalleMuestra = res.data    \r\n                })\r\n                .catch(function (error) {       \r\n                })\r\n        },\r\n     \r\n        //modal para preguntar si quiere elimianr\r\n        openConfirmarEliminarEvidencia(tr){\r\n            let me = this;\r\n            me.evidencia.id = tr.id\r\n            me.popupEditEvidencia = 3\r\n            me.eliminarEstado = true\r\n        },\r\n\r\n          \r\n         eliminarEvidencia(){\r\n            let me = this;   \r\n            let formData = new FormData();\r\n            formData.append('id', me.evidencia.id)\r\n            me.$vs.loading()\r\n            axios.post(this.$data_url+'api/EliminarDetalleMuestra', formData)\r\n            // this.$http.post(this.$server_url+'EliminarDetalleMuestra',formData)\r\n        \r\n                .then(function (res) {\r\n                    me.$vs.loading.close();\r\n                    me.$vs.notify({\r\n                        text: res.data.message,\r\n                        color: 'primary',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-alert-triangle'\r\n                    })\r\n                    me.popupEditEvidencia =1;\r\n                    me.eliminarEstado = false\r\n                    me.DetalleMuestras();\r\n                    me.attachments = [];\r\n                    me.archivoName='';\r\n                    me.evidencia.id = ''\r\n                })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close();\r\n                })\r\n        },\r\n        openModalEditarEvidencia(tr){\r\n          let me = this;\r\n          me.evidencia.id = tr.id\r\n          me.evidencia.libro_id = {idlibro:tr.libro_id,nombrelibro:tr.nombrelibro}\r\n          me.evidencia.cantidad = tr.cantidad\r\n          me.evidencia.cantidad_devolucion = tr.cantidad_devolucion\r\n          me.evidencia.fecha_devolucion = tr.fecha_devolucion\r\n      \r\n          me.popupEditEvidencia = 2\r\n         \r\n        },\r\n         ActualizarEvidencia(){\r\n            let me = this;\r\n        \r\n            if(me.evidencia.cantidad_devolucion > me.evidencia.cantidad){\r\n                 me.$vs.notify({\r\n                  text:'La cantidad devuelta no puede ser mayor a la cantidad entregada',\r\n                  color:'success',\r\n                  iconPack: 'feather',\r\n                  icon:'icon-check'})\r\n                return false;\r\n            }\r\n\r\n               \r\n            let formData = new FormData();\r\n            formData.append('id',                   me.evidencia.id);\r\n            formData.append('libro_id',             me.evidencia.libro_id.idlibro);\r\n            formData.append('cantidad',             me.evidencia.cantidad);\r\n            formData.append('cantidad_devolucion',  me.evidencia.cantidad_devolucion);\r\n            if(me.evidencia.fecha_devolucion !=null  || me.evidencia.fecha_devolucion != undefined || me.evidencia.fecha_devolucion == ''){\r\n               formData.append('fecha_devolucion',     me.evidencia.fecha_devolucion);\r\n            }\r\n\r\n            const config = { headers: { 'Content-Type': 'multipart/form-data' } };\r\n            document.querySelectorAll('.upload-file').value=[];\r\n            me.$vs.loading()\r\n            axios.post(this.$data_url+'api/EditarDetalle', formData, config)\r\n            // this.$http.post(this.$server_url+'EditarDetalle',formData, config)\r\n        \r\n                .then(function (res) {\r\n                    me.$vs.loading.close();\r\n                    me.$vs.notify({\r\n                        text: res.data.message,\r\n                        color: 'primary',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-alert-triangle'\r\n                    })\r\n                    me.popupEditEvidencia =1;\r\n                    me.DetalleMuestras();\r\n                    me.attachments = [];\r\n                    me.archivoName='';\r\n                })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close();\r\n                })\r\n        },\r\n\r\n    }\r\n}\r\n",{"version":3,"sources":["muestraDetalle.vue"],"names":[],"mappings":";AAuGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"muestraDetalle.vue","sourceRoot":"src/views/asesor/seguimiento/components/components","sourcesContent":["<template>\r\n    <div>\r\n        <div>\r\n              <!---PARA EDITAR LOS DETALLES DE LA MUESTRA-->\r\n            <vs-divider class=\"mt-5\" color=\"success\">Mantenimiento de las evidencias</vs-divider>\r\n            <vs-row v-if=\"popupEditEvidencia == 1\">\r\n                <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\">\r\n                    <div v-if=\"detalleMuestra.length >0\" style=\"width: 100%;\">\r\n                        <vs-table stripe max-items=\"5\" search pagination :data=\"detalleMuestra\">\r\n                            <template slot=\"header\">\r\n                                <div class=\"vx-row\">\r\n                                    <div class=\"vx-col w-full m-3\">\r\n                                        Cantidad: {{detalleMuestra.length}}\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </template>\r\n                            <template slot=\"thead\">\r\n                                <vs-th sort-key=\"nombreInstitucion\">Libro</vs-th>\r\n                                <vs-th sort-key=\"nombre\">Cantidad entregadas</vs-th>\r\n                                <vs-th sort-key=\"nombre\">Cantidad devueltas</vs-th>\r\n                               \r\n                                <vs-th>Acciones</vs-th>\r\n                            </template>\r\n                            <template slot-scope=\"{data}\">\r\n                                <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n\r\n                                    <vs-td :data=\"data[indextr].nombrelibro\">\r\n                                        {{data[indextr].nombrelibro}}<br>\r\n                                    </vs-td>\r\n                                    <vs-td :data=\"data[indextr].cantidad\">\r\n                                        {{data[indextr].cantidad}} <br>\r\n                                    </vs-td>\r\n                                    <vs-td :data=\"data[indextr].cantidad_devolucion\">\r\n                                        {{data[indextr].cantidad_devolucion}} <br>\r\n                                    </vs-td>\r\n                              \r\n                                \r\n                                    <vs-td>\r\n                                        <div class=\"flex\">\r\n                                            <vx-tooltip style=\"display: inline-block;\" text=\"Editar evidencia\" position=\"top\" color=\"primary\">\r\n                                                <vs-button radius color=\"success\" @click=\"openModalEditarEvidencia(tr)\"  type=\"line\" icon=\"edit\"></vs-button>\r\n                                            </vx-tooltip> &nbsp;  \r\n                                            <vx-tooltip style=\"display: inline-block;\" text=\"Eliminar evidencia\" position=\"top\" color=\"primary\">\r\n                                                <vs-button radius color=\"danger\" @click=\"openConfirmarEliminarEvidencia(tr)\" type=\"line\" icon=\"delete\"></vs-button>\r\n                                            </vx-tooltip> &nbsp;  \r\n                                        </div>\r\n                                    </vs-td>\r\n                                </vs-tr>\r\n                            </template>\r\n                        </vs-table>\r\n                    </div>\r\n                    <div v-else>\r\n                        <vs-alert active=\"true\" color=\"warning\">\r\n                            No hay evidencias cargadas\r\n                        </vs-alert>\r\n                    </div>\r\n                </vs-col>\r\n            </vs-row>\r\n        </div>\r\n\r\n        <div v-if=\"eliminarEstado == true\">\r\n            <vs-alert active=\"true\">\r\n                <p style=\"text-align:center;\">Estas seguro de eliminar la evidencia?</p>\r\n                \r\n            </vs-alert>\r\n            <div style=\"display:flex;justify-content:center;\">\r\n                <vs-button line-origin=\"left\" @click=\"eliminarEvidencia()\" color=\"success\" type=\"line\">Si, acepto eliminar</vs-button>\r\n                <vs-button  color=\"danger\" @click=\"eliminarEstado = false;popupEditEvidencia = 1\" type=\"line\">Cancelar</vs-button>\r\n            </div>\r\n          \r\n\r\n        </div>\r\n\r\n        <!--MODAL PARA EDITAR CADA EVIDENCIA-->\r\n        <div v-if=\"popupEditEvidencia == 2\">\r\n            <vs-button radius color=\"success\" @click=\"popupEditEvidencia = 1\" type=\"gradient\" icon=\"reply\"></vs-button>\r\n            <br/>\r\n            <vs-row>\r\n                <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\">\r\n                    <v-select :options=\"libros\" :reduce=\"libros => libros\" v-model=\"evidencia.libro_id\" label=\"nombrelibro\" class=\"w-full\" />\r\n                </vs-col>\r\n            </vs-row>\r\n\r\n            <vs-row class=\"mt-3\">\r\n                <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"6\">\r\n                    <vs-input type=\"number\" label=\"Cantidad libros entregados\" style=\"width: 96%;\" placeholder=\"Libros entregados\" v-model=\"evidencia.cantidad\"/>\r\n                </vs-col>\r\n                <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"6\">\r\n                    <vs-input type=\"number\" label=\"Cantidad libros devueltos\" class=\"ml-2\" style=\"width: 96%;\" placeholder=\"Libros devueltos\" v-model=\"evidencia.cantidad_devolucion\"/>\r\n                </vs-col>\r\n            </vs-row>\r\n\r\n            <vs-row class=\"mt-5\">\r\n                <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\">\r\n                    <vs-button @click=\"ActualizarEvidencia()\" type=\"gradient\">Actualizar evidencia</vs-button>\r\n                </vs-col>\r\n            </vs-row>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport flatPickr from 'vue-flatpickr-component';\r\nimport 'flatpickr/dist/flatpickr.css';\r\nimport Vue from 'vue'\r\nimport axios from 'axios'\r\nimport vSelect from 'vue-select'\r\nexport default {\r\n    data() {\r\n       return{\r\n           eliminarEstado:false,\r\n           popupEditEvidencia:1,\r\n            detalleMuestra:[],\r\n            evidencia:{\r\n                libro_id:'',\r\n                cantidad:'',\r\n                cantidad_devolucion:'',\r\n                fecha_devolucion:null,\r\n                evidencia:'',\r\n            },\r\n            configdateTimePicker: {\r\n                enableTime: true,\r\n                dateFormat: 'Y-m-d'\r\n            },\r\n            libros:[]\r\n       } \r\n    },\r\n    mounted(){\r\n        let me = this;\r\n        me.DetalleMuestras();\r\n        me.getLibros()\r\n    },\r\n    props:{\r\n        id:{\r\n            type:String,\r\n            default:\"0\"\r\n        }\r\n    },\r\n     components: {\r\n        'v-select': vSelect,\r\n        flatPickr\r\n\r\n    },\r\n\r\n    methods:{\r\n\r\n            //para obtener el listado de Tipos de Area\r\n        getLibros() {\r\n            let me = this;\r\n            this.$http.get(this.$server_url + 'listaLibro')\r\n                .then(function (res) {\r\n                    me.libros = res.data.libros\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error')\r\n                })\r\n        },\r\n\r\n          //METODOS PARA LA ENVIDENCIAS\r\n        //Listar el detalle de la muestra\r\n        async DetalleMuestras() {\r\n            let me = this;\r\n            this.$http.get(this.$server_url+'muestraDetalle?muestra_id=' + me.id)\r\n                .then(function (res) {\r\n                    me.detalleMuestra = res.data    \r\n                })\r\n                .catch(function (error) {       \r\n                })\r\n        },\r\n     \r\n        //modal para preguntar si quiere elimianr\r\n        openConfirmarEliminarEvidencia(tr){\r\n            let me = this;\r\n            me.evidencia.id = tr.id\r\n            me.popupEditEvidencia = 3\r\n            me.eliminarEstado = true\r\n        },\r\n\r\n          \r\n         eliminarEvidencia(){\r\n            let me = this;   \r\n            let formData = new FormData();\r\n            formData.append('id', me.evidencia.id)\r\n            me.$vs.loading()\r\n            axios.post(this.$data_url+'api/EliminarDetalleMuestra', formData)\r\n            // this.$http.post(this.$server_url+'EliminarDetalleMuestra',formData)\r\n        \r\n                .then(function (res) {\r\n                    me.$vs.loading.close();\r\n                    me.$vs.notify({\r\n                        text: res.data.message,\r\n                        color: 'primary',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-alert-triangle'\r\n                    })\r\n                    me.popupEditEvidencia =1;\r\n                    me.eliminarEstado = false\r\n                    me.DetalleMuestras();\r\n                    me.attachments = [];\r\n                    me.archivoName='';\r\n                    me.evidencia.id = ''\r\n                })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close();\r\n                })\r\n        },\r\n        openModalEditarEvidencia(tr){\r\n          let me = this;\r\n          me.evidencia.id = tr.id\r\n          me.evidencia.libro_id = {idlibro:tr.libro_id,nombrelibro:tr.nombrelibro}\r\n          me.evidencia.cantidad = tr.cantidad\r\n          me.evidencia.cantidad_devolucion = tr.cantidad_devolucion\r\n          me.evidencia.fecha_devolucion = tr.fecha_devolucion\r\n      \r\n          me.popupEditEvidencia = 2\r\n         \r\n        },\r\n         ActualizarEvidencia(){\r\n            let me = this;\r\n        \r\n            if(me.evidencia.cantidad_devolucion > me.evidencia.cantidad){\r\n                 me.$vs.notify({\r\n                  text:'La cantidad devuelta no puede ser mayor a la cantidad entregada',\r\n                  color:'success',\r\n                  iconPack: 'feather',\r\n                  icon:'icon-check'})\r\n                return false;\r\n            }\r\n\r\n               \r\n            let formData = new FormData();\r\n            formData.append('id',                   me.evidencia.id);\r\n            formData.append('libro_id',             me.evidencia.libro_id.idlibro);\r\n            formData.append('cantidad',             me.evidencia.cantidad);\r\n            formData.append('cantidad_devolucion',  me.evidencia.cantidad_devolucion);\r\n            if(me.evidencia.fecha_devolucion !=null  || me.evidencia.fecha_devolucion != undefined || me.evidencia.fecha_devolucion == ''){\r\n               formData.append('fecha_devolucion',     me.evidencia.fecha_devolucion);\r\n            }\r\n\r\n            const config = { headers: { 'Content-Type': 'multipart/form-data' } };\r\n            document.querySelectorAll('.upload-file').value=[];\r\n            me.$vs.loading()\r\n            axios.post(this.$data_url+'api/EditarDetalle', formData, config)\r\n            // this.$http.post(this.$server_url+'EditarDetalle',formData, config)\r\n        \r\n                .then(function (res) {\r\n                    me.$vs.loading.close();\r\n                    me.$vs.notify({\r\n                        text: res.data.message,\r\n                        color: 'primary',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-alert-triangle'\r\n                    })\r\n                    me.popupEditEvidencia =1;\r\n                    me.DetalleMuestras();\r\n                    me.attachments = [];\r\n                    me.archivoName='';\r\n                })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close();\r\n                })\r\n        },\r\n\r\n    }\r\n}\r\n</script>"]}]}