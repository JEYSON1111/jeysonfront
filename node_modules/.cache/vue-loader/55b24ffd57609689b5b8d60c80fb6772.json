{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\docentes\\components\\estudianteCurso.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\docentes\\components\\estudianteCurso.vue","mtime":1712682815760},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nexport default {\r\n    data() {\r\n        return {\r\n            idusuario: 0,\r\n            estudiantes: [],\r\n            //variables para el export a excel\r\n            activePrompt: false,\r\n            codigoSelected: [],\r\n            reportesActivo: 0,\r\n            fileName: null,\r\n            formats: ['xls', 'xlsx', 'csv', 'txt'],\r\n            cellAutoWidth: true,\r\n            selectedFormat: 'xls',\r\n            //fin variables para el export a excel\r\n\r\n        }\r\n    },\r\n    props: {\r\n        setCurso: {\r\n            type: String,\r\n            default: \"\"\r\n        },\r\n        setNombreAsignatura: {\r\n            type: String,\r\n            default: \"\"\r\n        },\r\n        setAula: {\r\n            type: String,\r\n            default: \"\"\r\n        }\r\n    },\r\n    mounted() {\r\n        let me = this;\r\n        me.getCursos()\r\n    },\r\n    methods: {\r\n        //para obtener el listado de los estudiantes\r\n        getCursos() {\r\n            let me = this;\r\n            me.$vs.loading();\r\n            this.$http.get(this.$server_url + 'cursosEstudiante?curso=' + me.setCurso)\r\n                .then(function (res) {\r\n                    me.estudiantes = res.data\r\n                    me.$vs.loading.close()\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                    me.$vs.loading.close()\r\n\r\n                })\r\n        },\r\n        openConfirm(tr) {\r\n            let me = this;\r\n            me.idusuario = tr.idusuario\r\n            console.log(me.setCurso)\r\n            localStorage.codigo = me.setCurso\r\n            this.$vs.dialog({\r\n                type: 'confirm',\r\n                color: 'danger',\r\n                title: `Confirmar`,\r\n                text: 'Esta seguro/a de quitar el estudiante del curso',\r\n                accept: this.quitarEstudiante\r\n            })\r\n        },\r\n        //para bloquear el estudiante\r\n        //eliminar a un estudiante de un curso\r\n        quitarEstudiante() {\r\n            let me = this;\r\n            me.$vs.loading();\r\n            let formData = new FormData();\r\n            formData.append('idusuario', me.idusuario);\r\n            formData.append('codigo', localStorage.codigo);\r\n            this.$http.post(this.$server_url + \"quitarEstudianteDeCurso\", formData)\r\n                .then(function (response) {\r\n                  console.log(response.data )\r\n                    me.$vs.notify({\r\n                        color: 'success',\r\n                        title: 'Correcto',\r\n                        text: 'Estudiante eliminado del curso actual',\r\n                        time: 5000\r\n                    })\r\n                    me.$vs.loading.close()\r\n                    me.getCursos();\r\n                })\r\n                .catch(function (error) {\r\n                    me.$vs.notify({\r\n                        color: 'danger',\r\n                        title: 'Error',\r\n                        text: error\r\n                    });\r\n                    me.$vs.loading.close()\r\n                })\r\n\r\n            // this.$http.get(this.$server_url+'cursosEstudiante?bloquear=yes&idusuario='+me.idusuario)\r\n            //     .then(function (res) {\r\n            //         me.$vs.loading.close()\r\n            //         me.getCursos();\r\n            //     })\r\n            //     .catch(function (error) {\r\n            //         console.log(error + ' error');\r\n            //         me.$vs.loading.close()\r\n\r\n            //     })\r\n        },\r\n        //METODOS PARA EXCEL\r\n        //para limipiar los campos del excel\r\n        clearFields() {\r\n            this.fileName = ''\r\n            this.cellAutoWidth = true\r\n            this.selectedFormat = 'xls'\r\n        },\r\n        //metodo par descargar el excel\r\n        exportToExcel() {\r\n            let headerTitle = ['Estudiante', 'Cedula', 'institucion', 'ciudad'];\r\n            let headerVal = ['student', 'cedula', 'nombreInstitucion', 'ciudad'];\r\n            let codigoSelectedMayus = this.codigoSelected\r\n            for (var i = 0; i < codigoSelectedMayus.length; i++) {\r\n                for (var key in codigoSelectedMayus[i]) {\r\n                    if (typeof codigoSelectedMayus[i][key] == \"string\") {\r\n                        codigoSelectedMayus[i][key] = codigoSelectedMayus[i][key].toUpperCase();\r\n                    }\r\n                }\r\n            }\r\n            import('@/vendor/Export2Excel').then(excel => {\r\n                const list = codigoSelectedMayus\r\n                const data = this.formatJson(headerVal, list)\r\n                excel.export_json_to_excel({\r\n                    header: headerTitle,\r\n                    data,\r\n                    filename: this.fileName,\r\n                    autoWidth: this.cellAutoWidth,\r\n                    bookType: this.selectedFormat\r\n                })\r\n                this.clearFields()\r\n                this.guardarActivo = '';\r\n                this.generarActivo = ' ';\r\n                this.textAlertCant = '';\r\n                this.cantidad = '';\r\n                this.codigoSelected = [];\r\n            })\r\n        },\r\n        formatJson(filterVal, jsonData) {\r\n            return jsonData.map(v => filterVal.map(j => {\r\n                return v[j]\r\n            }))\r\n        },\r\n    }\r\n}\r\n",{"version":3,"sources":["estudianteCurso.vue"],"names":[],"mappingsfile":"estudianteCurso.vue","sourceRoot":"src/views/docentes/components","sourcesContent":["<template>\r\n<div>\r\n    <div class=\"w-full p-2 bg-gray-400 text-left mt-4\">\r\n        <vs-alert active=\"true\" :title=\"'Asignatura '+setNombreAsignatura\">\r\n            <p>Paralelo: <span>{{ setAula  }}</span></p><br>\r\n            <p>Código: <span>{{ setCurso  }}</span></p>\r\n        </vs-alert>\r\n    </div>\r\n    <vs-table multiple v-model=\"codigoSelected\" stripe pagination max-items=\"25\" search :data=\"estudiantes\">\r\n        <template slot=\"header\">\r\n            <div style=\"display:flex;\">\r\n                <vs-button color=\"warning\" size=\"small\" class=\"mr-5\" style=\"font-size: 14px;\" @click=\"activePrompt=true;\">\r\n                    Exportar\r\n                </vs-button>\r\n                <vs-chip color=\"success\" style=\"font-size:12px;\">\r\n                    Total estudiantes: {{estudiantes.length}}\r\n                </vs-chip>\r\n            </div>\r\n        </template>\r\n        <template slot=\"thead\">\r\n            <vs-th sort-key=\"student\">Estudiante</vs-th>\r\n            <vs-th sort-key=\"nombres\">Institución</vs-th>\r\n            <vs-th sort-key=\"contrato\">Acciones</vs-th>\r\n        </template>\r\n        <template slot-scope=\"{data}\">\r\n            <vs-tr :data=\"tr\" :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                <vs-td :data=\"data[indextr].student\">\r\n                    <p style=\"font-weight:bold;\">Estudiante:</p>\r\n                    {{ data[indextr].student }}\r\n                    <p style=\"font-weight:bold;\">Cédula:</p>\r\n                    <span>{{ data[indextr].cedula }}</span><br />\r\n                </vs-td>\r\n                <vs-td :data=\"data[indextr].nombreInstitucion\">\r\n                    <p style=\"font-weight:bold;\">Institución:</p>\r\n                    <p style=\"font-size:12px;letter-spacing:1px;\">{{ data[indextr].nombreInstitucion }}</p>\r\n                    <p style=\"font-weight:bold;\">Ciudad:</p>\r\n                    <span>\r\n                        {{ data[indextr].ciudad }}<br />\r\n                    </span>\r\n                </vs-td>\r\n                <vs-td>\r\n                    <div class=\"flex\">\r\n                        <vs-button color=\"warning\" icon=\"info\" @click=\"openConfirm(tr);\" type=\"border\">No es mi estudiante</vs-button>\r\n                    </div>\r\n                </vs-td>\r\n            </vs-tr>\r\n        </template>\r\n    </vs-table>\r\n    <!--MODAL PARA EXPORTAR A EXCEL-->\r\n    <vs-prompt title=\"Exportar a Excel\" class=\"export-options\" @cancle=\"clearFields\" @accept=\"exportToExcel\" accept-text=\"Exportar\" @close=\"clearFields\" :active.sync=\"activePrompt\">\r\n        <vs-alert class=\"mb-3\" color=\"danger\" icon-pack=\"feather\" icon=\"icon-info\">\r\n            <span>Recuerde <b>seleccionar</b> los códigos que desea exportar.</span>\r\n        </vs-alert>\r\n        <vs-input v-model=\"fileName\" placeholder=\"Ingrese el nombre del archivo\" class=\"w-full\" />\r\n        <v-select v-model=\"selectedFormat\" :options=\"formats\" class=\"my-4\" />\r\n    </vs-prompt>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data() {\r\n        return {\r\n            idusuario: 0,\r\n            estudiantes: [],\r\n            //variables para el export a excel\r\n            activePrompt: false,\r\n            codigoSelected: [],\r\n            reportesActivo: 0,\r\n            fileName: null,\r\n            formats: ['xls', 'xlsx', 'csv', 'txt'],\r\n            cellAutoWidth: true,\r\n            selectedFormat: 'xls',\r\n            //fin variables para el export a excel\r\n\r\n        }\r\n    },\r\n    props: {\r\n        setCurso: {\r\n            type: String,\r\n            default: \"\"\r\n        },\r\n        setNombreAsignatura: {\r\n            type: String,\r\n            default: \"\"\r\n        },\r\n        setAula: {\r\n            type: String,\r\n            default: \"\"\r\n        }\r\n    },\r\n    mounted() {\r\n        let me = this;\r\n        me.getCursos()\r\n    },\r\n    methods: {\r\n        //para obtener el listado de los estudiantes\r\n        getCursos() {\r\n            let me = this;\r\n            me.$vs.loading();\r\n            this.$http.get(this.$server_url + 'cursosEstudiante?curso=' + me.setCurso)\r\n                .then(function (res) {\r\n                    me.estudiantes = res.data\r\n                    me.$vs.loading.close()\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                    me.$vs.loading.close()\r\n\r\n                })\r\n        },\r\n        openConfirm(tr) {\r\n            let me = this;\r\n            me.idusuario = tr.idusuario\r\n            console.log(me.setCurso)\r\n            localStorage.codigo = me.setCurso\r\n            this.$vs.dialog({\r\n                type: 'confirm',\r\n                color: 'danger',\r\n                title: `Confirmar`,\r\n                text: 'Esta seguro/a de quitar el estudiante del curso',\r\n                accept: this.quitarEstudiante\r\n            })\r\n        },\r\n        //para bloquear el estudiante\r\n        //eliminar a un estudiante de un curso\r\n        quitarEstudiante() {\r\n            let me = this;\r\n            me.$vs.loading();\r\n            let formData = new FormData();\r\n            formData.append('idusuario', me.idusuario);\r\n            formData.append('codigo', localStorage.codigo);\r\n            this.$http.post(this.$server_url + \"quitarEstudianteDeCurso\", formData)\r\n                .then(function (response) {\r\n                  console.log(response.data )\r\n                    me.$vs.notify({\r\n                        color: 'success',\r\n                        title: 'Correcto',\r\n                        text: 'Estudiante eliminado del curso actual',\r\n                        time: 5000\r\n                    })\r\n                    me.$vs.loading.close()\r\n                    me.getCursos();\r\n                })\r\n                .catch(function (error) {\r\n                    me.$vs.notify({\r\n                        color: 'danger',\r\n                        title: 'Error',\r\n                        text: error\r\n                    });\r\n                    me.$vs.loading.close()\r\n                })\r\n\r\n            // this.$http.get(this.$server_url+'cursosEstudiante?bloquear=yes&idusuario='+me.idusuario)\r\n            //     .then(function (res) {\r\n            //         me.$vs.loading.close()\r\n            //         me.getCursos();\r\n            //     })\r\n            //     .catch(function (error) {\r\n            //         console.log(error + ' error');\r\n            //         me.$vs.loading.close()\r\n\r\n            //     })\r\n        },\r\n        //METODOS PARA EXCEL\r\n        //para limipiar los campos del excel\r\n        clearFields() {\r\n            this.fileName = ''\r\n            this.cellAutoWidth = true\r\n            this.selectedFormat = 'xls'\r\n        },\r\n        //metodo par descargar el excel\r\n        exportToExcel() {\r\n            let headerTitle = ['Estudiante', 'Cedula', 'institucion', 'ciudad'];\r\n            let headerVal = ['student', 'cedula', 'nombreInstitucion', 'ciudad'];\r\n            let codigoSelectedMayus = this.codigoSelected\r\n            for (var i = 0; i < codigoSelectedMayus.length; i++) {\r\n                for (var key in codigoSelectedMayus[i]) {\r\n                    if (typeof codigoSelectedMayus[i][key] == \"string\") {\r\n                        codigoSelectedMayus[i][key] = codigoSelectedMayus[i][key].toUpperCase();\r\n                    }\r\n                }\r\n            }\r\n            import('@/vendor/Export2Excel').then(excel => {\r\n                const list = codigoSelectedMayus\r\n                const data = this.formatJson(headerVal, list)\r\n                excel.export_json_to_excel({\r\n                    header: headerTitle,\r\n                    data,\r\n                    filename: this.fileName,\r\n                    autoWidth: this.cellAutoWidth,\r\n                    bookType: this.selectedFormat\r\n                })\r\n                this.clearFields()\r\n                this.guardarActivo = '';\r\n                this.generarActivo = ' ';\r\n                this.textAlertCant = '';\r\n                this.cantidad = '';\r\n                this.codigoSelected = [];\r\n            })\r\n        },\r\n        formatJson(filterVal, jsonData) {\r\n            return jsonData.map(v => filterVal.map(j => {\r\n                return v[j]\r\n            }))\r\n        },\r\n    }\r\n}\r\n</script>\r\n"]}]}