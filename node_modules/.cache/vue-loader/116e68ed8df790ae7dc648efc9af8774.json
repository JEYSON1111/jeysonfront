{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\institucion\\instituciones.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\institucion\\instituciones.vue","mtime":1712682816030},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\n    import Vue from 'vue'\r\n    import axios from 'axios'\r\n    import DataViewSidebar from './nuevo'\r\n    import Periodos from '../periodos/periodos.vue'\r\n    import vSelect from 'vue-select'\r\n    import escuelasAsesorVue from '../home/components/asesor/escuelasAsesor.vue'\r\n    import listadoContratoMiltonVue from './components/listadoContratoMilton.vue'\r\n    import asignarLibrosVue from './components/asignarLibros.vue'\r\n    import moment from 'moment'\r\n    import flatPickr from 'vue-flatpickr-component'\r\n    import asignarRecursosExternosVue from './components/asignarRecursosExternos.vue'\r\n    import GenerarFormulario from '../home/docentes/formulario/listadoSolicitudes.vue'\r\n    import MenuEncuesta from '../home/padres/encuesta/MenuEncuesta.vue'\r\n    import 'flatpickr/dist/flatpickr.css'\r\n    import InstitucionesXCiudad from './institucionesXCiudad.vue'\r\n    import Ciudades_vue from '../ciudades/listaCiudad.vue'\r\n    import Zonas_vue from '../zonas/listaZona.vue'\r\n    import Periodo_config_institucion from '../periodos/periodo_config_institucion.vue'\r\n    import RegistroDocentesVue from './components/RegistroDocentes.vue'\r\n    import institucionfacturacion from '../pedidos/facturacion_api/institucion.vue';\r\n    import addInstitucionVue from './addInstitucion.vue'\r\n    import RegistroVentaVue from '../codigos/components/utils/RevisionVenta.vue'\r\n    const ResetearEvaluacionesVue = () => import('./components/EvaluacionesInstituciones/ResetearEvaluaciones.vue')\r\n    export default {\r\n        components: {\r\n        DataViewSidebar,\r\n        Periodos,\r\n        \"v-select\": vSelect,\r\n        escuelasAsesorVue,\r\n        asignarLibrosVue,\r\n        flatPickr,\r\n        asignarRecursosExternosVue,\r\n        GenerarFormulario,\r\n        MenuEncuesta,\r\n        listadoContratoMiltonVue,\r\n        InstitucionesXCiudad,\r\n        Ciudades_vue,\r\n        Zonas_vue,\r\n        Periodo_config_institucion,\r\n        RegistroDocentesVue,\r\n        institucionfacturacion,\r\n        addInstitucionVue,\r\n        RegistroVentaVue,\r\n        ResetearEvaluacionesVue,\r\n    },\r\n        data() {\r\n            return {\r\n              institucion_id:0,\r\n              configdateTimePicker: {\r\n                  enableTime: true,\r\n                  dateFormat: 'Y-m-d'\r\n              },\r\n              user_institucion_send: '',\r\n              //variables para exportar a excel\r\n              activePrompt: false,\r\n              reportesActivo: 0,\r\n              fileName: null,\r\n              formats: ['xls', 'xlsx', 'csv', 'txt'],\r\n              cellAutoWidth: true,\r\n              selectedFormat: 'xls',\r\n              reporteAsesorActivo: false,\r\n              guardarActivo: '',\r\n              generarActivo: '',\r\n              textAlertCant: '',\r\n              cantidad: '',\r\n              codigoSelected: [],\r\n              codigoTipo: '0',\r\n              //FIN DE VARIABLES PARA EXPORTAR A EXCEL\r\n              escuelas: [],\r\n              popupVistasUsuario: false,\r\n              popupAsignacion: false,\r\n              popupDocentes: false,\r\n              popupAddInstitucion: false,\r\n              popupPeriodos: false,\r\n              busquedaInstitucion: \"\",\r\n              instituciones: [],\r\n              tmpInstituciones: [],\r\n              sidebarData: {},\r\n              addNewDataSidebar: false,\r\n              usuario: [],\r\n              grupo_usuario: '',\r\n              //para el total visitas de institucion\r\n              visitasginstitucion: '',\r\n              //para el total visitas de docentes\r\n              visitasgdocente: '',\r\n              //para el total visitas de estudiantes\r\n              visitasgestudiantes: '',\r\n              //para  llenar el historico por institucion\r\n              historicoinstitucionArreglo: [],\r\n              //para  llenar el historico para docentes\r\n              historicoDocenteArreglo: [],\r\n              //para llenar el historico de para estudiantes\r\n              historicoEstudianteArreglo: [],\r\n              //para guardar el nombre de la institucion en el localstorage\r\n              visitasnombreinstitucion: '',\r\n              user_autorizado: '',\r\n              c_region: 'SIERRA',\r\n              //=========VARIABLES PARA PERIODOS==============\r\n              nombreInstitucion: '',\r\n              idInstitucion: '',\r\n              listaPeriodos: '',\r\n              tmplistaPeriodos: '',\r\n              listaPeriodosInstitucion: '',\r\n              tmp: '',\r\n              f_periodos: 1,\r\n              modalPeriodos: false,\r\n              id_eliminar: '',\r\n              region: [],\r\n              usuario: [],\r\n              estadoLimiteAcceso: \"0\",\r\n              fecha: null,\r\n              //=========VARIABLES PARA EDITAR INSTITUCION=======\r\n              institucion: {\r\n                  'idInstitucion': '',\r\n                  'nombreInstitucion': '',\r\n                  'telefonoInstitucion': '',\r\n                  'direccionInstitucion': '',\r\n                  'solicitudInstitucion': '',\r\n                  'vendedorInstitucion': '',\r\n                  'periodoescolar': '',\r\n                  'tipo_institucion': '',\r\n                  'ciudad_id': '',\r\n                  'region_idregion': '',\r\n                  'estado': '1',\r\n                  'matricula': '1',\r\n                  'punto_venta': 0,\r\n              },\r\n              errors: {\r\n                  'nombreInstitucion': '',\r\n                  'telefonoInstitucion': '',\r\n                  'direccionInstitucion': '',\r\n                  'solicitudInstitucion': '',\r\n                  'vendedorInstitucion': '',\r\n                  'periodoescolar': '',\r\n                  'tipo_institucion': '',\r\n                  'ciudad_id': '',\r\n                  'region_idregion': '',\r\n              },\r\n              titulo: '',\r\n              ciudad: [],\r\n              region: [],\r\n              periodo: [],\r\n              vendedor: [],\r\n              usuario: '',\r\n              limiteMegas: 1,\r\n              porcentaje: '',\r\n              pesoArchivo: '',\r\n              muyPesado: '',\r\n              msj: '',\r\n              //===========VARIABLE PARA MODAL DE LISTA DE DOCENTES=========\r\n              usuarios: [],\r\n              accesosDocentes: [],\r\n              conteoDocentes: [{\r\n                  'idusuario': '',\r\n                  'cantidad': 0\r\n              }],\r\n              accesosEstudiantes: [],\r\n              institucionDocente: '',\r\n              tipo: '',\r\n              conteo: 0,\r\n              usuario: '',\r\n              perfil_autorizado: '',\r\n              //===========VARIABLES PARA MODAL DE ASIGNACION DE LIBROS========\r\n              area: [],\r\n              asignaturadocenteselect: [],\r\n              seleccionadas: '',\r\n              usuarioAsignacion: '',\r\n              user_seleccionado: '',\r\n              user_nombre: '',\r\n              user_email: '',\r\n              user_institucion: '',\r\n              show_inst: '',\r\n              //===========VARIABLES PARA EL MODAL DE VISTAS DE USUARIO=========\r\n              docente: '',\r\n              listaVisitas: [],\r\n              datoU: '',\r\n              //para el modal para agregar permisos\r\n              update: false,\r\n              asignatura_id: 0,\r\n              colegio_asignatura_id: 0,\r\n              permisoRoot: false,\r\n              attachments: [],\r\n              form: new FormData,\r\n              numeroIteM: '0',\r\n              instituciones: [],\r\n              errorImage: '',\r\n              tamanioError: '',\r\n              archivoName: '',\r\n              file: '',\r\n              id: 0,\r\n              fromDate: null,\r\n              toDate: null,\r\n              visitasD: false,\r\n              //variables permisos externos\r\n              verPermisosExternos: 0,\r\n              permisosInstitucion: '',\r\n              permisosNombreInstitucion: '',\r\n              //fin variables permisos externos\r\n              value1: '',\r\n              value2: '',\r\n              valid: {\r\n                  email: false,\r\n                  password: false,\r\n              },\r\n              //formulario docente\r\n              formulario: {\r\n                  institucion: '0',\r\n                  periodo_id: 0,\r\n                  periodoDescripcion: '',\r\n                  nombreInstitucion: '',\r\n              },\r\n              //COINCIDENCIAS\r\n              arregloCoincidencias: [],\r\n              arregloIdsCoincidencias: [],\r\n              popupCoincidencia: false,\r\n              institucionEnviar: 0,\r\n              institucionEnviarCedula: 0,\r\n              institucionEnviarAIniciales: '',\r\n              institucionNombreEnviar: '',\r\n              institucionCiudad: '',\r\n              busquedaMilton: '',\r\n              //FIN COINCIDENCIAS\r\n              //variables registro de docentes\r\n              sendInstitucion:{},\r\n              popupAsignacionDocentes:false,\r\n              //fin variables registro de docentes\r\n              arregloCodigosEstudiantes:[],\r\n              //Variables detalle de venta\r\n              popupTipoVenta:false,\r\n              pedido:{},\r\n              tituloDetalleVenta:'',\r\n              //Fin Variables detalle de venta\r\n              //variables para asignar el periodo actual\r\n              popupActualizarPeriodo:false,\r\n              periodoSelect:[],\r\n              //fin variables para asignar el periodo actual,\r\n              institucionSelected:0,\r\n              //variables para evaluaciones institucion\r\n              arrayEvaluacionesInstitucion:[],\r\n               popupEvaluaciones:false,\r\n              //fin variables para evaluaciones institucion\r\n            }\r\n        },\r\n        mounted() {\r\n            let me = this;\r\n            localStorage.removeItem('institucion')\r\n            localStorage.removeItem('tipoUser')\r\n            me.usuario = JSON.parse(localStorage.getItem('usuario'))\r\n            me.user_autorizado = me.usuario.id_group;\r\n            me.getUserRoot();\r\n            const date = new Date()\r\n            const primerDia = new Date(date.getFullYear(), date.getMonth(), 1)\r\n            const ultimoDia = new Date(date.getFullYear(), date.getMonth() + 1, 0)\r\n            me.fromDate = primerDia\r\n            me.toDate = ultimoDia\r\n        },\r\n        methods: {\r\n            //para ir al formulario docente\r\n            irFormularioDocente(tr) {\r\n                let me = this;\r\n                localStorage.setItem('formulario', 'institucion')\r\n                me.formulario.institucion = tr.idInstitucion;\r\n                me.formulario.nombreInstitucion = tr.nombreInstitucion\r\n                me.formulario.periodoDescripcion = tr.periodo\r\n                me.formulario.periodo_id = tr.periodo_id\r\n                me.verPermisosExternos = 2;\r\n            },\r\n            irGestionEncuestas(tr) {\r\n                let me = this;\r\n                localStorage.setItem('formulario', 'institucion')\r\n                me.formulario.institucion = tr.idInstitucion;\r\n                me.formulario.nombreInstitucion = tr.nombreInstitucion\r\n                me.formulario.periodoDescripcion = tr.periodo\r\n                me.formulario.periodo_id = tr.periodo_id\r\n                me.verPermisosExternos = 3;\r\n            },\r\n            fieldChange(e) {\r\n                let me = this;\r\n                me.errorImage = 'no'\r\n                me.tamanioError = \"no\"\r\n                this.attachments = [];\r\n                let selectedFiles = e.target.files;\r\n                let validar = e.target.files[0].type;\r\n                let tamanio = e.target.files[0].size;\r\n                if (tamanio > 1000000) {\r\n                    me.tamanioError = \"yes\"\r\n                    me.$vs.notify({\r\n                        text: 'El tamaño de la imagen excede 1MB',\r\n                        color: 'warning',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check'\r\n                    })\r\n                    return false;\r\n                }\r\n                if (validar == 'image/png' || validar == 'image/jpg' || validar == 'image/jpeg') {\r\n                    me.file = e.target.files[0]\r\n                    for (let i = 0; i < selectedFiles.length; i++) {\r\n                        this.attachments.push(selectedFiles[i]);\r\n                        localStorage.setItem('nameArchivo', this.attachments[0].name)\r\n                        me.archivoName = localStorage.getItem(\"nameArchivo\")\r\n                    }\r\n                    me.errorImage = 'no'\r\n                } else {\r\n                    me.errorImage = 'yes'\r\n                    me.$vs.notify({\r\n                        text: 'Formato de imagen no aceptada solo se acepta png/jpg/jpeg',\r\n                        color: 'success',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check'\r\n                    })\r\n                    return false;\r\n                }\r\n            },\r\n            //para obtener el listado de los usuarios root\r\n            getUserRoot() {\r\n                let me = this;\r\n                this.$http.get(this.$server_url + 'permisos?permiso=yes&usuario_id=' + me.usuario.idusuario)\r\n                    .then(function (res) {\r\n                        if (res.data.status == '1') {\r\n                            me.permisoRoot = true\r\n                        } else {\r\n                            me.permisoRoot = false\r\n                        }\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(error + ' error');\r\n                    })\r\n            },\r\n            //PERMISOS EXTERNOS\r\n            agregarPermisosExternos(data) {\r\n                let me = this;\r\n                me.verPermisosExternos = 1\r\n                me.permisosInstitucion = data.idInstitucion\r\n                me.permisosNombreInstitucion = data.nombreInstitucion\r\n                return false\r\n            },\r\n            //FIN PERMISOS EXTERNOS\r\n            closeBtn(event) {\r\n                this.popupAsignacion = false;\r\n                this.popupDocentes = true;\r\n            },\r\n\r\n            //para ir asignar recursos externos a prolipa\r\n            irAddRecursosExternos(data = {}) {\r\n                let me = this;\r\n                localStorage.setItem('institucionExterna', data.idInstitucion)\r\n                localStorage.setItem('ciudadExterna', data.ciudad)\r\n                me.$router.push('/recursos/asignaturas');\r\n            },\r\n            addNewData() {\r\n                this.sidebarData = {}\r\n                this.toggleDataSidebar(true)\r\n            },\r\n            toggleDataSidebar(val = false) {\r\n                this.addNewDataSidebar = val\r\n            },\r\n            getInstitucion() {\r\n                let me = this;\r\n                me.instituciones = [];\r\n                if (me.busquedaInstitucion.length < 5) {\r\n                    me.$vs.notify({\r\n                        text: 'Minimo 5 caracteres de busqueda',\r\n                        color: 'warning',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check'\r\n                    })\r\n                    return false;\r\n                }\r\n                me.$vs.loading()\r\n                this.$http.get(this.$server_url + 'listaInsitucion?busqueda=' + me.busquedaInstitucion)\r\n                    .then(function (res) {\r\n                        // me.tmpInstituciones = res.data;\r\n                        me.instituciones = res.data;\r\n                        // me.filtroRegion();\r\n                        me.$vs.loading.close()\r\n                        if (res.data.message) {\r\n                            me.$vs.notify({\r\n                                text: res.data.message,\r\n                                color: 'success',\r\n                                iconPack: 'feather',\r\n                                icon: 'icon-user'\r\n                            })\r\n                        }\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(error + ' error');\r\n                        me.$vs.loading.close()\r\n                    })\r\n            },\r\n            getPeriodoInstitucion(id) {\r\n                let me = this;\r\n                this.$http.get(this.$server_url + 'institucionTraerPeriodo?institucion_id=' + id)\r\n                    .then(function (res) {\r\n\r\n                        localStorage.setItem('free_periodo_id', res.data[0].periodo)\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(error + ' error');\r\n                    })\r\n            },\r\n            agregarLibro(id) {\r\n                localStorage.idinstitucion = id;\r\n                this.getPeriodoInstitucion(id)\r\n                this.$router.push('/institucion/addlibro');\r\n            },\r\n\r\n            agregarLibrerias(id) {\r\n                localStorage.idinstitucion = id;\r\n                this.$router.push('/institucion/librerias');\r\n            },\r\n            verDocentes(item) {\r\n                let me = this;\r\n                me.usuarios = []\r\n                me.popupDocentes = true;\r\n                me.visitasD = false\r\n                // console.log( item.idInstitucion )\r\n                localStorage.institucion = JSON.stringify(item);\r\n                localStorage.tipoUser = \"docente\";\r\n                // me.$router.push('/institucion/docentes');\r\n\r\n                localStorage.removeItem('datoUser')\r\n                localStorage.removeItem('user_select')\r\n                localStorage.removeItem('show_inst')\r\n                me.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n                me.institucionDocente = JSON.parse(localStorage.getItem('institucion'))\r\n                me.tipo = localStorage.getItem('tipoUser');\r\n                me.perfil_autorizado = me.usuario.id_group;\r\n\r\n                me.getUsuariosTipo();\r\n            },\r\n            verDocentesVisitas(item) {\r\n                let me = this;\r\n                me.usuarios = []\r\n                me.visitasD = true\r\n                me.popupDocentes = true;\r\n                // console.log( item.idInstitucion )\r\n                localStorage.institucion = JSON.stringify(item);\r\n                localStorage.tipoUser = \"docente\";\r\n                // me.$router.push('/institucion/docentes');\r\n\r\n                localStorage.removeItem('datoUser')\r\n                localStorage.removeItem('user_select')\r\n                localStorage.removeItem('show_inst')\r\n                me.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n                me.institucionDocente = JSON.parse(localStorage.getItem('institucion'))\r\n                me.tipo = localStorage.getItem('tipoUser');\r\n                me.perfil_autorizado = me.usuario.id_group;\r\n\r\n                me.getUsuariosTipoVisitas();\r\n            },\r\n            confirmEliminarInstitucion(tr) {\r\n                let me = this;\r\n                me.id = tr.idInstitucion\r\n                this.$vs.dialog({\r\n                    type: 'confirm',\r\n                    color: 'danger',\r\n                    title: `Confirmar`,\r\n                    text: 'Estas seguro de eliminar la institución',\r\n                    accept: this.eliminarInstitucion\r\n                })\r\n            },\r\n            eliminarInstitucion() {\r\n                let me = this;\r\n                let formData = new FormData();\r\n                formData.append('id', me.id)\r\n                me.$vs.loading()\r\n                this.$http.post(this.$server_url + 'institucionEliminar', formData)\r\n                    .then(res => {\r\n                        me.$vs.loading.close()\r\n                        me.getInstitucion();\r\n                        me.$vs.notify({\r\n                            text: 'Institución eliminada con exito',\r\n                            color: 'success',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-check'\r\n                        })\r\n                    })\r\n                    .catch(function (e) {\r\n                        me.$vs.loading.close()\r\n                        me.$vs.notify({\r\n                            text: 'No se pudo eliminar la institucion',\r\n                            color: 'warning',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-check'\r\n                        })\r\n                    });\r\n            },\r\n            verEstudiantes(item) {\r\n                let me = this;\r\n                me.popupDocentes = true;\r\n                // console.log( item.idInstitucion )\r\n                localStorage.tipoUser = \"estudiante\";\r\n                localStorage.institucion = JSON.stringify(item);\r\n                // me.$router.push('/institucion/estudiantes');\r\n                localStorage.removeItem('datoUser')\r\n                localStorage.removeItem('user_select')\r\n                localStorage.removeItem('show_inst')\r\n                me.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n                me.institucionDocente = JSON.parse(localStorage.getItem('institucion'))\r\n                me.tipo = localStorage.getItem('tipoUser');\r\n                me.perfil_autorizado = me.usuario.id_group;\r\n\r\n                me.getUsuariosTipo();\r\n            },\r\n            getVisitas(item, nombreInstitucion) {\r\n\r\n                let me = this;\r\n                axios.get('https://foro.prolipadigital.com.ec/historico-recursos?idinstitucion=' + item + '&_limit=-1')\r\n                    .then(res => {\r\n                        // console.log(res.data.length)\r\n                        // me.visitas = res.data.length;\r\n                        //para guardar las intitucion en el localstorage\r\n                        this.historicoinstitucionArreglo = res.data;\r\n                        localStorage.setItem(\"historicoinstitucionArreglo\", JSON.stringify(this.historicoinstitucionArreglo));\r\n\r\n                        //para guardar el nombre de la institucion en localstorage\r\n\r\n                        this.visitasnombreinstitucion = nombreInstitucion\r\n                        localStorage.setItem(\"visitasnombreinstitucion\", JSON.stringify(this.visitasnombreinstitucion));\r\n                        //para enviar el id de la institucion\r\n                        localStorage.setItem(\"visitasid\", JSON.stringify(item));\r\n\r\n                        //para guardar las visitas generales de la institucion\r\n                        this.visitasginstitucion = res.data.length;\r\n                        localStorage.setItem(\"visitasginstitucion\", JSON.stringify(this.visitasginstitucion));\r\n\r\n                        //     //para guardar en localstorage el historico de docentes\r\n                        me.historicoDocenteArreglo = this.historicoinstitucionArreglo.filter(p => p.idgrupo == \"6\");\r\n                        //    localStorage.setItem(\"historicoDocenteArreglo\", JSON.stringify(this.historicoDocenteArreglo));\r\n\r\n                        //para guardar las visitas generales de los docentes\r\n                        this.visitasgdocente = me.historicoDocenteArreglo.length;\r\n                        localStorage.setItem(\"visitasgdocente\", JSON.stringify(this.visitasgdocente));\r\n\r\n                        //     //para guardar en localstorage el historico de estudiantes\r\n                        me.historicoEstudianteArreglo = this.historicoinstitucionArreglo.filter(p => p.idgrupo == \"4\");\r\n                        //    localStorage.setItem(\"historicoEstudianteArreglo\", JSON.stringify(this.historicoEstudianteArreglo));\r\n\r\n                        //para guardar las visitas generales de los estudiantes\r\n                        this.visitasgestudiantes = me.historicoEstudianteArreglo.length;\r\n                        localStorage.setItem(\"visitasgestudiantes\", JSON.stringify(this.visitasgestudiantes));\r\n\r\n                        me.$router.push('/reporte/institucion/');\r\n\r\n                    })\r\n                    .catch(err => {\r\n                        console.log(err)\r\n                    })\r\n            },\r\n\r\n            verMatricula(tr) {\r\n                let me = this;\r\n                localStorage.setItem('matricula_institucion', tr.idInstitucion)\r\n                localStorage.setItem('matricula_admin', \"yes\")\r\n                me.$router.push('/matricula/listado_matriculas')\r\n            },\r\n            periodos(item) {\r\n                // localStorage.institucion = JSON.stringify(item);\r\n                let me = this;\r\n                me.popupPeriodos = true;\r\n                let institucion = item;\r\n                me.tmp = institucion;\r\n                me.nombreInstitucion = me.tmp.nombreInstitucion;\r\n                me.idInstitucion = me.tmp.idInstitucion;\r\n                me.region = me.tmp.nombreregion;\r\n                me.getPeriodosInstitucion();\r\n                me.usuario = JSON.parse(localStorage.getItem('usuario'))\r\n\r\n                me.getPeriodos();\r\n                // this.$router.push('/institucion/periodosInstitucion');\r\n            },\r\n\r\n            async getSeguimiento(tr) {\r\n                let me = this;\r\n                this.$http.get(this.$server_url + 'escuelasAsesor?asesor_id=' + tr.asesor_id + '&desdeAdmin=yes' + '&institucion_id=' + tr.idInstitucion)\r\n                    .then(function (response) {\r\n                        let periodo_id = response.data[0].periodo\r\n                        let periodo_nombre = response.data[0].descripcion\r\n                        me.$router.push('/administrador/seguimiento/institucion')\r\n                        localStorage.setItem('institucion_seguimiento_asesor_id', tr.asesor_id)\r\n                        localStorage.setItem('institucion_seguimiento_id', tr.idInstitucion)\r\n                        localStorage.setItem('institucion_seguimiento_nombre', tr.nombreInstitucion)\r\n                        localStorage.setItem('institucion_seguimiento_periodo_id', periodo_id)\r\n                        localStorage.setItem('institucion_seguimiento_periodo', periodo_nombre)\r\n                        localStorage.setItem('adminSeguimiento', \"yes\")\r\n                    })\r\n                    .catch(function (error) {})\r\n            },\r\n\r\n            //===========METODOS DE PERIODO===========================\r\n\r\n            getPeriodosInstitucion() {\r\n                let me = this;\r\n                me.$vs.loading();\r\n                this.$http.get(this.$server_url + 'periodosXInstitucion/' + me.idInstitucion)\r\n                    .then(res => {\r\n                        me.listaPeriodosInstitucion = res.data;\r\n                        // console.log(res.data);\r\n                        me.$vs.loading.close();\r\n                    })\r\n                    .catch(err => {\r\n                        console.log(err);\r\n                        me.$vs.loading.close();\r\n                    })\r\n            },\r\n            getPeriodos() {\r\n                let me = this;\r\n                this.$http.get(this.$server_url + 'periodoRegion?region=' + me.region)\r\n                    .then(res => {\r\n                        me.tmplistaPeriodos = res.data;\r\n                        //capturo el periodo activo para limitar el acceso a agregar periodo\r\n                        let filtrarPeriodoAcceso = me.tmplistaPeriodos.filter(p => p.estado == '1')\r\n                        //capturo la fecha actual\r\n                        var fecha = moment().add(-1, 'days').format('YYYY/MM/DD');\r\n\r\n                        // filtro la fecha limite del periodo\r\n                        let fechafinal = filtrarPeriodoAcceso.map(p => p.fhasta_limite)\r\n                        //comparo si la fecha final ya se paso a la actual\r\n                        if (Date.parse(fechafinal) < Date.parse(fecha)) {\r\n\r\n                            me.estadoLimiteAcceso = \"0\";\r\n\r\n                        } else {\r\n                            me.estadoLimiteAcceso = \"1\";\r\n                        }\r\n\r\n                        me.filtroPeriodos();\r\n                    })\r\n                    .catch(err => {\r\n                        console.log(err);\r\n                    })\r\n            },\r\n\r\n            abrirModal() {\r\n                let me = this;\r\n                me.popupPeriodos = false;\r\n                me.modalPeriodos = true;\r\n            },\r\n            filtroPeriodos() {\r\n                let me = this;\r\n                // console.log(me.tmplistaPeriodos)\r\n                me.listaPeriodos = [];\r\n                for (let index = 0; index < me.tmplistaPeriodos.length; index++) {\r\n                    if (me.tmplistaPeriodos[index].estado == me.f_periodos) {\r\n                        me.listaPeriodos.push(me.tmplistaPeriodos[index]);\r\n                    }\r\n                }\r\n            },\r\n            verificarPeriodo(item) {\r\n                let me = this;\r\n                // console.log(item.idperiodoescolar, me.idInstitucion)\r\n                me.$vs.loading();\r\n                let data = new FormData();\r\n                data.append('idperiodoescolar', item.idperiodoescolar);\r\n                data.append('idinstitucion', me.idInstitucion)\r\n                this.$http.post(this.$server_url + 'verifica_periodo', data)\r\n                    .then(res => {\r\n                        // console.log(res.data)\r\n                        if (res.data == 1) {\r\n                            me.$vs.notify({\r\n                                time: 8000,\r\n                                text: 'Este periodo ya se encuentra asignado a la institucion ' + me.nombreInstitucion,\r\n                                color: 'danger',\r\n                                iconPack: 'feather',\r\n                                icon: 'icon-alert-triangle'\r\n                            })\r\n                        } else {\r\n                            me.$vs.notify({\r\n                                text: 'Periodo agregado correctamente a la institucion ' + me.nombreInstitucion,\r\n                                color: 'success',\r\n                                iconPack: 'feather',\r\n                                icon: 'icon-check'\r\n                            })\r\n                            me.modalPeriodos = false;\r\n                            me.getPeriodosInstitucion();\r\n                        }\r\n                        me.$vs.loading.close();\r\n                    })\r\n                    .catch(err => {\r\n                        console.log(err);\r\n                        me.$vs.loading.close();\r\n                    })\r\n            },\r\n            confirmaEliminar(item) {\r\n                let me = this;\r\n                me.id_eliminar = item.id;\r\n                // console.log(me.id_eliminar)\r\n                // return\r\n                me.popupPeriodos = false;\r\n                me.$vs.dialog({\r\n                    type: 'confirm',\r\n                    color: 'danger',\r\n                    title: 'Confirmar',\r\n                    text: 'Seguro desea eliminar este item?',\r\n                    acceptText: 'Aceptar',\r\n                    cancelText: 'Cancelar',\r\n                    accept: me.eliminarItem,\r\n                    cancel: me.close\r\n                })\r\n            },\r\n            close() {\r\n                let me = this;\r\n                me.popupPeriodos = true;\r\n                this.$vs.notify({\r\n                    color: 'danger',\r\n                    title: 'Cerrado',\r\n                    text: 'Has cerrado!'\r\n                })\r\n            },\r\n            eliminarItem() {\r\n                let me = this;\r\n                this.$http.get(this.$server_url + 'eliminarPeriodosInstitucion/' + me.id_eliminar)\r\n                    .then(res => {\r\n                        me.$vs.notify({\r\n                            text: 'Periodo de esta institución eliminado correctamente',\r\n                            color: 'success',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-check'\r\n                        })\r\n                        me.getPeriodosInstitucion();\r\n                    })\r\n                    .catch(err => {\r\n                        console.log(err);\r\n                    })\r\n            },\r\n\r\n            //===========FIN DE METODOS DE PERIODOS======================\r\n\r\n            //===========METODOS PARA EDITAR INSTITUCION ===============\r\n\r\n            async getCiudadSelect() {\r\n                let me = this;\r\n                this.$http.get(this.$server_url + \"ciudad\").then(function (response) {\r\n                    me.ciudad = response.data;\r\n                    // console.log(me.ciudad);\r\n                });\r\n            },\r\n            async getRegionSelect() {\r\n                let me = this;\r\n                this.$http.get(this.$server_url + \"region\").then(function (response) {\r\n                    me.region = response.data;\r\n                });\r\n            },\r\n            async getPeriodoSelect() {\r\n                let me = this;\r\n                this.$http.get(this.$server_url + \"periodo\").then(function (response) {\r\n                    me.periodo = response.data;\r\n                });\r\n            },\r\n            async getInstitucionEditar(idinstitucion) {\r\n                let me = this;\r\n                me.$vs.loading();\r\n                this.$http.get(this.$server_url + \"institucion/\" + idinstitucion)\r\n                    .then(function (response) {\r\n                        me.institucion = response.data;\r\n                        if (me.institucion.tipo_institucion == 1) {\r\n                            me.institucion.tipo_institucion = 'no'\r\n                        } else {\r\n                            me.institucion.tipo_institucion = 'si'\r\n                        }\r\n                        //llenar el radio matricula\r\n                        if (me.institucion.aplica_matricula == 1) {\r\n                            me.institucion.matricula = '1'\r\n                        } else {\r\n                            me.institucion.matricula = '0'\r\n                        }\r\n                        me.institucion.estado = response.data.estado_idEstado\r\n                        console.log(me.institucion)\r\n                        me.$vs.loading.close();\r\n                    })\r\n                    .catch(function (error) {\r\n                        me.$vs.loading.close();\r\n                    })\r\n            },\r\n            rechargeInstitucion(e){\r\n              let me = this;\r\n              //0 => RECARGAR ; 1 CERRAR MODAL\r\n              if(e == 0){\r\n                me.popupAddInstitucion = false;\r\n                me.getInstitucion();\r\n              }else{\r\n                me.popupAddInstitucion = false;\r\n              }\r\n            },\r\n            async getVendedor() {\r\n                let me = this;\r\n                this.$http.get(this.$server_url + 'listaAsesores')\r\n                    .then(function (response) {\r\n                        me.vendedor = response.data;\r\n                        // console.log(me.vendedor);\r\n                    })\r\n                    .catch(function (error) {})\r\n            },\r\n\r\n            //=======FIN DE METODOS PARA EDITAR INSTITUCION============\r\n\r\n            //=======METODOS PARA EL MODAL DE LISTA DE DOCENTES========\r\n            getUsuariosTipo() {\r\n                let me = this;\r\n                me.$vs.loading()\r\n                if (me.tipo == 'docente') {\r\n                    this.$http.get(this.$server_url + 'docentes?idInstitucion=' + me.institucionDocente.idInstitucion)\r\n                        .then(function (response) {\r\n                            me.usuarios = response.data\r\n                            me.$vs.loading.close()\r\n                            // console.log(me.usuarios)\r\n                        })\r\n                        .catch(function (error) {\r\n                            console.log(error)\r\n                            me.$vs.loading.close()\r\n                        })\r\n                }\r\n                if (me.tipo == 'estudiante') {\r\n                    this.$http.get(this.$server_url + 'estudiantesXInstitucion/' + me.institucionDocente.idInstitucion)\r\n                        .then(function (response) {\r\n                            me.usuarios = response.data\r\n                            me.$vs.loading.close()\r\n                            // console.log(me.usuarios)\r\n                        })\r\n                        .catch(function (error) {\r\n                            console.log(error)\r\n                            me.$vs.loading.close()\r\n                        })\r\n                }\r\n            },\r\n            getUsuariosTipoVisitas() {\r\n                let me = this;\r\n                const from = moment(me.fromDate).format('YYYY-MM-DD')\r\n                const to = moment(me.toDate).format('YYYY-MM-DD')\r\n                if (me.fromDate == null) {\r\n                    me.$vs.notify({\r\n                        text: 'Debe escoger una fecha inicio',\r\n                        color: 'warning',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check'\r\n                    })\r\n                    return false\r\n                }\r\n                if (me.toDate == null) {\r\n                    me.$vs.notify({\r\n                        text: 'Debe escoger una fecha final',\r\n                        color: 'warning',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check'\r\n                    })\r\n                    return false\r\n                }\r\n                if (me.fromDate > me.toDate) {\r\n                    me.$vs.notify({\r\n                        text: 'La fecha inicio no puede mayor que la fecha final',\r\n                        color: 'warning',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check'\r\n                    })\r\n                    return false\r\n                }\r\n                me.usuarios = []\r\n                me.$vs.loading()\r\n                this.$http.get(this.$server_url + 'docentesVisitas?idInstitucion=' + me.institucionDocente.idInstitucion + '&fromDate=' + from + '&toDate=' + to)\r\n                    .then(function (response) {\r\n                        me.usuarios = response.data\r\n                        me.$vs.loading.close()\r\n                        // console.log(me.usuarios)\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(error)\r\n                        me.$vs.loading.close()\r\n                    })\r\n            },\r\n            verVisitas(item) {\r\n                let me = this;\r\n                // console.log(item);\r\n                me.popupVistasUsuario = true;\r\n                localStorage.datoUser = JSON.stringify(item);\r\n\r\n                me.datoU = JSON.parse(localStorage.getItem('datoUser'))\r\n                me.getVisitasDocente();\r\n                // if (me.tipo == 'docente') {\r\n                //     me.$router.push('/institucion/docentes/visitas');\r\n                // }\r\n                // if (me.tipo == 'estudiante') {\r\n                //     me.$router.push('/institucion/estudiante/visitas');\r\n                // }\r\n            },\r\n            irAsignacion(item) {\r\n\r\n                let me = this;\r\n                // console.log( item )\r\n                me.popupAsignacion = true;\r\n\r\n                localStorage.setItem('user_select', (JSON.stringify(item)));\r\n                localStorage.setItem('show_inst', 'si'); //desde vista docentes, mostrar institucion\r\n\r\n                me.show_inst = (localStorage.getItem('show_inst'));\r\n                me.usuarioAsignacion = JSON.parse(localStorage.getItem('user_select'));\r\n                me.user_seleccionado = me.usuarioAsignacion.idusuario\r\n                me.user_nombre = me.usuarioAsignacion.nombres + ' ' + me.usuarioAsignacion.apellidos\r\n                me.user_email = me.usuarioAsignacion.email\r\n                me.user_institucion = JSON.parse(localStorage.getItem('institucion'))\r\n                me.getAreaSelect();\r\n                me.getSeleccionadas();\r\n\r\n                // me.$router.push('/usuarios/asignaturasInstitucion');\r\n            },\r\n\r\n            //=======FIN DEL METODOS PARA EL MODAL DE LISTA DE DOCENTES\r\n            //=======METODOS PARA MODAL DE ASIGNACION DE LIBROS\r\n            getSeleccionadas() {\r\n                let me = this;\r\n                me.$vs.loading();\r\n                let data = new FormData();\r\n                data.append('idusuario', me.user_seleccionado)\r\n                this.$http.post(this.$server_url + \"asignaturasDocent\", data)\r\n                    .then(res => {\r\n                        // console.log(res.data);\r\n                        me.seleccionadas = res.data;\r\n                        // me.popupDocentes = true;\r\n                        me.$vs.loading.close();\r\n                    });\r\n            },\r\n            getAreaSelect() {\r\n                let me = this;\r\n                me.$vs.loading();\r\n                this.$http.get(this.$server_url + \"areaSelect\").then(function (response) {\r\n                    me.area = response.data.items;\r\n                    // console.log(me.area);\r\n                    me.$vs.loading.close();\r\n                });\r\n            },\r\n\r\n            agregaAsignacion(item) {\r\n                let me = this;\r\n                let data = new FormData();\r\n                data.append('usuario_idusuario', me.user_seleccionado)\r\n                data.append('asignatura_idasignatura', item.id)\r\n                this.$http.post(this.$server_url + \"asignar_asignatura_docentes\", data)\r\n                    .then(function (res) {\r\n                        // console.log(res.data);\r\n                        if (res.data > 0) {\r\n                            me.$vs.notify({\r\n                                time: 7000,\r\n                                text: 'Esta asignatura ya se encuentra asignada al docente',\r\n                                color: 'danger',\r\n                                iconPack: 'feather',\r\n                                icon: 'icon-alert-triangle'\r\n                            })\r\n                        } else {\r\n                            me.$vs.notify({\r\n                                text: 'Asignatura agregada',\r\n                                color: 'success',\r\n                                iconPack: 'feather',\r\n                                icon: 'icon-check'\r\n                            })\r\n                            me.getSeleccionadas();\r\n                        }\r\n                        me.$vs.loading.close();\r\n                    });\r\n            },\r\n            eliminaAsignacion(item) {\r\n                let me = this;\r\n                // console.log(item)\r\n                me.$vs.loading();\r\n                this.$http.get(this.$server_url + \"eliminaAsignacion/\" + item.idasignado)\r\n                    .then(function (res) {\r\n                        // console.log(res.data);\r\n                        me.$vs.notify({\r\n                            text: item.nombreasignatura + ' eliminada',\r\n                            color: 'success',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-check'\r\n                        })\r\n                        me.getSeleccionadas();\r\n                        me.$vs.loading.close();\r\n                    });\r\n            },\r\n            moverPeriodoActual(){\r\n              let me = this\r\n              console.log(\"user_seleccionado\",me.user_seleccionado)\r\n              console.log(\"periodo\",me.institucionSelected.periodo_id)\r\n              this.$http.get(this.$server_url+'moverAsignaturasPeriodo/'+me.user_seleccionado+'/'+me.institucionSelected.periodo_id)\r\n                .then(function (res) {\r\n                  me.$vs.notify({\r\n                  text:'Se cambio correctamente',\r\n                  color:'success',\r\n                  iconPack: 'feather',\r\n                  icon:'icon-check'})\r\n                  me.getSeleccionadas();\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                })\r\n            },\r\n            confirmaQuitar() {\r\n                let me = this;\r\n                me.popupAsignacion = false\r\n                me.$vs.dialog({\r\n                    type: 'confirm',\r\n                    color: 'danger',\r\n                    title: 'Confirmar',\r\n                    text: '¿Está seguro de eliminar este contenido?',\r\n                    acceptText: 'Aceptar',\r\n                    cancelText: 'Cancelar',\r\n                    accept: me.f_quitarTodo,\r\n                    cancel: me.f_regresar\r\n                })\r\n            },\r\n            f_regresar() {\r\n                let me = this\r\n                me.popupAsignacion = true\r\n            },\r\n            f_quitarTodo() {\r\n                let me = this;\r\n                let idSelects = [];\r\n                for (let index = 0; index < me.seleccionadas.length; index++) {\r\n                    idSelects.push(me.seleccionadas[index].idasignado)\r\n                }\r\n                // console.log(idSelects)\r\n                me.$vs.loading();\r\n                let data = new FormData();\r\n                data.append('idasiguser', idSelects)\r\n                this.$http.post(this.$server_url + \"quitaTodasAsignaturas\", data)\r\n                    .then(function (res) {\r\n                        // console.log(res.data);\r\n                        me.$vs.notify({\r\n                            text: 'Asignaturas quitadas correctamente.',\r\n                            color: 'success',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-check'\r\n                        })\r\n                        me.getSeleccionadas();\r\n                        me.$vs.loading.close();\r\n                    });\r\n            },\r\n\r\n            //=======FIN DE METODOS PARA MODAL DE ASIGNACION DE LIBROS\r\n\r\n            //METODOS PARA MODAL VISITAS DE USUARIO\r\n            getVisitasDocente() {\r\n                let me = this;\r\n                axios.get('https://foro.prolipadigital.com.ec/estudiantes?idusuario=' + me.datoU.idusuario + '&_sort=updatedAt:DESC')\r\n                    .then(res => {\r\n                        me.listaVisitas = res.data;\r\n                        // console.log(me.listaVisitas)\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(' no se conecto a consultar las visitas ')\r\n                    })\r\n            },\r\n\r\n            //======FIN DE MODAL PARA VISITAS DE USUARIO\r\n\r\n            //====PARA EXPORTAR A EXCEL LOS DOCENTES CON LAS VISITAS======\r\n            exportToExcel() {\r\n                let headerTitle = ['nombres', 'apellidos', 'email', 'usuario', 'cedula', 'visitas', 'Fecha creacion'];\r\n                let headerVal = ['nombres', 'apellidos', 'email', 'name_usuario', 'cedula', 'visitas', 'created_at'];\r\n                let codigoSelectedMayus = this.codigoSelected\r\n                for (var i = 0; i < codigoSelectedMayus.length; i++) {\r\n                    for (var key in codigoSelectedMayus[i]) {\r\n                        if (typeof codigoSelectedMayus[i][key] == \"string\") {\r\n                            codigoSelectedMayus[i][key] = codigoSelectedMayus[i][key].toUpperCase();\r\n                        }\r\n                    }\r\n                }\r\n                import('@/vendor/Export2Excel').then(excel => {\r\n                    const list = codigoSelectedMayus\r\n                    const data = this.formatJson(headerVal, list)\r\n                    excel.export_json_to_excel({\r\n                        header: headerTitle,\r\n                        data,\r\n                        filename: this.fileName,\r\n                        autoWidth: this.cellAutoWidth,\r\n                        bookType: this.selectedFormat\r\n                    })\r\n                    this.clearFields()\r\n                    this.guardarActivo = '';\r\n                    this.generarActivo = ' ';\r\n                    this.textAlertCant = '';\r\n                    this.cantidad = '';\r\n                    this.codigoSelected = [];\r\n                })\r\n            },\r\n            formatJson(filterVal, jsonData) {\r\n                return jsonData.map(v => filterVal.map(j => {\r\n                    return v[j]\r\n                }))\r\n            },\r\n            clearFields() {\r\n                this.fileName = ''\r\n                this.cellAutoWidth = true\r\n                this.selectedFormat = 'xls'\r\n            },\r\n            openLoadingColor(libro) {\r\n                this.$vs.loading({\r\n                    color: '#1A76F2'\r\n                })\r\n\r\n            },\r\n            //generar enlace para el estudiante pueda ingresar los codigos\r\n            generateEnlaceEstudiante(tr) {\r\n                let me = this;\r\n                let host = location.protocol + '//' + location.hostname + ':' + location.port + '/formulario/diagnostico/'\r\n                //let host = location.protocol + '//' + location.hostname +':'+ location.port + '/formulario/diagnostico/'+ tr.idInstitucion +'/'\r\n                if (tr.statusPeriodo == 0) {\r\n                    me.$vs.notify({\r\n                        text: 'La institución tiene período inactivo no se puede generar el enlace',\r\n                        color: 'warning',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check',\r\n                        time: 6000,\r\n                    })\r\n                    return\r\n                }\r\n                let formData = new FormData();\r\n                me.$vs.loading()\r\n                formData.append('institucion_id', tr.idInstitucion)\r\n                formData.append('periodo_id', tr.periodo_id)\r\n                formData.append('link', host)\r\n                this.$http.post(this.$server_url + 'GenerarEnlaceDiagnostico', formData)\r\n                    .then(function (res) {\r\n                        me.$vs.loading.close()\r\n                        me.copiarLink(res.data[0])\r\n                    })\r\n                    .catch(function (error) {\r\n                        me.$vs.loading.close()\r\n                    })\r\n            },\r\n            VerCoincidencias(tr) {\r\n                let me = this;\r\n                var resultado = \"\"\r\n                me.busquedaMilton = \"\"\r\n                me.arregloCoincidencias = []\r\n                me.arregloIdsCoincidencias = []\r\n                me.institucionCiudad = tr.ciudad\r\n                me.institucionEnviar = tr.idInstitucion\r\n                me.institucionNombreEnviar = tr.nombreInstitucion\r\n                me.institucionEnviarCedula = tr.vendedorInstitucion\r\n                me.institucionEnviarAIniciales = tr.iniciales\r\n                const texto = tr.nombreInstitucion;\r\n                // Convertimos la cadena en un arreglo de palabras\r\n                const palabras = texto.split(\" \");\r\n                if (palabras.length > 3) {\r\n                    // Obtenemos las últimas 3 palabras del arreglo\r\n                    const ultimasTres = palabras.slice(-3);\r\n                    // Unimos las últimas 3 palabras en una sola cadena\r\n                    resultado = ultimasTres.join(\" \");\r\n                } else {\r\n                    resultado = tr.nombreInstitucion\r\n                }\r\n                //enviar ids coincidencias al arreglo\r\n                if (tr.codigo_mitlon_coincidencias == \"null\" || tr.codigo_mitlon_coincidencias == null || tr.codigo_mitlon_coincidencias == \"\") {} else {\r\n                    let transforWords = tr.codigo_mitlon_coincidencias\r\n                    me.arregloIdsCoincidencias = transforWords.split(\",\")\r\n                }\r\n                me.buscarCoincidencias(resultado)\r\n            },\r\n            buscarCoincidencias(coincidencia) {\r\n                let me = this;\r\n                me.arregloCoincidencias = []\r\n                me.$vs.loading();\r\n                this.$http.get(this.$server_url + 'buscarCoincidenciaInstitucionMilton?coincidencia=' + coincidencia)\r\n                    .then(function (res) {\r\n                        me.$vs.loading.close()\r\n                        if (res.data.status == 0) {\r\n                            me.$vs.notify({\r\n                                text: res.data.message,\r\n                                color: 'primary',\r\n                                iconPack: 'feather',\r\n                                icon: 'icon-check'\r\n                            })\r\n                        }\r\n                        me.arregloCoincidencias = res.data\r\n                        me.popupCoincidencia = true\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(error + ' error');\r\n                        me.$vs.loading.close()\r\n                    })\r\n            },\r\n            AsignarCodigoMilton(tr) {\r\n                let me = this;\r\n                let resolve = me.arregloIdsCoincidencias.filter(p => p == tr.ID_INSTITUCION)\r\n                if (resolve.length == 0) {\r\n                    me.arregloIdsCoincidencias.push(tr.ID_INSTITUCION)\r\n                }\r\n            },\r\n            guadarIdsMilton() {\r\n                let me = this\r\n                if (me.arregloIdsCoincidencias.length == 0) {\r\n                    me.$vs.notify({\r\n                        text: 'Debe seleccionar al menos un id',\r\n                        color: 'warning',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check'\r\n                    })\r\n                    return\r\n                }\r\n                let valorPrimario = me.arregloIdsCoincidencias[0]\r\n                let enviarIds = me.arregloIdsCoincidencias.join(',')\r\n                let formData = new FormData();\r\n                formData.append('valorPrimario', valorPrimario)\r\n                formData.append('codigosM', enviarIds)\r\n                formData.append('institucion_id', me.institucionEnviar)\r\n                formData.append('cedulaAsesor', me.institucionEnviarCedula)\r\n                formData.append('cedulaAsesorIniciales', me.institucionEnviarAIniciales)\r\n                me.$vs.loading();\r\n                this.$http.post(this.$server_url + 'guadarIdsMilton', formData)\r\n                    .then(function (res) {\r\n                        me.$vs.loading.close()\r\n                        me.$vs.notify({\r\n                            text: 'Se actualizo correctamente',\r\n                            color: 'primary',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-check'\r\n                        })\r\n                        me.getInstitucion()\r\n                        me.popupCoincidencia = false\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(error + ' error');\r\n                        me.$vs.loading.close()\r\n                    })\r\n            },\r\n            eliminaAsignacionIdMilton(value) {\r\n                let me = this;\r\n                me.arregloIdsCoincidencias.splice(value, 1);\r\n            },\r\n            copiarLink(tr) {\r\n                let me = this;\r\n                let ruta = tr.link\r\n                var aux = document.createElement(\"input\");\r\n                aux.setAttribute(\"value\", ruta);\r\n                document.body.appendChild(aux);\r\n                aux.select();\r\n                try {\r\n                    var status = document.execCommand('copy');\r\n                    if (!status) {\r\n                        me.$vs.notify({\r\n                            text: 'Error al copiar el link',\r\n                            color: 'warning',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-alert-triangle'\r\n                        })\r\n                    } else {\r\n                        me.$vs.notify({\r\n                            text: 'Link copiado',\r\n                            color: 'success',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-check'\r\n                        })\r\n                    }\r\n                } catch (err) {\r\n                    console.log('No se pudo copiar');\r\n                }\r\n                document.body.removeChild(aux);\r\n            },\r\n            //METODOS REGISTRO DE DOCENTES\r\n            registroDocentes(tr){\r\n                let me = this\r\n                if(tr.statusPeriodo == 0){\r\n                    me.$vs.notify({\r\n                        text: 'La institución tiene periodo inactivo, solicite la activación a Soporte',\r\n                        color: 'danger',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check',\r\n                        time:6000\r\n                    })\r\n                    return\r\n                }\r\n                me.popupAsignacionDocentes = true;\r\n            },\r\n            //FIN METODOS REGISTRO DE DOCENTES\r\n            //IMPRIMIR CODIGOS ESTUDIANTES\r\n            imprimirCodigosEstudiante(tr){\r\n                let me = this;\r\n                var datos = tr.periodo_id + '*' + tr.idInstitucion;\r\n                me.$vs.loading()\r\n                this.$http.get(this.$server_url + 'getEstudianteCodigos/'+datos)\r\n                    .then(function (response) {\r\n                        me.$vs.loading.close()\r\n                        if(response.data.length == 0){\r\n                            me.$vs.notify({\r\n                                text: 'No hay códigos registrados en esta institución',\r\n                                color: 'danger',\r\n                                time:6000,\r\n                                position:'center',\r\n                                iconPack: 'feather',\r\n                                icon: 'icon-check'\r\n                            })\r\n                            return\r\n                        }\r\n                        me.arregloCodigosEstudiantes = response.data;\r\n                        me.exportToExcelCodigos()\r\n                    })\r\n                    .catch(function (error) {   me.$vs.loading.close()})\r\n            },\r\n            getEvaluacionesInstitucion(){\r\n                let me = this\r\n                me.$vs.loading()\r\n                const { idInstitucion, periodo_id } = me.institucionSelected\r\n                this.$http.get(this.$server_url + `getEvaluacionesInstitucion/${idInstitucion}/${periodo_id}/`)\r\n                    .then(function (response) {\r\n                        me.$vs.loading.close()\r\n                        me.arrayEvaluacionesInstitucion = response.data\r\n                        me.popupEvaluaciones            = true\r\n                    })\r\n                    .catch(function (error) {   me.$vs.loading.close()})\r\n            },\r\n            changeEvaluacion(e){\r\n                let me = this\r\n                me.popupEvaluaciones = false\r\n            },\r\n            //METODOS PARA DETALE DE VENTA\r\n            getTipoVenta(tr) {\r\n                let me = this;\r\n                me.pedido.nombreInstitucion = tr.nombreInstitucion\r\n                me.pedido.idInstitucion     = tr.idInstitucion\r\n                me.pedido.periodo           = tr.periodo\r\n                me.pedido.periodo_id        = tr.periodo_id\r\n                me.tituloDetalleVenta       = 'Detalle de venta de ' + me.pedido.nombreInstitucion\r\n                me.popupTipoVenta           = true;\r\n            },\r\n            //FIN METODOS PARA DETALLE DE VENTA\r\n            //METODOS PARA ACTIVAR AL ULTIMO PERIODO\r\n            getPeriodosActivar(){\r\n              let me = this\r\n              me.$vs.loading()\r\n              me.periodoSelect = []\r\n              this.$http.get(this.$server_url+'get_periodos_pedidos')\r\n              .then(res => {\r\n                me.$vs.loading.close()\r\n                let datos = res.data\r\n                if(datos.length == 0 ){\r\n                  me.$vs.notify({\r\n                  text:'No existe períodos para activar Comuniquese con soporte',\r\n                  color:'warning',\r\n                  iconPack: 'feather',\r\n                  icon:'icon-check',\r\n                  time:5000,\r\n                  })\r\n                  return\r\n                }\r\n                //obtener el perido activo de la region para activar a la escuela en ese periodo\r\n                if(datos.length > 0){\r\n                  me.periodoSelect = datos.filter(p => p.cambiar_periodo == 1 && p.region_idregion == me.sendInstitucion.region)\r\n                  //si no existe el periodo activo para la region para poder cambiar\r\n                  if( me.periodoSelect.length == 0 ){\r\n                    me.$vs.notify({\r\n                    text:'No existe un período configurado para activar Comuniquese con soporte',\r\n                    color:'warning',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check',\r\n                    time:5000,\r\n                    })\r\n                    return\r\n                  }\r\n                  //si existe mas de un periodo activo para la region\r\n                  if( me.periodoSelect.length > 1 ){\r\n                    me.$vs.notify({\r\n                    text:'Existe más de un período configurado para activar Comuniquese con soporte',\r\n                    color:'warning',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check',\r\n                    time:5000,\r\n                    })\r\n                    return\r\n                  }\r\n                  me.popupActualizarPeriodo = true;\r\n                }\r\n              })\r\n              .catch(function (error) {\r\n                me.$vs.loading.close();\r\n              })\r\n            },\r\n            changePeriodo() {\r\n              let me = this;\r\n              me.$vs.loading();\r\n              let data = new FormData();\r\n              data.append('idperiodoescolar', me.periodoSelect[0].idperiodoescolar);\r\n              data.append('idinstitucion',    me.sendInstitucion.idInstitucion)\r\n              this.$http.post(this.$server_url + 'verifica_periodo', data)\r\n                .then(res => {\r\n                  me.$vs.loading.close();\r\n                  if (res.data == 1) {\r\n                    me.$vs.notify({\r\n                      time: 8000,\r\n                      text: 'Este periodo ya se encuentra asignado a la institucion ' + me.sendInstitucion.nombreInstitucion,\r\n                      color: 'danger',\r\n                      iconPack: 'feather',\r\n                      icon: 'icon-alert-triangle'\r\n                    })\r\n                  } else {\r\n                    me.$vs.notify({\r\n                      text: 'Periodo agregado correctamente a la institucion ' + me.sendInstitucion.labnombreInstitucionel,\r\n                      color: 'success',\r\n                      iconPack: 'feather',\r\n                      icon: 'icon-check'\r\n                    })\r\n                  }\r\n                  me.getInstitucion()\r\n                  me.sendInstitucion            = {}\r\n                  me.popupActualizarPeriodo     = false;\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                    me.$vs.loading.close();\r\n                })\r\n            },\r\n            //FIN METODOS PARA ACTIVAR AL ULTIMO PERIODO\r\n             //METODOS PARA EXCEL\r\n            //para limipiar los campos del excel\r\n            //metodo par descargar el excel\r\n            exportToExcelCodigos() {\r\n                let headerTitle = ['Código','Estudiante','Libro'];\r\n                let headerVal = ['codigo', 'estudiante','nombrelibro'];\r\n                let codigoSelectedMayus = this.arregloCodigosEstudiantes\r\n                for (var i = 0; i < codigoSelectedMayus.length; i++) {\r\n                    for (var key in codigoSelectedMayus[i]) {\r\n                        if (typeof codigoSelectedMayus[i][key] == \"string\") {\r\n                            codigoSelectedMayus[i][key] = codigoSelectedMayus[i][key].toUpperCase();\r\n                        }\r\n                    }\r\n                }\r\n                import('@/vendor/Export2Excel').then(excel => {\r\n                    const list = codigoSelectedMayus\r\n                    const data = this.formatJson(headerVal, list)\r\n                    var nombrefile = \"\"\r\n                    if(this.openModal == 1){\r\n                        nombrefile = this.fileName\r\n                    }else{\r\n                        nombrefile = \"Reporte_de_codigo_de_estudiantes\"\r\n                    }\r\n                    excel.export_json_to_excel({\r\n                        header: headerTitle,\r\n                        data,\r\n                        filename: nombrefile,\r\n                        autoWidth: this.cellAutoWidth,\r\n                        bookType: this.selectedFormat\r\n                    })\r\n                    this.clearFields()\r\n                    this.guardarActivo = '';\r\n                    this.generarActivo = ' ';\r\n                    this.textAlertCant = '';\r\n                    this.cantidad = '';\r\n                })\r\n            },\r\n        },\r\n    }\r\n    ",{"version":3,"sources":["instituciones.vue"],"names":[],"mappings":";AA+gfile":"instituciones.vue","sourceRoot":"src/views/institucion","sourcesContent":["<template>\r\n    <div>\r\n        <vx-card>\r\n          <div v-if=\"verPermisosExternos == 0\">\r\n            <vs-tabs>\r\n              <vs-tab label=\"Mis Instituciones\" v-if=\"usuario.id_group == 11\">\r\n                <escuelasAsesorVue />\r\n              </vs-tab>\r\n              <vs-tab label=\"Instituciones Prolipa\">\r\n                  <div class=\"con-tab-ejemplo\">\r\n                      <br>\r\n                      <div style=\"display:flex;flex-wrap:wrap;\">\r\n                          <div style=\"width:65%;display:flex;\">\r\n                              <div style=\"width:80%;\">\r\n                                  <vs-input icon=\"search\" style=\"width:100%;\" placeholder=\"Search\" @keyup.enter=\"getInstitucion()\" v-model=\"busquedaInstitucion\" />\r\n                              </div>\r\n                              <div style=\"width:20%;margin-left:10px;\">\r\n                                  <vs-button radius color=\"warning\" @click=\"getInstitucion()\" type=\"filled\" icon=\"search\"></vs-button>\r\n                              </div>\r\n                          </div>\r\n                          <div style=\"width:20%;\">\r\n                              <vs-button v-if=\"user_autorizado == 1\" color=\"primary\" type=\"border\" @click=\"institucion_id = 0; popupAddInstitucion = true;\" icon-pack=\"feather\" icon=\"icon-plus\">Agregar</vs-button>\r\n                          </div>\r\n                      </div>\r\n                      <br>\r\n                      <vs-table stripe max-items=\"50\" search pagination :data=\"instituciones\">\r\n                          <template slot=\"header\">\r\n                              <div class=\"vx-row\">\r\n                                  <div class=\"vx-col w-full m-3\">\r\n                                      Cantidad: {{instituciones.length}}\r\n                                  </div>\r\n                              </div>\r\n                          </template>\r\n                          <template slot=\"thead\">\r\n                              <vs-th sort-key=\"idInstitucion\">#</vs-th>\r\n                              <vs-th sort-key=\"nombreInstitucion\">Institución (asesores)</vs-th>\r\n                              <vs-th sort-key=\"nombre\">Localidad</vs-th>\r\n                              <vs-th sort-key=\"nombre\">Periodo</vs-th>\r\n                              <vs-th sort-key=\"visitas\">Cod. facturación</vs-th>\r\n                              <vs-th>Acciones</vs-th>\r\n                          </template>\r\n                          <template slot-scope=\"{data}\">\r\n                              <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                                  <vs-td :data=\"data[indextr].idInstitucion \">\r\n                                      {{data[indextr].idInstitucion }}\r\n                                  </vs-td>\r\n                                  <vs-td :data=\"data[indextr].nombreInstitucion\">\r\n                                      {{data[indextr].nombreInstitucion}}<br>\r\n                                      <div v-if=\"data[indextr].nombre_asesor == null &&  data[indextr].apellido_asesor == null\">\r\n                                          <small> <i style=\"color:red;\">No existe asesor </i></small><br>\r\n                                      </div>\r\n                                      <div v-else>\r\n                                          <small> <i>{{data[indextr].nombre_asesor}} {{data[indextr].apellido_asesor}} </i></small><br>\r\n                                      </div>\r\n                                      <small>{{data[indextr].fecha_registro}} </small><br>\r\n                                      <vs-chip v-if=\"tr.estadoInstitucion == 1\" color=\"success\">{{ tr.estado }}</vs-chip>\r\n                                      <vs-chip v-else>{{ tr.estado }}</vs-chip>\r\n                                  </vs-td>\r\n                                  <vs-td :data=\"data[indextr].nombreregion\">\r\n                                      {{data[indextr].nombreregion}} <br>\r\n                                      <small>{{data[indextr].ciudad}}</small>\r\n                                  </vs-td>\r\n                                  <vs-td :data=\"data[indextr].periodo\">\r\n                                      {{data[indextr].periodo}} <br>\r\n                                      <small v-if=\"tr.statusPeriodo == 1\" class=\"text-success font-bold\">{{tr.estadoPeriodo}}</small>\r\n                                      <small v-else>{{tr.estadoPeriodo}}</small>\r\n                                  </vs-td>\r\n                                  <vs-td>\r\n                                      <p> {{ tr.codigo_institucion_milton }} </p>\r\n                                      <small class=\"text-warning\" v-if=\"tr.codigo_institucion_milton == 22507\">Hay que cambiar</small>\r\n                                  </vs-td>\r\n                                  <vs-td :data=\"tr.idInstitucion\">\r\n                                      <vs-dropdown vs-custom-content vs-trigger-click>\r\n                                          <vs-button type=\"relief\" class=\"a-icon\">\r\n                                              Opciones\r\n                                              <vs-icon class=\"\" icon=\"expand_more\"></vs-icon>\r\n                                          </vs-button>\r\n                                          <vs-dropdown-menu class=\"loginx\">\r\n                                              <vs-dropdown-item v-if=\"usuario.id_group =='1' || usuario.id_group =='11' \" style=\"width:200px\" @click=\"irFormularioDocente(tr)\">\r\n                                                  <span class=\"feather icon icon-link\"></span> <small class=\"text-success ml-1\" style=\"font-size:13px;\">Solicitudes de libros</small>\r\n                                              </vs-dropdown-item>\r\n                                              <vs-dropdown-item v-if=\"permisoRoot || usuario.id_group == '11' \" style=\"width:200px\" @click=\"sendInstitucion = tr;getPeriodosActivar();\">\r\n                                                <span class=\"feather icon icon-link\"></span> <small class=\"text-primary ml-1\" style=\"font-size:13px;\">Activar a período actual</small>\r\n                                              </vs-dropdown-item>\r\n                                              <vs-dropdown-item v-if=\"permisoRoot == true\" style=\"width:200px\" @click=\"periodos(tr)\">\r\n                                                  <span class=\"feather icon icon-crop\"></span> Ver periodos\r\n                                              </vs-dropdown-item>\r\n                                              <vs-dropdown-item style=\"width:200px\" @click=\"getTipoVenta(tr)\">\r\n                                                  <span class=\"feather icon icon-shopping-cart\"></span> Ver detalle de venta\r\n                                              </vs-dropdown-item>\r\n                                              <vs-dropdown-item style=\"width:200px\" @click=\"institucion_id = tr.idInstitucion;popupAddInstitucion = true;\">\r\n                                                  <span class=\"feather icon icon-edit\"></span> Editar\r\n                                              </vs-dropdown-item>\r\n                                              <vs-dropdown-item v-if=\"permisoRoot == true\" style=\"width:200px\" @click=\"agregarLibro(tr.idInstitucion)\">\r\n                                                  <span class=\"feather icon icon-gift\"></span> Asignar libros gratis\r\n                                              </vs-dropdown-item>\r\n                                              <vs-dropdown-item v-if=\"permisoRoot == true\" style=\"width:200px\" @click=\"agregarLibrerias(tr.idInstitucion)\">\r\n                                                  <span class=\"feather icon icon-home\"></span> Asignar  librerias\r\n                                              </vs-dropdown-item>\r\n                                              <vs-dropdown-item style=\"width:200px\" @click=\"institucionSelected=tr;verDocentes(tr)\">\r\n                                                  <span class=\"feather icon icon-users\"></span> Lista de docentes\r\n                                              </vs-dropdown-item>\r\n                                              <vs-dropdown-item style=\"width:200px\" @click=\"verEstudiantes(tr)\">\r\n                                                  <span class=\"feather icon icon-user\"></span> Lista de Estudiantes\r\n                                              </vs-dropdown-item>\r\n                                              <vs-dropdown-item style=\"width:200px\" @click=\"verDocentesVisitas(tr)\">\r\n                                                  <span class=\"feather icon icon-filter\"></span> Visitas de docentes\r\n                                              </vs-dropdown-item>\r\n                                              <vs-dropdown-item v-if=\"permisoRoot == true\" style=\"width:200px\" @click=\"confirmEliminarInstitucion(tr)\">\r\n                                                  <span class=\"feather icon icon-trash\"></span> Eliminar institucion\r\n                                              </vs-dropdown-item>\r\n                                              <vs-dropdown-item v-if=\"(usuario.idusuario == '35748' || usuario.idusuario == '5103' || usuario.idusuario == '4853' && tr.aplica_matricula == 1 )\" style=\"width:200px\" @click=\"verMatricula(tr)\">\r\n                                                  <span class=\"feather icon icon-bookmark\"></span> Estado matricula\r\n                                              </vs-dropdown-item>\r\n                                              <vs-dropdown-item style=\"width:200px\" @click=\"generateEnlaceEstudiante(tr)\">\r\n                                                  <span class=\"feather icon icon-link\"></span> Enlace estudiantes\r\n                                              </vs-dropdown-item>\r\n                                              <vs-dropdown-item style=\"width:200px\" @click=\"sendInstitucion=tr;registroDocentes(tr)\">\r\n                                                  <span class=\"feather icon icon-user\"></span> Registro de docentes\r\n                                              </vs-dropdown-item>\r\n                                              <vs-dropdown-item style=\"width:200px\" @click=\"imprimirCodigosEstudiante(tr)\">\r\n                                                  <span class=\"feather icon icon-user\"></span>Exportar Códigos de estudiantes\r\n                                              </vs-dropdown-item>\r\n                                              <vs-dropdown-item v-if=\"permisoRoot && tr.cantidad_cambio_ventana_evaluacion > 0 \" style=\"width:200px\" @click=\"institucionSelected=tr;getEvaluacionesInstitucion(tr)\">\r\n                                                  <span class=\"feather icon icon-user\"></span>Reiniciar Evaluaciones\r\n                                              </vs-dropdown-item>\r\n                                              <!-- <vs-dropdown-item v-if=\"usuario.id_group =='1'\" style=\"width:200px\" @click=\"agregarPermisosExternos(tr)\">\r\n                                                  <span class=\"feather icon icon-layout\"></span> Recursos externos\r\n                                              </vs-dropdown-item> -->\r\n                                              <!-- <vs-dropdown-item v-if=\"permisoRoot == true\" style=\"width:200px\" @click=\"VerCoincidencias(tr)\">\r\n                                                  <span class=\"feather icon icon-link\"></span> Coincidencias de codigos de miltoN\r\n                                              </vs-dropdown-item> -->\r\n                                          </vs-dropdown-menu>\r\n                                      </vs-dropdown>\r\n                                  </vs-td>\r\n                              </vs-tr>\r\n                          </template>\r\n                      </vs-table>\r\n                  </div>\r\n              </vs-tab>\r\n              <vs-tab label=\"Instituciones Facturación\" v-if=\"permisoRoot\">\r\n                  <institucionfacturacion/>\r\n              </vs-tab>\r\n              <vs-tab label=\"Periodos\" v-if=\"permisoRoot\">\r\n                  <div class=\"con-tab-ejemplo\">\r\n                      <Periodos></Periodos>\r\n                  </div>\r\n              </vs-tab>\r\n              <vs-tab label=\"Instituciones por ciudades\">\r\n                <InstitucionesXCiudad />\r\n              </vs-tab>\r\n              <vs-tab label=\"Ciudades\" v-if=\"permisoRoot\">\r\n                  <Ciudades_vue />\r\n              </vs-tab>\r\n              <vs-tab label=\"Zonas\" v-if=\"permisoRoot\">\r\n                  <Zonas_vue />\r\n              </vs-tab>\r\n              <vs-tab label=\"Contratos Facturacion\" v-if=\"permisoRoot\">\r\n                <listadoContratoMiltonVue />\r\n              </vs-tab>\r\n              <vs-tab label=\"Periodos bodega\" v-if=\"permisoRoot\">\r\n                <Periodo_config_institucion/>\r\n              </vs-tab>\r\n            </vs-tabs>\r\n          </div>\r\n          <div v-if=\"verPermisosExternos == 2\">\r\n              <vs-button size=\"small\" color=\"warning\" @click=\"verPermisosExternos = 0;\" type=\"filled\" icon=\"reply\">Volver a instituciones</vs-button>\r\n              <GenerarFormulario class=\"mt-3\" :formularioInstitucion=\"formulario.institucion\" :formularioNombreInstitucion=\"formulario.nombreInstitucion\" :formularioPeriodo=\"formulario.periodoDescripcion\" :formularioPeriodo_id=\"formulario.periodo_id\" />\r\n          </div>\r\n        </vx-card>\r\n        <!-- =====MODALES=======-->\r\n        <!--Modal para periodos-->\r\n        <vs-popup class=\"holamundo\" fullscreen title=\"Periodos de la institucion\" :active.sync=\"popupPeriodos\">\r\n            <vx-card>\r\n                <h4>\r\n                    {{nombreInstitucion}}\r\n                </h4>\r\n                <!-- <vs-button  v-if=\"estadoLimiteAcceso =='1' || usuario.id_group== '1'\"  type=\"border\" color=\"success\" class=\"m-2\" @click=\"abrirModal();\">Agregar periodo</vs-button> -->\r\n                <vs-button v-if=\"permisoRoot == true\" type=\"border\" color=\"success\" class=\"m-2\" @click=\"abrirModal();\">\r\n                    Agregar periodo\r\n                </vs-button>\r\n                <vs-table max-items=\"20\" search pagination :data=\"listaPeriodosInstitucion\" class=\"mt-4\">\r\n                    <template slot=\"header\">\r\n                        <div>\r\n                            Cantidad: {{listaPeriodosInstitucion.length}}\r\n                        </div>\r\n                    </template>\r\n                    <template slot=\"thead\">\r\n                        <vs-th width=\"40%\">Periodo escolar</vs-th>\r\n                        <vs-th>Región</vs-th>\r\n                        <vs-th>Estado</vs-th>\r\n                        <vs-th>Actualizado</vs-th>\r\n                        <vs-th>Acciones</vs-th>\r\n                    </template>\r\n                    <template slot-scope=\"{data}\">\r\n                        <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                            <vs-td :data=\"tr.periodoescolar\">\r\n                                {{tr.periodoescolar}} <br>\r\n                                <small> {{tr.descripcion}} </small>\r\n                            </vs-td>\r\n                            <vs-td>\r\n                                <vs-chip> {{tr.nombreregion}}</vs-chip>\r\n                            </vs-td>\r\n                            <vs-td>\r\n                                <vs-chip v-if=\"tr.estado == 1\" color=\"success\"> Activo</vs-chip>\r\n                                <vs-chip v-if=\"tr.estado == 0\" color=\"danger\"> Inactivo</vs-chip>\r\n                            </vs-td>\r\n                            <vs-td>\r\n                                {{tr.updated_at}}\r\n                            </vs-td>\r\n                            <vs-td>\r\n                                <vx-tooltip text=\"eliminar periodo de esta institución\" position=\"top\" color=\"danger\" v-if=\"usuario.id_group== '1' \">\r\n                                    <vs-button type=\"border\" color=\"danger\" class=\"m-2\" icon-pack=\"feather\" icon=\"icon-trash\" @click=\"confirmaEliminar(tr);\"></vs-button>\r\n                                </vx-tooltip>\r\n                            </vs-td>\r\n                        </vs-tr>\r\n                    </template>\r\n                </vs-table>\r\n            </vx-card>\r\n        </vs-popup>\r\n        <vs-popup title=\"Periodos\" fullscreen :active.sync=\"modalPeriodos\">\r\n            <vs-table max-items=\"10\" search pagination :data=\"listaPeriodos\">\r\n                <template slot=\"header\">\r\n                    <vs-radio class=\"mb-3 m-2\" color=\"success\" v-model=\"f_periodos\" @change=\"filtroPeriodos\" vs-value=\"1\">Activos</vs-radio>\r\n                    <vs-radio class=\"mb-3 m-2\" color=\"danger\" v-model=\"f_periodos\" @change=\"filtroPeriodos\" vs-value=\"0\">Inactivos</vs-radio>\r\n                </template>\r\n                <template slot=\"thead\">\r\n                    <vs-th>Periodo escolar</vs-th>\r\n                    <vs-th>Fechas</vs-th>\r\n                    <vs-th>Region</vs-th>\r\n                    <vs-th>Estado</vs-th>\r\n                    <vs-th>Acciones</vs-th>\r\n                </template>\r\n                <template slot-scope=\"{data}\">\r\n                    <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                        <vs-td :data=\"tr.periodoescolar\">\r\n                            {{tr.periodoescolar}} <br>\r\n                            <small>{{tr.descripcion}}</small>\r\n                        </vs-td>\r\n                        <vs-td>\r\n                            <small>Inicio: {{tr.fecha_inicial}} </small><br>\r\n                            <small>Fin: {{tr.fecha_final}}</small>\r\n                        </vs-td>\r\n                        <vs-td>\r\n                            <vs-chip v-if=\"tr.region_idregion == 1\"> SIERRA</vs-chip>\r\n                            <vs-chip v-if=\"tr.region_idregion == 2\"> COSTA</vs-chip>\r\n                        </vs-td>\r\n                        <vs-td>\r\n                            <vs-chip v-if=\"tr.estado == 1\" color=\"success\"> Activo</vs-chip>\r\n                            <vs-chip v-if=\"tr.estado == 0\" color=\"danger\"> Inactivo</vs-chip>\r\n                        </vs-td>\r\n                        <vs-td>\r\n                            <vs-button type=\"filled\" size=\"small\" color=\"success\" class=\"m-2\" icon-pack=\"feather\" icon=\"icon-plus\" @click=\"verificarPeriodo(tr);\">Agregar</vs-button>\r\n\r\n                        </vs-td>\r\n                    </vs-tr>\r\n                </template>\r\n            </vs-table>\r\n        </vs-popup>\r\n        <!--FIN DE MODALES DE PERIODOS -->\r\n        <!--Modal para Editar Institucion-->\r\n        <vs-popup title=\"Mantenimiento Institución\" fullscreen :active.sync=\"popupAddInstitucion\">\r\n          <addInstitucionVue v-if=\"popupAddInstitucion\" :id=\"institucion_id\" @rechargeInstitucion=\"rechargeInstitucion\"/>\r\n        </vs-popup>\r\n        <!--FIN de modal para editar institucion -->\r\n        <!-- Modal para lista de docentes -->\r\n        <vs-popup title=\"Lista usuarios\" fullscreen :active.sync=\"popupDocentes\">\r\n            <vx-card>\r\n                <label>Institución : </label>\r\n                <h4> {{institucionDocente.nombreInstitucion}} </h4>\r\n                <div v-if=\"usuarios.length>0\">\r\n                    <vs-table multiple v-model=\"codigoSelected\" pagination max-items=\"25\" search :data=\"usuarios\">\r\n                        <template slot=\"header\">\r\n                            <vs-button color=\"warning\" size=\"small\" class=\"mr-5\" style=\"font-size: 14px;\" @click=\"activePrompt=true;popupDocentes=false;\">Exportar</vs-button>\r\n                            <div> Cantidad de usuarios: &nbsp; <b>{{ usuarios.length }}</b> </div>\r\n                            <vs-row v-if=\"visitasD == true\">\r\n                                <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"4\">\r\n                                    <flat-pickr :config=\"configdateTimePicker\" v-model=\"fromDate\" placeholder=\"Fecha Inicio\" class=\"m-1\" style=\"display: inline-block;width: 100%;\" />\r\n                                </vs-col>\r\n                                <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"4\">\r\n                                    <flat-pickr :config=\"configdateTimePicker\" v-model=\"toDate\" placeholder=\"Fecha Fin\" class=\"m-1\" style=\"display: inline-block;width: 100%\" />\r\n                                </vs-col>\r\n                                <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"1\">\r\n\r\n                                    <vs-button radius @click=\"getUsuariosTipoVisitas()\" color=\"success\" type=\"gradient\" icon=\"search\"></vs-button>\r\n                                </vs-col>\r\n\r\n                            </vs-row>\r\n                        </template>\r\n                        <template slot=\"thead\">\r\n                            <vs-th sort-key=\"cedula\">Cédula</vs-th>\r\n                            <vs-th sort-key=\"nombres\">Nombre</vs-th>\r\n                            <vs-th sort-key=\"nombres\">Visitas</vs-th>\r\n                            <vs-th sort-key=\"email\">Usuario</vs-th>\r\n                            <vs-th>Acciones</vs-th>\r\n                        </template>\r\n                        <template slot-scope=\"{data}\">\r\n                            <vs-tr :data=\"tr\" :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                                <vs-td :data=\"data[indextr].cedula\">\r\n                                    idusuario: {{ data[indextr].idusuario }}<br />\r\n                                    cedula: {{ data[indextr].cedula }}\r\n                                </vs-td>\r\n                                <vs-td :data=\"data[indextr].nombres\">\r\n                                    {{ data[indextr].nombres }}\r\n                                    {{ data[indextr].apellidos }}\r\n                                </vs-td>\r\n                                <vs-td :data=\"data[indextr].visitas\">\r\n                                    {{ data[indextr].visitas }}\r\n                                </vs-td>\r\n                                <vs-td :data=\"data[indextr].name_usuario\">\r\n                                    <span v-if=\"tipo== 'docente'\"><b><small>usuario:</small></b> {{data[indextr].name_usuario}}<br></span>\r\n                                    <b><small>email: </small></b> {{data[indextr].email}} <br />\r\n                                    <b><small>cargo: </small></b> {{data[indextr].cargo}}<br>\r\n                                    <b><small>Fecha de creacion</small>{{ tr.created_at }}</b>\r\n                                </vs-td>\r\n                                <vs-td>\r\n                                    <vx-tooltip v-if=\"perfil_autorizado == 1 || perfil_autorizado == 11\" style=\"display: inline-block;\" text=\"Asignar libros\" position=\"top\" color=\"success\">\r\n                                        <span v-if=\"tipo== 'docente' \">\r\n                                            <vs-button size=\"small\" icon-pack=\"feather\" icon=\"icon-zap\" class=\"mr-2\" color=\"success\" @click=\"popupDocentes=false;irAsignacion(tr);\"></vs-button>\r\n                                        </span>\r\n                                    </vx-tooltip>\r\n                                    <vx-tooltip style=\"display: inline-block;\" text=\"Visitas del usuario\" position=\"top\" color=\"primary\">\r\n                                        <vs-button size=\"small\" icon-pack=\"feather\" icon=\"icon-globe\" class=\"mr-2\" color=\"primary\" @click=\"popupDocentes=false;verVisitas(tr)\"></vs-button>\r\n                                    </vx-tooltip>\r\n                                </vs-td>\r\n                            </vs-tr>\r\n                        </template>\r\n                    </vs-table>\r\n                </div>\r\n                <div v-else class=\"m-4 p-5\">\r\n                    No hay usuarios registrados en esta institución.\r\n                </div>\r\n\r\n            </vx-card>\r\n        </vs-popup>\r\n        <!-- Modal para Asignacion de libros al docente-->\r\n        <vs-popup title=\"Asignación\" fullscreen :active.sync=\"popupAsignacion\">\r\n            <vx-card>\r\n                <vs-button icon=\"home\" class=\"close btn\" style=\"width:210px;\" @click=\"closeBtn($event)\">Regresar al listado</vs-button>\r\n                <br />\r\n                <div class=\"m-2\">\r\n                    <vs-list>\r\n                        <vs-list-item v-if=\"show_inst== 'si'\" title=\"Institución\" :subtitle=\"user_institucion.nombreInstitucion\"></vs-list-item>\r\n                        <vs-list-item v-if=\"institucionSelected.periodo_id > 0\" title=\"Período\" :subtitle=\"institucionSelected.periodo\">\r\n                          <vs-chip v-if=\"institucionSelected.statusPeriodo == '1'\" color=\"success\">Activo</vs-chip>\r\n                          <vs-chip v-else color=\"danger\">Desactivado</vs-chip>\r\n                       </vs-list-item>\r\n                        <vs-list-item title=\"Nombre\" :subtitle=\"user_nombre\"></vs-list-item>\r\n                        <vs-list-item title=\"Email\" :subtitle=\"user_email\"></vs-list-item>\r\n                    </vs-list>\r\n                    <vs-divider color=\"success\">Areas seleccionadas ( {{seleccionadas.length}} ) </vs-divider>\r\n                    <vs-collapse>\r\n                        <vs-collapse-item icon-pack=\"feather\" icon-arrow=\"icon-arrow-down\">\r\n                            <div slot=\"header\">\r\n                                Ver ( {{seleccionadas.length}} )\r\n                            </div>\r\n                            <div class=\"vx-row\">\r\n                                <div class=\"vx-col sm:w-full text-right\" v-if=\"seleccionadas.length >1\">\r\n                                    <vs-button type=\"border\" color=\"danger\" size=\"small\" @click=\"confirmaQuitar()\">Quitar todas <span class=\"feather icon icon-trash\"></span></vs-button>\r\n                                    <vs-button type=\"filled\" color=\"primary\" size=\"small\" @click=\"moverPeriodoActual()\" class=\"ml-2\">Mover a período actual<span class=\"feather icon icon-check\"></span></vs-button>\r\n                                </div>\r\n                                <div class=\"vx-col sm:w-full mt-2\">\r\n                                  <div v-for=\"(item, index) in seleccionadas\" :key=\"index\" class=\"m-1 p-1 asig-select text-dark\">\r\n                                    {{item.nombreasignatura}} ( {{ item.periodoescolar }} )&nbsp; &nbsp;\r\n                                      <vs-button @click=\"eliminaAsignacion(item)\" style=\"display:inline\" size=\"small\" color=\"danger\" radius type=\"border\" icon-pack=\"feather\" icon=\"icon-trash\"></vs-button>\r\n                                  </div>\r\n                                </div>\r\n                            </div>\r\n                        </vs-collapse-item>\r\n                    </vs-collapse>\r\n                </div>\r\n                <div class=\"m-2\">\r\n                    <vs-divider color=primary> Areas ( {{area.length}} ) </vs-divider>\r\n                    <vs-collapse>\r\n                        <vs-collapse-item icon-pack=\"feather\" icon-arrow=\"icon-arrow-down\" v-for=\"(listItem, index) in area\" :key=\"index\" :title=\"listItem.name\">\r\n                            <div slot=\"header\">\r\n                                {{listItem.name}}\r\n                            </div>\r\n                            <vs-button v-for=\"(listIAsig, indexAsig) in listItem.children\" :key=\"indexAsig\" type=\"border\" color=\"primary\" class=\"p-2 m-1\" @click=\"agregaAsignacion(listIAsig)\">\r\n                                {{listIAsig.name}}\r\n                            </vs-button>\r\n                        </vs-collapse-item>\r\n                    </vs-collapse>\r\n                </div>\r\n            </vx-card>\r\n        </vs-popup>\r\n        <!--Modal para visitas del usuario -->\r\n        <vs-popup title=\"Lista usuarios\" fullscreen :active.sync=\"popupVistasUsuario\">\r\n            <vx-card>\r\n                <vs-button icon=\"home\" class=\"close btn\" @click=\"closeBtn($event)\">Regresar al listado</vs-button>\r\n                <br>\r\n                <p><b>Nombre:</b> {{datoU.nombres}} {{datoU.apellidos}} </p>\r\n                <p><b>Email:</b> {{datoU.email}} </p>\r\n                <p><b>Cédula:</b> {{datoU.cedula}} </p>\r\n                <div v-if=\"listaVisitas.length>0\">\r\n                    <vs-table max-items=\"30\" search pagination :data=\"listaVisitas\">\r\n                        <template slot=\"header\">\r\n                            Ultimas visitas &nbsp; <small> <i>(max. 100): </i></small> &nbsp; {{listaVisitas.length}}\r\n                        </template>\r\n                        <template slot=\"thead\">\r\n                            <vs-th sort-key=\"cedula\">Fecha</vs-th>\r\n                            <vs-th sort-key=\"nombres\">Hora</vs-th>\r\n                        </template>\r\n                        <template slot-scope=\"{data}\">\r\n                            <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                                <vs-td>\r\n                                    {{data[indextr].fecha}}\r\n                                </vs-td>\r\n                                <vs-td>\r\n                                    {{data[indextr].hora}}\r\n                                </vs-td>\r\n                            </vs-tr>\r\n                        </template>\r\n                    </vs-table>\r\n                </div>\r\n                <div v-else>\r\n                    <p class=\"p-5\"> No tenemos registros de este usuario en nuestra base de datos, regrese mas tardecito :) </p>\r\n                </div>\r\n            </vx-card>\r\n\r\n        </vs-popup>\r\n        <!--Modales-->\r\n        <!----modal exportar--------->\r\n        <vs-prompt title=\"Exportar a Excel\" class=\"export-options\" @cancle=\"clearFields\" @accept=\"exportToExcel\" accept-text=\"Exportar\" @close=\"clearFields\" :active.sync=\"activePrompt\">\r\n            <vs-button radius color=\"warning\" @click=\"popupDocentes = true\" type=\"gradient\" icon=\"reply\"></vs-button>\r\n            <vs-alert class=\"mb-3\" color=\"danger\" icon-pack=\"feather\" icon=\"icon-info\">\r\n                <span>Recuerde <b>seleccionar</b> los códigos que desea exportar.</span>\r\n            </vs-alert>\r\n            <vs-input v-model=\"fileName\" placeholder=\"Ingrese el nombre del archivo\" class=\"w-full\" />\r\n            <v-select v-model=\"selectedFormat\" :options=\"formats\" class=\"my-4\" />\r\n            <div class=\"flex\">\r\n                <!--<span class=\"mr-4\">Cell Auto Width:</span>\r\n                <vs-switch v-model=\"cellAutoWidth\">Cell Auto Width</vs-switch>-->\r\n            </div>\r\n        </vs-prompt>\r\n        <!--MODAL PARA REGISTRO DE DOCENTE LIBROS-->\r\n        <vs-popup title=\"Asignacion\" fullscreen :active.sync=\"popupAsignacionDocentes\">\r\n            <RegistroDocentesVue :sendInstitucion=\"sendInstitucion\" v-if=\"popupAsignacionDocentes\"/>\r\n        </vs-popup>\r\n        <!--MODAL DETALLE DE VENTA-->\r\n        <vs-popup :title=\"tituloDetalleVenta\" fullscreen :active.sync=\"popupTipoVenta\">\r\n            <RegistroVentaVue :pedido=\"pedido\" v-if=\"popupTipoVenta\" showAgrupado=\"1\"/>\r\n        </vs-popup>\r\n        <!----fin modal exportar--------->\r\n        <!----modal mostrar coincidencias--------->\r\n        <!-- <vs-popup classContent=\"popup-example\" fullscreen :title=\"'Asignar codigo de institucion milton '+institucionNombreEnviar + ' - ' +institucionCiudad \" :active.sync=\"popupCoincidencia\">\r\n            <vx-input-group class=\"mb-base\">\r\n                <template slot=\"prepend\">\r\n                    <div class=\"prepend-text bg-primary\">\r\n                        <span>Busqueda manual</span>\r\n                    </div>\r\n                </template>\r\n                <vs-input v-model=\"busquedaMilton\" @keyup.enter=\"buscarCoincidencias(busquedaMilton)\" placeholder=\"Escriba si no encontro la institucion\" />\r\n            </vx-input-group>\r\n            <p>>>El primer codigo es el principal que se va a ir a la bd de milton</p>\r\n            <vs-divider>Codigo de instituciones de milton</vs-divider>\r\n            <div class=\"vx-col sm:w-full mt-2\">\r\n                <div v-for=\"(item, index) in arregloIdsCoincidencias\" :key=\"index\" class=\"m-1 p-1 asig-select text-dark\">\r\n                    {{item}} &nbsp; &nbsp;\r\n                    <vs-button @click=\"eliminaAsignacionIdMilton(index)\" style=\"display:inline\" size=\"small\" color=\"danger\" radius type=\"border\" icon-pack=\"feather\" icon=\"icon-trash\"></vs-button>\r\n                </div>\r\n            </div>\r\n            <div class=\"flex\" style=\"justify-content: center;\">\r\n                <vs-button color=\"success\" icon=\"save\" @click=\"guadarIdsMilton()\" type=\"filled\" class=\"mt-2\">Guardar</vs-button>\r\n            </div>\r\n            <vs-table max-items=\"10\" search pagination :data=\"arregloCoincidencias\">\r\n                <template slot=\"header\">\r\n                    <vs-chip color=\"primary\">Cantidad: {{ arregloCoincidencias.length }}</vs-chip>\r\n                </template>\r\n                <template slot=\"thead\">\r\n                    <vs-th>Nombre institucion</vs-th>\r\n                    <vs-th>Codigo institucion de milton</vs-th>\r\n                    <vs-th>Codigo CLI_INS_CODIGO</vs-th>\r\n                    <vs-th style=\"width:100px;\">Acciones</vs-th>\r\n                </template>\r\n                <template slot-scope=\"{data}\">\r\n                    <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                        <vs-td>\r\n                            INSTITUCION:\r\n                            <b>{{data[indextr].INSTITUCION}}</b><br>\r\n                            Periodo:\r\n                            <b>{{ tr.PERIODO }}</b><br>\r\n                            Ciudad:\r\n                            <b>{{ tr.INS_CIUDAD }}</b><br>\r\n                            Direccion:\r\n                            <b>{{ tr.INS_DIRECCION }}</b><br>\r\n                            Vendedor:\r\n                            <b>{{ tr.VENDEDOR }}</b>\r\n                        </vs-td>\r\n                        <vs-td>\r\n                            {{data[indextr].ID_INSTITUCION}}<br>\r\n                        </vs-td>\r\n                        <vs-td>{{ tr.CLI_INS_CODIGO }}</vs-td>\r\n                        <vs-td>\r\n                            <div style=\"display: flex;\">\r\n                                <div>\r\n                                    <vx-tooltip style=\"display: inline-block;\" text=\"Editar area\" position=\"top\" color=\"primary\">\r\n                                        <vs-button class=\"modal-default-button\" size=\"small\" color=\"success\" @click=\"AsignarCodigoMilton(tr)\" type=\"filled\" icon-pack=\"feather\" icon=\"icon-edit\"> Asignar codigo</vs-button>\r\n                                    </vx-tooltip> &nbsp;\r\n                                </div>\r\n                            </div>\r\n                        </vs-td>\r\n                    </vs-tr>\r\n                </template>\r\n            </vs-table>\r\n        </vs-popup> -->\r\n        <!----Fin modal mostrar coincidencias--------->\r\n        <!--MODAL PARA CAMBIAR DE PERIODO-->\r\n        <vs-popup classContent=\"popup-example\" title=\"Actualizar a periodo actual\" :active.sync=\"popupActualizarPeriodo\">\r\n          <vx-card v-if=\"popupActualizarPeriodo\">\r\n            <p><b>Insitución:</b>       {{ sendInstitucion.nombreInstitucion }}  </p>\r\n            <p class=\"font-bold text-2xl text-warning mt-2\">Estas seguro de cambiar al periodo {{ periodoSelect[0].periodoescolar }}?</p>\r\n            <div class=\"flex justify-center mt-2\">\r\n              <vs-button class=\"mr-3 mb-2\" @click=\"changePeriodo()\">Si, deseo cambiar</vs-button>\r\n              <vs-button color=\"warning\" type=\"border\" class=\"mb-2\" @click=\"popupActualizarPeriodo = false;\">Cancelar</vs-button>\r\n            </div>\r\n          </vx-card>\r\n        </vs-popup>\r\n        <!--modal de evaluaciones institucion resetar-->\r\n        <vs-popup classContent=\"popup-example\" title=\"Resetar Evaluaciones Instituciones\" :active.sync=\"popupEvaluaciones\">\r\n            <ResetearEvaluacionesVue v-if=\"popupEvaluaciones\" @changeEvaluacion=\"changeEvaluacion\" :institucionSelected=\"institucionSelected\" :arrayEvaluacionesInstitucion=\"arrayEvaluacionesInstitucion\"/>\r\n        </vs-popup>\r\n\r\n    </div>\r\n    </template>\r\n\r\n    <script>\r\n    import Vue from 'vue'\r\n    import axios from 'axios'\r\n    import DataViewSidebar from './nuevo'\r\n    import Periodos from '../periodos/periodos.vue'\r\n    import vSelect from 'vue-select'\r\n    import escuelasAsesorVue from '../home/components/asesor/escuelasAsesor.vue'\r\n    import listadoContratoMiltonVue from './components/listadoContratoMilton.vue'\r\n    import asignarLibrosVue from './components/asignarLibros.vue'\r\n    import moment from 'moment'\r\n    import flatPickr from 'vue-flatpickr-component'\r\n    import asignarRecursosExternosVue from './components/asignarRecursosExternos.vue'\r\n    import GenerarFormulario from '../home/docentes/formulario/listadoSolicitudes.vue'\r\n    import MenuEncuesta from '../home/padres/encuesta/MenuEncuesta.vue'\r\n    import 'flatpickr/dist/flatpickr.css'\r\n    import InstitucionesXCiudad from './institucionesXCiudad.vue'\r\n    import Ciudades_vue from '../ciudades/listaCiudad.vue'\r\n    import Zonas_vue from '../zonas/listaZona.vue'\r\n    import Periodo_config_institucion from '../periodos/periodo_config_institucion.vue'\r\n    import RegistroDocentesVue from './components/RegistroDocentes.vue'\r\n    import institucionfacturacion from '../pedidos/facturacion_api/institucion.vue';\r\n    import addInstitucionVue from './addInstitucion.vue'\r\n    import RegistroVentaVue from '../codigos/components/utils/RevisionVenta.vue'\r\n    const ResetearEvaluacionesVue = () => import('./components/EvaluacionesInstituciones/ResetearEvaluaciones.vue')\r\n    export default {\r\n        components: {\r\n        DataViewSidebar,\r\n        Periodos,\r\n        \"v-select\": vSelect,\r\n        escuelasAsesorVue,\r\n        asignarLibrosVue,\r\n        flatPickr,\r\n        asignarRecursosExternosVue,\r\n        GenerarFormulario,\r\n        MenuEncuesta,\r\n        listadoContratoMiltonVue,\r\n        InstitucionesXCiudad,\r\n        Ciudades_vue,\r\n        Zonas_vue,\r\n        Periodo_config_institucion,\r\n        RegistroDocentesVue,\r\n        institucionfacturacion,\r\n        addInstitucionVue,\r\n        RegistroVentaVue,\r\n        ResetearEvaluacionesVue,\r\n    },\r\n        data() {\r\n            return {\r\n              institucion_id:0,\r\n              configdateTimePicker: {\r\n                  enableTime: true,\r\n                  dateFormat: 'Y-m-d'\r\n              },\r\n              user_institucion_send: '',\r\n              //variables para exportar a excel\r\n              activePrompt: false,\r\n              reportesActivo: 0,\r\n              fileName: null,\r\n              formats: ['xls', 'xlsx', 'csv', 'txt'],\r\n              cellAutoWidth: true,\r\n              selectedFormat: 'xls',\r\n              reporteAsesorActivo: false,\r\n              guardarActivo: '',\r\n              generarActivo: '',\r\n              textAlertCant: '',\r\n              cantidad: '',\r\n              codigoSelected: [],\r\n              codigoTipo: '0',\r\n              //FIN DE VARIABLES PARA EXPORTAR A EXCEL\r\n              escuelas: [],\r\n              popupVistasUsuario: false,\r\n              popupAsignacion: false,\r\n              popupDocentes: false,\r\n              popupAddInstitucion: false,\r\n              popupPeriodos: false,\r\n              busquedaInstitucion: \"\",\r\n              instituciones: [],\r\n              tmpInstituciones: [],\r\n              sidebarData: {},\r\n              addNewDataSidebar: false,\r\n              usuario: [],\r\n              grupo_usuario: '',\r\n              //para el total visitas de institucion\r\n              visitasginstitucion: '',\r\n              //para el total visitas de docentes\r\n              visitasgdocente: '',\r\n              //para el total visitas de estudiantes\r\n              visitasgestudiantes: '',\r\n              //para  llenar el historico por institucion\r\n              historicoinstitucionArreglo: [],\r\n              //para  llenar el historico para docentes\r\n              historicoDocenteArreglo: [],\r\n              //para llenar el historico de para estudiantes\r\n              historicoEstudianteArreglo: [],\r\n              //para guardar el nombre de la institucion en el localstorage\r\n              visitasnombreinstitucion: '',\r\n              user_autorizado: '',\r\n              c_region: 'SIERRA',\r\n              //=========VARIABLES PARA PERIODOS==============\r\n              nombreInstitucion: '',\r\n              idInstitucion: '',\r\n              listaPeriodos: '',\r\n              tmplistaPeriodos: '',\r\n              listaPeriodosInstitucion: '',\r\n              tmp: '',\r\n              f_periodos: 1,\r\n              modalPeriodos: false,\r\n              id_eliminar: '',\r\n              region: [],\r\n              usuario: [],\r\n              estadoLimiteAcceso: \"0\",\r\n              fecha: null,\r\n              //=========VARIABLES PARA EDITAR INSTITUCION=======\r\n              institucion: {\r\n                  'idInstitucion': '',\r\n                  'nombreInstitucion': '',\r\n                  'telefonoInstitucion': '',\r\n                  'direccionInstitucion': '',\r\n                  'solicitudInstitucion': '',\r\n                  'vendedorInstitucion': '',\r\n                  'periodoescolar': '',\r\n                  'tipo_institucion': '',\r\n                  'ciudad_id': '',\r\n                  'region_idregion': '',\r\n                  'estado': '1',\r\n                  'matricula': '1',\r\n                  'punto_venta': 0,\r\n              },\r\n              errors: {\r\n                  'nombreInstitucion': '',\r\n                  'telefonoInstitucion': '',\r\n                  'direccionInstitucion': '',\r\n                  'solicitudInstitucion': '',\r\n                  'vendedorInstitucion': '',\r\n                  'periodoescolar': '',\r\n                  'tipo_institucion': '',\r\n                  'ciudad_id': '',\r\n                  'region_idregion': '',\r\n              },\r\n              titulo: '',\r\n              ciudad: [],\r\n              region: [],\r\n              periodo: [],\r\n              vendedor: [],\r\n              usuario: '',\r\n              limiteMegas: 1,\r\n              porcentaje: '',\r\n              pesoArchivo: '',\r\n              muyPesado: '',\r\n              msj: '',\r\n              //===========VARIABLE PARA MODAL DE LISTA DE DOCENTES=========\r\n              usuarios: [],\r\n              accesosDocentes: [],\r\n              conteoDocentes: [{\r\n                  'idusuario': '',\r\n                  'cantidad': 0\r\n              }],\r\n              accesosEstudiantes: [],\r\n              institucionDocente: '',\r\n              tipo: '',\r\n              conteo: 0,\r\n              usuario: '',\r\n              perfil_autorizado: '',\r\n              //===========VARIABLES PARA MODAL DE ASIGNACION DE LIBROS========\r\n              area: [],\r\n              asignaturadocenteselect: [],\r\n              seleccionadas: '',\r\n              usuarioAsignacion: '',\r\n              user_seleccionado: '',\r\n              user_nombre: '',\r\n              user_email: '',\r\n              user_institucion: '',\r\n              show_inst: '',\r\n              //===========VARIABLES PARA EL MODAL DE VISTAS DE USUARIO=========\r\n              docente: '',\r\n              listaVisitas: [],\r\n              datoU: '',\r\n              //para el modal para agregar permisos\r\n              update: false,\r\n              asignatura_id: 0,\r\n              colegio_asignatura_id: 0,\r\n              permisoRoot: false,\r\n              attachments: [],\r\n              form: new FormData,\r\n              numeroIteM: '0',\r\n              instituciones: [],\r\n              errorImage: '',\r\n              tamanioError: '',\r\n              archivoName: '',\r\n              file: '',\r\n              id: 0,\r\n              fromDate: null,\r\n              toDate: null,\r\n              visitasD: false,\r\n              //variables permisos externos\r\n              verPermisosExternos: 0,\r\n              permisosInstitucion: '',\r\n              permisosNombreInstitucion: '',\r\n              //fin variables permisos externos\r\n              value1: '',\r\n              value2: '',\r\n              valid: {\r\n                  email: false,\r\n                  password: false,\r\n              },\r\n              //formulario docente\r\n              formulario: {\r\n                  institucion: '0',\r\n                  periodo_id: 0,\r\n                  periodoDescripcion: '',\r\n                  nombreInstitucion: '',\r\n              },\r\n              //COINCIDENCIAS\r\n              arregloCoincidencias: [],\r\n              arregloIdsCoincidencias: [],\r\n              popupCoincidencia: false,\r\n              institucionEnviar: 0,\r\n              institucionEnviarCedula: 0,\r\n              institucionEnviarAIniciales: '',\r\n              institucionNombreEnviar: '',\r\n              institucionCiudad: '',\r\n              busquedaMilton: '',\r\n              //FIN COINCIDENCIAS\r\n              //variables registro de docentes\r\n              sendInstitucion:{},\r\n              popupAsignacionDocentes:false,\r\n              //fin variables registro de docentes\r\n              arregloCodigosEstudiantes:[],\r\n              //Variables detalle de venta\r\n              popupTipoVenta:false,\r\n              pedido:{},\r\n              tituloDetalleVenta:'',\r\n              //Fin Variables detalle de venta\r\n              //variables para asignar el periodo actual\r\n              popupActualizarPeriodo:false,\r\n              periodoSelect:[],\r\n              //fin variables para asignar el periodo actual,\r\n              institucionSelected:0,\r\n              //variables para evaluaciones institucion\r\n              arrayEvaluacionesInstitucion:[],\r\n               popupEvaluaciones:false,\r\n              //fin variables para evaluaciones institucion\r\n            }\r\n        },\r\n        mounted() {\r\n            let me = this;\r\n            localStorage.removeItem('institucion')\r\n            localStorage.removeItem('tipoUser')\r\n            me.usuario = JSON.parse(localStorage.getItem('usuario'))\r\n            me.user_autorizado = me.usuario.id_group;\r\n            me.getUserRoot();\r\n            const date = new Date()\r\n            const primerDia = new Date(date.getFullYear(), date.getMonth(), 1)\r\n            const ultimoDia = new Date(date.getFullYear(), date.getMonth() + 1, 0)\r\n            me.fromDate = primerDia\r\n            me.toDate = ultimoDia\r\n        },\r\n        methods: {\r\n            //para ir al formulario docente\r\n            irFormularioDocente(tr) {\r\n                let me = this;\r\n                localStorage.setItem('formulario', 'institucion')\r\n                me.formulario.institucion = tr.idInstitucion;\r\n                me.formulario.nombreInstitucion = tr.nombreInstitucion\r\n                me.formulario.periodoDescripcion = tr.periodo\r\n                me.formulario.periodo_id = tr.periodo_id\r\n                me.verPermisosExternos = 2;\r\n            },\r\n            irGestionEncuestas(tr) {\r\n                let me = this;\r\n                localStorage.setItem('formulario', 'institucion')\r\n                me.formulario.institucion = tr.idInstitucion;\r\n                me.formulario.nombreInstitucion = tr.nombreInstitucion\r\n                me.formulario.periodoDescripcion = tr.periodo\r\n                me.formulario.periodo_id = tr.periodo_id\r\n                me.verPermisosExternos = 3;\r\n            },\r\n            fieldChange(e) {\r\n                let me = this;\r\n                me.errorImage = 'no'\r\n                me.tamanioError = \"no\"\r\n                this.attachments = [];\r\n                let selectedFiles = e.target.files;\r\n                let validar = e.target.files[0].type;\r\n                let tamanio = e.target.files[0].size;\r\n                if (tamanio > 1000000) {\r\n                    me.tamanioError = \"yes\"\r\n                    me.$vs.notify({\r\n                        text: 'El tamaño de la imagen excede 1MB',\r\n                        color: 'warning',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check'\r\n                    })\r\n                    return false;\r\n                }\r\n                if (validar == 'image/png' || validar == 'image/jpg' || validar == 'image/jpeg') {\r\n                    me.file = e.target.files[0]\r\n                    for (let i = 0; i < selectedFiles.length; i++) {\r\n                        this.attachments.push(selectedFiles[i]);\r\n                        localStorage.setItem('nameArchivo', this.attachments[0].name)\r\n                        me.archivoName = localStorage.getItem(\"nameArchivo\")\r\n                    }\r\n                    me.errorImage = 'no'\r\n                } else {\r\n                    me.errorImage = 'yes'\r\n                    me.$vs.notify({\r\n                        text: 'Formato de imagen no aceptada solo se acepta png/jpg/jpeg',\r\n                        color: 'success',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check'\r\n                    })\r\n                    return false;\r\n                }\r\n            },\r\n            //para obtener el listado de los usuarios root\r\n            getUserRoot() {\r\n                let me = this;\r\n                this.$http.get(this.$server_url + 'permisos?permiso=yes&usuario_id=' + me.usuario.idusuario)\r\n                    .then(function (res) {\r\n                        if (res.data.status == '1') {\r\n                            me.permisoRoot = true\r\n                        } else {\r\n                            me.permisoRoot = false\r\n                        }\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(error + ' error');\r\n                    })\r\n            },\r\n            //PERMISOS EXTERNOS\r\n            agregarPermisosExternos(data) {\r\n                let me = this;\r\n                me.verPermisosExternos = 1\r\n                me.permisosInstitucion = data.idInstitucion\r\n                me.permisosNombreInstitucion = data.nombreInstitucion\r\n                return false\r\n            },\r\n            //FIN PERMISOS EXTERNOS\r\n            closeBtn(event) {\r\n                this.popupAsignacion = false;\r\n                this.popupDocentes = true;\r\n            },\r\n\r\n            //para ir asignar recursos externos a prolipa\r\n            irAddRecursosExternos(data = {}) {\r\n                let me = this;\r\n                localStorage.setItem('institucionExterna', data.idInstitucion)\r\n                localStorage.setItem('ciudadExterna', data.ciudad)\r\n                me.$router.push('/recursos/asignaturas');\r\n            },\r\n            addNewData() {\r\n                this.sidebarData = {}\r\n                this.toggleDataSidebar(true)\r\n            },\r\n            toggleDataSidebar(val = false) {\r\n                this.addNewDataSidebar = val\r\n            },\r\n            getInstitucion() {\r\n                let me = this;\r\n                me.instituciones = [];\r\n                if (me.busquedaInstitucion.length < 5) {\r\n                    me.$vs.notify({\r\n                        text: 'Minimo 5 caracteres de busqueda',\r\n                        color: 'warning',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check'\r\n                    })\r\n                    return false;\r\n                }\r\n                me.$vs.loading()\r\n                this.$http.get(this.$server_url + 'listaInsitucion?busqueda=' + me.busquedaInstitucion)\r\n                    .then(function (res) {\r\n                        // me.tmpInstituciones = res.data;\r\n                        me.instituciones = res.data;\r\n                        // me.filtroRegion();\r\n                        me.$vs.loading.close()\r\n                        if (res.data.message) {\r\n                            me.$vs.notify({\r\n                                text: res.data.message,\r\n                                color: 'success',\r\n                                iconPack: 'feather',\r\n                                icon: 'icon-user'\r\n                            })\r\n                        }\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(error + ' error');\r\n                        me.$vs.loading.close()\r\n                    })\r\n            },\r\n            getPeriodoInstitucion(id) {\r\n                let me = this;\r\n                this.$http.get(this.$server_url + 'institucionTraerPeriodo?institucion_id=' + id)\r\n                    .then(function (res) {\r\n\r\n                        localStorage.setItem('free_periodo_id', res.data[0].periodo)\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(error + ' error');\r\n                    })\r\n            },\r\n            agregarLibro(id) {\r\n                localStorage.idinstitucion = id;\r\n                this.getPeriodoInstitucion(id)\r\n                this.$router.push('/institucion/addlibro');\r\n            },\r\n\r\n            agregarLibrerias(id) {\r\n                localStorage.idinstitucion = id;\r\n                this.$router.push('/institucion/librerias');\r\n            },\r\n            verDocentes(item) {\r\n                let me = this;\r\n                me.usuarios = []\r\n                me.popupDocentes = true;\r\n                me.visitasD = false\r\n                // console.log( item.idInstitucion )\r\n                localStorage.institucion = JSON.stringify(item);\r\n                localStorage.tipoUser = \"docente\";\r\n                // me.$router.push('/institucion/docentes');\r\n\r\n                localStorage.removeItem('datoUser')\r\n                localStorage.removeItem('user_select')\r\n                localStorage.removeItem('show_inst')\r\n                me.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n                me.institucionDocente = JSON.parse(localStorage.getItem('institucion'))\r\n                me.tipo = localStorage.getItem('tipoUser');\r\n                me.perfil_autorizado = me.usuario.id_group;\r\n\r\n                me.getUsuariosTipo();\r\n            },\r\n            verDocentesVisitas(item) {\r\n                let me = this;\r\n                me.usuarios = []\r\n                me.visitasD = true\r\n                me.popupDocentes = true;\r\n                // console.log( item.idInstitucion )\r\n                localStorage.institucion = JSON.stringify(item);\r\n                localStorage.tipoUser = \"docente\";\r\n                // me.$router.push('/institucion/docentes');\r\n\r\n                localStorage.removeItem('datoUser')\r\n                localStorage.removeItem('user_select')\r\n                localStorage.removeItem('show_inst')\r\n                me.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n                me.institucionDocente = JSON.parse(localStorage.getItem('institucion'))\r\n                me.tipo = localStorage.getItem('tipoUser');\r\n                me.perfil_autorizado = me.usuario.id_group;\r\n\r\n                me.getUsuariosTipoVisitas();\r\n            },\r\n            confirmEliminarInstitucion(tr) {\r\n                let me = this;\r\n                me.id = tr.idInstitucion\r\n                this.$vs.dialog({\r\n                    type: 'confirm',\r\n                    color: 'danger',\r\n                    title: `Confirmar`,\r\n                    text: 'Estas seguro de eliminar la institución',\r\n                    accept: this.eliminarInstitucion\r\n                })\r\n            },\r\n            eliminarInstitucion() {\r\n                let me = this;\r\n                let formData = new FormData();\r\n                formData.append('id', me.id)\r\n                me.$vs.loading()\r\n                this.$http.post(this.$server_url + 'institucionEliminar', formData)\r\n                    .then(res => {\r\n                        me.$vs.loading.close()\r\n                        me.getInstitucion();\r\n                        me.$vs.notify({\r\n                            text: 'Institución eliminada con exito',\r\n                            color: 'success',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-check'\r\n                        })\r\n                    })\r\n                    .catch(function (e) {\r\n                        me.$vs.loading.close()\r\n                        me.$vs.notify({\r\n                            text: 'No se pudo eliminar la institucion',\r\n                            color: 'warning',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-check'\r\n                        })\r\n                    });\r\n            },\r\n            verEstudiantes(item) {\r\n                let me = this;\r\n                me.popupDocentes = true;\r\n                // console.log( item.idInstitucion )\r\n                localStorage.tipoUser = \"estudiante\";\r\n                localStorage.institucion = JSON.stringify(item);\r\n                // me.$router.push('/institucion/estudiantes');\r\n                localStorage.removeItem('datoUser')\r\n                localStorage.removeItem('user_select')\r\n                localStorage.removeItem('show_inst')\r\n                me.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n                me.institucionDocente = JSON.parse(localStorage.getItem('institucion'))\r\n                me.tipo = localStorage.getItem('tipoUser');\r\n                me.perfil_autorizado = me.usuario.id_group;\r\n\r\n                me.getUsuariosTipo();\r\n            },\r\n            getVisitas(item, nombreInstitucion) {\r\n\r\n                let me = this;\r\n                axios.get('https://foro.prolipadigital.com.ec/historico-recursos?idinstitucion=' + item + '&_limit=-1')\r\n                    .then(res => {\r\n                        // console.log(res.data.length)\r\n                        // me.visitas = res.data.length;\r\n                        //para guardar las intitucion en el localstorage\r\n                        this.historicoinstitucionArreglo = res.data;\r\n                        localStorage.setItem(\"historicoinstitucionArreglo\", JSON.stringify(this.historicoinstitucionArreglo));\r\n\r\n                        //para guardar el nombre de la institucion en localstorage\r\n\r\n                        this.visitasnombreinstitucion = nombreInstitucion\r\n                        localStorage.setItem(\"visitasnombreinstitucion\", JSON.stringify(this.visitasnombreinstitucion));\r\n                        //para enviar el id de la institucion\r\n                        localStorage.setItem(\"visitasid\", JSON.stringify(item));\r\n\r\n                        //para guardar las visitas generales de la institucion\r\n                        this.visitasginstitucion = res.data.length;\r\n                        localStorage.setItem(\"visitasginstitucion\", JSON.stringify(this.visitasginstitucion));\r\n\r\n                        //     //para guardar en localstorage el historico de docentes\r\n                        me.historicoDocenteArreglo = this.historicoinstitucionArreglo.filter(p => p.idgrupo == \"6\");\r\n                        //    localStorage.setItem(\"historicoDocenteArreglo\", JSON.stringify(this.historicoDocenteArreglo));\r\n\r\n                        //para guardar las visitas generales de los docentes\r\n                        this.visitasgdocente = me.historicoDocenteArreglo.length;\r\n                        localStorage.setItem(\"visitasgdocente\", JSON.stringify(this.visitasgdocente));\r\n\r\n                        //     //para guardar en localstorage el historico de estudiantes\r\n                        me.historicoEstudianteArreglo = this.historicoinstitucionArreglo.filter(p => p.idgrupo == \"4\");\r\n                        //    localStorage.setItem(\"historicoEstudianteArreglo\", JSON.stringify(this.historicoEstudianteArreglo));\r\n\r\n                        //para guardar las visitas generales de los estudiantes\r\n                        this.visitasgestudiantes = me.historicoEstudianteArreglo.length;\r\n                        localStorage.setItem(\"visitasgestudiantes\", JSON.stringify(this.visitasgestudiantes));\r\n\r\n                        me.$router.push('/reporte/institucion/');\r\n\r\n                    })\r\n                    .catch(err => {\r\n                        console.log(err)\r\n                    })\r\n            },\r\n\r\n            verMatricula(tr) {\r\n                let me = this;\r\n                localStorage.setItem('matricula_institucion', tr.idInstitucion)\r\n                localStorage.setItem('matricula_admin', \"yes\")\r\n                me.$router.push('/matricula/listado_matriculas')\r\n            },\r\n            periodos(item) {\r\n                // localStorage.institucion = JSON.stringify(item);\r\n                let me = this;\r\n                me.popupPeriodos = true;\r\n                let institucion = item;\r\n                me.tmp = institucion;\r\n                me.nombreInstitucion = me.tmp.nombreInstitucion;\r\n                me.idInstitucion = me.tmp.idInstitucion;\r\n                me.region = me.tmp.nombreregion;\r\n                me.getPeriodosInstitucion();\r\n                me.usuario = JSON.parse(localStorage.getItem('usuario'))\r\n\r\n                me.getPeriodos();\r\n                // this.$router.push('/institucion/periodosInstitucion');\r\n            },\r\n\r\n            async getSeguimiento(tr) {\r\n                let me = this;\r\n                this.$http.get(this.$server_url + 'escuelasAsesor?asesor_id=' + tr.asesor_id + '&desdeAdmin=yes' + '&institucion_id=' + tr.idInstitucion)\r\n                    .then(function (response) {\r\n                        let periodo_id = response.data[0].periodo\r\n                        let periodo_nombre = response.data[0].descripcion\r\n                        me.$router.push('/administrador/seguimiento/institucion')\r\n                        localStorage.setItem('institucion_seguimiento_asesor_id', tr.asesor_id)\r\n                        localStorage.setItem('institucion_seguimiento_id', tr.idInstitucion)\r\n                        localStorage.setItem('institucion_seguimiento_nombre', tr.nombreInstitucion)\r\n                        localStorage.setItem('institucion_seguimiento_periodo_id', periodo_id)\r\n                        localStorage.setItem('institucion_seguimiento_periodo', periodo_nombre)\r\n                        localStorage.setItem('adminSeguimiento', \"yes\")\r\n                    })\r\n                    .catch(function (error) {})\r\n            },\r\n\r\n            //===========METODOS DE PERIODO===========================\r\n\r\n            getPeriodosInstitucion() {\r\n                let me = this;\r\n                me.$vs.loading();\r\n                this.$http.get(this.$server_url + 'periodosXInstitucion/' + me.idInstitucion)\r\n                    .then(res => {\r\n                        me.listaPeriodosInstitucion = res.data;\r\n                        // console.log(res.data);\r\n                        me.$vs.loading.close();\r\n                    })\r\n                    .catch(err => {\r\n                        console.log(err);\r\n                        me.$vs.loading.close();\r\n                    })\r\n            },\r\n            getPeriodos() {\r\n                let me = this;\r\n                this.$http.get(this.$server_url + 'periodoRegion?region=' + me.region)\r\n                    .then(res => {\r\n                        me.tmplistaPeriodos = res.data;\r\n                        //capturo el periodo activo para limitar el acceso a agregar periodo\r\n                        let filtrarPeriodoAcceso = me.tmplistaPeriodos.filter(p => p.estado == '1')\r\n                        //capturo la fecha actual\r\n                        var fecha = moment().add(-1, 'days').format('YYYY/MM/DD');\r\n\r\n                        // filtro la fecha limite del periodo\r\n                        let fechafinal = filtrarPeriodoAcceso.map(p => p.fhasta_limite)\r\n                        //comparo si la fecha final ya se paso a la actual\r\n                        if (Date.parse(fechafinal) < Date.parse(fecha)) {\r\n\r\n                            me.estadoLimiteAcceso = \"0\";\r\n\r\n                        } else {\r\n                            me.estadoLimiteAcceso = \"1\";\r\n                        }\r\n\r\n                        me.filtroPeriodos();\r\n                    })\r\n                    .catch(err => {\r\n                        console.log(err);\r\n                    })\r\n            },\r\n\r\n            abrirModal() {\r\n                let me = this;\r\n                me.popupPeriodos = false;\r\n                me.modalPeriodos = true;\r\n            },\r\n            filtroPeriodos() {\r\n                let me = this;\r\n                // console.log(me.tmplistaPeriodos)\r\n                me.listaPeriodos = [];\r\n                for (let index = 0; index < me.tmplistaPeriodos.length; index++) {\r\n                    if (me.tmplistaPeriodos[index].estado == me.f_periodos) {\r\n                        me.listaPeriodos.push(me.tmplistaPeriodos[index]);\r\n                    }\r\n                }\r\n            },\r\n            verificarPeriodo(item) {\r\n                let me = this;\r\n                // console.log(item.idperiodoescolar, me.idInstitucion)\r\n                me.$vs.loading();\r\n                let data = new FormData();\r\n                data.append('idperiodoescolar', item.idperiodoescolar);\r\n                data.append('idinstitucion', me.idInstitucion)\r\n                this.$http.post(this.$server_url + 'verifica_periodo', data)\r\n                    .then(res => {\r\n                        // console.log(res.data)\r\n                        if (res.data == 1) {\r\n                            me.$vs.notify({\r\n                                time: 8000,\r\n                                text: 'Este periodo ya se encuentra asignado a la institucion ' + me.nombreInstitucion,\r\n                                color: 'danger',\r\n                                iconPack: 'feather',\r\n                                icon: 'icon-alert-triangle'\r\n                            })\r\n                        } else {\r\n                            me.$vs.notify({\r\n                                text: 'Periodo agregado correctamente a la institucion ' + me.nombreInstitucion,\r\n                                color: 'success',\r\n                                iconPack: 'feather',\r\n                                icon: 'icon-check'\r\n                            })\r\n                            me.modalPeriodos = false;\r\n                            me.getPeriodosInstitucion();\r\n                        }\r\n                        me.$vs.loading.close();\r\n                    })\r\n                    .catch(err => {\r\n                        console.log(err);\r\n                        me.$vs.loading.close();\r\n                    })\r\n            },\r\n            confirmaEliminar(item) {\r\n                let me = this;\r\n                me.id_eliminar = item.id;\r\n                // console.log(me.id_eliminar)\r\n                // return\r\n                me.popupPeriodos = false;\r\n                me.$vs.dialog({\r\n                    type: 'confirm',\r\n                    color: 'danger',\r\n                    title: 'Confirmar',\r\n                    text: 'Seguro desea eliminar este item?',\r\n                    acceptText: 'Aceptar',\r\n                    cancelText: 'Cancelar',\r\n                    accept: me.eliminarItem,\r\n                    cancel: me.close\r\n                })\r\n            },\r\n            close() {\r\n                let me = this;\r\n                me.popupPeriodos = true;\r\n                this.$vs.notify({\r\n                    color: 'danger',\r\n                    title: 'Cerrado',\r\n                    text: 'Has cerrado!'\r\n                })\r\n            },\r\n            eliminarItem() {\r\n                let me = this;\r\n                this.$http.get(this.$server_url + 'eliminarPeriodosInstitucion/' + me.id_eliminar)\r\n                    .then(res => {\r\n                        me.$vs.notify({\r\n                            text: 'Periodo de esta institución eliminado correctamente',\r\n                            color: 'success',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-check'\r\n                        })\r\n                        me.getPeriodosInstitucion();\r\n                    })\r\n                    .catch(err => {\r\n                        console.log(err);\r\n                    })\r\n            },\r\n\r\n            //===========FIN DE METODOS DE PERIODOS======================\r\n\r\n            //===========METODOS PARA EDITAR INSTITUCION ===============\r\n\r\n            async getCiudadSelect() {\r\n                let me = this;\r\n                this.$http.get(this.$server_url + \"ciudad\").then(function (response) {\r\n                    me.ciudad = response.data;\r\n                    // console.log(me.ciudad);\r\n                });\r\n            },\r\n            async getRegionSelect() {\r\n                let me = this;\r\n                this.$http.get(this.$server_url + \"region\").then(function (response) {\r\n                    me.region = response.data;\r\n                });\r\n            },\r\n            async getPeriodoSelect() {\r\n                let me = this;\r\n                this.$http.get(this.$server_url + \"periodo\").then(function (response) {\r\n                    me.periodo = response.data;\r\n                });\r\n            },\r\n            async getInstitucionEditar(idinstitucion) {\r\n                let me = this;\r\n                me.$vs.loading();\r\n                this.$http.get(this.$server_url + \"institucion/\" + idinstitucion)\r\n                    .then(function (response) {\r\n                        me.institucion = response.data;\r\n                        if (me.institucion.tipo_institucion == 1) {\r\n                            me.institucion.tipo_institucion = 'no'\r\n                        } else {\r\n                            me.institucion.tipo_institucion = 'si'\r\n                        }\r\n                        //llenar el radio matricula\r\n                        if (me.institucion.aplica_matricula == 1) {\r\n                            me.institucion.matricula = '1'\r\n                        } else {\r\n                            me.institucion.matricula = '0'\r\n                        }\r\n                        me.institucion.estado = response.data.estado_idEstado\r\n                        console.log(me.institucion)\r\n                        me.$vs.loading.close();\r\n                    })\r\n                    .catch(function (error) {\r\n                        me.$vs.loading.close();\r\n                    })\r\n            },\r\n            rechargeInstitucion(e){\r\n              let me = this;\r\n              //0 => RECARGAR ; 1 CERRAR MODAL\r\n              if(e == 0){\r\n                me.popupAddInstitucion = false;\r\n                me.getInstitucion();\r\n              }else{\r\n                me.popupAddInstitucion = false;\r\n              }\r\n            },\r\n            async getVendedor() {\r\n                let me = this;\r\n                this.$http.get(this.$server_url + 'listaAsesores')\r\n                    .then(function (response) {\r\n                        me.vendedor = response.data;\r\n                        // console.log(me.vendedor);\r\n                    })\r\n                    .catch(function (error) {})\r\n            },\r\n\r\n            //=======FIN DE METODOS PARA EDITAR INSTITUCION============\r\n\r\n            //=======METODOS PARA EL MODAL DE LISTA DE DOCENTES========\r\n            getUsuariosTipo() {\r\n                let me = this;\r\n                me.$vs.loading()\r\n                if (me.tipo == 'docente') {\r\n                    this.$http.get(this.$server_url + 'docentes?idInstitucion=' + me.institucionDocente.idInstitucion)\r\n                        .then(function (response) {\r\n                            me.usuarios = response.data\r\n                            me.$vs.loading.close()\r\n                            // console.log(me.usuarios)\r\n                        })\r\n                        .catch(function (error) {\r\n                            console.log(error)\r\n                            me.$vs.loading.close()\r\n                        })\r\n                }\r\n                if (me.tipo == 'estudiante') {\r\n                    this.$http.get(this.$server_url + 'estudiantesXInstitucion/' + me.institucionDocente.idInstitucion)\r\n                        .then(function (response) {\r\n                            me.usuarios = response.data\r\n                            me.$vs.loading.close()\r\n                            // console.log(me.usuarios)\r\n                        })\r\n                        .catch(function (error) {\r\n                            console.log(error)\r\n                            me.$vs.loading.close()\r\n                        })\r\n                }\r\n            },\r\n            getUsuariosTipoVisitas() {\r\n                let me = this;\r\n                const from = moment(me.fromDate).format('YYYY-MM-DD')\r\n                const to = moment(me.toDate).format('YYYY-MM-DD')\r\n                if (me.fromDate == null) {\r\n                    me.$vs.notify({\r\n                        text: 'Debe escoger una fecha inicio',\r\n                        color: 'warning',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check'\r\n                    })\r\n                    return false\r\n                }\r\n                if (me.toDate == null) {\r\n                    me.$vs.notify({\r\n                        text: 'Debe escoger una fecha final',\r\n                        color: 'warning',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check'\r\n                    })\r\n                    return false\r\n                }\r\n                if (me.fromDate > me.toDate) {\r\n                    me.$vs.notify({\r\n                        text: 'La fecha inicio no puede mayor que la fecha final',\r\n                        color: 'warning',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check'\r\n                    })\r\n                    return false\r\n                }\r\n                me.usuarios = []\r\n                me.$vs.loading()\r\n                this.$http.get(this.$server_url + 'docentesVisitas?idInstitucion=' + me.institucionDocente.idInstitucion + '&fromDate=' + from + '&toDate=' + to)\r\n                    .then(function (response) {\r\n                        me.usuarios = response.data\r\n                        me.$vs.loading.close()\r\n                        // console.log(me.usuarios)\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(error)\r\n                        me.$vs.loading.close()\r\n                    })\r\n            },\r\n            verVisitas(item) {\r\n                let me = this;\r\n                // console.log(item);\r\n                me.popupVistasUsuario = true;\r\n                localStorage.datoUser = JSON.stringify(item);\r\n\r\n                me.datoU = JSON.parse(localStorage.getItem('datoUser'))\r\n                me.getVisitasDocente();\r\n                // if (me.tipo == 'docente') {\r\n                //     me.$router.push('/institucion/docentes/visitas');\r\n                // }\r\n                // if (me.tipo == 'estudiante') {\r\n                //     me.$router.push('/institucion/estudiante/visitas');\r\n                // }\r\n            },\r\n            irAsignacion(item) {\r\n\r\n                let me = this;\r\n                // console.log( item )\r\n                me.popupAsignacion = true;\r\n\r\n                localStorage.setItem('user_select', (JSON.stringify(item)));\r\n                localStorage.setItem('show_inst', 'si'); //desde vista docentes, mostrar institucion\r\n\r\n                me.show_inst = (localStorage.getItem('show_inst'));\r\n                me.usuarioAsignacion = JSON.parse(localStorage.getItem('user_select'));\r\n                me.user_seleccionado = me.usuarioAsignacion.idusuario\r\n                me.user_nombre = me.usuarioAsignacion.nombres + ' ' + me.usuarioAsignacion.apellidos\r\n                me.user_email = me.usuarioAsignacion.email\r\n                me.user_institucion = JSON.parse(localStorage.getItem('institucion'))\r\n                me.getAreaSelect();\r\n                me.getSeleccionadas();\r\n\r\n                // me.$router.push('/usuarios/asignaturasInstitucion');\r\n            },\r\n\r\n            //=======FIN DEL METODOS PARA EL MODAL DE LISTA DE DOCENTES\r\n            //=======METODOS PARA MODAL DE ASIGNACION DE LIBROS\r\n            getSeleccionadas() {\r\n                let me = this;\r\n                me.$vs.loading();\r\n                let data = new FormData();\r\n                data.append('idusuario', me.user_seleccionado)\r\n                this.$http.post(this.$server_url + \"asignaturasDocent\", data)\r\n                    .then(res => {\r\n                        // console.log(res.data);\r\n                        me.seleccionadas = res.data;\r\n                        // me.popupDocentes = true;\r\n                        me.$vs.loading.close();\r\n                    });\r\n            },\r\n            getAreaSelect() {\r\n                let me = this;\r\n                me.$vs.loading();\r\n                this.$http.get(this.$server_url + \"areaSelect\").then(function (response) {\r\n                    me.area = response.data.items;\r\n                    // console.log(me.area);\r\n                    me.$vs.loading.close();\r\n                });\r\n            },\r\n\r\n            agregaAsignacion(item) {\r\n                let me = this;\r\n                let data = new FormData();\r\n                data.append('usuario_idusuario', me.user_seleccionado)\r\n                data.append('asignatura_idasignatura', item.id)\r\n                this.$http.post(this.$server_url + \"asignar_asignatura_docentes\", data)\r\n                    .then(function (res) {\r\n                        // console.log(res.data);\r\n                        if (res.data > 0) {\r\n                            me.$vs.notify({\r\n                                time: 7000,\r\n                                text: 'Esta asignatura ya se encuentra asignada al docente',\r\n                                color: 'danger',\r\n                                iconPack: 'feather',\r\n                                icon: 'icon-alert-triangle'\r\n                            })\r\n                        } else {\r\n                            me.$vs.notify({\r\n                                text: 'Asignatura agregada',\r\n                                color: 'success',\r\n                                iconPack: 'feather',\r\n                                icon: 'icon-check'\r\n                            })\r\n                            me.getSeleccionadas();\r\n                        }\r\n                        me.$vs.loading.close();\r\n                    });\r\n            },\r\n            eliminaAsignacion(item) {\r\n                let me = this;\r\n                // console.log(item)\r\n                me.$vs.loading();\r\n                this.$http.get(this.$server_url + \"eliminaAsignacion/\" + item.idasignado)\r\n                    .then(function (res) {\r\n                        // console.log(res.data);\r\n                        me.$vs.notify({\r\n                            text: item.nombreasignatura + ' eliminada',\r\n                            color: 'success',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-check'\r\n                        })\r\n                        me.getSeleccionadas();\r\n                        me.$vs.loading.close();\r\n                    });\r\n            },\r\n            moverPeriodoActual(){\r\n              let me = this\r\n              console.log(\"user_seleccionado\",me.user_seleccionado)\r\n              console.log(\"periodo\",me.institucionSelected.periodo_id)\r\n              this.$http.get(this.$server_url+'moverAsignaturasPeriodo/'+me.user_seleccionado+'/'+me.institucionSelected.periodo_id)\r\n                .then(function (res) {\r\n                  me.$vs.notify({\r\n                  text:'Se cambio correctamente',\r\n                  color:'success',\r\n                  iconPack: 'feather',\r\n                  icon:'icon-check'})\r\n                  me.getSeleccionadas();\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                })\r\n            },\r\n            confirmaQuitar() {\r\n                let me = this;\r\n                me.popupAsignacion = false\r\n                me.$vs.dialog({\r\n                    type: 'confirm',\r\n                    color: 'danger',\r\n                    title: 'Confirmar',\r\n                    text: '¿Está seguro de eliminar este contenido?',\r\n                    acceptText: 'Aceptar',\r\n                    cancelText: 'Cancelar',\r\n                    accept: me.f_quitarTodo,\r\n                    cancel: me.f_regresar\r\n                })\r\n            },\r\n            f_regresar() {\r\n                let me = this\r\n                me.popupAsignacion = true\r\n            },\r\n            f_quitarTodo() {\r\n                let me = this;\r\n                let idSelects = [];\r\n                for (let index = 0; index < me.seleccionadas.length; index++) {\r\n                    idSelects.push(me.seleccionadas[index].idasignado)\r\n                }\r\n                // console.log(idSelects)\r\n                me.$vs.loading();\r\n                let data = new FormData();\r\n                data.append('idasiguser', idSelects)\r\n                this.$http.post(this.$server_url + \"quitaTodasAsignaturas\", data)\r\n                    .then(function (res) {\r\n                        // console.log(res.data);\r\n                        me.$vs.notify({\r\n                            text: 'Asignaturas quitadas correctamente.',\r\n                            color: 'success',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-check'\r\n                        })\r\n                        me.getSeleccionadas();\r\n                        me.$vs.loading.close();\r\n                    });\r\n            },\r\n\r\n            //=======FIN DE METODOS PARA MODAL DE ASIGNACION DE LIBROS\r\n\r\n            //METODOS PARA MODAL VISITAS DE USUARIO\r\n            getVisitasDocente() {\r\n                let me = this;\r\n                axios.get('https://foro.prolipadigital.com.ec/estudiantes?idusuario=' + me.datoU.idusuario + '&_sort=updatedAt:DESC')\r\n                    .then(res => {\r\n                        me.listaVisitas = res.data;\r\n                        // console.log(me.listaVisitas)\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(' no se conecto a consultar las visitas ')\r\n                    })\r\n            },\r\n\r\n            //======FIN DE MODAL PARA VISITAS DE USUARIO\r\n\r\n            //====PARA EXPORTAR A EXCEL LOS DOCENTES CON LAS VISITAS======\r\n            exportToExcel() {\r\n                let headerTitle = ['nombres', 'apellidos', 'email', 'usuario', 'cedula', 'visitas', 'Fecha creacion'];\r\n                let headerVal = ['nombres', 'apellidos', 'email', 'name_usuario', 'cedula', 'visitas', 'created_at'];\r\n                let codigoSelectedMayus = this.codigoSelected\r\n                for (var i = 0; i < codigoSelectedMayus.length; i++) {\r\n                    for (var key in codigoSelectedMayus[i]) {\r\n                        if (typeof codigoSelectedMayus[i][key] == \"string\") {\r\n                            codigoSelectedMayus[i][key] = codigoSelectedMayus[i][key].toUpperCase();\r\n                        }\r\n                    }\r\n                }\r\n                import('@/vendor/Export2Excel').then(excel => {\r\n                    const list = codigoSelectedMayus\r\n                    const data = this.formatJson(headerVal, list)\r\n                    excel.export_json_to_excel({\r\n                        header: headerTitle,\r\n                        data,\r\n                        filename: this.fileName,\r\n                        autoWidth: this.cellAutoWidth,\r\n                        bookType: this.selectedFormat\r\n                    })\r\n                    this.clearFields()\r\n                    this.guardarActivo = '';\r\n                    this.generarActivo = ' ';\r\n                    this.textAlertCant = '';\r\n                    this.cantidad = '';\r\n                    this.codigoSelected = [];\r\n                })\r\n            },\r\n            formatJson(filterVal, jsonData) {\r\n                return jsonData.map(v => filterVal.map(j => {\r\n                    return v[j]\r\n                }))\r\n            },\r\n            clearFields() {\r\n                this.fileName = ''\r\n                this.cellAutoWidth = true\r\n                this.selectedFormat = 'xls'\r\n            },\r\n            openLoadingColor(libro) {\r\n                this.$vs.loading({\r\n                    color: '#1A76F2'\r\n                })\r\n\r\n            },\r\n            //generar enlace para el estudiante pueda ingresar los codigos\r\n            generateEnlaceEstudiante(tr) {\r\n                let me = this;\r\n                let host = location.protocol + '//' + location.hostname + ':' + location.port + '/formulario/diagnostico/'\r\n                //let host = location.protocol + '//' + location.hostname +':'+ location.port + '/formulario/diagnostico/'+ tr.idInstitucion +'/'\r\n                if (tr.statusPeriodo == 0) {\r\n                    me.$vs.notify({\r\n                        text: 'La institución tiene período inactivo no se puede generar el enlace',\r\n                        color: 'warning',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check',\r\n                        time: 6000,\r\n                    })\r\n                    return\r\n                }\r\n                let formData = new FormData();\r\n                me.$vs.loading()\r\n                formData.append('institucion_id', tr.idInstitucion)\r\n                formData.append('periodo_id', tr.periodo_id)\r\n                formData.append('link', host)\r\n                this.$http.post(this.$server_url + 'GenerarEnlaceDiagnostico', formData)\r\n                    .then(function (res) {\r\n                        me.$vs.loading.close()\r\n                        me.copiarLink(res.data[0])\r\n                    })\r\n                    .catch(function (error) {\r\n                        me.$vs.loading.close()\r\n                    })\r\n            },\r\n            VerCoincidencias(tr) {\r\n                let me = this;\r\n                var resultado = \"\"\r\n                me.busquedaMilton = \"\"\r\n                me.arregloCoincidencias = []\r\n                me.arregloIdsCoincidencias = []\r\n                me.institucionCiudad = tr.ciudad\r\n                me.institucionEnviar = tr.idInstitucion\r\n                me.institucionNombreEnviar = tr.nombreInstitucion\r\n                me.institucionEnviarCedula = tr.vendedorInstitucion\r\n                me.institucionEnviarAIniciales = tr.iniciales\r\n                const texto = tr.nombreInstitucion;\r\n                // Convertimos la cadena en un arreglo de palabras\r\n                const palabras = texto.split(\" \");\r\n                if (palabras.length > 3) {\r\n                    // Obtenemos las últimas 3 palabras del arreglo\r\n                    const ultimasTres = palabras.slice(-3);\r\n                    // Unimos las últimas 3 palabras en una sola cadena\r\n                    resultado = ultimasTres.join(\" \");\r\n                } else {\r\n                    resultado = tr.nombreInstitucion\r\n                }\r\n                //enviar ids coincidencias al arreglo\r\n                if (tr.codigo_mitlon_coincidencias == \"null\" || tr.codigo_mitlon_coincidencias == null || tr.codigo_mitlon_coincidencias == \"\") {} else {\r\n                    let transforWords = tr.codigo_mitlon_coincidencias\r\n                    me.arregloIdsCoincidencias = transforWords.split(\",\")\r\n                }\r\n                me.buscarCoincidencias(resultado)\r\n            },\r\n            buscarCoincidencias(coincidencia) {\r\n                let me = this;\r\n                me.arregloCoincidencias = []\r\n                me.$vs.loading();\r\n                this.$http.get(this.$server_url + 'buscarCoincidenciaInstitucionMilton?coincidencia=' + coincidencia)\r\n                    .then(function (res) {\r\n                        me.$vs.loading.close()\r\n                        if (res.data.status == 0) {\r\n                            me.$vs.notify({\r\n                                text: res.data.message,\r\n                                color: 'primary',\r\n                                iconPack: 'feather',\r\n                                icon: 'icon-check'\r\n                            })\r\n                        }\r\n                        me.arregloCoincidencias = res.data\r\n                        me.popupCoincidencia = true\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(error + ' error');\r\n                        me.$vs.loading.close()\r\n                    })\r\n            },\r\n            AsignarCodigoMilton(tr) {\r\n                let me = this;\r\n                let resolve = me.arregloIdsCoincidencias.filter(p => p == tr.ID_INSTITUCION)\r\n                if (resolve.length == 0) {\r\n                    me.arregloIdsCoincidencias.push(tr.ID_INSTITUCION)\r\n                }\r\n            },\r\n            guadarIdsMilton() {\r\n                let me = this\r\n                if (me.arregloIdsCoincidencias.length == 0) {\r\n                    me.$vs.notify({\r\n                        text: 'Debe seleccionar al menos un id',\r\n                        color: 'warning',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check'\r\n                    })\r\n                    return\r\n                }\r\n                let valorPrimario = me.arregloIdsCoincidencias[0]\r\n                let enviarIds = me.arregloIdsCoincidencias.join(',')\r\n                let formData = new FormData();\r\n                formData.append('valorPrimario', valorPrimario)\r\n                formData.append('codigosM', enviarIds)\r\n                formData.append('institucion_id', me.institucionEnviar)\r\n                formData.append('cedulaAsesor', me.institucionEnviarCedula)\r\n                formData.append('cedulaAsesorIniciales', me.institucionEnviarAIniciales)\r\n                me.$vs.loading();\r\n                this.$http.post(this.$server_url + 'guadarIdsMilton', formData)\r\n                    .then(function (res) {\r\n                        me.$vs.loading.close()\r\n                        me.$vs.notify({\r\n                            text: 'Se actualizo correctamente',\r\n                            color: 'primary',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-check'\r\n                        })\r\n                        me.getInstitucion()\r\n                        me.popupCoincidencia = false\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(error + ' error');\r\n                        me.$vs.loading.close()\r\n                    })\r\n            },\r\n            eliminaAsignacionIdMilton(value) {\r\n                let me = this;\r\n                me.arregloIdsCoincidencias.splice(value, 1);\r\n            },\r\n            copiarLink(tr) {\r\n                let me = this;\r\n                let ruta = tr.link\r\n                var aux = document.createElement(\"input\");\r\n                aux.setAttribute(\"value\", ruta);\r\n                document.body.appendChild(aux);\r\n                aux.select();\r\n                try {\r\n                    var status = document.execCommand('copy');\r\n                    if (!status) {\r\n                        me.$vs.notify({\r\n                            text: 'Error al copiar el link',\r\n                            color: 'warning',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-alert-triangle'\r\n                        })\r\n                    } else {\r\n                        me.$vs.notify({\r\n                            text: 'Link copiado',\r\n                            color: 'success',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-check'\r\n                        })\r\n                    }\r\n                } catch (err) {\r\n                    console.log('No se pudo copiar');\r\n                }\r\n                document.body.removeChild(aux);\r\n            },\r\n            //METODOS REGISTRO DE DOCENTES\r\n            registroDocentes(tr){\r\n                let me = this\r\n                if(tr.statusPeriodo == 0){\r\n                    me.$vs.notify({\r\n                        text: 'La institución tiene periodo inactivo, solicite la activación a Soporte',\r\n                        color: 'danger',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check',\r\n                        time:6000\r\n                    })\r\n                    return\r\n                }\r\n                me.popupAsignacionDocentes = true;\r\n            },\r\n            //FIN METODOS REGISTRO DE DOCENTES\r\n            //IMPRIMIR CODIGOS ESTUDIANTES\r\n            imprimirCodigosEstudiante(tr){\r\n                let me = this;\r\n                var datos = tr.periodo_id + '*' + tr.idInstitucion;\r\n                me.$vs.loading()\r\n                this.$http.get(this.$server_url + 'getEstudianteCodigos/'+datos)\r\n                    .then(function (response) {\r\n                        me.$vs.loading.close()\r\n                        if(response.data.length == 0){\r\n                            me.$vs.notify({\r\n                                text: 'No hay códigos registrados en esta institución',\r\n                                color: 'danger',\r\n                                time:6000,\r\n                                position:'center',\r\n                                iconPack: 'feather',\r\n                                icon: 'icon-check'\r\n                            })\r\n                            return\r\n                        }\r\n                        me.arregloCodigosEstudiantes = response.data;\r\n                        me.exportToExcelCodigos()\r\n                    })\r\n                    .catch(function (error) {   me.$vs.loading.close()})\r\n            },\r\n            getEvaluacionesInstitucion(){\r\n                let me = this\r\n                me.$vs.loading()\r\n                const { idInstitucion, periodo_id } = me.institucionSelected\r\n                this.$http.get(this.$server_url + `getEvaluacionesInstitucion/${idInstitucion}/${periodo_id}/`)\r\n                    .then(function (response) {\r\n                        me.$vs.loading.close()\r\n                        me.arrayEvaluacionesInstitucion = response.data\r\n                        me.popupEvaluaciones            = true\r\n                    })\r\n                    .catch(function (error) {   me.$vs.loading.close()})\r\n            },\r\n            changeEvaluacion(e){\r\n                let me = this\r\n                me.popupEvaluaciones = false\r\n            },\r\n            //METODOS PARA DETALE DE VENTA\r\n            getTipoVenta(tr) {\r\n                let me = this;\r\n                me.pedido.nombreInstitucion = tr.nombreInstitucion\r\n                me.pedido.idInstitucion     = tr.idInstitucion\r\n                me.pedido.periodo           = tr.periodo\r\n                me.pedido.periodo_id        = tr.periodo_id\r\n                me.tituloDetalleVenta       = 'Detalle de venta de ' + me.pedido.nombreInstitucion\r\n                me.popupTipoVenta           = true;\r\n            },\r\n            //FIN METODOS PARA DETALLE DE VENTA\r\n            //METODOS PARA ACTIVAR AL ULTIMO PERIODO\r\n            getPeriodosActivar(){\r\n              let me = this\r\n              me.$vs.loading()\r\n              me.periodoSelect = []\r\n              this.$http.get(this.$server_url+'get_periodos_pedidos')\r\n              .then(res => {\r\n                me.$vs.loading.close()\r\n                let datos = res.data\r\n                if(datos.length == 0 ){\r\n                  me.$vs.notify({\r\n                  text:'No existe períodos para activar Comuniquese con soporte',\r\n                  color:'warning',\r\n                  iconPack: 'feather',\r\n                  icon:'icon-check',\r\n                  time:5000,\r\n                  })\r\n                  return\r\n                }\r\n                //obtener el perido activo de la region para activar a la escuela en ese periodo\r\n                if(datos.length > 0){\r\n                  me.periodoSelect = datos.filter(p => p.cambiar_periodo == 1 && p.region_idregion == me.sendInstitucion.region)\r\n                  //si no existe el periodo activo para la region para poder cambiar\r\n                  if( me.periodoSelect.length == 0 ){\r\n                    me.$vs.notify({\r\n                    text:'No existe un período configurado para activar Comuniquese con soporte',\r\n                    color:'warning',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check',\r\n                    time:5000,\r\n                    })\r\n                    return\r\n                  }\r\n                  //si existe mas de un periodo activo para la region\r\n                  if( me.periodoSelect.length > 1 ){\r\n                    me.$vs.notify({\r\n                    text:'Existe más de un período configurado para activar Comuniquese con soporte',\r\n                    color:'warning',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check',\r\n                    time:5000,\r\n                    })\r\n                    return\r\n                  }\r\n                  me.popupActualizarPeriodo = true;\r\n                }\r\n              })\r\n              .catch(function (error) {\r\n                me.$vs.loading.close();\r\n              })\r\n            },\r\n            changePeriodo() {\r\n              let me = this;\r\n              me.$vs.loading();\r\n              let data = new FormData();\r\n              data.append('idperiodoescolar', me.periodoSelect[0].idperiodoescolar);\r\n              data.append('idinstitucion',    me.sendInstitucion.idInstitucion)\r\n              this.$http.post(this.$server_url + 'verifica_periodo', data)\r\n                .then(res => {\r\n                  me.$vs.loading.close();\r\n                  if (res.data == 1) {\r\n                    me.$vs.notify({\r\n                      time: 8000,\r\n                      text: 'Este periodo ya se encuentra asignado a la institucion ' + me.sendInstitucion.nombreInstitucion,\r\n                      color: 'danger',\r\n                      iconPack: 'feather',\r\n                      icon: 'icon-alert-triangle'\r\n                    })\r\n                  } else {\r\n                    me.$vs.notify({\r\n                      text: 'Periodo agregado correctamente a la institucion ' + me.sendInstitucion.labnombreInstitucionel,\r\n                      color: 'success',\r\n                      iconPack: 'feather',\r\n                      icon: 'icon-check'\r\n                    })\r\n                  }\r\n                  me.getInstitucion()\r\n                  me.sendInstitucion            = {}\r\n                  me.popupActualizarPeriodo     = false;\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                    me.$vs.loading.close();\r\n                })\r\n            },\r\n            //FIN METODOS PARA ACTIVAR AL ULTIMO PERIODO\r\n             //METODOS PARA EXCEL\r\n            //para limipiar los campos del excel\r\n            //metodo par descargar el excel\r\n            exportToExcelCodigos() {\r\n                let headerTitle = ['Código','Estudiante','Libro'];\r\n                let headerVal = ['codigo', 'estudiante','nombrelibro'];\r\n                let codigoSelectedMayus = this.arregloCodigosEstudiantes\r\n                for (var i = 0; i < codigoSelectedMayus.length; i++) {\r\n                    for (var key in codigoSelectedMayus[i]) {\r\n                        if (typeof codigoSelectedMayus[i][key] == \"string\") {\r\n                            codigoSelectedMayus[i][key] = codigoSelectedMayus[i][key].toUpperCase();\r\n                        }\r\n                    }\r\n                }\r\n                import('@/vendor/Export2Excel').then(excel => {\r\n                    const list = codigoSelectedMayus\r\n                    const data = this.formatJson(headerVal, list)\r\n                    var nombrefile = \"\"\r\n                    if(this.openModal == 1){\r\n                        nombrefile = this.fileName\r\n                    }else{\r\n                        nombrefile = \"Reporte_de_codigo_de_estudiantes\"\r\n                    }\r\n                    excel.export_json_to_excel({\r\n                        header: headerTitle,\r\n                        data,\r\n                        filename: nombrefile,\r\n                        autoWidth: this.cellAutoWidth,\r\n                        bookType: this.selectedFormat\r\n                    })\r\n                    this.clearFields()\r\n                    this.guardarActivo = '';\r\n                    this.generarActivo = ' ';\r\n                    this.textAlertCant = '';\r\n                    this.cantidad = '';\r\n                })\r\n            },\r\n        },\r\n    }\r\n    </script>\r\n\r\n    <style lang=\"css\">\r\n    .asig-select {\r\n        display: inline-block;\r\n        border: 0.7px solid rgb(201, 201, 204);\r\n        border-radius: 6px;\r\n        font-size: 12px;\r\n    }\r\n\r\n    .titulo {\r\n        background: #4CB8C4;\r\n        /* fallback for old browsers */\r\n        background: -webkit-linear-gradient(to right, #3CD3AD, #4CB8C4);\r\n        /* Chrome 10-25, Safari 5.1-6 */\r\n        background: linear-gradient(to right, #3CD3AD, #4CB8C4);\r\n        /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\r\n        color: white;\r\n        letter-spacing: 1px;\r\n\r\n    }\r\n\r\n    /* Botón para seleccionar archivos */\r\n    button.form-file-button {\r\n        margin-top: 10px;\r\n        vertical-align: middle;\r\n        color: #fff;\r\n        background: #24A6F6;\r\n        margin: 0;\r\n        border: 0;\r\n        width: 50px;\r\n        padding: 2px 8px;\r\n        transform: scaleX(-1);\r\n        /* Invertir botón horizontalmente */\r\n    }\r\n\r\n    /* Lista de archivos */\r\n    span.form-file-span {\r\n        flex: 1;\r\n        display: inline-block;\r\n        text-align: left;\r\n        padding: 4px 10px;\r\n        background: #24A6F6;\r\n        color: #fff;\r\n        padding: 10px;\r\n        border-radius: 5px 15px;\r\n        cursor: pointer;\r\n        font-size: 20px;\r\n\r\n    }\r\n    </style>\r\n"]}]}