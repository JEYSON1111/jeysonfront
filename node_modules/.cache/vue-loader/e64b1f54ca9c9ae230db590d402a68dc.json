{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\evaluaciones\\RespuestasComponent.vue?vue&type=style&index=0&id=cd0dde60&lang=css","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\evaluaciones\\RespuestasComponent.vue","mtime":1712682815869},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\n.inputRespuesta{\r\n    height: 80px;\r\n    width: 100%;\r\n    border-radius: 5px;\r\n    border: 1px solid #d5d5d5;\r\n    font-size: 18px;\r\n    padding: 5px 10px 5px 10px;\r\n    resize: vertical;\r\n}\r\n\r\n.marcarBotonResp{\r\n    background-color: #046AE7 !important;\r\n    color: white !important;\r\n}\r\n\r\n.botonPaginacion:hover{\r\n    background-color: #C8DFFA !important;\r\n    color: #046AE7 !important;\r\n}\r\n\r\n.estiloInput{\r\n    margin-bottom: 15px;\r\n    -ms-transform: scale(1.5); /* IE 9 */\r\n    -webkit-transform: scale(1.5); /* Chrome, Safari, Opera */\r\n    transform: scale(1.5);\r\n    margin-right: 10px;\r\n}\r\n\r\n.altura{\r\n    max-height: 350px;\r\n}\r\n",{"version":3,"sources":["RespuestasComponent.vue"],"names":[],"mappings":";AA0iBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"RespuestasComponent.vue","sourceRoot":"src/views/evaluaciones","sourcesContent":["<template>\r\n<div class=\"vx-row\" style=\"padding: 20px; font-size: 19px;\">\r\n    <div class=\"vx-col sm:w-3/4 w-full\">\r\n    <div v-if=\"evaluaciones[0]===undefined\">No existe evaluación</div>\r\n    <vx-card v-else v-bind:title=\"evaluaciones[0].nombreasignatura\" title-color=\"primary\">\r\n        {{usuario.nombres}} {{usuario.apellidos}} - {{usuario.cedula}}<br>\r\n        {{'Inicia: '+evaluaciones[0].fecha_inicio+' - Finaliza: '+ evaluaciones[0].fecha_fin}}\r\n        <div class=\"vx-row\">\r\n            <div v-if=\"evaluaciones[0].descripcion==='' || evaluaciones[0].descripcion === null || evaluaciones[0].descripcion === 'null'\"></div>\r\n            <div v-else class=\"vx-col w-full\" align=\"justify\">\r\n                {{evaluaciones[0].descripcion}}\r\n            </div>\r\n        </div>\r\n    </vx-card>\r\n\r\n    <!-------INICIO SECCION RESPONDER---------->\r\n    <vx-card class=\"mt-5 mb-6\">\r\n\r\n    <div align=\"center\" v-if=\"volverActivo===true\">\r\n        Esta evaluación ya fue completada.<br><br>\r\n        <vs-button color=\"success\" type=\"gradient\" @click=\"volver()\">Volver</vs-button>\r\n    </div>\r\n    <div v-if=\"verbtniniciar===true\" align=\"center\">\r\n        <div v-if=\"preguntas.items===undefined\">No existen preguntas para esta evaluación.</div>\r\n        <vs-button v-else type=\"gradient\" size=\"large\" style=\"padding: 0px; border-radius: 100%; width: 80px; height: 80px;\" @click=\"iniciar(0); iniciarActivo=true; verbtniniciar=false;\">Iniciar</vs-button>\r\n    </div>\r\n\r\n    <div class=\"text-center\">\r\n    <div cols=\"12\" v-for=\"(item, index) in preguntas.items\" :key=\"index\" v-bind:id=\"'contenPreg'+(index+1)\" style=\"display: none;\" class=\"mb-4\">\r\n        <div class=\"mb-5\" style=\"font-size: 19px;\" align=\"center\">\r\n            <div align=\"left\">\r\n                <b>{{ index+1 }}) <span class=\"pregAbierta\">{{item.descripcion}}</span></b>\r\n            </div>\r\n\r\n            <img style=\"border-radius: 5px;\" v-if=\"item.img_pregunta\" v-bind:src=\"$data_url+'archivos/img/img_preguntas/'+item.img_pregunta\" class=\"img-responsive mt-2 altura\" min-width=\"350px\" width=\"450px\">\r\n\r\n            <div align=\"left\" style=\"font-size: 17px; color: gray;\">{{item.indicaciones}}</div>\r\n        </div>\r\n\r\n        <div v-bind:id=\"'contenOpciones'+(index+1)\" align=\"left\" style=\"font-size: 19px;\" class=\"mb-5\"></div>\r\n    </div>\r\n\r\n    <!-- <vs-pagination color=\"success\" v-if=\"iniciarActivo===true\" :total=\"preguntas.items.length\" v-model=\"currentx\" @input=\"verPreguntaSelec(currentx-1)\"></vs-pagination> -->\r\n    </div>\r\n    </vx-card>\r\n    </div>\r\n\r\n\r\n    <!--<div class=\"vx-col sm:w-1/4 w-full\" style=\"position: fixed; top: 20px; right: 10px; z-index: 1;\">-->\r\n    <div class=\"vx-col sm:w-1/4 w-full\">\r\n    <vx-card>\r\n        <div align=\"center\">\r\n            <img src=\"https://plataforma.prolipadigital.com.ec/img/prolipa.a3e6ff1b.png\" style=\"max-width: 225px;\" class=\"mb-10\">\r\n\r\n        Tiempo para resolver esta evaluación:\r\n        <div v-if=\"iniciarActivo===false && evaluaciones[0]\" class=\"reloj mt-3\" style=\"font-size: 35px; color: #2974FE;\">{{evaluaciones[0].duracion}} minutos</div>\r\n        <div class=\"reloj mb-6 mt-4\" style=\"font-size: 40px; color: #2974FE;\"></div>\r\n        <div v-if=\"iniciarActivo===true\" class=\"mb-2\">\r\n            <vs-button color=\"dark\" type=\"gradient\" class=\"mb-6\" @click=\"openConfirm\">Finalizar evaluación</vs-button><br>\r\n\r\n            <vs-button v-if=\"usuario.id_group === 4\" color=\"success\" type=\"border\" class=\"mt-6\" @click=\"$router.push('/estudiante/evaluaciones')\"><b>← Volver</b></vs-button>\r\n\r\n            <vs-button v-else color=\"success\" type=\"border\" class=\"mt-6 m-1\" @click=\"$router.push('/evaluaciones')\"><b>← Volver</b></vs-button>\r\n\r\n            <vs-divider class=\"mt-4\"> Preguntas </vs-divider>\r\n\r\n            <div class=\"btn-group\">\r\n            <button v-for=\"(item, index) in preguntas.items\" :key=\"index\" @click=\"currentx=(index+1); verPreguntaSelec(index)\" class=\"botonPaginacion\" v-bind:id=\"'botonRespuesta'+index\" style=\"background-color: white; border-radius: 5px; border: 1px solid #046AE7; margin: 2px; color: #046AE7; font-size: 19px; cursor: pointer;\">\r\n                {{ index+1 }}\r\n            </button>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    </vx-card>\r\n    </div>\r\n\r\n</div>\r\n</template>\r\n<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\r\n<script>\r\nimport flatPickr from 'vue-flatpickr-component';\r\nimport 'flatpickr/dist/flatpickr.css';\r\nimport Vue from 'vue'\r\nimport axios from 'axios'\r\nimport vSelect from 'vue-select'\r\nimport moment from 'moment'\r\nimport $ from 'jquery'\r\nimport VueRouter from 'vue-router'\r\n    var respondidas = [];\r\n    var x = null;\r\n    export default {\r\n        data(){\r\n            return {\r\n                preguntas: [],\r\n                pregunta: {descripcion: '', id_tema: '', respuesta: '', opcion1: '', opcion2: '', opcion3: '', img_pregunta: '', img_respuesta: '', img_opcion1: '', img_opcion2: '', img_opcion3: ''},\r\n                evaluaciones: [],\r\n                evaluacion: {nombre: '', asignatura: '', descripcion: '', fecha_inicio: '', fecha_fin: '', estado: '', duracion: '', nombre_evaluacion: ''},\r\n                usuario: [],\r\n                estudiante: null,\r\n                nombre_estudiante: null,\r\n                apellido_estudiante: null,\r\n                opcionesSelec: [],\r\n                urlOrigen: '',\r\n                iniciarActivo: false,\r\n                currentx: 1,\r\n                volverActivo: false,\r\n                verbtniniciar: true,\r\n                calificacion: 0,\r\n                id_evalRevisar: '',\r\n                grupo_estudiante: '',\r\n                preguntas_escritas: [],\r\n                tipo_preguntas_escritas: [],\r\n                respuestasAcum: [],\r\n                contadorIntentosgrupo: 0,\r\n                vectorLink: [],\r\n                popupInformacion: false,\r\n            }\r\n        },\r\n        components: {\r\n            'v-select': vSelect,\r\n            flatPickr\r\n        },\r\n        created(){\r\n            this.$vs.loading()\r\n            this.vectorLink = (this.$route.params.id).split('-')\r\n            this.id_evalRevisar = this.vectorLink[0]//localStorage.getItem(\"id_evalRevisar\");\r\n            this.grupo_estudiante = localStorage.getItem(\"grupo_estudiante\");\r\n            var url = location.pathname.split('/');\r\n            var urlBack = window.location.href\r\n            var urlV = urlBack.split('/')\r\n            this.urlOrigen = urlV[0]+'/'+urlV[1]+'/'+urlV[2]+'/estudiante/evaluaciones'\r\n            this.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n\r\n            if( this.usuario ){\r\n                this.verificarCurso()\r\n                this.estudiante = this.usuario.idusuario\r\n                this.nombre_estudiante = this.usuario.nombres\r\n                this.apellido_estudiante = this.usuario.apellidos\r\n                localStorage.evaluacionxLink = ''\r\n            }else{\r\n                localStorage.evaluacionxLink = this.$route.params.id\r\n                //alert('Antes de rendir esta evaluación debes iniciar sesion. Si aún no te has registrado puedes hacerlo en este momento.')\r\n                window.location.href = urlV[0]+'/'+urlV[1]+'/'+urlV[2];\r\n            }\r\n\r\n            this.$http.get(this.$server_url+'evaluacionEstudiante/'+this.id_evalRevisar).then(res => {\r\n                if(res.data.length > 0){\r\n                    this.evaluaciones = res.data\r\n                    this.validarTiempo()\r\n                    this.preguntasEvaluacionGrupo()\r\n                }else{\r\n                    alert('No existen preguntas para esta evaluación');\r\n                    window.location.href = this.urlOrigen;\r\n                }\r\n            })\r\n        },\r\n        methods: {\r\n            getEvaluacion(item){\r\n                let formData = new FormData();\r\n                    formData.append('estudiante', this.estudiante);\r\n                    formData.append('evaluacion',  item);\r\n\r\n                this.$http.post(this.$server_url+`verifRespEvaluacion`, formData).then(res => {\r\n                    this.$vs.loading.close()\r\n                    if( res.data.length > 0 ){\r\n                        this.volverActivo = true;\r\n                        this.verbtniniciar = false;\r\n                    }else{\r\n                        this.verbtniniciar = true;\r\n                    }\r\n                })\r\n            },\r\n            validarTiempo(){\r\n                if( this.evaluaciones[0].fecha_actual < this.evaluaciones[0].fecha_inicio ){\r\n                    this.volver()\r\n                }\r\n                if( this.evaluaciones[0].fecha_actual > this.evaluaciones[0].fecha_fin ){\r\n                    this.volver()\r\n                }\r\n\r\n                let dia_actual = (this.evaluaciones[0].fecha_actual).split('-')\r\n                let dia_actual1 = dia_actual[2].split(' ')\r\n                let dia_actual_1 = dia_actual1[0]\r\n\r\n                let dia_fin = (this.evaluaciones[0].fecha_fin).split('-')\r\n                let dia_fin1 = dia_fin[2].split(' ')\r\n                let dia_fin_1 = dia_fin1[0]\r\n\r\n                if( dia_actual_1 === dia_fin_1 ){\r\n                    let tiempo_fin1 = this.evaluaciones[0].fecha_fin.split(' ');\r\n                    let tiempo_fin2 = (tiempo_fin1[1]).split(':');\r\n\r\n                    let tiempo_actual1 = this.evaluaciones[0].fecha_actual.split(' ');\r\n                    let tiempo_actual2 = (tiempo_actual1[1]).split(':');\r\n\r\n                    let tiempo = ((parseInt(tiempo_fin2[0]+''+tiempo_fin2[1]+''+tiempo_fin2[2]) - parseInt(tiempo_actual2[0]+''+tiempo_actual2[1]+''+tiempo_actual2[2]))*600)-10000;//600 compensar tiempo\r\n\r\n                    if( tiempo < 0 ){\r\n                        alert('Esta evaluación ha finalizado.');\r\n                        this.volver()\r\n                    }else{\r\n                        setInterval(() => {\r\n                            alert('Esta evaluación ha finalizado.');\r\n                            this.calificarValidado()\r\n                        }, tiempo)\r\n                    }\r\n                }\r\n\r\n            },\r\n            iniciar(){\r\n                this.f_tiempo(this.evaluaciones[0].duracion);\r\n                for( var j=1; j<=this.preguntas.items.length; j++ ){\r\n                    document.getElementById(\"contenPreg\"+j).style.display = \"none\";\r\n                }\r\n                this.verbtniniciar = false;\r\n                ///muestra la primera pregunta\r\n                document.getElementById(\"contenPreg1\").style.display = \"block\";\r\n\r\n                function marcarBoton(index){\r\n                    $('#botonRespuesta'+index).addClass('marcarBotonResp');\r\n                }\r\n\r\n                ///mostrar preguntas metodo 2\r\n                var cantOpciones;\r\n                for( var i=0; i<this.preguntas.items.length; i++ ){\r\n                    cantOpciones = this.preguntas.items[i].opciones.length\r\n                    if( cantOpciones === 0 ){\r\n                        cantOpciones = 1\r\n                    }\r\n\r\n                    for( var j=0; j<cantOpciones; j++ ){\r\n                        switch (parseInt(this.preguntas.items[i].id_tipo_pregunta)) {\r\n                        case 1:\r\n                            try {\r\n                            $(\"#contenOpciones\"+(i+1)).append(`\r\n                                <input type=\"checkbox\" onclick=\"document.getElementById('botonRespuesta`+i+`').style.background='#046AE7'; document.getElementById('botonRespuesta`+i+`').style.color='white'\" id=\"${this.preguntas.items[i].opciones[j].id_opcion_pregunta}\" class=\"${this.preguntas.items[i].id} estiloInput\" name=\"${this.preguntas.items[i].id}\" value=\"${this.preguntas.items[i].opciones[j].id_opcion_pregunta}\">\r\n                                <label for=\"${this.preguntas.items[i].opciones[j].id_opcion_pregunta}\"> ${this.preguntas.items[i].opciones[j].opcion}</label><br>\r\n                            `)\r\n                            if( this.preguntas.items[i].opciones[j].img_opcion === '' || this.preguntas.items[i].opciones[j].img_opcion === 'null' || this.preguntas.items[i].opciones[j].img_opcion === null ){\r\n                            }else{\r\n                                $(\"#contenOpciones\"+(i+1)).append(`\r\n                                    <label for=\"${this.preguntas.items[i].opciones[j].id_opcion_pregunta}\">\r\n                                    <img style=\"border-radius: 5px; cursor: pointer;\" for=\"${this.preguntas.items[i].opciones[j].id_opcion_pregunta}\" src=\"${this.$data_url}archivos/img/img_preguntas/${this.preguntas.items[i].opciones[j].img_opcion}\" class=\"img-responsive mt-2 altura\" min-width=\"350px\" width=\"450px\">\r\n                                    </label><br>\r\n                                `)\r\n                            }\r\n                            } catch (error){\r\n\r\n                            }\r\n                        break;\r\n                        case 3:\r\n                            try {\r\n                            $(\"#contenOpciones\"+(i+1)).append(`\r\n                                <input type=\"radio\" onclick=\"document.getElementById('botonRespuesta`+i+`').style.background='#046AE7'; document.getElementById('botonRespuesta`+i+`').style.color='white'\" id=\"${this.preguntas.items[i].opciones[j].id_opcion_pregunta}\" class=\"${this.preguntas.items[i].id} estiloInput\" name=\"${this.preguntas.items[i].id}\" value=\"${this.preguntas.items[i].opciones[j].id_opcion_pregunta}\">\r\n                                <label for=\"${this.preguntas.items[i].opciones[j].id_opcion_pregunta}\"> ${this.preguntas.items[i].opciones[j].opcion}</label><br>\r\n                            `)\r\n                            } catch (error){\r\n\r\n                            }\r\n                        break;\r\n                        case 5:\r\n                            try {\r\n                            $(\"#contenOpciones\"+(i+1)).append(`\r\n                                <input type=\"radio\" onclick=\"document.getElementById('botonRespuesta`+i+`').style.background='#046AE7'; document.getElementById('botonRespuesta`+i+`').style.color='white'\" id=\"${this.preguntas.items[i].opciones[j].id_opcion_pregunta}\" class=\"${this.preguntas.items[i].id} estiloInput\" name=\"${this.preguntas.items[i].id}\" value=\"${this.preguntas.items[i].opciones[j].id_opcion_pregunta}\">\r\n                                <label for=\"${this.preguntas.items[i].opciones[j].id_opcion_pregunta}\"> ${this.preguntas.items[i].opciones[j].opcion}</label><br>\r\n                            `)\r\n                            if( this.preguntas.items[i].opciones[j].img_opcion === '' || this.preguntas.items[i].opciones[j].img_opcion === 'null' || this.preguntas.items[i].opciones[j].img_opcion === null ){\r\n                            }else{\r\n                                $(\"#contenOpciones\"+(i+1)).append(`\r\n                                    <label for=\"${this.preguntas.items[i].opciones[j].id_opcion_pregunta}\">\r\n                                    <img style=\"border-radius: 5px; cursor: pointer;\" for=\"${this.preguntas.items[i].opciones[j].id_opcion_pregunta}\" src=\"${this.$data_url}archivos/img/img_preguntas/${this.preguntas.items[i].opciones[j].img_opcion}\" class=\"img-responsive mt-2 altura\" min-width=\"350px\" width=\"450px\">\r\n                                    </label><br>\r\n                                `)\r\n                            }\r\n                            } catch (error){\r\n\r\n                            }\r\n                        break;\r\n                        case 2:\r\n                            try {\r\n                                $(\"#contenOpciones\"+(i+1)).append(`\r\n                                    <textarea oninput=\"document.getElementById('botonRespuesta`+i+`').style.background='#046AE7'; document.getElementById('botonRespuesta`+i+`').style.color='white'\" id=\"${this.preguntas.items[i].id}\" class=\"inputRespuesta\" rows=\"5\" placeholder=\"Escribe tu respuesta...\"></textarea>\r\n                                `)\r\n                            } catch (error) {\r\n\r\n                            }\r\n                        break;\r\n                        case 6:\r\n                            try {\r\n                                $(\"#contenOpciones\"+(i+1)).append(`\r\n                                    <textarea oninput=\"document.getElementById('botonRespuesta`+i+`').style.background='#046AE7'; document.getElementById('botonRespuesta`+i+`').style.color='white'\" id=\"${this.preguntas.items[i].id}\" class=\"inputRespuesta\" rows=\"5\" placeholder=\"Escribe tu respuesta...\"></textarea>\r\n                                `)\r\n                            } catch (error) {\r\n\r\n                            }\r\n                        break;\r\n                        default:\r\n                        break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n            },\r\n            verPreguntaSelec(index){\r\n                for( var j=1; j<=this.preguntas.items.length; j++ ){\r\n                    document.getElementById(\"contenPreg\"+j).style.display = \"none\";\r\n                }\r\n                document.getElementById(\"contenPreg\"+(index+1)).style.display = \"block\";\r\n            },\r\n            openConfirm() {\r\n                this.$vs.dialog({\r\n                    type: 'confirm',\r\n                    color: 'primary',\r\n                    title: `Confirmar`,\r\n                    text: '¿Está seguro de finalizar la evaluación?',\r\n                    accept: this.calificarValidado\r\n                })\r\n            },\r\n            calificarValidado(){\r\n                var pregsRecorrer = this.preguntas.items\r\n                var opcionesSeleccionadas = []\r\n                var opcionesSeleccionadasV = []\r\n                var califPregFinal = 0;\r\n                for( var j=0; j<pregsRecorrer.length; j++ ){\r\n                    var index = this.respuestasAcum.map(function(e) { return e.id_pregunta; }).indexOf(pregsRecorrer[j].id);\r\n\r\n                    if( pregsRecorrer[j].id_tipo_pregunta === 1 || pregsRecorrer[j].id_tipo_pregunta === 3 || pregsRecorrer[j].id_tipo_pregunta === 5  ){\r\n\r\n                        if( pregsRecorrer[j].id_tipo_pregunta === 3 || pregsRecorrer[j].id_tipo_pregunta === 5 ){\r\n                            opcionesSeleccionadas = $('input:radio[name='+pregsRecorrer[j].id+']:checked').val()\r\n                        }else{\r\n                            $('.'+pregsRecorrer[j].id+':checked').each(function() {\r\n                                opcionesSeleccionadas += $(this).val()+','\r\n                            })\r\n                        }\r\n\r\n                        try {\r\n                            var tamselecV = 0;\r\n                            opcionesSeleccionadasV = opcionesSeleccionadas.split(',')\r\n                            if(opcionesSeleccionadasV===undefined){\r\n                                opcionesSeleccionadasV=''\r\n                                tamselecV = 1\r\n                            }else{\r\n                                tamselecV = opcionesSeleccionadasV.length-1\r\n                                if(opcionesSeleccionadasV.length-1<=0){\r\n                                    tamselecV = 1\r\n                                }\r\n                            }\r\n\r\n                            var opcionRespuesta = (this.respuestasAcum[index].id_opcion_pregunta).split(',')\r\n                            var califPreg = 0;\r\n                            for( var i=0; i<tamselecV; i++ ){\r\n                                for( var k=0; k<opcionRespuesta.length; k++ ){\r\n\r\n                                    if( opcionesSeleccionadasV[i] === opcionRespuesta[k] ){\r\n                                        //alert(opcionesSeleccionadasV[i] +'==='+ opcionRespuesta[k]);\r\n                                        califPreg++\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            if( tamselecV > opcionRespuesta.length ){\r\n                                califPreg = califPreg - (tamselecV - opcionRespuesta.length)\r\n                            }\r\n                            califPregFinal = ((califPreg * this.respuestasAcum[index].puntaje_pregunta)/opcionRespuesta.length).toFixed(2);\r\n\r\n                            //alert(califPregFinal+'----califPreg: ' + califPreg+'----puntaje_pregunta: '+this.respuestasAcum[index].puntaje_pregunta+'----opcionRespuesta.length: '+opcionRespuesta.length);\r\n                        } catch (error) {\r\n\r\n                        }\r\n\r\n                    }else{//calificar preguntas tipo 2 o 6\r\n                        try {\r\n                            opcionesSeleccionadasV = (($('#'+pregsRecorrer[j].id).val()).toLowerCase().replace(/,|\\.|\\(|\\)|!|\\?|¿|\\$|/g, '')).split(' ')\r\n\r\n                            var opcionRespuesta = (this.respuestasAcum[index].opcion).split(',')\r\n                            var califPreg = 0;\r\n                            for( var i=0; i<opcionesSeleccionadasV.length; i++ ){\r\n                                for( var k=0; k<opcionRespuesta.length; k++ ){\r\n                                    if( opcionesSeleccionadasV[i] === (opcionRespuesta[k].toLowerCase()).replace(/ /gi, '') ){\r\n                                        //alert('**BIEN: '+( opcionesSeleccionadasV[i] +'==='+ (opcionRespuesta[k].toLowerCase()).replace(/ /g, '') ));\r\n                                        califPreg++\r\n                                        break\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            let cant_coincidencias = parseInt(this.respuestasAcum[index].cant_coincidencias)\r\n                            if( cant_coincidencias <= 0 ){\r\n                                cant_coincidencias = 1\r\n                            }\r\n                            let califPregEscr = ((califPreg * this.respuestasAcum[index].puntaje_pregunta)/parseInt(cant_coincidencias)).toFixed(2);\r\n\r\n                            if( califPregEscr > this.respuestasAcum[index].puntaje_pregunta ){\r\n                                califPregEscr = this.respuestasAcum[index].puntaje_pregunta\r\n                            }\r\n\r\n                            califPregFinal = califPregEscr;\r\n\r\n                            //alert(califPregFinal+'----califPreg ab: ' + califPregEscr+'----puntaje_pregunta: '+this.respuestasAcum[index].puntaje_pregunta);\r\n\r\n                        }catch (error){\r\n                        }\r\n                    }\r\n\r\n                    this.guardarRespuesta(this.id_evalRevisar, pregsRecorrer[j].id, this.usuario.idusuario, opcionesSeleccionadasV, califPregFinal)\r\n\r\n                    this.calificacion += parseFloat(califPregFinal);\r\n\r\n                    califPreg = 0\r\n                    califPregFinal = 0\r\n                    opcionesSeleccionadas = []\r\n                    opcionesSeleccionadasV= []\r\n                }\r\n\r\n                this.enviarEvaluacion();\r\n            },\r\n            guardarRespuesta(evaluacion, pregunta, estudiante, respuestas, puntaje){\r\n                let formData = new FormData();\r\n                    formData.append('evaluacion', evaluacion);\r\n                    formData.append('pregunta',  pregunta);\r\n                    formData.append('estudiante', estudiante);\r\n                    formData.append('respuesta', respuestas);\r\n                    formData.append('puntaje', puntaje);\r\n\r\n                this.$http.post(this.$server_url+'guardarRespuesta', formData)\r\n                .then(res => {\r\n                })\r\n                .catch(function (error) {\r\n                })\r\n            },\r\n            enviarEvaluacion(){\r\n                let me = this\r\n                var urlBack = window.location.href\r\n                var urlV = urlBack.split('/')\r\n                me.$vs.loading()\r\n                let formData = new FormData();\r\n                    formData.append('estudiante', me.estudiante);\r\n                    formData.append('evaluacion',  me.id_evalRevisar);\r\n                    formData.append('calificacion', me.calificacion.toFixed(2));\r\n                    formData.append('grupo', me.grupo_estudiante);\r\n\r\n                this.$http.post(this.$server_url+'respEvaluacion', formData)\r\n                .then(res => {\r\n                    me.$vs.loading.close()\r\n                    localStorage.setItem('previsualizar_eval', 0);\r\n                    window.location.href = urlV[0]+'/'+urlV[1]+'/'+urlV[2]+'/revisarevaluacion';\r\n                })\r\n                .catch(function (error) {\r\n                    //window.location.href = me.urlOrigen;\r\n                })\r\n            },\r\n            volver(){\r\n                window.location.href = this.urlOrigen;\r\n            },\r\n            f_tiempo(numero) {\r\n                let me = this;\r\n                var n = numero * 60;\r\n                x = setInterval(function() {\r\n                    n--;\r\n                    var now = n * 1000;\r\n                    var distance = n + now;\r\n                    var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n                    var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n                    var seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n                    $(\".reloj\").html(hours + \" : \" + minutes + \" : \" + seconds + \"\");\r\n                    if (distance < 60000) {\r\n                        $(\".reloj\").css('color', '#FB2452');\r\n                    }\r\n                    if (distance < 0) {\r\n                        $(\".reloj\").html(\"Fin del tiempo\");\r\n                        me.calificarValidado()\r\n                    }\r\n                }, 1000);\r\n            },\r\n            preguntasEvaluacionGrupo(){\r\n                var grupoRand = Math.floor(Math.random() * ( (parseInt(this.evaluaciones[0].grupos_evaluacion)+1) - 1)) + 1;\r\n                localStorage.setItem('grupo_estudiante', grupoRand);\r\n                this.grupo_estudiante = grupoRand;\r\n                this.verRespuestasGrupo();\r\n                let formData = new FormData();\r\n                formData.append('grupo', this.grupo_estudiante);\r\n                formData.append('evaluacion',  this.id_evalRevisar);\r\n                this.$http.post(this.$server_url+`pregEvaluacionGrupo`, formData).then(res => {\r\n                    if(res.data.length===0){\r\n                        this.contadorIntentosgrupo++\r\n                        if( this.contadorIntentosgrupo < 2 ){\r\n                            grupoRand = Math.floor(Math.random() * ( (parseInt(this.evaluaciones[0].grupos_evaluacion)+1) - 1)) + 1;\r\n                            localStorage.setItem('grupo_estudiante', grupoRand);\r\n                            this.grupo_estudiante = grupoRand;\r\n                            this.preguntasEvaluacionGrupo()\r\n                            this.verRespuestasGrupo();\r\n                        }else{\r\n                            alert('No existen preguntas para esta evaluación.');\r\n                            window.location.href = this.urlOrigen;\r\n                        }\r\n                    }else{\r\n                        this.preguntas = res.data;\r\n                        for( var i=0; i<this.preguntas.items.length; i++ ){\r\n                            if( this.preguntas.items[i].id_tipo_pregunta===2 || this.preguntas.items[i].id_tipo_pregunta===6 ){\r\n                                this.preguntas_escritas.push(this.preguntas.items[i].descripcion)\r\n                                this.tipo_preguntas_escritas.push(this.preguntas.items[i].id_tipo_pregunta)\r\n                            }\r\n                        }\r\n\r\n                        this.getEvaluacion(this.id_evalRevisar);\r\n                    }\r\n                })\r\n            },\r\n            verRespuestasGrupo(){\r\n                let formData = new FormData();\r\n                formData.append('grupo', this.grupo_estudiante);\r\n                formData.append('evaluacion',  this.id_evalRevisar);\r\n\r\n                this.$http.post(this.$server_url+'getRespuestasAcum', formData).then(res => {\r\n                    this.respuestasAcum = res.data\r\n                })\r\n            },\r\n            verificarCurso(){\r\n                let me = this\r\n                let formData = new FormData();\r\n                    formData.append(\"codigo\", me.vectorLink[1]);\r\n                    formData.append(\"idusuario\", me.usuario.idusuario);\r\n                this.$http.post(this.$server_url+'verificarCursoEstudiante', formData)\r\n                .then(function (res) {\r\n                    if( res.data != '' ){\r\n                    }else{\r\n                        me.addClase()\r\n                    }\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n\r\n            },\r\n            addClase(){\r\n                let me = this\r\n                let formData = new FormData();\r\n                    formData.append(\"codigo\", me.vectorLink[1]);\r\n                    formData.append(\"idusuario\", me.usuario.idusuario);\r\n\r\n                this.$http.post(this.$server_url+'addClase', formData)\r\n                .then(function (res) {\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n            }\r\n\r\n        }\r\n    }\r\n</script>\r\n\r\n<style>\r\n.inputRespuesta{\r\n    height: 80px;\r\n    width: 100%;\r\n    border-radius: 5px;\r\n    border: 1px solid #d5d5d5;\r\n    font-size: 18px;\r\n    padding: 5px 10px 5px 10px;\r\n    resize: vertical;\r\n}\r\n\r\n.marcarBotonResp{\r\n    background-color: #046AE7 !important;\r\n    color: white !important;\r\n}\r\n\r\n.botonPaginacion:hover{\r\n    background-color: #C8DFFA !important;\r\n    color: #046AE7 !important;\r\n}\r\n\r\n.estiloInput{\r\n    margin-bottom: 15px;\r\n    -ms-transform: scale(1.5); /* IE 9 */\r\n    -webkit-transform: scale(1.5); /* Chrome, Safari, Opera */\r\n    transform: scale(1.5);\r\n    margin-right: 10px;\r\n}\r\n\r\n.altura{\r\n    max-height: 350px;\r\n}\r\n</style>\r\n"]}]}