{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\layouts\\components\\navbar\\components\\NotificationDropDown.vue?vue&type=style&index=0&id=373266c0&scoped=true&lang=css","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\layouts\\components\\navbar\\components\\NotificationDropDown.vue","mtime":1712682815236},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n.contador{\n     background: #06d755;\n     color: #fff;\n     min-width: 20px;\n     height: 20px;\n     border-radius: 50%;\n     display: flex;\n     justify-content: center;\n     align-items: center;\n     font-size: 0.75rem;\n }\n",{"version":3,"sources":["NotificationDropDown.vue"],"names":[],"mappings":";AAgdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"NotificationDropDown.vue","sourceRoot":"src/layouts/components/navbar/components","sourcesContent":["<template>\r\n<!-- NOTIFICATIONS -->\r\n    <div>\r\n        <!--NOTIFICACIONES PARA PEDIDOS-->\r\n        <vs-dropdown vs-custom-content vs-trigger-click class=\"cursor-pointer\" @click=\"getNotificaciones()\" v-if=\"usuario.id_group == 11 || userRoot == true || usuario.id_group == 23 || usuario.id_group == 22\">\r\n            <div style=\"display: none;\">\r\n                <screenNotificacionVue :cambiarNotificacion=\"cambiarNotificacion\" @ChangecantidadMensajes = \"changeCantidadMensajes\" @rechargeVerificaciones=\"getNotificacionesVerificaciones\"/>\r\n            </div>\r\n            <div v-if=\"contadorNoLeidos >  0\">\r\n            <p>\r\n                <feather-icon  icon=\"BellIcon\" style=\"background-color: #06d755;padding: 3px; border-radius: 50%;border:5px solid #4DE346;\"\r\n                class=\"cursor-pointer mt-1 sm:mr-6 mr-2\" :badge=\"contadorNoLeidos\"/>\r\n            </p>\r\n            </div>\r\n            <div v-else>\r\n                <feather-icon  icon=\"BellIcon\"\r\n                class=\"cursor-pointer mt-1 sm:mr-6 mr-2\" />\r\n            </div>\r\n            <vs-dropdown-menu class=\"notification-dropdown dropdown-custom vx-navbar-dropdown\">\r\n                    <div  class=\"notification-top text-center p-5 bg-success text-white\">\r\n                        <h3 class=\"text-white\">Notificaciones</h3>\r\n                        <p class=\"opacity-75\">{{tmparregloNotificaciones.length == 0 ?'No hay Notificaciones':'lista de notificaciones'}}</p>\r\n                    </div>\r\n                <component :is=\"scrollbarTag\" ref=\"mainSidebarPs\" class=\"scroll-area--nofications-dropdown p-0 mb-10\" :settings=\"settings\" :key=\"$vs.rtl\">\r\n                    <ul class=\"bordered-items\" v-if=\"tmparregloNotificaciones.length > 0\">\r\n                        <li v-for=\"ntf in tmparregloNotificaciones\" :key=\"ntf.index\" class=\"flex justify-between px-4 py-4 notification cursor-pointer\">\r\n                            <div class=\"flex items-start\" @click=\"popupNotificaciones = true;\">\r\n                                <b v-if=\"ntf.contadorVistos > 0\" class=\"contador\">{{  ntf.contadorVistos }}</b>\r\n                                <!-- <feather-icon icon=\"FileTextIcon\"></feather-icon> -->\r\n                                <div class=\"mx-2\" @click=\"verNotificacion(ntf)\">\r\n                                    <!-- <span class=\"font-medium block notification-title\" :class=\"[`text-${ntf.contadorMensajes[0].comentario}`]\">{{ ntf.tipo }}</span> -->\r\n                                    <h4  style=\"font-size: 12px!important;\">{{ ntf.nombreInstitucion }}  </h4>\r\n\r\n                                    <small>{{ ntf.contadorMensajes[0].comentario.substring(0,35) }}...</small>\r\n                                    <p class=\"mt-4\" style=\"font-size: 10px!important;\">Pedido #{{ntf.id_pedido}}</p>\r\n                                    <p style=\"font-size: 10px!important;\" v-if=\"usuario.id_group == 11\">Administrador ({{ getAdministradorMensaje(ntf.contadorMensajes) }})</p>\r\n                                    <p v-else style=\"font-size: 10px!important;\">{{ ntf.asesor }}</p>\r\n                                    <p style=\"font-size: 11px;\">{{ntf.ciudad}}</p>\r\n                                </div>\r\n                            </div>\r\n                            <small class=\"mt-1 whitespace-no-wrap\">{{ elapsedTime(ntf.contadorMensajes[0].created_at) }}</small>\r\n                        </li>\r\n                    </ul>\r\n                </component>\r\n                <!-- <component :is=\"scrollbarTag\" ref=\"mainSidebarPs\" class=\"scroll-area--nofications-dropdown p-0 mb-10\" :settings=\"settings\" :key=\"$vs.rtl\">\r\n                    <ul class=\"bordered-items\">\r\n                        <li v-for=\"ntf in tareasp\" :key=\"ntf.index\" class=\"flex justify-between px-4 py-4 notification cursor-pointer\">\r\n                            <div class=\"flex items-start\">\r\n                                <feather-icon icon=\"FileTextIcon\" :svgClasses=\"[`text-${ntf.nombre}`, 'stroke-current mr-1 h-6 w-6']\"></feather-icon>\r\n                                <div class=\"mx-2\">\r\n                                    <span class=\"font-medium block notification-title\" :class=\"[`text-${ntf.nombre}`]\">{{ ntf.title }}</span>\r\n                                    <small>{{ ntf.nombre }}</small>\r\n                                </div>\r\n                            </div>\r\n                            <small class=\"mt-1 whitespace-no-wrap\">{{ elapsedTime(ntf.fecha_inicio) }}</small>\r\n                        </li>\r\n                    </ul>\r\n                </component> -->\r\n                <div class=\"\r\n                checkout-footer\r\n                fixed\r\n                bottom-0\r\n                rounded-b-lg\r\n                text-primary\r\n                w-full\r\n                p-2\r\n                font-semibold\r\n                text-center\r\n                border\r\n                border-b-0\r\n                border-l-0\r\n                border-r-0\r\n                border-solid\r\n                d-theme-border-grey-light\r\n                cursor-pointer\">\r\n                    <span></span>\r\n                </div>\r\n            </vs-dropdown-menu>\r\n            <!--MODAL CHAT NOTIFICACIONES-->\r\n            <vs-popup classContent=\"popup-example\" fullscreen title=\"Mensajes asesor - facturador\" :active.sync=\"popupNotificaciones\" @close=\"RecargarNotificaciones()\">\r\n                <screenNotificacionVue :cambiarNotificacion=\"cambiarNotificacion\"/>\r\n            </vs-popup>\r\n        </vs-dropdown>\r\n        <!--NOTIFICACIONES PARA VERIFICACIONES -->\r\n        <vs-dropdown vs-custom-content vs-trigger-click class=\"cursor-pointer\" @click=\"getNotificacionesVerificaciones()\" v-if=\"userRoot == true || usuario.id_group == 23 || usuario.id_group == 22\">\r\n            <div>\r\n                <div v-if=\"arregloNotificacionVerificacion.length >  0\">\r\n                    <p>\r\n                        <feather-icon  icon=\"ActivityIcon\" style=\"background-color: #06d755;padding: 3px; border-radius: 50%;border:5px solid #4DE346;\"\r\n                        class=\"cursor-pointer mt-1 sm:mr-6 mr-2\" :badge=\"arregloNotificacionVerificacion.length\"/>\r\n                    </p>\r\n                </div>\r\n                <div v-else>\r\n                    <feather-icon  icon=\"ActivityIcon\"\r\n                    class=\"cursor-pointer mt-1 sm:mr-6 mr-2\" />\r\n                </div>\r\n                <vs-dropdown-menu class=\"notification-dropdown dropdown-custom vx-navbar-dropdown\">\r\n                        <div  class=\"notification-top text-center p-5 bg-success text-white\">\r\n                            <h3 class=\"text-white\">Notificaciones</h3>\r\n                            <p class=\"opacity-75\">{{arregloNotificacionVerificacion.length == 0 ?'No hay Solicitudes de verificaciones':'Solicitudes de verificaciones'}}</p>\r\n                        </div>\r\n                    <component :is=\"scrollbarTag\" ref=\"mainSidebarPs\" class=\"scroll-area--nofications-dropdown p-0 mb-10\" :settings=\"settings\" :key=\"$vs.rtl\">\r\n                        <ul class=\"bordered-items\" v-if=\"arregloNotificacionVerificacion.length > 0\">\r\n                            <li v-for=\"ntf in arregloNotificacionVerificacion\" :key=\"ntf.index\" class=\"flex justify-between px-4 py-4 notification cursor-pointer\">\r\n                                <div class=\"flex items-start\">\r\n                                    <feather-icon icon=\"FileTextIcon\"></feather-icon>\r\n                                    <div class=\"mx-2\">\r\n                                        <h4  style=\"font-size: 12px!important;\">{{ ntf.nombreInstitucion }}  </h4>\r\n                                        <p class=\"mt-4\" style=\"font-size: 10px!important;\">Contrato: {{ntf.contrato_generado}}</p>\r\n                                        <p style=\"font-size: 10px!important;\">{{ ntf.asesor }}</p>\r\n                                        <p style=\"font-size: 11px;\">{{ntf.ciudad}}</p>\r\n                                        <p class=\"mt-1\"></p>\r\n                                        <vs-chip v-if=\"ntf.tipo_venta == 1\" color=\"dark\">Venta: directa</vs-chip>\r\n                                        <vs-chip v-if=\"ntf.tipo_venta == 2\" color=\"dark\">Venta: Lista</vs-chip>\r\n                                    </div>\r\n                                </div>\r\n                                <small class=\"mt-1 whitespace-no-wrap\">{{ elapsedTime(ntf.fecha_solicita_verificacion) }}</small>\r\n                            </li>\r\n                        </ul>\r\n                    </component>\r\n                    <div class=\"\r\n                    checkout-footer\r\n                    fixed\r\n                    bottom-0\r\n                    rounded-b-lg\r\n                    text-primary\r\n                    w-full\r\n                    p-2\r\n                    font-semibold\r\n                    text-center\r\n                    border\r\n                    border-b-0\r\n                    border-l-0\r\n                    border-r-0\r\n                    border-solid\r\n                    d-theme-border-grey-light\r\n                    cursor-pointer\">\r\n                        <span></span>\r\n                    </div>\r\n                </vs-dropdown-menu>\r\n            </div>\r\n        </vs-dropdown>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n// import io from 'socket.io-client';\r\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar'\r\nimport Vue from 'vue'\r\nimport axios from 'axios'\r\nimport moment from \"moment\";\r\nimport screenNotificacionVue from '../../../../views/pedidos/notificaciones/screenNotificacion.vue'\r\nVue.use(axios)\r\nVue.filter('fecha', function (value) {\r\n    var fechaActual = moment().format('YYYY-MM-DD')\r\n    var fecha       = moment(String(value)).format('YYYY-MM-DD')\r\n    var fechaInicio = new Date(fecha).getTime();\r\n    var fechaFin    = new Date(fechaActual).getTime();\r\n    var diff = fechaFin - fechaInicio;\r\n    const resultado = diff/(1000*60*60*24);\r\n    if(resultado == 0){\r\n        return \"hoy\"\r\n    }else{\r\n        let dato = \"Hace \"+resultado +\" dias\"\r\n        return dato\r\n    }\r\n});\r\nexport default {\r\n    components: {\r\n        VuePerfectScrollbar,\r\n        screenNotificacionVue,\r\n    },\r\n    created() {\r\n        let me = this;\r\n        this.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n    },\r\n    data() {\r\n        return {\r\n            // socket: io(\"http://localhost:3000/\"),\r\n            // socket: io(\"https://socket.prolipadigital.com.ec/\"),\r\n            condicion:0,\r\n            notifications:[],\r\n            arregloNotificaciones:[],\r\n            tmparregloNotificaciones:[],\r\n            popupNotificaciones:false,\r\n            cambiarNotificacion:false,\r\n            arregloNotificacionVerificacion:[],\r\n            contadorVerificaciones:0,\r\n            contadorNoLeidos:0,\r\n            usuario: [],\r\n            tareasp: [],\r\n            tarease: [],\r\n            userRoot: false,\r\n            unreadNotifications: [{\r\n                    index: 0,\r\n                    title: 'New Message',\r\n                    msg: 'Are your going to meet me tonight?',\r\n                    icon: 'MessageSquareIcon',\r\n                    time: this.randomDate({\r\n                        sec: 10\r\n                    }),\r\n                    category: 'primary'\r\n                },\r\n                {\r\n                    index: 1,\r\n                    title: 'New Order Recieved',\r\n                    msg: 'You got new order of goods.',\r\n                    icon: 'PackageIcon',\r\n                    time: this.randomDate({\r\n                        sec: 40\r\n                    }),\r\n                    category: 'success'\r\n                }\r\n            ],\r\n            settings: {\r\n                maxScrollbarLength: 60,\r\n                wheelSpeed: .60\r\n            }\r\n        }\r\n    },\r\n    mounted() {\r\n        let me = this\r\n        if(me.usuario.id_group == 1 || me.usuario.id_group == 22 || me.usuario.id_group == 23){\r\n          this.getNotificaciones();\r\n          this.getNotificacionesVerificaciones()\r\n          me.getUserRoot(me.usuario);\r\n        }\r\n    },\r\n    computed: {\r\n        scrollbarTag() {\r\n            return this.$store.getters.scrollbarTag\r\n        },\r\n    },\r\n    methods: {\r\n        getUserRoot(dato) {\r\n            let me = this;\r\n            me.$vs.loading()\r\n            this.$http.get(this.$server_url + 'permisos/' + dato.idusuario)\r\n                .then((result) => {\r\n                    console.log('pedido admin screen', result.data)\r\n                    if (result.data.length > 0) {\r\n                        me.userRoot = true;\r\n                    }\r\n                    me.$vs.loading.close()\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err)\r\n                })\r\n        },\r\n        RecargarNotificaciones(){\r\n            let me = this;\r\n            me.cambiarNotificacion = !me.cambiarNotificacion\r\n        },\r\n        changeCantidadMensajes(e){\r\n            let me = this\r\n            me.contadorNoLeidos = e\r\n        },\r\n        getAdministradorMensaje(tr){\r\n            var resultado = \"\"\r\n            for(let i =0; i<tr.length;i++){\r\n            if(tr[i].id_group == \"23\" || tr[i].id_group == \"22\" || tr[i].id_group == \"1\"){\r\n                resultado = tr[i].usuario\r\n                break;\r\n            }\r\n            }\r\n            return resultado;\r\n        },\r\n        //  socketinit(){\r\n        //     let me = this;\r\n        //     try {\r\n        //         this.socket.on('enviar',(arg) => {\r\n        //         this.getNotifications();\r\n        //             if(arg == \"Solicitud libros\"){\r\n\r\n        //                 if(me.usuario.id_group == 1){\r\n        //                     this.condicion = 1;\r\n        //                     me.$vs.notify({\r\n        //                     text:'Un docente ha solicitado libros',\r\n        //                     color:'success',\r\n        //                     iconPack: 'feather',\r\n        //                     icon:'icon-file',\r\n        //                     time:5000\r\n        //                     })\r\n        //                     return\r\n        //                 }\r\n        //             }else if(arg == 'Documento Ministerial'){\r\n        //                 this.condicion = 1;\r\n        //                 if(me.usuario.id_group == 1 || me.usuario.id_group == 6){\r\n        //                     me.$vs.notify({\r\n        //                     text:'Se ha creado un nuevo documento ministerial',\r\n        //                     color:'success',\r\n        //                     iconPack: 'feather',\r\n        //                     icon:'icon-file',\r\n        //                     time:5000\r\n        //                     })\r\n        //                     return\r\n        //                 }\r\n        //             }\r\n\r\n        //         });\r\n        //     } catch (error) {\r\n        //         console.log(error)\r\n        //     }\r\n        // },\r\n        getNotificaciones(){\r\n            let me = this\r\n            var tipo = 0\r\n            if(me.usuario.id_group == 11){\r\n                //envia el asesor\r\n                tipo = 0\r\n            }else{\r\n                //envia un facturador\r\n                tipo = 1\r\n            }\r\n            this.$http.get(this.$server_url+'verNotificacionPedidos?tipo='+tipo)\r\n            .then(function (res) {\r\n                let datos = res.data\r\n                var resultado = 0\r\n                if(datos.length > 0){\r\n                if(me.usuario.id_group == 11){\r\n                me.arregloNotificaciones = datos.filter(p => p.id_asesor == me.usuario.idusuario)\r\n                }else{\r\n                    me.arregloNotificaciones = datos\r\n                }\r\n                me.tmparregloNotificaciones = me.arregloNotificaciones\r\n                //contar No vistos\r\n                resultado =  me.arregloNotificaciones.reduce((acc,valor) =>{\r\n                const respuesta = acc+ valor.contadorVistos\r\n                return respuesta\r\n                },0)\r\n                }\r\n                me.contadorNoLeidos = resultado\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error + ' error');\r\n            })\r\n        },\r\n        getNotificacionesVerificaciones(){\r\n            let me = this\r\n            var url = \"\"\r\n            if(me.usuario.id_group == 22){\r\n               url = this.$server_url+'notificacionesVerificaciones?idFacturador='+me.usuario.idusuario\r\n            }else{\r\n               url = this.$server_url+'notificacionesVerificaciones'\r\n            }\r\n            this.$http.get(url)\r\n            .then(function (res) {\r\n               me.arregloNotificacionVerificacion = res.data\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error + ' error');\r\n            })\r\n        },\r\n        verNotificacion(tr){\r\n            let me = this;\r\n            if(tr.tipo == 'Documento Ministerial'){\r\n                me.viewDocumento(tr.id_created)\r\n            }\r\n        },\r\n        viewDocumento(id){\r\n            let me = this;\r\n            this.$http.get(this.$server_url+'getDocumentos/'+id)\r\n                .then(function (res) {\r\n                    console.log('xd',res.data.items[0])\r\n                    localStorage.setItem('doc', JSON.stringify(res.data.items[0]));\r\n                    me.$router.push('/ver/viewDocument');\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                })\r\n        },\r\n        getCurso() {\r\n            let me = this;\r\n            this.$http.get(this.$server_url+'estudianteCurso?idusuario=' + me.usuario.idusuario)\r\n                .then(function (response) {\r\n                    me.curso = response.data;\r\n                    me.curso.forEach(element => {\r\n                        this.$http.get(this.$server_url+\"tareaEstudianteRealizada?idcurso=\" + element.idcurso + \"&idusuario=\" + me.usuario.idusuario).then(function (response) {\r\n                                var respuesta = response.data;\r\n                                respuesta.forEach(element => {\r\n                                    me.tarease.push(element)\r\n                                });\r\n                            })\r\n                            .catch(function (error) {});\r\n                        this.$http.get(this.$server_url+\"tareaEstudiantePendiente?idcurso=\" + element.idcurso + \"&idusuario=\" + me.usuario.idusuario).then(function (response) {\r\n                                var respuesta = response.data;\r\n                                respuesta.forEach(element => {\r\n                                    me.tareasp.push(element)\r\n                                });\r\n\r\n                            })\r\n                            .catch(function (error) {\r\n\r\n                            });\r\n                    });\r\n                })\r\n                .catch(function (error) {})\r\n        },\r\n        elapsedTime(startTime) {\r\n            const x = new Date(startTime)\r\n            const now = new Date()\r\n            let timeDiff = now - x\r\n            timeDiff /= 1000\r\n\r\n            const seconds = Math.round(timeDiff)\r\n            timeDiff = Math.floor(timeDiff / 60)\r\n\r\n            const minutes = Math.round(timeDiff % 60)\r\n            timeDiff = Math.floor(timeDiff / 60)\r\n\r\n            const hours = Math.round(timeDiff % 24)\r\n            timeDiff = Math.floor(timeDiff / 24)\r\n\r\n            const days = Math.round(timeDiff % 365)\r\n            timeDiff = Math.floor(timeDiff / 365)\r\n\r\n            const years = timeDiff\r\n\r\n            if (years > 0) {\r\n                return `${years + (years > 1 ? ' Años ' : ' Año ')}`\r\n            } else if (days > 0) {\r\n                return `Hace ${days + (days > 1 ? ' Dias ' : ' Dia ')}`\r\n            } else if (hours > 0) {\r\n                return `Hace ${hours + (hours > 1 ? ' Horas ' : ' Hora ')}`\r\n            } else if (minutes > 0) {\r\n                return `Hace ${minutes + (minutes > 1 ? ' Minutos ' : ' Minuto ')}`\r\n            } else if (seconds > 0) {\r\n                return 'Hace '+ seconds + (seconds > 1 ? ' segundos' : 'justo ahora')\r\n            }\r\n\r\n            return ' Justo Ahora'\r\n        },\r\n        // Method for creating dummy notification time\r\n        randomDate({\r\n            hr,\r\n            min,\r\n            sec\r\n        }) {\r\n            const date = new Date()\r\n\r\n            if (hr) date.setHours(date.getHours() - hr)\r\n            if (min) date.setMinutes(date.getMinutes() - min)\r\n            if (sec) date.setSeconds(date.getSeconds() - sec)\r\n\r\n            return date\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n   .contador{\r\n        background: #06d755;\r\n        color: #fff;\r\n        min-width: 20px;\r\n        height: 20px;\r\n        border-radius: 50%;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        font-size: 0.75rem;\r\n    }\r\n</style>\r\n"]}]}