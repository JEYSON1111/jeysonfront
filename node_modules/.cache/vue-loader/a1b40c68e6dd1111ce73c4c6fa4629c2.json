{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\evaluaciones\\PreguntasInstituciones\\ListadoPreguntasAsignadas.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\evaluaciones\\PreguntasInstituciones\\ListadoPreguntasAsignadas.vue","mtime":1712682815864},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nimport vSelect from 'vue-select'\r\nconst TablaPreguntasVue = () => import('./TablaPreguntas.vue')\r\nexport default {\r\n  name: 'ListadoPreguntasAsignadas',\r\n  components: {\r\n    'v-select': vSelect,\r\n    TablaPreguntasVue,\r\n  },\r\n  data() {\r\n    return {\r\n      institucionSelected: '',\r\n      arrayPreguntas: [],\r\n      asignaturaSelected: '',\r\n    };\r\n  },\r\n  mounted() {\r\n    // Code to run when the component is mounted\r\n  },\r\n  props: {\r\n    arrayInstituciones: {\r\n      type: Array,\r\n      default: () => [],\r\n    },\r\n    asignaturas:{\r\n      type: Array,\r\n      default: () => [],\r\n    }\r\n  },\r\n  methods: {\r\n    // Your methods here\r\n    obtenerPreguntas(){\r\n      let me = this;\r\n      me.arrayPreguntas = [];\r\n      if(me.institucionSelected == '' || me.institucionSelected == null || me.institucionSelected == undefined){\r\n        me.$vs.notify({\r\n          title: 'Error',\r\n          text: 'Seleccione una institución',\r\n          color: 'danger',\r\n          iconPack: 'feather',\r\n          icon: 'icon-alert-circle'\r\n        });\r\n        return;\r\n      }\r\n      if(me.asignaturaSelected == '' || me.asignaturaSelected == null || me.asignaturaSelected == undefined){\r\n        me.$vs.notify({\r\n          title: 'Error',\r\n          text: 'Seleccione una asignatura',\r\n          color: 'danger',\r\n          iconPack: 'feather',\r\n          icon: 'icon-alert-circle'\r\n        });\r\n        return;\r\n      }\r\n      let formData = new FormData();\r\n      formData.append('institucion_id', me.institucionSelected);\r\n      formData.append('id_asignatura',  me.asignaturaSelected.id);\r\n      me.$vs.loading({color: 'rgb(11, 189, 135)'});\r\n      this.$http.post(this.$server_url + 'preguntas_x_institucion',formData).then(res => {\r\n        me.$vs.loading.close();\r\n        me.arrayPreguntas = res.data;\r\n        if(me.arrayPreguntas.length == 0){\r\n          me.$vs.notify({\r\n            title: 'Advertencia',\r\n            text: 'No hay preguntas asignadas a esta institución',\r\n            color: 'danger',\r\n            iconPack: 'feather',\r\n            icon: 'icon-alert-circle'\r\n          });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        me.$vs.loading.close();\r\n        console.log(err);\r\n        me.$vs.notify({\r\n          title: 'Error',\r\n          text: 'Error al obtener las preguntas',\r\n          color: 'danger',\r\n          iconPack: 'feather',\r\n          icon: 'icon-alert-circle'\r\n        });\r\n      });\r\n    },\r\n  },\r\n\r\n};\r\n",{"version":3,"sources":["ListadoPreguntasAsignadas.vue"],"names":[],"mappings":";AAiCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"ListadoPreguntasAsignadas.vue","sourceRoot":"src/views/evaluaciones/PreguntasInstituciones","sourcesContent":["<template>\r\n  <vx-card title=\"Preguntas Asignadas:\" title-color=\"success\" subtitle=\"Seleccione la institución\">\r\n    <!-- Your HTML code here -->\r\n    <div>\r\n      <div class=\"vx-row\">\r\n        <div class=\"vx-col w-full sm:w-1/2 md:w-1/2 lg:w-1/2 xl:w-1/2 mb-6\">\r\n          <small>Asignatura</small>\r\n          <v-select class=\"mb-2\" v-model=\"asignaturaSelected\" :options=\"asignaturas\" @input=\"arrayPreguntas=[];\"/>\r\n        </div>\r\n        <div class=\"vx-col w-full sm:w-1/2 md:w-1/2 lg:w-1/1 xl:w-1/2 mb-6\">\r\n          <small>Institución</small>\r\n          <div class=\"flex\">\r\n            <v-select :options=\"arrayInstituciones\" @input=\"obtenerPreguntas();\" :reduce=\"arrayInstituciones => arrayInstituciones.idinstitucion\" label=\"nombreinstitucion\" class=\"w-full\" v-model=\"institucionSelected\" />\r\n            <vs-button icon=\"search\" class=\"ml-1\" @click=\"obtenerPreguntas();\">Buscar</vs-button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <TablaPreguntasVue\r\n        :arrayPreguntas=\"arrayPreguntas\"\r\n        @changeAsignar=\"changeAsignar\"\r\n        :isMultipleEnabled=\"Boolean(false)\"\r\n        :isbtnQuitar=\"Boolean(true)\"\r\n        :acciones=\"Boolean(true)\"\r\n        @changeHandle=\"obtenerPreguntas\"\r\n        />\r\n      </div>\r\n      <br><br><br><br><br><br>\r\n     </div>\r\n  </vx-card>\r\n</template>\r\n\r\n<script>\r\nimport vSelect from 'vue-select'\r\nconst TablaPreguntasVue = () => import('./TablaPreguntas.vue')\r\nexport default {\r\n  name: 'ListadoPreguntasAsignadas',\r\n  components: {\r\n    'v-select': vSelect,\r\n    TablaPreguntasVue,\r\n  },\r\n  data() {\r\n    return {\r\n      institucionSelected: '',\r\n      arrayPreguntas: [],\r\n      asignaturaSelected: '',\r\n    };\r\n  },\r\n  mounted() {\r\n    // Code to run when the component is mounted\r\n  },\r\n  props: {\r\n    arrayInstituciones: {\r\n      type: Array,\r\n      default: () => [],\r\n    },\r\n    asignaturas:{\r\n      type: Array,\r\n      default: () => [],\r\n    }\r\n  },\r\n  methods: {\r\n    // Your methods here\r\n    obtenerPreguntas(){\r\n      let me = this;\r\n      me.arrayPreguntas = [];\r\n      if(me.institucionSelected == '' || me.institucionSelected == null || me.institucionSelected == undefined){\r\n        me.$vs.notify({\r\n          title: 'Error',\r\n          text: 'Seleccione una institución',\r\n          color: 'danger',\r\n          iconPack: 'feather',\r\n          icon: 'icon-alert-circle'\r\n        });\r\n        return;\r\n      }\r\n      if(me.asignaturaSelected == '' || me.asignaturaSelected == null || me.asignaturaSelected == undefined){\r\n        me.$vs.notify({\r\n          title: 'Error',\r\n          text: 'Seleccione una asignatura',\r\n          color: 'danger',\r\n          iconPack: 'feather',\r\n          icon: 'icon-alert-circle'\r\n        });\r\n        return;\r\n      }\r\n      let formData = new FormData();\r\n      formData.append('institucion_id', me.institucionSelected);\r\n      formData.append('id_asignatura',  me.asignaturaSelected.id);\r\n      me.$vs.loading({color: 'rgb(11, 189, 135)'});\r\n      this.$http.post(this.$server_url + 'preguntas_x_institucion',formData).then(res => {\r\n        me.$vs.loading.close();\r\n        me.arrayPreguntas = res.data;\r\n        if(me.arrayPreguntas.length == 0){\r\n          me.$vs.notify({\r\n            title: 'Advertencia',\r\n            text: 'No hay preguntas asignadas a esta institución',\r\n            color: 'danger',\r\n            iconPack: 'feather',\r\n            icon: 'icon-alert-circle'\r\n          });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        me.$vs.loading.close();\r\n        console.log(err);\r\n        me.$vs.notify({\r\n          title: 'Error',\r\n          text: 'Error al obtener las preguntas',\r\n          color: 'danger',\r\n          iconPack: 'feather',\r\n          icon: 'icon-alert-circle'\r\n        });\r\n      });\r\n    },\r\n  },\r\n\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Your component styles here */\r\n</style>\r\n"]}]}