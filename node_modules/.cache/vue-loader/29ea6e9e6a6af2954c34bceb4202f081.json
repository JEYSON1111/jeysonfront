{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\pedidos\\components\\formato\\FormatoPedidos.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\pedidos\\components\\formato\\FormatoPedidos.vue","mtime":1712682816304},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nimport seriesBasicasVue from '../seriesBasicas.vue'\r\nexport default{\r\n    components:{\r\n        seriesBasicasVue,\r\n    },\r\n    data(){\r\n        return{\r\n            usuario:[],\r\n            pvp_areas:[],\r\n            datos:[],\r\n            series_plan_lector:[],\r\n            porcentaje_pedido:0,\r\n            id_periodo:0,\r\n            mostrarConfiguracion:false,\r\n        }\r\n    },\r\n    props:{\r\n        enviarPeriodo:{\r\n            type:Object,\r\n            default:{},\r\n        },\r\n        arregloSeries:{\r\n            type:Array,\r\n            default:[],\r\n        },\r\n    },\r\n    created(){\r\n        let me = this;\r\n        me.usuario = JSON.parse(localStorage.getItem(\"usuario\"))\r\n    },\r\n    mounted(){\r\n        let me = this;\r\n        me.start()\r\n    },\r\n    methods:{\r\n        start(){\r\n            let me  = this;\r\n            let item =              me.enviarPeriodo\r\n            me.porcentaje_pedido    = item.porcentaje_descuento\r\n            me.pvp_areas            = [];\r\n            me.limpiar_inputs()\r\n            me.generarAreasBasicaxPeriodo(item.idperiodoescolar)\r\n            me.id_periodo           = item.idperiodoescolar\r\n            me.get_pvp_periodo(item.idperiodoescolar)\r\n            me.getLibrosPlanLector(item.idperiodoescolar) /// plan lector\r\n        },\r\n        //para guardar el pocentaje de anticipo\r\n        savePorcentaPedido(){\r\n            let me = this;\r\n            this.$http.get(this.$server_url+'changePorcentajeAnticipo?id_periodo='+me.id_periodo+'&porcentaje_pedido='+me.porcentaje_pedido)\r\n            .then(res => {\r\n            me.$vs.notify({\r\n            text:'Se guardo correctamente el porcentaje',\r\n            color:'primary',\r\n            iconPack: 'feather',\r\n            icon:'icon-check'})\r\n            })\r\n        },\r\n        getLibrosPlanLector(id_periodo){\r\n            let me = this\r\n            this.$http.get(this.$server_url+'get_libros_plan_pedido/6/'+id_periodo)\r\n            .then(res => {\r\n                me.series_plan_lector = res.data\r\n            })\r\n        },\r\n        limpiar_inputs(){\r\n            var list_inputs = document.getElementsByClassName('input_pvp');\r\n            for (var n = 0; n < list_inputs.length; n++) {\r\n                document.getElementsByClassName('input_pvp')[n].value = '';\r\n            }\r\n            var list_checks = document.getElementsByClassName('checks_lvl');\r\n            for (var n = 0; n < list_checks.length; n++) {\r\n                document.getElementsByClassName('checks_lvl')[n].checked = false;\r\n            }\r\n        },\r\n        generarAreasBasicaxPeriodo(periodo){\r\n            let me = this\r\n            this.$http.get(this.$server_url+'generarSeriesBasicasPeriodo?periodo_id='+periodo)\r\n            .then(function (res) {\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error + ' error');\r\n            })\r\n        },\r\n        get_pvp_periodo(id_periodo){\r\n            let me = this\r\n            me.$vs.loading();\r\n            this.$http.get(this.$server_url+'series_formato_periodo/'+ id_periodo)\r\n            .then(res => {\r\n                me.$vs.loading.close();\r\n                $.each(res.data, function(key, value1){\r\n                $.each(value1.areas, function(key_ar, value_ar){\r\n                    // carga pvp por areas\r\n                    try {\r\n                    document.getElementById('pvp_'+value1.id_serie+'_'+value_ar.idarea).value = value_ar.pvp\r\n                    document.getElementById('orden_'+value1.id_serie+'_'+value_ar.idarea).value = value_ar.orden\r\n                    } catch (error) {\r\n                    console.log(error +'  '+value_ar.idarea)\r\n                    }\r\n                    // carga de niveles seleccionados por area\r\n                    for( var i=0; i<10; i++){\r\n                    var st_nivel = true\r\n                    if( eval('value_ar.n'+(i+1)) == 'false' || eval('value_ar.n'+(i+1)) == null || eval('value_ar.n'+(i+1)) == 'null' || eval('value_ar.n'+(i+1)) == '' ){\r\n                        st_nivel = false\r\n                    }\r\n                    try {\r\n                        document.getElementById('lvl_'+value1.id_serie+'_'+value_ar.idarea+'_'+i).checked = st_nivel\r\n                    } catch (error) {\r\n                        console.log(error+'  '+value_ar.idarea)\r\n                    }\r\n                    }\r\n                })\r\n                })\r\n            })\r\n        },\r\n        async save_nivel_area(id_serie, id_area, index){\r\n            let me = this\r\n            let check = document.getElementById('lvl_'+id_serie+'_'+id_area+'_'+index).checked\r\n            me.$vs.loading();\r\n            let formData = new FormData();\r\n                formData.append('id_periodo', me.id_periodo);\r\n                formData.append('id_serie', id_serie);\r\n                formData.append('id_area', id_area);\r\n                formData.append('index', index+1);\r\n                if(check == true){\r\n                formData.append('check', '0');\r\n                }\r\n                // formData.append('check', check);\r\n            await this.$http.post(this.$server_url+'save_niveles_area_formato', formData)\r\n            .then(res => {\r\n                me.$vs.loading.close();\r\n                if(res.data.status == '0'){\r\n                me.$vs.notify({ text: res.data.message, color: 'danger', iconPack: 'feather', icon: 'icon-check', time:8000 })\r\n                me.ver_pedido(me.datos)\r\n                // me.getSeries()\r\n                return\r\n                }\r\n                me.$vs.notify({ text: 'Guardado correctamente', color: 'success', iconPack: 'feather', icon: 'icon-check' })\r\n            })\r\n        },\r\n        guardar_pvp(id_serie, id_area, id_libro){\r\n        let me = this\r\n        let pvp_save = ''\r\n        var orden = 0\r\n        if( id_libro == 0 ){\r\n          orden = document.getElementById('orden_'+id_serie+'_'+id_area).value\r\n          pvp_save = document.getElementById('pvp_'+id_serie+'_'+id_area).value\r\n        }else{\r\n          pvp_save = document.getElementById('pvp_6_'+id_libro).value\r\n        }\r\n        if( pvp_save == ''){\r\n          if(orden > 0){\r\n            me.$vs.notify({\r\n              text:'Debe colocar el valor para actualizar el orden',\r\n              color:'warning',\r\n              iconPack: 'feather',\r\n              icon:'icon-check'})\r\n              document.getElementById('orden_'+id_serie+'_'+id_area).value = 0\r\n            return\r\n          }\r\n          return;\r\n        }\r\n        me.$vs.loading();\r\n        let formData = new FormData();\r\n        formData.append('id_periodo', me.id_periodo);\r\n        formData.append('id_serie',   id_serie);\r\n        formData.append('id_area',    id_area);\r\n        formData.append('id_libro',   id_libro);\r\n        formData.append('pvp',        pvp_save);\r\n        formData.append('orden',      orden)\r\n        this.$http.post(this.$server_url+'save_pvp_area_formato', formData)\r\n        .then(res => {\r\n          me.$vs.loading.close();\r\n          if( res.data.length > 0 && id_serie != 6 ){ // PLAN LECTOR NO TIENE NIVELES\r\n            for( var i=0; i<10; i++){ // para refrescar checks de niveles\r\n              var st_nivel = true // invertimos valor\r\n              if( eval('res.data[0].n'+(i+1)) == 'false' || eval('res.data[0].n'+(i+1)) == null || eval('res.data[0].n'+(i+1)) == 'null'  || eval('res.data[0].n'+(i+1)) == '' ){\r\n                st_nivel = false\r\n              }\r\n              document.getElementById('lvl_'+id_serie+'_'+id_area+'_'+i).checked = st_nivel\r\n            }\r\n          }\r\n          me.getLibrosPlanLector(me.id_periodo)\r\n          me.$vs.notify({ text: 'Guardado correctamente', color: 'success', iconPack: 'feather', icon: 'icon-check' })\r\n        })\r\n      },\r\n    }\r\n}\r\n",{"version":3,"sources":["FormatoPedidos.vue"],"names":[],"mappings":";AAofile":"FormatoPedidos.vue","sourceRoot":"src/views/pedidos/components/formato","sourcesContent":["<template>\r\n    <div>\r\n        <vs-collapse accordion >\r\n            <vs-collapse-item>\r\n                <div class=\"text-center font-bold\" slot=\"header\" @click=\"mostrarConfiguracion = true;\">\r\n                    CONFIGURACIÓN\r\n                </div>\r\n                <!-- Porcentaje de pedido -->\r\n                <div class=\"flex justify-center\">\r\n                    <div style=\"width: 50%!important;\">\r\n                    <vx-input-group class=\"mb-base\" style=\"background-color: red;\">\r\n                    <template slot=\"prepend\">\r\n                        <div class=\"prepend-text bg-primary\">\r\n                        <span>Porcentaje de pedidos %</span>\r\n                        </div>\r\n                    </template>\r\n                    <vs-input v-model=\"porcentaje_pedido\" @keyUp.enter=\"savePorcentaPedido()\" @blur=\"savePorcentaPedido()\"/>\r\n                    </vx-input-group>\r\n                    </div>\r\n                </div>\r\n                <vs-divider style=\"margin-top: -10px;\"></vs-divider>\r\n                <!-- /Porcentaje de pedido -->\r\n                <!--SERIES BASICAS-->\r\n                <seriesBasicasVue v-if=\"mostrarConfiguracion\" :id_periodo=\"id_periodo\"/>\r\n            </vs-collapse-item>\r\n        </vs-collapse>\r\n        <div align=\"center\">\r\n        <div class=\"alerta_formato\">\r\n            <b>\r\n            Si no ingresa almenos un valor para una serie, esta no se mostrará en el formulario del asesor. <br>\r\n            Únicamente los niveles que seleccione podran ser utilizados por los asesores.\r\n            </b>\r\n        </div>\r\n        </div>\r\n        <vs-collapse>\r\n        <vs-collapse-item :key=\"index\" v-for=\"(item, index) in arregloSeries\">\r\n            <div slot=\"header\" class=\"text-center\"> <b>{{item.nombre_serie.toUpperCase()}}</b> </div>\r\n            <div class=\"w-full\">\r\n            <div class=\"vx-row\">\r\n                <div :key=\"indexar\" v-for=\"(itemar, indexar) in item.areas\" class=\"vx-col md:w-1/6 w-full mb-base p-2\" align=\"center\">\r\n                    <div class=\"w-full card_pvp\">\r\n                        <div class=\"w-full mb-3\"><b>{{'PVP - ' + itemar.nombrearea}}</b></div>\r\n                        <input type=\"number\" placeholder=\"0.00\" :id=\"'pvp_'+item.id_serie+'_'+itemar.idarea\" @blur=\"guardar_pvp(item.id_serie, itemar.idarea, 0)\" class=\"input_pvp mb-4\"/> USD <br>\r\n                        <vs-divider style=\"margin: 0%;\">Niveles</vs-divider>\r\n                        <div class=\"w-full\" align=\"center\">\r\n                            <div :key=\"indexck\" v-for=\"(itemck, indexck) in 10\" style=\"width: 20px; margin: 1px; display: inline-block;\">\r\n                            <input type=\"checkbox\" class=\"checks_lvl\" :id=\"'lvl_'+item.id_serie+'_'+itemar.idarea+'_'+indexck\" :name=\"'lvl_'+item.id_serie+'_'+itemar.idarea+'_'+indexck\" @input=\"save_nivel_area(item.id_serie, itemar.idarea, indexck, 0)\"/>\r\n                            <label :for=\"'lvl_'+'_'+item.id_serie+'_'+itemar.idarea+'_'+indexck\"> {{indexck+1}} </label>\r\n                            </div>\r\n                        </div>\r\n                        <vs-divider style=\"margin: 0%;\">Orden</vs-divider>\r\n                        <input type=\"number\" placeholder=\"0\" :id=\"'orden_'+item.id_serie+'_'+itemar.idarea\" @blur=\"guardar_pvp(item.id_serie, itemar.idarea, 0)\" class=\"input_pvp mb-4\"/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </vs-collapse-item>\r\n        <vs-collapse-item>\r\n            <div slot=\"header\" class=\"text-center\"> <b>PLAN LECTOR</b> </div>\r\n            <div class=\"w-full\">\r\n            <vs-table pagination max-items=\"5\" search :data=\"series_plan_lector\">\r\n                <template slot=\"thead\">\r\n                <vs-th>#</vs-th>\r\n                <vs-th sort-key=\"nombrelibro\">Nombre libro</vs-th>\r\n                <vs-th><div class=\"w-full text-center\"></div></vs-th>\r\n                </template>\r\n                <template slot-scope=\"{data}\">\r\n                <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                    <vs-td> {{ indextr+1 }} </vs-td>\r\n                    <vs-td :data=\"tr.nombrelibro\">\r\n                    <b>{{tr.nombrelibro}}</b>\r\n                    </vs-td>\r\n                    <vs-td>\r\n                    <input class=\"input_pvp\" style=\"width: 100px;\" type=\"number\" placeholder=\"0.00\" :id=\"'pvp_6_'+tr.idlibro\" :value=\"tr.pvp\" @blur=\"guardar_pvp(6, 69, tr.idlibro)\" /> USD\r\n                    </vs-td>\r\n                </vs-tr>\r\n                </template>\r\n            </vs-table>\r\n            </div>\r\n        </vs-collapse-item>\r\n        </vs-collapse>\r\n    </div>\r\n</template>\r\n<script>\r\nimport seriesBasicasVue from '../seriesBasicas.vue'\r\nexport default{\r\n    components:{\r\n        seriesBasicasVue,\r\n    },\r\n    data(){\r\n        return{\r\n            usuario:[],\r\n            pvp_areas:[],\r\n            datos:[],\r\n            series_plan_lector:[],\r\n            porcentaje_pedido:0,\r\n            id_periodo:0,\r\n            mostrarConfiguracion:false,\r\n        }\r\n    },\r\n    props:{\r\n        enviarPeriodo:{\r\n            type:Object,\r\n            default:{},\r\n        },\r\n        arregloSeries:{\r\n            type:Array,\r\n            default:[],\r\n        },\r\n    },\r\n    created(){\r\n        let me = this;\r\n        me.usuario = JSON.parse(localStorage.getItem(\"usuario\"))\r\n    },\r\n    mounted(){\r\n        let me = this;\r\n        me.start()\r\n    },\r\n    methods:{\r\n        start(){\r\n            let me  = this;\r\n            let item =              me.enviarPeriodo\r\n            me.porcentaje_pedido    = item.porcentaje_descuento\r\n            me.pvp_areas            = [];\r\n            me.limpiar_inputs()\r\n            me.generarAreasBasicaxPeriodo(item.idperiodoescolar)\r\n            me.id_periodo           = item.idperiodoescolar\r\n            me.get_pvp_periodo(item.idperiodoescolar)\r\n            me.getLibrosPlanLector(item.idperiodoescolar) /// plan lector\r\n        },\r\n        //para guardar el pocentaje de anticipo\r\n        savePorcentaPedido(){\r\n            let me = this;\r\n            this.$http.get(this.$server_url+'changePorcentajeAnticipo?id_periodo='+me.id_periodo+'&porcentaje_pedido='+me.porcentaje_pedido)\r\n            .then(res => {\r\n            me.$vs.notify({\r\n            text:'Se guardo correctamente el porcentaje',\r\n            color:'primary',\r\n            iconPack: 'feather',\r\n            icon:'icon-check'})\r\n            })\r\n        },\r\n        getLibrosPlanLector(id_periodo){\r\n            let me = this\r\n            this.$http.get(this.$server_url+'get_libros_plan_pedido/6/'+id_periodo)\r\n            .then(res => {\r\n                me.series_plan_lector = res.data\r\n            })\r\n        },\r\n        limpiar_inputs(){\r\n            var list_inputs = document.getElementsByClassName('input_pvp');\r\n            for (var n = 0; n < list_inputs.length; n++) {\r\n                document.getElementsByClassName('input_pvp')[n].value = '';\r\n            }\r\n            var list_checks = document.getElementsByClassName('checks_lvl');\r\n            for (var n = 0; n < list_checks.length; n++) {\r\n                document.getElementsByClassName('checks_lvl')[n].checked = false;\r\n            }\r\n        },\r\n        generarAreasBasicaxPeriodo(periodo){\r\n            let me = this\r\n            this.$http.get(this.$server_url+'generarSeriesBasicasPeriodo?periodo_id='+periodo)\r\n            .then(function (res) {\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error + ' error');\r\n            })\r\n        },\r\n        get_pvp_periodo(id_periodo){\r\n            let me = this\r\n            me.$vs.loading();\r\n            this.$http.get(this.$server_url+'series_formato_periodo/'+ id_periodo)\r\n            .then(res => {\r\n                me.$vs.loading.close();\r\n                $.each(res.data, function(key, value1){\r\n                $.each(value1.areas, function(key_ar, value_ar){\r\n                    // carga pvp por areas\r\n                    try {\r\n                    document.getElementById('pvp_'+value1.id_serie+'_'+value_ar.idarea).value = value_ar.pvp\r\n                    document.getElementById('orden_'+value1.id_serie+'_'+value_ar.idarea).value = value_ar.orden\r\n                    } catch (error) {\r\n                    console.log(error +'  '+value_ar.idarea)\r\n                    }\r\n                    // carga de niveles seleccionados por area\r\n                    for( var i=0; i<10; i++){\r\n                    var st_nivel = true\r\n                    if( eval('value_ar.n'+(i+1)) == 'false' || eval('value_ar.n'+(i+1)) == null || eval('value_ar.n'+(i+1)) == 'null' || eval('value_ar.n'+(i+1)) == '' ){\r\n                        st_nivel = false\r\n                    }\r\n                    try {\r\n                        document.getElementById('lvl_'+value1.id_serie+'_'+value_ar.idarea+'_'+i).checked = st_nivel\r\n                    } catch (error) {\r\n                        console.log(error+'  '+value_ar.idarea)\r\n                    }\r\n                    }\r\n                })\r\n                })\r\n            })\r\n        },\r\n        async save_nivel_area(id_serie, id_area, index){\r\n            let me = this\r\n            let check = document.getElementById('lvl_'+id_serie+'_'+id_area+'_'+index).checked\r\n            me.$vs.loading();\r\n            let formData = new FormData();\r\n                formData.append('id_periodo', me.id_periodo);\r\n                formData.append('id_serie', id_serie);\r\n                formData.append('id_area', id_area);\r\n                formData.append('index', index+1);\r\n                if(check == true){\r\n                formData.append('check', '0');\r\n                }\r\n                // formData.append('check', check);\r\n            await this.$http.post(this.$server_url+'save_niveles_area_formato', formData)\r\n            .then(res => {\r\n                me.$vs.loading.close();\r\n                if(res.data.status == '0'){\r\n                me.$vs.notify({ text: res.data.message, color: 'danger', iconPack: 'feather', icon: 'icon-check', time:8000 })\r\n                me.ver_pedido(me.datos)\r\n                // me.getSeries()\r\n                return\r\n                }\r\n                me.$vs.notify({ text: 'Guardado correctamente', color: 'success', iconPack: 'feather', icon: 'icon-check' })\r\n            })\r\n        },\r\n        guardar_pvp(id_serie, id_area, id_libro){\r\n        let me = this\r\n        let pvp_save = ''\r\n        var orden = 0\r\n        if( id_libro == 0 ){\r\n          orden = document.getElementById('orden_'+id_serie+'_'+id_area).value\r\n          pvp_save = document.getElementById('pvp_'+id_serie+'_'+id_area).value\r\n        }else{\r\n          pvp_save = document.getElementById('pvp_6_'+id_libro).value\r\n        }\r\n        if( pvp_save == ''){\r\n          if(orden > 0){\r\n            me.$vs.notify({\r\n              text:'Debe colocar el valor para actualizar el orden',\r\n              color:'warning',\r\n              iconPack: 'feather',\r\n              icon:'icon-check'})\r\n              document.getElementById('orden_'+id_serie+'_'+id_area).value = 0\r\n            return\r\n          }\r\n          return;\r\n        }\r\n        me.$vs.loading();\r\n        let formData = new FormData();\r\n        formData.append('id_periodo', me.id_periodo);\r\n        formData.append('id_serie',   id_serie);\r\n        formData.append('id_area',    id_area);\r\n        formData.append('id_libro',   id_libro);\r\n        formData.append('pvp',        pvp_save);\r\n        formData.append('orden',      orden)\r\n        this.$http.post(this.$server_url+'save_pvp_area_formato', formData)\r\n        .then(res => {\r\n          me.$vs.loading.close();\r\n          if( res.data.length > 0 && id_serie != 6 ){ // PLAN LECTOR NO TIENE NIVELES\r\n            for( var i=0; i<10; i++){ // para refrescar checks de niveles\r\n              var st_nivel = true // invertimos valor\r\n              if( eval('res.data[0].n'+(i+1)) == 'false' || eval('res.data[0].n'+(i+1)) == null || eval('res.data[0].n'+(i+1)) == 'null'  || eval('res.data[0].n'+(i+1)) == '' ){\r\n                st_nivel = false\r\n              }\r\n              document.getElementById('lvl_'+id_serie+'_'+id_area+'_'+i).checked = st_nivel\r\n            }\r\n          }\r\n          me.getLibrosPlanLector(me.id_periodo)\r\n          me.$vs.notify({ text: 'Guardado correctamente', color: 'success', iconPack: 'feather', icon: 'icon-check' })\r\n        })\r\n      },\r\n    }\r\n}\r\n</script>\r\n<style>\r\n.label_inputs{\r\n  font-size: 12px;\r\n  color: rgb(143, 143, 143);\r\n  margin-top: 4px;\r\n  padding-left: 4px;\r\n}\r\n\r\n.alerta_formato{\r\n  font-size: 15px;\r\n  background-color: rgb(255, 222, 195);\r\n  color: rgba(255, 132, 0, 0.867);\r\n  padding: 8px;\r\n  border-radius: 7px;\r\n  width: 90%;\r\n  min-width: 350px;\r\n}\r\n\r\n.card_pvp{\r\n  border-radius: 10px;\r\n  padding: 10px 5px 10px 5px;\r\n  background-color: rgba(235, 242, 255, 0.59);\r\n}\r\n\r\ninput[type=number].input_pvp::-webkit-inner-spin-button,\r\ninput[type=number].input_pvp::-webkit-outer-spin-button {\r\n    -webkit-appearance: none;\r\n    margin: 0;\r\n    }\r\ninput[type=number].input_pvp { -moz-appearance:textfield; }\r\n\r\ninput[type=number].input_pvp {\r\n  font-size: 18px !important;\r\n  text-align: center;\r\n  color: rgb(60, 108, 192);\r\n  border-radius: 5px;\r\n  border: 2px solid rgb(183, 183, 183);\r\n  width: 100%;\r\n}\r\n</style>\r\n"]}]}