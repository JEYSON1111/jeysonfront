{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\pedidos2\\guias\\ScreenGuias.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\pedidos2\\guias\\ScreenGuias.vue","mtime":1712682816387},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\n  import vSelect from 'vue-select'\r\n  import { mapState } from \"vuex\";\r\n  const listadoGuiasFacturadorVue = () => import('../../pedidos/components/Guias/guiasFacturador/listadoGuiasFacturador.vue');\r\n  const listado_pedidos_asesorVue = () => import('../../pedidos/listado_pedidos_asesor.vue')\r\n  const pedidosGuiasVue           = () => import('../../pedidos/components/Guias/pedidos.vue')\r\n  export default {\r\n    components: {\r\n      vSelect,\r\n      listadoGuiasFacturadorVue,\r\n      listado_pedidos_asesorVue,\r\n      pedidosGuiasVue,\r\n    },\r\n    data() {\r\n      return {\r\n        arregloGuias: [],\r\n        periodoSelect:'',\r\n        changePeriodo:false,\r\n        menu:0,\r\n      };\r\n    },\r\n    computed: {\r\n      ...mapState([\"auth\", \"userRoot\", \"susuario\", \"groupFacturador\", \"groupBodega\",\"userAsesor\",\"ObjectGuia\"]),\r\n    },\r\n    mounted() {\r\n        let me = this\r\n        if(!me.userAsesor){\r\n            this.getGuias();\r\n        }\r\n    },\r\n    props:{\r\n        arregloPeriodos:{\r\n            type:Array,\r\n            default:function(){\r\n                return []\r\n            }\r\n        }\r\n    },\r\n    watch:{\r\n      periodoSelect(results){\r\n        let me = this;\r\n        if(results == null || results == null || results == undefined){\r\n          me.changePeriodo = false\r\n          localStorage.removeItem('pid')\r\n          localStorage.removeItem('pnombre')\r\n        }else{\r\n          me.changePeriodo = true\r\n          localStorage.setItem('pid',    results.idperiodoescolar)\r\n          localStorage.setItem('pnombre',results.periodoescolar)\r\n        }\r\n      },\r\n    },\r\n    methods: {\r\n        showPedido(e){\r\n            let me = this\r\n            me.menu = e\r\n        },\r\n        async getGuias() {\r\n            let me = this\r\n            try {\r\n            this.$vs.loading();\r\n            const response = await this.$http.get(this.$server_url + 'get_pedidos_guias');\r\n            this.$vs.loading.close();\r\n    \r\n            const datos = response.data;\r\n            if (datos.length === 0) {\r\n                this.arregloGuias = [];\r\n                return;\r\n            }\r\n            if (this.groupFacturador) {\r\n                this.arregloGuias = datos.filter(p => p.pedido_facturacion === 1);\r\n                return \r\n            } else if (this.groupBodega) {\r\n                this.arregloGuias = datos.filter(p => p.pedido_bodega === 1);\r\n                return \r\n            } else if (this.userAsesor) {\r\n                this.arregloGuias = datos.filter(p => p.pedido_asesor === 1);\r\n                return \r\n            }\r\n            } catch (error) {\r\n            console.error(\"Error al obtener guías:\", error);\r\n            this.$vs.loading.close();\r\n            }\r\n        },\r\n    },\r\n  };\r\n  ",{"version":3,"sources":["ScreenGuias.vue"],"names":[],"mappings":";AAmCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ScreenGuias.vue","sourceRoot":"src/views/pedidos2/guias","sourcesContent":["<template>\r\n    <div>\r\n      <div v-if=\"groupFacturador\">\r\n        <listadoGuiasFacturadorVue :pedidos=\"arregloGuias\" @changeRecarge=\"getGuias\" />\r\n      </div>\r\n      <div v-if=\"userAsesor\">\r\n        <div class=\"flex mt-5\">\r\n            <div style=\"width: 40%;\">\r\n                <p> <ion-icon name=\"contract-outline\"></ion-icon>  Filtro de guias por período</p>\r\n            </div>\r\n            <div style=\"width: 60%;\">\r\n                <v-select :options=\"arregloPeriodos\" :reduce=\"arregloPeriodos => arregloPeriodos\" label=\"periodoescolar\" class=\"w-full\" v-model=\"periodoSelect\" />\r\n                <br>\r\n            </div>\r\n        </div>\r\n        <vs-divider>\r\n        <vs-button color=\"warning\" v-if=\"changePeriodo == false\" type=\"flat\" icon=\"star\">Ningun período Seleccionado</vs-button>\r\n        <vs-button  v-else color=\"success\" type=\"flat\" icon=\"star\">Periodo seleccionado: <b>{{ periodoSelect.periodoescolar }}</b></vs-button>\r\n        </vs-divider>\r\n        <div v-if=\"changePeriodo\">\r\n            <div v-if=\"menu != 0\">\r\n                <vs-button class=\"mb-2 p-2\" @click=\"menu = 0;\" style=\"display: inline-block;\" icon-pack=\"feather\" icon=\"icon-chevron-left\" color=\"primary\">Volver a pedidos</vs-button>\r\n            </div>\r\n            <div v-if=\"menu == 0\">\r\n                <listado_pedidos_asesorVue  :periodoSelect=\"periodoSelect\" @showPedido=\"showPedido\"/>\r\n            </div>\r\n            <div v-if=\"menu == 1\">\r\n                <pedidosGuiasVue/>\r\n            </div>\r\n        </div>  \r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import vSelect from 'vue-select'\r\n  import { mapState } from \"vuex\";\r\n  const listadoGuiasFacturadorVue = () => import('../../pedidos/components/Guias/guiasFacturador/listadoGuiasFacturador.vue');\r\n  const listado_pedidos_asesorVue = () => import('../../pedidos/listado_pedidos_asesor.vue')\r\n  const pedidosGuiasVue           = () => import('../../pedidos/components/Guias/pedidos.vue')\r\n  export default {\r\n    components: {\r\n      vSelect,\r\n      listadoGuiasFacturadorVue,\r\n      listado_pedidos_asesorVue,\r\n      pedidosGuiasVue,\r\n    },\r\n    data() {\r\n      return {\r\n        arregloGuias: [],\r\n        periodoSelect:'',\r\n        changePeriodo:false,\r\n        menu:0,\r\n      };\r\n    },\r\n    computed: {\r\n      ...mapState([\"auth\", \"userRoot\", \"susuario\", \"groupFacturador\", \"groupBodega\",\"userAsesor\",\"ObjectGuia\"]),\r\n    },\r\n    mounted() {\r\n        let me = this\r\n        if(!me.userAsesor){\r\n            this.getGuias();\r\n        }\r\n    },\r\n    props:{\r\n        arregloPeriodos:{\r\n            type:Array,\r\n            default:function(){\r\n                return []\r\n            }\r\n        }\r\n    },\r\n    watch:{\r\n      periodoSelect(results){\r\n        let me = this;\r\n        if(results == null || results == null || results == undefined){\r\n          me.changePeriodo = false\r\n          localStorage.removeItem('pid')\r\n          localStorage.removeItem('pnombre')\r\n        }else{\r\n          me.changePeriodo = true\r\n          localStorage.setItem('pid',    results.idperiodoescolar)\r\n          localStorage.setItem('pnombre',results.periodoescolar)\r\n        }\r\n      },\r\n    },\r\n    methods: {\r\n        showPedido(e){\r\n            let me = this\r\n            me.menu = e\r\n        },\r\n        async getGuias() {\r\n            let me = this\r\n            try {\r\n            this.$vs.loading();\r\n            const response = await this.$http.get(this.$server_url + 'get_pedidos_guias');\r\n            this.$vs.loading.close();\r\n    \r\n            const datos = response.data;\r\n            if (datos.length === 0) {\r\n                this.arregloGuias = [];\r\n                return;\r\n            }\r\n            if (this.groupFacturador) {\r\n                this.arregloGuias = datos.filter(p => p.pedido_facturacion === 1);\r\n                return \r\n            } else if (this.groupBodega) {\r\n                this.arregloGuias = datos.filter(p => p.pedido_bodega === 1);\r\n                return \r\n            } else if (this.userAsesor) {\r\n                this.arregloGuias = datos.filter(p => p.pedido_asesor === 1);\r\n                return \r\n            }\r\n            } catch (error) {\r\n            console.error(\"Error al obtener guías:\", error);\r\n            this.$vs.loading.close();\r\n            }\r\n        },\r\n    },\r\n  };\r\n  </script>\r\n  "]}]}