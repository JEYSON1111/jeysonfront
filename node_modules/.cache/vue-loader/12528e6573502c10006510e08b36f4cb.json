{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\admin\\acortador\\listadoAcortador.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\admin\\acortador\\listadoAcortador.vue","mtime":1712682815430},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nimport flatPickr from 'vue-flatpickr-component';\r\nimport 'flatpickr/dist/flatpickr.css';\r\nimport Vue from 'vue'\r\nimport axios from 'axios'\r\nimport vSelect from 'vue-select'\r\nimport moment from 'moment'\r\nimport $ from 'jquery'\r\nimport jsPDF from 'jspdf' \r\nimport html2canvas from \"html2canvas\"\r\nimport pdfMake from \"pdfmake/build/pdfmake\";\r\n// var pdfMake = require ('pdfmake/build/pdfmake.js');\r\nvar pdfFonts = require ('pdfmake/build/vfs_fonts.js');\r\npdfMake.vfs = pdfFonts.pdfMake.vfs;\r\nexport default {\r\n    data(){\r\n        return{\r\n            //para el reporte excel\r\n            fileName: null,\r\n            activePrompt: false,\r\n             codigoSelected: [],\r\n             reportesActivo: 0,\r\n            fileName: null,\r\n            formats: ['xls', 'xlsx', 'csv', 'txt'],\r\n            cellAutoWidth: true,\r\n            selectedFormat: 'xls',\r\n            //fin variables para exportar\r\n            usuario:[],\r\n            arregloLinks:[],\r\n            arregloLibros:[],\r\n            areas:[],\r\n            popupAgregar:false,\r\n            id:0,\r\n            acortador:{\r\n                libro:'',\r\n                unidad:'',\r\n                pagina:'',\r\n                link_original:'',\r\n                link_acortado:'',\r\n                area:'',\r\n            },\r\n            unidades:[ \r\n                {id:\"1\"},\r\n                {id:\"2\"},\r\n                {id:\"3\"},\r\n                {id:\"4\"},\r\n                {id:\"5\"},\r\n                {id:\"6\"},\r\n            ],\r\n            generar:false, \r\n            title:'',\r\n        }\r\n    },\r\n    computed:{\r\n    },\r\n    methods:{\r\n        //para obtener el listado de las areas\r\n        getAreas() {\r\n        let me = this;\r\n        this.$http.get(this.$server_url+'areas')\r\n            .then(function (res) {\r\n                me.areas = res.data.area\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error + ' error');\r\n            })\r\n        },\r\n        getLinks(){\r\n        let me = this\r\n        this.$http.get(this.$server_url+`l_`).then(res => {\r\n            me.arregloLinks = res.data;\r\n            })\r\n            .catch(function (error) {\r\n            console.log(error)\r\n            })\r\n        },\r\n        //lista de libros para usar en el select\r\n        filtroLibros(){\r\n        let me = this\r\n        me.acortador.libro = \"\"\r\n        me.$vs.loading();\r\n        this.$http.get(this.$server_url+'filtroLibros?area='+me.acortador.area.idarea).then(res => {\r\n            me.$vs.loading.close();\r\n            me.arregloLibros = res.data;\r\n            })\r\n            .catch(function (error) {\r\n            me.$vs.loading.close();\r\n            console.log(error)\r\n            })\r\n        },\r\n        generateLink(){\r\n            let me = this;\r\n            if(me.acortador.area == undefined || me.acortador.area == \"\" || me.acortador.area == null){\r\n                me.$vs.notify({\r\n                    text: \"Tiene que seleccionar un area\",\r\n                    color: 'warning',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-alert-triangle'\r\n                })\r\n                return\r\n            }\r\n            if(me.acortador.libro == undefined || me.acortador.libro == \"\" || me.acortador.libro == null){\r\n                me.$vs.notify({\r\n                    text: \"Tiene que seleccionar un libro\",\r\n                    color: 'warning',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-alert-triangle'\r\n                })\r\n                return\r\n            }\r\n            if(me.acortador.link_original.trim() == \"\"){\r\n                me.$vs.notify({\r\n                    text: \"Tiene que escribir un link\",\r\n                    color: 'warning',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-alert-triangle'\r\n                })\r\n                return\r\n            }\r\n            let formData = new FormData()\r\n            formData.append('id',           me.id)\r\n            formData.append('area_id',      me.acortador.area.idarea)\r\n            formData.append('libro_id',     me.acortador.libro.idlibro)\r\n            if(me.acortador.unidad == undefined || me.acortador.unidad == null || me.acortador.unidad == \"\"){\r\n                formData.append('unidad',     \"\")      \r\n            }else{\r\n                formData.append('unidad',       me.acortador.unidad.id)\r\n            }\r\n            formData.append('pagina',       me.acortador.pagina)\r\n            formData.append('link_original',me.acortador.link_original)\r\n            formData.append('link_acortado',me.acortador.link_acortado)\r\n            formData.append('idusuario',    me.usuario.idusuario)\r\n            me.$vs.loading();\r\n            this.$http.post(this.$server_url+'l_', formData)\r\n            .then(res => {\r\n            me.$vs.loading.close()\r\n            if(me.id > 0){\r\n                me.$vs.notify({\r\n                    text: res.data.message,\r\n                    color: 'success',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-alert-triangle'\r\n                })\r\n                me.getLinks()\r\n                me.popupAgregar = false\r\n                return \r\n            }\r\n            if(me.id == 0){\r\n                me.generar=true;\r\n            }\r\n            let ruta = res.data\r\n            var aux = document.createElement(\"input\");\r\n            aux.setAttribute(\"value\", ruta);\r\n            document.body.appendChild(aux);\r\n            aux.select();\r\n            try {\r\n                var status = document.execCommand('copy');\r\n                if (!status) {\r\n                    me.$vs.notify({ text: 'Error al copiar el link', color: 'warning', iconPack: 'feather', icon: 'icon-alert-triangle' })\r\n                } else {\r\n                    me.$vs.notify({ text: 'Link copiado', color: 'success', iconPack: 'feather', icon: 'icon-check' })\r\n                }\r\n            } catch (err) {\r\n                console.log('No se pudo copiar');\r\n            }\r\n            document.body.removeChild(aux);\r\n            me.getLinks()\r\n            me.popupAgregar = false\r\n            })\r\n            .catch(function (error) {\r\n                me.$vs.loading.close()\r\n                console.log(error);\r\n            })  \r\n        },\r\n        copiarLink(tr){\r\n            let me = this;\r\n            let ruta = tr.link_acortado\r\n            var aux = document.createElement(\"input\");\r\n            aux.setAttribute(\"value\", ruta);\r\n            document.body.appendChild(aux);\r\n            aux.select();\r\n            try {\r\n                var status = document.execCommand('copy');\r\n                if (!status) {\r\n                    me.$vs.notify({ text: 'Error al copiar el link', color: 'warning', iconPack: 'feather', icon: 'icon-alert-triangle' })\r\n                } else {\r\n                    me.$vs.notify({ text: 'Link copiado', color: 'success', iconPack: 'feather', icon: 'icon-check' })\r\n                }\r\n            } catch (err) {\r\n                console.log('No se pudo copiar');\r\n            }\r\n            document.body.removeChild(aux);\r\n        },\r\n        openEditar(tr){\r\n            let me                      = this;\r\n            me.id                       = tr.id\r\n            me.acortador.area           = {idarea:tr.area_id,nombrearea:tr.nombrearea}\r\n            me.acortador.libro          = {idlibro:tr.libro_id,nombrelibro:tr.nombrelibro}\r\n            me.acortador.unidad         = {id:tr.unidad}\r\n            me.acortador.pagina         = tr.pagina\r\n            me.acortador.link_original  = tr.link_original\r\n            me.acortador.link_acortado  = tr.link_acortado\r\n            me.title                    = \"Actualizar link\"\r\n            me.popupAgregar             = true\r\n        },\r\n        openConfirm(tr){\r\n            let me = this;\r\n            me.id = tr.id\r\n            this.$vs.dialog({\r\n                type:'confirm',\r\n                color: 'danger',\r\n                title: `Confirmar`,\r\n                text: 'Estas seguro de eliminar?',\r\n                accept:this.eliminarLink\r\n            })\r\n        },\r\n        eliminarLink(){\r\n        let me = this\r\n        me.$vs.loading()\r\n        this.$http.delete(this.$server_url+'l_/'+me.id)\r\n            .then(res => {\r\n                me.$vs.loading.close()\r\n                me.$vs.notify({\r\n                    text: 'Se elimino correctamente el link',\r\n                    color: 'success',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-alert-triangle'\r\n                })\r\n                me.getLinks()\r\n            })\r\n            .catch(function (error) {\r\n            me.$vs.loading.close()\r\n            console.log(error)\r\n            })\r\n        },\r\n        limpiar(){\r\n            let me                      = this;\r\n            me.generar                  = false\r\n            me.id                       = 0\r\n            me.acortador.area           = ''\r\n            me.acortador.libro          = ''\r\n            me.acortador.unidad         = ''\r\n            me.acortador.pagina         = ''\r\n            me.acortador.link_original  = ''\r\n            me.acortador.link_acortado  = ''\r\n        },\r\n      //para limipiar los campos del excel\r\n        clearFields() {\r\n            this.fileName = ''\r\n            this.cellAutoWidth = true\r\n            this.selectedFormat = 'xls'\r\n        },\r\n        //metodo par descargar el excel\r\n           exportToExcel() {\r\n            let headerTitle = ['libro' ,'Editor', 'Unidad', 'Pagina','Link original','link acortado'];\r\n            let headerVal = [ 'nombrelibro','editor','unidad',  'pagina','link_original','link_acortado'];\r\n            let codigoSelectedMayus = this.codigoSelected\r\n            for (var i = 0; i < codigoSelectedMayus.length; i++) {\r\n                for (var key in codigoSelectedMayus[i]) {\r\n                    if (typeof codigoSelectedMayus[i][key] == \"string\") {\r\n                        codigoSelectedMayus[i][key] = codigoSelectedMayus[i][key].toUpperCase();\r\n                    }\r\n                }\r\n            }\r\n            import('@/vendor/Export2Excel').then(excel => {\r\n                const list = codigoSelectedMayus\r\n                const data = this.formatJson(headerVal, list)\r\n                excel.export_json_to_excel({\r\n                    header: headerTitle,\r\n                    data,\r\n                    filename: this.fileName,\r\n                    autoWidth: this.cellAutoWidth,\r\n                    bookType: this.selectedFormat\r\n                })\r\n                this.clearFields()\r\n                this.guardarActivo = '';\r\n                this.generarActivo = ' ';\r\n                this.textAlertCant = '';\r\n                this.cantidad = '';\r\n                this.codigoSelected = [];\r\n            })\r\n        },\r\n        formatJson(filterVal, jsonData) {\r\n            return jsonData.map(v => filterVal.map(j => {\r\n                return v[j]\r\n            }))\r\n        },\r\n    },\r\n    created(){\r\n        let me = this\r\n        me.usuario = JSON.parse(localStorage.getItem(\"usuario\"))\r\n        me.getLinks()\r\n        me.getAreas() \r\n    },\r\n    components: {\r\n        'v-select': vSelect,  \r\n    },\r\n}\r\n",{"version":3,"sources":["listadoAcortador.vue"],"names":[],"mappingsfile":"listadoAcortador.vue","sourceRoot":"src/views/admin/acortador","sourcesContent":["<template>\r\n    <div>\r\n        <div>\r\n            <vs-table multiple stripe v-model=\"codigoSelected\" pagination max-items=\"25\" search :data=\"arregloLinks\">\r\n                <template slot=\"header\">\r\n                    <div style=\"display:flex;\">\r\n                        <vs-chip color=\"success\" style=\"font-size:12px;\">\r\n                          Total links: {{arregloLinks.length}}\r\n                        </vs-chip>\r\n                        <vs-button color=\"warning\" type=\"line\" icon=\"description\"  size=\"small\" class=\"mr-5 ml-3\" style=\"font-size: 14px;\" @click=\"activePrompt=true;\">Exportar</vs-button>\r\n                        <vs-button type=\"line\" icon=\"save\" @click=\"popupAgregar = true;limpiar();title='Generar Link'\">Añadir link</vs-button>    \r\n                    </div>    \r\n                </template>\r\n                <template slot=\"thead\">\r\n                     <vs-th sort-key=\"nombrelibro\">Libro</vs-th>\r\n                    <vs-th sort-key=\"unidad\">Unidad</vs-th>\r\n                    <vs-th sort-key=\"pagina\">Pagina</vs-th>\r\n                    <vs-th sort-key=\"contrato\">Links</vs-th>\r\n                    <vs-th sort-key=\"institucion\">Acciones</vs-th>\r\n                </template>\r\n                <template slot-scope=\"{data}\">\r\n                    <vs-tr :data=\"tr\" :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                        <vs-td :data=\"data[indextr].nombrelibro\">\r\n                            {{data[indextr].nombrelibro}}\r\n                        </vs-td>\r\n                        <vs-td :data=\"data[indextr].unidad\">\r\n                            {{data[indextr].unidad}}\r\n                        </vs-td>\r\n                        <vs-td :data=\"data[indextr].pagina\">\r\n                            {{data[indextr].pagina}}\r\n                        </vs-td>\r\n                        <vs-td :data=\"data[indextr].link_original\">\r\n                            <p style=\"font-weight: bold;\">Editor:</p>\r\n                            <span>{{data[indextr].editor}}</span><br>\r\n                            <p style=\"font-weight: bold;\">Link original:</p>\r\n                            <span>{{data[indextr].link_original}}</span><br>\r\n                            <p style=\"font-weight: bold;\">Link acortado:</p>\r\n                            <span>{{data[indextr].link_acortado}}</span>\r\n                        </vs-td>\r\n                        <vs-td :data=\"data[indextr].nombrelibro\">\r\n                            <div class=\"flex\">\r\n                                <vx-tooltip style=\"display: inline-block;\" text=\"Copiar link\" position=\"top\" color=\"success\">\r\n                                    <vs-button size=\"small\" class=\"modal-default-button\" color=\"success\" @click=\"copiarLink(data[indextr])\" type=\"line\" icon-pack=\"feather\" icon=\"icon-copy\">\r\n                                    </vs-button>\r\n                                </vx-tooltip>\r\n                                <vx-tooltip class=\"ml-3\" style=\"display: inline-block;\" text=\"Editar\" position=\"top\" color=\"success\">\r\n                                    <vs-button size=\"small\" class=\"modal-default-button\" color=\"warning\" @click=\"openEditar(data[indextr]);generar=false\" type=\"line\" icon-pack=\"feather\" icon=\"icon-edit\">\r\n                                    </vs-button>\r\n                                </vx-tooltip>\r\n                                <vx-tooltip class=\"ml-3\" style=\"display: inline-block;\" text=\"Eliminar\" position=\"top\" color=\"success\">\r\n                                    <vs-button size=\"small\" class=\"modal-default-button\" color=\"danger\" @click=\"openConfirm(data[indextr])\" type=\"line\" icon-pack=\"feather\" icon=\"icon-trash\">\r\n                                    </vs-button>\r\n                                </vx-tooltip>\r\n                            </div>\r\n                        </vs-td>\r\n                    </vs-tr>\r\n                </template>\r\n            </vs-table>\r\n        </div>\r\n        <!--MODAL PARA EXPORTAR A EXCEL-->\r\n        <vs-prompt title=\"Exportar a Excel\" class=\"export-options\" @cancle=\"clearFields\" @accept=\"exportToExcel\" accept-text=\"Exportar\" @close=\"clearFields\" :active.sync=\"activePrompt\">\r\n            <vs-alert class=\"mb-3\" color=\"danger\" icon-pack=\"feather\" icon=\"icon-info\">\r\n                <span>Recuerde <b>seleccionar</b> los códigos que desea exportar.</span>\r\n            </vs-alert>\r\n            <vs-input v-model=\"fileName\" placeholder=\"Ingrese el nombre del archivo\" class=\"w-full\" />\r\n            <v-select v-model=\"selectedFormat\" :options=\"formats\" class=\"my-4\" />\r\n            <div class=\"flex\">\r\n                <!--<span class=\"mr-4\">Cell Auto Width:</span>\r\n                <vs-switch v-model=\"cellAutoWidth\">Cell Auto Width</vs-switch>-->\r\n            </div>\r\n        </vs-prompt>\r\n        <!--MODAL PARA AGREGAR-->\r\n        <vs-popup classContent=\"popup-example\" fullscreen :title=\"title\" :active.sync=\"popupAgregar\">\r\n            <div class=\"flex mb-4\">\r\n                <div class=\"w-full p-2 bg-gray-400 text-center\">\r\n                    <p class=\"font-mono  text-lg text-gray-800 text-center\">\r\n                        Area\r\n                    </p>\r\n                    <v-select @input=\"filtroLibros()\" :options=\"areas\" :reduce=\"areas => areas\" label=\"nombrearea\" class=\"w-full\" v-model=\"acortador.area\" />\r\n                </div>\r\n            </div>\r\n            <div class=\"flex mb-4\">\r\n                <div class=\"w-1/2 p-2 bg-gray-400 text-center\">\r\n                    <p class=\"font-mono  text-lg text-gray-800 text-center\">\r\n                        Libro\r\n                    </p>\r\n                    <v-select :options=\"arregloLibros\" :reduce=\"arregloLibros => arregloLibros\" label=\"nombrelibro\" class=\"w-full\" v-model=\"acortador.libro\" />\r\n                </div>\r\n                <div class=\"w-1/2 p-2 bg-gray-500 text-center\">\r\n                    <p class=\"font-mono  text-lg text-gray-800 text-center\">\r\n                        Unidad\r\n                    </p>\r\n                     <v-select :options=\"unidades\" :reduce=\"unidades => unidades\" label=\"id\" class=\"w-full\" v-model=\"acortador.unidad\" />\r\n                </div>\r\n            </div>\r\n            <div class=\"flex mb-4\">\r\n                <div class=\"w-1/2 p-2 bg-gray-400 text-center\">\r\n                    <p class=\"font-mono  text-lg text-gray-800 text-center\">\r\n                        Seleccione la pagina\r\n                    </p>\r\n                    <vs-input type=\"number\" class=\"inputx w-full\" placeholder=\"Pagina\" v-model=\"acortador.pagina\"/>\r\n                </div>\r\n                <div class=\"w-1/2 p-2 bg-gray-500 text-center\">\r\n                    <p class=\"font-mono  text-lg text-gray-800 text-center\">\r\n                        Enlace original\r\n                    </p>\r\n                    <vs-input class=\"inputx w-full\"  placeholder=\"Ingrese el link\" v-model=\"acortador.link_original\"/>\r\n                </div>\r\n            </div>\r\n            <vs-row v-if=\"id > 0\">\r\n                <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"2\">\r\n                    <p>link acortado</p> \r\n                </vs-col>\r\n                <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"10\">\r\n                   <vs-input class=\"inputx w-full\" disabled placeholder=\"Ingrese el link\" v-model=\"acortador.link_acortado\"/>\r\n                </vs-col>\r\n            </vs-row>\r\n            <div class=\"flex mt-3\">\r\n                <vs-button v-if=\"generar == false\" @click=\"generateLink()\" class=\"ml-2\" color=\"success\" type=\"filled\">{{ title }}</vs-button>\r\n                </div>\r\n        </vs-popup>\r\n     </div>  \r\n</template>\r\n<script>\r\nimport flatPickr from 'vue-flatpickr-component';\r\nimport 'flatpickr/dist/flatpickr.css';\r\nimport Vue from 'vue'\r\nimport axios from 'axios'\r\nimport vSelect from 'vue-select'\r\nimport moment from 'moment'\r\nimport $ from 'jquery'\r\nimport jsPDF from 'jspdf' \r\nimport html2canvas from \"html2canvas\"\r\nimport pdfMake from \"pdfmake/build/pdfmake\";\r\n// var pdfMake = require ('pdfmake/build/pdfmake.js');\r\nvar pdfFonts = require ('pdfmake/build/vfs_fonts.js');\r\npdfMake.vfs = pdfFonts.pdfMake.vfs;\r\nexport default {\r\n    data(){\r\n        return{\r\n            //para el reporte excel\r\n            fileName: null,\r\n            activePrompt: false,\r\n             codigoSelected: [],\r\n             reportesActivo: 0,\r\n            fileName: null,\r\n            formats: ['xls', 'xlsx', 'csv', 'txt'],\r\n            cellAutoWidth: true,\r\n            selectedFormat: 'xls',\r\n            //fin variables para exportar\r\n            usuario:[],\r\n            arregloLinks:[],\r\n            arregloLibros:[],\r\n            areas:[],\r\n            popupAgregar:false,\r\n            id:0,\r\n            acortador:{\r\n                libro:'',\r\n                unidad:'',\r\n                pagina:'',\r\n                link_original:'',\r\n                link_acortado:'',\r\n                area:'',\r\n            },\r\n            unidades:[ \r\n                {id:\"1\"},\r\n                {id:\"2\"},\r\n                {id:\"3\"},\r\n                {id:\"4\"},\r\n                {id:\"5\"},\r\n                {id:\"6\"},\r\n            ],\r\n            generar:false, \r\n            title:'',\r\n        }\r\n    },\r\n    computed:{\r\n    },\r\n    methods:{\r\n        //para obtener el listado de las areas\r\n        getAreas() {\r\n        let me = this;\r\n        this.$http.get(this.$server_url+'areas')\r\n            .then(function (res) {\r\n                me.areas = res.data.area\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error + ' error');\r\n            })\r\n        },\r\n        getLinks(){\r\n        let me = this\r\n        this.$http.get(this.$server_url+`l_`).then(res => {\r\n            me.arregloLinks = res.data;\r\n            })\r\n            .catch(function (error) {\r\n            console.log(error)\r\n            })\r\n        },\r\n        //lista de libros para usar en el select\r\n        filtroLibros(){\r\n        let me = this\r\n        me.acortador.libro = \"\"\r\n        me.$vs.loading();\r\n        this.$http.get(this.$server_url+'filtroLibros?area='+me.acortador.area.idarea).then(res => {\r\n            me.$vs.loading.close();\r\n            me.arregloLibros = res.data;\r\n            })\r\n            .catch(function (error) {\r\n            me.$vs.loading.close();\r\n            console.log(error)\r\n            })\r\n        },\r\n        generateLink(){\r\n            let me = this;\r\n            if(me.acortador.area == undefined || me.acortador.area == \"\" || me.acortador.area == null){\r\n                me.$vs.notify({\r\n                    text: \"Tiene que seleccionar un area\",\r\n                    color: 'warning',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-alert-triangle'\r\n                })\r\n                return\r\n            }\r\n            if(me.acortador.libro == undefined || me.acortador.libro == \"\" || me.acortador.libro == null){\r\n                me.$vs.notify({\r\n                    text: \"Tiene que seleccionar un libro\",\r\n                    color: 'warning',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-alert-triangle'\r\n                })\r\n                return\r\n            }\r\n            if(me.acortador.link_original.trim() == \"\"){\r\n                me.$vs.notify({\r\n                    text: \"Tiene que escribir un link\",\r\n                    color: 'warning',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-alert-triangle'\r\n                })\r\n                return\r\n            }\r\n            let formData = new FormData()\r\n            formData.append('id',           me.id)\r\n            formData.append('area_id',      me.acortador.area.idarea)\r\n            formData.append('libro_id',     me.acortador.libro.idlibro)\r\n            if(me.acortador.unidad == undefined || me.acortador.unidad == null || me.acortador.unidad == \"\"){\r\n                formData.append('unidad',     \"\")      \r\n            }else{\r\n                formData.append('unidad',       me.acortador.unidad.id)\r\n            }\r\n            formData.append('pagina',       me.acortador.pagina)\r\n            formData.append('link_original',me.acortador.link_original)\r\n            formData.append('link_acortado',me.acortador.link_acortado)\r\n            formData.append('idusuario',    me.usuario.idusuario)\r\n            me.$vs.loading();\r\n            this.$http.post(this.$server_url+'l_', formData)\r\n            .then(res => {\r\n            me.$vs.loading.close()\r\n            if(me.id > 0){\r\n                me.$vs.notify({\r\n                    text: res.data.message,\r\n                    color: 'success',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-alert-triangle'\r\n                })\r\n                me.getLinks()\r\n                me.popupAgregar = false\r\n                return \r\n            }\r\n            if(me.id == 0){\r\n                me.generar=true;\r\n            }\r\n            let ruta = res.data\r\n            var aux = document.createElement(\"input\");\r\n            aux.setAttribute(\"value\", ruta);\r\n            document.body.appendChild(aux);\r\n            aux.select();\r\n            try {\r\n                var status = document.execCommand('copy');\r\n                if (!status) {\r\n                    me.$vs.notify({ text: 'Error al copiar el link', color: 'warning', iconPack: 'feather', icon: 'icon-alert-triangle' })\r\n                } else {\r\n                    me.$vs.notify({ text: 'Link copiado', color: 'success', iconPack: 'feather', icon: 'icon-check' })\r\n                }\r\n            } catch (err) {\r\n                console.log('No se pudo copiar');\r\n            }\r\n            document.body.removeChild(aux);\r\n            me.getLinks()\r\n            me.popupAgregar = false\r\n            })\r\n            .catch(function (error) {\r\n                me.$vs.loading.close()\r\n                console.log(error);\r\n            })  \r\n        },\r\n        copiarLink(tr){\r\n            let me = this;\r\n            let ruta = tr.link_acortado\r\n            var aux = document.createElement(\"input\");\r\n            aux.setAttribute(\"value\", ruta);\r\n            document.body.appendChild(aux);\r\n            aux.select();\r\n            try {\r\n                var status = document.execCommand('copy');\r\n                if (!status) {\r\n                    me.$vs.notify({ text: 'Error al copiar el link', color: 'warning', iconPack: 'feather', icon: 'icon-alert-triangle' })\r\n                } else {\r\n                    me.$vs.notify({ text: 'Link copiado', color: 'success', iconPack: 'feather', icon: 'icon-check' })\r\n                }\r\n            } catch (err) {\r\n                console.log('No se pudo copiar');\r\n            }\r\n            document.body.removeChild(aux);\r\n        },\r\n        openEditar(tr){\r\n            let me                      = this;\r\n            me.id                       = tr.id\r\n            me.acortador.area           = {idarea:tr.area_id,nombrearea:tr.nombrearea}\r\n            me.acortador.libro          = {idlibro:tr.libro_id,nombrelibro:tr.nombrelibro}\r\n            me.acortador.unidad         = {id:tr.unidad}\r\n            me.acortador.pagina         = tr.pagina\r\n            me.acortador.link_original  = tr.link_original\r\n            me.acortador.link_acortado  = tr.link_acortado\r\n            me.title                    = \"Actualizar link\"\r\n            me.popupAgregar             = true\r\n        },\r\n        openConfirm(tr){\r\n            let me = this;\r\n            me.id = tr.id\r\n            this.$vs.dialog({\r\n                type:'confirm',\r\n                color: 'danger',\r\n                title: `Confirmar`,\r\n                text: 'Estas seguro de eliminar?',\r\n                accept:this.eliminarLink\r\n            })\r\n        },\r\n        eliminarLink(){\r\n        let me = this\r\n        me.$vs.loading()\r\n        this.$http.delete(this.$server_url+'l_/'+me.id)\r\n            .then(res => {\r\n                me.$vs.loading.close()\r\n                me.$vs.notify({\r\n                    text: 'Se elimino correctamente el link',\r\n                    color: 'success',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-alert-triangle'\r\n                })\r\n                me.getLinks()\r\n            })\r\n            .catch(function (error) {\r\n            me.$vs.loading.close()\r\n            console.log(error)\r\n            })\r\n        },\r\n        limpiar(){\r\n            let me                      = this;\r\n            me.generar                  = false\r\n            me.id                       = 0\r\n            me.acortador.area           = ''\r\n            me.acortador.libro          = ''\r\n            me.acortador.unidad         = ''\r\n            me.acortador.pagina         = ''\r\n            me.acortador.link_original  = ''\r\n            me.acortador.link_acortado  = ''\r\n        },\r\n      //para limipiar los campos del excel\r\n        clearFields() {\r\n            this.fileName = ''\r\n            this.cellAutoWidth = true\r\n            this.selectedFormat = 'xls'\r\n        },\r\n        //metodo par descargar el excel\r\n           exportToExcel() {\r\n            let headerTitle = ['libro' ,'Editor', 'Unidad', 'Pagina','Link original','link acortado'];\r\n            let headerVal = [ 'nombrelibro','editor','unidad',  'pagina','link_original','link_acortado'];\r\n            let codigoSelectedMayus = this.codigoSelected\r\n            for (var i = 0; i < codigoSelectedMayus.length; i++) {\r\n                for (var key in codigoSelectedMayus[i]) {\r\n                    if (typeof codigoSelectedMayus[i][key] == \"string\") {\r\n                        codigoSelectedMayus[i][key] = codigoSelectedMayus[i][key].toUpperCase();\r\n                    }\r\n                }\r\n            }\r\n            import('@/vendor/Export2Excel').then(excel => {\r\n                const list = codigoSelectedMayus\r\n                const data = this.formatJson(headerVal, list)\r\n                excel.export_json_to_excel({\r\n                    header: headerTitle,\r\n                    data,\r\n                    filename: this.fileName,\r\n                    autoWidth: this.cellAutoWidth,\r\n                    bookType: this.selectedFormat\r\n                })\r\n                this.clearFields()\r\n                this.guardarActivo = '';\r\n                this.generarActivo = ' ';\r\n                this.textAlertCant = '';\r\n                this.cantidad = '';\r\n                this.codigoSelected = [];\r\n            })\r\n        },\r\n        formatJson(filterVal, jsonData) {\r\n            return jsonData.map(v => filterVal.map(j => {\r\n                return v[j]\r\n            }))\r\n        },\r\n    },\r\n    created(){\r\n        let me = this\r\n        me.usuario = JSON.parse(localStorage.getItem(\"usuario\"))\r\n        me.getLinks()\r\n        me.getAreas() \r\n    },\r\n    components: {\r\n        'v-select': vSelect,  \r\n    },\r\n}\r\n</script>\r\n<style>\r\n#botonreporte{\r\n    display:none;\r\n}\r\n#botonexcel{\r\n    display:none;\r\n    margin:0 10px;\r\n}\r\n</style>"]}]}