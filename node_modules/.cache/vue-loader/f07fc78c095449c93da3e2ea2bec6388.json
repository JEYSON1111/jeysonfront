{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\docentes\\calificaciones.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\docentes\\calificaciones.vue","mtime":1712682815750},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nimport flatPickr from 'vue-flatpickr-component';\r\nimport 'flatpickr/dist/flatpickr.css';\r\nimport Vue from 'vue'\r\nimport axios from 'axios'\r\nimport vSelect from 'vue-select'\r\nVue.use(axios)\r\nexport default {\r\n    components: {\r\n        'v-select': vSelect,\r\n        flatPickr\r\n    },\r\n    data: () => ({\r\n        fileName: null,\r\n        formats: ['xls', 'txt'],\r\n        cellAutoWidth: true,\r\n        selectedFormat: 'xls',\r\n        respuestas: [],\r\n        activePrompt: false,\r\n        val: '',\r\n        alumnos: [],\r\n        codigoSelected: [],\r\n        idusuario: '',\r\n        estudiantes: [],\r\n        grupo_usuario: '',\r\n            idusuario: '',\r\n            datoU: '',\r\n    }),\r\n    mounted() {\r\n        this.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n        this.grupo_usuario = this.usuario.id_group;\r\n        this.idusuario = this.usuario.idusuario;\r\n        if (this.grupo_usuario == 10) { //director\r\n            this.datoU = JSON.parse(localStorage.getItem('datoUser'))\r\n            // console.log(this.datoU)\r\n            this.idusuario = this.datoU.idusuario;\r\n        }\r\n        this.getEstudiantes()\r\n    },\r\n    created() {},\r\n    methods: {\r\n        getEstudiantes() {\r\n            let me = this;\r\n            const calf = []\r\n            var url = this.$server_url+\"calificacion?codigo=\" + localStorage.codigo;\r\n            this.$http.get(url).then(function (response) {\r\n                    me.respuestas = []\r\n                    var respuesta = response.data;\r\n                    me.estudiantes = response.data;\r\n                    console.log(me.estudiantes);\r\n                    if (response.data.length != 0) {\r\n                        me.alumnos = response.data.items;\r\n                        me.alumnos.forEach(element => {\r\n                            var cal = new Object();\r\n                            cal.idusuario = element.idusuario\r\n                            cal.Avatar = element.foto_user\r\n                            cal.Email = element.email\r\n                            cal.Cedula = element.cedula\r\n                            cal.Estudiante = element.nombres + \" \" + element.apellidos\r\n                            cal.tareas = new Object();\r\n                            for (let index = 0; index < element.total.length; index++) {\r\n                                try {\r\n                                    cal.tareas[index] = element.tareas[index].nota\r\n                                    eval(\"cal.Tarea\" + index + \"=\" + element.tareas[index].nota);\r\n                                } catch (error) {\r\n                                    cal.tareas[index] = 0\r\n                                    eval(\"cal.Tarea\" + index + \"=\" + 0);\r\n                                }\r\n                                // if(element.Tarea[index].nota){\r\n                                // }else{\r\n                                // }\r\n                            }\r\n                            me.respuestas.push(cal)\r\n                        });\r\n                    }\r\n\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                });\r\n        },\r\n        exportToExcel() {\r\n            let headerTitle = ['Cedula', 'Estudiante'];\r\n            let headerVal = ['Cedula', 'Estudiante'];\r\n\r\n            for (let index = 0; index < this.alumnos[0].total.length; index++) {\r\n                headerTitle.push(\"Tarea\" + index)\r\n                headerVal.push(\"Tarea\" + index)\r\n            }\r\n\r\n            import('@/vendor/Export2Excel').then(excel => {\r\n                const list = this.respuestas\r\n                const data = this.formatJson(headerVal, list)\r\n                excel.export_json_to_excel({\r\n                    header: headerTitle,\r\n                    data,\r\n                    filename: this.fileName,\r\n                    autoWidth: this.cellAutoWidth,\r\n                    bookType: this.selectedFormat\r\n                })\r\n                this.clearFields()\r\n                this.guardarActivo = '';\r\n                this.generarActivo = ' ';\r\n                this.textAlertCant = '';\r\n                this.cantidad = '';\r\n                this.codigoSelected = [];\r\n            })\r\n        },\r\n        formatJson(filterVal, jsonData) {\r\n            return jsonData.map(v => filterVal.map(j => {\r\n                return v[j]\r\n            }))\r\n        },\r\n        clearFields() {\r\n            this.fileName = ''\r\n            this.cellAutoWidth = true\r\n            this.selectedFormat = 'xls'\r\n        },\r\n        eliminar(id) {\r\n            let me = this;\r\n            if (me.grupo_usuario == 10) {\r\n                me.$vs.notify({\r\n                    text: 'Este contenido pertenece a otro docente',\r\n                    color: 'warning',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-check'\r\n                })\r\n                return;\r\n            }\r\n            this.idusuario = id;\r\n            console.log(this.idusuario);\r\n            this.$vs.dialog({\r\n                color: 'danger',\r\n                title: `Eliminar estudiante`,\r\n                text: 'Seguro desea eliminar?',\r\n                acceptText:'Aceptar',\r\n                accept: this.acceptAlert,\r\n            })\r\n        },\r\n        acceptAlert() {\r\n            let me = this;\r\n            let formData = new FormData();\r\n            formData.append('id', me.idusuario);\r\n            formData.append('codigo', localStorage.codigo);\r\n            this.$http.post(this.$server_url+\"eliminarAlumno\", formData)\r\n                .then(function (response) {\r\n                    me.$vs.notify({\r\n                        color: 'success',\r\n                        title: 'Aceptado',\r\n                        text: 'Estudiante eliminado'\r\n                    })\r\n                    me.getEstudiantes();\r\n                })\r\n                .catch(function (error) {\r\n                    me.$vs.notify({\r\n                        color: 'danger',\r\n                        title: 'Error',\r\n                        text: error\r\n                    })\r\n                })\r\n        },\r\n    },\r\n}\r\n",{"version":3,"sources":["calificaciones.vue"],"names":[],"mappings":";AAgfile":"calificaciones.vue","sourceRoot":"src/views/docentes","sourcesContent":["<template>\r\n<div>\r\n    <h4>Estudiantes</h4>\r\n    <vs-table max-items=\"10\" v-model=\"codigoSelected\" search pagination :data=\"respuestas\">\r\n        <template slot=\"header\">\r\n            <vs-button color=\"success\" size=\"small\" class=\"mr-5\" style=\"font-size: 14px;\" @click=\"activePrompt=true;\">Exportar</vs-button>\r\n        </template>\r\n        <template slot=\"thead\">\r\n            <vs-th sort-key=\"nombres\">Estudiante</vs-th>\r\n            <!-- <vs-th sort-key=\"nombres\">CÃ©dula</vs-th>\r\n            <vs-th sort-key=\"nombres\">Estudiantes</vs-th> -->\r\n            <template v-if=\"estudiantes.length != 0\">\r\n                <vs-th v-for=\"(item, $index) in respuestas[0].tareas\" :key=\"$index\">T{{$index}}</vs-th>\r\n            </template>\r\n        </template>\r\n        <template slot-scope=\"{data}\">\r\n            <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                <vs-td :data=\"tr\" class=\"w-1/3\">\r\n                    <div class=\"twitter-feed-header flex items-center\">\r\n                        <div class=\"con-vs-avatar m-0 35px\" style=\"width: 35px; height: 35px; background: rgb(195, 195, 195);\">\r\n                            <div class=\"con-img vs-avatar--con-img\"><img :src=\"$data_url+'archivos/perfil/'+tr.Avatar\" alt=\"\"></div>\r\n                        </div>\r\n                        <div class=\"leading-tight ml-3\">\r\n                            <p class=\"feed-author font-semibold\">{{tr.Estudiante}}</p>\r\n                            <span class=\"flex items-center\">\r\n                                <small>{{tr.Email}}</small>\r\n                                <span class=\"ml-1 feather-icon select-none relative\">\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-check h-3 w-3 bg-primary rounded-full text-white\">\r\n                                        <polyline points=\"20 6 9 17 4 12\"></polyline>\r\n                                    </svg>\r\n                                </span>\r\n                            </span>\r\n                            <span class=\"flex items-center\">\r\n                                <small>{{tr.Cedula}}</small>\r\n                            </span>\r\n                            <span class=\"flex items-center\">\r\n                                <vs-button type=\"relief\" size=\"small\" color=\"danger\" @click=\"eliminar(tr.idusuario)\">Eliminar</vs-button>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </vs-td>\r\n                <template v-for=\"(item, $indexs) in tr.tareas\">\r\n                    <vs-td :key=\"$indexs\">\r\n                        <span v-if=\"item\">{{item}}</span>\r\n                        <span v-else>0</span>\r\n                    </vs-td>\r\n                </template>\r\n            </vs-tr>\r\n        </template>\r\n    </vs-table>\r\n    <!----modal exportar--------->\r\n    <vs-prompt title=\"Exportar Calificaciones\" class=\"export-options\" @cancle=\"clearFields\" @accept=\"exportToExcel\" accept-text=\"Exportar\" @close=\"clearFields\" :active.sync=\"activePrompt\">\r\n        <vs-input v-model=\"fileName\" placeholder=\"Nombre del archivo\" class=\"w-full\" />\r\n        <v-select v-model=\"selectedFormat\" :options=\"formats\" class=\"my-4\" />\r\n        <div class=\"flex\">\r\n            <!--<span class=\"mr-4\">Cell Auto Width:</span>\r\n            <vs-switch v-model=\"cellAutoWidth\">Cell Auto Width</vs-switch>-->\r\n        </div>\r\n    </vs-prompt>\r\n    <!----fin modal exportar--------->\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport flatPickr from 'vue-flatpickr-component';\r\nimport 'flatpickr/dist/flatpickr.css';\r\nimport Vue from 'vue'\r\nimport axios from 'axios'\r\nimport vSelect from 'vue-select'\r\nVue.use(axios)\r\nexport default {\r\n    components: {\r\n        'v-select': vSelect,\r\n        flatPickr\r\n    },\r\n    data: () => ({\r\n        fileName: null,\r\n        formats: ['xls', 'txt'],\r\n        cellAutoWidth: true,\r\n        selectedFormat: 'xls',\r\n        respuestas: [],\r\n        activePrompt: false,\r\n        val: '',\r\n        alumnos: [],\r\n        codigoSelected: [],\r\n        idusuario: '',\r\n        estudiantes: [],\r\n        grupo_usuario: '',\r\n            idusuario: '',\r\n            datoU: '',\r\n    }),\r\n    mounted() {\r\n        this.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n        this.grupo_usuario = this.usuario.id_group;\r\n        this.idusuario = this.usuario.idusuario;\r\n        if (this.grupo_usuario == 10) { //director\r\n            this.datoU = JSON.parse(localStorage.getItem('datoUser'))\r\n            // console.log(this.datoU)\r\n            this.idusuario = this.datoU.idusuario;\r\n        }\r\n        this.getEstudiantes()\r\n    },\r\n    created() {},\r\n    methods: {\r\n        getEstudiantes() {\r\n            let me = this;\r\n            const calf = []\r\n            var url = this.$server_url+\"calificacion?codigo=\" + localStorage.codigo;\r\n            this.$http.get(url).then(function (response) {\r\n                    me.respuestas = []\r\n                    var respuesta = response.data;\r\n                    me.estudiantes = response.data;\r\n                    console.log(me.estudiantes);\r\n                    if (response.data.length != 0) {\r\n                        me.alumnos = response.data.items;\r\n                        me.alumnos.forEach(element => {\r\n                            var cal = new Object();\r\n                            cal.idusuario = element.idusuario\r\n                            cal.Avatar = element.foto_user\r\n                            cal.Email = element.email\r\n                            cal.Cedula = element.cedula\r\n                            cal.Estudiante = element.nombres + \" \" + element.apellidos\r\n                            cal.tareas = new Object();\r\n                            for (let index = 0; index < element.total.length; index++) {\r\n                                try {\r\n                                    cal.tareas[index] = element.tareas[index].nota\r\n                                    eval(\"cal.Tarea\" + index + \"=\" + element.tareas[index].nota);\r\n                                } catch (error) {\r\n                                    cal.tareas[index] = 0\r\n                                    eval(\"cal.Tarea\" + index + \"=\" + 0);\r\n                                }\r\n                                // if(element.Tarea[index].nota){\r\n                                // }else{\r\n                                // }\r\n                            }\r\n                            me.respuestas.push(cal)\r\n                        });\r\n                    }\r\n\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                });\r\n        },\r\n        exportToExcel() {\r\n            let headerTitle = ['Cedula', 'Estudiante'];\r\n            let headerVal = ['Cedula', 'Estudiante'];\r\n\r\n            for (let index = 0; index < this.alumnos[0].total.length; index++) {\r\n                headerTitle.push(\"Tarea\" + index)\r\n                headerVal.push(\"Tarea\" + index)\r\n            }\r\n\r\n            import('@/vendor/Export2Excel').then(excel => {\r\n                const list = this.respuestas\r\n                const data = this.formatJson(headerVal, list)\r\n                excel.export_json_to_excel({\r\n                    header: headerTitle,\r\n                    data,\r\n                    filename: this.fileName,\r\n                    autoWidth: this.cellAutoWidth,\r\n                    bookType: this.selectedFormat\r\n                })\r\n                this.clearFields()\r\n                this.guardarActivo = '';\r\n                this.generarActivo = ' ';\r\n                this.textAlertCant = '';\r\n                this.cantidad = '';\r\n                this.codigoSelected = [];\r\n            })\r\n        },\r\n        formatJson(filterVal, jsonData) {\r\n            return jsonData.map(v => filterVal.map(j => {\r\n                return v[j]\r\n            }))\r\n        },\r\n        clearFields() {\r\n            this.fileName = ''\r\n            this.cellAutoWidth = true\r\n            this.selectedFormat = 'xls'\r\n        },\r\n        eliminar(id) {\r\n            let me = this;\r\n            if (me.grupo_usuario == 10) {\r\n                me.$vs.notify({\r\n                    text: 'Este contenido pertenece a otro docente',\r\n                    color: 'warning',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-check'\r\n                })\r\n                return;\r\n            }\r\n            this.idusuario = id;\r\n            console.log(this.idusuario);\r\n            this.$vs.dialog({\r\n                color: 'danger',\r\n                title: `Eliminar estudiante`,\r\n                text: 'Seguro desea eliminar?',\r\n                acceptText:'Aceptar',\r\n                accept: this.acceptAlert,\r\n            })\r\n        },\r\n        acceptAlert() {\r\n            let me = this;\r\n            let formData = new FormData();\r\n            formData.append('id', me.idusuario);\r\n            formData.append('codigo', localStorage.codigo);\r\n            this.$http.post(this.$server_url+\"eliminarAlumno\", formData)\r\n                .then(function (response) {\r\n                    me.$vs.notify({\r\n                        color: 'success',\r\n                        title: 'Aceptado',\r\n                        text: 'Estudiante eliminado'\r\n                    })\r\n                    me.getEstudiantes();\r\n                })\r\n                .catch(function (error) {\r\n                    me.$vs.notify({\r\n                        color: 'danger',\r\n                        title: 'Error',\r\n                        text: error\r\n                    })\r\n                })\r\n        },\r\n    },\r\n}\r\n</script>\r\n"]}]}