{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\pedidos\\listadoLibrosBodega.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\pedidos\\listadoLibrosBodega.vue","mtime":1712682816349},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nimport exportActaGuiasBodegaVue from '../temporadas/components/exportActaGuiasBodega.vue';\r\nimport GuiasStockVue from './components/Guias/GuiasStock.vue';\r\nimport vSelect from 'vue-select';\r\nexport default {\r\n    name: 'lista-de-contratos-gerencia',\r\n    components: {\r\n        'v-select': vSelect,\r\n        exportActaGuiasBodegaVue,\r\n        GuiasStockVue,\r\n    },\r\n    data() {\r\n        return {\r\n            listaPeriodos: [],\r\n            periodoSelect: {},\r\n            listaContratos: [],\r\n            listaContratosTmp: [],\r\n            arregloStock:[],\r\n            pedido:{},\r\n            noroot: '',\r\n            tipo_pedido: 0,\r\n            filtro: 1,\r\n            arregloLibros: [],\r\n            modalLibros: false,\r\n            totalLibros: 0,\r\n            //variables para exportar\r\n            mostrarImprimirActa:false,\r\n            popupCarga:false,\r\n            popupConfirmAprobar:false,\r\n            //fin variables para exporta el acta\r\n        }\r\n    },\r\n    computed: {\r\n        sumaAprobados() {\r\n            let me = this;\r\n            let datos = me.listaContratosTmp.filter(p => (p.estado_entrega == 1) && (p.estado == 1));\r\n            let resultado = datos.length\r\n            return resultado\r\n        },\r\n        SumaEntregados() {\r\n            let me = this;\r\n            let datos = me.listaContratosTmp.filter(p => (p.estado_entrega == 2) && (p.estado == 1));\r\n            let resultado = datos.length\r\n            return resultado\r\n        },\r\n    },\r\n    mounted() {\r\n        let me = this;\r\n        me.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n        me.getPeriodos();\r\n    },\r\n    methods: {\r\n        verStock(){\r\n            let me = this;\r\n            me.arregloStock = []\r\n            me.$vs.loading()\r\n            this.$http.get(this.$server_url+'guias?verStock=yes&id_pedido='+me.pedido.id_pedido)\r\n                .then(function (res) {\r\n                    me.$vs.loading.close()\r\n                    if(res.data.status == 0){\r\n                        me.$vs.notify({\r\n                            text: res.data.message,\r\n                            color: 'danger',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-alert-triangle',\r\n                            time:3000\r\n                        })\r\n                        return\r\n                    }\r\n                    //ingresar libros en array\r\n                    let datos = res.data\r\n                    var predatos = []\r\n                    predatos = datos\r\n                    me.arregloStock = predatos.sort(function(a, b) {\r\n                        var nombreA = a.nombrelibro.toLowerCase();\r\n                        var nombreB = b.nombrelibro.toLowerCase();\r\n                        var numA = parseInt(nombreA.match(/\\d+$/)); // extraer el número del final (si existe)\r\n                        var numB = parseInt(nombreB.match(/\\d+$/)); // extraer el número del final (si existe)\r\n                        nombreA = nombreA.replace(/\\d+$/, ''); // quitar el número del final\r\n                        nombreB = nombreB.replace(/\\d+$/, ''); // quitar el número del final\r\n                        \r\n                        if (nombreA < nombreB) {\r\n                            return -1;\r\n                        }\r\n                        if (nombreA > nombreB) {\r\n                            return 1;\r\n                        }\r\n                        if (numA && !numB) { // si a tiene número y b no, b va primero\r\n                            return 1;\r\n                        }\r\n                        if (!numA && numB) { // si b tiene número y a no, a va primero\r\n                            return -1;\r\n                        }\r\n                        if (numA && numB) { // si ambos tienen número, compararlos\r\n                            if (numA < 10 && numB >= 10) { // si a es menor que 10 y b es 10 o mayor, a va primero\r\n                            return -1;\r\n                            }\r\n                            if (numA >= 10 && numB < 10) { // si b es menor que 10 y a es 10 o mayor, b va primero\r\n                            return 1;\r\n                            }\r\n                            return numA - numB; // comparar los números directamente\r\n                        }\r\n                        return 0; // si son iguales en todo, no hay diferencia\r\n                    });\r\n                    //open confirm\r\n                    me.popupConfirmAprobar = true\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                    me.$vs.loading.close()\r\n                    me.$vs.notify({\r\n                        text: \"Hubo problemas con el servidor de facturacion\",\r\n                        color: 'danger',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-alert-triangle',\r\n                        time:3000\r\n                    })\r\n                })\r\n            \r\n        },\r\n        changeHandle(e) {\r\n            let me                  = this;\r\n            me.popupCarga           = false\r\n            me.mostrarImprimirActa  = false\r\n        },\r\n        ImprimirActa(){\r\n            let me                  = this;\r\n            me.popupCarga           = true\r\n            me.mostrarImprimirActa  = true\r\n        },\r\n        getPeriodos() {\r\n            let me = this;\r\n            this.$http.get(this.$server_url + 'periodoActivo')\r\n                .then((result) => {\r\n                    // console.log(result.data)\r\n                    me.listaPeriodos = result.data\r\n                }).catch((err) => {\r\n                    console.log(err)\r\n                });\r\n        },\r\n        f_pedidos(idperiodo) {\r\n            let me = this;\r\n            console.log(idperiodo)\r\n            if (idperiodo == null) {\r\n                return\r\n            }\r\n            me.$vs.loading()\r\n            this.$http.get(this.$server_url + 'reportePedidosGuiasBodega/' + idperiodo)\r\n                .then((result) => {\r\n                    let datos = result.data\r\n                    me.listaContratosTmp = datos.filter(p => p.estado_entrega != 0)\r\n                    me.filtroTipo();\r\n                    me.$vs.loading.close()\r\n                }).catch((err) => {\r\n                    console.log(err)\r\n                    me.$vs.loading.close()\r\n                });\r\n        },\r\n        filtroTipo() {\r\n            let me = this;\r\n            me.listaContratos = []\r\n            if (me.filtro == 1) {\r\n                let datos = me.listaContratosTmp.filter(p => (p.estado_entrega == 1));\r\n                me.listaContratos = datos\r\n                return\r\n            }\r\n            if (me.filtro == 2) {\r\n                let datos = me.listaContratosTmp.filter(p => (p.estado_entrega == 2));\r\n                me.listaContratos = datos\r\n                return\r\n            }\r\n        },\r\n        f_detalle_libros(item) {\r\n            let me = this\r\n            me.modalLibros = true;\r\n            me.$vs.loading()\r\n            this.$http.get(this.$server_url + 'get_val_pedidoInfo/' + item.id_pedido)\r\n                .then(res => {\r\n                    console.log(res.data)\r\n                    let datos = res.data\r\n                    me.arregloLibros = datos.filter(p => p.valor > 0)\r\n                    me.totalLibros = datos.reduce((acc, valor) => {\r\n                        const respuesta = acc + valor.valor\r\n                        return respuesta\r\n                    }, 0)\r\n                    me.$vs.loading.close()\r\n                })\r\n        },\r\n        openConfirm(){\r\n            this.$vs.dialog({\r\n                type:'confirm',\r\n                color: 'danger',\r\n                title: `Confirmar`,\r\n                acceptText:'aceptar',\r\n                cancelText:'cancelar',\r\n                text: 'Esta seguro de entregar esta solicitud de guias?',\r\n                accept:this.entregarPedido\r\n            })\r\n        },\r\n        entregarPedido() {\r\n            let me = this\r\n            me.$vs.loading();\r\n            let data = {\r\n                'id_pedido': this.pedido.id_pedido,\r\n                'estado': '2',\r\n                'grupo': 'bodega',\r\n                'acta':this.pedido.ven_codigo,\r\n                'asesor_id':this.pedido.id_asesor\r\n            }\r\n            this.$http.post(this.$server_url + 'entregarPedido', data)\r\n                .then(res => {\r\n                    me.f_notificaciones('Pedido entregado', 'success', 'check')\r\n                    me.f_pedidos(me.periodoSelect.idperiodoescolar);\r\n                    me.$vs.loading.close();\r\n                })\r\n                .catch(err => {\r\n                    console.log(err)\r\n                    me.$vs.loading.close();\r\n                })\r\n        },\r\n        f_notificaciones(msj, color, icono) {\r\n            let me = this;\r\n            me.$vs.notify({\r\n                text: msj,\r\n                color: color,\r\n                iconPack: 'feather',\r\n                icon: icono\r\n            })\r\n            return;\r\n        }\r\n    },\r\n}\r\n",{"version":3,"sources":["listadoLibrosBodega.vue"],"names":[],"mappings":";AAifile":"listadoLibrosBodega.vue","sourceRoot":"src/views/pedidos","sourcesContent":["<template>\r\n<div>\r\n    <div class=\"m-2 mb-4\">\r\n        <small>Seleccione un periodo: </small>\r\n        <v-select :options=\"listaPeriodos\" :reduce=\"listaPeriodos => listaPeriodos\" label=\"descripcion\" class=\"w-full\" v-model=\"periodoSelect\" @input=\"f_pedidos(periodoSelect.idperiodoescolar)\" />\r\n    </div>\r\n    <div v-if=\"periodoSelect.idperiodoescolar != null\">\r\n        <vs-radio class=\"m-3\" v-model=\"filtro\" @input=\"filtroTipo();\" vs-name=\"radios1tipo\" vs-value=\"1\"><b>{{ sumaAprobados  }}</b> Pedidos Guias aprobados</vs-radio>\r\n        <vs-radio class=\"m-3\" v-model=\"filtro\" @input=\"filtroTipo();\" vs-name=\"radios1tipo\" vs-value=\"2\"><b>{{ SumaEntregados }}</b> Entregados</vs-radio>\r\n    </div>\r\n    <div class=\"m-2 mb-4\">\r\n        <vs-table search :data=\"listaContratos\">\r\n            <template slot=\"header\">\r\n                <vs-chip color=\"primary\" class=\"ml-1\">Cantidad: {{listaContratos.length}}</vs-chip>\r\n            </template>\r\n            <template slot=\"thead\">\r\n                <vs-th width=\"25%\" sort-key=\"apellidos\">Asesor / Responsable</vs-th>\r\n                <vs-th width=\"30%\" sort-key=\"total_venta\">detalles</vs-th>\r\n                <vs-th></vs-th>\r\n            </template>\r\n            <template slot-scope=\"{data}\">\r\n                <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                    <vs-td> \r\n                        <small>id: </small> {{tr.id_pedido}} <br />\r\n                        <small><b>Acta:</b></small> {{ tr.ven_codigo }}<br />\r\n                        <small><b>Asesor:</b></small> {{tr.nombres}} {{tr.apellidos}}<br />\r\n                        <!-- <small><b>escuela:</b></small> {{tr.nombreInstitucion}} <br />\r\n                        <small><b>ciudad:</b></small> {{ tr.ciudad }}<br /> -->\r\n                    </vs-td>\r\n\r\n                    <vs-td>\r\n                        <small><b>pedido solicitado: </b></small> {{ tr.ph_fecha_creacion_pedido }}<br />\r\n                        <span :class=\"tr.fecha_aprobado_facturacion == null ? 'text-danger': ''\">\r\n                            <small><b>aprobado facturación: </b></small>\r\n                            <span> {{tr.fecha_aprobado_facturacion != null ?  tr.fecha_aprobado_facturacion : 'PENDIENTE APROBAR'}}</span>\r\n                        </span><br />\r\n                        <small><b>despacho bodega: </b></small> <span> {{tr.fecha_entrega_bodega != null ?  tr.fecha_entrega_bodega: ''}}</span><br />\r\n                    </vs-td>\r\n                    <vs-td>\r\n                        <div class=\"flex\">\r\n                            <!--RESUMEN-->\r\n                            <vs-button icon=\"visibility\"  type=\"border\" @click=\"pedido = tr;verStock()\">Resumen</vs-button>\r\n                            <!-- <vs-button class=\"m-1\" icon=\"visibility\" type=\"border\" @click=\"f_detalle_libros(tr)\">ver libros</vs-button> -->\r\n                            <vs-button v-if=\"tr.estado_entrega > 0\" class=\"m-1\" icon-pack=\"feather\" icon=\"icon-printer\" type=\"border\" color=\"dark\" @click=\"pedido = tr;ImprimirActa(tr)\">Imprimir acta</vs-button>\r\n                            <vs-button v-if=\"tr.estado_entrega == 1\" class=\"m-1\" icon=\"check\" type=\"border\" color=\"warning\" @click=\"pedido = tr;openConfirm(tr)\">entregar</vs-button>\r\n                        </div>\r\n                    </vs-td>\r\n                </vs-tr>\r\n\r\n            </template>\r\n        </vs-table>\r\n    </div>\r\n    <!--MODAL CARGAR-->\r\n    <vs-popup class=\"holamundo\" title=\"Cargando\" :active.sync=\"popupCarga\">\r\n        <p class=\"text-warning text-3xl bg-dark\"><i class=\"fa-solid fa-cloud\"></i> <b class=\"ml-2\">Espere mientras se descarga el archivo</b></p>\r\n        <img class=\"mt-2\" style=\"margin-left: 35px;\" src=\"https://cdn-icons-png.flaticon.com/512/4578/4578845.png\" />\r\n    </vs-popup>\r\n    <!--MODAL DETALLE DE LIBROS-->\r\n    <vs-popup title=\"Detalle de libros\" :active.sync=\"modalLibros\">\r\n        <vs-table max-items=\"100\" search pagination :data=\"arregloLibros\">\r\n            <template slot=\"header\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-12\">Total Libros: <b>{{totalLibros}}</b></div>\r\n                    <div class=\"col-12\">Items: <b>{{arregloLibros.length}}</b></div>\r\n                </div>\r\n            </template>\r\n            <template slot=\"thead\">\r\n                <vs-th>Libro</vs-th>\r\n                <vs-th>Cant. unidades</vs-th>\r\n                <vs-th>Precio unitario</vs-th>\r\n            </template>\r\n            <template slot-scope=\"{data}\">\r\n                <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                    <vs-td>\r\n                        {{data[indextr].nombrelibro}}<br>\r\n                    </vs-td>\r\n                    <vs-td>\r\n                        {{data[indextr].valor}}<br>\r\n                    </vs-td>\r\n                    <vs-td>\r\n                        {{tr.precio}}\r\n                    </vs-td>\r\n                </vs-tr>\r\n            </template>\r\n        </vs-table>\r\n    </vs-popup>\r\n    <!--EXPORTAR ACTA BODEGA - ASESOR-->\r\n    <div v-if=\"mostrarImprimirActa\">\r\n        <exportActaGuiasBodegaVue style=\"display: none;\" :pedido = \"pedido\" @change=\"changeHandle\"/>\r\n    </div>\r\n    <!--MODAL CONFIRMAR APROBAR-->\r\n    <vs-popup class=\"holamundo\" fullscreen title=\"Stock de guias\" :active.sync=\"popupConfirmAprobar\">\r\n        <GuiasStockVue v-if=\"popupConfirmAprobar\" :arregloStock=\"arregloStock\"/>\r\n    </vs-popup>\r\n</div>\r\n</template>\r\n<script>\r\nimport exportActaGuiasBodegaVue from '../temporadas/components/exportActaGuiasBodega.vue';\r\nimport GuiasStockVue from './components/Guias/GuiasStock.vue';\r\nimport vSelect from 'vue-select';\r\nexport default {\r\n    name: 'lista-de-contratos-gerencia',\r\n    components: {\r\n        'v-select': vSelect,\r\n        exportActaGuiasBodegaVue,\r\n        GuiasStockVue,\r\n    },\r\n    data() {\r\n        return {\r\n            listaPeriodos: [],\r\n            periodoSelect: {},\r\n            listaContratos: [],\r\n            listaContratosTmp: [],\r\n            arregloStock:[],\r\n            pedido:{},\r\n            noroot: '',\r\n            tipo_pedido: 0,\r\n            filtro: 1,\r\n            arregloLibros: [],\r\n            modalLibros: false,\r\n            totalLibros: 0,\r\n            //variables para exportar\r\n            mostrarImprimirActa:false,\r\n            popupCarga:false,\r\n            popupConfirmAprobar:false,\r\n            //fin variables para exporta el acta\r\n        }\r\n    },\r\n    computed: {\r\n        sumaAprobados() {\r\n            let me = this;\r\n            let datos = me.listaContratosTmp.filter(p => (p.estado_entrega == 1) && (p.estado == 1));\r\n            let resultado = datos.length\r\n            return resultado\r\n        },\r\n        SumaEntregados() {\r\n            let me = this;\r\n            let datos = me.listaContratosTmp.filter(p => (p.estado_entrega == 2) && (p.estado == 1));\r\n            let resultado = datos.length\r\n            return resultado\r\n        },\r\n    },\r\n    mounted() {\r\n        let me = this;\r\n        me.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n        me.getPeriodos();\r\n    },\r\n    methods: {\r\n        verStock(){\r\n            let me = this;\r\n            me.arregloStock = []\r\n            me.$vs.loading()\r\n            this.$http.get(this.$server_url+'guias?verStock=yes&id_pedido='+me.pedido.id_pedido)\r\n                .then(function (res) {\r\n                    me.$vs.loading.close()\r\n                    if(res.data.status == 0){\r\n                        me.$vs.notify({\r\n                            text: res.data.message,\r\n                            color: 'danger',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-alert-triangle',\r\n                            time:3000\r\n                        })\r\n                        return\r\n                    }\r\n                    //ingresar libros en array\r\n                    let datos = res.data\r\n                    var predatos = []\r\n                    predatos = datos\r\n                    me.arregloStock = predatos.sort(function(a, b) {\r\n                        var nombreA = a.nombrelibro.toLowerCase();\r\n                        var nombreB = b.nombrelibro.toLowerCase();\r\n                        var numA = parseInt(nombreA.match(/\\d+$/)); // extraer el número del final (si existe)\r\n                        var numB = parseInt(nombreB.match(/\\d+$/)); // extraer el número del final (si existe)\r\n                        nombreA = nombreA.replace(/\\d+$/, ''); // quitar el número del final\r\n                        nombreB = nombreB.replace(/\\d+$/, ''); // quitar el número del final\r\n                        \r\n                        if (nombreA < nombreB) {\r\n                            return -1;\r\n                        }\r\n                        if (nombreA > nombreB) {\r\n                            return 1;\r\n                        }\r\n                        if (numA && !numB) { // si a tiene número y b no, b va primero\r\n                            return 1;\r\n                        }\r\n                        if (!numA && numB) { // si b tiene número y a no, a va primero\r\n                            return -1;\r\n                        }\r\n                        if (numA && numB) { // si ambos tienen número, compararlos\r\n                            if (numA < 10 && numB >= 10) { // si a es menor que 10 y b es 10 o mayor, a va primero\r\n                            return -1;\r\n                            }\r\n                            if (numA >= 10 && numB < 10) { // si b es menor que 10 y a es 10 o mayor, b va primero\r\n                            return 1;\r\n                            }\r\n                            return numA - numB; // comparar los números directamente\r\n                        }\r\n                        return 0; // si son iguales en todo, no hay diferencia\r\n                    });\r\n                    //open confirm\r\n                    me.popupConfirmAprobar = true\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                    me.$vs.loading.close()\r\n                    me.$vs.notify({\r\n                        text: \"Hubo problemas con el servidor de facturacion\",\r\n                        color: 'danger',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-alert-triangle',\r\n                        time:3000\r\n                    })\r\n                })\r\n            \r\n        },\r\n        changeHandle(e) {\r\n            let me                  = this;\r\n            me.popupCarga           = false\r\n            me.mostrarImprimirActa  = false\r\n        },\r\n        ImprimirActa(){\r\n            let me                  = this;\r\n            me.popupCarga           = true\r\n            me.mostrarImprimirActa  = true\r\n        },\r\n        getPeriodos() {\r\n            let me = this;\r\n            this.$http.get(this.$server_url + 'periodoActivo')\r\n                .then((result) => {\r\n                    // console.log(result.data)\r\n                    me.listaPeriodos = result.data\r\n                }).catch((err) => {\r\n                    console.log(err)\r\n                });\r\n        },\r\n        f_pedidos(idperiodo) {\r\n            let me = this;\r\n            console.log(idperiodo)\r\n            if (idperiodo == null) {\r\n                return\r\n            }\r\n            me.$vs.loading()\r\n            this.$http.get(this.$server_url + 'reportePedidosGuiasBodega/' + idperiodo)\r\n                .then((result) => {\r\n                    let datos = result.data\r\n                    me.listaContratosTmp = datos.filter(p => p.estado_entrega != 0)\r\n                    me.filtroTipo();\r\n                    me.$vs.loading.close()\r\n                }).catch((err) => {\r\n                    console.log(err)\r\n                    me.$vs.loading.close()\r\n                });\r\n        },\r\n        filtroTipo() {\r\n            let me = this;\r\n            me.listaContratos = []\r\n            if (me.filtro == 1) {\r\n                let datos = me.listaContratosTmp.filter(p => (p.estado_entrega == 1));\r\n                me.listaContratos = datos\r\n                return\r\n            }\r\n            if (me.filtro == 2) {\r\n                let datos = me.listaContratosTmp.filter(p => (p.estado_entrega == 2));\r\n                me.listaContratos = datos\r\n                return\r\n            }\r\n        },\r\n        f_detalle_libros(item) {\r\n            let me = this\r\n            me.modalLibros = true;\r\n            me.$vs.loading()\r\n            this.$http.get(this.$server_url + 'get_val_pedidoInfo/' + item.id_pedido)\r\n                .then(res => {\r\n                    console.log(res.data)\r\n                    let datos = res.data\r\n                    me.arregloLibros = datos.filter(p => p.valor > 0)\r\n                    me.totalLibros = datos.reduce((acc, valor) => {\r\n                        const respuesta = acc + valor.valor\r\n                        return respuesta\r\n                    }, 0)\r\n                    me.$vs.loading.close()\r\n                })\r\n        },\r\n        openConfirm(){\r\n            this.$vs.dialog({\r\n                type:'confirm',\r\n                color: 'danger',\r\n                title: `Confirmar`,\r\n                acceptText:'aceptar',\r\n                cancelText:'cancelar',\r\n                text: 'Esta seguro de entregar esta solicitud de guias?',\r\n                accept:this.entregarPedido\r\n            })\r\n        },\r\n        entregarPedido() {\r\n            let me = this\r\n            me.$vs.loading();\r\n            let data = {\r\n                'id_pedido': this.pedido.id_pedido,\r\n                'estado': '2',\r\n                'grupo': 'bodega',\r\n                'acta':this.pedido.ven_codigo,\r\n                'asesor_id':this.pedido.id_asesor\r\n            }\r\n            this.$http.post(this.$server_url + 'entregarPedido', data)\r\n                .then(res => {\r\n                    me.f_notificaciones('Pedido entregado', 'success', 'check')\r\n                    me.f_pedidos(me.periodoSelect.idperiodoescolar);\r\n                    me.$vs.loading.close();\r\n                })\r\n                .catch(err => {\r\n                    console.log(err)\r\n                    me.$vs.loading.close();\r\n                })\r\n        },\r\n        f_notificaciones(msj, color, icono) {\r\n            let me = this;\r\n            me.$vs.notify({\r\n                text: msj,\r\n                color: color,\r\n                iconPack: 'feather',\r\n                icon: icono\r\n            })\r\n            return;\r\n        }\r\n    },\r\n}\r\n</script>\r\n"]}]}