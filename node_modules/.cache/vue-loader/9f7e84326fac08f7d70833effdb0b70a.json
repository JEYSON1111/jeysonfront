{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\salle\\administrador\\evaluaciones\\PreguntasComponent.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\salle\\administrador\\evaluaciones\\PreguntasComponent.vue","mtime":1712682816505},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\n  import imageZoom from 'vue-image-zoomer';\r\n  import flatPickr from 'vue-flatpickr-component';\r\n  import 'flatpickr/dist/flatpickr.css';\r\n  import axios from 'axios'\r\n  import vSelect from 'vue-select'\r\n  import $ from 'jquery'\r\n  import PreguntasMoverVue from '@/views/salle/administrador/evaluaciones/components/Preguntas/PreguntasMover'\r\n  import PreguntasTableIngresadosVue from './components/Preguntas/PreguntasTableIngresados.vue';\r\n  import CrearPreguntaSalleVue from './CrearPreguntaSalle.vue';\r\n  import \"quill/dist/quill.core.css\";\r\n  import \"quill/dist/quill.snow.css\";\r\n  import \"quill/dist/quill.bubble.css\";\r\n  import {\r\n      quillEditor\r\n  } from \"vue-quill-editor\";\r\n  export default {\r\n    data(){\r\n      return {\r\n        asignatura: {id: '', label: ''},\r\n        arregloPreguntas: [],\r\n        editarActivo: false,\r\n        guardadoActivo:false,\r\n        popupEditPreg: false,\r\n        popupTipoPreg: false,\r\n        pregSelected: [],\r\n        pregTipo: 1,\r\n        titPregTipo: '',\r\n        txtPregTipo: '',\r\n        active1: true,\r\n        usuario: [],\r\n        url: '',\r\n        id_pregunta_creada: null,\r\n        opcionselecradio: '',\r\n        asignaturaSelected: '',\r\n        tipos: [\r\n            { id: \"1\", label: \"Opción múltiple\", }, { id: \"2\", label: \"Respuesta cerrada\", }, { id: \"3\", label: \"Verdadero/Falso\", }, { id: \"5\", label: \"Selección simple\"}\r\n        ],\r\n        img_preg_old: '',\r\n        areas: [{nombre_area: '',}],\r\n        area_pregunta: {},\r\n        asignaturas: [{nombre_asignatura: '',}],\r\n        asignatura_pregunta: {},\r\n        area_buscar: '',\r\n        asignatura_buscar: '',\r\n        asignaturas_filtro: [],\r\n        //VARIABLES DE PERIODOS EVALUACION\r\n        arregloPeriodos:[],\r\n        periodoSelect:'',\r\n        //FIN VARIABLES DE PERIODOS DE EVALUACION\r\n        //VARIABLES PARA MOVER PREGUNTAS A OTRA EVALUACION\r\n        popupMoverPreguntas:false,\r\n        popupIngresados:false,\r\n        ingresadas:0,\r\n        PreguntasNoIngresadas:[],\r\n        //FIN VARIABLES PARA MOVER PREGUTNAS A OTRA EVALUACION\r\n        tipoFiltro:1,\r\n        //variables para mostrar la imagen\r\n        dataPregunta:'',\r\n        popupMostrarImagen:false,\r\n        preguntaSelect:\"\",\r\n        puntaje_pregunta:1,\r\n      }\r\n    },\r\n    components: {\r\n      'v-select': vSelect,\r\n      flatPickr,\r\n      CrearPreguntaSalleVue,\r\n      PreguntasMoverVue,\r\n      quillEditor,\r\n      PreguntasTableIngresadosVue,\r\n      imageZoom,\r\n    },\r\n    created(){\r\n      let me = this;\r\n      me.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n      // this.getAreas()\r\n    },\r\n    mounted(){\r\n      let me = this;\r\n      me.getPeriodosEvaluacion()\r\n    },\r\n    methods: {\r\n      changeRecharge(e){\r\n        let me = this\r\n        if(e == 1) {\r\n          me.popupTipoPreg = false\r\n          me.popupMoverPreguntas = false;\r\n        }\r\n        //para editar\r\n        if(e == 3)    {\r\n          me.editarActivo = false\r\n          me.guardadoActivo = true;\r\n        }\r\n        //para bloquear el boton de guardar pregunta y solo puede agregar opciones a la pregunta\r\n        if(e == 4)    me.guardadoActivo = true;\r\n        me.getPreguntas()\r\n      },\r\n      getPeriodosEvaluacion() {\r\n        let me = this;\r\n        this.$http.get(this.$server_url+'salle/periodos')\r\n          .then(function (response) {\r\n            me.arregloPeriodos = response.data;\r\n            let getEvaluacionSelect = localStorage.EvaluacionSelectSalle\r\n            //si ya existe el periodo seleccionado lo asigno\r\n            if(getEvaluacionSelect){\r\n              me.periodoSelect = parseInt(getEvaluacionSelect)\r\n              me.getAreas()\r\n              return\r\n            }\r\n            if(me.arregloPeriodos.length > 0){\r\n              me.periodoSelect = me.arregloPeriodos[0].id\r\n              me.getAreas()\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n          })\r\n      },\r\n      getAreas(){\r\n        let me                = this\r\n        me.areas              = []\r\n        me.asignaturas        = []\r\n        me.arregloPreguntas   = []\r\n        me.pregSelected       = []\r\n        me.area_buscar        = \"\"\r\n        me.asignatura_buscar  = \"\"\r\n        if(me.periodoSelect == null || me.periodoSelect == \"\" || me.periodoSelect == undefined){\r\n          me.$vs.notify({\r\n          text:'Seleccione una Evaluación Período por favor',\r\n          color:'warning',\r\n          iconPack: 'feather',\r\n          icon:'icon-check'})\r\n          return\r\n        }\r\n        this.$http.get(this.$server_url+'areas_salle')\r\n        .then(res => {\r\n          let datos = res.data\r\n          if(datos.length > 0){\r\n            me.areas = datos.filter(p => p.n_evaluacion == me.periodoSelect)\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        })\r\n      },\r\n      getAsignaturas(){\r\n        let me = this\r\n        this.$http.get(this.$server_url+'asignaturas_area_salle/' + me.area_pregunta.id_area)\r\n        .then(res => {\r\n            me.asignaturas = res.data;\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        })\r\n      },\r\n      getAsignaturasFiltro(){\r\n          let me = this\r\n          me.arregloPreguntas   = []\r\n          me.pregSelected       = []\r\n          me.asignatura_buscar  = \"\"\r\n          this.$http.get(this.$server_url+'asignaturas_area_salle/' + me.area_buscar.id_area)\r\n          .then(res => {\r\n              me.asignaturas_filtro = res.data;\r\n          })\r\n          .catch(function (error) {\r\n              console.log(error);\r\n          })\r\n      },\r\n      editarFormulario(item){\r\n        let me                  = this;\r\n        me.pregTipo             = item.pregunta.id_tipo_pregunta;\r\n        me.area_pregunta        = {id_area: item.pregunta.id_area, nombre_area: item.pregunta.nombre_area}\r\n        me.asignatura_pregunta  = {id_asignatura: item.pregunta.id_asignatura, nombre_asignatura: item.pregunta.nombre_asignatura};\r\n        me.preguntaSelect       = item\r\n        me.getAsignaturas()\r\n        me.cargarModalTipo()\r\n        me.editarActivo         = true\r\n      },\r\n      getPreguntas(){\r\n        let me = this\r\n        me.arregloPreguntas     = []\r\n        me.asignatura_pregunta  = me.asignatura_buscar\r\n        me.area_pregunta        = me.area_buscar\r\n        me.pregSelected         = []\r\n        let datos = me.asignatura_buscar.id_asignatura+'*'+me.periodoSelect+'*'+me.tipoFiltro\r\n        me.$vs.loading()\r\n        this.$http.get(this.$server_url+'preguntas_salle/' + datos)\r\n        .then(res => {\r\n          me.$vs.loading.close()\r\n          me.arregloPreguntas = res.data.items;\r\n          if(me.arregloPreguntas == undefined){\r\n            me.$vs.notify({\r\n            text:'No se encontro registros de preguntas',\r\n            color:'warning',\r\n            iconPack: 'feather',\r\n            icon:'icon-check'})\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n          me.$vs.loading.close()\r\n          console.log(error);\r\n        })\r\n      },\r\n      limpiar(){\r\n        this.editarActivo     = false;\r\n        this.puntaje_pregunta = 1;\r\n        this.preguntaSelect   = \"\"\r\n        this.editarActivo =false; this.guardadoActivo = false;\r\n        this.editarActivo =false; this.guardadoActivo = false;\r\n        this.editarActivo =false; this.guardadoActivo = false;\r\n        this.editarActivo =false; this.guardadoActivo = false;\r\n      },\r\n      confirmarEliminarPreg(){\r\n        this.$vs.dialog({\r\n          type: 'confirm',\r\n          color: 'danger',\r\n          title: 'Confirmar',\r\n          text: '¿Está seguro de eliminar esta pregunta?',\r\n          accept: this.eliminarPregunta\r\n        })\r\n      },\r\n      eliminarPregunta(){\r\n        let me = this;\r\n        me.$vs.loading()\r\n        this.$http.get(this.$server_url+`eliminar_pregunta_salle/` + me.id_preguntaActiva).then(() => {\r\n          me.getPreguntas()\r\n          me.$vs.notify({\r\n              text:'Pregunta eliminada',\r\n              color:'success',\r\n              iconPack: 'feather',\r\n              icon:'icon-check'})\r\n          me.$vs.loading.close()\r\n        })\r\n        .catch(function (error) {\r\n\r\n        })\r\n      },\r\n      cargarModalTipo(){\r\n        switch (this.pregTipo) {\r\n          case 1:\r\n              this.titPregTipo='Crear pregunta de opción múltiple.';\r\n              this.txtPregTipo='Esta pregunta puede tener una o varias opciones correctas. Las opciones pueden contener: solo texto, solo imágenes o ambas.';\r\n              break;\r\n          case 2:\r\n              this.titPregTipo='Crear pregunta cerrada';\r\n              this.txtPregTipo='Esta pregunta debe ser respondida de forma escrita. La respuesta correcta debe contener palabras clave para poder comparar con la respuesta del estudiante.';\r\n              break;\r\n          case 3:\r\n              this.titPregTipo='Crear pregunta de Verdadero o Falso';\r\n              this.txtPregTipo='Esta pregunta debe tener dos opciones, una correcta y otra incorrecta.';\r\n              break;\r\n          case 4:\r\n              this.titPregTipo='Crear pregunta de tipo dicotómica (Si o No)';\r\n              this.txtPregTipo='Esta pregunta debe tener dos opciones, una correcta y otra incorrecta.';\r\n              break;\r\n          case 5:\r\n              this.titPregTipo='Crear pregunta de selección simple';\r\n              this.txtPregTipo='Esta pregunta puede tener solo una opción correcta. Las opciones pueden contener: solo texto, solo imágenes o ambas.';\r\n              break;\r\n        }\r\n      },\r\n      //METODOS PARA MOVER PREGUNTAS\r\n      openMoverPreguntas(){\r\n        let me = this;\r\n        if(me.pregSelected.length == 0){\r\n          me.$vs.notify({\r\n          text:'Seleccione preguntas para mover por favor',\r\n          color:'warning',\r\n          iconPack: 'feather',\r\n          icon:'icon-check'})\r\n          return\r\n        }\r\n        me.popupMoverPreguntas = true;\r\n      },\r\n      changeMove(e){\r\n        let me = this\r\n        me.PreguntasNoIngresadas  = []\r\n        me.popupMoverPreguntas    = false;\r\n        me.pregSelected           = []\r\n        me.ingresadas             = e.ingresadas\r\n        me.PreguntasNoIngresadas  = e.PreguntasNoIngresadas\r\n        if(me.PreguntasNoIngresadas.length > 0){\r\n          me.popupIngresados      = true\r\n        }\r\n      },\r\n      //FIN METODOS PARA MOVER PREGUNTAS\r\n    },\r\n    }\r\n",{"version":3,"sources":["PreguntasComponent.vue"],"names":[],"mappingsfile":"PreguntasComponent.vue","sourceRoot":"src/views/salle/administrador/evaluaciones","sourcesContent":["<template>\r\n<div>\r\n  <!--LISTADO DE Pregunta-->\r\n  <vx-card title-color=\"primary\" title=\"Banco de preguntas\" subtitle=\"Seleccione una área y una asignatura para visualizar las preguntas\">\r\n    <!--FILTRO DE EVALUACION-->\r\n    <div class=\"flex mt-5\">\r\n      <div style=\"width: 40%;\">\r\n        <p> <ion-icon name=\"contract-outline\"></ion-icon>  Filtro por Evalución período</p>\r\n      </div>\r\n      <div style=\"width: 60%;\">\r\n        <!-- idperiodoescolar -->\r\n        <v-select :options=\"arregloPeriodos\" @input=\"getAreas()\" :reduce=\"arregloPeriodos => arregloPeriodos.id\" label=\"nombre\" class=\"w-full\" v-model=\"periodoSelect\" />\r\n      </div>\r\n    </div>\r\n    <!--FILTRO AREA Y ASIGNATURA-->\r\n    <div class=\"vx-row mt-3\">\r\n      <!------------FILTROS BUSQUEDA PREGUNTAS-------------------->\r\n      <div class=\"vx-col sm:w-1/2 w-full\">\r\n          Área\r\n          <v-select :options=\"areas\" :reduce=\"areas => areas\" label=\"nombre_area\" v-model=\"area_buscar\" @input=\"getAsignaturasFiltro()\"></v-select>\r\n      </div>\r\n      <div class=\"vx-col sm:w-1/2 w-full\">\r\n        Asignatura\r\n        <v-select :options=\"asignaturas_filtro\" :reduce=\"asignaturas_filtro => asignaturas_filtro\" label=\"nombre_asignatura\" v-model=\"asignatura_buscar\" @input=\"getPreguntas()\"></v-select>\r\n      </div>\r\n      <!------------FIN FILTROS BUSQUEDA PREGUNTAS------------------->\r\n    </div>\r\n    <!--TABLA DE PREGUNTAS-->\r\n    <!-- HTML !-->\r\n    <div class=\"mt-5\" v-if=\"asignatura_buscar\">\r\n      <ul class=\"flex\">\r\n        <li>\r\n          Preguntas:\r\n        </li>\r\n        <li class=\"ml-3\">\r\n          <vs-radio v-model=\"tipoFiltro\" @input=\"getPreguntas()\" vs-name=\"radios1tipoFiltro\" vs-value=\"1\">Activas</vs-radio>\r\n        </li>\r\n        <li class=\"ml-2\">\r\n          <vs-radio v-model=\"tipoFiltro\" @input=\"getPreguntas()\" vs-name=\"radios1tipoFiltro\" vs-value=\"0\">Inactivas</vs-radio>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <vs-table class=\"mt-3\" v-if=\"arregloPreguntas\" multiple stripe v-model=\"pregSelected\" pagination max-items=\"25\" search :data=\"arregloPreguntas\">\r\n        <template slot=\"header\">\r\n          <div class=\"flex mt-2\">\r\n            <p><vs-chip color=\"primary\">Cantidad {{ arregloPreguntas.length }}</vs-chip></p>\r\n            <vs-button @click=\"active1!=active1; popupTipoPreg=true; editarActivo=false;  limpiar();cargarModalTipo();\" size=\"small\" style=\"font-size: 14px;\" color=\"dark\" class=\"ml-3\" type=\"filled\">Crear pregunta</vs-button>\r\n            <button class=\"button-33 ml-3\"  @click=\"openMoverPreguntas()\" role=\"button\"><ion-icon class=\"mt-1\" name=\"checkmark-outline\"></ion-icon>Mover Preguntas : {{ pregSelected.length  }}</button>\r\n          </div>\r\n        </template>\r\n        <template slot=\"thead\">\r\n            <vs-th style=\"width: 110px;\">Imagen</vs-th>\r\n            <vs-th sort-key=\"pregunta\">Pregunta</vs-th>\r\n            <vs-th style=\"width: 170px;\" sort-key=\"id_tipo_pregunta\">Detalles</vs-th>\r\n            <vs-th style=\"width: 120px;\">Acciones</vs-th>\r\n        </template>\r\n        <template slot-scope=\"{data}\">\r\n        <vs-tr :data=\"tr\" :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n            <vs-td>\r\n                <img @click=\"dataPregunta = tr;popupMostrarImagen=true;\" v-if=\"data[indextr].pregunta.img_pregunta!='' && data[indextr].pregunta.img_pregunta!='null' && data[indextr].pregunta.img_pregunta!=null\" v-bind:src=\"$data_url+'archivos/img/salle/img_preguntas/'+data[indextr].pregunta.img_pregunta\" class=\"img-responsive\" width=\"100px\" style=\"border-radius: 5px;\">\r\n                <img v-else v-bind:src=\"$server_url+'img/salle/img_preguntas/logos/question_mark.png'\" alt=\"imágen de referencia\" class=\"img-responsive\" width=\"100px\" style=\"border-radius: 5px;\">\r\n            </vs-td>\r\n            <vs-td :data=\"data[indextr].pregunta.descripcion\">\r\n                <div class=\"text-justify\">\r\n                  <span v-html=\"data[indextr].pregunta.descripcion\"></span>\r\n                </div>\r\n                <vs-collapse>\r\n                  <vs-collapse-item>\r\n                    <div slot=\"header\"> ver opciones </div>\r\n                      <div class=\"mb-5\" :key=\"indexitem\" v-for=\"(item, indexitem) in data[indextr].opciones\">\r\n                      <div style=\"width: 100%; font-size: 12px; color: #0DCD88;\" v-if=\"item.tipo===1\">Respuesta correcta<br></div>\r\n                      <div style=\"width: 100%; font-size: 12px; color: #FD5858;\" v-else>Respuesta incorrecta<br></div>\r\n                      <div style=\"width: 100%\" class=\"text-justify\"> {{ item.opcion }}<br></div>\r\n                      <div style=\"width: 100%\" ><img v-if=\"item.img_opcion!='' && item.img_opcion!='null' && item.img_opcion!=null\" v-bind:src=\"$data_url+'archivos/img/salle/img_preguntas/'+item.img_opcion\" class=\"img-responsive\" style=\"border-radius: 5px;\" width=\"100px\"></div>\r\n                    </div>\r\n                  </vs-collapse-item>\r\n                </vs-collapse>\r\n            </vs-td>\r\n            <vs-td :data=\"data[indextr].pregunta.nombre_tipo\">\r\n                <b>Tipo:</b>\r\n                <p>{{data[indextr].pregunta.nombre_tipo}}</p>\r\n                <b>Período Evaluación:</b>\r\n                {{ data[indextr].pregunta.periodo }}<br><br>\r\n                <b>Fecha creación:</b>\r\n                <p>{{ tr.pregunta.created_at }}</p>\r\n                <b>Id pregunta:</b>\r\n                <p>{{ tr.pregunta.id_pregunta }}</p>\r\n            </vs-td>\r\n            <vs-td :data=\"data[indextr].id\">\r\n                <vx-tooltip style=\"display: inline-block;\" text=\"Editar pregunta\" position=\"top\" color=\"primary\">\r\n                    <vs-button size=\"large\" radius icon-pack=\"feather\" icon=\"icon-edit\" @click=\"popupTipoPreg=true; editarFormulario(data[indextr]);\" color=\"primary\" type=\"line\"></vs-button>\r\n                </vx-tooltip>\r\n                <!-- <vx-tooltip style=\"display: inline-block;\" text=\"Eliminar pregunta\" position=\"top\" color=\"danger\">\r\n                    <vs-button size=\"large\" radius icon-pack=\"feather\" icon=\"icon-trash\" @click=\"id_preguntaActiva = data[indextr].pregunta.id_pregunta; confirmarEliminarPreg()\" color=\"danger\" type=\"line\"></vs-button>\r\n                </vx-tooltip> -->\r\n            </vs-td>\r\n\r\n        </vs-tr>\r\n        </template>\r\n    </vs-table>\r\n    <vs-button v-else @click=\"active1!=active1; popupTipoPreg=true; limpiar();cargarModalTipo();\" size=\"small\" style=\"font-size: 14px;\" color=\"dark\" class=\"mt-5\" type=\"filled\">Crear pregunta</vs-button>\r\n    <!--MODALES-->\r\n    <!------ELEGIR TIPO PREGUNTA--------->\r\n    <vs-popup fullscreen classContent=\"popup-example\" title=\"Crear Preguntas\" :active.sync=\"popupTipoPreg\">\r\n      <div class=\"flex\">\r\n        <!-------BOTONES TIPOS PREGUNTA------------>\r\n        <div  v-if=\"editarActivo===false\" style=\"width: 30%;\" class=\"mr-2\">\r\n          <vx-card>\r\n            <div class=\"text-center mb-base\" >\r\n                <h5>Tipos de pregunta</h5>\r\n            </div>\r\n            <div class=\"btn-group\" align=\"center\">\r\n                <vs-button type=\"line\" color=\"dark\" class=\"w-full mb-1\" @click=\"pregTipo = 5; limpiar(); cargarModalTipo(); puntaje_pregunta = 1; \">Selección simple</vs-button> <br>\r\n                <vs-button type=\"line\" color=\"dark\" class=\"w-full mb-1\" @click=\"pregTipo = 1; limpiar(); cargarModalTipo(); puntaje_pregunta = 1; \">Opción múltiple</vs-button> <br>\r\n                <vs-button type=\"line\" color=\"dark\" class=\"w-full mb-1\" @click=\"pregTipo = 3; limpiar(); cargarModalTipo(); puntaje_pregunta = 0.5\">Verdadero/Falso</vs-button> <br>\r\n                <vs-button type=\"line\" color=\"dark\" class=\"w-full mb-1\" @click=\"pregTipo = 2; limpiar(); cargarModalTipo(); puntaje_pregunta = 2; \">Pregunta cerrada</vs-button>\r\n            </div>\r\n          </vx-card>\r\n        </div>\r\n        <!-------FIN BOTONES TIPOS PREGUNTA------------>\r\n        <div style=\"width: 100%;\">\r\n          <!-------INICIO MODAL CREAR PREGUNTAS--------->\r\n          <CrearPreguntaSalleVue\r\n          v-if=\"popupTipoPreg\"\r\n          :usuario              = \"usuario\"\r\n          :editarActivo         = \"editarActivo\"\r\n          :guardadoActivo       = \"guardadoActivo\"\r\n          :pregTipo             = \"pregTipo\"\r\n          :puntaje_pregunta     = \"puntaje_pregunta\"\r\n          :arregloPeriodos      = \"arregloPeriodos\"\r\n          :periodoSelect        = \"periodoSelect\"\r\n          :titPregTipo          = \"titPregTipo\"\r\n          :txtPregTipo          = \"txtPregTipo\"\r\n          :areas                = \"areas\"\r\n          :asignaturas          = \"asignaturas\"\r\n          :active1              = \"active1\"\r\n          :area_pregunta        = \"area_pregunta\"\r\n          :asignatura_pregunta  = \"asignatura_pregunta\"\r\n          :preguntaSelect       = \"preguntaSelect\"\r\n          @changeRecharge       = \"changeRecharge\"\r\n          />\r\n          <!-------FIN MODAL CREAR PREGUNTAS--------->\r\n        </div>\r\n      </div>\r\n    </vs-popup>\r\n    <!--MODAL PARA MOVER PREGUNTAS-->\r\n    <vs-popup classContent=\"popup-example\" fullscreen title=\"Mover Preguntas\" :active.sync=\"popupMoverPreguntas\">\r\n      <PreguntasMoverVue v-if=\"popupMoverPreguntas\" :pregSelected=\"pregSelected\" :arregloPeriodos=\"arregloPeriodos\" @changeRecharge=\"changeRecharge\" @changeMove=\"changeMove\" :arregloPreguntas=\"arregloPreguntas\"/>\r\n    </vs-popup>\r\n     <!--MODAL PREGUNTAS MOVIDAS-->\r\n     <vs-popup classContent=\"popup-example\" fullscreen title=\"Algunas preguntas no se guardaron\" :active.sync=\"popupIngresados\">\r\n      <p class=\"font-bold text-2xl text-success text-center\">Se movieron {{ ingresadas }} preguntas</p>\r\n      <vs-divider></vs-divider>\r\n      <PreguntasTableIngresadosVue v-if=\"popupIngresados\" :PreguntasNoIngresadas=\"PreguntasNoIngresadas\" :arregloPeriodos=\"arregloPeriodos\" :arregloPreguntas=\"arregloPreguntas\"/>\r\n    </vs-popup>\r\n    <br><br><br><br><br><br><br><br><br><br>\r\n    <br><br><br><br><br><br><br><br><br><br>\r\n    <!--MODAL PARA MOSTRAR LA IMAGEN DE LA PREGUNTA-->\r\n    <vs-popup class=\"holamundo\" title=\"Mostrar imagen\" fullscreen :active.sync=\"popupMostrarImagen\">\r\n      <div class=\"flex\" style=\"justify-content: center;\" v-if=\"popupMostrarImagen\">\r\n        <image-zoom\r\n            :regular=\"$data_url+'archivos/img/salle/img_preguntas/'+dataPregunta.pregunta.img_pregunta\"\r\n            :zoom-amount=\"3\"\r\n            :click-zoom=\"true\"\r\n            click-message=\"De click para aumentar\"\r\n            img-class=\"img-fluid\"\r\n            >\r\n        </image-zoom>\r\n      </div>\r\n    </vs-popup>\r\n  </vx-card>\r\n</div>\r\n</template>\r\n\r\n<script>\r\n  import imageZoom from 'vue-image-zoomer';\r\n  import flatPickr from 'vue-flatpickr-component';\r\n  import 'flatpickr/dist/flatpickr.css';\r\n  import axios from 'axios'\r\n  import vSelect from 'vue-select'\r\n  import $ from 'jquery'\r\n  import PreguntasMoverVue from '@/views/salle/administrador/evaluaciones/components/Preguntas/PreguntasMover'\r\n  import PreguntasTableIngresadosVue from './components/Preguntas/PreguntasTableIngresados.vue';\r\n  import CrearPreguntaSalleVue from './CrearPreguntaSalle.vue';\r\n  import \"quill/dist/quill.core.css\";\r\n  import \"quill/dist/quill.snow.css\";\r\n  import \"quill/dist/quill.bubble.css\";\r\n  import {\r\n      quillEditor\r\n  } from \"vue-quill-editor\";\r\n  export default {\r\n    data(){\r\n      return {\r\n        asignatura: {id: '', label: ''},\r\n        arregloPreguntas: [],\r\n        editarActivo: false,\r\n        guardadoActivo:false,\r\n        popupEditPreg: false,\r\n        popupTipoPreg: false,\r\n        pregSelected: [],\r\n        pregTipo: 1,\r\n        titPregTipo: '',\r\n        txtPregTipo: '',\r\n        active1: true,\r\n        usuario: [],\r\n        url: '',\r\n        id_pregunta_creada: null,\r\n        opcionselecradio: '',\r\n        asignaturaSelected: '',\r\n        tipos: [\r\n            { id: \"1\", label: \"Opción múltiple\", }, { id: \"2\", label: \"Respuesta cerrada\", }, { id: \"3\", label: \"Verdadero/Falso\", }, { id: \"5\", label: \"Selección simple\"}\r\n        ],\r\n        img_preg_old: '',\r\n        areas: [{nombre_area: '',}],\r\n        area_pregunta: {},\r\n        asignaturas: [{nombre_asignatura: '',}],\r\n        asignatura_pregunta: {},\r\n        area_buscar: '',\r\n        asignatura_buscar: '',\r\n        asignaturas_filtro: [],\r\n        //VARIABLES DE PERIODOS EVALUACION\r\n        arregloPeriodos:[],\r\n        periodoSelect:'',\r\n        //FIN VARIABLES DE PERIODOS DE EVALUACION\r\n        //VARIABLES PARA MOVER PREGUNTAS A OTRA EVALUACION\r\n        popupMoverPreguntas:false,\r\n        popupIngresados:false,\r\n        ingresadas:0,\r\n        PreguntasNoIngresadas:[],\r\n        //FIN VARIABLES PARA MOVER PREGUTNAS A OTRA EVALUACION\r\n        tipoFiltro:1,\r\n        //variables para mostrar la imagen\r\n        dataPregunta:'',\r\n        popupMostrarImagen:false,\r\n        preguntaSelect:\"\",\r\n        puntaje_pregunta:1,\r\n      }\r\n    },\r\n    components: {\r\n      'v-select': vSelect,\r\n      flatPickr,\r\n      CrearPreguntaSalleVue,\r\n      PreguntasMoverVue,\r\n      quillEditor,\r\n      PreguntasTableIngresadosVue,\r\n      imageZoom,\r\n    },\r\n    created(){\r\n      let me = this;\r\n      me.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n      // this.getAreas()\r\n    },\r\n    mounted(){\r\n      let me = this;\r\n      me.getPeriodosEvaluacion()\r\n    },\r\n    methods: {\r\n      changeRecharge(e){\r\n        let me = this\r\n        if(e == 1) {\r\n          me.popupTipoPreg = false\r\n          me.popupMoverPreguntas = false;\r\n        }\r\n        //para editar\r\n        if(e == 3)    {\r\n          me.editarActivo = false\r\n          me.guardadoActivo = true;\r\n        }\r\n        //para bloquear el boton de guardar pregunta y solo puede agregar opciones a la pregunta\r\n        if(e == 4)    me.guardadoActivo = true;\r\n        me.getPreguntas()\r\n      },\r\n      getPeriodosEvaluacion() {\r\n        let me = this;\r\n        this.$http.get(this.$server_url+'salle/periodos')\r\n          .then(function (response) {\r\n            me.arregloPeriodos = response.data;\r\n            let getEvaluacionSelect = localStorage.EvaluacionSelectSalle\r\n            //si ya existe el periodo seleccionado lo asigno\r\n            if(getEvaluacionSelect){\r\n              me.periodoSelect = parseInt(getEvaluacionSelect)\r\n              me.getAreas()\r\n              return\r\n            }\r\n            if(me.arregloPeriodos.length > 0){\r\n              me.periodoSelect = me.arregloPeriodos[0].id\r\n              me.getAreas()\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n          })\r\n      },\r\n      getAreas(){\r\n        let me                = this\r\n        me.areas              = []\r\n        me.asignaturas        = []\r\n        me.arregloPreguntas   = []\r\n        me.pregSelected       = []\r\n        me.area_buscar        = \"\"\r\n        me.asignatura_buscar  = \"\"\r\n        if(me.periodoSelect == null || me.periodoSelect == \"\" || me.periodoSelect == undefined){\r\n          me.$vs.notify({\r\n          text:'Seleccione una Evaluación Período por favor',\r\n          color:'warning',\r\n          iconPack: 'feather',\r\n          icon:'icon-check'})\r\n          return\r\n        }\r\n        this.$http.get(this.$server_url+'areas_salle')\r\n        .then(res => {\r\n          let datos = res.data\r\n          if(datos.length > 0){\r\n            me.areas = datos.filter(p => p.n_evaluacion == me.periodoSelect)\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        })\r\n      },\r\n      getAsignaturas(){\r\n        let me = this\r\n        this.$http.get(this.$server_url+'asignaturas_area_salle/' + me.area_pregunta.id_area)\r\n        .then(res => {\r\n            me.asignaturas = res.data;\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        })\r\n      },\r\n      getAsignaturasFiltro(){\r\n          let me = this\r\n          me.arregloPreguntas   = []\r\n          me.pregSelected       = []\r\n          me.asignatura_buscar  = \"\"\r\n          this.$http.get(this.$server_url+'asignaturas_area_salle/' + me.area_buscar.id_area)\r\n          .then(res => {\r\n              me.asignaturas_filtro = res.data;\r\n          })\r\n          .catch(function (error) {\r\n              console.log(error);\r\n          })\r\n      },\r\n      editarFormulario(item){\r\n        let me                  = this;\r\n        me.pregTipo             = item.pregunta.id_tipo_pregunta;\r\n        me.area_pregunta        = {id_area: item.pregunta.id_area, nombre_area: item.pregunta.nombre_area}\r\n        me.asignatura_pregunta  = {id_asignatura: item.pregunta.id_asignatura, nombre_asignatura: item.pregunta.nombre_asignatura};\r\n        me.preguntaSelect       = item\r\n        me.getAsignaturas()\r\n        me.cargarModalTipo()\r\n        me.editarActivo         = true\r\n      },\r\n      getPreguntas(){\r\n        let me = this\r\n        me.arregloPreguntas     = []\r\n        me.asignatura_pregunta  = me.asignatura_buscar\r\n        me.area_pregunta        = me.area_buscar\r\n        me.pregSelected         = []\r\n        let datos = me.asignatura_buscar.id_asignatura+'*'+me.periodoSelect+'*'+me.tipoFiltro\r\n        me.$vs.loading()\r\n        this.$http.get(this.$server_url+'preguntas_salle/' + datos)\r\n        .then(res => {\r\n          me.$vs.loading.close()\r\n          me.arregloPreguntas = res.data.items;\r\n          if(me.arregloPreguntas == undefined){\r\n            me.$vs.notify({\r\n            text:'No se encontro registros de preguntas',\r\n            color:'warning',\r\n            iconPack: 'feather',\r\n            icon:'icon-check'})\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n          me.$vs.loading.close()\r\n          console.log(error);\r\n        })\r\n      },\r\n      limpiar(){\r\n        this.editarActivo     = false;\r\n        this.puntaje_pregunta = 1;\r\n        this.preguntaSelect   = \"\"\r\n        this.editarActivo =false; this.guardadoActivo = false;\r\n        this.editarActivo =false; this.guardadoActivo = false;\r\n        this.editarActivo =false; this.guardadoActivo = false;\r\n        this.editarActivo =false; this.guardadoActivo = false;\r\n      },\r\n      confirmarEliminarPreg(){\r\n        this.$vs.dialog({\r\n          type: 'confirm',\r\n          color: 'danger',\r\n          title: 'Confirmar',\r\n          text: '¿Está seguro de eliminar esta pregunta?',\r\n          accept: this.eliminarPregunta\r\n        })\r\n      },\r\n      eliminarPregunta(){\r\n        let me = this;\r\n        me.$vs.loading()\r\n        this.$http.get(this.$server_url+`eliminar_pregunta_salle/` + me.id_preguntaActiva).then(() => {\r\n          me.getPreguntas()\r\n          me.$vs.notify({\r\n              text:'Pregunta eliminada',\r\n              color:'success',\r\n              iconPack: 'feather',\r\n              icon:'icon-check'})\r\n          me.$vs.loading.close()\r\n        })\r\n        .catch(function (error) {\r\n\r\n        })\r\n      },\r\n      cargarModalTipo(){\r\n        switch (this.pregTipo) {\r\n          case 1:\r\n              this.titPregTipo='Crear pregunta de opción múltiple.';\r\n              this.txtPregTipo='Esta pregunta puede tener una o varias opciones correctas. Las opciones pueden contener: solo texto, solo imágenes o ambas.';\r\n              break;\r\n          case 2:\r\n              this.titPregTipo='Crear pregunta cerrada';\r\n              this.txtPregTipo='Esta pregunta debe ser respondida de forma escrita. La respuesta correcta debe contener palabras clave para poder comparar con la respuesta del estudiante.';\r\n              break;\r\n          case 3:\r\n              this.titPregTipo='Crear pregunta de Verdadero o Falso';\r\n              this.txtPregTipo='Esta pregunta debe tener dos opciones, una correcta y otra incorrecta.';\r\n              break;\r\n          case 4:\r\n              this.titPregTipo='Crear pregunta de tipo dicotómica (Si o No)';\r\n              this.txtPregTipo='Esta pregunta debe tener dos opciones, una correcta y otra incorrecta.';\r\n              break;\r\n          case 5:\r\n              this.titPregTipo='Crear pregunta de selección simple';\r\n              this.txtPregTipo='Esta pregunta puede tener solo una opción correcta. Las opciones pueden contener: solo texto, solo imágenes o ambas.';\r\n              break;\r\n        }\r\n      },\r\n      //METODOS PARA MOVER PREGUNTAS\r\n      openMoverPreguntas(){\r\n        let me = this;\r\n        if(me.pregSelected.length == 0){\r\n          me.$vs.notify({\r\n          text:'Seleccione preguntas para mover por favor',\r\n          color:'warning',\r\n          iconPack: 'feather',\r\n          icon:'icon-check'})\r\n          return\r\n        }\r\n        me.popupMoverPreguntas = true;\r\n      },\r\n      changeMove(e){\r\n        let me = this\r\n        me.PreguntasNoIngresadas  = []\r\n        me.popupMoverPreguntas    = false;\r\n        me.pregSelected           = []\r\n        me.ingresadas             = e.ingresadas\r\n        me.PreguntasNoIngresadas  = e.PreguntasNoIngresadas\r\n        if(me.PreguntasNoIngresadas.length > 0){\r\n          me.popupIngresados      = true\r\n        }\r\n      },\r\n      //FIN METODOS PARA MOVER PREGUNTAS\r\n    },\r\n    }\r\n</script>\r\n<style scoped>\r\n/**BOTON SELECCIONADO */\r\n/* CSS */\r\n.button-33 {\r\n  background-color: #c2fbd7;\r\n  border-radius: 100px;\r\n  box-shadow: rgba(44, 187, 99, .2) 0 -25px 18px -14px inset,rgba(44, 187, 99, .15) 0 1px 2px,rgba(44, 187, 99, .15) 0 2px 4px,rgba(44, 187, 99, .15) 0 4px 8px,rgba(44, 187, 99, .15) 0 8px 16px,rgba(44, 187, 99, .15) 0 16px 32px;\r\n  color: green;\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  font-family: CerebriSans-Regular,-apple-system,system-ui,Roboto,sans-serif;\r\n  padding: 7px 20px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  transition: all 250ms;\r\n  border: 0;\r\n  font-size: 16px;\r\n  user-select: none;\r\n  -webkit-user-select: none;\r\n  touch-action: manipulation;\r\n}\r\n\r\n.button-33:hover {\r\n  box-shadow: rgba(44,187,99,.35) 0 -25px 18px -14px inset,rgba(44,187,99,.25) 0 1px 2px,rgba(44,187,99,.25) 0 2px 4px,rgba(44,187,99,.25) 0 4px 8px,rgba(44,187,99,.25) 0 8px 16px,rgba(44,187,99,.25) 0 16px 32px;\r\n  transform: scale(1.05) rotate(-1deg);\r\n}\r\n</style>\r\n"]}]}