{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\App.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\App.vue","mtime":1712682813913},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nimport themeConfig from \"@/../themeConfig.js\";\r\nimport BloqueoSession from \"./layouts/main/session.vue\";\r\nexport default {\r\n  components: {\r\n    BloqueoSession,\r\n  },\r\n  data() {\r\n    return {\r\n      vueAppClasses: [],\r\n      usuario: [],\r\n      addNewDataSidebarr: false,\r\n    };\r\n  },\r\n  watch: {\r\n    \"$store.state.theme\"(val) {\r\n      this.toggleClassInBody(val);\r\n    },\r\n    \"$vs.rtl\"(val) {\r\n      document.documentElement.setAttribute(\"dir\", val ? \"rtl\" : \"ltr\");\r\n    },\r\n  },\r\n  methods: {\r\n    toggleClassInBody(className) {\r\n      if (className === \"dark\") {\r\n        if (document.body.className.match(\"theme-semi-dark\"))\r\n          document.body.classList.remove(\"theme-semi-dark\");\r\n        document.body.classList.add(\"theme-dark\");\r\n      } else if (className === \"semi-dark\") {\r\n        if (document.body.className.match(\"theme-dark\"))\r\n          document.body.classList.remove(\"theme-dark\");\r\n        document.body.classList.add(\"theme-semi-dark\");\r\n      } else {\r\n        if (document.body.className.match(\"theme-dark\"))\r\n          document.body.classList.remove(\"theme-dark\");\r\n        if (document.body.className.match(\"theme-semi-dark\"))\r\n          document.body.classList.remove(\"theme-semi-dark\");\r\n      }\r\n    },\r\n    setAppClasses(classesStr) {\r\n      this.vueAppClasses.push(classesStr);\r\n    },\r\n    handleWindowResize() {\r\n      this.$store.commit(\"UPDATE_WINDOW_WIDTH\", window.innerWidth);\r\n\r\n      // Set --vh property\r\n      document.documentElement.style.setProperty(\r\n        \"--vh\",\r\n        `${window.innerHeight * 0.01}px`\r\n      );\r\n    },\r\n    handleScroll() {\r\n      this.$store.commit(\"UPDATE_WINDOW_SCROLL_Y\", window.scrollY);\r\n    },\r\n  },\r\n  mounted() {\r\n    let theme = ''\r\n    if(localStorage.theme){\r\n      theme = localStorage.theme\r\n    }else{\r\n      theme = themeConfig.theme\r\n    }\r\n    this.toggleClassInBody(theme);\r\n    this.$store.commit(\"UPDATE_WINDOW_WIDTH\", window.innerWidth);\r\n\r\n    const vh = window.innerHeight * 0.01;\r\n    // Then we set the value in the --vh custom property to the root of the document\r\n    document.documentElement.style.setProperty(\"--vh\", `${vh}px`);\r\n    window\r\n      .matchMedia(\"(prefers-color-scheme: dark)\")\r\n      .addEventListener(\"change\", (event) => {\r\n        if (event.matches) {\r\n          console.log(\"Color \"+event.matches)\r\n        } else {\r\n          console.log(\"Color \"+event.matches)\r\n          //light mode\r\n        }\r\n      });\r\n    // try {\r\n    //     let me = this;\r\n    //     var usr = JSON.parse(localStorage.getItem('usuario'));\r\n    //     this.socket.on(usr.email, (data) => {\r\n    //         try {\r\n    //             if (data.idusuario == usr.idusuario) {\r\n    //                 this.$http.get(this.$server_url+'usr/' + data.idusuario)\r\n    //                     .then(function (response) {\r\n    //                         if (localStorage.tk == response.data.remember_token) {\r\n    //                         } else {\r\n    //                             me.addNewDataSidebarr = true\r\n    //                             localStorage.removeItem('tk');\r\n    //                             localStorage.removeItem('usuario');\r\n    //                         }\r\n    //                     })\r\n    //                     .catch(function (error) {})\r\n    //                 console.log(data);\r\n    //             }\r\n    //         } catch (error) {\r\n    //             console.log(error)\r\n    //         }\r\n    //     });\r\n    // } catch (error) {\r\n\r\n    // }\r\n  },\r\n  async created() {\r\n    const dir = this.$vs.rtl ? \"rtl\" : \"ltr\";\r\n    document.documentElement.setAttribute(\"dir\", dir);\r\n\r\n    window.addEventListener(\"resize\", this.handleWindowResize);\r\n    window.addEventListener(\"scroll\", this.handleScroll);\r\n  },\r\n  destroyed() {\r\n    window.removeEventListener(\"resize\", this.handleWindowResize);\r\n    window.removeEventListener(\"scroll\", this.handleScroll);\r\n  },\r\n};\r\n",{"version":3,"sources":["App.vue"],"names":[],"mappings":";AAifile":"App.vue","sourceRoot":"src","sourcesContent":["<!-- =========================================================================================\r\n  File Name: App.vue\r\n  Description: Main vue file - APP\r\n  ----------------------------------------------------------------------------------------\r\n  Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\r\n  Author: Pixinvent\r\n  Author URL: http://www.themeforest.net/user/pixinvent\r\n========================================================================================== -->\r\n\r\n<template>\r\n  <div id=\"app\" :class=\"vueAppClasses\">\r\n    <bloqueo-session :isSidebarActive=\"addNewDataSidebarr\" />\r\n    <router-view @setAppClasses=\"setAppClasses\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport themeConfig from \"@/../themeConfig.js\";\r\nimport BloqueoSession from \"./layouts/main/session.vue\";\r\nexport default {\r\n  components: {\r\n    BloqueoSession,\r\n  },\r\n  data() {\r\n    return {\r\n      vueAppClasses: [],\r\n      usuario: [],\r\n      addNewDataSidebarr: false,\r\n    };\r\n  },\r\n  watch: {\r\n    \"$store.state.theme\"(val) {\r\n      this.toggleClassInBody(val);\r\n    },\r\n    \"$vs.rtl\"(val) {\r\n      document.documentElement.setAttribute(\"dir\", val ? \"rtl\" : \"ltr\");\r\n    },\r\n  },\r\n  methods: {\r\n    toggleClassInBody(className) {\r\n      if (className === \"dark\") {\r\n        if (document.body.className.match(\"theme-semi-dark\"))\r\n          document.body.classList.remove(\"theme-semi-dark\");\r\n        document.body.classList.add(\"theme-dark\");\r\n      } else if (className === \"semi-dark\") {\r\n        if (document.body.className.match(\"theme-dark\"))\r\n          document.body.classList.remove(\"theme-dark\");\r\n        document.body.classList.add(\"theme-semi-dark\");\r\n      } else {\r\n        if (document.body.className.match(\"theme-dark\"))\r\n          document.body.classList.remove(\"theme-dark\");\r\n        if (document.body.className.match(\"theme-semi-dark\"))\r\n          document.body.classList.remove(\"theme-semi-dark\");\r\n      }\r\n    },\r\n    setAppClasses(classesStr) {\r\n      this.vueAppClasses.push(classesStr);\r\n    },\r\n    handleWindowResize() {\r\n      this.$store.commit(\"UPDATE_WINDOW_WIDTH\", window.innerWidth);\r\n\r\n      // Set --vh property\r\n      document.documentElement.style.setProperty(\r\n        \"--vh\",\r\n        `${window.innerHeight * 0.01}px`\r\n      );\r\n    },\r\n    handleScroll() {\r\n      this.$store.commit(\"UPDATE_WINDOW_SCROLL_Y\", window.scrollY);\r\n    },\r\n  },\r\n  mounted() {\r\n    let theme = ''\r\n    if(localStorage.theme){\r\n      theme = localStorage.theme\r\n    }else{\r\n      theme = themeConfig.theme\r\n    }\r\n    this.toggleClassInBody(theme);\r\n    this.$store.commit(\"UPDATE_WINDOW_WIDTH\", window.innerWidth);\r\n\r\n    const vh = window.innerHeight * 0.01;\r\n    // Then we set the value in the --vh custom property to the root of the document\r\n    document.documentElement.style.setProperty(\"--vh\", `${vh}px`);\r\n    window\r\n      .matchMedia(\"(prefers-color-scheme: dark)\")\r\n      .addEventListener(\"change\", (event) => {\r\n        if (event.matches) {\r\n          console.log(\"Color \"+event.matches)\r\n        } else {\r\n          console.log(\"Color \"+event.matches)\r\n          //light mode\r\n        }\r\n      });\r\n    // try {\r\n    //     let me = this;\r\n    //     var usr = JSON.parse(localStorage.getItem('usuario'));\r\n    //     this.socket.on(usr.email, (data) => {\r\n    //         try {\r\n    //             if (data.idusuario == usr.idusuario) {\r\n    //                 this.$http.get(this.$server_url+'usr/' + data.idusuario)\r\n    //                     .then(function (response) {\r\n    //                         if (localStorage.tk == response.data.remember_token) {\r\n    //                         } else {\r\n    //                             me.addNewDataSidebarr = true\r\n    //                             localStorage.removeItem('tk');\r\n    //                             localStorage.removeItem('usuario');\r\n    //                         }\r\n    //                     })\r\n    //                     .catch(function (error) {})\r\n    //                 console.log(data);\r\n    //             }\r\n    //         } catch (error) {\r\n    //             console.log(error)\r\n    //         }\r\n    //     });\r\n    // } catch (error) {\r\n\r\n    // }\r\n  },\r\n  async created() {\r\n    const dir = this.$vs.rtl ? \"rtl\" : \"ltr\";\r\n    document.documentElement.setAttribute(\"dir\", dir);\r\n\r\n    window.addEventListener(\"resize\", this.handleWindowResize);\r\n    window.addEventListener(\"scroll\", this.handleScroll);\r\n  },\r\n  destroyed() {\r\n    window.removeEventListener(\"resize\", this.handleWindowResize);\r\n    window.removeEventListener(\"scroll\", this.handleScroll);\r\n  },\r\n};\r\n</script>\r\n<style>\r\n\r\n@import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;700;900&display=swap');\r\n\r\n</style>\r\n"]}]}