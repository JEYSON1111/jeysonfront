{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\librosserie\\gestionliquidacion.vue?vue&type=style&index=0&id=384b0dc2&lang=css","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\librosserie\\gestionliquidacion.vue","mtime":1712682816129},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\n#botonreporte{\r\n    display:none;\r\n}\r\n#botonexcel{\r\n    display:none;\r\n    margin:0 10px;\r\n}\r\n",{"version":3,"sources":["gestionliquidacion.vue"],"names":[],"mappings":";AAgXA;AACA;AACA;AACA;AACA;AACA;AACA","file":"gestionliquidacion.vue","sourceRoot":"src/views/librosserie","sourcesContent":["<template>\r\n    <div>\r\n  \r\n        <!-- <vs-row vs-justify=\"center\">\r\n            <vs-col type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\">\r\n                <vs-card>\r\n                    <div slot=\"header\">\r\n                        <h3>\r\n                        Reporte por liquidacion y periodo !\r\n                        </h3>\r\n                    </div>\r\n                    <div>\r\n                        <div>\r\n                            <div class=\"vx-col w-full mt-5\">\r\n                            Ciudad:\r\n                            <v-select @input=\"filtrarInstituciones()\" :options=\"arregloCiudad\" :reduce=\"arregloCiudad => arregloCiudad\" label=\"nombre\" class=\"w-full\" v-model=\"ciudadSelect\" />\r\n                            </div>\r\n                            <div class=\"vx-col w-full mt-5\">\r\n                                Institucion:\r\n                                <v-select :options=\"arregloTraeInstitucion\" :reduce=\"arregloTraeInstitucion => arregloTraeInstitucion\" label=\"nombreInstitucion\" class=\"w-full\" v-model =\"liquidacion.institucion\" />\r\n                            </div> \r\n                            <br>  \r\n                            <ul class=\"leftx\">\r\n                                <li class=\"modelx\">\r\n                                Seleccione que tipo de periodos desea filtrar\r\n                                </li>\r\n                                <br>\r\n                                <li>\r\n                                <vs-radio v-model=\"liquidacion.condicion\"  @input=\"filtrarPeriodos()\"  vs-name=\"radios1\" vs-value=\"1\">Activos</vs-radio>\r\n                                </li>\r\n                                <li>\r\n                                <vs-radio v-model=\"liquidacion.condicion\" @input=\"filtrarPeriodos()\"  vs-name=\"radios1\" vs-value=\"0\">Inactivos</vs-radio>\r\n                                </li>  \r\n                            </ul>\r\n                        </div>\r\n                        <div class=\"vx-col w-full mt-5\"> \r\n                            Periodo:\r\n                            <v-select :options=\"arregloPeriodos\" :reduce=\"arregloPeriodos => arregloPeriodos\" label=\"periodo\" class=\"w-full\" v-model =\"liquidacion.periodo\" />\r\n                        </div>  \r\n                        <br>\r\n                        <vs-button color=\"primary\" size=\"small\" type=\"filled\" @click=\"filtrarLiquidacion();\">\r\n                            Filtrar \r\n                        </vs-button>\r\n                    </div>\r\n                </vs-card>\r\n            </vs-col>\r\n        </vs-row> -->\r\n        <div>\r\n            <vs-table multiple v-model=\"codigoSelected\" pagination max-items=\"25\" search :data=\"arregloLiquidacion\">\r\n                <template slot=\"header\">\r\n                    <div style=\"display:flex;\">\r\n                        <vs-button color=\"success\" style=\"margin-left:20px;\" size=\"small\" @click=\"reporte()\"  type=\"border\" icon=\"folder\"></vs-button>\r\n                        <vs-button color=\"warning\"  size=\"small\" class=\"mr-5 ml-2\" style=\"font-size: 14px;\" @click=\"activePrompt=true;\">Exportar</vs-button>\r\n                        <vs-chip color=\"primary\" style=\"font-size:12px;\">\r\n                          Total Libros: {{sumaTotal}}\r\n                        </vs-chip>\r\n                    </div>    \r\n                </template>\r\n                <template slot=\"thead\">\r\n                     <vs-th sort-key=\"serie\">Serie</vs-th>\r\n                    <vs-th sort-key=\"cantidad\">Cantidad</vs-th>\r\n                    <vs-th sort-key=\"libro\">Asignatura</vs-th>\r\n                    <vs-th sort-key=\"libro\">Codigo liquidacion</vs-th>\r\n                    <!-- <vs-th sort-key=\"contrato\">Asesor</vs-th>\r\n                    <vs-th sort-key=\"institucion\">Institución</vs-th> -->\r\n                </template>\r\n                <template slot-scope=\"{data}\">\r\n                    <vs-tr :data=\"tr\" :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                        <vs-td :data=\"data[indextr].serie\">\r\n                            {{data[indextr].serie}}\r\n                        </vs-td>\r\n                        <vs-td :data=\"data[indextr].cantidad\">\r\n                            {{data[indextr].cantidad}}\r\n                        </vs-td>\r\n                        <vs-td :data=\"data[indextr].nombrelibro\">\r\n                            {{data[indextr].nombrelibro}}\r\n                        </vs-td>\r\n                        <vs-td :data=\"data[indextr].nombrelibro\">\r\n                            {{data[indextr].codigo}}\r\n                        </vs-td>\r\n                        <!-- <vs-td :data=\"data[indextr].asesor\">\r\n                            {{data[indextr].asesor}}\r\n                        </vs-td>\r\n                        <vs-td :data=\"data[indextr].nombreInstitucion\">\r\n                            {{data[indextr].nombreInstitucion}}\r\n                        </vs-td> -->\r\n                    </vs-tr>\r\n                </template>\r\n            </vs-table>\r\n        </div>\r\n        <!--MODAL PARA EXPORTAR A EXCEL-->\r\n        <vs-prompt title=\"Exportar a Excel\" class=\"export-options\" @cancle=\"clearFields\" @accept=\"exportToExcel\" accept-text=\"Exportar\" @close=\"clearFields\" :active.sync=\"activePrompt\">\r\n        <vs-alert class=\"mb-3\" color=\"danger\" icon-pack=\"feather\" icon=\"icon-info\">\r\n            <span>Recuerde <b>seleccionar</b> los códigos que desea exportar.</span>\r\n        </vs-alert>\r\n        <vs-input v-model=\"fileName\" placeholder=\"Ingrese el nombre del archivo\" class=\"w-full\" />\r\n        <v-select v-model=\"selectedFormat\" :options=\"formats\" class=\"my-4\" />\r\n        <div class=\"flex\">\r\n            <!--<span class=\"mr-4\">Cell Auto Width:</span>\r\n            <vs-switch v-model=\"cellAutoWidth\">Cell Auto Width</vs-switch>-->\r\n        </div>\r\n    </vs-prompt>\r\n   \r\n     </div>  \r\n \r\n</template>\r\n\r\n\r\n<script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js\" integrity=\"sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl\" crossorigin=\"anonymous\"></script>\r\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.13.1/js/all.min.js\" integrity=\"sha512-M+hXwltZ3+0nFQJiVke7pqXY7VdtWW2jVG31zrml+eteTP7im25FdwtLhIBTWkaHRQyPrhO2uy8glLMHZzhFog==\" crossorigin=\"anonymous\"></script>\r\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js\"></script>\r\n<script src=\"https://raw.githubusercontent.com/eligrey/FileSaver.js/master/dist/FileSaver.min.js\"></script>\r\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/blob-polyfill/4.0.20200601/Blob.min.js\"></script>\r\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/xls/0.7.6/xls.core.min.js\"></script>\r\n\r\n<script>\r\nimport flatPickr from 'vue-flatpickr-component';\r\nimport 'flatpickr/dist/flatpickr.css';\r\nimport Vue from 'vue'\r\nimport axios from 'axios'\r\nimport vSelect from 'vue-select'\r\nimport moment from 'moment'\r\nimport $ from 'jquery'\r\nimport jsPDF from 'jspdf' \r\nimport html2canvas from \"html2canvas\"\r\nimport pdfMake from \"pdfmake/build/pdfmake\";\r\n// var pdfMake = require ('pdfmake/build/pdfmake.js');\r\nvar pdfFonts = require ('pdfmake/build/vfs_fonts.js');\r\npdfMake.vfs = pdfFonts.pdfMake.vfs;\r\nexport default {\r\n    data(){\r\n        return{\r\n            //para el reporte excel\r\n            fileName: null,\r\n            activePrompt: false,\r\n             codigoSelected: [],\r\n             reportesActivo: 0,\r\n            fileName: null,\r\n            formats: ['xls', 'xlsx', 'csv', 'txt'],\r\n            cellAutoWidth: true,\r\n            selectedFormat: 'xls',\r\n            //listado de ciudades para el select\r\n            arregloCiudad:[],\r\n            //array de instituciones para el select filtrado  por ciudades\r\n            arregloTraeInstitucion:[],\r\n            //array de periodos para el select filtrado  por institucion\r\n            arregloPeriodos:[],\r\n            //para el select de la ciudades\r\n            arregloLiquidacion:[],\r\n            ciudadSelect:'',\r\n            liquidacion:{\r\n                institucion:'',\r\n                periodo:'',\r\n                condicion:'1',\r\n            },\r\n        }\r\n    },\r\n    props:{\r\n        arregloLiquidacion:{\r\n            type:Array,\r\n            default: []\r\n        },\r\n    },\r\n    watch:{\r\n        datos(results){\r\n            this.reRenderCodigos(results)\r\n        }\r\n    },\r\n    computed:{\r\n        sumaTotal(){\r\n            let me = this;\r\n            if(me.arregloLiquidacion.length >0){\r\n                let datos = me.arregloLiquidacion.filter(p => p.cantidad)\r\n                let total = datos.reduce((a, b) => a + (b[\"cantidad\"] || 0), 0);\r\n                return total\r\n            }     \r\n        },\r\n    },\r\n    methods:{\r\n        reRenderCodigos(results){\r\n            const me = this \r\n            me.arregloLiquidacion = results \r\n        },\r\n        //para generar el reporte\r\n        reporte() {\r\n            var body = [];\r\n\r\n            body.push([{text: 'serie'},{text: 'libro'},{text: 'cantidad'}, {text: 'asesor'},{text: 'Institucion'},]);\r\n            for (var key in this.arregloLiquidacion) \r\n            {\r\n                if (this.arregloLiquidacion.hasOwnProperty(key))\r\n                {\r\n                    var item = this.arregloLiquidacion[key];\r\n                    var fila = new Array();\r\n                     fila.push( item.serie.toString() );\r\n                    fila.push( item.nombrelibro.toString()  );\r\n                    fila.push( item.cantidad.toString() );\r\n                    // fila.push( item.codigo_liquidacion.toString()  );\r\n                     fila.push( item.asesor.toString()  );\r\n                    fila.push( item.nombreInstitucion.toString() );\r\n                    body.push(fila);\r\n                }\r\n\r\n            }\r\n            var dd = {\r\n                content: [\r\n                    {\r\n                        table: \r\n                        {\r\n                            headerRows: 1,\r\n                            body: body\r\n                        }\r\n                    }\r\n                ]\r\n            };\r\n         pdfMake.createPdf(dd).download(\"liquidacion.pdf\");\r\n       },\r\n\r\n      //para limipiar los campos del excel\r\n        clearFields() {\r\n            this.fileName = ''\r\n            this.cellAutoWidth = true\r\n            this.selectedFormat = 'xls'\r\n        },\r\n        //metodo par descargar el excel\r\n           exportToExcel() {\r\n            let headerTitle = ['serie' ,'libro', 'cantidad'];\r\n            let headerVal = [ 'serie','nombrelibro','cantidad'];\r\n            let codigoSelectedMayus = this.codigoSelected\r\n            for (var i = 0; i < codigoSelectedMayus.length; i++) {\r\n                for (var key in codigoSelectedMayus[i]) {\r\n                    if (typeof codigoSelectedMayus[i][key] == \"string\") {\r\n                        codigoSelectedMayus[i][key] = codigoSelectedMayus[i][key].toUpperCase();\r\n                    }\r\n                }\r\n            }\r\n\r\n            import('@/vendor/Export2Excel').then(excel => {\r\n                const list = codigoSelectedMayus\r\n                const data = this.formatJson(headerVal, list)\r\n                excel.export_json_to_excel({\r\n                    header: headerTitle,\r\n                    data,\r\n                    filename: this.fileName,\r\n                    autoWidth: this.cellAutoWidth,\r\n                    bookType: this.selectedFormat\r\n                })\r\n                this.clearFields()\r\n                this.guardarActivo = '';\r\n                this.generarActivo = ' ';\r\n                this.textAlertCant = '';\r\n                this.cantidad = '';\r\n                this.codigoSelected = [];\r\n            })\r\n        },\r\n        formatJson(filterVal, jsonData) {\r\n            return jsonData.map(v => filterVal.map(j => {\r\n                return v[j]\r\n            }))\r\n        },\r\n\r\n       //lista de ciudades para usar en el select\r\n        listaCiudades() {\r\n            let me = this\r\n            me.arregloTraeInstitucion = []\r\n            me.arregloPeriodos = []\r\n            this.$http.get(this.$server_url+`ciudad`).then(res => {\r\n                    me.arregloCiudad = res.data;\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error)\r\n                })\r\n        }, \r\n\r\n         //para filtrar instituciones por ciudades\r\n         filtrarInstituciones(){\r\n                let me = this;\r\n                me.arregloPeriodos = []\r\n                if( me.ciudadSelect.idciudad === undefined ){\r\n                    me.$vs.notify({\r\n                        text:'Seleccione una ciudad antes de filtrar por Instituciones',\r\n                        color:'warning',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check'})\r\n                    return;\r\n                }\r\n\r\n                me.arregloTraeInstitucion = []\r\n                \r\n                me.$vs.loading()\r\n                const formData = new FormData();\r\n                    formData.append('ciudad_id', me.ciudadSelect.idciudad);\r\n                   \r\n\r\n                this.$http.post(this.$server_url+'traerinstituciones', formData).then(res => {\r\n                    me.arregloTraeInstitucion = res.data;\r\n                    me.$vs.loading.close()\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n\r\n        },\r\n\r\n          //para filtrar periodos por institucioin\r\n         filtrarPeriodos(){\r\n            let me = this;\r\n            if( me.liquidacion.institucion.region_idregion === undefined ){\r\n                me.$vs.notify({\r\n                    text:'Seleccione una institucion antes de filtrar por Periodos',\r\n                    color:'warning',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check'})\r\n                return;\r\n            }\r\n            me.arregloPeriodos = []\r\n            me.$vs.loading()\r\n            const formData = new FormData();\r\n            formData.append('condicion', me.liquidacion.condicion);\r\n            formData.append('region_idregion', me.liquidacion.institucion.region_idregion);\r\n            this.$http.post(this.$server_url+'traerperiodos', formData).then(res => {\r\n                me.arregloPeriodos = res.data;\r\n                me.$vs.loading.close()\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n\r\n        },\r\n\r\n         //para filtrar la liquidacion\r\n        filtrarLiquidacion(){\r\n            let me = this;\r\n            me.arregloLiquidacion = []\r\n            me.$vs.loading()\r\n            const formData = new FormData();\r\n            formData.append('id_periodo',me.liquidacion.periodo.idperiodoescolar );\r\n            formData.append('idinstitucion',me.liquidacion.institucion.idInstitucion );\r\n            this.$http.post(this.$server_url+'liquidacionperiodo', formData).then(res => {\r\n                console.log(res.data);\r\n                $(\"#botonreporte\").css('display','block');\r\n                $(\"#botonexcel\").css('display','block');\r\n                me.arregloLiquidacion = res.data;\r\n                me.$vs.loading.close()\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n\r\n        },\r\n    },\r\n    created(){\r\n        this.listaCiudades();\r\n       \r\n        \r\n    },\r\n    components: {\r\n        'v-select': vSelect,\r\n        \r\n    },\r\n}\r\n\r\n\r\n\r\n\r\n</script>\r\n\r\n<style>\r\n#botonreporte{\r\n    display:none;\r\n}\r\n#botonexcel{\r\n    display:none;\r\n    margin:0 10px;\r\n}\r\n</style>"]}]}