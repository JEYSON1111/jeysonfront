{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\salle\\docente\\evaluaciones\\listaEvaluaciones.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\salle\\docente\\evaluaciones\\listaEvaluaciones.vue","mtime":1712682816540},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nimport Vue from 'vue'\r\nimport axios from 'axios'\r\nimport vSelect from 'vue-select'\r\nimport moment from 'moment'\r\nexport default {\r\n    data() {\r\n      return {\r\n        usuario: [],\r\n        listaEvaluaciones: [],\r\n        asignaturasDocente: 0,\r\n        configuracion: [],\r\n        fechaLocal: '',\r\n        evaluacionOk: false,\r\n        mensajeEvaluacion: '',\r\n        eval_color: '#2196f3',\r\n        ver_respuestas_activo: false,\r\n        arregloPeriodos:[],\r\n      }\r\n    },\r\n    components: {\r\n      'v-select': vSelect,\r\n    },\r\n    async created() {\r\n      this.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n    },\r\n    mounted() {\r\n      let me = this;\r\n      me.getPeriodosEvaluacion()\r\n      me.verificarAsginaturasDocente();\r\n    },\r\n    methods: {\r\n      getPeriodosEvaluacion() {\r\n        let me = this;\r\n        this.$http.get(this.$server_url+'salle/periodos')\r\n          .then(function (response) {\r\n            me.arregloPeriodos = response.data;\r\n            let getEvaluacionSelect = localStorage.EvaluacionSelectSalle\r\n            //si ya existe el periodo seleccionado lo asigno\r\n            if(getEvaluacionSelect){\r\n              me.periodoSelect = parseInt(getEvaluacionSelect)\r\n              return\r\n            }\r\n            if(me.arregloPeriodos.length > 0){\r\n              me.periodoSelect = me.arregloPeriodos[0].id\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n          })\r\n      },\r\n      verificarAsginaturasDocente() {\r\n        let me = this;\r\n        this.$http.get(this.$server_url+'asignaturas_docente_salle/' + me.usuario.idusuario+'/'+localStorage.EvaluacionSelectSalle)\r\n          .then(res => {\r\n            me.asignaturasDocente = res.data.asignaturas.length\r\n          })\r\n          .catch(err => {\r\n          })\r\n          me.$vs.loading({\r\n            container: '#div-with-loading',\r\n            scale: 1,\r\n            type:'material',\r\n          });\r\n        this.$http.get(this.$server_url+'institucionConfiguracionSalle/' + me.usuario.institucion_idInstitucion+'/'+localStorage.EvaluacionSelectSalle)\r\n          .then(res => {\r\n            me.$vs.loading.close();\r\n            me.configuracion = res.data;\r\n            if( me.configuracion[0].ver_respuestas == 0 ){\r\n              me.ver_respuestas_activo = true\r\n            }\r\n            me.getEvaluacionesResueltas()\r\n          })\r\n          .catch(err => {\r\n            console.log(err)\r\n            me.$vs.loading.close('#div-with-loading > .con-vs-loading');\r\n          })\r\n      },\r\n      asignaturasUsuario() {\r\n        let me = this;\r\n        me.$router.push('/docente/usuarioasignaturas');\r\n      },\r\n      verPromedios(item) {\r\n        let me = this;\r\n        if (me.configuracion[0].ver_respuestas == 0) {\r\n          me.$vs.notify({\r\n            text: 'Los resultados aún no estan disponibles, un administrador de La Salle, lo habilitará más adelante.',\r\n            color: 'warning',\r\n            iconPack: 'feather',\r\n            icon: 'icon-alert-triangle'\r\n          })\r\n          return\r\n        }\r\n      },\r\n      resolverEvaluacion() {\r\n        let me = this;\r\n        localStorage.setItem('tipo_revisar', 0);\r\n        me.$router.push('/salle/docente/evaluacion');\r\n      },\r\n      revisarEvaluacion(id_evaluacion) {\r\n        let me = this;\r\n        localStorage.setItem('tipo_revisar', 1);\r\n        localStorage.setItem('id_evaluacion_salle', id_evaluacion);\r\n        me.$router.push('/salle/docente/evaluacion');\r\n      },\r\n      async getEvaluacionesResueltas(){\r\n        let me = this\r\n        me.$vs.loading();\r\n        await me.$http.get(this.$server_url+'evaluaciones_resueltas_salle/' + me.usuario.idusuario+'/'+localStorage.EvaluacionSelectSalle)\r\n        .then(res => {\r\n          me.$vs.loading.close();\r\n          me.listaEvaluaciones = res.data\r\n          let date_actua = new Date()\r\n          me.fechaLocal = moment(date_actua, 'DD/MM/YYYY HH:mm:ss').format('YYYY-MM-DD HH:mm:ss');\r\n          if (me.configuracion !== undefined && me.configuracion.length > 0) {\r\n            if (me.fechaLocal > me.configuracion[0].fecha_inicio && me.fechaLocal < me.configuracion[0].fecha_fin ) {\r\n              // se valida que no permita dar mas evaluaciones de las permitidas en la configuracion, teniendo el cuenta el periodo.\r\n              var evaluaciones_periodo_actual = 0\r\n              var d = new Date();\r\n              var anio_actual = d.getFullYear();\r\n              $.each(me.listaEvaluaciones, function(key, value){\r\n                  console.log((((value.updated_at).split(' '))[0]).split('-')[0] +' == '+ anio_actual)\r\n                  if( (((value.updated_at).split(' '))[0]).split('-')[0] == anio_actual ){\r\n                      evaluaciones_periodo_actual++\r\n                  }\r\n              });\r\n              if( evaluaciones_periodo_actual < me.configuracion[0].cant_evaluaciones ){\r\n                  me.evaluacionOk = true;\r\n                  me.mensajeEvaluacion = 'La evaluación estará disponible hasta el día ' + me.fechaLarga(me.configuracion[0].fecha_fin);\r\n                  me.eval_color = '#4caf50';\r\n              }else{\r\n                  me.evaluacionOk = false\r\n              }\r\n            } else {\r\n              me.evaluacionOk = false\r\n              console.log(me.fechaLocal +' < '+ me.configuracion[0].fecha_inicio)\r\n              if (me.fechaLocal < me.configuracion[0].fecha_inicio) {\r\n                  me.mensajeEvaluacion = 'La próxima evaluación estará activa el día: ' + me.fechaLarga(me.configuracion[0].fecha_inicio);\r\n                  me.eval_color = '#2196f3';\r\n              } else {\r\n                  me.mensajeEvaluacion = 'Horario no permitido para rendir la evaluación.';\r\n                  me.eval_color = '#737893';\r\n              }\r\n            }\r\n          } else {\r\n            me.evaluacionOk = false\r\n            me.mensajeEvaluacion = 'Su institucion no está configurada, comuníquese con el administrador.';\r\n            me.eval_color = '#998159';\r\n          }\r\n          me.$vs.loading.close('#div-with-loading > .con-vs-loading');\r\n        })\r\n        .catch(err => {\r\n            me.$vs.loading.close();\r\n        })\r\n      },\r\n\r\n    },\r\n}\r\n",{"version":3,"sources":["listaEvaluaciones.vue"],"names":[],"mappingsfile":"listaEvaluaciones.vue","sourceRoot":"src/views/salle/docente/evaluaciones","sourcesContent":["<template>\r\n<div class=\"vx-row w-full\">\r\n    <div class=\"vx-col sm:w-2/3 w-full\">\r\n      <vx-card>\r\n        <div>\r\n          <vs-table max-items=\"20\" search pagination :data=\"listaEvaluaciones\" style=\"margin-top:-20px\">\r\n                <template slot=\"header\">\r\n                    <b>Evaluaciones resueltas</b>\r\n                </template>\r\n                <template slot-scope=\"{data}\">\r\n                    <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                        <vs-td class=\"text-center\">\r\n                          <p v-for=\"(item,key) in arregloPeriodos\" :key=\"key\">\r\n                            <span v-if=\"item.id == periodoSelect\">Periodo Evaluación -  <b class=\"ml-1\">{{ item.nombre }}</b></span>\r\n                          </p>\r\n                        </vs-td>\r\n                        <vs-td align=\"center\">\r\n                            <vs-button :disabled=\"ver_respuestas_activo\" color=\"warning\" size=\"small\" icon-pack=\"feather\" icon=\"icon-eye\" @click=\"revisarEvaluacion(data[indextr].id_evaluacion)\">revisar</vs-button>\r\n                        </vs-td>\r\n                    </vs-tr>\r\n                </template>\r\n          </vs-table>\r\n          <div v-if=\"ver_respuestas_activo===true\">La revision de preguntas no está activada para su institución</div>\r\n        </div>\r\n    </vx-card>\r\n    </div>\r\n    <div class=\"vx-col sm:w-1/3 w-full\">\r\n      <vx-card align=\"center\">\r\n        <div id=\"div-with-loading\" class=\"vs-con-loading__container mb-3 mt-3\">\r\n            <div v-if=\"evaluacionOk===true\">\r\n                <vs-button color=\"success\" icon-pack=\"feather\" icon=\"icon-inbox\" @click=\"resolverEvaluacion()\">Resolver evaluación</vs-button> <br>\r\n            </div>\r\n            <div v-else>\r\n                <b :style=\"`color: ${eval_color}`\"> {{mensajeEvaluacion}}</b>\r\n            </div>\r\n        </div>\r\n        <vs-divider></vs-divider>\r\n        <br>\r\n        <vs-button class=\"mb-3\" color=\"warning\" icon-pack=\"feather\" icon=\"icon-grid\" @click=\"asignaturasUsuario()\">Mis asignaturas</vs-button>\r\n      </vx-card>\r\n    </div>\r\n</div>\r\n</template>\r\n<script>\r\nimport Vue from 'vue'\r\nimport axios from 'axios'\r\nimport vSelect from 'vue-select'\r\nimport moment from 'moment'\r\nexport default {\r\n    data() {\r\n      return {\r\n        usuario: [],\r\n        listaEvaluaciones: [],\r\n        asignaturasDocente: 0,\r\n        configuracion: [],\r\n        fechaLocal: '',\r\n        evaluacionOk: false,\r\n        mensajeEvaluacion: '',\r\n        eval_color: '#2196f3',\r\n        ver_respuestas_activo: false,\r\n        arregloPeriodos:[],\r\n      }\r\n    },\r\n    components: {\r\n      'v-select': vSelect,\r\n    },\r\n    async created() {\r\n      this.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n    },\r\n    mounted() {\r\n      let me = this;\r\n      me.getPeriodosEvaluacion()\r\n      me.verificarAsginaturasDocente();\r\n    },\r\n    methods: {\r\n      getPeriodosEvaluacion() {\r\n        let me = this;\r\n        this.$http.get(this.$server_url+'salle/periodos')\r\n          .then(function (response) {\r\n            me.arregloPeriodos = response.data;\r\n            let getEvaluacionSelect = localStorage.EvaluacionSelectSalle\r\n            //si ya existe el periodo seleccionado lo asigno\r\n            if(getEvaluacionSelect){\r\n              me.periodoSelect = parseInt(getEvaluacionSelect)\r\n              return\r\n            }\r\n            if(me.arregloPeriodos.length > 0){\r\n              me.periodoSelect = me.arregloPeriodos[0].id\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n          })\r\n      },\r\n      verificarAsginaturasDocente() {\r\n        let me = this;\r\n        this.$http.get(this.$server_url+'asignaturas_docente_salle/' + me.usuario.idusuario+'/'+localStorage.EvaluacionSelectSalle)\r\n          .then(res => {\r\n            me.asignaturasDocente = res.data.asignaturas.length\r\n          })\r\n          .catch(err => {\r\n          })\r\n          me.$vs.loading({\r\n            container: '#div-with-loading',\r\n            scale: 1,\r\n            type:'material',\r\n          });\r\n        this.$http.get(this.$server_url+'institucionConfiguracionSalle/' + me.usuario.institucion_idInstitucion+'/'+localStorage.EvaluacionSelectSalle)\r\n          .then(res => {\r\n            me.$vs.loading.close();\r\n            me.configuracion = res.data;\r\n            if( me.configuracion[0].ver_respuestas == 0 ){\r\n              me.ver_respuestas_activo = true\r\n            }\r\n            me.getEvaluacionesResueltas()\r\n          })\r\n          .catch(err => {\r\n            console.log(err)\r\n            me.$vs.loading.close('#div-with-loading > .con-vs-loading');\r\n          })\r\n      },\r\n      asignaturasUsuario() {\r\n        let me = this;\r\n        me.$router.push('/docente/usuarioasignaturas');\r\n      },\r\n      verPromedios(item) {\r\n        let me = this;\r\n        if (me.configuracion[0].ver_respuestas == 0) {\r\n          me.$vs.notify({\r\n            text: 'Los resultados aún no estan disponibles, un administrador de La Salle, lo habilitará más adelante.',\r\n            color: 'warning',\r\n            iconPack: 'feather',\r\n            icon: 'icon-alert-triangle'\r\n          })\r\n          return\r\n        }\r\n      },\r\n      resolverEvaluacion() {\r\n        let me = this;\r\n        localStorage.setItem('tipo_revisar', 0);\r\n        me.$router.push('/salle/docente/evaluacion');\r\n      },\r\n      revisarEvaluacion(id_evaluacion) {\r\n        let me = this;\r\n        localStorage.setItem('tipo_revisar', 1);\r\n        localStorage.setItem('id_evaluacion_salle', id_evaluacion);\r\n        me.$router.push('/salle/docente/evaluacion');\r\n      },\r\n      async getEvaluacionesResueltas(){\r\n        let me = this\r\n        me.$vs.loading();\r\n        await me.$http.get(this.$server_url+'evaluaciones_resueltas_salle/' + me.usuario.idusuario+'/'+localStorage.EvaluacionSelectSalle)\r\n        .then(res => {\r\n          me.$vs.loading.close();\r\n          me.listaEvaluaciones = res.data\r\n          let date_actua = new Date()\r\n          me.fechaLocal = moment(date_actua, 'DD/MM/YYYY HH:mm:ss').format('YYYY-MM-DD HH:mm:ss');\r\n          if (me.configuracion !== undefined && me.configuracion.length > 0) {\r\n            if (me.fechaLocal > me.configuracion[0].fecha_inicio && me.fechaLocal < me.configuracion[0].fecha_fin ) {\r\n              // se valida que no permita dar mas evaluaciones de las permitidas en la configuracion, teniendo el cuenta el periodo.\r\n              var evaluaciones_periodo_actual = 0\r\n              var d = new Date();\r\n              var anio_actual = d.getFullYear();\r\n              $.each(me.listaEvaluaciones, function(key, value){\r\n                  console.log((((value.updated_at).split(' '))[0]).split('-')[0] +' == '+ anio_actual)\r\n                  if( (((value.updated_at).split(' '))[0]).split('-')[0] == anio_actual ){\r\n                      evaluaciones_periodo_actual++\r\n                  }\r\n              });\r\n              if( evaluaciones_periodo_actual < me.configuracion[0].cant_evaluaciones ){\r\n                  me.evaluacionOk = true;\r\n                  me.mensajeEvaluacion = 'La evaluación estará disponible hasta el día ' + me.fechaLarga(me.configuracion[0].fecha_fin);\r\n                  me.eval_color = '#4caf50';\r\n              }else{\r\n                  me.evaluacionOk = false\r\n              }\r\n            } else {\r\n              me.evaluacionOk = false\r\n              console.log(me.fechaLocal +' < '+ me.configuracion[0].fecha_inicio)\r\n              if (me.fechaLocal < me.configuracion[0].fecha_inicio) {\r\n                  me.mensajeEvaluacion = 'La próxima evaluación estará activa el día: ' + me.fechaLarga(me.configuracion[0].fecha_inicio);\r\n                  me.eval_color = '#2196f3';\r\n              } else {\r\n                  me.mensajeEvaluacion = 'Horario no permitido para rendir la evaluación.';\r\n                  me.eval_color = '#737893';\r\n              }\r\n            }\r\n          } else {\r\n            me.evaluacionOk = false\r\n            me.mensajeEvaluacion = 'Su institucion no está configurada, comuníquese con el administrador.';\r\n            me.eval_color = '#998159';\r\n          }\r\n          me.$vs.loading.close('#div-with-loading > .con-vs-loading');\r\n        })\r\n        .catch(err => {\r\n            me.$vs.loading.close();\r\n        })\r\n      },\r\n\r\n    },\r\n}\r\n</script>\r\n"]}]}