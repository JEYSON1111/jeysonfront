{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\capacitaciones\\reporte.vue?vue&type=style&index=0&id=0b992411&lang=css","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\capacitaciones\\reporte.vue","mtime":1712682815581},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\n.fixed-column {\r\n  position: sticky;\r\n  left: 0;\r\n  background-color: white;\r\n}\r\n",{"version":3,"sources":["reporte.vue"],"names":[],"mappings":";AAkSA;AACA;AACA;AACA;AACA","file":"reporte.vue","sourceRoot":"src/views/capacitaciones","sourcesContent":["<script>\r\nimport vSelect from 'vue-select';\r\nimport ListTile from './components/ListTileComponent.vue';\r\nimport editarCapacitacionVue from '../certificados/components/editarCapacitacion.vue';\r\nimport moment from 'moment';\r\nimport * as XLSX from 'xlsx';\r\n\r\nexport default ({\r\n  components: {\r\n    vSelect,\r\n    ListTile,\r\n    editarCapacitacionVue,\r\n  },\r\n  data: () => ({\r\n    title: 'Reporte de capacitaciones',\r\n    periodo: null,\r\n    prevPeriodo: '',\r\n    periodos: [\r\n      'todo',\r\n    ],\r\n    tiempo: 'todo',\r\n    tiempos: [\r\n      'todo',\r\n      'hoy',\r\n      'ésta semana',\r\n      'éste mes',\r\n      'por fechas'\r\n    ],\r\n    capacitador: 'todos',\r\n    capacitadores: [],\r\n    tipo: {\r\n      id: null,\r\n      label: 'todo',\r\n    },\r\n    tipos: [\r\n      {\r\n        id: null,\r\n        label: 'todo',\r\n      },\r\n      {\r\n        id: 0,\r\n        label: 'Presencial',\r\n      },\r\n      {\r\n        id: 1,\r\n        label: 'Virtual',\r\n      },\r\n    ],\r\n    capacitaciones: [],\r\n    filtro_fecha_ini: '',\r\n    filtro_fecha_fin: '',\r\n    currentUser: null,\r\n    search: '',\r\n    isOpen: false,\r\n    capacitacion: {},\r\n    agenda_editar: {\r\n      'id': '',\r\n      'estado': '',\r\n      'observacion': '',\r\n      'personas': '',\r\n      'startDate': '',\r\n      'endDate': '',\r\n      'link_reunion': '',\r\n      'asistencia_activa': '',\r\n      'hora_inicio': '',\r\n      'hora_fin': '',\r\n    },\r\n    periodoSelect: null,\r\n    tableData: [],\r\n    meses:[\r\n      { nombre: 'Enero', numero: 1 },\r\n      { nombre: 'Febrero', numero: 2 },\r\n      { nombre: 'Marzo', numero: 3 },\r\n      { nombre: 'Abril', numero: 4 },\r\n      { nombre: 'Mayo', numero: 5 },\r\n      { nombre: 'Junio', numero: 6 },\r\n      { nombre: 'Julio', numero: 7 },\r\n      { nombre: 'Agosto', numero: 8 },\r\n      { nombre: 'Septiembre', numero: 9 },\r\n      { nombre: 'Octubre', numero: 10 },\r\n      { nombre: 'Noviembre', numero: 11 },\r\n      { nombre: 'Diciembre', numero: 12 }\r\n    ],\r\n    arraryStatus:[\r\n     { nombre:'Pendiente', estado:1 },\r\n     { nombre:'Realizada', estado:2 },\r\n     { nombre:'Cancelada', estado:0 },\r\n    ],\r\n    mesSelect:'',\r\n    estadoSelect:'',\r\n  }),\r\n  created() {\r\n    this.getPeriodos();\r\n    this.getCapacitadores();\r\n    this.getCapacitaciones();\r\n    this.periodo = this.periodos[0];\r\n    this.prevPeriodo = this.periodos[0];\r\n    this.tipo = this.tipos[0];\r\n    this.currentUser = JSON.parse(localStorage.getItem('usuario'));\r\n    this.periodoSelect = JSON.parse(localStorage.getItem('periodo'));\r\n  },\r\n  methods: {\r\n    getPeriodos() {\r\n      const me = this;\r\n      me.$http.get(`${me.$server_url}get_periodos_seminarios`)\r\n        .then((res) => {\r\n          me.periodos = res.data.filter(p => p.idperiodoescolar != 20 && p.idperiodoescolar != 17 && p.idperiodoescolar != 15 && p.idperiodoescolar != 14 && p.idperiodoescolar > 11 && p.estado == 1)\r\n          me.periodo = me.periodos[0];\r\n        })\r\n        .catch((err) => this.showError(\"Error al obtener los periodos\"));\r\n    },\r\n    getCapacitadores() {\r\n      const me = this;\r\n      me.$http.get(`${me.$server_url}getCapacitadores`)\r\n        .then((res) => {\r\n          me.capacitadores = res.data;\r\n        })\r\n        .catch((err) => this.showError(\"Error al obtener los capacitadores\"));\r\n    },\r\n    getCapacitaciones() {\r\n      const me = this;\r\n      me.$vs.loading();\r\n      // Inicializa 'capacitaciones' como un array vacío\r\n      me.capacitaciones = [];\r\n      // Realiza una petición GET al servidor para obtener las capacitaciones\r\n      me.$http.get(`${me.$server_url}reporte/capacitaciones`).then((res) => {\r\n        // Añade los datos de respuesta al array 'capacitaciones'\r\n        me.capacitaciones.push(...res.data);\r\n        me.capacitaciones = me.capacitaciones.map((cap) => {\r\n          // Utiliza una nueva propiedad para almacenar el número del mes\r\n          cap.formatMes = moment(cap.fecha_inicio).format('M');\r\n          return cap;\r\n        });\r\n        // Almacena las capacitaciones en el almacenamiento local del navegador\r\n        localStorage.setItem('capacitaciones', JSON.stringify(me.capacitaciones));\r\n        // Llama a la función 'queryData'\r\n        this.queryData();\r\n      }).catch((err) => {\r\n        // Muestra un mensaje de error\r\n        this.showError(`Error: ${err}`)\r\n      })\r\n        .finally(() => me.$vs.loading.close());\r\n    },\r\n    queryData() {\r\n      let _capacitaciones = JSON.parse(localStorage.getItem('capacitaciones'));\r\n      //mes - periodo - estado\r\n      if(this.mesSelect && this.periodo && this.estadoSelect){\r\n        _capacitaciones = _capacitaciones.filter(c => (c.periodo.idperiodoescolar == this.periodo.idperiodoescolar) && (c.formatMes == this.mesSelect) && (c.estado_capacitacion == this.estadoSelect));\r\n        this.buildDataTable(_capacitaciones);\r\n        return\r\n      }\r\n      //periodo - estado\r\n      if(this.periodo && this.estadoSelect){\r\n        _capacitaciones = _capacitaciones.filter(c => (c.periodo.idperiodoescolar == this.periodo.idperiodoescolar) && (c.estado_capacitacion == this.estadoSelect));\r\n        this.buildDataTable(_capacitaciones);\r\n        return\r\n      }\r\n      if(this.mesSelect && this.periodo){\r\n        _capacitaciones = _capacitaciones.filter(c => (c.periodo.idperiodoescolar == this.periodo.idperiodoescolar) && (c.formatMes == this.mesSelect) );\r\n        this.buildDataTable(_capacitaciones);\r\n        return\r\n      }\r\n      if (this.periodo) {\r\n        _capacitaciones = _capacitaciones.filter(c => c.periodo.idperiodoescolar == this.periodo.idperiodoescolar);\r\n        this.buildDataTable(_capacitaciones);\r\n        return\r\n      }\r\n    },\r\n    exportData() {\r\n      const ws = XLSX.utils.json_to_sheet(this.tableData);\r\n      const wb = XLSX.utils.book_new();\r\n      XLSX.utils.book_append_sheet(wb, ws, 'Capacitaciones');\r\n      XLSX.writeFile(wb, 'capacitaciones.xlsx');\r\n    },\r\n    showError(msg) {\r\n      this.$vs.notify({\r\n        title: 'Error',\r\n        text: msg,\r\n        color: 'danger',\r\n      });\r\n    },\r\n    setVal(param, val) {\r\n      this[param] = val;\r\n      this.queryData();\r\n    },\r\n    editCapacitacion(capId) {\r\n\r\n      this.capacitacion = this.capacitaciones.find(c => c.id_seminario == capId);\r\n\r\n      console.log('capacitacion', this.capacitacion);\r\n\r\n      this.agenda_editar                  = {};\r\n      this.capacitacion                   = null;\r\n      this.capacitacion                   = this.capacitaciones.find(c => c.id_seminario == capId);\r\n      this.capacitacion.nombreInstitucion = this.capacitacion.institucion ? this.capacitacion.institucion.nombreInstitucion : this.capacitacion.nombre_institucion_temporal;\r\n      this.agenda_editar.id               = this.capacitacion.id_seminario;\r\n      this.agenda_editar.titulo           = this.capacitacion.nombre;\r\n      this.agenda_editar.personas         = this.capacitacion.cant_asistentes;\r\n      this.agenda_editar.estado           = this.capacitacion.estado_capacitacion;\r\n      this.agenda_editar.observacion      = this.capacitacion.observacion_admin;\r\n      this.agenda_editar.startDate        = this.capacitacion.fecha_inicio;\r\n      this.agenda_editar.endDate          = this.capacitacion.fecha_fin;\r\n      this.agenda_editar.link_reunion     = this.capacitacion.link_reunion;\r\n      this.agenda_editar.asistencia_activa = this.capacitacion.asistencia_activa;\r\n      this.agenda_editar.hora_inicio      = this.capacitacion.hora_inicio;\r\n      this.agenda_editar.hora_fin         = this.capacitacion.hora_fin;\r\n      this.periodoSelect                  = this.capacitacion.periodo;\r\n      this.isOpen                         = true;\r\n    },\r\n    buildDataTable(_capacitaciones) {\r\n      // Inicializa la tabla de datos como un array vacío\r\n      this.tableData = [];\r\n\r\n      // Inicializa un array vacío para almacenar los datos de las capacitaciones\r\n      const data = [];\r\n\r\n      // Itera sobre cada capacitación en el conjunto de capacitaciones\r\n      _capacitaciones.forEach((cap) => {\r\n        // Crea un objeto para almacenar los datos de la capacitación\r\n        let capacitacion = {\r\n          'id': cap.id_seminario,\r\n          'periodo': cap.periodo.periodoescolar,\r\n          'institucion': cap.institucion ? cap.institucion.nombreInstitucion : cap.nombre_institucion_temporal,\r\n          'ciudad': cap.institucion ? cap.institucion.ciudad.nombre : '-',\r\n          'asesor': `${cap.asesor.nombres} ${cap.asesor.apellidos}`,\r\n          'modalidad': cap.tipo == 0 ? 'Presencial' : 'Virtual',\r\n          'programa': cap.nombre,\r\n          'n_asistentes': cap.cant_asistentes === null ? '-' : cap.cant_asistentes,\r\n          'estado_capacitacion':cap.estado_capacitacion,\r\n          'fecha': moment(cap.fecha_inicio).format('ddd DD [de] MMM, YYYY'),\r\n          'fecha_inicio':cap.fecha_inicio,\r\n          'horario': `${cap.hora_inicio} - ${cap.hora_fin} (${this.getDuration(cap.hora_inicio, cap.hora_fin)} horas)`,\r\n          'tipo':cap.tipo\r\n        };\r\n        // Itera sobre cada capacitador en la lista de capacitadores\r\n        this.capacitadores.forEach((capacitador) => {\r\n          // Inicializa un array vacío para almacenar los capacitadores de la capacitación\r\n          let _capacitadores = [];\r\n\r\n          // Si la capacitación tiene capacitadores, los divide en un array\r\n          if (cap.capacitador != null && cap.capacitador != '') {\r\n            _capacitadores = cap.capacitador.split(',');\r\n          }\r\n\r\n          // Añade una propiedad al objeto de la capacitación para cada capacitador\r\n          // Si el capacitador está en la lista de capacitadores de la capacitación, asigna 'Asignado'\r\n          // Si no, asigna 'Libre'\r\n          capacitacion[capacitador.capacitador] = _capacitadores.includes(capacitador.capacitador.toString()) ? 'Asignado' : 'Libre';\r\n        });\r\n\r\n        // Añade el objeto de la capacitación al array de datos\r\n        data.push(capacitacion)\r\n      });\r\n\r\n      // Añade todos los elementos del array de datos a la tabla de datos\r\n      this.tableData.push(...data);\r\n    },\r\n    getDuration(horaInicio, horaFin) {\r\n      const inicio = moment(horaInicio, 'HH:mm:ss');\r\n      const fin = moment(horaFin, 'HH:mm:ss');\r\n      const duration = moment.duration(fin.diff(inicio));\r\n      return duration.asHours().toFixed(2);\r\n    },\r\n  },\r\n  watch: {\r\n    // Esta función se llama cuando el valor de 'periodo' cambia\r\n    periodo(val) {\r\n      this.prevPeriodo = val;\r\n      // Llama a la función 'queryData' para obtener nuevos datos basados en el nuevo periodo\r\n      this.queryData();\r\n      // Comprueba si el nuevo valor es diferente del valor anterior\r\n      // if (val !== this.prevPeriodo) {\r\n      //   // Si es diferente, actualiza el valor anterior con el nuevo valor\r\n      //   this.prevPeriodo = val;\r\n      //   // Llama a la función 'queryData' para obtener nuevos datos basados en el nuevo periodo\r\n      //   this.queryData();\r\n      // }\r\n      // Si el nuevo valor es igual al valor anterior, no hace nada\r\n    },\r\n    mesSelect(){\r\n      this.queryData();\r\n    },\r\n    estadoSelect(){\r\n      this.queryData();\r\n    }\r\n  }\r\n})\r\n</script>\r\n\r\n<style>\r\n.fixed-column {\r\n  position: sticky;\r\n  left: 0;\r\n  background-color: white;\r\n}\r\n</style>\r\n\r\n<template>\r\n  <div class=\"w-full flex flex-col space-y-2\">\r\n    <div class=\"vx-row\">\r\n      <div class=\"sm:w-full md:w-full lg:w-1/3 xl:w-1/3 ml-3\">\r\n        <small>Período</small>\r\n        <v-select :options=\"periodos\" :reduce=\"periodos => periodos\" label=\"periodoescolar\" class=\"w-full\" v-model=\"periodo\" />\r\n        <!-- <vs-select v-model=\"periodo\" label=\"Periodo\" :search=\"false\" :options=\"periodos\">\r\n          <vs-select-item v-for=\"(item, index) in periodos\" :key=\"index\" :value=\"item\"\r\n            :text=\"item.periodoescolar\"></vs-select-item>\r\n        </vs-select> -->\r\n      </div>\r\n      <div class=\"sm:w-full md:w-full lg:w-1/3 xl:w-1/3 ml-3\">\r\n        <small>Meses</small>\r\n        <v-select :options=\"meses\" :reduce=\"meses => meses.numero\" label=\"nombre\" class=\"w-full\" v-model=\"mesSelect\" />\r\n      </div>\r\n      <div class=\"sm:w-full md:w-full lg:w-1/4 xl:w-1/4 ml-3\">\r\n        <small>Estado</small>\r\n        <v-select :options=\"arraryStatus\" :reduce=\"arraryStatus => arraryStatus.estado\" label=\"nombre\" class=\"w-full\" v-model=\"estadoSelect\" />\r\n      </div>\r\n    </div>\r\n    <br>\r\n    <vs-button @click=\"exportData\" color=\"primary\" class=\"btn btn-sm mt-5\">\r\n      Exportar\r\n    </vs-button>\r\n    <vs-table max-items=\"10\" search stripe pagination :data=\"tableData\">\r\n      <template slot=\"header\">\r\n        <vs-chip>Cantidad {{tableData.length}}</vs-chip>\r\n      </template>\r\n      <template slot=\"thead\">\r\n        <vs-th></vs-th>\r\n        <vs-th class=\"fixed-column\">Capacitación</vs-th>\r\n        <vs-th class=\"fixed-column\" sort-key=\"fecha_inicio\">Programa</vs-th>\r\n        <vs-th v-for=\"(value, key) in tableData[0]\" :key=\"key\"\r\n          v-if=\"key !== 'id' && key !== 'estado_capacitacion' && key !== 'fecha_inicio' && key !== 'tipo' && key !== 'periodo' && key !== 'institucion' && key !== 'ciudad' && key !== 'asesor' && key !== 'modalidad' && key !== 'programa' && key !== 'n_asistentes' && key !== 'fecha' && key !== 'horario'\">\r\n          {{ key.toUpperCase().replace('_', ' ') }}\r\n        </vs-th>\r\n      </template>\r\n      <template slot-scope=\"{data}\">\r\n        <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n          <vs-td>\r\n            <vs-button @click=\"editCapacitacion(tr.id)\" color=\"dark\" type=\"line\" icon=\"edit\" size=\"small\">\r\n              Editar\r\n            </vs-button>\r\n          </vs-td>\r\n          <vs-td class=\"fixed-column\">\r\n            <div>\r\n              <div style=\"width: 200px;\" class=\"flex flex-col gap-2\">\r\n                <span v-if=\"currentUser.name_usuario == 'sguacan'\"> # {{ tr.id }}</span>\r\n                <span class=\"flex font-bold\">{{ tr.institucion }}</span>\r\n                <span class=\"text-xs\">{{ tr.ciudad }}</span>\r\n                <span class=\"text-xs\">{{ tr.asesor }}</span>\r\n              </div>\r\n            </div>\r\n          </vs-td>\r\n          <vs-td class=\"fixed-column\">\r\n            <div>\r\n              <div style=\"width: 200px;\" class=\"flex flex-col gap-2\">\r\n                <span class=\"flex font-bold\">{{ tr.programa }}</span>\r\n                <span class=\"text-xs font-bold\">Asistentes: <span class=\"font-normal\">{{ tr.n_asistentes }}</span></span>\r\n                <span class=\"text-xs\">{{ tr.fecha }}</span>\r\n                <span class=\"text-xs\">{{ tr.horario}}</span>\r\n              </div>\r\n            </div>\r\n            <br>\r\n            <!--ESTADO CAPACITACION-->\r\n            <p v-if=\"tr.estado_capacitacion == 0\"><vs-chip color=\"danger\"   transparent>Cancelada</vs-chip></p>\r\n            <p v-if=\"tr.estado_capacitacion == 1\"><vs-chip color=\"warning\"  transparent>Pendiente</vs-chip></p>\r\n            <p v-if=\"tr.estado_capacitacion == 2\"><vs-chip color=\"success\"   transparent>Realizada</vs-chip></p>\r\n            <!--TIPO CAPACITACION-->\r\n            <p v-if=\"tr.tipo == 0\"><vs-chip color=\"dark\"   transparent>Presencial</vs-chip></p>\r\n            <p v-if=\"tr.tipo == 1\"><vs-chip color=\"dark\"  transparent>Virtual</vs-chip></p>\r\n          </vs-td>\r\n          <vs-td v-for=\"(value, key) in tr\" :key=\"key\"\r\n            v-if=\"key !== 'id' && key !== 'fecha_inicio' &&  key !== 'estado_capacitacion' && key !== 'tipo' && key !== 'periodo' && key !== 'institucion' && key !== 'ciudad' && key !== 'asesor' && key !== 'modalidad' && key !== 'programa' && key !== 'n_asistentes' && key !== 'fecha' && key !== 'horario'\">\r\n            <span v-if=\"value === 'Asignado'\"\r\n              style=\"padding: 0.5rem 1rem; background-color: #173F5F; border-radius: 10px;color: #fff; font-weight: bold;\">\r\n              {{ value }}\r\n            </span>\r\n            <span v-else-if=\"value === 'Libre'\"\r\n              style=\"padding: 0.5rem 1rem; background-color: #3CAEA3; border-radius: 10px;color: #fff; font-weight: bold;\">\r\n              {{ value }}\r\n            </span>\r\n            <span v-else>\r\n              {{ value }}\r\n            </span>\r\n          </vs-td>\r\n        </vs-tr>\r\n      </template>\r\n    </vs-table>\r\n    <vs-popup title=\"Detalles capacitación:\" :active.sync=\"isOpen\">\r\n      <editarCapacitacionVue v-if=\"isOpen\" :agenda_editar=\"agenda_editar\" :periodoSelect=\"periodoSelect\"\r\n        :capacitacion=\"capacitacion\" :arreglo-capacitadores=\"capacitadores\" @changeRegresar=\"regresar()\"\r\n        @rechargeSeminarios=\"getCapacitaciones(), isOpen = !isOpen\" />\r\n    </vs-popup>\r\n  </div>\r\n</template>\r\n"]}]}