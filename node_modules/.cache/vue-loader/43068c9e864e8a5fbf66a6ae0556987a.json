{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\diagnostico\\admin\\ListadoPreguntas.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\diagnostico\\admin\\ListadoPreguntas.vue","mtime":1712682815721},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nimport vSelect from 'vue-select'\r\nimport flatPickr from 'vue-flatpickr-component';\r\nimport 'flatpickr/dist/flatpickr.css';\r\nimport axios from 'axios';\r\nimport $ from 'jquery'\r\nvar img_opcion_old = '';\r\nexport default {\r\n    data() {\r\n        return{\r\n            libros:[],\r\n            arregloLibros:[],\r\n            usuario:[],\r\n            id:0,\r\n            popupAgregar:false,\r\n            editarOpcionActiva: false,\r\n            verSolicitud:false,\r\n            opcion: {id_opcion_pregunta: 0, id_pregunta: '', descripcion: '', img_opcion: '', tipo: ''},\r\n            opciones:[],\r\n            formulario:{\r\n              libro:'',\r\n              descripcion:'',\r\n              institucion:'',\r\n              periodo:'',\r\n              estado:'1',\r\n            },\r\n            src_imagen_opcion: '',\r\n            title:'',\r\n            colorx:'success',\r\n            books:false,\r\n            pregunta_delete:'',\r\n        }\r\n    },\r\n    components:{\r\n        flatPickr,\r\n        vSelect,\r\n    },\r\n    created(){\r\n        let me = this;\r\n        me.usuario = JSON.parse(localStorage.getItem(\"usuario\"))\r\n        me.getLibros();\r\n        me.getarregloLibros();\r\n    },\r\n    mounted(){\r\n        let me = this;\r\n        me.title = \"Preguntas para la prueba diagnóstica\"\r\n    },\r\n    methods:{\r\n        getarregloLibros(){\r\n            let me = this;\r\n            this.$http.get(this.$server_url + 'diagnostico?getBooks=yes')\r\n                .then(function (res) {\r\n                    me.arregloLibros = res.data\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                })\r\n        },\r\n        openEditar(tr){\r\n            let me = this;\r\n            me.formulario.libro = tr.libro_id\r\n            me.getPreguntas()\r\n            me.popupAgregar = true;\r\n            me.books = true\r\n        },\r\n        addForm(){\r\n            let me = this;\r\n            me.popupAgregar = true;\r\n            me.books = false\r\n        },\r\n        getPreguntas(){\r\n            let me = this;\r\n            me.opciones = []\r\n            if(me.formulario.libro == '' || me.formulario.libro == null || me.formulario.libro == undefined){\r\n                me.$vs.notify({\r\n                    text:'Debe seleccionar un libro.',\r\n                    color:'warning',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check'})\r\n                return;\r\n            }\r\n            this.$http.get(this.$server_url + 'diagnostico?getPreguntas=yes&libro_id='+me.formulario.libro)\r\n                .then(function (res) {\r\n                    me.opciones = res.data\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                })\r\n\r\n        },\r\n        getLibros() {\r\n            let me = this;\r\n            me.$vs.loading();\r\n            this.$http.get(this.$server_url + 'listaLibro')\r\n                .then(function (res) {\r\n                    me.libros = res.data.libros\r\n                    me.$vs.loading.close()\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                    me.$vs.loading.close()\r\n                })\r\n        },\r\n        mostrarImg(file, img){\r\n            let me = this;\r\n            me.src_imagen_opcion = ' ';\r\n            me.src_imagen_pregunta = ' ';\r\n            var archivo = document.getElementById(\"file\"+file).files[0];\r\n            var reader = new FileReader();\r\n            if (me) {\r\n                reader.readAsDataURL(archivo );\r\n                reader.onloadend = function () {\r\n                    //document.getElementById(\"img\"+img).style.display = \"block\";\r\n                    document.getElementById(\"img\"+img).src = reader.result;\r\n                }\r\n            }\r\n        },\r\n        cargarOpcion(){\r\n            let me = this;\r\n            if(me.opcion.descripcion.trim() == \"\"){\r\n                me.$vs.notify({\r\n                text:'Debe ingresar la descripción de la pregunta.',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n                return\r\n            }\r\n            if(me.formulario.libro == '' || me.formulario.libro == null || me.formulario.libro == undefined){\r\n                me.$vs.notify({\r\n                    text:'Debe seleccionar un libro.',\r\n                    color:'warning',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check'})\r\n            }else{\r\n                me.$vs.loading()\r\n                const formData = new FormData();\r\n                let fileImgPreg = document.getElementById(\"file2\").files[0];\r\n                let tipo = 0;\r\n                if( me.opcion.tipo === true ){\r\n                    tipo = 1;\r\n                }\r\n                formData.append('pregunta',     me.opcion.descripcion);\r\n                formData.append('imagen',       fileImgPreg);\r\n                formData.append('opcion',       tipo);\r\n                formData.append('libro_id',     me.formulario.libro);\r\n                axios.post(this.$data_url+'api/cargarOpcionDiagnostico', formData)\r\n                .then(res => {\r\n                    me.$vs.loading.close()\r\n                    me.opciones = res.data;\r\n                    me.opcion.descripcion = '';\r\n                    me.opcion.tipo = '';\r\n                    me.src_imagen_opcion = '';\r\n                    me.opcion.id_opcion_pregunta = 0;\r\n                    document.getElementById(\"file2\").value = '';\r\n                    me.$vs.notify({\r\n                    text:'Se guardo correctamente',\r\n                    color:'success',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check'})\r\n                    me.getarregloLibros()\r\n                })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close()\r\n                    console.log(error);\r\n                })\r\n            }\r\n        },\r\n        editarOpcion(item){\r\n            let me = this;\r\n            me.opcion.pregunta = '';\r\n            document.getElementById(\"file2\").value = '';\r\n            me.opcion.descripcion        = item.pregunta;\r\n            me.opcion.tipo               = item.opcion;\r\n            me.opcion.id_opcion_pregunta = item.id;\r\n            img_opcion_old = item.imagen;\r\n            me.src_imagen_opcion = this.$data_url+'archivos/diagnostico/img/img_preguntas/'+item.imagen;\r\n        },\r\n        confirmEditarOpcion(item){\r\n            let me = this;\r\n            me.editarOpcionActiva= false;\r\n            let fileImgOpcion;\r\n            fileImgOpcion = document.getElementById(\"file2\").files[0];\r\n            if(fileImgOpcion === undefined ){\r\n                fileImgOpcion = item.img_opcion;\r\n            }\r\n            let tipo = 0;\r\n            if( me.opcion.tipo === true || me.opcion.tipo === 1 ){\r\n                tipo = 1;\r\n            }\r\n            const formData = new FormData();\r\n            formData.append('pregunta', me.opcion.descripcion);\r\n            formData.append('opcion', tipo);\r\n            formData.append('img_opcion', fileImgOpcion);\r\n            formData.append('img_opcion_old', img_opcion_old);\r\n            formData.append('id', item.id_opcion_pregunta);\r\n            formData.append('libro_id',     me.formulario.libro);\r\n            axios.post(this.$data_url+'api/editarOpcionDiagnostico', formData).\r\n            then(res => {\r\n                me.opciones = res.data;\r\n                me.editarOpcionActiva = false;\r\n                me.opcion.descripcion = '';\r\n                me.opcion.tipo = '';\r\n                me.src_imagen_opcion = '';\r\n                me.opcion.id_opcion_pregunta = 0;\r\n                me.$vs.notify({\r\n                text:'Se guardo correctamente',\r\n                color:'success',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n        },\r\n        quitarOpcion(item){\r\n            let me = this;\r\n            me.pregunta_delete  = item\r\n            this.$http.get(this.$server_url+'diagnostico/'+item.id)\r\n                .then(function (res) {\r\n                    if(res.data.status == 0){\r\n                        me.$vs.notify({\r\n                        text:res.data.message,\r\n                        color:'danger',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check'})\r\n                        return\r\n                    }\r\n                    me.removePregunta()\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                })\r\n        },\r\n        removePregunta(){\r\n            let me = this;\r\n            let formData = new FormData();\r\n            formData.append('id',me.pregunta_delete.id)\r\n            me.$vs.loading()\r\n            axios.post(this.$data_url+'api/eliminarOpcionDiagnostica', formData)\r\n            .then(res => {\r\n                me.removeItemFromArr(me.opciones, me.pregunta_delete)\r\n                me.pregunta_delete = ''\r\n                me.$vs.notify({\r\n                text:\"Se elimino correctamente\",\r\n                color:'success',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n                me.$vs.loading.close()\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n        },\r\n        removeItemFromArr (arr, item) {\r\n            const i = arr.indexOf(item)\r\n            arr.splice(i, 1)\r\n        },\r\n         openConfirm(tr){\r\n            let me = this;\r\n            me.id = tr.id\r\n            this.$vs.dialog({\r\n                type:'confirm',\r\n                color: 'danger',\r\n                title: `Confirmar`,\r\n                text: 'Estas seguro de eliminar?',\r\n                accept:this.eliminarLink\r\n            })\r\n        },\r\n        eliminarLink(){\r\n        let me = this\r\n        me.$vs.loading()\r\n        this.$http.delete(this.$server_url+'formularioDocente/'+me.id)\r\n            .then(res => {\r\n                me.$vs.loading.close()\r\n                if(res.data.status == 0){\r\n                    me.$vs.notify({\r\n                        text: res.data.message,\r\n                        color: 'danger',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-alert-triangle',\r\n                        time:3000,\r\n                    })\r\n                    return\r\n                }\r\n                me.$vs.notify({\r\n                    text: 'Se elimino correctamente el formulario',\r\n                    color: 'success',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-alert-triangle'\r\n                })\r\n                me.getForms()\r\n            })\r\n            .catch(function (error) {\r\n            me.$vs.loading.close()\r\n            console.log(error)\r\n            })\r\n        },\r\n        limpiar(){\r\n          let me                        = this;\r\n          me.formulario.id              = 0\r\n          me.formulario.toDate          = null\r\n          me.formulario.descripcion     = \"\"\r\n          me.formulario.institucion     = \"\"\r\n          me.formulario.periodo         = \"\"\r\n          me.formulario.estado          = 1\r\n          me.formulario.libro           = \"\"\r\n          me.opcion.descripcion         = '';\r\n          me.opcion.tipo                = '';\r\n          me.src_imagen_opcion          = '';\r\n          me.opcion.tipo                = false\r\n          me.opcion.id_opcion_pregunta  = 0;\r\n          me.opciones                   = []\r\n          me.editarOpcionActiva         = false\r\n        },\r\n    }\r\n}\r\n",{"version":3,"sources":["ListadoPreguntas.vue"],"names":[],"mappings":";AAifile":"ListadoPreguntas.vue","sourceRoot":"src/views/diagnostico/admin","sourcesContent":["<template>\r\n    <div>\r\n        <vx-card\r\n            v-if=\"usuario.id_group == 1\"\r\n            :title=\"title\"\r\n            title-color=\"primary\"\r\n            subtitle=\"Estas preguntas estarán reflejadas en la prueba diagnóstica del estudiante.\">\r\n            <small  v-if=\"usuario.id_group == 1\">Ruta: /diagnostico/preguntas</small>\r\n            <vs-alert class=\"mt-2\" color=\"success\" style=\"min-height: 60px;\">\r\n                <p class=\"font-bold\">!Estas preguntas serán usadas para la validación del ingreso de códigos de libros por parte de los estudiantes</p>\r\n            </vs-alert>\r\n            <vs-table style=\"margin-top:-20px;\" class=\"mt-3\" search :data=\"arregloLibros\" stripe pagination max-items=\"10\">\r\n                <template>\r\n                <div slot=\"header\" class=\"flex\">\r\n                  <vs-button color=\"rgb(62, 201, 214)\" @click=\"limpiar();addForm();\" icon=\"add\" type=\"filled\">Generar preguntas al libro</vs-button>\r\n                </div>\r\n                </template>\r\n                <template slot=\"thead\">\r\n                <vs-th sort-key=\"nombrelibro\">Libro</vs-th>\r\n                <vs-th sort-key=\"nombrelibro\">Cantidad de preguntas</vs-th>\r\n                <vs-th sort-key=\"nombreInstitucion\">Acciones</vs-th>\r\n                </template>\r\n                <template slot-scope=\"{data}\">\r\n                <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                    <vs-td :data=\"data[indextr].nombrelibro\">\r\n                        {{  tr.nombrelibro}}\r\n                    </vs-td>\r\n                    <vs-td :data=\"data[indextr].nombrelibro\">\r\n                        {{  tr.contador}}\r\n                    </vs-td>\r\n                    <vs-td>\r\n                    <div class=\"flex\">\r\n                        <vx-tooltip class=\"ml-3\" style=\"display: inline-block;\" text=\"Editar\" position=\"top\" color=\"success\">\r\n                            <vs-button size=\"small\" class=\"modal-default-button\" color=\"warning\" @click=\"openEditar(data[indextr]);\" type=\"line\" icon-pack=\"feather\" icon=\"icon-edit\">\r\n                            </vs-button>\r\n                        </vx-tooltip>\r\n                    </div>\r\n                    </vs-td>\r\n                </vs-tr>\r\n                </template>\r\n            </vs-table>\r\n        </vx-card>\r\n         <!--MODAL PARA AGREGAR-->\r\n      <vs-popup classContent=\"popup-example\" @close=\"getarregloLibros()\" fullscreen  title=\"Generar Preguntas\" :active.sync=\"popupAgregar\">\r\n        <vs-tabs :color=\"colorx\">\r\n          <vs-tab @click=\"colorx = 'success'\" label=\"Información\">\r\n            <div class=\"vx-row mb-6\">\r\n              <div class=\"vx-col sm:w-1/3 w-full\">\r\n                <span>Libro</span>\r\n              </div>\r\n              <div class=\"vx-col sm:w-2/3 w-full\">\r\n                <v-select :options=\"libros\" :disabled=\"books\" id=\"books\" @input=\"getPreguntas()\" :reduce=\"libros => libros.idlibro\" label=\"nombrelibro\" class=\"w-full\" v-model=\"formulario.libro\" />\r\n              </div>\r\n            </div>\r\n            <div class=\"vx-col w-full mb-2\" style=\"padding: 10px;\">\r\n                <vs-divider position=\"left\" color=\"success\">Crear opciones</vs-divider>\r\n                <div class=\"vx-row mb-2\" id=\"editar\">\r\n                    <div class=\"vx-col w-full mb-1\">\r\n                        <div style=\"border: 1px solid #d5d5d5; border-radius: 5px; padding: 5px 5px 5px 5px;\" align=\"center\">\r\n                            <input type=\"file\" name=\"file2\" id=\"file2\" class=\"inputfile\" style=\"display: none;\" v-on:change=\"mostrarImg(2,2)\">\r\n                            <label for=\"file2\" style=\"margin-bottom: -10px; cursor: pointer; font-weight: bold; width: 100%; font-size: 11px;\">\r\n                                <i class=\"fa-solid fa-cloud\"></i> Click aquí para subir imagen\r\n                            </label>\r\n                            <div v-if=\"src_imagen_opcion==='' || src_imagen_opcion===null || src_imagen_opcion==='null'\"></div>\r\n                            <img id=\"img2\" style=\"border-radius: 5px;\" class=\"img-responsive mb-2\" v-bind:src=\"src_imagen_opcion\" v-else>\r\n                        </div>\r\n                        <vs-textarea class=\"mt-2\" label=\"Nombre Pregunta\" v-model=\"opcion.descripcion\" height=\"60px\"/>\r\n                    </div>\r\n                    <div class=\"vx-row w-full\">\r\n                        <div class=\"vx-col sm:w-1/2 w-full\" align=\"center\">\r\n                            <vs-switch style=\"width: 100px;\" color=\"success\" class=\"mt-3 mb-5\" v-model=\"opcion.tipo\">\r\n                                <span slot=\"on\">Verdadero</span>\r\n                                <span slot=\"off\">Falso</span>\r\n                            </vs-switch>\r\n                        </div>\r\n                        <div class=\"vx-col sm:w-1/2 w-full mb-1\" align=\"center\">\r\n                            <vs-button  v-if=\"editarOpcionActiva===false\"  class=\"mr-3 mb-2\" icon=\"save\" @click=\"cargarOpcion()\">Agregar Pregunta</vs-button>\r\n                            <vs-button  v-else class=\"mr-3 mb-2\" color=\"warning\" icon-pack=\"feather\" icon=\"icon-edit-1\" @click=\"confirmEditarOpcion(opcion)\">Editar Pregunta</vs-button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"vx-col w-full\">\r\n                <vs-divider position=\"center\" color=\"primary\">Opciones agregadas</vs-divider>\r\n                <div class=\"vx-row mb-3\" :key=\"indexitem\" v-for=\"(item, indexitem) in opciones\">\r\n                    <div class=\"vx-col sm:w-1/5 w-full\" align=\"center\">\r\n                        <img v-if=\"item.imagen\" style=\"border-radius: 5px;\" v-bind:src=\"$data_url+'archivos/diagnostico/img/img_preguntas/'+item.imagen\" width=\"100\">\r\n                    </div>\r\n                    <div class=\"vx-col sm:w-4/5 w-full\">\r\n                        <vs-input class=\"w-full\" v-model=\"item.pregunta\"/>\r\n                        <div class=\"vx-row\" align=\"center\">\r\n                        <div class=\"vx-col sm:w-1/3 w-full\">\r\n                            <vs-switch style=\"width: 100px;\" disabled=\"true\" color=\"success\" class=\"mt-3 mb-5\" v-model=\"item.opcion\">\r\n                                <span slot=\"on\">Verdadero</span>\r\n                                <span slot=\"off\">Falso</span>\r\n                            </vs-switch>\r\n                        </div>\r\n                        <div class=\"vx-col sm:w-1/3 w-full\">\r\n                            <vs-button color=\"primary\" type=\"line\" icon-pack=\"feather\" icon=\"icon-edit-1\" size=\"small\" @click=\"src_imagen_opcion=''; editarOpcionActiva=true; editarOpcion(item)\">Editar</vs-button>\r\n                        </div>\r\n                        <div class=\"vx-col sm:w-1/3 w-full\">\r\n                            <vs-button color=\"danger\" type=\"line\" icon-pack=\"feather\" icon=\"icon-trash\" size=\"small\" @click=\"quitarOpcion(item)\">Eliminar</vs-button>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n          </vs-tab>\r\n        </vs-tabs>\r\n      </vs-popup>\r\n    </div>\r\n</template>\r\n<script>\r\nimport vSelect from 'vue-select'\r\nimport flatPickr from 'vue-flatpickr-component';\r\nimport 'flatpickr/dist/flatpickr.css';\r\nimport axios from 'axios';\r\nimport $ from 'jquery'\r\nvar img_opcion_old = '';\r\nexport default {\r\n    data() {\r\n        return{\r\n            libros:[],\r\n            arregloLibros:[],\r\n            usuario:[],\r\n            id:0,\r\n            popupAgregar:false,\r\n            editarOpcionActiva: false,\r\n            verSolicitud:false,\r\n            opcion: {id_opcion_pregunta: 0, id_pregunta: '', descripcion: '', img_opcion: '', tipo: ''},\r\n            opciones:[],\r\n            formulario:{\r\n              libro:'',\r\n              descripcion:'',\r\n              institucion:'',\r\n              periodo:'',\r\n              estado:'1',\r\n            },\r\n            src_imagen_opcion: '',\r\n            title:'',\r\n            colorx:'success',\r\n            books:false,\r\n            pregunta_delete:'',\r\n        }\r\n    },\r\n    components:{\r\n        flatPickr,\r\n        vSelect,\r\n    },\r\n    created(){\r\n        let me = this;\r\n        me.usuario = JSON.parse(localStorage.getItem(\"usuario\"))\r\n        me.getLibros();\r\n        me.getarregloLibros();\r\n    },\r\n    mounted(){\r\n        let me = this;\r\n        me.title = \"Preguntas para la prueba diagnóstica\"\r\n    },\r\n    methods:{\r\n        getarregloLibros(){\r\n            let me = this;\r\n            this.$http.get(this.$server_url + 'diagnostico?getBooks=yes')\r\n                .then(function (res) {\r\n                    me.arregloLibros = res.data\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                })\r\n        },\r\n        openEditar(tr){\r\n            let me = this;\r\n            me.formulario.libro = tr.libro_id\r\n            me.getPreguntas()\r\n            me.popupAgregar = true;\r\n            me.books = true\r\n        },\r\n        addForm(){\r\n            let me = this;\r\n            me.popupAgregar = true;\r\n            me.books = false\r\n        },\r\n        getPreguntas(){\r\n            let me = this;\r\n            me.opciones = []\r\n            if(me.formulario.libro == '' || me.formulario.libro == null || me.formulario.libro == undefined){\r\n                me.$vs.notify({\r\n                    text:'Debe seleccionar un libro.',\r\n                    color:'warning',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check'})\r\n                return;\r\n            }\r\n            this.$http.get(this.$server_url + 'diagnostico?getPreguntas=yes&libro_id='+me.formulario.libro)\r\n                .then(function (res) {\r\n                    me.opciones = res.data\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                })\r\n\r\n        },\r\n        getLibros() {\r\n            let me = this;\r\n            me.$vs.loading();\r\n            this.$http.get(this.$server_url + 'listaLibro')\r\n                .then(function (res) {\r\n                    me.libros = res.data.libros\r\n                    me.$vs.loading.close()\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                    me.$vs.loading.close()\r\n                })\r\n        },\r\n        mostrarImg(file, img){\r\n            let me = this;\r\n            me.src_imagen_opcion = ' ';\r\n            me.src_imagen_pregunta = ' ';\r\n            var archivo = document.getElementById(\"file\"+file).files[0];\r\n            var reader = new FileReader();\r\n            if (me) {\r\n                reader.readAsDataURL(archivo );\r\n                reader.onloadend = function () {\r\n                    //document.getElementById(\"img\"+img).style.display = \"block\";\r\n                    document.getElementById(\"img\"+img).src = reader.result;\r\n                }\r\n            }\r\n        },\r\n        cargarOpcion(){\r\n            let me = this;\r\n            if(me.opcion.descripcion.trim() == \"\"){\r\n                me.$vs.notify({\r\n                text:'Debe ingresar la descripción de la pregunta.',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n                return\r\n            }\r\n            if(me.formulario.libro == '' || me.formulario.libro == null || me.formulario.libro == undefined){\r\n                me.$vs.notify({\r\n                    text:'Debe seleccionar un libro.',\r\n                    color:'warning',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check'})\r\n            }else{\r\n                me.$vs.loading()\r\n                const formData = new FormData();\r\n                let fileImgPreg = document.getElementById(\"file2\").files[0];\r\n                let tipo = 0;\r\n                if( me.opcion.tipo === true ){\r\n                    tipo = 1;\r\n                }\r\n                formData.append('pregunta',     me.opcion.descripcion);\r\n                formData.append('imagen',       fileImgPreg);\r\n                formData.append('opcion',       tipo);\r\n                formData.append('libro_id',     me.formulario.libro);\r\n                axios.post(this.$data_url+'api/cargarOpcionDiagnostico', formData)\r\n                .then(res => {\r\n                    me.$vs.loading.close()\r\n                    me.opciones = res.data;\r\n                    me.opcion.descripcion = '';\r\n                    me.opcion.tipo = '';\r\n                    me.src_imagen_opcion = '';\r\n                    me.opcion.id_opcion_pregunta = 0;\r\n                    document.getElementById(\"file2\").value = '';\r\n                    me.$vs.notify({\r\n                    text:'Se guardo correctamente',\r\n                    color:'success',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check'})\r\n                    me.getarregloLibros()\r\n                })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close()\r\n                    console.log(error);\r\n                })\r\n            }\r\n        },\r\n        editarOpcion(item){\r\n            let me = this;\r\n            me.opcion.pregunta = '';\r\n            document.getElementById(\"file2\").value = '';\r\n            me.opcion.descripcion        = item.pregunta;\r\n            me.opcion.tipo               = item.opcion;\r\n            me.opcion.id_opcion_pregunta = item.id;\r\n            img_opcion_old = item.imagen;\r\n            me.src_imagen_opcion = this.$data_url+'archivos/diagnostico/img/img_preguntas/'+item.imagen;\r\n        },\r\n        confirmEditarOpcion(item){\r\n            let me = this;\r\n            me.editarOpcionActiva= false;\r\n            let fileImgOpcion;\r\n            fileImgOpcion = document.getElementById(\"file2\").files[0];\r\n            if(fileImgOpcion === undefined ){\r\n                fileImgOpcion = item.img_opcion;\r\n            }\r\n            let tipo = 0;\r\n            if( me.opcion.tipo === true || me.opcion.tipo === 1 ){\r\n                tipo = 1;\r\n            }\r\n            const formData = new FormData();\r\n            formData.append('pregunta', me.opcion.descripcion);\r\n            formData.append('opcion', tipo);\r\n            formData.append('img_opcion', fileImgOpcion);\r\n            formData.append('img_opcion_old', img_opcion_old);\r\n            formData.append('id', item.id_opcion_pregunta);\r\n            formData.append('libro_id',     me.formulario.libro);\r\n            axios.post(this.$data_url+'api/editarOpcionDiagnostico', formData).\r\n            then(res => {\r\n                me.opciones = res.data;\r\n                me.editarOpcionActiva = false;\r\n                me.opcion.descripcion = '';\r\n                me.opcion.tipo = '';\r\n                me.src_imagen_opcion = '';\r\n                me.opcion.id_opcion_pregunta = 0;\r\n                me.$vs.notify({\r\n                text:'Se guardo correctamente',\r\n                color:'success',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n        },\r\n        quitarOpcion(item){\r\n            let me = this;\r\n            me.pregunta_delete  = item\r\n            this.$http.get(this.$server_url+'diagnostico/'+item.id)\r\n                .then(function (res) {\r\n                    if(res.data.status == 0){\r\n                        me.$vs.notify({\r\n                        text:res.data.message,\r\n                        color:'danger',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check'})\r\n                        return\r\n                    }\r\n                    me.removePregunta()\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                })\r\n        },\r\n        removePregunta(){\r\n            let me = this;\r\n            let formData = new FormData();\r\n            formData.append('id',me.pregunta_delete.id)\r\n            me.$vs.loading()\r\n            axios.post(this.$data_url+'api/eliminarOpcionDiagnostica', formData)\r\n            .then(res => {\r\n                me.removeItemFromArr(me.opciones, me.pregunta_delete)\r\n                me.pregunta_delete = ''\r\n                me.$vs.notify({\r\n                text:\"Se elimino correctamente\",\r\n                color:'success',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n                me.$vs.loading.close()\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n        },\r\n        removeItemFromArr (arr, item) {\r\n            const i = arr.indexOf(item)\r\n            arr.splice(i, 1)\r\n        },\r\n         openConfirm(tr){\r\n            let me = this;\r\n            me.id = tr.id\r\n            this.$vs.dialog({\r\n                type:'confirm',\r\n                color: 'danger',\r\n                title: `Confirmar`,\r\n                text: 'Estas seguro de eliminar?',\r\n                accept:this.eliminarLink\r\n            })\r\n        },\r\n        eliminarLink(){\r\n        let me = this\r\n        me.$vs.loading()\r\n        this.$http.delete(this.$server_url+'formularioDocente/'+me.id)\r\n            .then(res => {\r\n                me.$vs.loading.close()\r\n                if(res.data.status == 0){\r\n                    me.$vs.notify({\r\n                        text: res.data.message,\r\n                        color: 'danger',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-alert-triangle',\r\n                        time:3000,\r\n                    })\r\n                    return\r\n                }\r\n                me.$vs.notify({\r\n                    text: 'Se elimino correctamente el formulario',\r\n                    color: 'success',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-alert-triangle'\r\n                })\r\n                me.getForms()\r\n            })\r\n            .catch(function (error) {\r\n            me.$vs.loading.close()\r\n            console.log(error)\r\n            })\r\n        },\r\n        limpiar(){\r\n          let me                        = this;\r\n          me.formulario.id              = 0\r\n          me.formulario.toDate          = null\r\n          me.formulario.descripcion     = \"\"\r\n          me.formulario.institucion     = \"\"\r\n          me.formulario.periodo         = \"\"\r\n          me.formulario.estado          = 1\r\n          me.formulario.libro           = \"\"\r\n          me.opcion.descripcion         = '';\r\n          me.opcion.tipo                = '';\r\n          me.src_imagen_opcion          = '';\r\n          me.opcion.tipo                = false\r\n          me.opcion.id_opcion_pregunta  = 0;\r\n          me.opciones                   = []\r\n          me.editarOpcionActiva         = false\r\n        },\r\n    }\r\n}\r\n</script>\r\n"]}]}