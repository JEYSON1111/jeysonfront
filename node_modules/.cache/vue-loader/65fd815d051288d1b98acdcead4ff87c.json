{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\salle\\administrador\\evaluaciones\\Reporte_evaluaciones.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\salle\\administrador\\evaluaciones\\Reporte_evaluaciones.vue","mtime":1712682816509},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\n    import flatPickr from 'vue-flatpickr-component';\r\n    import 'flatpickr/dist/flatpickr.css';\r\n    import vSelect from 'vue-select'\r\n\r\n    import ECharts from 'vue-echarts/components/ECharts'\r\n    import 'echarts/lib/component/tooltip'\r\n    import 'echarts/lib/component/legend'\r\n    import 'echarts/lib/chart/bar'\r\n    import 'echarts/lib/chart/radar'\r\n    import 'echarts/lib/chart/pie'\r\n    import theme from './theme.json'\r\n\r\n    import VueApexCharts from 'vue-apexcharts'\r\n\r\n    import graficoAreas from './Reporte_barras.vue'\r\n\r\n    ECharts.registerTheme('ovilia-green', theme)\r\n\r\n    export default {\r\n        data(){\r\n            return {\r\n                colores: ['#FF9F43','#28C76F','#EA5455','#87ceeb','#7367F0','#28C76F','#EA5455','#87ceeb','#7367F0','#28C76F','#EA5455','#87ceeb','#7367F0','#28C76F','#EA5455','#87ceeb','#7367F0', '#FF9F43','#28C76F','#EA5455','#87ceeb','#7367F0','#28C76F'],\r\n                data_areas: [],\r\n                institucion_selected: [],\r\n                instituciones: [],\r\n                usuario: [],\r\n                anio_reporte: '2021',\r\n                promedio_instituciones: [],\r\n                instituciones_pie: [],\r\n                key_areas: [],\r\n                key_asignaturas: [],\r\n                area_selected: '',\r\n                asignatura_selected: '',\r\n                data_docentes_areas: [],\r\n                data_docentes_asignaturas: [],\r\n                activePromptExcel: false,\r\n                fileName: null,\r\n                formats: ['xls', 'xlsx', 'csv', 'txt'],\r\n                selectedFormat: 'xls',\r\n                fileNameAs: '',\r\n                activePromptExcelAsignaturas: false,\r\n                pie:{\r\n                    tooltip: { trigger: 'item', formatter: '{a} <br/>{b} : {c} ({d}%)' },\r\n                    legend: { orient: 'vertical', left: 'left', data: [], },\r\n                    series: [\r\n                    { name: 'Promedio', type: 'pie', radius: '55%', center: ['50%', '60%'], color: ['#FF9F43','#28C76F','#15BCE3','#83E315','#FE4D11','#1194FE','#9E11FE','#FE11DD', '#F24365'], data: [], itemStyle: { emphasis: { shadowBlur: 10, shadowOffsetX: 0, shadowColor: 'rgba(0, 0, 0, 0.5)' } } }\r\n                    ]\r\n                },\r\n\r\n                columnInstituciones: {},\r\n                columnChart: {},\r\n\r\n                bar: {\r\n                    legend: {},\r\n                    tooltip: {},\r\n                    dataset: {\r\n                    // Provide data.\r\n                    source: [\r\n                        ['Product', '2015', '2016', '2017'],\r\n                        ['Matcha Latte', ...this.randomize()],\r\n                        ['Milk Tea', ...this.randomize()],\r\n                        ['Cheese Cocoa', ...this.randomize()],\r\n                        ['Walnut Brownie', ...this.randomize()]\r\n                    ]\r\n                    },\r\n                    // Declare X axis, which is a category axis, mapping\r\n                    // to the first column by default.\r\n                    xAxis: { type: 'category' },\r\n                    // Declare Y axis, which is a value axis.\r\n                    yAxis: {},\r\n                    // Declare several series, each of them mapped to a\r\n                    // column of the dataset by default.\r\n                    series: [{ type: 'bar' }, { type: 'bar' }, { type: 'bar' }]\r\n\r\n                },\r\n\r\n                radar:{},\r\n\r\n                barChart: {},\r\n                barChartTopDoc: {},\r\n\r\n                lineAreaChartSpline: {\r\n                    series: [{\r\n                        name: 'Pregunta',\r\n                        data: [1, 2, 3, 4, 5, 6, 7]\r\n                    }],\r\n                    chartOptions: {\r\n                    dataLabels: {\r\n                        enabled: false\r\n                    },\r\n                    stroke: {\r\n                        curve: 'smooth'\r\n                    },\r\n                    colors: ['#7367F0', '#28C76F', '#EA5455', '#FF9F43', '#1E1E1E'],\r\n                    xaxis: {\r\n                        type: 'datetime',\r\n                        categories: [\r\n                            \"2018-09-19T00:00:00\",\r\n                            \"2018-09-19T06:30:00\",\r\n                            \"2018-09-19T04:30:00\",\r\n                            \"2018-09-19T02:30:00\",\r\n                            \"2018-09-19T03:30:00\",\r\n                            \"2018-09-19T01:30:00\",\r\n                            \"2018-09-19T05:30:00\"\r\n                        ],\r\n                    },\r\n                    tooltip: {\r\n                        x: {\r\n                        format: 'dd/MM/yy HH:mm'\r\n                        },\r\n\r\n                    }\r\n                    }\r\n                }\r\n\r\n            }\r\n        },\r\n        components: {\r\n            'v-select': vSelect,\r\n            flatPickr,\r\n            ECharts,\r\n            VueApexCharts,\r\n            graficoAreas\r\n        },\r\n        mounted () {\r\n            this.getInstituciones()\r\n            this.getReporteInstituciones()\r\n        },\r\n        created(){\r\n            this.anio_reporte = '2021'\r\n        },\r\n        methods: {\r\n            randomize() {\r\n                return [0, 0, 0].map(v => {\r\n                    return Math.round(300 + Math.random() * 700) / 10\r\n                })\r\n            },\r\n            getInstituciones(){\r\n                let me = this\r\n                me.$vs.loading()\r\n                this.$http.get(this.$server_url+'instituciones_salle_select')\r\n                .then(res => {\r\n                    me.instituciones = res.data\r\n                    me.$vs.loading.close()\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                    me.$vs.loading.close()\r\n                })\r\n            },\r\n            getReporteInstituciones(){\r\n                let me = this\r\n                me.$vs.loading()\r\n                this.$http.get(this.$server_url+'reporte_evaluaciones_institucion/1')\r\n                .then(res => {\r\n                    me.promedio_instituciones = res.data.items\r\n                    let promedios = []\r\n                    let instituciones = []\r\n                    $.each(me.promedio_instituciones,function(key, value){\r\n                        promedios.push(value.puntaje)\r\n                        instituciones.push(value.nombreInstitucion)\r\n\r\n                        me.pie.series[0].data.push({\r\n                            value: value.puntaje,\r\n                            name: value.nombreInstitucion\r\n                        })\r\n                    });\r\n\r\n                    me.columnInstituciones = {\r\n                        series: [{\r\n                            name: 'Promedio',\r\n                            data: promedios\r\n                        }],\r\n                        chartOptions: {\r\n                            colors: ['#28C76F'],\r\n                            plotOptions: { bar: { horizontal: false, endingShape: 'rounded', columnWidth: '55%', }, },\r\n                            dataLabels: { enabled: false },\r\n                            stroke: { show: true, width: 2, colors: ['transparent'] },\r\n                            xaxis: { categories: instituciones },\r\n                            yaxis: { title: { text: '(Promedio)' } },\r\n                            fill: { opacity: 1 },\r\n                        tooltip: { y: { formatter: function(val) { return val + \"%\" } } }\r\n                        }\r\n                    }\r\n\r\n                    me.$vs.loading.close()\r\n                })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close()\r\n                    console.log(error);\r\n                })\r\n            },\r\n            getPromedioAreas(){\r\n                let me = this\r\n                me.$vs.loading()\r\n                this.$http.get(this.$server_url+'salle_promedio_areas/'+me.anio_reporte+'/'+me.institucion_selected.idInstitucion)\r\n                .then(res => {\r\n                    me.data_docentes_areas = res.data.items\r\n\r\n                    me.data_docentes_areas.sort((a, b) => {\r\n                        return b.puntaje_evaluacion - a.puntaje_evaluacion;\r\n                    });\r\n\r\n                    me.graficoTopDocAreas()\r\n\r\n                    let areas = []\r\n                    $.each(res.data.items,function(key, value){\r\n                        $.each(value.areas,function(keyA, valueA){\r\n                            areas.push({ nombre_area: valueA.nombre_area, puntaje: valueA.puntaje, id_area: valueA.id_area })\r\n                        });\r\n                    });\r\n\r\n                    let areas_agrupadas = []\r\n                    areas_agrupadas = me.groupArrayOfObjects(areas, \"nombre_area\")\r\n                    me.key_areas = []\r\n                    let key_areas_1 = []\r\n                    $.each(areas_agrupadas,function(key, value){\r\n                        key_areas_1.push(key)\r\n                        me.key_areas.push(value[0])\r\n                    });\r\n\r\n                    let puntajes_areas = []\r\n                    let nombre_areas = []\r\n\r\n                    for( let i=0; i<key_areas_1.length; i++){\r\n                        let acum_puntaje = 0\r\n\r\n                        $.each(areas_agrupadas[key_areas_1[i]],function(key, value){\r\n                            acum_puntaje += value.puntaje\r\n                        });\r\n\r\n                        let porcentaje_area = ((acum_puntaje * 100) / ((areas_agrupadas[key_areas_1[i]].length) * 100) ).toFixed(2)\r\n\r\n                        puntajes_areas.push(porcentaje_area)\r\n                        nombre_areas.push(key_areas_1[i])\r\n                    }\r\n\r\n                    me.columnChart = {\r\n                        series: [{\r\n                            name: 'Promedio',\r\n                            data: puntajes_areas\r\n                        }],\r\n                        chartOptions: {\r\n                            colors: ['#FF9F43','#28C76F','#EA5455','#87ceeb','#7367F0','#28C76F','#EA5455','#87ceeb','#7367F0','#28C76F','#EA5455','#87ceeb','#7367F0','#28C76F','#EA5455','#87ceeb','#7367F0'],\r\n                            plotOptions: { bar: { horizontal: false, endingShape: 'rounded', columnWidth: '55%', }, },\r\n                            dataLabels: { enabled: false },\r\n                            stroke: { show: true, width: 2, colors: ['transparent'] },\r\n                            xaxis: { categories: nombre_areas },\r\n                            yaxis: { title: { text: '(Promedio)' } },\r\n                            fill: { opacity: 1 },\r\n                        tooltip: { y: { formatter: function(val) { return val + \"%\" } } }\r\n                        }\r\n                    }\r\n                    me.$vs.loading.close()\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                    me.$vs.loading.close()\r\n                })\r\n            },\r\n            groupArrayOfObjects(list, key) {\r\n                return list.reduce(function(rv, x) {\r\n                    (rv[x[key]] = rv[x[key]] || []).push(x);\r\n                    return rv;\r\n                }, {});\r\n            },\r\n            getPromedioAsignaturas(area){\r\n                let me = this\r\n                me.area_selected = area.nombre_area\r\n                me.$vs.loading()\r\n                this.$http.get(this.$server_url+'salle_promedio_asignatura/'+me.anio_reporte+'/'+me.institucion_selected.idInstitucion+'/'+area.id_area)\r\n                .then(res => {\r\n                    me.data_docentes_asignaturas = res.data.items\r\n                    me.data_docentes_asignaturas.sort((a, b) => {\r\n                        return b.puntaje_evaluacion - a.puntaje_evaluacion;\r\n                    });\r\n\r\n                    let asignaturas = []\r\n                    $.each(res.data.items,function(key, value){\r\n                        $.each(value.asignaturas,function(keyA, valueA){\r\n                            asignaturas.push({nombre_asignatura: valueA.nombre_asignatura, puntaje: valueA.puntaje })\r\n                        });\r\n                    });\r\n\r\n                    let asignaturas_agrupadas = []\r\n                    asignaturas_agrupadas = me.groupArrayOfObjects(asignaturas, \"nombre_asignatura\")\r\n                    me.key_asignaturas = []\r\n                    let key_asignaturas_1 = []\r\n\r\n\r\n                    $.each(asignaturas_agrupadas,function(key, value){\r\n                        key_asignaturas_1.push(key)\r\n                        me.key_asignaturas.push(value[0])\r\n                    });\r\n\r\n                    var puntajes_asignaturas = []\r\n                    var nombre_asignaturas = []\r\n                    for( let i=0; i<key_asignaturas_1.length; i++){\r\n                        let acum_puntaje = 0\r\n\r\n                        $.each(asignaturas_agrupadas[key_asignaturas_1[i]],function(key, value){\r\n                            acum_puntaje += value.puntaje\r\n                        });\r\n\r\n                        let porcentaje_asignatura = ((acum_puntaje) / ((asignaturas_agrupadas[key_asignaturas_1[i]].length)) ).toFixed(2)\r\n\r\n                        puntajes_asignaturas.push(porcentaje_asignatura)\r\n                        nombre_asignaturas.push(key_asignaturas_1[i])\r\n                    }\r\n                    me.barChart = {}\r\n                    me.barChart = {\r\n                        series: [{\r\n                            data: puntajes_asignaturas\r\n                        }],\r\n                        chartOptions: {\r\n                            colors: ['#7367F0', '#28C76F', '#EA5455', '#FF9F43', '#1E1E1E','#7367F0', '#28C76F', '#EA5455', '#FF9F43', '#1E1E1E','#7367F0', '#28C76F', '#EA5455', '#FF9F43', '#1E1E1E'],\r\n                            plotOptions: { bar: { horizontal: true, } },\r\n                            dataLabels: { enabled: true },\r\n                            xaxis: { categories: nombre_asignaturas, }\r\n                        }\r\n                    }\r\n\r\n                    me.$vs.loading.close()\r\n                })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close()\r\n                    console.log(error);\r\n                })\r\n\r\n            },\r\n            getPromedioPreguntas(asignatura){\r\n                let me = this\r\n                me.asignatura_selected = asignatura.nombre_asignatura\r\n            },\r\n            graficoTopDocAreas(){\r\n                let me = this\r\n\r\n                let puntaje_evaluaciones = []\r\n                let nombre_docentes = []\r\n\r\n                $.each(me.data_docentes_areas,function(key, value){\r\n                    puntaje_evaluaciones.push(value.puntaje_evaluacion)\r\n                    nombre_docentes.push(value.nombre_docente)\r\n                });\r\n\r\n                me.barChartTopDoc = {}\r\n                me.barChartTopDoc = {\r\n                    series: [{\r\n                        data: puntaje_evaluaciones\r\n                    }],\r\n                    chartOptions: {\r\n                        colors: ['#7367F0', '#28C76F', '#EA5455', '#FF9F43', '#1E1E1E','#7367F0', '#28C76F', '#EA5455', '#FF9F43', '#1E1E1E','#7367F0', '#28C76F', '#EA5455', '#FF9F43', '#1E1E1E'],\r\n                        plotOptions: { bar: { horizontal: true, } },\r\n                        dataLabels: { enabled: true },\r\n                        xaxis: { categories: nombre_docentes, }\r\n                    }\r\n                }\r\n\r\n\r\n            },\r\n            exportToExcel() {\r\n                let me = this\r\n\r\n                let excel_areas = []\r\n                $.each(me.data_docentes_areas,function(key, value){\r\n                    $.each(value.areas,function(keyA, valueA){\r\n                        excel_areas.push({ nombre_docente: value.nombre_docente, nombre_area: valueA.nombre_area, puntaje: valueA.puntaje})\r\n                    });\r\n                });\r\n\r\n\r\n                let headerTitle = ['Docente', 'Area', 'Puntaje'];\r\n                let headerVal = ['nombre_docente', 'nombre_area', 'puntaje'];\r\n\r\n                import('@/vendor/Export2Excel').then(excel => {\r\n                    const list = excel_areas\r\n                    const data = this.formatJson(headerVal, list)\r\n                    excel.export_json_to_excel({\r\n                        header: headerTitle,\r\n                        data,\r\n                        filename: this.fileName,\r\n                        autoWidth: this.cellAutoWidth,\r\n                        bookType: this.selectedFormat\r\n                    })\r\n                })\r\n            },\r\n            graficoTiposPreguntas(){\r\n                let me = this;\r\n\r\n                // me.$vs.loading()\r\n                // this.$http.get(this.$server_url+'salle_promedios_tipos_pregunta/.....')\r\n                // .then(res => {\r\n                //     // me.radar = res.data\r\n                //     me.$vs.loading.close()\r\n                // })\r\n                // .catch(function (error) {\r\n                //     console.log(error);\r\n                //     me.$vs.loading.close()\r\n                // })\r\n\r\n                me.radar = {\r\n                    tooltip: {},\r\n                    radar: {\r\n                        indicator: [\r\n                            {name: 'Seleccion simple', max: 20},\r\n                            {name: 'Seleccion multiple', max: 20},\r\n                            {name: 'Verdadero o falso', max: 20},\r\n                            {name: 'Cerrada', max: 20},\r\n                        ]\r\n                    },\r\n                    series: [{\r\n                    name: 'Promedio por tipos de pregunta',\r\n                    type: 'radar',\r\n                    data: [{value: [19,5,14,10]}]\r\n                    }]\r\n                }\r\n            },\r\n            exportToExcelAsignaturas() {\r\n                let me = this\r\n\r\n                let excel_asignaturas = []\r\n                $.each(me.data_docentes_asignaturas, function(key, value){\r\n                    $.each(value.asignaturas,function(keyA, valueA){\r\n                        excel_asignaturas.push({ nombre_docente: value.nombre_docente, nombre_asignatura: valueA.nombre_asignatura, puntaje: valueA.puntaje})\r\n                    });\r\n                });\r\n\r\n\r\n                let headerTitle = ['Docente', 'Asignatura', 'Puntaje'];\r\n                let headerVal = ['nombre_docente', 'nombre_asignatura', 'puntaje'];\r\n\r\n                import('@/vendor/Export2Excel').then(excel => {\r\n                    const list = excel_asignaturas\r\n                    const data = this.formatJson(headerVal, list)\r\n                    excel.export_json_to_excel({\r\n                        header: headerTitle,\r\n                        data,\r\n                        filename: this.fileName,\r\n                        autoWidth: this.cellAutoWidth,\r\n                        bookType: this.selectedFormat\r\n                    })\r\n                })\r\n            },\r\n            formatJson(filterVal, jsonData) {\r\n                return jsonData.map(v => filterVal.map(j => {\r\n                    return v[j]\r\n                }))\r\n            },\r\n        },\r\n    }\r\n",{"version":3,"sources":["Reporte_evaluaciones.vue"],"names":[],"mappings":";AAgfile":"Reporte_evaluaciones.vue","sourceRoot":"src/views/salle/administrador/evaluaciones","sourcesContent":["<template>\r\n<div>\r\n\r\n    <!----modal exportar--------->\r\n    <vs-prompt title=\"Exportar a Excel\" class=\"export-options\" @cancle=\"clearFields\" @accept=\"exportToExcel\" accept-text=\"Exportar\" :active.sync=\"activePromptExcel\">\r\n\r\n        <vs-input v-model=\"fileName\" placeholder=\"Ingrese el nombre del archivo\" class=\"w-full\" />\r\n        <v-select v-model=\"selectedFormat\" :options=\"formats\" class=\"my-4\" />\r\n        <div class=\"flex\">\r\n        </div>\r\n    </vs-prompt>\r\n    <!----fin modal exportar--------->\r\n\r\n    <!----modal exportar asignaturas--------->\r\n    <vs-prompt title=\"Exportar a Excel\" class=\"export-options\" @cancle=\"clearFields\" @accept=\"exportToExcelAsignaturas\" accept-text=\"Exportar\" :active.sync=\"activePromptExcelAsignaturas\">\r\n\r\n        <vs-input v-model=\"fileNameAs\" placeholder=\"Ingrese el nombre del archivo\" class=\"w-full\" />\r\n        <v-select v-model=\"selectedFormat\" :options=\"formats\" class=\"my-4\" />\r\n        <div class=\"flex\">\r\n        </div>\r\n    </vs-prompt>\r\n    <!----fin modal exportar--------->\r\n\r\n\r\n    <div class=\"w-full mb-3\">\r\n        <h5 style=\"display: inline-block;\">Filtros</h5>\r\n        <v-select style=\"display: inline-block; width: 20%; min-width: 120px;\" class=\"ml-3\" :options=\"['2021','2022','2023','2024','2025']\" v-model=\"anio_reporte\" :dir=\"$vs.rtl ? 'rtl' : 'ltr'\" />\r\n\r\n        <v-select style=\"display: inline-block; width: 70%; min-width: 300px;\" class=\"ml-3\" :options=\"instituciones\" :reduce=\"instituciones => instituciones\" label=\"institucion_ciudad\" v-model=\"institucion_selected\" @input=\"getPromedioAreas()\"></v-select>\r\n\r\n    </div>\r\n\r\n    <div class=\"vx-row\">\r\n      <div class=\"vx-col w-full mb-base\">\r\n          <vx-card title=\"Instituciones\" subtitle=\"Comparación de promedios con las demás instituciones\">\r\n              <!-- <e-charts autoresize :options=\"pie\" ref=\"pie\" auto-resize /> -->\r\n\r\n              <vue-apex-charts type=\"bar\" height=\"350\" :options=\"columnInstituciones.chartOptions\" :series=\"columnInstituciones.series\"></vue-apex-charts>\r\n          </vx-card>\r\n      </div>\r\n\r\n      <div class=\"vx-col sm:w-full mb-base\">\r\n            <vx-card title=\"Promedios por áreas\" subtitle=\"Comparación de promedios de todas las áreas de la institución seleccionada\">\r\n                <vue-apex-charts type=\"bar\" height=\"350\" :options=\"columnChart.chartOptions\" :series=\"columnChart.series\"></vue-apex-charts>\r\n                <br>\r\n            </vx-card>\r\n      </div>\r\n    </div>\r\n\r\n    <vx-card class=\"mb-base\" :title=\"'Área: ' + area_selected\" subtitle=\"Seleccione una área para visualizar sus información\">\r\n        <div class=\"chips_selects\" :style=\"'cursor: pointer; color: white; margin: 3px; padding: 3px 6px 3px 2px; border-radius: 20px; display: inline-block; background-color: '+colores[index]\" :key=\"index\" v-for=\"(chip, index) in key_areas\" @click=\"getPromedioAsignaturas(chip)\">\r\n            <div style=\"font-size: 12px; display: inline-block; background-color: #d5d5d5; border-radius: 100%; width: 27px; padding-top: 5px; padding-bottom: 5px; text-align: center; margin-right: 2px;\"> {{(chip.nombre_area).substr(0,2).toUpperCase()}} </div>\r\n            {{chip.nombre_area}}\r\n        </div>\r\n    </vx-card>\r\n\r\n    <vx-card title=\"Promedios por asignaturas\" subtitle=\"Comparación de asignaturas del área seleccionada\" class=\"mb-base\">\r\n        <vue-apex-charts type=\"bar\" height=\"350\" :options=\"barChart.chartOptions\" :series=\"barChart.series\"></vue-apex-charts>\r\n    </vx-card>\r\n\r\n\r\n    <vx-card class=\"mb-base\" :title=\"'Asignatura: ' + asignatura_selected\" subtitle=\"Seleccione una asignatura para visualizar sus información\">\r\n        <div class=\"chips_selects\" :style=\"'cursor: pointer; color: white; margin: 3px; padding: 3px 6px 3px 2px; border-radius: 20px; display: inline-block; background-color: '+colores[index]\" :key=\"index\" v-for=\"(chip, index) in key_asignaturas\" @click=\"getPromedioPreguntas(chip)\">\r\n            <div style=\"font-size: 12px; display: inline-block; background-color: #d5d5d5; border-radius: 100%; width: 27px; padding-top: 5px; padding-bottom: 5px; text-align: center; margin-right: 2px;\"> {{(chip.nombre_asignatura).substr(0,2).toUpperCase()}} </div>\r\n            {{chip.nombre_asignatura}}\r\n        </div>\r\n    </vx-card>\r\n\r\n\r\n    <div class=\"vx-row mb-6\">\r\n    <div style=\"min-width: 400px;\" class=\"vx-col sm:w-1/2 w-1/2 md:w-1/2 mb-3\">\r\n        <vx-card title=\"Top docentes\" subtitle=\"Docentes mejor puntuados en calificacion final\">\r\n            <div  style=\"overflow-y: scroll; overflow-x: hidden; height:450px;\" id=\"div_top_1\">\r\n            <vue-apex-charts type=\"bar\" height=\"3000\" :options=\"barChartTopDoc.chartOptions\" :series=\"barChartTopDoc.series\"></vue-apex-charts>\r\n            </div>\r\n        </vx-card>\r\n    </div>\r\n\r\n    <div style=\"min-width: 400px;\" class=\"vx-col sm:w-1/2 w-1/2 md:w-1/2 mb-3\">\r\n        <vx-card title=\"Top docentes áreas\" subtitle=\"Docentes mejor puntuados por area\">\r\n            <div  style=\"overflow-y: scroll; overflow-x: hidden; height:450px;\" id=\"div_top_area\">\r\n\r\n                <vs-button size=\"small\" style=\"padding: 7px; font-size: 12px; float: right; margin-right: 10px;\" icon-pack=\"feather\" icon=\"icon-download\" color=\"#0CBFBD\" @click=\"fileName='reporte_docentes_areas'; activePromptExcel=true\">Exportar</vs-button>\r\n                <br><br>\r\n\r\n                <div :key=\"index\" v-for=\"(evaluacion, index) in data_docentes_areas\" class=\"mb-base\">\r\n                    <b style=\"color: #0CBFBD;\">{{evaluacion.nombre_docente.toUpperCase()}} </b> <b>{{evaluacion.puntaje_evaluacion}}%</b> <br>\r\n                    <div :key=\"indexA\" v-for=\"(area, indexA) in evaluacion.areas\">\r\n                        <div style=\"width: 60%; display: inline-block;\"><b>Área: </b> <span style=\"color: #3477E7;\"> {{area.nombre_area}} </span></div>\r\n                        <div style=\"width: 40%; display: inline-block;\"><b>Puntaje: </b> <span style=\"color: #8B34E7;\"> {{area.puntaje}}% </span> </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </vx-card>\r\n    </div>\r\n    </div>\r\n\r\n\r\n    <div class=\"vx-row mb-6\">\r\n    <div style=\"min-width: 400px;\" class=\"vx-col sm:w-1/2 w-1/2 md:w-1/2 mb-3\">\r\n        <vx-card title=\"Top docentes asignaturas\" subtitle=\"Docentes mejor puntuados por asignatura del área seleccionada\">\r\n            <div  style=\"overflow-y: scroll; overflow-x: hidden; height:450px;\" id=\"div_top_asignatura\">\r\n                <vs-button size=\"small\" style=\"padding: 7px; font-size: 12px; float: right; margin-right: 10px;\" icon-pack=\"feather\" icon=\"icon-download\" color=\"#0CBFBD\" @click=\"fileNameAs='reporte_docentes_asignaturas'; activePromptExcelAsignaturas=true\">Exportar</vs-button>\r\n                <br><br>\r\n                <div :key=\"index\" v-for=\"(evaluacion, index) in data_docentes_asignaturas\" class=\"mb-base\">\r\n                    <b style=\"color: #E75AE3;\">{{evaluacion.nombre_docente.toUpperCase()}} </b> <b>{{evaluacion.puntaje_evaluacion}}%</b> <br>\r\n                    <div :key=\"indexA\" v-for=\"(area, indexA) in evaluacion.asignaturas\">\r\n                        <div style=\"width: 60%; display: inline-block;\"><b>Asignatura: </b> <span style=\"color: #AC5AE7;\"> {{area.nombre_asignatura}} </span></div>\r\n                        <div style=\"width: 40%; display: inline-block;\"><b>Puntaje: </b> <span style=\"color: #3B76F7;\"> {{area.puntaje}}% </span></div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </vx-card>\r\n    </div>\r\n    <div class=\"vx-col sm:w-1/2 w-1/2 md:w-1/2 mb-3\" style=\"min-width: 400px; height:450px;\">\r\n        <!-- <vx-card title=\"Promedios por tipo de pregunta\" subtitle=\"Comparación por tipos de pregunta de la asignatura seleccionada\">\r\n            <e-charts autoresize :options=\"radar\" ref=\"radar\" auto-resize />\r\n        </vx-card> -->\r\n    </div>\r\n    </div>\r\n\r\n\r\n    <!-- &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n    <h5>Docentes</h5>\r\n    <div class=\"w-full mb-6 img-responsive\">\r\n        <vs-chip transparent color=\"success\"> <vs-avatar text=\"EL\"/> Juan Perez </vs-chip>\r\n        <vs-chip transparent color=\"primary\"> <vs-avatar text=\"BA\"/> Pedro Lopez </vs-chip>\r\n        <vs-chip transparent color=\"warning\"> <vs-avatar text=\"BG\"/> Jorge Reyes </vs-chip>\r\n        <vs-chip transparent color=\"danger\"> <vs-avatar text=\"BG\"/> Alejandro Llano </vs-chip>\r\n        <vs-chip transparent color=\"primary\"> <vs-avatar text=\"BG\"/> Fernando Casame</vs-chip>\r\n        <br>\r\n    </div> -->\r\n\r\n\r\n    <!-- <vx-card title=\"Orden de respuesta\" subtitle=\"Indica el orden en la que la evaluacion del docente seleccionado fue resuelta\" class=\"mb-base\">\r\n        <vue-apex-charts type=\"area\" height=\"350\" :options=\"lineAreaChartSpline.chartOptions\" :series=\"lineAreaChartSpline.series\"></vue-apex-charts>\r\n    </vx-card> -->\r\n\r\n</div>\r\n</template>\r\n\r\n<script>\r\n    import flatPickr from 'vue-flatpickr-component';\r\n    import 'flatpickr/dist/flatpickr.css';\r\n    import vSelect from 'vue-select'\r\n\r\n    import ECharts from 'vue-echarts/components/ECharts'\r\n    import 'echarts/lib/component/tooltip'\r\n    import 'echarts/lib/component/legend'\r\n    import 'echarts/lib/chart/bar'\r\n    import 'echarts/lib/chart/radar'\r\n    import 'echarts/lib/chart/pie'\r\n    import theme from './theme.json'\r\n\r\n    import VueApexCharts from 'vue-apexcharts'\r\n\r\n    import graficoAreas from './Reporte_barras.vue'\r\n\r\n    ECharts.registerTheme('ovilia-green', theme)\r\n\r\n    export default {\r\n        data(){\r\n            return {\r\n                colores: ['#FF9F43','#28C76F','#EA5455','#87ceeb','#7367F0','#28C76F','#EA5455','#87ceeb','#7367F0','#28C76F','#EA5455','#87ceeb','#7367F0','#28C76F','#EA5455','#87ceeb','#7367F0', '#FF9F43','#28C76F','#EA5455','#87ceeb','#7367F0','#28C76F'],\r\n                data_areas: [],\r\n                institucion_selected: [],\r\n                instituciones: [],\r\n                usuario: [],\r\n                anio_reporte: '2021',\r\n                promedio_instituciones: [],\r\n                instituciones_pie: [],\r\n                key_areas: [],\r\n                key_asignaturas: [],\r\n                area_selected: '',\r\n                asignatura_selected: '',\r\n                data_docentes_areas: [],\r\n                data_docentes_asignaturas: [],\r\n                activePromptExcel: false,\r\n                fileName: null,\r\n                formats: ['xls', 'xlsx', 'csv', 'txt'],\r\n                selectedFormat: 'xls',\r\n                fileNameAs: '',\r\n                activePromptExcelAsignaturas: false,\r\n                pie:{\r\n                    tooltip: { trigger: 'item', formatter: '{a} <br/>{b} : {c} ({d}%)' },\r\n                    legend: { orient: 'vertical', left: 'left', data: [], },\r\n                    series: [\r\n                    { name: 'Promedio', type: 'pie', radius: '55%', center: ['50%', '60%'], color: ['#FF9F43','#28C76F','#15BCE3','#83E315','#FE4D11','#1194FE','#9E11FE','#FE11DD', '#F24365'], data: [], itemStyle: { emphasis: { shadowBlur: 10, shadowOffsetX: 0, shadowColor: 'rgba(0, 0, 0, 0.5)' } } }\r\n                    ]\r\n                },\r\n\r\n                columnInstituciones: {},\r\n                columnChart: {},\r\n\r\n                bar: {\r\n                    legend: {},\r\n                    tooltip: {},\r\n                    dataset: {\r\n                    // Provide data.\r\n                    source: [\r\n                        ['Product', '2015', '2016', '2017'],\r\n                        ['Matcha Latte', ...this.randomize()],\r\n                        ['Milk Tea', ...this.randomize()],\r\n                        ['Cheese Cocoa', ...this.randomize()],\r\n                        ['Walnut Brownie', ...this.randomize()]\r\n                    ]\r\n                    },\r\n                    // Declare X axis, which is a category axis, mapping\r\n                    // to the first column by default.\r\n                    xAxis: { type: 'category' },\r\n                    // Declare Y axis, which is a value axis.\r\n                    yAxis: {},\r\n                    // Declare several series, each of them mapped to a\r\n                    // column of the dataset by default.\r\n                    series: [{ type: 'bar' }, { type: 'bar' }, { type: 'bar' }]\r\n\r\n                },\r\n\r\n                radar:{},\r\n\r\n                barChart: {},\r\n                barChartTopDoc: {},\r\n\r\n                lineAreaChartSpline: {\r\n                    series: [{\r\n                        name: 'Pregunta',\r\n                        data: [1, 2, 3, 4, 5, 6, 7]\r\n                    }],\r\n                    chartOptions: {\r\n                    dataLabels: {\r\n                        enabled: false\r\n                    },\r\n                    stroke: {\r\n                        curve: 'smooth'\r\n                    },\r\n                    colors: ['#7367F0', '#28C76F', '#EA5455', '#FF9F43', '#1E1E1E'],\r\n                    xaxis: {\r\n                        type: 'datetime',\r\n                        categories: [\r\n                            \"2018-09-19T00:00:00\",\r\n                            \"2018-09-19T06:30:00\",\r\n                            \"2018-09-19T04:30:00\",\r\n                            \"2018-09-19T02:30:00\",\r\n                            \"2018-09-19T03:30:00\",\r\n                            \"2018-09-19T01:30:00\",\r\n                            \"2018-09-19T05:30:00\"\r\n                        ],\r\n                    },\r\n                    tooltip: {\r\n                        x: {\r\n                        format: 'dd/MM/yy HH:mm'\r\n                        },\r\n\r\n                    }\r\n                    }\r\n                }\r\n\r\n            }\r\n        },\r\n        components: {\r\n            'v-select': vSelect,\r\n            flatPickr,\r\n            ECharts,\r\n            VueApexCharts,\r\n            graficoAreas\r\n        },\r\n        mounted () {\r\n            this.getInstituciones()\r\n            this.getReporteInstituciones()\r\n        },\r\n        created(){\r\n            this.anio_reporte = '2021'\r\n        },\r\n        methods: {\r\n            randomize() {\r\n                return [0, 0, 0].map(v => {\r\n                    return Math.round(300 + Math.random() * 700) / 10\r\n                })\r\n            },\r\n            getInstituciones(){\r\n                let me = this\r\n                me.$vs.loading()\r\n                this.$http.get(this.$server_url+'instituciones_salle_select')\r\n                .then(res => {\r\n                    me.instituciones = res.data\r\n                    me.$vs.loading.close()\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                    me.$vs.loading.close()\r\n                })\r\n            },\r\n            getReporteInstituciones(){\r\n                let me = this\r\n                me.$vs.loading()\r\n                this.$http.get(this.$server_url+'reporte_evaluaciones_institucion/1')\r\n                .then(res => {\r\n                    me.promedio_instituciones = res.data.items\r\n                    let promedios = []\r\n                    let instituciones = []\r\n                    $.each(me.promedio_instituciones,function(key, value){\r\n                        promedios.push(value.puntaje)\r\n                        instituciones.push(value.nombreInstitucion)\r\n\r\n                        me.pie.series[0].data.push({\r\n                            value: value.puntaje,\r\n                            name: value.nombreInstitucion\r\n                        })\r\n                    });\r\n\r\n                    me.columnInstituciones = {\r\n                        series: [{\r\n                            name: 'Promedio',\r\n                            data: promedios\r\n                        }],\r\n                        chartOptions: {\r\n                            colors: ['#28C76F'],\r\n                            plotOptions: { bar: { horizontal: false, endingShape: 'rounded', columnWidth: '55%', }, },\r\n                            dataLabels: { enabled: false },\r\n                            stroke: { show: true, width: 2, colors: ['transparent'] },\r\n                            xaxis: { categories: instituciones },\r\n                            yaxis: { title: { text: '(Promedio)' } },\r\n                            fill: { opacity: 1 },\r\n                        tooltip: { y: { formatter: function(val) { return val + \"%\" } } }\r\n                        }\r\n                    }\r\n\r\n                    me.$vs.loading.close()\r\n                })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close()\r\n                    console.log(error);\r\n                })\r\n            },\r\n            getPromedioAreas(){\r\n                let me = this\r\n                me.$vs.loading()\r\n                this.$http.get(this.$server_url+'salle_promedio_areas/'+me.anio_reporte+'/'+me.institucion_selected.idInstitucion)\r\n                .then(res => {\r\n                    me.data_docentes_areas = res.data.items\r\n\r\n                    me.data_docentes_areas.sort((a, b) => {\r\n                        return b.puntaje_evaluacion - a.puntaje_evaluacion;\r\n                    });\r\n\r\n                    me.graficoTopDocAreas()\r\n\r\n                    let areas = []\r\n                    $.each(res.data.items,function(key, value){\r\n                        $.each(value.areas,function(keyA, valueA){\r\n                            areas.push({ nombre_area: valueA.nombre_area, puntaje: valueA.puntaje, id_area: valueA.id_area })\r\n                        });\r\n                    });\r\n\r\n                    let areas_agrupadas = []\r\n                    areas_agrupadas = me.groupArrayOfObjects(areas, \"nombre_area\")\r\n                    me.key_areas = []\r\n                    let key_areas_1 = []\r\n                    $.each(areas_agrupadas,function(key, value){\r\n                        key_areas_1.push(key)\r\n                        me.key_areas.push(value[0])\r\n                    });\r\n\r\n                    let puntajes_areas = []\r\n                    let nombre_areas = []\r\n\r\n                    for( let i=0; i<key_areas_1.length; i++){\r\n                        let acum_puntaje = 0\r\n\r\n                        $.each(areas_agrupadas[key_areas_1[i]],function(key, value){\r\n                            acum_puntaje += value.puntaje\r\n                        });\r\n\r\n                        let porcentaje_area = ((acum_puntaje * 100) / ((areas_agrupadas[key_areas_1[i]].length) * 100) ).toFixed(2)\r\n\r\n                        puntajes_areas.push(porcentaje_area)\r\n                        nombre_areas.push(key_areas_1[i])\r\n                    }\r\n\r\n                    me.columnChart = {\r\n                        series: [{\r\n                            name: 'Promedio',\r\n                            data: puntajes_areas\r\n                        }],\r\n                        chartOptions: {\r\n                            colors: ['#FF9F43','#28C76F','#EA5455','#87ceeb','#7367F0','#28C76F','#EA5455','#87ceeb','#7367F0','#28C76F','#EA5455','#87ceeb','#7367F0','#28C76F','#EA5455','#87ceeb','#7367F0'],\r\n                            plotOptions: { bar: { horizontal: false, endingShape: 'rounded', columnWidth: '55%', }, },\r\n                            dataLabels: { enabled: false },\r\n                            stroke: { show: true, width: 2, colors: ['transparent'] },\r\n                            xaxis: { categories: nombre_areas },\r\n                            yaxis: { title: { text: '(Promedio)' } },\r\n                            fill: { opacity: 1 },\r\n                        tooltip: { y: { formatter: function(val) { return val + \"%\" } } }\r\n                        }\r\n                    }\r\n                    me.$vs.loading.close()\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                    me.$vs.loading.close()\r\n                })\r\n            },\r\n            groupArrayOfObjects(list, key) {\r\n                return list.reduce(function(rv, x) {\r\n                    (rv[x[key]] = rv[x[key]] || []).push(x);\r\n                    return rv;\r\n                }, {});\r\n            },\r\n            getPromedioAsignaturas(area){\r\n                let me = this\r\n                me.area_selected = area.nombre_area\r\n                me.$vs.loading()\r\n                this.$http.get(this.$server_url+'salle_promedio_asignatura/'+me.anio_reporte+'/'+me.institucion_selected.idInstitucion+'/'+area.id_area)\r\n                .then(res => {\r\n                    me.data_docentes_asignaturas = res.data.items\r\n                    me.data_docentes_asignaturas.sort((a, b) => {\r\n                        return b.puntaje_evaluacion - a.puntaje_evaluacion;\r\n                    });\r\n\r\n                    let asignaturas = []\r\n                    $.each(res.data.items,function(key, value){\r\n                        $.each(value.asignaturas,function(keyA, valueA){\r\n                            asignaturas.push({nombre_asignatura: valueA.nombre_asignatura, puntaje: valueA.puntaje })\r\n                        });\r\n                    });\r\n\r\n                    let asignaturas_agrupadas = []\r\n                    asignaturas_agrupadas = me.groupArrayOfObjects(asignaturas, \"nombre_asignatura\")\r\n                    me.key_asignaturas = []\r\n                    let key_asignaturas_1 = []\r\n\r\n\r\n                    $.each(asignaturas_agrupadas,function(key, value){\r\n                        key_asignaturas_1.push(key)\r\n                        me.key_asignaturas.push(value[0])\r\n                    });\r\n\r\n                    var puntajes_asignaturas = []\r\n                    var nombre_asignaturas = []\r\n                    for( let i=0; i<key_asignaturas_1.length; i++){\r\n                        let acum_puntaje = 0\r\n\r\n                        $.each(asignaturas_agrupadas[key_asignaturas_1[i]],function(key, value){\r\n                            acum_puntaje += value.puntaje\r\n                        });\r\n\r\n                        let porcentaje_asignatura = ((acum_puntaje) / ((asignaturas_agrupadas[key_asignaturas_1[i]].length)) ).toFixed(2)\r\n\r\n                        puntajes_asignaturas.push(porcentaje_asignatura)\r\n                        nombre_asignaturas.push(key_asignaturas_1[i])\r\n                    }\r\n                    me.barChart = {}\r\n                    me.barChart = {\r\n                        series: [{\r\n                            data: puntajes_asignaturas\r\n                        }],\r\n                        chartOptions: {\r\n                            colors: ['#7367F0', '#28C76F', '#EA5455', '#FF9F43', '#1E1E1E','#7367F0', '#28C76F', '#EA5455', '#FF9F43', '#1E1E1E','#7367F0', '#28C76F', '#EA5455', '#FF9F43', '#1E1E1E'],\r\n                            plotOptions: { bar: { horizontal: true, } },\r\n                            dataLabels: { enabled: true },\r\n                            xaxis: { categories: nombre_asignaturas, }\r\n                        }\r\n                    }\r\n\r\n                    me.$vs.loading.close()\r\n                })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close()\r\n                    console.log(error);\r\n                })\r\n\r\n            },\r\n            getPromedioPreguntas(asignatura){\r\n                let me = this\r\n                me.asignatura_selected = asignatura.nombre_asignatura\r\n            },\r\n            graficoTopDocAreas(){\r\n                let me = this\r\n\r\n                let puntaje_evaluaciones = []\r\n                let nombre_docentes = []\r\n\r\n                $.each(me.data_docentes_areas,function(key, value){\r\n                    puntaje_evaluaciones.push(value.puntaje_evaluacion)\r\n                    nombre_docentes.push(value.nombre_docente)\r\n                });\r\n\r\n                me.barChartTopDoc = {}\r\n                me.barChartTopDoc = {\r\n                    series: [{\r\n                        data: puntaje_evaluaciones\r\n                    }],\r\n                    chartOptions: {\r\n                        colors: ['#7367F0', '#28C76F', '#EA5455', '#FF9F43', '#1E1E1E','#7367F0', '#28C76F', '#EA5455', '#FF9F43', '#1E1E1E','#7367F0', '#28C76F', '#EA5455', '#FF9F43', '#1E1E1E'],\r\n                        plotOptions: { bar: { horizontal: true, } },\r\n                        dataLabels: { enabled: true },\r\n                        xaxis: { categories: nombre_docentes, }\r\n                    }\r\n                }\r\n\r\n\r\n            },\r\n            exportToExcel() {\r\n                let me = this\r\n\r\n                let excel_areas = []\r\n                $.each(me.data_docentes_areas,function(key, value){\r\n                    $.each(value.areas,function(keyA, valueA){\r\n                        excel_areas.push({ nombre_docente: value.nombre_docente, nombre_area: valueA.nombre_area, puntaje: valueA.puntaje})\r\n                    });\r\n                });\r\n\r\n\r\n                let headerTitle = ['Docente', 'Area', 'Puntaje'];\r\n                let headerVal = ['nombre_docente', 'nombre_area', 'puntaje'];\r\n\r\n                import('@/vendor/Export2Excel').then(excel => {\r\n                    const list = excel_areas\r\n                    const data = this.formatJson(headerVal, list)\r\n                    excel.export_json_to_excel({\r\n                        header: headerTitle,\r\n                        data,\r\n                        filename: this.fileName,\r\n                        autoWidth: this.cellAutoWidth,\r\n                        bookType: this.selectedFormat\r\n                    })\r\n                })\r\n            },\r\n            graficoTiposPreguntas(){\r\n                let me = this;\r\n\r\n                // me.$vs.loading()\r\n                // this.$http.get(this.$server_url+'salle_promedios_tipos_pregunta/.....')\r\n                // .then(res => {\r\n                //     // me.radar = res.data\r\n                //     me.$vs.loading.close()\r\n                // })\r\n                // .catch(function (error) {\r\n                //     console.log(error);\r\n                //     me.$vs.loading.close()\r\n                // })\r\n\r\n                me.radar = {\r\n                    tooltip: {},\r\n                    radar: {\r\n                        indicator: [\r\n                            {name: 'Seleccion simple', max: 20},\r\n                            {name: 'Seleccion multiple', max: 20},\r\n                            {name: 'Verdadero o falso', max: 20},\r\n                            {name: 'Cerrada', max: 20},\r\n                        ]\r\n                    },\r\n                    series: [{\r\n                    name: 'Promedio por tipos de pregunta',\r\n                    type: 'radar',\r\n                    data: [{value: [19,5,14,10]}]\r\n                    }]\r\n                }\r\n            },\r\n            exportToExcelAsignaturas() {\r\n                let me = this\r\n\r\n                let excel_asignaturas = []\r\n                $.each(me.data_docentes_asignaturas, function(key, value){\r\n                    $.each(value.asignaturas,function(keyA, valueA){\r\n                        excel_asignaturas.push({ nombre_docente: value.nombre_docente, nombre_asignatura: valueA.nombre_asignatura, puntaje: valueA.puntaje})\r\n                    });\r\n                });\r\n\r\n\r\n                let headerTitle = ['Docente', 'Asignatura', 'Puntaje'];\r\n                let headerVal = ['nombre_docente', 'nombre_asignatura', 'puntaje'];\r\n\r\n                import('@/vendor/Export2Excel').then(excel => {\r\n                    const list = excel_asignaturas\r\n                    const data = this.formatJson(headerVal, list)\r\n                    excel.export_json_to_excel({\r\n                        header: headerTitle,\r\n                        data,\r\n                        filename: this.fileName,\r\n                        autoWidth: this.cellAutoWidth,\r\n                        bookType: this.selectedFormat\r\n                    })\r\n                })\r\n            },\r\n            formatJson(filterVal, jsonData) {\r\n                return jsonData.map(v => filterVal.map(j => {\r\n                    return v[j]\r\n                }))\r\n            },\r\n        },\r\n    }\r\n</script>\r\n\r\n<style>\r\n.chips_selects:hover{\r\n    background-color: black !important;\r\n}\r\n#div_top_1::-webkit-scrollbar {\r\n  width: 10px;\r\n}\r\n\r\n/* Track */\r\n#div_top_1::-webkit-scrollbar-track {\r\n  box-shadow: inset 0 0 5px rgb(211, 207, 241);\r\n  border-radius: 10px;\r\n}\r\n\r\n/* Handle */\r\n#div_top_1::-webkit-scrollbar-thumb {\r\n  background: #ff2aa6;\r\n  border-radius: 10px;\r\n}\r\n\r\n/* Handle on hover */\r\n#div_top_1::-webkit-scrollbar-thumb:hover {\r\n  background: #ff2da8;\r\n}\r\n#div_top_area::-webkit-scrollbar {\r\n  width: 10px;\r\n}\r\n\r\n/* Track */\r\n#div_top_area::-webkit-scrollbar-track {\r\n  box-shadow: inset 0 0 5px rgb(211, 207, 241);\r\n  border-radius: 10px;\r\n}\r\n\r\n/* Handle */\r\n#div_top_area::-webkit-scrollbar-thumb {\r\n  background: #2ee982;\r\n  border-radius: 10px;\r\n}\r\n\r\n/* Handle on hover */\r\n#div_top_area::-webkit-scrollbar-thumb:hover {\r\n  background: #2ee982;\r\n}\r\n\r\n#div_top_asignatura::-webkit-scrollbar {\r\n  width: 10px;\r\n}\r\n/* Track */\r\n#div_top_asignatura::-webkit-scrollbar-track {\r\n  box-shadow: inset 0 0 5px rgb(211, 207, 241);\r\n  border-radius: 10px;\r\n}\r\n\r\n/* Handle */\r\n#div_top_asignatura::-webkit-scrollbar-thumb {\r\n  background: #773BF7;\r\n  border-radius: 10px;\r\n}\r\n\r\n/* Handle on hover */\r\n#div_top_asignatura::-webkit-scrollbar-thumb:hover {\r\n  background: #773BF7;\r\n}\r\n</style>\r\n"]}]}