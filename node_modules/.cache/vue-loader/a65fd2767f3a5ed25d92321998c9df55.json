{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\pages\\RegistroEstudiante.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\pages\\RegistroEstudiante.vue","mtime":1712682816215},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\n    import {FormWizard, TabContent} from 'vue-form-wizard'\r\n    import 'vue-form-wizard/dist/vue-form-wizard.min.css'\r\n    import Vue from 'vue'\r\n    import axios from 'axios'\r\n    import \"vue-select/dist/vue-select.css\";\r\n    import vSelect from \"vue-select\";\r\n    Vue.use(axios)\r\n    Vue.component(\"v-select\", vSelect);\r\n    import $ from 'jquery'\r\n    export default {\r\n    data() {\r\n        return {\r\n            mostrar:false,\r\n            p_otro:'paralelo',\r\n            documento:\"\",\r\n            cedulaVerificar:\"\",\r\n            firstName: \"\",\r\n            email: \"\",\r\n            // password: \"\",\r\n            checkbox_remember_me: false,\r\n            errors: {\r\n                cedula: '',\r\n                nombres: '',\r\n                apellidos: '',\r\n                email: '',\r\n                // password: '',\r\n                paralelo: '',\r\n                grado: '',\r\n            },\r\n            ciudad: [],\r\n            institucion: [],\r\n            instituciones: [],\r\n            idregion: '',\r\n            idciudad: '',\r\n            estudiante: {\r\n                cedula: '',\r\n                nombres: '',\r\n                apellidos: '',\r\n                email: '',\r\n                idinstitucion: '',\r\n                // password: '',\r\n                paralelo: '',\r\n                grado: '',\r\n            },\r\n            linkEvaluacion: '',\r\n            vectorLink: '',\r\n            registroEvaluacion: false,\r\n            numero:'',\r\n            validacionCedula:false,\r\n            paralelos:[],\r\n            cursos:[],\r\n        }\r\n    },\r\n\r\n    mounted() {\r\n            this.linkEvaluacion = localStorage.getItem('evaluacionxLink')\r\n\r\n            if (this.linkEvaluacion != '' && this.linkEvaluacion != null) {\r\n                this.registroEvaluacion = true\r\n                this.vectorLink = (this.linkEvaluacion).split('-')\r\n            }\r\n            this.infoRegistro()\r\n            this.getCiudadSelect();\r\n            this.getInstitucion();\r\n            if (localStorage.tk != null) {\r\n                this.$router.push('/home');\r\n            } else {}\r\n        },\r\n        methods: {\r\n            cambiarParalelo(estado){\r\n                if(estado == 1){\r\n                    $('#paralelo').css('display', 'block');\r\n                }else{\r\n                    $('#paralelo').css('display', 'none').css('margin-top','20px');\r\n                }\r\n            },\r\n            //para obtener el listado de las areas\r\n            infoRegistro() {\r\n                let me = this;\r\n                this.$http.get(this.$server_url+'infoRegistro')\r\n                    .then(function (res) {\r\n                        me.paralelos = res.data.paralelos\r\n                        me.cursos = res.data.cursos  \r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(error + ' error');\r\n                    })\r\n            },\r\n\r\n            formSubmitted() {\r\n                alert(\"Form submitted!\");\r\n            },\r\n\r\n            guardar(item) {\r\n                \r\n                let me = this\r\n                if(me.p_otro == 'paralelo'){\r\n                    if(item.paralelo.paralelo_id == undefined || item.paralelo.paralelo_id == null || item.paralelo.paralelo_id == \"\"){\r\n                        me.$vs.notify({\r\n                                text: \"Paralelo es obligatorio\" ,\r\n                                color: 'warning',\r\n                                iconPack: 'feather',\r\n                                icon: 'icon-check',\r\n                                time:4000\r\n                            }) \r\n                        return false;        \r\n                    }\r\n\r\n                }\r\n\r\n                    \r\n                if(item.grado.orden == undefined || item.grado.orden == null || item.grado.orden == \"\" ){\r\n                    me.$vs.notify({\r\n                            text: \"Paralelo es obligatorio\" ,\r\n                            color: 'warning',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-check',\r\n                            time:4000\r\n                        })     \r\n                    return false;   \r\n                }\r\n                \r\n                if(me.validacionCedula){\r\n                        me.cedulaVerificar = \"\";\r\n                        let formData = new FormData();\r\n                        me.errors = {\r\n                            cedula: '',\r\n                            nombres: '',\r\n                            apellidos: '',\r\n                            email: '',\r\n                            idinstitucion: '',\r\n                            // password: '',\r\n                            paralelo: '',\r\n                            grado: '',\r\n                        }\r\n\r\n                        let institucionID = item.idinstitucion;\r\n                        let paraveloEval = item.paralelo.paralelo_id;\r\n                        let gradoEval = item.grado.orden;\r\n                        if (me.registroEvaluacion === true) {\r\n                            institucionID = me.vectorLink[2]\r\n                            paraveloEval = '-'\r\n                            gradoEval = '-'\r\n                        }\r\n                        formData.append('cedula', item.cedula)\r\n                        formData.append('nombres', item.nombres)\r\n                        formData.append('apellidos', item.apellidos)\r\n                        formData.append('email', item.email)\r\n                        formData.append('name_usuario', item.email)\r\n                        formData.append('institucion', institucionID)\r\n                        // formData.append('password', item.password)\r\n                        if(me.p_otro == 'paralelo'){\r\n                            formData.append('paralelo',  item.paralelo.paralelo_id)     \r\n                        }else{\r\n                        formData.append('paralelo',  \"otro\")\r\n                        }\r\n                \r\n                        formData.append('grado',  item.grado.orden)\r\n                        me.$vs.loading();\r\n                        this.$http.post(this.$server_url+\"register\", formData)\r\n                            .then(function (response) {\r\n                                me.$vs.loading.close()\r\n                                // localStorage.tk = response.data.token\r\n                                // localStorage.setItem('usuario', JSON.stringify(response.data.datos));\r\n                                me.$vs.notify({\r\n                                    text: 'Usuario guardado, Ahora ya puede iniciar sesi√≥n',\r\n                                    color: 'success',\r\n                                    iconPack: 'feather',\r\n                                    icon: 'icon-user',\r\n                                    time:8000,\r\n                                })\r\n                                me.$emit('nuevoUser',true)\r\n                                // me.$router.push('/');\r\n                            })\r\n                            .catch(function (error) {\r\n                                me.$vs.loading.close()\r\n                                if (error.response.status == 422) {\r\n                                    try {\r\n                                        me.$vs.notify({\r\n                                                text: error.response.data.errors.cedula[0] ,\r\n                                                color: 'warning',\r\n                                                iconPack: 'feather',\r\n                                                icon: 'icon-check',\r\n                                                time:8000\r\n                                        })     \r\n                                        // me.errors.cedula = error.response.data.errors.cedula[0]\r\n                                    } catch (error) {\r\n\r\n                                    }\r\n                                    try {\r\n                                        me.$vs.notify({\r\n                                                text: error.response.data.errors.nombres[0] ,\r\n                                                color: 'warning',\r\n                                                iconPack: 'feather',\r\n                                                icon: 'icon-check',\r\n                                                time:8000\r\n                                        })  \r\n                                        // me.errors.nombres = error.response.data.errors.nombres[0]\r\n                                    } catch (error) {\r\n\r\n                                    }\r\n                                    try {\r\n                                        me.$vs.notify({\r\n                                                text: error.response.data.errors.apellidos[0] ,\r\n                                                color: 'warning',\r\n                                                iconPack: 'feather',\r\n                                                icon: 'icon-check',\r\n                                                time:8000\r\n                                        })  \r\n                                        // me.errors.apellidos = error.response.data.errors.apellidos[0]\r\n                                    } catch (error) {\r\n\r\n                                    }\r\n                                    try {\r\n                                        me.$vs.notify({\r\n                                                text: error.response.data.errors.email[0] ,\r\n                                                color: 'warning',\r\n                                                iconPack: 'feather',\r\n                                                icon: 'icon-check',\r\n                                                time:8000\r\n                                        })  \r\n                                        // me.errors.email = error.response.data.errors.email[0]\r\n                                    } catch (error) {\r\n\r\n                                    }\r\n                                    try {\r\n                                        me.$vs.notify({\r\n                                                text: error.response.data.errors.institucion[0] ,\r\n                                                color: 'warning',\r\n                                                iconPack: 'feather',\r\n                                                icon: 'icon-check',\r\n                                                time:8000\r\n                                        })  \r\n                                        // me.errors.institucion = error.response.data.errors.institucion[0]\r\n                                    } catch (error) {\r\n\r\n                                    }\r\n                                    try {\r\n                                        me.$vs.notify({\r\n                                                text: error.response.data.errors.paralelo[0] ,\r\n                                                color: 'warning',\r\n                                                iconPack: 'feather',\r\n                                                icon: 'icon-check',\r\n                                                time:8000\r\n                                        })  \r\n                                        // me.errors.paralelo = error.response.data.errors.paralelo[0]\r\n                                    } catch (error) {\r\n\r\n                                    }\r\n                                    // try {\r\n                                    //     me.errors.password = error.response.data.errors.password[0]\r\n                                    // } catch (error) {\r\n\r\n                                // }\r\n                                    try {\r\n                                        me.$vs.notify({\r\n                                                text: error.response.data.errors.grado[0] ,\r\n                                                color: 'warning',\r\n                                                iconPack: 'feather',\r\n                                                icon: 'icon-check',\r\n                                                time:8000\r\n                                        })  \r\n                                        // me.errors.grado = error.response.data.errors.grado[0]\r\n                                    } catch (error) {\r\n\r\n                                    }\r\n                                }\r\n                            })\r\n                }else{\r\n                    \r\n                    me.$vs.notify({\r\n                            text: 'La cedula es incorrecta',\r\n                            color: 'warning',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-check',\r\n                            time:4000\r\n                    })  \r\n                    me.cedulaVerificar = \"Cedula Invalida\";\r\n                \r\n                    return false;\r\n                }\r\n            \r\n            },\r\n            getInstitucion() {\r\n                let me = this;\r\n                this.$http.get(this.$server_url+'selectInstitucion?idregion=' + me.idregion + '&idciudad=' + me.idciudad)\r\n                    .then(function (response) {\r\n                        me.instituciones = response.data;\r\n                    })\r\n                    .catch(function (error) {})\r\n            },\r\n            async getCiudadSelect() {\r\n                let me = this;\r\n                this.$http.get(this.$server_url+\"ciudad\").then(function (response) {\r\n                    me.ciudad = response.data\r\n                });\r\n            },\r\n\r\n            //VALIDACION CEDULA\r\n\r\n            validarDocumento () {          \r\n                let me = this;\r\n                me.numero = me.estudiante.cedula;\r\n            \r\n            \r\n\r\n                var suma = 0;      \r\n                var residuo = 0;      \r\n                var pri = false;      \r\n                var pub = false;            \r\n                var nat = false;      \r\n                var numeroProvincias = 22;                  \r\n                var modulo = 11;\r\n                var d1 = null;\r\n                var d2 = null;\r\n                var d3 = null;\r\n                var d4 = null;\r\n                var d5 = null;\r\n                var d6 = null;\r\n                var d7 = null;\r\n                var d8 = null;\r\n                var d9 = null;\r\n                var d10 = null;  \r\n                \r\n                var    p1 = null;\r\n                var    p2 = null;\r\n                var    p3 = null;\r\n                var    p4 = null;\r\n                var    p5 = null;\r\n                var    p6 = null;\r\n                var    p7 = null;\r\n                var    p8 = null;\r\n                var    p9 = null;   \r\n                var digitoVerificador  = null;\r\n                var suma    = null;\r\n                var residuo = null;\r\n                var modulo  = null;\r\n                var pub     = null;\r\n                var pri     = null;\r\n                var nat     = null;\r\n                            \r\n                /* Verifico que el campo no contenga letras */                  \r\n                var ok=1;\r\n                let i =0;\r\n                for (i=0; i<me.numero.length && ok==1 ; i++){\r\n                    var n = parseInt(this.numero.charAt(i));\r\n                    if (isNaN(n)) ok=0;\r\n                }\r\n                if (ok==0){\r\n                \r\n                    me.$vs.notify({\r\n                            text: 'No puede ingresar caracteres a la cedula',\r\n                            color: 'warning',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-check',\r\n                            time:8000\r\n                    })     \r\n                    me.validacionCedula = false; \r\n                    return false;\r\n                }\r\n                            \r\n                if (me.numero.length < 10 ){         \r\n                    me.$vs.notify({\r\n                            text: 'La cedula ingresada no es v√°lida',\r\n                            color: 'warning',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-check',\r\n                            time:8000\r\n                    })       \r\n                    me.validacionCedula = false;             \r\n                    return false;\r\n                }\r\n\r\n                me.cedulaVerificar = \"\";\r\n                \r\n                let provincia = null;\r\n                /* Los primeros dos digitos corresponden al codigo de la provincia */\r\n                provincia = me.numero.substr(0,2);      \r\n                if (provincia < 1 || provincia > me.numeroProvincias){   \r\n                    me.$vs.notify({\r\n                            text: 'El c√≥digo de la provincia (dos primeros d√≠gitos) es inv√°lido',\r\n                            color: 'warning',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-check',\r\n                            time:8000\r\n                    })         \r\n                    me.validacionCedula = false; \r\n                    return false;       \r\n                }\r\n\r\n                /* Aqui almacenamos los digitos de la cedula en variables. */\r\n                d1  = me.numero.substr(0,1);         \r\n                d2  = me.numero.substr(1,1);         \r\n                d3  = me.numero.substr(2,1);         \r\n                d4  = me.numero.substr(3,1);         \r\n                d5  = me.numero.substr(4,1);         \r\n                d6  = me.numero.substr(5,1);         \r\n                d7  = me.numero.substr(6,1);         \r\n                d8  = me.numero.substr(7,1);         \r\n                d9  = me.numero.substr(8,1);         \r\n                d10 = me.numero.substr(9,1);                \r\n                    \r\n                /* El tercer digito es: */                           \r\n                /* 9 para sociedades privadas y extranjeros   */         \r\n                /* 6 para sociedades publicas */         \r\n                /* menor que 6 (0,1,2,3,4,5) para personas naturales */ \r\n\r\n                if (d3==7 || d3==8){   \r\n                    me.$vs.notify({\r\n                            text: 'El tercer d√≠gito ingresado es inv√°lido',\r\n                            color: 'warning',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-check',\r\n                            time:8000\r\n                    })         \r\n                    me.validacionCedula = false;                  \r\n                    return false;\r\n                }         \r\n                    \r\n                /* Solo para personas naturales (modulo 10) */         \r\n                if (d3 < 6){           \r\n                    nat = true;            \r\n                    p1 = d1 * 2;  if (p1 >= 10) p1 -= 9;\r\n                    p2 = d2 * 1;  if (p2 >= 10) p2 -= 9;\r\n                    p3 = d3 * 2;  if (p3 >= 10) p3 -= 9;\r\n                    p4 = d4 * 1;  if (p4 >= 10) p4 -= 9;\r\n                    p5 = d5 * 2;  if (p5 >= 10) p5 -= 9;\r\n                    p6 = d6 * 1;  if (p6 >= 10) p6 -= 9; \r\n                    p7 = d7 * 2;  if (p7 >= 10) p7 -= 9;\r\n                    p8 = d8 * 1;  if (p8 >= 10) p8 -= 9;\r\n                    p9 = d9 * 2;  if (p9 >= 10) p9 -= 9;             \r\n                    modulo = 10;\r\n                }         \r\n\r\n                /* Solo para sociedades publicas (modulo 11) */                  \r\n                /* Aqui el digito verficador esta en la posicion 9, en las otras 2 en la pos. 10 */\r\n                else if(d3 == 6){           \r\n                    pub = true;             \r\n                    p1 = d1 * 3;\r\n                    p2 = d2 * 2;\r\n                    p3 = d3 * 7;\r\n                    p4 = d4 * 6;\r\n                    p5 = d5 * 5;\r\n                    p6 = d6 * 4;\r\n                    p7 = d7 * 3;\r\n                    p8 = d8 * 2;            \r\n                    p9 = 0;            \r\n                }         \r\n                    \r\n                /* Solo para entidades privadas (modulo 11) */         \r\n                else if(d3 == 9) {           \r\n                    pri = true;                                   \r\n                    p1 = d1 * 4;\r\n                    p2 = d2 * 3;\r\n                    p3 = d3 * 2;\r\n                    p4 = d4 * 7;\r\n                    p5 = d5 * 6;\r\n                    p6 = d6 * 5;\r\n                    p7 = d7 * 4;\r\n                    p8 = d8 * 3;\r\n                    p9 = d9 * 2;            \r\n                }\r\n                            \r\n                suma = p1 + p2 + p3 + p4 + p5 + p6 + p7 + p8 + p9;                \r\n                residuo = suma % modulo;                                         \r\n\r\n                /* Si residuo=0, dig.ver.=0, caso contrario 10 - residuo*/\r\n                digitoVerificador = residuo==0 ? 0: modulo - residuo;                \r\n\r\n                /* ahora comparamos el elemento de la posicion 10 con el dig. ver.*/                         \r\n                if (pub==true){           \r\n                    if (digitoVerificador != d9){                   \r\n                        me.$vs.notify({\r\n                            text: 'El ruc de la empresa del sector p√∫blico es incorrecto.',\r\n                            color: 'warning',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-check',\r\n                            time:8000\r\n                        })         \r\n                        \r\n                        me.validacionCedula = false; \r\n                        return false;\r\n                    }                  \r\n                    /* El ruc de las empresas del sector publico terminan con 0001*/         \r\n                    if ( me.numero.substr(9,4) != '0001' ){      \r\n                        me.$vs.notify({\r\n                            text: 'El ruc de la empresa del sector p√∫blico debe terminar con 0001.',\r\n                            color: 'warning',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-check',\r\n                            time:8000\r\n                        })                \r\n                        me.validacionCedula = false; \r\n                        return false;\r\n                    }\r\n                }         \r\n                else if(pri == true){         \r\n                    if (digitoVerificador != d10){    \r\n                        me.$vs.notify({\r\n                            text: 'El ruc de la empresa del sector privado es incorrecto.',\r\n                            color: 'warning',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-check',\r\n                            time:8000\r\n                        })                         \r\n                        me.validacionCedula = false;  \r\n                        return false;\r\n                    }         \r\n                    if ( me.numero.substr(10,3) != '001' ){ \r\n                        me.$vs.notify({\r\n                            text: 'El ruc de la empresa del sector privado debe terminar con 001',\r\n                            color: 'warning',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-check',\r\n                            time:8000\r\n                        })                       \r\n                        \r\n                        me.validacionCedula = false; \r\n                        return false;\r\n                    }\r\n                }      \r\n\r\n                else if(nat == true){         \r\n                    if (digitoVerificador != d10){  \r\n                        me.$vs.notify({\r\n                            text: 'El n√∫mero de c√©dula de la persona natural es incorrecto.',\r\n                            color: 'warning',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-check',\r\n                            time:8000\r\n                        })                           \r\n                        \r\n                        me.validacionCedula = false; \r\n                        return false;\r\n                    }         \r\n                    if (me.numero.length >10 && me.numero.substr(10,3) != '001' ){  \r\n                        me.$vs.notify({\r\n                            text: 'El ruc de la persona natural debe terminar con 001',\r\n                            color: 'warning',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-check',\r\n                            time:8000\r\n                        })                     \r\n                        \r\n                        me.validacionCedula = false; \r\n                        return false;\r\n                    }\r\n        }   \r\n        me.validacionCedula = true;    \r\n        return true;   \r\n    }        \r\n\r\n\r\n        },\r\n        components: {\r\n            FormWizard,\r\n            TabContent\r\n        }\r\n    }\r\n",{"version":3,"sources":["RegistroEstudiante.vue"],"names":[],"mappings":";AA+GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA","file":"RegistroEstudiante.vue","sourceRoot":"src/views/pages","sourcesContent":["<template>\r\n    <form-wizard color=\"rgba(var(--vs-primary), 1)\" :title=\"null\"  nextButtonText=\"Siguiente\" backButtonText=\"Atr√°s\" :subtitle=\"null\" finishButtonText=\"Enviar\" @on-complete=\"guardar(estudiante)\">\r\n        <tab-content title=\"Informaci√≥n\" class=\"mb-5 tab\" >\r\n            <!-- tab 1 content -->\r\n            <div class=\"vx-row mb-6\">\r\n                <div class=\"vx-col sm:w-1/2 w-full\">\r\n                    <p style=\"color:red;font-size:10px;\">{{cedulaVerificar}}</p>\r\n                        <vs-input class=\"w-full\" label=\"C√©dula\"  @blur=\"validarDocumento()\" icon-pack=\"feather\" icon=\"icon-code\" icon-no-border v-model=\"estudiante.cedula\" />\r\n                    <span class=\"text-danger text-sm\">{{ errors.cedula }}</span>\r\n                </div>\r\n            </div>\r\n            <div class=\"vx-row mb-6\">\r\n                <div class=\"vx-col sm:w-1/2 w-full\">\r\n                    <vs-input type=\"email\" class=\"w-full\" label=\"Correo\" icon-pack=\"feather\" icon=\"icon-mail\" icon-no-border v-model=\"estudiante.email\"/>\r\n                    <span class=\"text-danger text-sm\">{{ errors.email }}</span>\r\n                </div>\r\n                <div class=\"vx-col sm:w-1/2 w-full\">\r\n                    <vs-input class=\"w-full\" label=\"Tel√©fono\" icon-pack=\"feather\" icon=\"icon-smartphone\" icon-no-border v-model=\"estudiante.telefono\" />\r\n                </div>\r\n            </div>\r\n            <div class=\"vx-row mb-6\">\r\n                <div class=\"vx-col sm:w-1/2 w-full\">\r\n                <vs-input class=\"w-full\" label=\"Nombres\" icon-pack=\"feather\" icon=\"icon-user\" icon-no-border v-model=\"estudiante.nombres\" />\r\n                    <span class=\"text-danger text-sm\">{{ errors.nombres }}</span>\r\n                </div>\r\n                <div class=\"vx-col sm:w-1/2 w-full\">\r\n                    <vs-input class=\"w-full\" label=\"Apellidos\" icon-pack=\"feather\" icon=\"icon-user\" icon-no-border v-model=\"estudiante.apellidos\"/>\r\n                    <span class=\"text-danger text-sm\">{{ errors.apellidos }}</span>\r\n                </div>\r\n            </div>                   \r\n        </tab-content>\r\n        <!-- tab 2 content -->\r\n        <tab-content title=\"Regi√≥n\" class=\"mb-5 tab\">\r\n            <div class=\"vx-row\">\r\n                <div class=\"vx-col w-full\">\r\n                    <span>Regi√≥n</span>\r\n                    <ul class=\"flex mt-2\">\r\n                        <li>\r\n                            <vs-radio @input=\"getInstitucion()\" v-model=\"idregion\" vs-value=\"2\">Costa</vs-radio>\r\n                        </li>\r\n                        <li>\r\n                            <vs-radio @input=\"getInstitucion()\" class=\"ml-2\" v-model=\"idregion\" vs-value=\"1\">Sierra</vs-radio>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <div class=\"vx-row\">\r\n                <div class=\"vx-col w-full mt-5\">\r\n                    <div class=\"vx-col w-full\">\r\n                        <span>Ciudad</span>\r\n                        <v-select :options=\"ciudad\" @input=\"getInstitucion()\" :reduce=\"ciudad => ciudad.idciudad\" label=\"nombre\" v-model=\"idciudad\"></v-select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"vx-row\">\r\n                <div class=\"vx-col md:w-1/2 w-full md:mt-8\">\r\n                    <div class=\"demo-alignment\">\r\n                        <div class=\"flex\">\r\n                          <!-- <vs-checkbox>Staffing</vs-checkbox>\r\n                          <vs-checkbox>Catering</vs-checkbox> -->\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </tab-content>\r\n  \r\n        <!-- tab 3 content -->\r\n        <tab-content title=\"Instituci√≥n\" class=\"mb-5 tab\">\r\n            <div class=\"vx-row mb-6\" v-if=\"registroEvaluacion==false\">\r\n                <div class=\"vx-col sm:w-1/3 w-full\">\r\n                    <span>Instituci√≥n</span>\r\n                </div>\r\n                <div class=\"vx-col sm:w-2/3 w-full\">\r\n                    <v-select :options=\"instituciones\" :reduce=\"instituciones => instituciones.idInstitucion\" label=\"nombreInstitucion\" v-model=\"estudiante.idinstitucion\"></v-select>\r\n                    <span class=\"text-danger text-sm\">{{ errors.institucion }}</span>\r\n                </div>\r\n            </div>\r\n            <div class=\"vx-row\">\r\n                <div class=\"vx-col md:w-1/2 w-full\">\r\n                    Grado:\r\n                    <v-select :options=\"cursos\" :reduce=\"cursos => cursos\" label=\"nombrenivel\" class=\"w-full\" v-model=\"estudiante.grado\" />\r\n                    <span class=\"text-danger text-sm\">{{ errors.grado }}</span>\r\n                </div>\r\n                <div class=\"vx-col md:w-1/2 w-full\">\r\n                    Paralelo:\r\n                    <v-select id=\"paralelo\" :options=\"paralelos\" :reduce=\"paralelos => paralelos\" label=\"descripcion\" class=\"w-full\" v-model=\"estudiante.paralelo\" />\r\n                    <div style=\"margin-top:10px;display: flex;\">\r\n                        <vs-radio v-model=\"p_otro\" @input=\"cambiarParalelo(1)\" vs-name=\"radios1\" vs-value=\"paralelo\">Paralelo</vs-radio>\r\n                        <vs-radio v-model=\"p_otro\" @input=\"cambiarParalelo(2)\" style=\"margin-left:10px;\" vs-name=\"radios1\" vs-value=\"otro\">Otro</vs-radio>\r\n                    </div>\r\n                    <span class=\"text-danger text-sm\">{{ errors.paralelo }}</span>\r\n                </div>\r\n                <!-- <div class=\"vx-col md:w-1/2 w-full mt-5\">\r\n                    Grado:\r\n                    <v-select :options=\"cursos\" :reduce=\"cursos => cursos\" label=\"nombrenivel\" class=\"w-full\" v-model=\"estudiante.grado\" />\r\n                    <span class=\"text-danger text-sm\">{{ errors.grado }}</span>\r\n                </div> -->\r\n                <div class=\"vx-col md:w-1/2 w-full md:mt-8\">\r\n                    <div class=\"demo-alignment\">\r\n                        <div class=\"flex\">\r\n                          <!-- <vs-checkbox>Staffing</vs-checkbox>\r\n                          <vs-checkbox>Catering</vs-checkbox> -->\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </tab-content>\r\n    </form-wizard>\r\n  </template>\r\n  \r\n  <script>\r\n    import {FormWizard, TabContent} from 'vue-form-wizard'\r\n    import 'vue-form-wizard/dist/vue-form-wizard.min.css'\r\n    import Vue from 'vue'\r\n    import axios from 'axios'\r\n    import \"vue-select/dist/vue-select.css\";\r\n    import vSelect from \"vue-select\";\r\n    Vue.use(axios)\r\n    Vue.component(\"v-select\", vSelect);\r\n    import $ from 'jquery'\r\n    export default {\r\n    data() {\r\n        return {\r\n            mostrar:false,\r\n            p_otro:'paralelo',\r\n            documento:\"\",\r\n            cedulaVerificar:\"\",\r\n            firstName: \"\",\r\n            email: \"\",\r\n            // password: \"\",\r\n            checkbox_remember_me: false,\r\n            errors: {\r\n                cedula: '',\r\n                nombres: '',\r\n                apellidos: '',\r\n                email: '',\r\n                // password: '',\r\n                paralelo: '',\r\n                grado: '',\r\n            },\r\n            ciudad: [],\r\n            institucion: [],\r\n            instituciones: [],\r\n            idregion: '',\r\n            idciudad: '',\r\n            estudiante: {\r\n                cedula: '',\r\n                nombres: '',\r\n                apellidos: '',\r\n                email: '',\r\n                idinstitucion: '',\r\n                // password: '',\r\n                paralelo: '',\r\n                grado: '',\r\n            },\r\n            linkEvaluacion: '',\r\n            vectorLink: '',\r\n            registroEvaluacion: false,\r\n            numero:'',\r\n            validacionCedula:false,\r\n            paralelos:[],\r\n            cursos:[],\r\n        }\r\n    },\r\n\r\n    mounted() {\r\n            this.linkEvaluacion = localStorage.getItem('evaluacionxLink')\r\n\r\n            if (this.linkEvaluacion != '' && this.linkEvaluacion != null) {\r\n                this.registroEvaluacion = true\r\n                this.vectorLink = (this.linkEvaluacion).split('-')\r\n            }\r\n            this.infoRegistro()\r\n            this.getCiudadSelect();\r\n            this.getInstitucion();\r\n            if (localStorage.tk != null) {\r\n                this.$router.push('/home');\r\n            } else {}\r\n        },\r\n        methods: {\r\n            cambiarParalelo(estado){\r\n                if(estado == 1){\r\n                    $('#paralelo').css('display', 'block');\r\n                }else{\r\n                    $('#paralelo').css('display', 'none').css('margin-top','20px');\r\n                }\r\n            },\r\n            //para obtener el listado de las areas\r\n            infoRegistro() {\r\n                let me = this;\r\n                this.$http.get(this.$server_url+'infoRegistro')\r\n                    .then(function (res) {\r\n                        me.paralelos = res.data.paralelos\r\n                        me.cursos = res.data.cursos  \r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(error + ' error');\r\n                    })\r\n            },\r\n\r\n            formSubmitted() {\r\n                alert(\"Form submitted!\");\r\n            },\r\n\r\n            guardar(item) {\r\n                \r\n                let me = this\r\n                if(me.p_otro == 'paralelo'){\r\n                    if(item.paralelo.paralelo_id == undefined || item.paralelo.paralelo_id == null || item.paralelo.paralelo_id == \"\"){\r\n                        me.$vs.notify({\r\n                                text: \"Paralelo es obligatorio\" ,\r\n                                color: 'warning',\r\n                                iconPack: 'feather',\r\n                                icon: 'icon-check',\r\n                                time:4000\r\n                            }) \r\n                        return false;        \r\n                    }\r\n\r\n                }\r\n\r\n                    \r\n                if(item.grado.orden == undefined || item.grado.orden == null || item.grado.orden == \"\" ){\r\n                    me.$vs.notify({\r\n                            text: \"Paralelo es obligatorio\" ,\r\n                            color: 'warning',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-check',\r\n                            time:4000\r\n                        })     \r\n                    return false;   \r\n                }\r\n                \r\n                if(me.validacionCedula){\r\n                        me.cedulaVerificar = \"\";\r\n                        let formData = new FormData();\r\n                        me.errors = {\r\n                            cedula: '',\r\n                            nombres: '',\r\n                            apellidos: '',\r\n                            email: '',\r\n                            idinstitucion: '',\r\n                            // password: '',\r\n                            paralelo: '',\r\n                            grado: '',\r\n                        }\r\n\r\n                        let institucionID = item.idinstitucion;\r\n                        let paraveloEval = item.paralelo.paralelo_id;\r\n                        let gradoEval = item.grado.orden;\r\n                        if (me.registroEvaluacion === true) {\r\n                            institucionID = me.vectorLink[2]\r\n                            paraveloEval = '-'\r\n                            gradoEval = '-'\r\n                        }\r\n                        formData.append('cedula', item.cedula)\r\n                        formData.append('nombres', item.nombres)\r\n                        formData.append('apellidos', item.apellidos)\r\n                        formData.append('email', item.email)\r\n                        formData.append('name_usuario', item.email)\r\n                        formData.append('institucion', institucionID)\r\n                        // formData.append('password', item.password)\r\n                        if(me.p_otro == 'paralelo'){\r\n                            formData.append('paralelo',  item.paralelo.paralelo_id)     \r\n                        }else{\r\n                        formData.append('paralelo',  \"otro\")\r\n                        }\r\n                \r\n                        formData.append('grado',  item.grado.orden)\r\n                        me.$vs.loading();\r\n                        this.$http.post(this.$server_url+\"register\", formData)\r\n                            .then(function (response) {\r\n                                me.$vs.loading.close()\r\n                                // localStorage.tk = response.data.token\r\n                                // localStorage.setItem('usuario', JSON.stringify(response.data.datos));\r\n                                me.$vs.notify({\r\n                                    text: 'Usuario guardado, Ahora ya puede iniciar sesi√≥n',\r\n                                    color: 'success',\r\n                                    iconPack: 'feather',\r\n                                    icon: 'icon-user',\r\n                                    time:8000,\r\n                                })\r\n                                me.$emit('nuevoUser',true)\r\n                                // me.$router.push('/');\r\n                            })\r\n                            .catch(function (error) {\r\n                                me.$vs.loading.close()\r\n                                if (error.response.status == 422) {\r\n                                    try {\r\n                                        me.$vs.notify({\r\n                                                text: error.response.data.errors.cedula[0] ,\r\n                                                color: 'warning',\r\n                                                iconPack: 'feather',\r\n                                                icon: 'icon-check',\r\n                                                time:8000\r\n                                        })     \r\n                                        // me.errors.cedula = error.response.data.errors.cedula[0]\r\n                                    } catch (error) {\r\n\r\n                                    }\r\n                                    try {\r\n                                        me.$vs.notify({\r\n                                                text: error.response.data.errors.nombres[0] ,\r\n                                                color: 'warning',\r\n                                                iconPack: 'feather',\r\n                                                icon: 'icon-check',\r\n                                                time:8000\r\n                                        })  \r\n                                        // me.errors.nombres = error.response.data.errors.nombres[0]\r\n                                    } catch (error) {\r\n\r\n                                    }\r\n                                    try {\r\n                                        me.$vs.notify({\r\n                                                text: error.response.data.errors.apellidos[0] ,\r\n                                                color: 'warning',\r\n                                                iconPack: 'feather',\r\n                                                icon: 'icon-check',\r\n                                                time:8000\r\n                                        })  \r\n                                        // me.errors.apellidos = error.response.data.errors.apellidos[0]\r\n                                    } catch (error) {\r\n\r\n                                    }\r\n                                    try {\r\n                                        me.$vs.notify({\r\n                                                text: error.response.data.errors.email[0] ,\r\n                                                color: 'warning',\r\n                                                iconPack: 'feather',\r\n                                                icon: 'icon-check',\r\n                                                time:8000\r\n                                        })  \r\n                                        // me.errors.email = error.response.data.errors.email[0]\r\n                                    } catch (error) {\r\n\r\n                                    }\r\n                                    try {\r\n                                        me.$vs.notify({\r\n                                                text: error.response.data.errors.institucion[0] ,\r\n                                                color: 'warning',\r\n                                                iconPack: 'feather',\r\n                                                icon: 'icon-check',\r\n                                                time:8000\r\n                                        })  \r\n                                        // me.errors.institucion = error.response.data.errors.institucion[0]\r\n                                    } catch (error) {\r\n\r\n                                    }\r\n                                    try {\r\n                                        me.$vs.notify({\r\n                                                text: error.response.data.errors.paralelo[0] ,\r\n                                                color: 'warning',\r\n                                                iconPack: 'feather',\r\n                                                icon: 'icon-check',\r\n                                                time:8000\r\n                                        })  \r\n                                        // me.errors.paralelo = error.response.data.errors.paralelo[0]\r\n                                    } catch (error) {\r\n\r\n                                    }\r\n                                    // try {\r\n                                    //     me.errors.password = error.response.data.errors.password[0]\r\n                                    // } catch (error) {\r\n\r\n                                // }\r\n                                    try {\r\n                                        me.$vs.notify({\r\n                                                text: error.response.data.errors.grado[0] ,\r\n                                                color: 'warning',\r\n                                                iconPack: 'feather',\r\n                                                icon: 'icon-check',\r\n                                                time:8000\r\n                                        })  \r\n                                        // me.errors.grado = error.response.data.errors.grado[0]\r\n                                    } catch (error) {\r\n\r\n                                    }\r\n                                }\r\n                            })\r\n                }else{\r\n                    \r\n                    me.$vs.notify({\r\n                            text: 'La cedula es incorrecta',\r\n                            color: 'warning',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-check',\r\n                            time:4000\r\n                    })  \r\n                    me.cedulaVerificar = \"Cedula Invalida\";\r\n                \r\n                    return false;\r\n                }\r\n            \r\n            },\r\n            getInstitucion() {\r\n                let me = this;\r\n                this.$http.get(this.$server_url+'selectInstitucion?idregion=' + me.idregion + '&idciudad=' + me.idciudad)\r\n                    .then(function (response) {\r\n                        me.instituciones = response.data;\r\n                    })\r\n                    .catch(function (error) {})\r\n            },\r\n            async getCiudadSelect() {\r\n                let me = this;\r\n                this.$http.get(this.$server_url+\"ciudad\").then(function (response) {\r\n                    me.ciudad = response.data\r\n                });\r\n            },\r\n\r\n            //VALIDACION CEDULA\r\n\r\n            validarDocumento () {          \r\n                let me = this;\r\n                me.numero = me.estudiante.cedula;\r\n            \r\n            \r\n\r\n                var suma = 0;      \r\n                var residuo = 0;      \r\n                var pri = false;      \r\n                var pub = false;            \r\n                var nat = false;      \r\n                var numeroProvincias = 22;                  \r\n                var modulo = 11;\r\n                var d1 = null;\r\n                var d2 = null;\r\n                var d3 = null;\r\n                var d4 = null;\r\n                var d5 = null;\r\n                var d6 = null;\r\n                var d7 = null;\r\n                var d8 = null;\r\n                var d9 = null;\r\n                var d10 = null;  \r\n                \r\n                var    p1 = null;\r\n                var    p2 = null;\r\n                var    p3 = null;\r\n                var    p4 = null;\r\n                var    p5 = null;\r\n                var    p6 = null;\r\n                var    p7 = null;\r\n                var    p8 = null;\r\n                var    p9 = null;   \r\n                var digitoVerificador  = null;\r\n                var suma    = null;\r\n                var residuo = null;\r\n                var modulo  = null;\r\n                var pub     = null;\r\n                var pri     = null;\r\n                var nat     = null;\r\n                            \r\n                /* Verifico que el campo no contenga letras */                  \r\n                var ok=1;\r\n                let i =0;\r\n                for (i=0; i<me.numero.length && ok==1 ; i++){\r\n                    var n = parseInt(this.numero.charAt(i));\r\n                    if (isNaN(n)) ok=0;\r\n                }\r\n                if (ok==0){\r\n                \r\n                    me.$vs.notify({\r\n                            text: 'No puede ingresar caracteres a la cedula',\r\n                            color: 'warning',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-check',\r\n                            time:8000\r\n                    })     \r\n                    me.validacionCedula = false; \r\n                    return false;\r\n                }\r\n                            \r\n                if (me.numero.length < 10 ){         \r\n                    me.$vs.notify({\r\n                            text: 'La cedula ingresada no es v√°lida',\r\n                            color: 'warning',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-check',\r\n                            time:8000\r\n                    })       \r\n                    me.validacionCedula = false;             \r\n                    return false;\r\n                }\r\n\r\n                me.cedulaVerificar = \"\";\r\n                \r\n                let provincia = null;\r\n                /* Los primeros dos digitos corresponden al codigo de la provincia */\r\n                provincia = me.numero.substr(0,2);      \r\n                if (provincia < 1 || provincia > me.numeroProvincias){   \r\n                    me.$vs.notify({\r\n                            text: 'El c√≥digo de la provincia (dos primeros d√≠gitos) es inv√°lido',\r\n                            color: 'warning',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-check',\r\n                            time:8000\r\n                    })         \r\n                    me.validacionCedula = false; \r\n                    return false;       \r\n                }\r\n\r\n                /* Aqui almacenamos los digitos de la cedula en variables. */\r\n                d1  = me.numero.substr(0,1);         \r\n                d2  = me.numero.substr(1,1);         \r\n                d3  = me.numero.substr(2,1);         \r\n                d4  = me.numero.substr(3,1);         \r\n                d5  = me.numero.substr(4,1);         \r\n                d6  = me.numero.substr(5,1);         \r\n                d7  = me.numero.substr(6,1);         \r\n                d8  = me.numero.substr(7,1);         \r\n                d9  = me.numero.substr(8,1);         \r\n                d10 = me.numero.substr(9,1);                \r\n                    \r\n                /* El tercer digito es: */                           \r\n                /* 9 para sociedades privadas y extranjeros   */         \r\n                /* 6 para sociedades publicas */         \r\n                /* menor que 6 (0,1,2,3,4,5) para personas naturales */ \r\n\r\n                if (d3==7 || d3==8){   \r\n                    me.$vs.notify({\r\n                            text: 'El tercer d√≠gito ingresado es inv√°lido',\r\n                            color: 'warning',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-check',\r\n                            time:8000\r\n                    })         \r\n                    me.validacionCedula = false;                  \r\n                    return false;\r\n                }         \r\n                    \r\n                /* Solo para personas naturales (modulo 10) */         \r\n                if (d3 < 6){           \r\n                    nat = true;            \r\n                    p1 = d1 * 2;  if (p1 >= 10) p1 -= 9;\r\n                    p2 = d2 * 1;  if (p2 >= 10) p2 -= 9;\r\n                    p3 = d3 * 2;  if (p3 >= 10) p3 -= 9;\r\n                    p4 = d4 * 1;  if (p4 >= 10) p4 -= 9;\r\n                    p5 = d5 * 2;  if (p5 >= 10) p5 -= 9;\r\n                    p6 = d6 * 1;  if (p6 >= 10) p6 -= 9; \r\n                    p7 = d7 * 2;  if (p7 >= 10) p7 -= 9;\r\n                    p8 = d8 * 1;  if (p8 >= 10) p8 -= 9;\r\n                    p9 = d9 * 2;  if (p9 >= 10) p9 -= 9;             \r\n                    modulo = 10;\r\n                }         \r\n\r\n                /* Solo para sociedades publicas (modulo 11) */                  \r\n                /* Aqui el digito verficador esta en la posicion 9, en las otras 2 en la pos. 10 */\r\n                else if(d3 == 6){           \r\n                    pub = true;             \r\n                    p1 = d1 * 3;\r\n                    p2 = d2 * 2;\r\n                    p3 = d3 * 7;\r\n                    p4 = d4 * 6;\r\n                    p5 = d5 * 5;\r\n                    p6 = d6 * 4;\r\n                    p7 = d7 * 3;\r\n                    p8 = d8 * 2;            \r\n                    p9 = 0;            \r\n                }         \r\n                    \r\n                /* Solo para entidades privadas (modulo 11) */         \r\n                else if(d3 == 9) {           \r\n                    pri = true;                                   \r\n                    p1 = d1 * 4;\r\n                    p2 = d2 * 3;\r\n                    p3 = d3 * 2;\r\n                    p4 = d4 * 7;\r\n                    p5 = d5 * 6;\r\n                    p6 = d6 * 5;\r\n                    p7 = d7 * 4;\r\n                    p8 = d8 * 3;\r\n                    p9 = d9 * 2;            \r\n                }\r\n                            \r\n                suma = p1 + p2 + p3 + p4 + p5 + p6 + p7 + p8 + p9;                \r\n                residuo = suma % modulo;                                         \r\n\r\n                /* Si residuo=0, dig.ver.=0, caso contrario 10 - residuo*/\r\n                digitoVerificador = residuo==0 ? 0: modulo - residuo;                \r\n\r\n                /* ahora comparamos el elemento de la posicion 10 con el dig. ver.*/                         \r\n                if (pub==true){           \r\n                    if (digitoVerificador != d9){                   \r\n                        me.$vs.notify({\r\n                            text: 'El ruc de la empresa del sector p√∫blico es incorrecto.',\r\n                            color: 'warning',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-check',\r\n                            time:8000\r\n                        })         \r\n                        \r\n                        me.validacionCedula = false; \r\n                        return false;\r\n                    }                  \r\n                    /* El ruc de las empresas del sector publico terminan con 0001*/         \r\n                    if ( me.numero.substr(9,4) != '0001' ){      \r\n                        me.$vs.notify({\r\n                            text: 'El ruc de la empresa del sector p√∫blico debe terminar con 0001.',\r\n                            color: 'warning',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-check',\r\n                            time:8000\r\n                        })                \r\n                        me.validacionCedula = false; \r\n                        return false;\r\n                    }\r\n                }         \r\n                else if(pri == true){         \r\n                    if (digitoVerificador != d10){    \r\n                        me.$vs.notify({\r\n                            text: 'El ruc de la empresa del sector privado es incorrecto.',\r\n                            color: 'warning',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-check',\r\n                            time:8000\r\n                        })                         \r\n                        me.validacionCedula = false;  \r\n                        return false;\r\n                    }         \r\n                    if ( me.numero.substr(10,3) != '001' ){ \r\n                        me.$vs.notify({\r\n                            text: 'El ruc de la empresa del sector privado debe terminar con 001',\r\n                            color: 'warning',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-check',\r\n                            time:8000\r\n                        })                       \r\n                        \r\n                        me.validacionCedula = false; \r\n                        return false;\r\n                    }\r\n                }      \r\n\r\n                else if(nat == true){         \r\n                    if (digitoVerificador != d10){  \r\n                        me.$vs.notify({\r\n                            text: 'El n√∫mero de c√©dula de la persona natural es incorrecto.',\r\n                            color: 'warning',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-check',\r\n                            time:8000\r\n                        })                           \r\n                        \r\n                        me.validacionCedula = false; \r\n                        return false;\r\n                    }         \r\n                    if (me.numero.length >10 && me.numero.substr(10,3) != '001' ){  \r\n                        me.$vs.notify({\r\n                            text: 'El ruc de la persona natural debe terminar con 001',\r\n                            color: 'warning',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-check',\r\n                            time:8000\r\n                        })                     \r\n                        \r\n                        me.validacionCedula = false; \r\n                        return false;\r\n                    }\r\n        }   \r\n        me.validacionCedula = true;    \r\n        return true;   \r\n    }        \r\n\r\n\r\n        },\r\n        components: {\r\n            FormWizard,\r\n            TabContent\r\n        }\r\n    }\r\n</script>\r\n<style scoped>\r\n.tab{\r\n        min-width: 600px;\r\n    }\r\n@media(max-width: 1280px) {\r\n    .tab{\r\n        min-width: 500px;\r\n    }\r\n}\r\n@media(max-width: 1024px) {\r\n    .tab{\r\n        min-width: 450px;\r\n    }\r\n}\r\n@media(max-width: 912px) {\r\n    .tab{\r\n        min-width: 400px;\r\n    }\r\n}\r\n@media(max-width: 414px) {\r\n    .tab{\r\n        min-width: 200px;\r\n    }\r\n}\r\n\r\n\r\n</style>"]}]}