{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\salle\\administrador\\evaluaciones\\components\\Preguntas\\PreguntasTableIngresados.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\salle\\administrador\\evaluaciones\\components\\Preguntas\\PreguntasTableIngresados.vue","mtime":1712682816516},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nexport default{\r\n  props:{\r\n    PreguntasNoIngresadas:{\r\n      type:Array,\r\n      default:[],\r\n    },\r\n    arregloPeriodos:{\r\n      type:Array,\r\n      default:[],\r\n    },\r\n    arregloPreguntas:{\r\n      type:Array,\r\n      default:[]\r\n    },\r\n  },\r\n  data(){\r\n    return{\r\n      usuario:[],\r\n      preguntasInactivas:[],\r\n      activadas:0,\r\n    }\r\n  },\r\n  created(){\r\n    let me = this;\r\n    me.usuario = JSON.parse(localStorage.getItem(\"usuario\"))\r\n  },\r\n  mounted(){\r\n    let me  = this;\r\n    me.preguntasInactivas = me.PreguntasNoIngresadas.filter(p => p.estado == 0)\r\n  },\r\n  methods:{\r\n    ActivarPreguntas(){\r\n      let me = this\r\n      let formData = new FormData();\r\n      formData.append('data_preguntas', JSON.stringify(me.preguntasInactivas));\r\n      formData.append('user_created',   me.usuario.idusuario)\r\n      me.$vs.loading()\r\n      this.$http.post(this.$server_url+'salle/ActivarPreguntas', formData)\r\n      .then(res => {\r\n      me.$vs.loading.close()\r\n      if(res.data.status == 0){\r\n        me.$vs.notify({\r\n        text:res.data.message,\r\n        color:'warning',\r\n        iconPack: 'feather',\r\n        icon:'icon-check',\r\n        })\r\n        return\r\n      }\r\n      me.PreguntasNoIngresadas  = res.data.arregloPreguntasActivas\r\n      let msg                   = `Se movio ${res.data.ingresadas}  preguntas correctamente `\r\n      me.$vs.notify({\r\n        text:msg,\r\n        color:'success',\r\n        iconPack: 'feather',\r\n        icon:'icon-check',\r\n        time:4000,\r\n        })\r\n        me.activadas = res.data.ingresadas\r\n        me.preguntasInactivas = []\r\n      })\r\n    },\r\n  },\r\n}\r\n",{"version":3,"sources":["PreguntasTableIngresados.vue"],"names":[],"mappings":";AAmDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PreguntasTableIngresados.vue","sourceRoot":"src/views/salle/administrador/evaluaciones/components/Preguntas","sourcesContent":["<template>\r\n  <div>\r\n    <p class=\"text-center text-2xl font-bold text-primary\" v-if=\"activadas > 0\">{{ activadas }} preguntas activadas</p>\r\n    <div v-if=\"preguntasInactivas.length > 0\">\r\n      <h5 class=\"text-warning text-center\">{{ preguntasInactivas.length }} preguntas se encuentan inactivas</h5>\r\n      <div class=\"flex justify-center\">\r\n        <vs-button color=\"primary\" class=\"mt-3\" @click=\"ActivarPreguntas()\" type=\"border\">Activar Preguntas</vs-button>\r\n      </div>\r\n    </div>\r\n    <vs-table max-items=\"10\" search pagination :data=\"PreguntasNoIngresadas\">\r\n      <template slot=\"header\">\r\n          <vs-chip  color=\"primary\">Cantidad: <b> {{ PreguntasNoIngresadas.length }}</b></vs-chip>\r\n      </template>\r\n      <template slot=\"thead\">\r\n        <vs-th>Pregunta</vs-th>\r\n        <vs-th>Período evaluación</vs-th>\r\n        <vs-th>Estado</vs-th>\r\n        <vs-th>Motivo</vs-th>\r\n      </template>\r\n      <template slot-scope=\"{data}\">\r\n          <vs-tr :data=\"tr\" :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n            <vs-td>\r\n              <span v-html=\"data[indextr].descripcion\"></span>\r\n            </vs-td>\r\n            <vs-td>\r\n              <p v-for=\"(item,key) in arregloPeriodos\" :key=\"key\">\r\n                <span v-if=\"item.id == tr.n_evaluacion\">{{ item.nombre }}</span>\r\n              </p>\r\n            </vs-td>\r\n            <vs-td>\r\n              <vs-chip color=\"primary\" v-if=\"tr.estado == 1\">\r\n                Activo\r\n              </vs-chip>\r\n              <vs-chip color=\"warning\" v-else>\r\n                Desactivado\r\n              </vs-chip>\r\n            </vs-td>\r\n            <vs-td>\r\n              <!-- <p v-for=\"(item,key) in arregloPreguntas\" :key=\"key\">\r\n                <vs-chip color=\"danger\" v-if=\"item.pregunta.id_pregunta == tr.id_pregunta\">Ya existe la pregunta</vs-chip>\r\n              </p> -->\r\n              <p >\r\n                <vs-chip color=\"danger\">Ya existe la pregunta</vs-chip>\r\n              </p>\r\n            </vs-td>\r\n          </vs-tr>\r\n      </template>\r\n    </vs-table>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default{\r\n  props:{\r\n    PreguntasNoIngresadas:{\r\n      type:Array,\r\n      default:[],\r\n    },\r\n    arregloPeriodos:{\r\n      type:Array,\r\n      default:[],\r\n    },\r\n    arregloPreguntas:{\r\n      type:Array,\r\n      default:[]\r\n    },\r\n  },\r\n  data(){\r\n    return{\r\n      usuario:[],\r\n      preguntasInactivas:[],\r\n      activadas:0,\r\n    }\r\n  },\r\n  created(){\r\n    let me = this;\r\n    me.usuario = JSON.parse(localStorage.getItem(\"usuario\"))\r\n  },\r\n  mounted(){\r\n    let me  = this;\r\n    me.preguntasInactivas = me.PreguntasNoIngresadas.filter(p => p.estado == 0)\r\n  },\r\n  methods:{\r\n    ActivarPreguntas(){\r\n      let me = this\r\n      let formData = new FormData();\r\n      formData.append('data_preguntas', JSON.stringify(me.preguntasInactivas));\r\n      formData.append('user_created',   me.usuario.idusuario)\r\n      me.$vs.loading()\r\n      this.$http.post(this.$server_url+'salle/ActivarPreguntas', formData)\r\n      .then(res => {\r\n      me.$vs.loading.close()\r\n      if(res.data.status == 0){\r\n        me.$vs.notify({\r\n        text:res.data.message,\r\n        color:'warning',\r\n        iconPack: 'feather',\r\n        icon:'icon-check',\r\n        })\r\n        return\r\n      }\r\n      me.PreguntasNoIngresadas  = res.data.arregloPreguntasActivas\r\n      let msg                   = `Se movio ${res.data.ingresadas}  preguntas correctamente `\r\n      me.$vs.notify({\r\n        text:msg,\r\n        color:'success',\r\n        iconPack: 'feather',\r\n        icon:'icon-check',\r\n        time:4000,\r\n        })\r\n        me.activadas = res.data.ingresadas\r\n        me.preguntasInactivas = []\r\n      })\r\n    },\r\n  },\r\n}\r\n</script>\r\n"]}]}