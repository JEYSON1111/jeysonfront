{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\juegos\\crearJuego_sopa.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\juegos\\crearJuego_sopa.vue","mtime":1712682816067},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\n    import flatPickr from 'vue-flatpickr-component';\r\n    import 'flatpickr/dist/flatpickr.css';\r\n    import Vue from 'vue'\r\n    import axios from 'axios'\r\n    import vSelect from 'vue-select'\r\n    import moment from 'moment'\r\n    import $ from 'jquery'\r\n    export default {\r\n        data(){\r\n            return {\r\n                asignaturaSelected: '',\r\n                unidadSelected: {id: 1, label: \"Unidad 1\"},\r\n                datos_crear_juego: {},\r\n                data_juego: [],\r\n                datos_ficha: {},\r\n                juego: {estado_juego: false,},\r\n                preguntas: [],\r\n                temas: [],\r\n                usuario: [],\r\n                asignaturas: [],\r\n                unidades: [\r\n                    { id: \"1\", label: \"Unidad 1\", }, { id: \"2\", label: \"Unidad 2\", }, { id: \"3\", label: \"Unidad 3\", }, { id: \"4\", label: \"Unidad 4\", }, { id: \"5\", label: \"Unidad 5\", }, { id: \"6\", label: \"Unidad 6\", }, { id: \"7\", label: \"Unidad 7\", }, { id: \"8\", label: \"Unidad 8\", }\r\n                ],\r\n                configdateTimePicker: {\r\n                    enableTime: true,\r\n                    dateFormat: 'Y-m-d H:i:s'\r\n                },\r\n                tabActivo: 1,\r\n                id_juego: '',\r\n                id_tipo_juego: '',\r\n                activePromptEditarCrear: false,\r\n                id_temas: [],\r\n                editarPregActivo: false,\r\n                tipoUsuario: 1,\r\n            }\r\n        },\r\n        components: {\r\n                'v-select': vSelect,\r\n                flatPickr,\r\n        },\r\n        created(){\r\n            let me = this\r\n            me.asignaturaSelected = {id: localStorage.idasignatura, label: localStorage.nombreasignatura}\r\n            me.usuario = JSON.parse(localStorage.getItem('usuario'))\r\n            me.tipoUsuario = me.usuario.id_group\r\n            me.id_tipo_juego = localStorage.getItem('id_tipo_juego')\r\n            if( JSON.parse(localStorage.getItem('data_juego')) ){\r\n                me.juego = JSON.parse(localStorage.getItem('data_juego'))\r\n                me.id_juego = me.juego.id_juego\r\n                me.asignaturaSelected = {id: me.juego.temas[0].idasignatura, label: me.juego.temas[0].nombreasignatura}\r\n            }\r\n        },\r\n        mounted() {\r\n            let me = this\r\n            me.getTemas()\r\n            me.cargarSelecTemas()\r\n            me.getAsignaturas()\r\n        },\r\n        methods: {\r\n            getAsignaturas(){\r\n                let me = this\r\n                if( me.tipoUsuario === 1 ){\r\n                    this.$http.get(this.$server_url+'asignaturasDoc/0').then(res => {\r\n                        me.asignaturas = res.data;\r\n                        me.$vs.loading.close()\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(error);\r\n                    })\r\n                }else{\r\n                    return\r\n                }\r\n            },\r\n            cargarSelecTemas(){\r\n                let me = this\r\n                if( me.juego.temas ){\r\n                    for( var i=0; i<me.juego.temas.length; i++ ){\r\n                        me.id_temas.push({id: me.juego.temas[i].id, nombre_tema: me.juego.temas[i].nombre_tema})\r\n                    }\r\n                }\r\n            },\r\n            getPreguntas(){\r\n                let me = this\r\n                this.$http.get(this.$server_url+'j_contenidos/'+me.id_juego).then(res => {\r\n                    me.preguntas = res.data;\r\n                    me.$vs.loading.close()\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n            },\r\n            getTemas(){\r\n                let me = this\r\n                \r\n                if( me.asignaturaSelected.id ){\r\n                    me.$vs.loading()\r\n                    const formData = new FormData();\r\n                        formData.append('asignatura', me.asignaturaSelected.id);\r\n                        formData.append('unidad', me.unidadSelected.id);\r\n                    this.$http.post(this.$server_url+'temasignunidad', formData).then(res => {\r\n                    //this.$http.get(this.$server_url+'temAsignaruta/'+ me.asignaturaSelected.id).then(res => {\r\n                        me.temas = res.data;\r\n                        me.$vs.loading.close()\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(error);\r\n                    })\r\n                }else{\r\n                    return\r\n                }\r\n                \r\n            },\r\n            agregarJuego(tab){\r\n                let me = this;\r\n                me.juego.fecha_inicio='2021-01-01 12:00:00'; me.juego.fecha_fin='2021-01-01 12:00:00';\r\n                if( me.id_temas==='' || me.juego.nombre_juego==='' || me.juego.descripcion_juego==='' || me.juego.puntos==='' || me.juego.duracion==='' || me.id_temas===undefined || me.juego.nombre_juego===undefined || me.juego.descripcion_juego===undefined || me.juego.puntos===undefined || me.juego.duracion===undefined || me.id_temas.length < 1 ){\r\n                    me.$vs.notify({\r\n                        text:'Debe completar todos los campos antes de continuar',\r\n                        color:'warning',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-alert-triangle'})\r\n                    return\r\n                }\r\n                \r\n                let estado_juego = 1\r\n                if( me.juego.estado_juego === false ){\r\n                    estado_juego = 0\r\n                }\r\n\r\n                me.$vs.loading()\r\n                let formData = new FormData();\r\n                    formData.append('id_tipo_juego', me.id_tipo_juego);\r\n                    formData.append('id_docente', me.usuario.idusuario);\r\n                    formData.append('nombre_juego', me.juego.nombre_juego);\r\n                    formData.append('descripcion_juego', me.juego.descripcion_juego);\r\n                    formData.append('puntos', me.juego.puntos);\r\n                    formData.append('duracion', me.juego.duracion);\r\n                    formData.append('fecha_inicio', me.juego.fecha_inicio);\r\n                    formData.append('fecha_fin', me.juego.fecha_fin);\r\n                    formData.append('estado', estado_juego);\r\n                this.$http.post(this.$server_url+'j_juegos', formData)\r\n                    .then(res => {\r\n                        me.id_juego = res.data.id_juego\r\n                        me.guardarTemasJuego()\r\n                        me.$vs.loading.close()\r\n                    })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close()\r\n                })\r\n            },\r\n            editarJuego(){\r\n                let me = this;\r\n                me.juego.fecha_inicio='2021-01-01 12:00:00'; me.juego.fecha_fin='2021-01-01 12:00:00';\r\n                if( me.id_temas==='' || me.juego.nombre_juego==='' || me.juego.descripcion_juego==='' || me.juego.puntos==='' || me.juego.duracion==='' || me.id_temas===undefined || me.juego.nombre_juego===undefined || me.juego.descripcion_juego===undefined || me.juego.puntos===undefined || me.juego.duracion===undefined || me.id_temas.length < 1 ){\r\n                    me.$vs.notify({\r\n                        text:'Debe completar todos los campos antes de continuar',\r\n                        color:'warning',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-alert-triangle'})\r\n                    return\r\n                }\r\n\r\n                let estado_juego = 1\r\n                if( me.juego.estado_juego === false ){\r\n                    estado_juego = 0\r\n                }\r\n                me.$vs.loading()\r\n                \r\n                let formData = new FormData();\r\n                    formData.append('id_juego', me.id_juego);\r\n                    formData.append('id_tipo_juego', me.id_tipo_juego);\r\n                    formData.append('id_docente', me.usuario.idusuario);\r\n                    formData.append('nombre_juego', me.juego.nombre_juego);\r\n                    formData.append('descripcion_juego', me.juego.descripcion_juego);\r\n                    formData.append('puntos', me.juego.puntos);\r\n                    formData.append('duracion', me.juego.duracion);\r\n                    formData.append('fecha_inicio', me.juego.fecha_inicio);\r\n                    formData.append('fecha_fin', me.juego.fecha_fin);\r\n                    formData.append('estado', estado_juego);\r\n                this.$http.post(this.$server_url+'j_juegos', formData)\r\n                    .then(res => {\r\n                        me.$vs.loading.close()\r\n                        me.eliminarTemasJuego()\r\n                        me.getPreguntas()\r\n                    })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close()\r\n                })\r\n            },\r\n            eliminarTemasJuego(){\r\n                let me = this\r\n                me.$vs.loading()\r\n                this.$http.get(this.$server_url+'eliminarTemasJuego/'+ me.id_juego)\r\n                    .then(res => {\r\n                        me.$vs.loading.close()\r\n                        me.guardarTemasJuego()\r\n                    })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close()\r\n                })\r\n            },\r\n            guardarTemasJuego(){\r\n                let me = this\r\n                me.$vs.loading()\r\n                let temas_vector = []\r\n\r\n                for( var i=0; i<me.id_temas.length; i++ ){\r\n                    temas_vector.push(me.id_temas[i].id)\r\n                }\r\n                \r\n\r\n                let formData = new FormData();\r\n                    formData.append('id_juego', me.id_juego);\r\n                    formData.append('id_temas', temas_vector);\r\n                this.$http.post(this.$server_url+'guardarTemasJuego', formData)\r\n                    .then(res => {\r\n                        me.$vs.loading.close()\r\n                        me.tabActivo = 2\r\n                        me.datos_crear_juego = {}\r\n                        me.editarPregActivo = false\r\n                        me.pintartab(2)\r\n                    })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close()\r\n                })\r\n            },\r\n            verPregunta(item){\r\n                let me = this\r\n                me.editarPregActivo = true\r\n                me.datos_crear_juego = {}\r\n                me.datos_crear_juego = item\r\n            },\r\n            cargarPreguntaJuego(){\r\n                let me = this\r\n\r\n                var noValido = /\\s/;\r\n                if(noValido.test(me.datos_crear_juego.respuesta)){\r\n                    me.$vs.notify({\r\n                        text:'Las palabras de la sopa de letras no pueden tener espacios en blanco.',\r\n                        color:'warning',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-alert-triangle'})\r\n                    return \r\n                }\r\n\r\n                let formData = new FormData();\r\n                    formData.append('id_juego', me.id_juego);\r\n                    formData.append('pregunta', '-');\r\n                    formData.append('respuesta', me.datos_crear_juego.respuesta);\r\n                this.$http.post(this.$server_url+'j_contenidos', formData)\r\n                    .then(res => {\r\n                        me.$vs.loading.close()\r\n                        me.getPreguntas()\r\n                        me.datos_crear_juego = {}\r\n                        me.editarPregActivo = false\r\n                        me.$vs.notify({\r\n                        text:'Editado correctamente',\r\n                        color:'success',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check'})\r\n                    })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close()\r\n                })\r\n            },\r\n            editarPreguntaJuego(){\r\n                let me = this\r\n\r\n                var noValido = /\\s/;\r\n                if(noValido.test(me.datos_crear_juego.respuesta)){\r\n                    me.$vs.notify({\r\n                        text:'Las palabras de la sopa de letras no pueden tener espacios en blanco.',\r\n                        color:'warning',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-alert-triangle'})\r\n                    return \r\n                }\r\n\r\n                let formData = new FormData();\r\n                    formData.append('id_contenido_juego', me.datos_crear_juego.id_contenido_juego);\r\n                    formData.append('id_juego', me.id_juego);\r\n                    formData.append('pregunta', '-');\r\n                    formData.append('respuesta', me.datos_crear_juego.respuesta);\r\n                this.$http.post(this.$server_url+'j_contenidos', formData)\r\n                    .then(res => {\r\n                        me.$vs.loading.close()\r\n                        me.getPreguntas()\r\n                        me.datos_crear_juego = {}\r\n                        me.editarPregActivo = false\r\n                        me.$vs.notify({\r\n                        text:'Editado correctamente',\r\n                        color:'success',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check'})\r\n                    })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close()\r\n                })\r\n            },\r\n            eliminarPreguntaJuego(){\r\n                let me = this\r\n                this.$http.delete(this.$server_url+'j_contenidos/'+me.datos_crear_juego.id_contenido_juego)\r\n                    .then(res => {\r\n                        me.$vs.loading.close()\r\n                        me.getPreguntas()\r\n                        me.datos_crear_juego = {}\r\n                        me.editarPregActivo = false\r\n                        me.$vs.notify({\r\n                        text:'Eliminado correctamente',\r\n                        color:'success',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check'})\r\n                    })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close()\r\n                })\r\n            },\r\n            getFicha(){\r\n                let me = this\r\n                me.$vs.loading()\r\n                this.$http.get(this.$server_url+'j_juegos/'+ me.id_juego)\r\n                .then(res => {\r\n                    me.datos_ficha = res.data[0];\r\n                    console.log(res.data)\r\n                    me.$vs.loading.close()\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n            },\r\n            guardarFicha(){\r\n                let me = this\r\n                let formData = new FormData();\r\n                    formData.append('id_juego', me.id_juego);\r\n                    formData.append('bloque_curricular', me.datos_ficha.bloque_curricular);\r\n                    formData.append('grado', me.datos_ficha.grado);\r\n                    formData.append('destrezas', me.datos_ficha.destrezas);\r\n                    formData.append('habilidades', me.datos_ficha.habilidades);\r\n                    formData.append('elaborado_por', me.datos_ficha.elaborado_por);\r\n                    formData.append('consigna', me.datos_ficha.consigna);\r\n                    formData.append('intencion_didactica', me.datos_ficha.intencion_didactica);\r\n                    formData.append('consideraciones', me.datos_ficha.consideraciones);\r\n                this.$http.post(this.$server_url+'j_juegos_ficha', formData)\r\n                    .then(res => {\r\n                        me.$vs.loading.close()\r\n                        me.$vs.notify({\r\n                        text:'Ficha guardada correctamente',\r\n                        color:'success',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check'})\r\n                        me.$router.go(-1)\r\n                    })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close()\r\n                })\r\n            },\r\n            pintartab(n) {\r\n                for( var i=1;  i<4; i++ ){\r\n                    $(\"#btnNav\"+i).removeClass(\"btnwizardSelect\");\r\n                    $(\"#btnNav\"+i).addClass(\"btnwizard\");\r\n                }\r\n                $(\"#btnNav\"+n).removeClass(\"btnwizard\");\r\n                $(\"#btnNav\"+n).addClass(\"btnwizardSelect\");\r\n                /*document.getElementById('btnNav'+n).style.background = 'red'\r\n                document.getElementById('btnNav'+n).style.color = 'white'*/\r\n            }\r\n        },\r\n    }\r\n",{"version":3,"sources":["crearJuego_sopa.vue"],"names":[],"mappings":";AAgfile":"crearJuego_sopa.vue","sourceRoot":"src/views/juegos","sourcesContent":["<template>\r\n<div>\r\n<vx-card>\r\n    <div class=\"vx-row text-center mt-2\">\r\n    <div class=\"vx-col md:w-1/3\" align=\"center\">\r\n        <button class=\"btnwizardSelect\" id=\"btnNav1\">1</button><br>\r\n        Juego\r\n    </div>\r\n\r\n    <div class=\"vx-col md:w-1/3\" align=\"center\">\r\n        <button class=\"btnwizard\" id=\"btnNav2\">2</button><br>\r\n        Palabras\r\n    </div>\r\n\r\n    <div class=\"vx-col md:w-1/3\" align=\"center\">\r\n        <button class=\"btnwizard\" id=\"btnNav3\">3</button><br>\r\n        Ficha técnica\r\n    </div>\r\n</div>\r\n\r\n<div class=\"vx-row\" v-if=\"tabActivo===1\">\r\n    <div class=\"vx-col md:w-1/2 w-full mt-5\">\r\n    Asignatura: \r\n    <v-select v-if=\"tipoUsuario===6\" v-model=\"asignaturaSelected\" :options=\"asignaturas\" :dir=\"$vs.rtl ? 'rtl' : 'ltr'\" disabled />\r\n    <v-select v-else v-model=\"asignaturaSelected\" :options=\"asignaturas\" :dir=\"$vs.rtl ? 'rtl' : 'ltr'\" />\r\n    </div>\r\n    <div class=\"vx-col md:w-1/2 w-full mt-5\">\r\n        Unidad\r\n        <v-select v-model=\"unidadSelected\" :options=\"unidades\" @input=\"getTemas()\" :dir=\"$vs.rtl ? 'rtl' : 'ltr'\" />\r\n    </div>\r\n\r\n    <div class=\"vx-col w-full mt-5\">\r\n        Temas:\r\n        <v-select multiple :closeOnSelect=\"false\" :options=\"temas\" :reduce=\"temas => temas\" label=\"nombre_tema\" class=\"w-full\" v-model=\"id_temas\" />\r\n    </div>\r\n    \r\n\r\n    <div class=\"vx-col md:w-1/2 w-full mt-5\">\r\n        <vs-input label=\"Título juego\"  v-model=\"juego.nombre_juego\" class=\"w-full\" />\r\n    </div>\r\n    <div class=\"vx-col md:w-1/2 w-full mt-5\">\r\n        <vs-input label=\"Descripción\"  v-model=\"juego.descripcion_juego\" class=\"w-full\" />\r\n    </div>\r\n\r\n    <div class=\"vx-col md:w-1/3 w-full mt-5\">\r\n        <vs-input type=\"number\" min=\"1\" label=\"Puntos\"  v-model=\"juego.puntos\" class=\"w-full\" />\r\n    </div>\r\n    \r\n    <div class=\"vx-col md:w-1/3 w-full mt-5\">\r\n        <vs-input type=\"number\" min=\"1\" label=\"Duración(minutos)\"  v-model=\"juego.duracion\" class=\"w-full\" />\r\n    </div>\r\n\r\n    <div class=\"vx-col md:w-1/3 w-full mt-5\">\r\n        Estado:\r\n        <vs-switch vs-icon-on=\"check\" color=\"success\" v-model=\"juego.estado_juego\" class=\"mt-2 w-full\">\r\n            <span slot=\"on\">Activo</span>\r\n            <span slot=\"off\">Inactivo</span>\r\n        </vs-switch>\r\n    </div>\r\n\r\n    <!-- <div class=\"vx-col md:w-1/2 w-full mt-5\">\r\n    Fecha inicio\r\n        <flat-pickr class=\"w-full\" :config=\"configdateTimePicker\" v-model=\"juego.fecha_inicio\" />\r\n    </div>\r\n    <div class=\"vx-col md:w-1/2 w-full mt-5 mb-6\">\r\n    Fecha fin\r\n        <flat-pickr class=\"w-full\" :config=\"configdateTimePicker\" v-model=\"juego.fecha_fin\" />\r\n    </div> -->\r\n\r\n    <vs-divider></vs-divider>\r\n\r\n    <div class=\"vx-col md:w-1/2 w-full text-left\">\r\n        <vs-button type=\"filled\" @click=\"$router.go(-1)\">Volver</vs-button>\r\n    </div>\r\n    <div class=\"vx-col md:w-1/2 w-full text-right\">\r\n        <vs-button type=\"filled\" v-if=\"juego.id_juego==='' || juego.id_juego===undefined\" @click=\"agregarJuego(1); pintartab(1)\">Siguiente</vs-button>\r\n        <vs-button type=\"filled\" v-else @click=\"editarJuego(1); pintartab(2)\">Siguiente</vs-button>\r\n    </div>\r\n</div>\r\n\r\n\r\n<div v-if=\"tabActivo===2\">\r\n<div class=\"vx-row\">\r\n    <div class=\"vx-col md:w-1/3 w-full mt-5\" style=\"border-right: 1px solid #dddd;\">\r\n        <vs-button class=\"mb-4 w-full\" type=\"line\" color=\"black\" @click=\"datos_crear_juego={}; editarPregActivo=false;\">Agregar palabra</vs-button>\r\n\r\n        <vs-input v-model=\"datos_crear_juego.respuesta\" class=\"mb-4 w-full\" label=\"Palabra\"></vs-input>\r\n\r\n        <vs-button class=\"mb-4 m-1\" color=\"success\" type=\"filled\" v-if=\"editarPregActivo===false\" @click=\"cargarPreguntaJuego(2)\">Guardar</vs-button>\r\n        <vs-button class=\"mb-4 m-1\" color=\"success\" type=\"filled\" v-else @click=\"editarPreguntaJuego(2)\">Editar</vs-button>\r\n        <vs-button class=\"mb-4 m-1\" type=\"filled\" color=\"danger\" v-if=\"editarPregActivo===true\" @click=\"eliminarPreguntaJuego(2)\">Eliminar</vs-button>\r\n    </div>\r\n\r\n    <div class=\"vx-col md:w-2/3 w-full mt-8\">\r\n        <div class=\"vx-row\" :data=\"item\" :key=\"index\" v-for=\"(item, index) in preguntas\">\r\n            <div class=\"vx-col md:w-1/5 w-full mb-3 text-center\" style=\" font-size: 24px;\">\r\n                <b>{{index+1}}</b>\r\n            </div>\r\n            <div class=\"vx-col md:w-4/5 w-full mb-3 preguntasList pt-2\" @click=\"verPregunta(item)\">\r\n                {{item.respuesta.toUpperCase()}}\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"vx-row w-full\">\r\n    <vs-divider></vs-divider>\r\n\r\n    <div class=\"vx-col sm:w-1/2 w-full text-left\">\r\n        <vs-button type=\"filled\" @click=\"tabActivo=1; pintartab(1)\">Atrás</vs-button>\r\n    </div>\r\n    <div class=\"vx-col sm:w-1/2 w-full text-right\">\r\n        <vs-button type=\"filled\" @click=\"tabActivo=3; getFicha(); pintartab(3)\">Siguiente</vs-button>\r\n    </div>\r\n    </div>\r\n\r\n</div>\r\n\r\n\r\n<div class=\"vx-row mt-5\" v-if=\"tabActivo===3\">\r\n    <div class=\"vx-col sm:w-1/3 w-full\">\r\n        <span>Bloque curricular</span>\r\n    </div>\r\n    <div class=\"vx-col sm:w-2/3 w-full\">\r\n        <vs-input v-model=\"datos_ficha.bloque_curricular\" class=\"mb-6 w-full\"></vs-input>\r\n    </div>\r\n\r\n    <div class=\"vx-col sm:w-1/3 w-full\">\r\n        <span>Grado</span>\r\n    </div>\r\n    <div class=\"vx-col sm:w-2/3 w-full\">\r\n        <vs-input v-model=\"datos_ficha.grado\" class=\"mb-6 w-full\"></vs-input>\r\n    </div>\r\n\r\n    <div class=\"vx-col sm:w-1/3 w-full\">\r\n        <span>Destrezas</span>\r\n    </div>\r\n    <div class=\"vx-col sm:w-2/3 w-full\">\r\n        <vs-textarea v-model=\"datos_ficha.destrezas\" class=\"mb-6 w-full\"></vs-textarea>\r\n    </div>\r\n\r\n    <div class=\"vx-col sm:w-1/3 w-full\">\r\n        <span>Habilidades</span>\r\n    </div>\r\n    <div class=\"vx-col sm:w-2/3 w-full\">\r\n        <vs-textarea v-model=\"datos_ficha.habilidades\" class=\"mb-6 w-full\"></vs-textarea>\r\n    </div>\r\n\r\n    <div class=\"vx-col sm:w-1/3 w-full\">\r\n        <span>Elaborado por</span>\r\n    </div>\r\n    <div class=\"vx-col sm:w-2/3 w-full\">\r\n        <vs-input v-model=\"datos_ficha.elaborado_por\" class=\"mb-6 w-full\"></vs-input>\r\n    </div>\r\n\r\n    <div class=\"vx-col sm:w-1/3 w-full\">\r\n        <span>Intencion didáctica</span>\r\n    </div>\r\n    <div class=\"vx-col sm:w-2/3 w-full\">\r\n        <vs-textarea v-model=\"datos_ficha.intencion_didactica\" class=\"mb-6 w-full\"></vs-textarea>\r\n    </div>\r\n\r\n    <div class=\"vx-col sm:w-1/3 w-full\">\r\n        <span>Consigna</span>\r\n    </div>\r\n    <div class=\"vx-col sm:w-2/3 w-full\">\r\n        <vs-textarea v-model=\"datos_ficha.consigna\" class=\"mb-6 w-full\"></vs-textarea>\r\n    </div>\r\n\r\n    <div class=\"vx-col sm:w-1/3 w-full\">\r\n        <span>Consideraciones</span>\r\n    </div>\r\n    <div class=\"vx-col sm:w-2/3 w-full\">\r\n        <vs-textarea v-model=\"datos_ficha.consideraciones\" class=\"mb-6 w-full\"></vs-textarea>\r\n    </div>\r\n\r\n    <vs-divider></vs-divider>\r\n\r\n    <div class=\"vx-col sm:w-1/2 w-full text-left\">\r\n        <vs-button type=\"filled\" @click=\"editarJuego(2); pintartab(2)\">Atrás</vs-button>\r\n    </div>\r\n    <div class=\"vx-col sm:w-1/2 w-full text-right\">\r\n        <vs-button type=\"filled\" @click=\"guardarFicha(3);\">Guardar Ficha</vs-button>\r\n    </div>\r\n</div>\r\n\r\n\r\n</vx-card> \r\n</div>\r\n</template>\r\n\r\n<script>\r\n    import flatPickr from 'vue-flatpickr-component';\r\n    import 'flatpickr/dist/flatpickr.css';\r\n    import Vue from 'vue'\r\n    import axios from 'axios'\r\n    import vSelect from 'vue-select'\r\n    import moment from 'moment'\r\n    import $ from 'jquery'\r\n    export default {\r\n        data(){\r\n            return {\r\n                asignaturaSelected: '',\r\n                unidadSelected: {id: 1, label: \"Unidad 1\"},\r\n                datos_crear_juego: {},\r\n                data_juego: [],\r\n                datos_ficha: {},\r\n                juego: {estado_juego: false,},\r\n                preguntas: [],\r\n                temas: [],\r\n                usuario: [],\r\n                asignaturas: [],\r\n                unidades: [\r\n                    { id: \"1\", label: \"Unidad 1\", }, { id: \"2\", label: \"Unidad 2\", }, { id: \"3\", label: \"Unidad 3\", }, { id: \"4\", label: \"Unidad 4\", }, { id: \"5\", label: \"Unidad 5\", }, { id: \"6\", label: \"Unidad 6\", }, { id: \"7\", label: \"Unidad 7\", }, { id: \"8\", label: \"Unidad 8\", }\r\n                ],\r\n                configdateTimePicker: {\r\n                    enableTime: true,\r\n                    dateFormat: 'Y-m-d H:i:s'\r\n                },\r\n                tabActivo: 1,\r\n                id_juego: '',\r\n                id_tipo_juego: '',\r\n                activePromptEditarCrear: false,\r\n                id_temas: [],\r\n                editarPregActivo: false,\r\n                tipoUsuario: 1,\r\n            }\r\n        },\r\n        components: {\r\n                'v-select': vSelect,\r\n                flatPickr,\r\n        },\r\n        created(){\r\n            let me = this\r\n            me.asignaturaSelected = {id: localStorage.idasignatura, label: localStorage.nombreasignatura}\r\n            me.usuario = JSON.parse(localStorage.getItem('usuario'))\r\n            me.tipoUsuario = me.usuario.id_group\r\n            me.id_tipo_juego = localStorage.getItem('id_tipo_juego')\r\n            if( JSON.parse(localStorage.getItem('data_juego')) ){\r\n                me.juego = JSON.parse(localStorage.getItem('data_juego'))\r\n                me.id_juego = me.juego.id_juego\r\n                me.asignaturaSelected = {id: me.juego.temas[0].idasignatura, label: me.juego.temas[0].nombreasignatura}\r\n            }\r\n        },\r\n        mounted() {\r\n            let me = this\r\n            me.getTemas()\r\n            me.cargarSelecTemas()\r\n            me.getAsignaturas()\r\n        },\r\n        methods: {\r\n            getAsignaturas(){\r\n                let me = this\r\n                if( me.tipoUsuario === 1 ){\r\n                    this.$http.get(this.$server_url+'asignaturasDoc/0').then(res => {\r\n                        me.asignaturas = res.data;\r\n                        me.$vs.loading.close()\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(error);\r\n                    })\r\n                }else{\r\n                    return\r\n                }\r\n            },\r\n            cargarSelecTemas(){\r\n                let me = this\r\n                if( me.juego.temas ){\r\n                    for( var i=0; i<me.juego.temas.length; i++ ){\r\n                        me.id_temas.push({id: me.juego.temas[i].id, nombre_tema: me.juego.temas[i].nombre_tema})\r\n                    }\r\n                }\r\n            },\r\n            getPreguntas(){\r\n                let me = this\r\n                this.$http.get(this.$server_url+'j_contenidos/'+me.id_juego).then(res => {\r\n                    me.preguntas = res.data;\r\n                    me.$vs.loading.close()\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n            },\r\n            getTemas(){\r\n                let me = this\r\n                \r\n                if( me.asignaturaSelected.id ){\r\n                    me.$vs.loading()\r\n                    const formData = new FormData();\r\n                        formData.append('asignatura', me.asignaturaSelected.id);\r\n                        formData.append('unidad', me.unidadSelected.id);\r\n                    this.$http.post(this.$server_url+'temasignunidad', formData).then(res => {\r\n                    //this.$http.get(this.$server_url+'temAsignaruta/'+ me.asignaturaSelected.id).then(res => {\r\n                        me.temas = res.data;\r\n                        me.$vs.loading.close()\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(error);\r\n                    })\r\n                }else{\r\n                    return\r\n                }\r\n                \r\n            },\r\n            agregarJuego(tab){\r\n                let me = this;\r\n                me.juego.fecha_inicio='2021-01-01 12:00:00'; me.juego.fecha_fin='2021-01-01 12:00:00';\r\n                if( me.id_temas==='' || me.juego.nombre_juego==='' || me.juego.descripcion_juego==='' || me.juego.puntos==='' || me.juego.duracion==='' || me.id_temas===undefined || me.juego.nombre_juego===undefined || me.juego.descripcion_juego===undefined || me.juego.puntos===undefined || me.juego.duracion===undefined || me.id_temas.length < 1 ){\r\n                    me.$vs.notify({\r\n                        text:'Debe completar todos los campos antes de continuar',\r\n                        color:'warning',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-alert-triangle'})\r\n                    return\r\n                }\r\n                \r\n                let estado_juego = 1\r\n                if( me.juego.estado_juego === false ){\r\n                    estado_juego = 0\r\n                }\r\n\r\n                me.$vs.loading()\r\n                let formData = new FormData();\r\n                    formData.append('id_tipo_juego', me.id_tipo_juego);\r\n                    formData.append('id_docente', me.usuario.idusuario);\r\n                    formData.append('nombre_juego', me.juego.nombre_juego);\r\n                    formData.append('descripcion_juego', me.juego.descripcion_juego);\r\n                    formData.append('puntos', me.juego.puntos);\r\n                    formData.append('duracion', me.juego.duracion);\r\n                    formData.append('fecha_inicio', me.juego.fecha_inicio);\r\n                    formData.append('fecha_fin', me.juego.fecha_fin);\r\n                    formData.append('estado', estado_juego);\r\n                this.$http.post(this.$server_url+'j_juegos', formData)\r\n                    .then(res => {\r\n                        me.id_juego = res.data.id_juego\r\n                        me.guardarTemasJuego()\r\n                        me.$vs.loading.close()\r\n                    })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close()\r\n                })\r\n            },\r\n            editarJuego(){\r\n                let me = this;\r\n                me.juego.fecha_inicio='2021-01-01 12:00:00'; me.juego.fecha_fin='2021-01-01 12:00:00';\r\n                if( me.id_temas==='' || me.juego.nombre_juego==='' || me.juego.descripcion_juego==='' || me.juego.puntos==='' || me.juego.duracion==='' || me.id_temas===undefined || me.juego.nombre_juego===undefined || me.juego.descripcion_juego===undefined || me.juego.puntos===undefined || me.juego.duracion===undefined || me.id_temas.length < 1 ){\r\n                    me.$vs.notify({\r\n                        text:'Debe completar todos los campos antes de continuar',\r\n                        color:'warning',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-alert-triangle'})\r\n                    return\r\n                }\r\n\r\n                let estado_juego = 1\r\n                if( me.juego.estado_juego === false ){\r\n                    estado_juego = 0\r\n                }\r\n                me.$vs.loading()\r\n                \r\n                let formData = new FormData();\r\n                    formData.append('id_juego', me.id_juego);\r\n                    formData.append('id_tipo_juego', me.id_tipo_juego);\r\n                    formData.append('id_docente', me.usuario.idusuario);\r\n                    formData.append('nombre_juego', me.juego.nombre_juego);\r\n                    formData.append('descripcion_juego', me.juego.descripcion_juego);\r\n                    formData.append('puntos', me.juego.puntos);\r\n                    formData.append('duracion', me.juego.duracion);\r\n                    formData.append('fecha_inicio', me.juego.fecha_inicio);\r\n                    formData.append('fecha_fin', me.juego.fecha_fin);\r\n                    formData.append('estado', estado_juego);\r\n                this.$http.post(this.$server_url+'j_juegos', formData)\r\n                    .then(res => {\r\n                        me.$vs.loading.close()\r\n                        me.eliminarTemasJuego()\r\n                        me.getPreguntas()\r\n                    })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close()\r\n                })\r\n            },\r\n            eliminarTemasJuego(){\r\n                let me = this\r\n                me.$vs.loading()\r\n                this.$http.get(this.$server_url+'eliminarTemasJuego/'+ me.id_juego)\r\n                    .then(res => {\r\n                        me.$vs.loading.close()\r\n                        me.guardarTemasJuego()\r\n                    })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close()\r\n                })\r\n            },\r\n            guardarTemasJuego(){\r\n                let me = this\r\n                me.$vs.loading()\r\n                let temas_vector = []\r\n\r\n                for( var i=0; i<me.id_temas.length; i++ ){\r\n                    temas_vector.push(me.id_temas[i].id)\r\n                }\r\n                \r\n\r\n                let formData = new FormData();\r\n                    formData.append('id_juego', me.id_juego);\r\n                    formData.append('id_temas', temas_vector);\r\n                this.$http.post(this.$server_url+'guardarTemasJuego', formData)\r\n                    .then(res => {\r\n                        me.$vs.loading.close()\r\n                        me.tabActivo = 2\r\n                        me.datos_crear_juego = {}\r\n                        me.editarPregActivo = false\r\n                        me.pintartab(2)\r\n                    })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close()\r\n                })\r\n            },\r\n            verPregunta(item){\r\n                let me = this\r\n                me.editarPregActivo = true\r\n                me.datos_crear_juego = {}\r\n                me.datos_crear_juego = item\r\n            },\r\n            cargarPreguntaJuego(){\r\n                let me = this\r\n\r\n                var noValido = /\\s/;\r\n                if(noValido.test(me.datos_crear_juego.respuesta)){\r\n                    me.$vs.notify({\r\n                        text:'Las palabras de la sopa de letras no pueden tener espacios en blanco.',\r\n                        color:'warning',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-alert-triangle'})\r\n                    return \r\n                }\r\n\r\n                let formData = new FormData();\r\n                    formData.append('id_juego', me.id_juego);\r\n                    formData.append('pregunta', '-');\r\n                    formData.append('respuesta', me.datos_crear_juego.respuesta);\r\n                this.$http.post(this.$server_url+'j_contenidos', formData)\r\n                    .then(res => {\r\n                        me.$vs.loading.close()\r\n                        me.getPreguntas()\r\n                        me.datos_crear_juego = {}\r\n                        me.editarPregActivo = false\r\n                        me.$vs.notify({\r\n                        text:'Editado correctamente',\r\n                        color:'success',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check'})\r\n                    })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close()\r\n                })\r\n            },\r\n            editarPreguntaJuego(){\r\n                let me = this\r\n\r\n                var noValido = /\\s/;\r\n                if(noValido.test(me.datos_crear_juego.respuesta)){\r\n                    me.$vs.notify({\r\n                        text:'Las palabras de la sopa de letras no pueden tener espacios en blanco.',\r\n                        color:'warning',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-alert-triangle'})\r\n                    return \r\n                }\r\n\r\n                let formData = new FormData();\r\n                    formData.append('id_contenido_juego', me.datos_crear_juego.id_contenido_juego);\r\n                    formData.append('id_juego', me.id_juego);\r\n                    formData.append('pregunta', '-');\r\n                    formData.append('respuesta', me.datos_crear_juego.respuesta);\r\n                this.$http.post(this.$server_url+'j_contenidos', formData)\r\n                    .then(res => {\r\n                        me.$vs.loading.close()\r\n                        me.getPreguntas()\r\n                        me.datos_crear_juego = {}\r\n                        me.editarPregActivo = false\r\n                        me.$vs.notify({\r\n                        text:'Editado correctamente',\r\n                        color:'success',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check'})\r\n                    })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close()\r\n                })\r\n            },\r\n            eliminarPreguntaJuego(){\r\n                let me = this\r\n                this.$http.delete(this.$server_url+'j_contenidos/'+me.datos_crear_juego.id_contenido_juego)\r\n                    .then(res => {\r\n                        me.$vs.loading.close()\r\n                        me.getPreguntas()\r\n                        me.datos_crear_juego = {}\r\n                        me.editarPregActivo = false\r\n                        me.$vs.notify({\r\n                        text:'Eliminado correctamente',\r\n                        color:'success',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check'})\r\n                    })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close()\r\n                })\r\n            },\r\n            getFicha(){\r\n                let me = this\r\n                me.$vs.loading()\r\n                this.$http.get(this.$server_url+'j_juegos/'+ me.id_juego)\r\n                .then(res => {\r\n                    me.datos_ficha = res.data[0];\r\n                    console.log(res.data)\r\n                    me.$vs.loading.close()\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n            },\r\n            guardarFicha(){\r\n                let me = this\r\n                let formData = new FormData();\r\n                    formData.append('id_juego', me.id_juego);\r\n                    formData.append('bloque_curricular', me.datos_ficha.bloque_curricular);\r\n                    formData.append('grado', me.datos_ficha.grado);\r\n                    formData.append('destrezas', me.datos_ficha.destrezas);\r\n                    formData.append('habilidades', me.datos_ficha.habilidades);\r\n                    formData.append('elaborado_por', me.datos_ficha.elaborado_por);\r\n                    formData.append('consigna', me.datos_ficha.consigna);\r\n                    formData.append('intencion_didactica', me.datos_ficha.intencion_didactica);\r\n                    formData.append('consideraciones', me.datos_ficha.consideraciones);\r\n                this.$http.post(this.$server_url+'j_juegos_ficha', formData)\r\n                    .then(res => {\r\n                        me.$vs.loading.close()\r\n                        me.$vs.notify({\r\n                        text:'Ficha guardada correctamente',\r\n                        color:'success',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check'})\r\n                        me.$router.go(-1)\r\n                    })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close()\r\n                })\r\n            },\r\n            pintartab(n) {\r\n                for( var i=1;  i<4; i++ ){\r\n                    $(\"#btnNav\"+i).removeClass(\"btnwizardSelect\");\r\n                    $(\"#btnNav\"+i).addClass(\"btnwizard\");\r\n                }\r\n                $(\"#btnNav\"+n).removeClass(\"btnwizard\");\r\n                $(\"#btnNav\"+n).addClass(\"btnwizardSelect\");\r\n                /*document.getElementById('btnNav'+n).style.background = 'red'\r\n                document.getElementById('btnNav'+n).style.color = 'white'*/\r\n            }\r\n        },\r\n    }\r\n</script>\r\n\r\n<style>\r\n    .btnwizard{\r\n        width: 65px;\r\n        height: 65px;\r\n        font-size: 22px;\r\n        padding: 0px;\r\n        border-radius: 100%;\r\n        border: 2px solid rgb(29, 90, 182);\r\n        background-color: white;\r\n        color: rgb(29, 90, 182);\r\n    }\r\n    .btnwizardSelect{\r\n        width: 65px;\r\n        height: 65px;\r\n        font-size: 22px;\r\n        padding: 0px;\r\n        border-radius: 100%;\r\n        border: 2px solid rgb(29, 90, 182);\r\n        background-color:  rgb(29, 90, 182);\r\n        color: white;\r\n    }\r\n    .preguntasList:hover{\r\n        color: rgb(36, 87, 226);\r\n        text-decoration: underline;\r\n        cursor: pointer;\r\n    }\r\n</style>"]}]}