{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\admin\\reporteria\\asesor\\MenuReporteriaAsesor.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\admin\\reporteria\\asesor\\MenuReporteriaAsesor.vue","mtime":1712682815458},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nimport gestionVisitasVue from '../../../asesor/admin/gestionVisitas.vue'\r\nimport reporteAgendaGeneral from '../components/reporteAgendaGeneral.vue'\r\nconst ReporteVisitasVue   = () => import('./visitas/ReporteVisitas.vue')\r\nimport flatPickr from 'vue-flatpickr-component';\r\nimport 'flatpickr/dist/flatpickr.css';\r\nimport vSelect from 'vue-select';\r\nimport VueApexCharts from 'vue-apexcharts';\r\nimport moment from 'moment'\r\nexport default{\r\n    components:{\r\n      flatPickr,\r\n      'v-select': vSelect,\r\n      gestionVisitasVue,\r\n      reporteAgendaGeneral,\r\n      ReporteVisitasVue,\r\n    },\r\n    mounted(){\r\n      let me = this;\r\n      this.getAgendas(0)\r\n      this.getPeriodos()\r\n      const date = new Date()\r\n      const primerDia = new Date(date.getFullYear(), date.getMonth(), 1)\r\n      const ultimoDia = new Date(date.getFullYear(), date.getMonth() + 1, 0)\r\n      me.fecha_inicio = primerDia\r\n      me.fecha_fin    = ultimoDia\r\n    },\r\n    data(){\r\n        return{\r\n            agendas: [],\r\n            agendasTemporales:[],\r\n            periodos: [],\r\n            periodo_selected: {},\r\n            fecha_inicio: '',\r\n            fecha_fin: '',\r\n            configdateTimePicker: {\r\n              enableTime: true,\r\n              dateFormat: 'Y-m-d'\r\n            },\r\n            dialogExportar: false,\r\n            fileName: '',\r\n\r\n            barChart: {\r\n              series: [{ name: \"Visitas\", data: [] }],\r\n              chartOptions: {\r\n                colors: ['#28C76F', '#EA5455', '#7367F0', '#FF9F43', '#1E1E1E'],\r\n                plotOptions: { bar: { horizontal: false, } },\r\n                dataLabels: { enabled: false },\r\n                xaxis: {\r\n                  categories: [],\r\n                }\r\n              }\r\n            },\r\n              barChart2: {\r\n              series: [{ name: \"Visitas\", data: [] }],\r\n              chartOptions: {\r\n                colors: ['#28C76F', '#EA5455', '#7367F0', '#FF9F43', '#1E1E1E'],\r\n                plotOptions: { bar: { horizontal: false, } },\r\n                dataLabels: { enabled: false },\r\n                xaxis: {\r\n                  categories: [],\r\n                }\r\n              }\r\n            },\r\n            estadisticas: [],\r\n            estadisticasTemporales:[],\r\n            exportarR:1,\r\n            list:[],\r\n            menu:0,\r\n        }\r\n    },\r\n    methods:{\r\n      getPeriodos(){\r\n        let me = this\r\n        this.$http.get(this.$server_url+'get_periodos_activos')\r\n        .then(res => {\r\n            me.periodos = res.data\r\n        })\r\n      },\r\n      getAgendas(tipo_filtro){\r\n        let me = this\r\n        me.agendas = []\r\n        me.agendasTemporales = []\r\n        let periodo = 'null'\r\n        if( me.periodo_selected.idperiodoescolar ){\r\n          periodo = me.periodo_selected.idperiodoescolar\r\n        }\r\n        switch (tipo_filtro) {\r\n          case 1: //por fechas\r\n            periodo = 'null'\r\n            me.periodo_selected = \"\"\r\n            if( me.fecha_inicio == '' || me.fecha_fin == '' ){\r\n              me.$vs.notify({ text: 'Ingrese la fecha de inicio y fin para realizar la búsqueda.', color: 'warning', iconPack: 'feather', icon: 'icon-alert-triangle' })\r\n              return\r\n            }\r\n            break;\r\n          default:\r\n            me.fecha_inicio = 'null'\r\n            me.fecha_fin = 'null'\r\n            break;\r\n        }\r\n        const from = moment(me.fecha_inicio).format('YYYY-MM-DD')\r\n        const to = moment(me.fecha_fin).format('YYYY-MM-DD')\r\n        me.$vs.loading();\r\n        this.$http.get(this.$server_url + 'reporte_asesores_view/'+ from+'/'+ to+'/'+periodo)\r\n        .then(function (res) {\r\n            me.agendas = res.data.visitasInstitucion\r\n            me.agendasTemporales = res.data.visitasInstitucionTemporal\r\n            me.$vs.loading.close()\r\n            me.getEstadisticasInst(periodo, me.fecha_inicio, me.fecha_fin)\r\n        })\r\n        .catch(function (error){ me.$vs.loading.close() })\r\n      },\r\n      getEstadisticasInst(periodo, fecha_inicio, fecha_fin){\r\n        let me = this\r\n        me.barChart.series[0].data = []\r\n        me.barChart2.series[0].data = []\r\n        me.barChart.chartOptions.xaxis.categories = []\r\n        me.barChart2.chartOptions.xaxis.categories = []\r\n        const from = moment(me.fecha_inicio).format('YYYY-MM-DD')\r\n        const to = moment(me.fecha_fin).format('YYYY-MM-DD')\r\n        me.$vs.loading()\r\n        this.$http.get(this.$server_url + 'reporte_asesores_view/'+ from+'/'+ to+'/'+periodo)\r\n        .then(res => {\r\n            me.estadisticas = res.data.visitasInstitucion\r\n            me.estadisticasTemporales = res.data.visitasInstitucionTemporal\r\n            $.each(me.estadisticas, function(key, value){\r\n                me.barChart.series[0].data[key] = value.contador\r\n                me.barChart.chartOptions.xaxis.categories[key] = value.nombreInstitucion\r\n            });\r\n            $.each(me.estadisticasTemporales, function(key, value){\r\n                me.barChart2.series[0].data[key] = value.contador\r\n                me.barChart2.chartOptions.xaxis.categories[key] = value.nombreInstitucion\r\n            });\r\n            me.$vs.loading.close()\r\n        })\r\n      },\r\n      exportToExcel() {\r\n          let me = this\r\n          let headerVal = [ 'asesor','nombreInstitucion', 'contador'];\r\n          let headerTitle = [ 'asesor', 'Institucion', 'Visitas'];\r\n          import('@/vendor/Export2Excel').then(excel => {\r\n            const list = me.agendasTemporales\r\n            if(me.exportarR == 2){\r\n              me.list = me.agendasTemporales\r\n            }else{\r\n              me.list = me.agendas\r\n            }\r\n              const data = this.formatJson(headerVal, me.list)\r\n              excel.export_json_to_excel({\r\n                  header: headerTitle,\r\n                  data,\r\n                  filename: this.fileName,\r\n                  autoWidth: true,\r\n                  bookType: 'xls'\r\n              })\r\n          })\r\n      },\r\n      formatJson(filterVal, jsonData) {\r\n          return jsonData.map(v => filterVal.map(j => {\r\n              return v[j]\r\n          }))\r\n      },\r\n    }\r\n}\r\n",{"version":3,"sources":["MenuReporteriaAsesor.vue"],"names":[],"mappings":";AAifile":"MenuReporteriaAsesor.vue","sourceRoot":"src/views/admin/reporteria/asesor","sourcesContent":["<template>\r\n    <div>\r\n        <vs-tabs>\r\n            <vs-tab label=\"Gestión de visitas\" @click=\"menu =0;\">\r\n                <div class=\"con-tab-ejemplo\">\r\n                <gestionVisitasVue/>\r\n                </div>\r\n            </vs-tab>\r\n            <vs-tab label=\"Reporteria\" @click=\"menu=1;\">\r\n                <vs-prompt title=\"Exportar a Excel\" class=\"export-options\" @accept=\"exportToExcel\" accept-text=\"Exportar\"  :active.sync=\"dialogExportar\">\r\n                    <vs-input v-model=\"fileName\" placeholder=\"Ingrese el nombre del archivo\" class=\"w-full\" />\r\n                </vs-prompt>\r\n                <vx-card title=\"Información de agendas de asesores\" subtitle=\"Por defecto se muestran resultados de hasta 30 días previos.\">\r\n                <div class=\"w-full mb-6\">\r\n                    <v-select :options=\"periodos\" :reduce=\"periodos => periodos\" label=\"periodoescolar\" v-model=\"periodo_selected\" class=\"m-2\" @input=\"getAgendas(0)\" style=\"width: 210px; display: inline-block; vertical-align: bottom;\" />\r\n                    <flat-pickr :config=\"configdateTimePicker\" v-model=\"fecha_inicio\" style=\"width: 210px; display: inline-block;\" placeholder=\"Fecha inicio\" class=\"m-2\" />\r\n                    <flat-pickr :config=\"configdateTimePicker\" v-model=\"fecha_fin\" style=\"width: 210px; display: inline-block;\" placeholder=\"Fecha fin\" class=\"m-2\" />\r\n                    <vs-button color=\"dark\" size=\"small\" style=\"font-size: 14px;\" @click=\"getAgendas(1)\">Buscar por fechas</vs-button>\r\n                </div>\r\n                <vs-alert active=\"true\" color=\"warning\">\r\n                    <p style=\"text-align:center;\">Cantidad de instituciones pertenecientes prolipa</p>\r\n                </vs-alert>\r\n                    <vs-tabs alignment=\"fixed\" class=\"mt-5\">\r\n                    <vs-tab label=\"Tabla de registros\" class=\"pt-6\">\r\n                        <vs-table max-items=\"10\"  search pagination :data=\"agendas\">\r\n                            <template slot=\"header\">\r\n\r\n                                <vs-button color=\"warning\" class=\"ml-2\" size=\"small\" style=\"font-size: 14px;\" @click=\"dialogExportar=true;exportarR= 1;\">Exportar</vs-button>\r\n                            </template>\r\n                            <template slot=\"thead\">\r\n                                <vs-th>ASESOR</vs-th>\r\n                                <vs-th>INSTITUCIÓN</vs-th>\r\n                                <vs-th>VISITA</vs-th>\r\n                            </template>\r\n                            <template slot-scope=\"{data}\">\r\n                                <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                                    <vs-td> {{tr.asesor}}</vs-td>\r\n                                    <vs-td>\r\n                                    {{tr.nombreInstitucion}} <br>\r\n                                    <small>{{tr.region}}</small>\r\n                                    </vs-td>\r\n                                    <vs-td> {{tr.contador}} </vs-td>\r\n                                </vs-tr>\r\n                            </template>\r\n                        </vs-table>\r\n                    </vs-tab>\r\n                    <vs-tab label=\"Gráficos estadísticos\" class=\"pt-6\">\r\n                        <vue-apex-charts type=\"bar\" height=\"450\" :options=\"barChart.chartOptions\" :series=\"[barChart.series[0]]\"></vue-apex-charts>\r\n                    </vs-tab>\r\n                    </vs-tabs>\r\n                <vs-alert active=\"true\" color=\"warning\">\r\n                    <p style=\"text-align:center;\">Cantidad de instituciones temporales</p>\r\n                </vs-alert>\r\n                <vs-tabs alignment=\"fixed\" class=\"mt-5\">\r\n                    <vs-tab label=\"Tabla de registros\" class=\"pt-6\">\r\n                        <vs-table max-items=\"10\"  search pagination :data=\"agendasTemporales\">\r\n                            <template slot=\"header\">\r\n                            <!-- Cantidad de instituciones: {{agendasTemporales.length}} -->\r\n                                <vs-button color=\"warning\" class=\"ml-2\" size=\"small\" style=\"font-size: 14px;\" @click=\"dialogExportar=true;exportarR= 2;\">Exportar</vs-button>\r\n                            </template>\r\n                            <template slot=\"thead\">\r\n                                <vs-th>ASESOR</vs-th>\r\n                                <vs-th>INSTITUCIÓN</vs-th>\r\n                                <vs-th>VISITA</vs-th>\r\n                            </template>\r\n                            <template slot-scope=\"{data}\">\r\n                                <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                                    <vs-td> {{tr.asesor}}</vs-td>\r\n                                    <vs-td>\r\n                                    {{tr.nombreInstitucion}} <br>\r\n                                    <small>{{tr.region}}</small>\r\n                                    </vs-td>\r\n                                    <vs-td> {{tr.contador}} </vs-td>\r\n                                </vs-tr>\r\n                            </template>\r\n                        </vs-table>\r\n                    </vs-tab>\r\n                    <vs-tab label=\"Gráficos estadísticos\" class=\"pt-6\">\r\n                        <vue-apex-charts type=\"bar\" height=\"450\" :options=\"barChart2.chartOptions\" :series=\"[barChart2.series[0]]\"></vue-apex-charts>\r\n                    </vs-tab>\r\n                    </vs-tabs>\r\n                </vx-card>\r\n            </vs-tab>\r\n            <vs-tab label=\"Reporte general de la agenda\" @click=\"menu=2;\">\r\n                <div class=\"con-tab-ejemplo\">\r\n                <reporteAgendaGeneral/>\r\n                </div>\r\n            </vs-tab>\r\n            <vs-tab label=\"Reporte visitas\" @click=\"menu=3;\">\r\n              <vx-card class=\"con-tab-ejemplo\">\r\n              <ReporteVisitasVue/>\r\n              </vx-card>\r\n          </vs-tab>\r\n        </vs-tabs>\r\n    </div>\r\n</template>\r\n<script>\r\nimport gestionVisitasVue from '../../../asesor/admin/gestionVisitas.vue'\r\nimport reporteAgendaGeneral from '../components/reporteAgendaGeneral.vue'\r\nconst ReporteVisitasVue   = () => import('./visitas/ReporteVisitas.vue')\r\nimport flatPickr from 'vue-flatpickr-component';\r\nimport 'flatpickr/dist/flatpickr.css';\r\nimport vSelect from 'vue-select';\r\nimport VueApexCharts from 'vue-apexcharts';\r\nimport moment from 'moment'\r\nexport default{\r\n    components:{\r\n      flatPickr,\r\n      'v-select': vSelect,\r\n      gestionVisitasVue,\r\n      reporteAgendaGeneral,\r\n      ReporteVisitasVue,\r\n    },\r\n    mounted(){\r\n      let me = this;\r\n      this.getAgendas(0)\r\n      this.getPeriodos()\r\n      const date = new Date()\r\n      const primerDia = new Date(date.getFullYear(), date.getMonth(), 1)\r\n      const ultimoDia = new Date(date.getFullYear(), date.getMonth() + 1, 0)\r\n      me.fecha_inicio = primerDia\r\n      me.fecha_fin    = ultimoDia\r\n    },\r\n    data(){\r\n        return{\r\n            agendas: [],\r\n            agendasTemporales:[],\r\n            periodos: [],\r\n            periodo_selected: {},\r\n            fecha_inicio: '',\r\n            fecha_fin: '',\r\n            configdateTimePicker: {\r\n              enableTime: true,\r\n              dateFormat: 'Y-m-d'\r\n            },\r\n            dialogExportar: false,\r\n            fileName: '',\r\n\r\n            barChart: {\r\n              series: [{ name: \"Visitas\", data: [] }],\r\n              chartOptions: {\r\n                colors: ['#28C76F', '#EA5455', '#7367F0', '#FF9F43', '#1E1E1E'],\r\n                plotOptions: { bar: { horizontal: false, } },\r\n                dataLabels: { enabled: false },\r\n                xaxis: {\r\n                  categories: [],\r\n                }\r\n              }\r\n            },\r\n              barChart2: {\r\n              series: [{ name: \"Visitas\", data: [] }],\r\n              chartOptions: {\r\n                colors: ['#28C76F', '#EA5455', '#7367F0', '#FF9F43', '#1E1E1E'],\r\n                plotOptions: { bar: { horizontal: false, } },\r\n                dataLabels: { enabled: false },\r\n                xaxis: {\r\n                  categories: [],\r\n                }\r\n              }\r\n            },\r\n            estadisticas: [],\r\n            estadisticasTemporales:[],\r\n            exportarR:1,\r\n            list:[],\r\n            menu:0,\r\n        }\r\n    },\r\n    methods:{\r\n      getPeriodos(){\r\n        let me = this\r\n        this.$http.get(this.$server_url+'get_periodos_activos')\r\n        .then(res => {\r\n            me.periodos = res.data\r\n        })\r\n      },\r\n      getAgendas(tipo_filtro){\r\n        let me = this\r\n        me.agendas = []\r\n        me.agendasTemporales = []\r\n        let periodo = 'null'\r\n        if( me.periodo_selected.idperiodoescolar ){\r\n          periodo = me.periodo_selected.idperiodoescolar\r\n        }\r\n        switch (tipo_filtro) {\r\n          case 1: //por fechas\r\n            periodo = 'null'\r\n            me.periodo_selected = \"\"\r\n            if( me.fecha_inicio == '' || me.fecha_fin == '' ){\r\n              me.$vs.notify({ text: 'Ingrese la fecha de inicio y fin para realizar la búsqueda.', color: 'warning', iconPack: 'feather', icon: 'icon-alert-triangle' })\r\n              return\r\n            }\r\n            break;\r\n          default:\r\n            me.fecha_inicio = 'null'\r\n            me.fecha_fin = 'null'\r\n            break;\r\n        }\r\n        const from = moment(me.fecha_inicio).format('YYYY-MM-DD')\r\n        const to = moment(me.fecha_fin).format('YYYY-MM-DD')\r\n        me.$vs.loading();\r\n        this.$http.get(this.$server_url + 'reporte_asesores_view/'+ from+'/'+ to+'/'+periodo)\r\n        .then(function (res) {\r\n            me.agendas = res.data.visitasInstitucion\r\n            me.agendasTemporales = res.data.visitasInstitucionTemporal\r\n            me.$vs.loading.close()\r\n            me.getEstadisticasInst(periodo, me.fecha_inicio, me.fecha_fin)\r\n        })\r\n        .catch(function (error){ me.$vs.loading.close() })\r\n      },\r\n      getEstadisticasInst(periodo, fecha_inicio, fecha_fin){\r\n        let me = this\r\n        me.barChart.series[0].data = []\r\n        me.barChart2.series[0].data = []\r\n        me.barChart.chartOptions.xaxis.categories = []\r\n        me.barChart2.chartOptions.xaxis.categories = []\r\n        const from = moment(me.fecha_inicio).format('YYYY-MM-DD')\r\n        const to = moment(me.fecha_fin).format('YYYY-MM-DD')\r\n        me.$vs.loading()\r\n        this.$http.get(this.$server_url + 'reporte_asesores_view/'+ from+'/'+ to+'/'+periodo)\r\n        .then(res => {\r\n            me.estadisticas = res.data.visitasInstitucion\r\n            me.estadisticasTemporales = res.data.visitasInstitucionTemporal\r\n            $.each(me.estadisticas, function(key, value){\r\n                me.barChart.series[0].data[key] = value.contador\r\n                me.barChart.chartOptions.xaxis.categories[key] = value.nombreInstitucion\r\n            });\r\n            $.each(me.estadisticasTemporales, function(key, value){\r\n                me.barChart2.series[0].data[key] = value.contador\r\n                me.barChart2.chartOptions.xaxis.categories[key] = value.nombreInstitucion\r\n            });\r\n            me.$vs.loading.close()\r\n        })\r\n      },\r\n      exportToExcel() {\r\n          let me = this\r\n          let headerVal = [ 'asesor','nombreInstitucion', 'contador'];\r\n          let headerTitle = [ 'asesor', 'Institucion', 'Visitas'];\r\n          import('@/vendor/Export2Excel').then(excel => {\r\n            const list = me.agendasTemporales\r\n            if(me.exportarR == 2){\r\n              me.list = me.agendasTemporales\r\n            }else{\r\n              me.list = me.agendas\r\n            }\r\n              const data = this.formatJson(headerVal, me.list)\r\n              excel.export_json_to_excel({\r\n                  header: headerTitle,\r\n                  data,\r\n                  filename: this.fileName,\r\n                  autoWidth: true,\r\n                  bookType: 'xls'\r\n              })\r\n          })\r\n      },\r\n      formatJson(filterVal, jsonData) {\r\n          return jsonData.map(v => filterVal.map(j => {\r\n              return v[j]\r\n          }))\r\n      },\r\n    }\r\n}\r\n</script>\r\n"]}]}