{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\estudiantes\\agregarTarea.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\estudiantes\\agregarTarea.vue","mtime":1712682815818},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nimport historicoMixin from \"@/mixins/historicomix\";\r\nimport vSelect from \"vue-select\";\r\nimport \"vue-select/dist/vue-select.css\";\r\nimport VueDocPreview from \"vue-doc-preview\";\r\nimport Vue from \"vue\";\r\nimport axios from \"axios\";\r\nimport vue2Dropzone from \"vue2-dropzone\";\r\nimport \"vue2-dropzone/dist/vue2Dropzone.min.css\";\r\nVue.use(axios);\r\n\r\nexport default {\r\n    mixins: [historicoMixin],\r\n    components: {\r\n        \"v-select\": vSelect,\r\n        vueDropzone: vue2Dropzone,\r\n        VueDocPreview,\r\n    },\r\n    data() {\r\n        return {\r\n            porcentaje: 0,\r\n            archivo: [],\r\n            asignaturas: [],\r\n            listaContenido: [],\r\n            file: [],\r\n            usuario: [],\r\n            miusuario:[],\r\n            idasignatura: \"\",\r\n            descripcion: \"\",\r\n            comentario_estudiante: '',\r\n            dropzoneOptions: {\r\n                url: this.$data_url+\"api/addTareaContenido\",\r\n                dictDefaultMessage: \"<i class='fa fa-cloud-upload'></i> Click o arrastra un archivo aquí.\",\r\n                chunking: true,\r\n                thumbnailWidth: 150,\r\n                maxFilesize: 200,\r\n                addRemoveLinks: true,\r\n                headers: {\r\n                    \"My-Awesome-Header\": \"header value\",\r\n                },\r\n            },\r\n            tarea: {},\r\n            limiteMegas: 30, //permitir maximo de megas\r\n            bytes: 1048576, //para calculo de megas\r\n            pesoArchivo: 0,\r\n            muyPesado: false,\r\n            msj: '',\r\n            msj1: '',\r\n        };\r\n    },\r\n    created() {\r\n        let me = this\r\n        this.usuario = JSON.parse(localStorage.getItem(\"usuario\"));\r\n        me.miusuario = this.usuario\r\n        this.tarea.nombre = localStorage.nombre;\r\n        this.tarea.descripcion = localStorage.descripcion;\r\n        this.tarea.comentario_estudiante = localStorage.comentario_estudiante;\r\n        this.tarea.fecha_inicio = localStorage.fecha_inicio;\r\n        this.tarea.fecha_final = localStorage.fecha_final;\r\n        this.tarea.url = localStorage.url;\r\n    },\r\n    mounted() {},\r\n    methods: {\r\n        guardarFile(file) {\r\n            let me = this;\r\n            me.file = file;\r\n        },\r\n        obtenerImagen(e) {\r\n            this.msj = '';\r\n            this.porcentaje = 0;\r\n            this.pesoArchivo = 0;\r\n            this.muyPesado = false;\r\n            let file = e.target.files[0];\r\n            this.file = file;\r\n            // verificar tamaño de archivo\r\n            this.pesoArchivo = (this.file.size / this.bytes).toFixed(2);\r\n            console.log(this.pesoArchivo)\r\n            if (this.pesoArchivo > this.limiteMegas) {\r\n                this.muyPesado = true;\r\n                this.msj = ' El archivo que está subiendo, excede el peso permitido, favor reduzca su peso, para continuar con el envío de su tarea.';\r\n            }\r\n        },\r\n        async guardar() {\r\n            let me = this;\r\n            if (me.muyPesado) {\r\n                me.$vs.notify({\r\n                    text: 'El archivo que intenta enviar es muy pesado, favor corrija antes de continuar.',\r\n                    color: 'danger',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-alert-triangle'\r\n                })\r\n            }\r\n\r\n            let comentarioEst;\r\n            if (me.comentario_estudiante === '' || me.comentario_estudiante === null || me.comentario_estudiante === 'null') {\r\n                comentarioEst = '--';\r\n            } else {\r\n                comentarioEst = me.comentario_estudiante;\r\n            }\r\n\r\n            me.$vs.loading({\r\n                color: \"#046AE7\",\r\n                text: me.porcentaje,\r\n            });\r\n            const config = {\r\n                onUploadProgress: function (progressEvent) {\r\n                    var percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total)\r\n                    me.porcentaje = percentCompleted;\r\n                    console.log(percentCompleted)\r\n                }\r\n            };\r\n            let h_idinstitucion = me.miusuario.institucion_idInstitucion;\r\n            let h_idusuario = me.miusuario.idusuario;\r\n            let h_idgrupo = me.miusuario.id_group;\r\n            let h_idasignatura = localStorage.idasignatura\r\n            let h_nombreasignatura = localStorage.nombreasignatura\r\n            let h_recursotipo = 11; //11 = tarea\r\n            let datoHistorico = {\r\n                'user_nombre': me.miusuario.nombres,\r\n                'user_apellido': me.miusuario.apellidos,\r\n                'user_email': me.miusuario.email,\r\n                'user_cedula': me.miusuario.cedula,\r\n                'recurso_accion': 'enviar tarea',\r\n                'recurso_tipo': 'tarea',\r\n                'recurso_nombre': localStorage.nombre,\r\n                'recurso_detalle': 'enviar tarea',\r\n                'curso':         localStorage.codigo\r\n            }\r\n            me.saveHistoricoVisitas(h_idinstitucion, h_idusuario, h_idgrupo, h_idasignatura,h_nombreasignatura,  h_recursotipo,datoHistorico)\r\n\r\n            let formData = new FormData();\r\n            formData.append(\"archivo\", me.file);\r\n            formData.append(\"idusuario\", me.usuario.idusuario);\r\n            formData.append(\"idcurso\", localStorage.idcurso);\r\n            formData.append(\"descripcion\", me.descripcion);\r\n            formData.append(\"comentario_estudiante\", comentarioEst);\r\n            formData.append(\"idtarea\", localStorage.getItem(\"idtarea\"));\r\n            axios\r\n                .post(this.$data_url+\"api/addTareaContenido\", formData, config)\r\n                .then(function (response) {\r\n                    me.file = \"\";\r\n                    me.$vs.loading.close();\r\n                    me.$router.push(\"/estudiante/curso/virtual\");\r\n                })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close();\r\n                    if (error.response.status == 422) {\r\n                        me.errors = error.response.data.errors;\r\n                    }\r\n                });\r\n\r\n        },\r\n    },\r\n};\r\n",{"version":3,"sources":["agregarTarea.vue"],"names":[],"mappings":";AA6EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"agregarTarea.vue","sourceRoot":"src/views/estudiantes","sourcesContent":["<template>\r\n<div class=\"vx-col w-full mt-4\">\r\n    <vx-card title=\"Enviar Tarea\" he>\r\n        <div class=\"vx-row mb-6\">\r\n            <div class=\"vx-col sm:w-1/3 w-full\">\r\n                <b>Nombre</b>\r\n            </div>\r\n            <div class=\"vx-col sm:w-2/3 w-full\">\r\n                <div v-if=\"tarea.nombre===null || tarea.nombre==='null'\">\r\n                    --\r\n                </div>\r\n                <a v-else :href=\"$data_url+'tareas/'+tarea.url\" target=\"_blank\">\r\n                    {{tarea.nombre}}\r\n                </a>\r\n            </div>\r\n        </div>\r\n        <div class=\"vx-row mb-6\">\r\n            <div class=\"vx-col sm:w-1/3 w-full\">\r\n                <b>Descripción</b>\r\n            </div>\r\n            <div class=\"vx-col sm:w-2/3 w-full\">\r\n                {{tarea.descripcion}}\r\n            </div>\r\n        </div>\r\n        <div class=\"vx-row mb-6\">\r\n            <div class=\"vx-col sm:w-1/3 w-full\">\r\n                <b>Fecha de inicial</b>\r\n            </div>\r\n            <div class=\"vx-col sm:w-2/3 w-full\">\r\n                {{tarea.fecha_inicio}}\r\n            </div>\r\n        </div>\r\n        <div class=\"vx-row mb-6\">\r\n            <div class=\"vx-col sm:w-1/3 w-full\">\r\n                <b>Fecha Final</b>\r\n            </div>\r\n            <div class=\"vx-col sm:w-2/3 w-full\">\r\n                {{tarea.fecha_final}}\r\n            </div>\r\n        </div>\r\n        <div class=\"vx-row mb-6\">\r\n            <div class=\"vx-col sm:w-1/3 w-full\">\r\n                <b>Adjuntar tarea</b>\r\n            </div>\r\n            <div class=\"vx-col sm:w-2/3 w-full\">\r\n                <vs-input v-if=\"porcentaje == 0\" type=\"file\" class=\"w-full\" icon-pack=\"feather\" icon=\"icon-img\" v-model=\"archivo\" icon-no-border @change=\"obtenerImagen\" download />\r\n                <div class=\"v-row text-left\" v-if=\"porcentaje>0\">\r\n                            <vs-progress style=\"height:25px\" :percent=\"porcentaje\" color=\"success\"> {{porcentaje}}% </vs-progress>\r\n                        </div><br>\r\n                <p class=\"text-danger\" v-if=\"msj\"> {{msj}} <br> El peso actual de su archivo es: <b>{{pesoArchivo}} mb. </b> </p>\r\n                <p> <small> Peso máximo permitido <b>{{limiteMegas}} mb</b> </small> </p>\r\n                <small>El nombre del archivo no debe contener tildes, \"ñ\" o signos especiales para que el docente lo reciba correctamente.</small>\r\n            </div>\r\n        </div>\r\n        <div class=\"vx-row mb-6\">\r\n            <div class=\"vx-col sm:w-1/3 w-full\">\r\n                <b>Comentario</b>\r\n            </div>\r\n            <div class=\"vx-col sm:w-2/3 w-full\">\r\n                <vs-textarea class=\"mt-8\" v-model=\"comentario_estudiante\" />\r\n                <p class=\"text-danger\"> {{msj1}} </p>\r\n\r\n            </div>\r\n        </div>\r\n        <div class=\"vx-row\">\r\n            <div class=\"vx-col sm:w-2/3 w-full ml-auto\">\r\n                <vs-button color=\"success\" type=\"border\" @click=\"guardar()\" class=\"mb-2\">Enviar</vs-button>\r\n                &nbsp;&nbsp;\r\n                &nbsp;&nbsp;\r\n                <vs-button color=\"danger\" type=\"border\" class=\"mb-2\" to=\"/estudiante/curso/virtual\">Cancelar</vs-button>\r\n            </div>\r\n        </div>\r\n    </vx-card>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport historicoMixin from \"@/mixins/historicomix\";\r\nimport vSelect from \"vue-select\";\r\nimport \"vue-select/dist/vue-select.css\";\r\nimport VueDocPreview from \"vue-doc-preview\";\r\nimport Vue from \"vue\";\r\nimport axios from \"axios\";\r\nimport vue2Dropzone from \"vue2-dropzone\";\r\nimport \"vue2-dropzone/dist/vue2Dropzone.min.css\";\r\nVue.use(axios);\r\n\r\nexport default {\r\n    mixins: [historicoMixin],\r\n    components: {\r\n        \"v-select\": vSelect,\r\n        vueDropzone: vue2Dropzone,\r\n        VueDocPreview,\r\n    },\r\n    data() {\r\n        return {\r\n            porcentaje: 0,\r\n            archivo: [],\r\n            asignaturas: [],\r\n            listaContenido: [],\r\n            file: [],\r\n            usuario: [],\r\n            miusuario:[],\r\n            idasignatura: \"\",\r\n            descripcion: \"\",\r\n            comentario_estudiante: '',\r\n            dropzoneOptions: {\r\n                url: this.$data_url+\"api/addTareaContenido\",\r\n                dictDefaultMessage: \"<i class='fa fa-cloud-upload'></i> Click o arrastra un archivo aquí.\",\r\n                chunking: true,\r\n                thumbnailWidth: 150,\r\n                maxFilesize: 200,\r\n                addRemoveLinks: true,\r\n                headers: {\r\n                    \"My-Awesome-Header\": \"header value\",\r\n                },\r\n            },\r\n            tarea: {},\r\n            limiteMegas: 30, //permitir maximo de megas\r\n            bytes: 1048576, //para calculo de megas\r\n            pesoArchivo: 0,\r\n            muyPesado: false,\r\n            msj: '',\r\n            msj1: '',\r\n        };\r\n    },\r\n    created() {\r\n        let me = this\r\n        this.usuario = JSON.parse(localStorage.getItem(\"usuario\"));\r\n        me.miusuario = this.usuario\r\n        this.tarea.nombre = localStorage.nombre;\r\n        this.tarea.descripcion = localStorage.descripcion;\r\n        this.tarea.comentario_estudiante = localStorage.comentario_estudiante;\r\n        this.tarea.fecha_inicio = localStorage.fecha_inicio;\r\n        this.tarea.fecha_final = localStorage.fecha_final;\r\n        this.tarea.url = localStorage.url;\r\n    },\r\n    mounted() {},\r\n    methods: {\r\n        guardarFile(file) {\r\n            let me = this;\r\n            me.file = file;\r\n        },\r\n        obtenerImagen(e) {\r\n            this.msj = '';\r\n            this.porcentaje = 0;\r\n            this.pesoArchivo = 0;\r\n            this.muyPesado = false;\r\n            let file = e.target.files[0];\r\n            this.file = file;\r\n            // verificar tamaño de archivo\r\n            this.pesoArchivo = (this.file.size / this.bytes).toFixed(2);\r\n            console.log(this.pesoArchivo)\r\n            if (this.pesoArchivo > this.limiteMegas) {\r\n                this.muyPesado = true;\r\n                this.msj = ' El archivo que está subiendo, excede el peso permitido, favor reduzca su peso, para continuar con el envío de su tarea.';\r\n            }\r\n        },\r\n        async guardar() {\r\n            let me = this;\r\n            if (me.muyPesado) {\r\n                me.$vs.notify({\r\n                    text: 'El archivo que intenta enviar es muy pesado, favor corrija antes de continuar.',\r\n                    color: 'danger',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-alert-triangle'\r\n                })\r\n            }\r\n\r\n            let comentarioEst;\r\n            if (me.comentario_estudiante === '' || me.comentario_estudiante === null || me.comentario_estudiante === 'null') {\r\n                comentarioEst = '--';\r\n            } else {\r\n                comentarioEst = me.comentario_estudiante;\r\n            }\r\n\r\n            me.$vs.loading({\r\n                color: \"#046AE7\",\r\n                text: me.porcentaje,\r\n            });\r\n            const config = {\r\n                onUploadProgress: function (progressEvent) {\r\n                    var percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total)\r\n                    me.porcentaje = percentCompleted;\r\n                    console.log(percentCompleted)\r\n                }\r\n            };\r\n            let h_idinstitucion = me.miusuario.institucion_idInstitucion;\r\n            let h_idusuario = me.miusuario.idusuario;\r\n            let h_idgrupo = me.miusuario.id_group;\r\n            let h_idasignatura = localStorage.idasignatura\r\n            let h_nombreasignatura = localStorage.nombreasignatura\r\n            let h_recursotipo = 11; //11 = tarea\r\n            let datoHistorico = {\r\n                'user_nombre': me.miusuario.nombres,\r\n                'user_apellido': me.miusuario.apellidos,\r\n                'user_email': me.miusuario.email,\r\n                'user_cedula': me.miusuario.cedula,\r\n                'recurso_accion': 'enviar tarea',\r\n                'recurso_tipo': 'tarea',\r\n                'recurso_nombre': localStorage.nombre,\r\n                'recurso_detalle': 'enviar tarea',\r\n                'curso':         localStorage.codigo\r\n            }\r\n            me.saveHistoricoVisitas(h_idinstitucion, h_idusuario, h_idgrupo, h_idasignatura,h_nombreasignatura,  h_recursotipo,datoHistorico)\r\n\r\n            let formData = new FormData();\r\n            formData.append(\"archivo\", me.file);\r\n            formData.append(\"idusuario\", me.usuario.idusuario);\r\n            formData.append(\"idcurso\", localStorage.idcurso);\r\n            formData.append(\"descripcion\", me.descripcion);\r\n            formData.append(\"comentario_estudiante\", comentarioEst);\r\n            formData.append(\"idtarea\", localStorage.getItem(\"idtarea\"));\r\n            axios\r\n                .post(this.$data_url+\"api/addTareaContenido\", formData, config)\r\n                .then(function (response) {\r\n                    me.file = \"\";\r\n                    me.$vs.loading.close();\r\n                    me.$router.push(\"/estudiante/curso/virtual\");\r\n                })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close();\r\n                    if (error.response.status == 422) {\r\n                        me.errors = error.response.data.errors;\r\n                    }\r\n                });\r\n\r\n        },\r\n    },\r\n};\r\n</script>\r\n"]}]}