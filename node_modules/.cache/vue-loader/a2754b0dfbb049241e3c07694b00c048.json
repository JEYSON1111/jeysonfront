{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\codigos\\components\\utils\\gestionCodigosLista.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\codigos\\components\\utils\\gestionCodigosLista.vue","mtime":1712682815663},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nimport ListadoDevolucionesCodigosVue from './ListadoDevolucionesCodigos.vue';\r\nimport historicoCodigosVue from '../../components/historicoCodigos.vue'\r\nexport default {\r\n    name: 'gestionCodigosLista',\r\n    props:{\r\n        arregloCodigos:{\r\n            type:Array,\r\n            default:[],\r\n        },\r\n        btnEditar:{\r\n            type:Number,\r\n            default:0,\r\n        },\r\n        btnEliminar:{\r\n            type:Number,\r\n            default:0,\r\n        },\r\n        btnEstudiante:{\r\n            type:Number,\r\n            default:0,\r\n        },\r\n        btnBloquear:{\r\n            type:Number,\r\n            default:0,\r\n        },\r\n        ifFechaEstudiante:{\r\n            type:Number,\r\n            default:0,\r\n        },\r\n        openModal:{\r\n            type:Number,\r\n            default:0,\r\n        },\r\n        btnAddStorage:{\r\n          type:Number,\r\n          default:0,\r\n        }\r\n    },\r\n    computed:{\r\n        SumaCodigosActivos(){\r\n            let me = this;\r\n            let datos       = me.arregloCodigos.filter(p => (p.prueba_diagnostica == 0));\r\n            let resultado   = datos.length\r\n            return resultado\r\n        },\r\n        SumaCodigosDiagnostico(){\r\n            let me = this;\r\n            let datos       = me.arregloCodigos.filter(p => (p.prueba_diagnostica == 1));\r\n            let resultado   = datos.length\r\n            return resultado\r\n        },\r\n    },\r\n    data() {\r\n        return {\r\n            usuario:[],\r\n            devoluciones:[],\r\n            popupReturns:false,\r\n            titleReturns:'',\r\n            //variables para el export a excel\r\n            activePrompt:false,\r\n            codigoSelected: [],\r\n            reportesActivo: 0,\r\n            fileName: null,\r\n            formats: ['xls', 'xlsx', 'csv', 'txt'],\r\n            cellAutoWidth: true,\r\n            selectedFormat: 'xlsx',\r\n            permisoRoot:false,\r\n            //fin variables para el export a excel\r\n            //variables para ver el historico\r\n            popupHistorico:false,\r\n            codigo:{}\r\n            //fin variables para ver el historico\r\n        };\r\n    },\r\n    components:{\r\n        ListadoDevolucionesCodigosVue,\r\n        historicoCodigosVue,\r\n    },\r\n    mounted() {\r\n        let me = this;\r\n        me.usuario = JSON.parse(localStorage.getItem(\"usuario\"))\r\n        me.getUserRoot()\r\n        // me.arregloCodigos.forEach(p => {\r\n        //   if(p.bc_estado == 1){\r\n        //     p.pruebas = \"good\"\r\n        //   }else{\r\n        //     p.pruebas = \"bad\"\r\n        //   }\r\n        // });\r\n    },\r\n    methods: {\r\n        getUserRoot() {\r\n            let me = this;\r\n            this.$http.get(this.$server_url+'permisos?permiso=yes&usuario_id='+me.usuario.idusuario)\r\n            .then(function (res) {\r\n                if(res.data.status == '1'){\r\n                    me.permisoRoot = true\r\n                }else{\r\n                    me.permisoRoot = false\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error + ' error');\r\n            })\r\n        },\r\n        openEditCodigo(tr){\r\n            let me = this;\r\n            let datos = {\r\n                \"codigosEdit\" : tr,\r\n                \"nuevo\":true,\r\n                \"editar\":1,\r\n                \"eliminar\":0,\r\n            }\r\n            me.$emit('crud',datos)\r\n        },\r\n        openConfirm(tr){\r\n            let me = this;\r\n            let datos = {\r\n                \"id\" : tr.codigo,\r\n                \"eliminar\":1,\r\n            }\r\n            me.$emit('crud',datos)\r\n        },\r\n        //methods to return codes\r\n        returnCodes(tr){\r\n            let me = this\r\n            me.titleReturns = \"Informacion de devoluciones del codigo \"+tr.codigo\r\n            me.$vs.loading();\r\n            this.$http.get(this.$server_url+'codigo/devoluciones/' + tr.codigo)\r\n              .then(res => {\r\n                me.$vs.loading.close();\r\n                me.devoluciones = res.data\r\n                me.popupReturns = true;\r\n            })\r\n            .catch(function(e){\r\n                me.$vs.loading.close();\r\n            });\r\n        },\r\n        editarCodigoEstudiante(tr){\r\n            let me = this;\r\n            let datos = {\r\n                \"info\" : tr,\r\n                \"tipo\":\"editar\",\r\n            }\r\n            me.$emit('crud',datos)\r\n        },\r\n        ConfirmCambiadoEstadoCodigo(tr,estado){\r\n            let me = this;\r\n            let datos = {\r\n                \"info\" : tr,\r\n                \"tipo\":\"bloquear\",\r\n                \"estado\":estado\r\n            }\r\n            me.$emit('crud',datos)\r\n        },\r\n       //METODOS PARA EXCEL\r\n       //para limipiar los campos del excel\r\n       clearFields() {\r\n            this.fileName = ''\r\n            this.cellAutoWidth = true\r\n            this.selectedFormat = 'xls'\r\n        },\r\n        //metodo par descargar el excel\r\n           exportToExcel() {\r\n            let headerTitle = ['codigo','Codigo union','Paquete','Devolucion','institucion estudiante','periodo estudiante',  'estudiante','cedula', 'estado','liquidacion','código de barras','bc_estado','venta estado','institucion barras','periodo barras','institucion lista','Tipo código'];\r\n            let headerVal = ['codigo','codigo_union','codigo_paquete', 'devolucionInstitucion','nombreInstitucion','periodo','estudiante','cedula', 'codigoEstado','liquidacion','status','barrasEstado','ventaEstado','institucionBarra','periodo_barras','InstitucionLista','tipoCodigo'];\r\n            let codigoSelectedMayus = this.arregloCodigos\r\n            for (var i = 0; i < codigoSelectedMayus.length; i++) {\r\n                for (var key in codigoSelectedMayus[i]) {\r\n                    if (typeof codigoSelectedMayus[i][key] == \"string\") {\r\n                        codigoSelectedMayus[i][key] = codigoSelectedMayus[i][key].toUpperCase();\r\n                    }\r\n                }\r\n            }\r\n            import('@/vendor/Export2Excel').then(excel => {\r\n                const list = codigoSelectedMayus\r\n                const data = this.formatJson(headerVal, list)\r\n                var nombrefile = \"\"\r\n                if(this.openModal == 1){\r\n                    nombrefile = this.fileName\r\n                }else{\r\n                    nombrefile = \"Reporte de codigo\"\r\n                }\r\n                excel.export_json_to_excel({\r\n                    header: headerTitle,\r\n                    data,\r\n                    filename: nombrefile,\r\n                    autoWidth: this.cellAutoWidth,\r\n                    bookType: this.selectedFormat\r\n                })\r\n                this.clearFields()\r\n                this.guardarActivo = '';\r\n                this.generarActivo = ' ';\r\n                this.textAlertCant = '';\r\n                this.cantidad = '';\r\n                this.codigoSelected = [];\r\n            })\r\n        },\r\n        formatJson(filterVal, jsonData) {\r\n            return jsonData.map(v => filterVal.map(j => {\r\n                return v[j]\r\n            }))\r\n        },\r\n    },\r\n};\r\n",{"version":3,"sources":["gestionCodigosLista.vue"],"names":[],"mappings":";AA8MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"gestionCodigosLista.vue","sourceRoot":"src/views/codigos/components/utils","sourcesContent":["<template>\r\n    <div>\r\n        <vs-table max-items=\"25\" search stripe pagination :data=\"arregloCodigos\">\r\n            <template slot=\"header\">\r\n                <div class=\"flex\">\r\n                    <small class=\"font-bold\">Cantidad: {{ arregloCodigos.length }}</small>\r\n                    <div v-if=\"openModal == 1\">\r\n                        <vs-button color=\"warning\" v-if=\"usuario.id_group == 1 || usuario.id_group == 17 || usuario.id_group == 27 || usuario.id_group == 11\" class=\"ml-3\" style=\"margin-top:-5px;\" @click=\"activePrompt = true\">Exportar</vs-button>\r\n                    </div>\r\n                    <div v-else>\r\n                        <vs-button color=\"warning\" v-if=\"usuario.id_group == 1 || usuario.id_group == 17 || usuario.id_group == 27 || usuario.idusuario == 553 || usuario.idusuario == 45550\"  class=\"ml-3\" style=\"margin-top:-5px;\" @click=\"exportToExcel()\">Exportar</vs-button>\r\n                    </div>\r\n                    <div class=\"flex ml-2\">\r\n                        <span style=\"background:#1EC09B;color:white;padding:10px;border-radius: 5px;margin-top: -5px;\"><b>Códigos Activación: {{ SumaCodigosActivos }}</b></span>\r\n                        <span class=\"ml-2\" style=\"background:#1E4DC0;color:white;padding:10px;border-radius: 5px;margin-top: -5px;\"><b>Códigos Diagnóstico: {{ SumaCodigosDiagnostico }}</b></span>\r\n                    </div>\r\n                </div>\r\n            </template>\r\n            <template slot=\"thead\">\r\n              <vs-th sort-key=\"codigo\">Código</vs-th>\r\n              <vs-th sort-key=\"estudiante\">Estudiante</vs-th>\r\n              <vs-th sort-key=\"nombreInstitucion\">Información (Codigo de barras)</vs-th>\r\n              <vs-th sort-key=\"codigo\">Verificaciones</vs-th>\r\n              <vs-th sort-key=\"codigo\">Acciones</vs-th>\r\n            </template>\r\n            <template slot-scope=\"{data}\">\r\n              <vs-tr :data=\"tr\" :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                <vs-td :data=\"data[indextr].codigo\">\r\n                    <p v-if=\"tr.prueba_diagnostica == '1'\" class=\"font-bold text-warning\">Código Diagnóstica:</p>\r\n                    <p v-else class=\"font-bold\">Código Activación:</p>\r\n                    {{ data[indextr].codigo }}\r\n                    <p v-if=\"tr.prueba_diagnostica == '1'\" class=\"font-bold\">Código Activación:</p>\r\n                    <p v-else class=\"font-bold text-warning\">Código Diagnóstica:</p>\r\n                    {{ data[indextr].codigo_union }}\r\n                    <p v-if=\"tr.codigo_paquete\" style=\"font-weight:bold;\">Paquete Código:</p>\r\n                    {{ data[indextr].codigo_paquete }}\r\n                    <p v-if=\"tr.codigo_paquete\" style=\"font-weight:bold;\">Fecha registro paquete:</p>\r\n                    {{ data[indextr].fecha_registro_paquete }}\r\n                    <p style=\"font-weight:bold;\">Libro:</p>\r\n                    <span>{{ data[indextr].book }}</span>\r\n                    <p style=\"font-weight:bold;\">Serie:</p>\r\n                    <span>{{ data[indextr].serie }}</span>\r\n                    <p style=\"font-weight:bold;\">Fecha create:</p>\r\n                    <span>{{ data[indextr].created_at }}</span>\r\n                    <p style=\"font-weight:bold;\">Creador:</p>\r\n                    <span>{{ data[indextr].creador }}</span>\r\n                    <p style=\"font-weight:bold;\">Contrato:</p>\r\n                    <span>{{ data[indextr].contrato }}</span>\r\n                    <div v-if=\"(usuario.id_group == 1 || usuario.id_group == 17 || usuario.id_group == 27 ||  usuario.idusuario == 553 || usuario.idusuario == 45550)\">\r\n                        <!-- <p  class=\"font-bold\">Cantidad devoluciones:</p>\r\n                        <span>{{ tr.devolucion }}</span> -->\r\n                        <p  class=\"font-bold\">Ultima Devolucion:</p>\r\n                        <span>{{ tr.devolucionInstitucion }}</span>\r\n                    </div>\r\n                    <div v-if=\"tr.estado == '2'\">\r\n                        <vs-chip color=\"danger\">Bloqueado</vs-chip>\r\n                    </div>\r\n                    <div v-else>\r\n                        <vs-chip color=\"success\">Activo</vs-chip>\r\n                    </div>\r\n                    <div v-if=\"(usuario.id_group == 1 || usuario.id_group == 17 || usuario.id_group == 27 || usuario.idusuario == 553 || usuario.idusuario == 45550)\">\r\n                        <vs-divider ></vs-divider>\r\n                        <div class=\"flex\">\r\n                            <vs-button color=\"primary\" v-if=\"tr.devolucion > 0\" icon=\"info\" type=\"filled\" @click=\"returnCodes(tr);\">\r\n                                Ver devolución\r\n                            </vs-button>\r\n                            <vs-button color=\"dark\" class=\"ml-2\" icon-pack=\"feather\" icon=\"icon-bar-chart-2\" type=\"filled\" @click=\"codigo =tr;popupHistorico = true;\">\r\n                                Ver Historico\r\n                            </vs-button>\r\n                        </div>\r\n                    </div>\r\n                </vs-td>\r\n                <vs-td :data=\"data[indextr].estudiante\" >\r\n                    <p style=\"font-weight:bold;\">Nombres:</p>\r\n                    <p style=\"font-size:12px;letter-spacing:1px;\">{{ data[indextr].estudiante }}</p>\r\n                    <p style=\"font-weight:bold;\">Email:</p>\r\n                    <span>\r\n                        {{ data[indextr].email }}\r\n                    </span>\r\n                    <p style=\"font-weight:bold;\">Cedula:</p>\r\n                    <span>{{ data[indextr].cedula }}</span>\r\n                    <p v-if=\"ifFechaEstudiante == 1\" style=\"font-weight:bold;\">Fecha registro:</p>\r\n                    <span v-if=\"ifFechaEstudiante == 1\">{{ data[indextr].fecha_registro }}</span>\r\n                    <p style=\"font-weight:bold;\">Institución:</p>\r\n                    <span>{{ data[indextr].nombreInstitucion }}</span>\r\n                    <p style=\"font-weight:bold;\">Periodo:</p>\r\n                    <span>{{ data[indextr].periodo }}</span>\r\n                </vs-td>\r\n                <vs-td :data=\"data[indextr].barrasEstado\">\r\n                    <p style=\"font-weight:bold;\">Código de barras:</p>\r\n                    <span style=\"font-weight: bold;\" class=\"text-warning\">{{tr.status}}</span>\r\n                    <p style=\"font-weight:bold;\">contador:</p>\r\n                    <span>{{ data[indextr].contador }}</span>\r\n                    <!-- <span v-if=\"tr.contador > 1\">{{ data[indextr].contador }}</span> -->\r\n                    <p style=\"font-weight:bold;\">bc_estado:</p>\r\n                    <span v-if=\"tr.bc_estado == 2\" class=\"text-success font-semibold\">{{tr.barrasEstado}}</span>\r\n                    <span v-else>{{tr.barrasEstado}}</span>\r\n                    <p style=\"font-weight:bold;\">bc_institucion:</p>\r\n                    <span>{{tr.institucionBarra}}</span>\r\n                    <p style=\"font-weight:bold;\">bc_periodo:</p>\r\n                    <span>{{tr.periodo_barras}}</span>\r\n                    <p style=\"font-weight:bold;\">bc_fecha_ingreso:</p>\r\n                    <span>{{tr.bc_fecha_ingreso}}</span>\r\n                    <p style=\"font-weight:bold;\">venta_estado:</p>\r\n                    <p v-if=\"tr.ventaEstado\" style=\"background-color: #47BFF3;width: 120px;color:white;border-radius: 5px;border: none;padding: 2px;text-align: center;\">{{ data[indextr].ventaEstado }}</p>\r\n                    <p class=\"font-bold\">Institucion lista:</p>\r\n                    <span>{{ tr.InstitucionLista }}</span>\r\n                    <p>\r\n                        <vs-chip color=\"success\" v-if=\"tr.estado_liquidacion == '1'\">\r\n                            Por liquidarse\r\n                        </vs-chip>\r\n                        <vs-chip :color=\"tr.liquidado_regalado == 1 ? 'danger':'warning'\" v-if=\"tr.estado_liquidacion == '2'\">\r\n                            <p v-if=\"tr.liquidado_regalado == 1\">\r\n                                Regalado liquidado\r\n                            </p>\r\n                            <p v-else>\r\n                                Regalado sin liquidar\r\n                            </p>\r\n                        </vs-chip>\r\n                        <vs-chip color=\"danger\" v-else-if=\"tr.estado_liquidacion == '0'\">\r\n                            Liquidado\r\n                        </vs-chip>\r\n                        <vs-chip color=\"danger\" v-if=\"tr.estado_liquidacion == '3' && (permisoRoot || usuario.id_group == 17 || usuario.id_group == 27)\">\r\n                            DEVUELTO\r\n                        </vs-chip>\r\n                        <vs-chip color=\"danger\" v-if=\"tr.estado_liquidacion == '4'\">\r\n                          CÓDIGO GUIA\r\n                      </vs-chip>\r\n                    </p>\r\n                    <p class=\"mt-1\">\r\n                    <vs-chip color=\"#4C438B\" v-if=\"tr.prueba_diagnostica == '1'\">\r\n                      Código diagnostico\r\n                    </vs-chip>\r\n                    <vs-chip color=\"#438B86\" v-if=\"tr.prueba_diagnostica == '0'\">\r\n                      Código Activación\r\n                    </vs-chip>\r\n                    </p>\r\n                    <p class=\"mt-1\">\r\n                    <vs-chip color=\"#284B09\" v-if=\"tr.porcentaje_descuento > '0'\">\r\n                      Descuento% {{ tr.porcentaje_descuento }}\r\n                    </vs-chip>\r\n                    </p>\r\n                    <p class=\"mt-1\">\r\n                        <vs-chip color=\"#0E8AB3\" v-if=\"tr.factura\">\r\n                        Factura # {{ tr.factura }}\r\n                        </vs-chip>\r\n                    </p>\r\n                </vs-td>\r\n                <vs-td>\r\n                    <span style=\" font-weight:600; \">\r\n                        <vs-chip color=\"primary\" v-if=\"tr.verif1 >0\">Verificación Nº 1 <span class=\"ml-3\" v-if=\"permisoRoot\"># {{tr.verif1}}</span></vs-chip>\r\n                        <vs-chip color=\"primary\" v-if=\"tr.verif2 >0\">Verificación Nº 2 <span class=\"ml-3\" v-if=\"permisoRoot\"># {{tr.verif2}}</span></vs-chip>\r\n                        <vs-chip color=\"primary\" v-if=\"tr.verif3 >0\">Verificación Nº 3 <span class=\"ml-3\" v-if=\"permisoRoot\"># {{tr.verif3}}</span></vs-chip>\r\n                        <vs-chip color=\"primary\" v-if=\"tr.verif4 >0\">Verificación Nº 4 <span class=\"ml-3\" v-if=\"permisoRoot\"># {{tr.verif4}}</span></vs-chip>\r\n                        <vs-chip color=\"primary\" v-if=\"tr.verif5 >0\">Verificación Nº 5 <span class=\"ml-3\" v-if=\"permisoRoot\"># {{tr.verif5}}</span></vs-chip>\r\n                        <vs-chip color=\"primary\" v-if=\"tr.verif6 >0\">Verificación Nº 6 <span class=\"ml-3\" v-if=\"permisoRoot\"># {{tr.verif6}}</span></vs-chip>\r\n                        <vs-chip color=\"primary\" v-if=\"tr.verif7 >0\">Verificación Nº 7 <span class=\"ml-3\" v-if=\"permisoRoot\"># {{tr.verif7}}</span></vs-chip>\r\n                        <vs-chip color=\"primary\" v-if=\"tr.verif8 >0\">Verificación Nº 8 <span class=\"ml-3\" v-if=\"permisoRoot\"># {{tr.verif8}}</span></vs-chip>\r\n                        <vs-chip color=\"primary\" v-if=\"tr.verif9 >0\">Verificación Nº 9 <span class=\"ml-3\" v-if=\"permisoRoot\"># {{tr.verif9}}</span></vs-chip>\r\n                        <vs-chip color=\"primary\" v-if=\"tr.verif10 >0\">Verificación Nº 10<span class=\"ml-3\" v-if=\"permisoRoot\"># {{tr.verif10}}</span></vs-chip>\r\n                    </span>\r\n                </vs-td>\r\n                <vs-td class=\"flex\">\r\n                    <vx-tooltip class=\"ml-3\" style=\"display: inline-block;\" text=\"Editar\" position=\"top\" color=\"success\">\r\n                        <vs-button size=\"small\" v-if=\"btnEditar == 1\" class=\"modal-default-button\" color=\"success\" @click=\"openEditCodigo(tr)\" type=\"line\" icon-pack=\"feather\" icon=\"icon-edit\">\r\n                        </vs-button>\r\n                    </vx-tooltip>\r\n                    <vx-tooltip class=\"ml-3\" style=\"display: inline-block;\" text=\"Eliminar\" position=\"top\" color=\"warning\">\r\n                        <vs-button size=\"small\" v-if=\"permisoRoot && (btnEliminar == 1)\" class=\"modal-default-button\" color=\"danger\" @click=\"openConfirm(data[indextr])\" type=\"line\" icon-pack=\"feather\" icon=\"icon-trash\">\r\n                        </vs-button>\r\n                    </vx-tooltip>\r\n                    <vx-tooltip class=\"ml-3\" style=\"display: inline-block;\" text=\"Cambiar estudiante\" position=\"top\" color=\"warning\">\r\n                          <vs-button v-if=\"permisoRoot && (btnEstudiante == 1)\" radius color=\"success\" type=\"line\" icon-pack=\"feather\" icon=\"icon-search\" @click=\"editarCodigoEstudiante(data[indextr]);\" size=\"small\"></vs-button>\r\n                    </vx-tooltip>\r\n                    <vx-tooltip style=\"display:inline-block\" color=\"danger\" text=\"Bloquear código\">\r\n                        <vs-button  v-if=\"(data[indextr].estado == 0) && (btnBloquear == 1) && (usuario.id_group==1)\" color=\"danger\" type=\"line\" icon-pack=\"feather\" icon=\"icon-x-circle\" @click=\"ConfirmCambiadoEstadoCodigo(data[indextr], 2)\" size=\"small\"></vs-button>\r\n                    </vx-tooltip>\r\n                    <vx-tooltip style=\"display:inline-block\" color=\"warning\" text=\"Desbloquear código\">\r\n                        <vs-button v-if=\"(data[indextr].estado == 2) && (btnBloquear == 1) && (usuario.id_group==1)\" color=\"warning\" type=\"line\" icon-pack=\"feather\" icon=\"icon-check\" @click=\"ConfirmCambiadoEstadoCodigo(data[indextr], 0)\" size=\"small\"></vs-button>\r\n                    </vx-tooltip>\r\n                    <vx-tooltip style=\"display:inline-block\" color=\"warning\" text=\"Añadir a storage\">\r\n                      <vs-button v-if=\"btnAddStorage == 1 && (usuario.id_group==1)\" color=\"warning\" type=\"line\" radius icon-pack=\"feather\" icon=\"icon-archive\" @click=\"$emit('changeAddStorage',tr)\" size=\"large\"></vs-button>\r\n                    </vx-tooltip>\r\n                </vs-td>\r\n              </vs-tr>\r\n            </template>\r\n        </vs-table>\r\n        <!--MODAL PARA EXPORTAR A EXCEL-->\r\n        <vs-prompt title=\"Exportar a Excel\" class=\"export-options\" @cancle=\"clearFields\" @accept=\"exportToExcel\" accept-text=\"Exportar\" @close=\"clearFields\" :active.sync=\"activePrompt\">\r\n            <vs-alert class=\"mb-3\" color=\"danger\" icon-pack=\"feather\" icon=\"icon-info\">\r\n                <span>Recuerde <b>seleccionar</b> los códigos que desea exportar.</span>\r\n            </vs-alert>\r\n            <vs-input v-model=\"fileName\" placeholder=\"Ingrese el nombre del archivo\" class=\"w-full\" />\r\n            <v-select v-model=\"selectedFormat\" :options=\"formats\" class=\"my-4\" />\r\n        </vs-prompt>\r\n        <!--MODAL PARA VER LA DEVOLUCION-->\r\n        <vs-popup class=\"holamundo\" fullscreen :title=\"titleReturns\" :active.sync=\"popupReturns\">\r\n            <ListadoDevolucionesCodigosVue v-if=\"popupReturns\" :devoluciones=\"devoluciones\"/>\r\n        </vs-popup>\r\n        <!--MODAL PARA VER EL HISTORICO-->\r\n        <vs-popup class=\"holamundo\" fullscreen :title=\"'Ver historico del código ' +codigo.codigo\" :active.sync=\"popupHistorico\">\r\n            <historicoCodigosVue v-if=\"popupHistorico\" :codigo=\"codigo\"/>\r\n        </vs-popup>\r\n    </div>\r\n</template>\r\n<script>\r\nimport ListadoDevolucionesCodigosVue from './ListadoDevolucionesCodigos.vue';\r\nimport historicoCodigosVue from '../../components/historicoCodigos.vue'\r\nexport default {\r\n    name: 'gestionCodigosLista',\r\n    props:{\r\n        arregloCodigos:{\r\n            type:Array,\r\n            default:[],\r\n        },\r\n        btnEditar:{\r\n            type:Number,\r\n            default:0,\r\n        },\r\n        btnEliminar:{\r\n            type:Number,\r\n            default:0,\r\n        },\r\n        btnEstudiante:{\r\n            type:Number,\r\n            default:0,\r\n        },\r\n        btnBloquear:{\r\n            type:Number,\r\n            default:0,\r\n        },\r\n        ifFechaEstudiante:{\r\n            type:Number,\r\n            default:0,\r\n        },\r\n        openModal:{\r\n            type:Number,\r\n            default:0,\r\n        },\r\n        btnAddStorage:{\r\n          type:Number,\r\n          default:0,\r\n        }\r\n    },\r\n    computed:{\r\n        SumaCodigosActivos(){\r\n            let me = this;\r\n            let datos       = me.arregloCodigos.filter(p => (p.prueba_diagnostica == 0));\r\n            let resultado   = datos.length\r\n            return resultado\r\n        },\r\n        SumaCodigosDiagnostico(){\r\n            let me = this;\r\n            let datos       = me.arregloCodigos.filter(p => (p.prueba_diagnostica == 1));\r\n            let resultado   = datos.length\r\n            return resultado\r\n        },\r\n    },\r\n    data() {\r\n        return {\r\n            usuario:[],\r\n            devoluciones:[],\r\n            popupReturns:false,\r\n            titleReturns:'',\r\n            //variables para el export a excel\r\n            activePrompt:false,\r\n            codigoSelected: [],\r\n            reportesActivo: 0,\r\n            fileName: null,\r\n            formats: ['xls', 'xlsx', 'csv', 'txt'],\r\n            cellAutoWidth: true,\r\n            selectedFormat: 'xlsx',\r\n            permisoRoot:false,\r\n            //fin variables para el export a excel\r\n            //variables para ver el historico\r\n            popupHistorico:false,\r\n            codigo:{}\r\n            //fin variables para ver el historico\r\n        };\r\n    },\r\n    components:{\r\n        ListadoDevolucionesCodigosVue,\r\n        historicoCodigosVue,\r\n    },\r\n    mounted() {\r\n        let me = this;\r\n        me.usuario = JSON.parse(localStorage.getItem(\"usuario\"))\r\n        me.getUserRoot()\r\n        // me.arregloCodigos.forEach(p => {\r\n        //   if(p.bc_estado == 1){\r\n        //     p.pruebas = \"good\"\r\n        //   }else{\r\n        //     p.pruebas = \"bad\"\r\n        //   }\r\n        // });\r\n    },\r\n    methods: {\r\n        getUserRoot() {\r\n            let me = this;\r\n            this.$http.get(this.$server_url+'permisos?permiso=yes&usuario_id='+me.usuario.idusuario)\r\n            .then(function (res) {\r\n                if(res.data.status == '1'){\r\n                    me.permisoRoot = true\r\n                }else{\r\n                    me.permisoRoot = false\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error + ' error');\r\n            })\r\n        },\r\n        openEditCodigo(tr){\r\n            let me = this;\r\n            let datos = {\r\n                \"codigosEdit\" : tr,\r\n                \"nuevo\":true,\r\n                \"editar\":1,\r\n                \"eliminar\":0,\r\n            }\r\n            me.$emit('crud',datos)\r\n        },\r\n        openConfirm(tr){\r\n            let me = this;\r\n            let datos = {\r\n                \"id\" : tr.codigo,\r\n                \"eliminar\":1,\r\n            }\r\n            me.$emit('crud',datos)\r\n        },\r\n        //methods to return codes\r\n        returnCodes(tr){\r\n            let me = this\r\n            me.titleReturns = \"Informacion de devoluciones del codigo \"+tr.codigo\r\n            me.$vs.loading();\r\n            this.$http.get(this.$server_url+'codigo/devoluciones/' + tr.codigo)\r\n              .then(res => {\r\n                me.$vs.loading.close();\r\n                me.devoluciones = res.data\r\n                me.popupReturns = true;\r\n            })\r\n            .catch(function(e){\r\n                me.$vs.loading.close();\r\n            });\r\n        },\r\n        editarCodigoEstudiante(tr){\r\n            let me = this;\r\n            let datos = {\r\n                \"info\" : tr,\r\n                \"tipo\":\"editar\",\r\n            }\r\n            me.$emit('crud',datos)\r\n        },\r\n        ConfirmCambiadoEstadoCodigo(tr,estado){\r\n            let me = this;\r\n            let datos = {\r\n                \"info\" : tr,\r\n                \"tipo\":\"bloquear\",\r\n                \"estado\":estado\r\n            }\r\n            me.$emit('crud',datos)\r\n        },\r\n       //METODOS PARA EXCEL\r\n       //para limipiar los campos del excel\r\n       clearFields() {\r\n            this.fileName = ''\r\n            this.cellAutoWidth = true\r\n            this.selectedFormat = 'xls'\r\n        },\r\n        //metodo par descargar el excel\r\n           exportToExcel() {\r\n            let headerTitle = ['codigo','Codigo union','Paquete','Devolucion','institucion estudiante','periodo estudiante',  'estudiante','cedula', 'estado','liquidacion','código de barras','bc_estado','venta estado','institucion barras','periodo barras','institucion lista','Tipo código'];\r\n            let headerVal = ['codigo','codigo_union','codigo_paquete', 'devolucionInstitucion','nombreInstitucion','periodo','estudiante','cedula', 'codigoEstado','liquidacion','status','barrasEstado','ventaEstado','institucionBarra','periodo_barras','InstitucionLista','tipoCodigo'];\r\n            let codigoSelectedMayus = this.arregloCodigos\r\n            for (var i = 0; i < codigoSelectedMayus.length; i++) {\r\n                for (var key in codigoSelectedMayus[i]) {\r\n                    if (typeof codigoSelectedMayus[i][key] == \"string\") {\r\n                        codigoSelectedMayus[i][key] = codigoSelectedMayus[i][key].toUpperCase();\r\n                    }\r\n                }\r\n            }\r\n            import('@/vendor/Export2Excel').then(excel => {\r\n                const list = codigoSelectedMayus\r\n                const data = this.formatJson(headerVal, list)\r\n                var nombrefile = \"\"\r\n                if(this.openModal == 1){\r\n                    nombrefile = this.fileName\r\n                }else{\r\n                    nombrefile = \"Reporte de codigo\"\r\n                }\r\n                excel.export_json_to_excel({\r\n                    header: headerTitle,\r\n                    data,\r\n                    filename: nombrefile,\r\n                    autoWidth: this.cellAutoWidth,\r\n                    bookType: this.selectedFormat\r\n                })\r\n                this.clearFields()\r\n                this.guardarActivo = '';\r\n                this.generarActivo = ' ';\r\n                this.textAlertCant = '';\r\n                this.cantidad = '';\r\n                this.codigoSelected = [];\r\n            })\r\n        },\r\n        formatJson(filterVal, jsonData) {\r\n            return jsonData.map(v => filterVal.map(j => {\r\n                return v[j]\r\n            }))\r\n        },\r\n    },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n\r\n</style>\r\n"]}]}