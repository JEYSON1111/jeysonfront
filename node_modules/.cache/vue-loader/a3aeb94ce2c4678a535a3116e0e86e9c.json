{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\asesor\\componentes\\agenda_asesor_capacitaciones.vue?vue&type=style&index=0&id=73b13224&lang=scss","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\asesor\\componentes\\agenda_asesor_capacitaciones.vue","mtime":1712682815521},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\n@import \"@/assets/scss/vuexy/apps/simple-calendar.scss\";\r\n",{"version":3,"sources":["agenda_asesor_capacitaciones.vue"],"names":[],"mappings":";AAqqCA","file":"agenda_asesor_capacitaciones.vue","sourceRoot":"src/views/asesor/componentes","sourcesContent":["<template>\r\n  <div>\r\n    <div style=\"display:flex;\">\r\n      <vs-button color=\"warning\" class=\"ml-5 mt-2\" @click=\"getFiltroporInstitucion()\" icon=\"search\" type=\"filled\">Ver\r\n        capacitaciones por institución</vs-button>\r\n      <vs-button color=\"success\" class=\"ml-5 mt-2\" @click=\"ListadoSolicitudes()\" icon=\"description\"\r\n        type=\"filled\">Solicitudes de temas</vs-button>\r\n    </div>\r\n    <div id=\"simple-calendar-app\">\r\n      <div class=\"vx-card no-scroll-content\" style=\"height: 100vh;\">\r\n        <calendar-view ref=\"calendar\" :displayPeriodUom=\"calendarView\" :show-date=\"showDate\"\r\n          :events=\"simpleCalendarEvents\" :eventTop=\"windowWidth <= 400 ? '2rem' : '3rem'\" eventBorderHeight=\"0px\"\r\n          eventContentHeight=\"1.65rem\" class=\"theme-default\" @click-date=\"openAddNewEvent\" @click-event=\"openEditEvent\">\r\n          <div slot=\"header\" class=\"mb-4\">\r\n            <div class=\"vx-row no-gutter\">\r\n              <!-- Month Name -->\r\n              <div class=\"vx-col w-1/3 items-center sm:flex hidden\">\r\n                <!-- Add new event button -->\r\n                <vs-button icon-pack=\"feather\" class=\"mr-2\" color=\"dark\"\r\n                  style=\"padding: 7px 10px 7px 10px; font-size: 14px;\" icon=\"icon-plus\"\r\n                  @click=\"promptAddNewEvent(new Date())\">Solicitar Capacitación</vs-button>\r\n                <vs-button color=\"dark\" type=\"border\" style=\"padding: 7px 10px 7px 10px; font-size: 14px;\"\r\n                  @click=\"$router.go()\">Hoy</vs-button>\r\n              </div>\r\n              <!-- Current Month -->\r\n              <div class=\"vx-col sm:w-1/3 w-full sm:my-0 my-3 flex sm:justify-end justify-center order-last\">\r\n                <div class=\"flex items-center\">\r\n                  <feather-icon :icon=\"$vs.rtl ? 'ChevronRightIcon' : 'ChevronLeftIcon'\" @click=\"updateMonth(-1)\"\r\n                    svgClasses=\"w-5 h-5 m-1\" class=\"cursor-pointer bg-primary text-white rounded-full\" />\r\n\r\n                  <span class=\"mx-3 text-xl font-medium whitespace-no-wrap\">{{ showDate.toString().substring(0, 16)\r\n                  }}</span>\r\n\r\n                  <feather-icon :icon=\"$vs.rtl ? 'ChevronLeftIcon' : 'ChevronRightIcon'\" @click=\"updateMonth(1)\"\r\n                    svgClasses=\"w-5 h-5 m-1\" class=\"cursor-pointer bg-primary text-white rounded-full\" />\r\n                </div>\r\n              </div>\r\n              <div class=\"vx-col sm:w-1/3 w-full flex justify-center\">\r\n                <template v-for=\"(view, index) in calendarViewTypes\">\r\n                  <vs-button v-if=\"calendarView === view.val\" :key=\"String(view.val) + 'filled'\" type=\"filled\"\r\n                    style=\"padding: 7px 10px 7px 10px !important; font-size: 14px;\" class=\"p-3 md:px-8 md:py-3\"\r\n                    :class=\"{ 'border-l-0': index, 'rounded-r-none': calendarViewTypes.length !== index + 1 }\"\r\n                    @click=\"calendarView = view.val\">{{ view.label }}</vs-button>\r\n                  <vs-button v-else :key=\"String(view.val) + 'border'\" type=\"line\"\r\n                    style=\"padding: 7px 10px 7px 10px !important; font-size: 14px;\" class=\"p-3 md:px-8 md:py-3\"\r\n                    :class=\"{ 'border-l-0': index, 'rounded-r-none': calendarViewTypes.length !== index + 1 }\"\r\n                    @click=\"calendarView = view.val\">{{ view.label }}</vs-button>\r\n                </template>\r\n              </div>\r\n            </div>\r\n            <div class=\"vx-row sm:flex hidden mt-4\">\r\n              <div class=\"vx-col w-full flex\">\r\n                <!-- Labels -->\r\n                <!-- {{calendarLabels}} -->\r\n                <div class=\"flex flex-wrap sm:justify-start justify-center\">\r\n                  <div v-for=\"(label, index) in calendarLabels\" :key=\"index\" class=\"flex items-center mr-4 mb-2\">\r\n                    <div class=\"h-3 w-3 inline-block rounded-full mr-2\" :class=\"'bg-' + label.color\"></div>\r\n                    <span>{{ label.text }}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </calendar-view>\r\n      </div>\r\n      <!-- ADD EVENT -->\r\n      <vs-popup background-color=\"rgba(255,255,255,.6)\" fullscreen title=\"Capacitaciones\"\r\n        :active.sync=\"activePromptAddEvent\">\r\n        <!-- <vs-prompt class=\"calendar-event-dialog\" title=\"Capacitación\" accept-text=\"Guardar\" :cancel-text=\"label_cancel\" @accept=\"addEvent\" @cancel=\"removeEvent\" :active.sync=\"activePromptAddEvent\"> -->\r\n        <div class=\"calendar__label-container flex mb-6\" v-if=\"seleccionadoInsitucion == false\">\r\n          <vs-chip style=\"width: 100px;height: 30px;\" class=\"text-white\" :class=\"'bg-' + labelLocal.color\">{{\r\n            labelLocal.text }} </vs-chip>\r\n          <span v-if=\"estado == 0\" style=\"margin-top:2px;\">\r\n            <vs-chip color=\"danger\">Cancelada</vs-chip>\r\n          </span>\r\n          <span v-if=\"estado == 1\" style=\"margin-top:2px;\">\r\n            <vs-chip color=\"warning\">Pendiente</vs-chip>\r\n          </span>\r\n          <span v-if=\"estado == 2\" style=\"margin-top:2px;\">\r\n            <vs-chip color=\"success\">Realizada</vs-chip>\r\n          </span>\r\n          <vs-dropdown vs-custom-content vs-trigger-click class=\"ml-auto my-2 cursor-pointer\">\r\n            <feather-icon icon=\"TagIcon\" svgClasses=\"h-5 w-5\" class=\"cursor-pointer\" @click.prevent></feather-icon>\r\n\r\n            <vs-dropdown-menu style=\"z-index: 200001\">\r\n              <vs-dropdown-item v-for=\"(label, index) in calendarLabels\" :key=\"index\" @click=\"labelLocal = label\">\r\n                <div class=\"h-3 w-3 inline-block rounded-full mr-2\" :class=\"'bg-' + label.color\"></div>\r\n                <span>{{ label.text }}</span>\r\n              </vs-dropdown-item>\r\n            </vs-dropdown-menu>\r\n          </vs-dropdown>\r\n        </div>\r\n        <vs-row v-if=\"error == true\">\r\n          <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\">\r\n            <vs-alert active=\"true\" color=\"danger\">\r\n              {{ messageError }}\r\n            </vs-alert>\r\n          </vs-col>\r\n        </vs-row>\r\n        <vs-row v-if=\"seleccionadoInsitucion == false\" class=\"mt-2\">\r\n          <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\">\r\n            <p style=\"color:red;\" v-if=\"nombreInstitucion == '' || nombreInstitucion == null\">\r\n              Sin Institución\r\n            </p>\r\n            <vs-chip color=\"success\" v-else>\r\n              Institución {{ nombreInstitucion }}\r\n            </vs-chip>\r\n          </vs-col>\r\n        </vs-row>\r\n        <!--PARA LOS ASESORES AGENDA-->\r\n        <div v-if=\"usuario.id_group == 11\">\r\n          <vs-row v-if=\"seleccionadoInsitucion == true\" class=\"mt-3\">\r\n            <vs-col vs-type=\"flex\" vs-justify=\"left\" vs-align=\"left\" vs-w=\"6\">\r\n              <vs-button size=\"small\" color=\"success\" radius=\"\" @click=\"regresar()\" icon=\"reply\"\r\n                type=\"gradient\"></vs-button>\r\n              <vs-button size=\"small\" class=\"ml-3\" @click=\"popupAddNuevaInstitucion = true; activePromptAddEvent = false;\"\r\n                type=\"relief\">Añadir nueva institución</vs-button>\r\n            </vs-col>\r\n          </vs-row>\r\n\r\n          <vs-row>\r\n            <vs-col vs-type=\"flex\" vs-justify=\"left\" vs-align=\"left\" vs-w=\"10\">\r\n              <vs-button color=\"warning\" class=\"mt-2\" size=\"small\" v-if=\"seleccionadoInsitucion == false\"\r\n                @click=\"seleccionadoInsitucion = true; error = false\" type=\"relief\">\r\n                Asignar Institución\r\n              </vs-button>\r\n              <vs-button color=\"primary\" class=\"mt-2 ml-3\" icon=\"info\" v-if=\"seleccionadoInsitucion == false\" size=\"small\"\r\n                @click=\"seleccionadoInsitucion = true; getInstitucionCreadasByAsesor(); tipo = 2; getPeriodos()\"\r\n                type=\"relief\">Instituciones creadas por mi</vs-button>\r\n            </vs-col>\r\n          </vs-row>\r\n          <vs-row v-if=\"seleccionadoInsitucion == false\">\r\n            <vs-col vs-type=\"flex\" vs-justify=\"left\" vs-align=\"left\" vs-w=\"12\">\r\n            </vs-col>\r\n          </vs-row>\r\n          <div style=\"width:100%;display:flex;\" v-if=\"seleccionadoInsitucion == true && tipo == 1\" class=\"mt-5\">\r\n            <div style=\"width:80%;\">\r\n              <vs-input icon=\"search\" style=\"width:100%;\" placeholder=\"Search\" @keyup.enter=\"getInstitucion()\"\r\n                v-model=\"busquedaInstitucion\" />\r\n            </div>\r\n            <div style=\"width:20%;margin-left:15px;\">\r\n              <vs-button radius color=\"warning\" @click=\"getInstitucion()\" type=\"filled\" icon=\"search\"></vs-button>\r\n            </div>\r\n          </div>\r\n          <div v-if=\"instituciones.length > 0\">\r\n            <vs-table stripe max-items=\"5\" search pagination :data=\"instituciones\">\r\n              <template slot=\"header\">\r\n                <div class=\"vx-row\">\r\n                  <div class=\"vx-col w-full m-3\">\r\n                    Cantidad: {{ instituciones.length }}\r\n                  </div>\r\n                </div>\r\n              </template>\r\n              <template slot=\"thead\">\r\n                <vs-th sort-key=\"nombreInstitucion\">Institución</vs-th>\r\n                <vs-th sort-key=\"nombre\">Localidad</vs-th>\r\n                <vs-th sort-key=\"nombre\">Periodo</vs-th>\r\n                <vs-th>Acciones</vs-th>\r\n              </template>\r\n              <template slot-scope=\"{data}\">\r\n                <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                  <vs-td :data=\"data[indextr].nombreInstitucion\">\r\n                    {{ data[indextr].nombreInstitucion }}<br>\r\n                  </vs-td>\r\n                  <vs-td :data=\"data[indextr].nombreregion\">\r\n                    {{ data[indextr].nombreregion }} <br>\r\n                    <small>{{ data[indextr].ciudad }}</small>\r\n                  </vs-td>\r\n                  <vs-td :data=\"data[indextr].periodo\">\r\n                    {{ data[indextr].periodo }} <br>\r\n                    <small v-if=\"tr.statusPeriodo == 1\" class=\"text-success font-bold\">{{ tr.estadoPeriodo }}</small>\r\n                    <small v-else>{{ tr.estadoPeriodo }}</small>\r\n                  </vs-td>\r\n                  <vs-td>\r\n                    <div class=\"flex\">\r\n                      <vs-button size=\"small\" type=\"relief\" style=\"border-radius: 5px;\" icon-pack=\"feather\"\r\n                        icon=\"icon-bookmark\" class=\"mr-2\" color=\"primary\" @click=\"asginarInstitucion(tr)\">\r\n                        Asignar\r\n                      </vs-button>\r\n                    </div>\r\n                  </vs-td>\r\n                </vs-tr>\r\n              </template>\r\n            </vs-table>\r\n          </div>\r\n        </div>\r\n        <br />\r\n        <div v-if=\"seleccionadoInsitucion == false\">\r\n          <div style=\"display: flex;\">\r\n            <div>\r\n              <vs-button color=\"dark\" size=\"small\" class=\"mt-2\" type=\"line\"\r\n                @click=\"popupSolicitarTema = true; activePromptAddEvent = false\" icon=\"event_note\">Solicitar\r\n                tema</vs-button>\r\n            </div>\r\n            <div class=\"ml-5\">\r\n              <ul style=\"display:flex;\">\r\n                <li>\r\n                  <vs-radio color=\"primary\" v-model=\"tipoCapacitacion\" vs-name=\"radiosTipo\"\r\n                    vs-value=\"0\">Presencial</vs-radio>\r\n                </li>\r\n                <li class=\"ml-3\">\r\n                  <vs-radio color=\"success\" v-model=\"tipoCapacitacion\" vs-name=\"radiosTipo\"\r\n                    vs-value=\"1\">Virtual</vs-radio>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <br />\r\n          <span class=\"mt-5\">Seleccione primero el tema luego la fecha por favor:</span>\r\n          <v-select :options=\"temas\" :reduce=\"temas => temas\" label=\"tema\" @input=\"borrar()\" class=\"w-full mt-2\"\r\n            v-model=\"tema\" />\r\n          <br />\r\n          <div class=\"vx-row mb-3\">\r\n            <div class=\"vx-col sm:w-2/2 w-full\">\r\n              <small class=\"date-label\">Fecha Capacitacion*</small>\r\n              <datepicker class=\"w-full\" :disabledDates=\"disabledDatesTo\" @input=\"validar(); formatoFechas();\"\r\n                name=\"end-date\" v-model=\"endDate\"></datepicker>\r\n            </div>\r\n          </div>\r\n          <div class=\"vx-row mb-3\">\r\n            <div class=\"vx-col sm:w-1/2 w-full\">\r\n              <small class=\"date-label\">Hora inicio *</small>\r\n              <flat-pickr class=\"w-full\" :config=\"configdateTimePicker\" v-model=\"hora_inicio\" />\r\n            </div>\r\n            <div class=\"vx-col sm:w-1/2 w-full\">\r\n              <small class=\"date-label\">Hora fin *</small>\r\n              <flat-pickr class=\"w-full\" :config=\"configdateTimePicker\" v-model=\"hora_fin\" />\r\n            </div>\r\n          </div>\r\n          <div class=\"vx-row mb-3\">\r\n            <div class=\"vx-col sm:w-1/2 w-full\">\r\n              <small class=\"date-label\">Asistentes</small>\r\n              <vs-input class=\"w-full\" type=\"number\" v-model=\"asistentes\" />\r\n            </div>\r\n            <div class=\"vx-col sm:w-1/2 w-full\">\r\n              <small class=\"date-label\">Link de la reunión</small>\r\n              <vs-input class=\"w-full\" type=\"text\" v-model=\"link_reunion\" />\r\n            </div>\r\n          </div>\r\n          <!--observacion-->\r\n          <div class=\"vx-row mb-3\">\r\n            <div class=\"vx-col w-full\">\r\n              <vs-textarea v-model=\"observacion\" :counter=\"counter_long\" label=\"observación\" height=\"100px\"\r\n              :counter-danger.sync=\"counterDanger\"></vs-textarea>\r\n            </div>\r\n          </div>\r\n          <vs-row class=\"mt-4\" v-if=\"capacitadores == null || capacitadores == ''\">\r\n          </vs-row>\r\n          <vs-row class=\"mt-4\" v-else>\r\n            <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\">\r\n              <vs-alert active=\"true\">\r\n                Capacitadores : {{ capacitadores }}\r\n              </vs-alert>\r\n            </vs-col>\r\n          </vs-row>\r\n          <!-- <vs-row class=\"mt-4\" v-if=\"observacion == null || observacion == ''\">\r\n          </vs-row>\r\n          <vs-row class=\"mt-4\" v-else>\r\n            <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\">\r\n              <vs-alert active=\"true\">\r\n                Mensaje del Administrador : {{ observacion }}\r\n              </vs-alert>\r\n            </vs-col>\r\n          </vs-row> -->\r\n          <!-- <vs-textarea   counter=\"300\" label=\"Mensaje\" :counter-danger.sync=\"counterDanger\"  name=\"event-url\" class=\"w-full mb-3 mt-4\" v-model=\"observacion\" /> -->\r\n        </div>\r\n        <div>\r\n          <vs-divider>Capacitaciones planificadas para ese día</vs-divider>\r\n          <div v-if=\"encontrarCapacitaciones.length > 0\">\r\n            <vs-table max-items=\"3\" search pagination :data=\"encontrarCapacitaciones\">\r\n              <template slot=\"header\">\r\n                Cantidad: <span style=\"font-weight: bold;\"> {{ encontrarCapacitaciones.length }}</span>\r\n              </template>\r\n              <template slot=\"thead\">\r\n                <vs-th>Tema</vs-th>\r\n                <vs-th>Institución</vs-th>\r\n                <vs-th>Hora</vs-th>\r\n              </template>\r\n              <template slot-scope=\"{data}\">\r\n                <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                  <vs-td>\r\n                    {{ tr.tema }}<br>\r\n                    Capacitador:\r\n                    <span>{{ data[indextr].capacitador }}</span> <br>\r\n                  </vs-td>\r\n                  <vs-td>\r\n                    <div v-if=\"tr.estado_institucion_temporal == '1'\">\r\n                      {{ tr.nombre_institucion_temporal }}<br>\r\n                      {{ tr.ciudad_temporal }}<br>\r\n                      Asesor:\r\n                      <span>{{ tr.vendedor }}</span>\r\n                    </div>\r\n                    <div v-else>\r\n                      {{ tr.nombreInstitucion }}<br>\r\n                      {{ tr.ciudad }}<br>\r\n                      Asesor:\r\n                      <span>{{ tr.vendedor }}</span>\r\n                    </div>\r\n                  </vs-td>\r\n\r\n                  <vs-td>\r\n                    Hora inicio:\r\n                    <span>{{ tr.hora_inicio }}</span> <br>\r\n                    Hora Fin:\r\n                    <span>{{ tr.hora_fin }}</span>\r\n                  </vs-td>\r\n                </vs-tr>\r\n              </template>\r\n            </vs-table>\r\n          </div>\r\n          <div v-else>\r\n            <p>\r\n              No hay capacitaciones para ese dia\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <vs-row class=\"mt-3\">\r\n          <vs-col vs-type=\"flex\" vs-justify=\"right\" vs-align=\"right\" vs-w=\"12\">\r\n            <vs-button @click=\"addEvent()\" type=\"relief\">Guardar *</vs-button>\r\n            <vs-button color=\"warning\" class=\"ml-2\" @click=\"removeEvent()\" type=\"relief\">{{ label_cancel }}</vs-button>\r\n          </vs-col>\r\n        </vs-row>\r\n      </vs-popup>\r\n      <!--MODAL PARA AGREGAR NUEVA INSTITUCION-->\r\n      <vs-popup background-color=\"rgba(255,255,255,.6)\" title=\"Agregar Nueva Institución\"\r\n        :active.sync=\"popupAddNuevaInstitucion\">\r\n        <vs-button size=\"small\" color=\"success\" radius=\"\"\r\n          @click=\"popupAddNuevaInstitucion = false; activePromptAddEvent = true;\" icon=\"reply\"\r\n          type=\"gradient\"></vs-button>\r\n        <vs-row class=\"mt-2\">\r\n          <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\">\r\n            <ul class=\"leftx\" style=\"display:flex;flex-direction: row;\">\r\n              <li class=\"ml-2\">\r\n                <vs-radio v-model=\"temporalInstitucion.region\" @input=\"getPeriodos()\" vs-name=\"radios1\"\r\n                  vs-value=\"1\">Sierra</vs-radio>\r\n              </li>\r\n              <li class=\"ml-2\">\r\n                <vs-radio v-model=\"temporalInstitucion.region\" @input=\"getPeriodos()\" vs-name=\"radios1\"\r\n                  vs-value=\"2\">Costa</vs-radio>\r\n              </li>\r\n            </ul>\r\n          </vs-col>\r\n        </vs-row>\r\n        <vs-row>\r\n          <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\">\r\n            <div class=\"vx-col w-full mt-5\">\r\n              Seleccione una ciudad:\r\n              <v-select :options=\"arregloCiudad\" :reduce=\"arregloCiudad => arregloCiudad\" label=\"nombre\" class=\"w-full\"\r\n                v-model=\"temporalInstitucion.ciudad\" />\r\n            </div>\r\n          </vs-col>\r\n        </vs-row>\r\n        <vs-row>\r\n          <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\">\r\n            <div class=\"vx-col w-full mt-5\">\r\n              Seleccione un período:\r\n              <v-select :options=\"arregloPeriodos\" :reduce=\"arregloPeriodos => arregloPeriodos.idperiodoescolar\"\r\n                label=\"periodoescolar\" class=\"w-full\" v-model=\"temporalInstitucion.periodo\" />\r\n            </div>\r\n          </vs-col>\r\n        </vs-row>\r\n        <vs-row class=\"mt-2\">\r\n          <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\">\r\n            <vs-input label=\"Escriba un nombre para la institución\" class=\"w-full\"\r\n              v-model=\"temporalInstitucion.nombre_institucion\" placeholder=\"Institución\" />\r\n          </vs-col>\r\n        </vs-row>\r\n        <vs-row class=\"mt-5\">\r\n          <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\">\r\n            <vs-button @click=\"agregarInstitucionTemporal()\" type=\"gradient\">Agregar Institución</vs-button>\r\n          </vs-col>\r\n        </vs-row>\r\n      </vs-popup>\r\n    </div>\r\n    <vs-popup class=\"holamundo\" fullscreen title=\"Listado de Capacitaciones\" :active.sync=\"popupFiltroInstitucion\">\r\n      <vs-table max-items=\"10\" stripe search pagination :data=\"filtroInstituciones\">\r\n        <template slot=\"header\">\r\n          <vs-chip color=\"primary\">Cantidad: {{ filtroInstituciones.length }}</vs-chip>\r\n        </template>\r\n        <template slot=\"thead\">\r\n          <vs-th>Titulo</vs-th>\r\n          <vs-th>Fecha inicio</vs-th>\r\n          <vs-th>Fecha Fin</vs-th>\r\n          <vs-th>Hora</vs-th>\r\n          <vs-th>Institución</vs-th>\r\n          <vs-th>Estado</vs-th>\r\n        </template>\r\n        <template slot-scope=\"{data}\">\r\n          <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n            <vs-td>\r\n              {{ data[indextr].nombre }}<br>\r\n            </vs-td>\r\n            <vs-td>\r\n              {{ data[indextr].fecha_inicio }}<br>\r\n            </vs-td>\r\n            <vs-td>\r\n              {{ data[indextr].fecha_fin }}<br>\r\n            </vs-td>\r\n            <vs-td>\r\n              {{ data[indextr].hora_inicio }}<br>\r\n              {{ tr.hora_fin }}\r\n            </vs-td>\r\n            <vs-td>\r\n              <div v-if=\"tr.estado_institucion_temporal == '1'\">\r\n                {{ tr.nombre_institucion_temporal }}<br>\r\n                {{ tr.periodoescolar }}\r\n              </div>\r\n              <div v-else>\r\n                {{ tr.nombreInstitucion }}<br>\r\n                {{ tr.periodoescolar }}\r\n              </div>\r\n            </vs-td>\r\n            <vs-td>\r\n              <span v-if=\"data[indextr].estado_capacitacion == 0\"><br>\r\n                <vs-chip color=\"danger\">Cancelada</vs-chip>\r\n              </span>\r\n              <span v-if=\"data[indextr].estado_capacitacion == 1\"><br>\r\n                <vs-chip color=\"warning\">Pendiente</vs-chip>\r\n              </span>\r\n              <span v-if=\"data[indextr].estado_capacitacion == 2\"><br>\r\n                <vs-chip color=\"success\">Realizada</vs-chip>\r\n              </span>\r\n            </vs-td>\r\n          </vs-tr>\r\n        </template>\r\n      </vs-table>\r\n    </vs-popup>\r\n    <!--SOLICITAR NUEVO TEMA-->\r\n    <vs-popup class=\"holamundo\" title=\"Solicitud de nuevo tema\" :active.sync=\"popupSolicitarTema\"\r\n      @close=\"activePromptAddEvent = true;\">\r\n      <vs-button radius color=\"success\" @click=\"popupSolicitarTema = false; activePromptAddEvent = true\" type=\"filled\"\r\n        icon=\"reply\"></vs-button>\r\n      <vs-row class=\"mt-2\">\r\n        <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\">\r\n          <vs-input label=\"Tema\" placeholder=\"Escriba el tema que solicita\" class=\"w-full\" v-model=\"txtTema\" />\r\n        </vs-col>\r\n      </vs-row>\r\n      <vs-row>\r\n        <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\" class=\"mt-2\">\r\n          <vs-input label=\"observación\" placeholder=\"Comentario\" class=\"w-full\" v-model=\"txtObservacion\" />\r\n        </vs-col>\r\n      </vs-row>\r\n      <vs-row class=\"mt-4\">\r\n        <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\">\r\n          <vs-button color=\"rgb(200, 100, 120)\" @click=\"solicitarTema()\" type=\"relief\">Solicitar Tema</vs-button>\r\n        </vs-col>\r\n      </vs-row>\r\n    </vs-popup>\r\n    <!--POPUP DE LISTADO DE SOLICITUDES-->\r\n    <vs-popup class=\"holamundo\" fullscreen title=\"Solicitudes\" :active.sync=\"popupSolicitudes\">\r\n      <vs-table max-items=\"10\" stripe search pagination :data=\"arregloSolicitudes\">\r\n        <template slot=\"thead\">\r\n          <vs-th>Tema</vs-th>\r\n          <vs-th>Observacion</vs-th>\r\n          <vs-th>Comentario Admin</vs-th>\r\n          <vs-th>Estado</vs-th>\r\n          <vs-th>Acciones</vs-th>\r\n        </template>\r\n        <template slot-scope=\"{data}\">\r\n          <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n            <vs-td>\r\n              {{ data[indextr].tema }}<br>\r\n            </vs-td>\r\n            <vs-td>\r\n              {{ data[indextr].observacion }}<br>\r\n            </vs-td>\r\n            <vs-td>\r\n              {{ data[indextr].comentario_admin }}<br>\r\n            </vs-td>\r\n            <vs-td>\r\n              <span v-if=\"data[indextr].estado == 0\"><br>\r\n                <vs-chip color=\"danger\">Generado</vs-chip>\r\n              </span>\r\n              <span v-if=\"data[indextr].estado == 1\"><br>\r\n                <vs-chip color=\"warning\">Tema Creado</vs-chip>\r\n              </span>\r\n              <span v-if=\"data[indextr].estado == 2\"><br>\r\n                <vs-chip color=\"success\">No se pudo crear</vs-chip>\r\n              </span>\r\n            </vs-td>\r\n            <vs-td>\r\n              <vs-button line-position=\"top\" size=\"small\" icon=\"delete\" line-origin=\"left\" @click=\"openConfirm(tr)\"\r\n                color=\"danger\" type=\"relief\">Eliminar</vs-button>\r\n            </vs-td>\r\n          </vs-tr>\r\n        </template>\r\n      </vs-table>\r\n    </vs-popup>\r\n  </div>\r\n</template>\r\n<script>\r\nimport {\r\n  CalendarView,\r\n  CalendarViewHeader\r\n} from 'vue-simple-calendar'\r\nimport moduleCalendar from '@/store/calendario_capacitacion/moduleCalendar.js'\r\nrequire('vue-simple-calendar/static/css/default.css')\r\nimport vSelect from 'vue-select'\r\nimport moment from 'moment'\r\nimport Datepicker from 'vuejs-datepicker'\r\nimport flatPickr from 'vue-flatpickr-component';\r\nimport 'flatpickr/dist/flatpickr.css';\r\nimport {\r\n  en,\r\n  he\r\n} from 'vuejs-datepicker/src/locale'\r\nexport default {\r\n  components: {\r\n    CalendarView,\r\n    CalendarViewHeader,\r\n    Datepicker,\r\n    flatPickr,\r\n    'v-select': vSelect,\r\n    temaSolicitud: '',\r\n  },\r\n  data() {\r\n    return {\r\n      popupSolicitudes: false,\r\n      popupSolicitarTema: false,\r\n      counterDanger: false,\r\n      ciudadSelect: '',\r\n      popupAddNuevaInstitucion: false,\r\n      seleccionadoInsitucion: false,\r\n      nombreInstitucion: '',\r\n      busquedaInstitucion: \"\",\r\n      instituciones: [],\r\n      popupaddInstitucion: false,\r\n      tipoCapacitacion: '0',\r\n      usuario: [],\r\n      showDate: new Date(),\r\n      disabledFrom: false,\r\n      titulo: '',\r\n      id: 0,\r\n      title: '',\r\n      startDate: '',\r\n      observacion: '',\r\n      capacitadores:'',\r\n      endDate: '',\r\n      labelLocal: {\r\n        text: 'Baja',\r\n        color: 'success'\r\n      },\r\n      startDate_send: '',\r\n      endDate_send: '',\r\n      langHe: he,\r\n      langEn: en,\r\n\r\n      tema: '',\r\n      calendarView: 'month',\r\n\r\n      activePromptAddEvent: false,\r\n      label_cancel: 'Cancelar',\r\n      calendarViewTypes: [{\r\n        label: 'Mes',\r\n        val: 'month'\r\n      },\r\n      {\r\n        label: 'Semana',\r\n        val: 'week'\r\n      },\r\n      {\r\n        label: 'Año',\r\n        val: 'year'\r\n      }\r\n      ],\r\n      time: null,\r\n      configdateTimePicker: {\r\n        enableTime: true,\r\n        enableSeconds: false,\r\n        noCalendar: true\r\n      },\r\n      hora_inicio: '',\r\n      hora_fin: '',\r\n      institucion_id: '',\r\n      counterDanger: false,\r\n      arregloCiudad: [],\r\n      temporalInstitucion: {\r\n        ciudad: '',\r\n        nombreInstitucion: '',\r\n        region: '2',\r\n        periodo: ''\r\n      },\r\n      institucion_id_temporal: '',\r\n      estado_institucion_temporal: 0,\r\n      periodo_id_temporal: 0,\r\n      nombreInstitucionTemporal: '',\r\n      estado: '5',\r\n      temas: [],\r\n      longitudCapacitaciones: 0,\r\n      error: false,\r\n      messageError: \"\",\r\n      filtroInstituciones: [],\r\n      popupFiltroInstitucion: false,\r\n      txtTema: '',\r\n      txtObservacion: '',\r\n      arregloSolicitudes: [],\r\n      encontrarCapacitaciones: [],\r\n      arregloPeriodos: [],\r\n      tipo: '1',\r\n      asesores: [],\r\n      asesor: null,\r\n      asistentes: 0,\r\n      counter_long: 200,\r\n      counterDanger: false,\r\n      link_reunion:'',\r\n    }\r\n  },\r\n  computed: {\r\n    simpleCalendarEvents() {\r\n      return this.$store.state.calendar.events\r\n    },\r\n    disabledDatesTo() {\r\n      const hoy = new Date();\r\n      let fecha = moment(hoy).add(4, 'days');\r\n      let fechaActual = moment(hoy).add(5, 'days');\r\n      let obtenerFecha = new Date(fechaActual)\r\n      let convertir = moment(obtenerFecha, 'DD/MM/YYYY HH:mm:ss').format('YYYY-MM-DD');\r\n      console.log('fecha', convertir)\r\n      localStorage.setItem('fecha_actual', convertir)\r\n      return {\r\n        to: new Date(fecha)\r\n      }\r\n    },\r\n    disabledDatesFrom() {\r\n      return {\r\n        from: new Date(this.endDate)\r\n      }\r\n    },\r\n    calendarLabels() {\r\n      return this.$store.state.calendar.eventLabels\r\n    },\r\n    labelColor() {\r\n      return (label) => {\r\n        if (label === 'business') return 'success'\r\n        else if (label === 'work') return 'warning'\r\n        else if (label === 'personal') return 'danger'\r\n        else if (label === 'baja') return 'primary'\r\n      }\r\n    },\r\n    windowWidth() {\r\n      return this.$store.state.windowWidth\r\n    }\r\n  },\r\n  methods: {\r\n    getPeriodos() {\r\n      let me = this\r\n      me.arregloPeriodos = []\r\n      this.$http.get(this.$server_url + 'get_periodos_pedidos')\r\n        .then(res => {\r\n          let datos = res.data\r\n          me.arregloPeriodos = datos.filter(p => p.estado == 1 && p.region_idregion == me.temporalInstitucion.region)\r\n        })\r\n        .catch(function (error) {\r\n        })\r\n    },\r\n    //instituciones creadas por el asesor\r\n    getInstitucionCreadasByAsesor() {\r\n      let me = this;\r\n      me.temporalInstitucion = {\r\n        ciudad: '',\r\n        nombreInstitucion: '',\r\n        region: '2',\r\n        periodo: ''\r\n      }\r\n      me.instituciones = [];\r\n      this.$http.get(this.$server_url + 'listaInsitucionAsesor?temporales=yes' + '&asesor_id=' + me.usuario.idusuario)\r\n        .then(function (res) {\r\n          me.instituciones = res.data;\r\n          me.$vs.loading.close()\r\n          if (res.data.message) {\r\n            me.$vs.notify({\r\n              text: res.data.message,\r\n              color: 'success',\r\n              iconPack: 'feather',\r\n              icon: 'icon-user',\r\n              time: 8000\r\n            })\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error + ' error');\r\n          me.$vs.loading.close()\r\n        })\r\n    },\r\n    openConfirm(tr) {\r\n      let me = this;\r\n      if (tr.estado == 1) {\r\n        me.$vs.notify({\r\n          color: 'primary',\r\n          title: 'Mensaje',\r\n          text: 'No se puede eliminar por que el tema ya esta creado'\r\n        })\r\n        return false\r\n      }\r\n      me.id = tr.id\r\n      me.popupSolicitudes = false\r\n      this.$vs.dialog({\r\n        type: 'confirm',\r\n        color: 'danger',\r\n        title: `Confirmación`,\r\n        text: 'Estas seguro de eliminar la solicitud.',\r\n        accept: this.eliminarSolicitud,\r\n        cancel: this.cancel\r\n      })\r\n    },\r\n    cancel() {\r\n      let me = this;\r\n      me.popupSolicitudes = true\r\n    },\r\n    eliminarSolicitud() {\r\n      let me = this;\r\n      me.$vs.loading();\r\n      this.$http.get(this.$server_url + 'solicitarTema?id=' + me.id + '&eliminar=yes')\r\n        .then(function (res) {\r\n          me.$vs.loading.close()\r\n          me.$vs.notify({\r\n            color: 'primary',\r\n            title: 'Mensaje',\r\n            text: 'Se elimino correctamente'\r\n          })\r\n          me.ListadoSolicitudes()\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error + ' error');\r\n          me.$vs.loading.close()\r\n        })\r\n    },\r\n    ListadoSolicitudes() {\r\n      let me = this;\r\n      me.$vs.loading();\r\n      this.$http.get(this.$server_url + 'solicitarTema?asesor_id=' + me.usuario.idusuario + '&listado=yes')\r\n        .then(function (res) {\r\n          me.$vs.loading.close()\r\n          me.popupSolicitudes = true\r\n          me.arregloSolicitudes = res.data;\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error + ' error');\r\n          me.$vs.loading.close()\r\n        })\r\n    },\r\n    solicitarTema() {\r\n      let me = this;\r\n      if (me.txtTema == '') {\r\n        me.$vs.notify({\r\n          color: 'primary',\r\n          title: 'Mensaje',\r\n          text: \"El campo tema no puede quedar vacio\"\r\n        })\r\n        return false\r\n      }\r\n      if (me.txtTema.length > 100) {\r\n        me.$vs.notify({\r\n          color: 'primary',\r\n          title: 'Mensaje',\r\n          text: \"El campo tema no puede ser mayor a 100 caracteres\"\r\n        })\r\n        return false\r\n      }\r\n      me.$vs.loading();\r\n      this.$http.get(this.$server_url + 'solicitarTema?asesor_id=' + me.usuario.idusuario + '&tema=' + me.txtTema + '&observacion=' + me.txtObservacion)\r\n        .then(function (res) {\r\n          me.$vs.loading.close()\r\n          me.activePromptAddEvent = true;\r\n          me.popupSolicitarTema = false\r\n          me.$vs.notify({\r\n            color: 'primary',\r\n            title: 'Mensaje',\r\n            text: res.data.message\r\n          })\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error + ' error');\r\n          me.$vs.loading.close()\r\n        })\r\n    },\r\n    //para obtener el listado de las capacitacion por institucion\r\n    getFiltroporInstitucion() {\r\n      let me = this;\r\n      me.$vs.loading();\r\n      this.$http.get(this.$server_url + 'filtroCapacitacionInstitucion?asesor_id=' + me.usuario.idusuario)\r\n        .then(function (res) {\r\n          me.filtroInstituciones = res.data\r\n          me.popupFiltroInstitucion = true\r\n          me.$vs.loading.close()\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error + ' error');\r\n          me.$vs.loading.close()\r\n        })\r\n    },\r\n    borrar() {\r\n      let me = this;\r\n      me.endDate = \"\"\r\n    },\r\n    getTemas() {\r\n      let me = this;\r\n      this.$http.get(this.$server_url + 'temasCapacitacion')\r\n        .then(function (res) {\r\n          me.temas = res.data\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error + ' error');\r\n        })\r\n    },\r\n    agregarInstitucionTemporal() {\r\n      let me = this;\r\n      if (me.temporalInstitucion.nombre_institucion == \"\" || me.temporalInstitucion.nombre_institucion == null || me.temporalInstitucion.nombre_institucion == undefined) {\r\n        me.$vs.notify({\r\n          color: 'primary',\r\n          title: 'Mensaje',\r\n          text: 'Debe escribir una institución por favor'\r\n        })\r\n        return false;\r\n      }\r\n      if (me.temporalInstitucion.periodo == null || me.temporalInstitucion.periodo == \"\" || me.temporalInstitucion.periodo == undefined) {\r\n        me.$vs.notify({\r\n          color: 'primary',\r\n          title: 'Mensaje',\r\n          text: 'Debe seleccionar un período por favor'\r\n        })\r\n        return false;\r\n      }\r\n      let formData = new FormData();\r\n      formData.append('nombre_institucion', me.temporalInstitucion.nombre_institucion);\r\n      formData.append('ciudad', me.temporalInstitucion.ciudad.nombre);\r\n      formData.append('region', me.temporalInstitucion.region);\r\n      formData.append('periodo', me.temporalInstitucion.periodo);\r\n      formData.append('asesor_id', me.usuario.idusuario);\r\n      me.$vs.loading()\r\n      this.$http.post(this.$server_url + 'GuardarInstitucionTemporal', formData)\r\n        .then(res => {\r\n          me.$vs.loading.close()\r\n          if (res.data.status == 0) {\r\n            me.$vs.notify({\r\n              text: res.data.message,\r\n              color: 'warning',\r\n              iconPack: 'feather',\r\n              icon: 'icon-check'\r\n            })\r\n            return\r\n          }\r\n          me.popupAddNuevaInstitucion = false;\r\n          me.activePromptAddEvent = true\r\n          me.seleccionadoInsitucion = false;\r\n          me.nombreInstitucion = me.temporalInstitucion.nombre_institucion\r\n          me.institucion_id_temporal = res.data.institucion_temporal_id\r\n          me.instituciones = []\r\n          me.periodo_id_temporal = res.data.periodo_id\r\n          me.estado_institucion_temporal = 1;\r\n\r\n          me.$vs.notify({\r\n            text: \"Se creo la institución correctamente\",\r\n            color: 'success',\r\n            iconPack: 'feather',\r\n            icon: 'icon-check'\r\n          })\r\n        })\r\n    },\r\n    //lista de ciudades para usar en el select\r\n    listaCiudades() {\r\n      let me = this\r\n      this.$http.get(this.$server_url + `ciudad`).then(res => {\r\n        me.arregloCiudad = res.data;\r\n      })\r\n        .catch(function (error) {\r\n          console.log(error)\r\n        })\r\n    },\r\n    regresar() {\r\n      let me = this;\r\n      me.seleccionadoInsitucion = false;\r\n      me.instituciones = []\r\n    },\r\n    asginarInstitucion(tr) {\r\n      let me = this;\r\n      if (me.tipo == 1) {\r\n        me.institucion_id = tr.idInstitucion\r\n        me.nombreInstitucion = tr.nombreInstitucion\r\n        me.estado_institucion_temporal = 0;\r\n        me.seleccionadoInsitucion = false;\r\n        me.instituciones = []\r\n      } else {\r\n        me.nombreInstitucion = tr.nombreInstitucion\r\n        me.institucion_id_temporal = tr.institucion_temporal_id\r\n        me.instituciones = []\r\n        me.periodo_id_temporal = tr.periodo_id\r\n        me.estado_institucion_temporal = 1;\r\n        me.seleccionadoInsitucion = false;\r\n      }\r\n    },\r\n    getInstitucion() {\r\n      let me = this;\r\n      me.instituciones = [];\r\n      if (me.busquedaInstitucion.length < 5) {\r\n        me.$vs.notify({\r\n          text: 'Minimo 5 caracteres de busqueda',\r\n          color: 'warning',\r\n          iconPack: 'feather',\r\n          icon: 'icon-check'\r\n        })\r\n        return false;\r\n      }\r\n      me.$vs.loading()\r\n      var url = this.$server_url + 'listaInsitucion?asesor=yes&busqueda=' + me.busquedaInstitucion + '&cedula=' + me.usuario.cedula\r\n      this.$http.get(url)\r\n        // this.$http.get(this.$server_url + 'listaInsitucionAsesor?busqueda=' + me.busquedaInstitucion + '&cedula=' + me.usuario.cedula)\r\n        .then(function (res) {\r\n          // me.tmpInstituciones = res.data;\r\n          me.instituciones = res.data;\r\n          // me.filtroRegion();\r\n          me.$vs.loading.close()\r\n          if (res.data.message) {\r\n            me.$vs.notify({\r\n              text: res.data.message,\r\n              color: 'success',\r\n              iconPack: 'feather',\r\n              icon: 'icon-user',\r\n              time: 8000\r\n            })\r\n          }\r\n\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error + ' error');\r\n          me.$vs.loading.close()\r\n        })\r\n    },\r\n    validar() {\r\n      let me = this\r\n      me.encontrarCapacitaciones = []\r\n      if (this.tema == '' || this.tema == null || this.tema == undefined) {\r\n        this.$vs.notify({\r\n          text: 'Debe seleccionar un tema por favor.',\r\n          color: 'warning',\r\n          iconPack: 'feather',\r\n          icon: 'icon-alert-triangle'\r\n        })\r\n        me.endDate = \"\"\r\n        return\r\n      }\r\n      let fecha = moment(this.endDate, 'DD/MM/YYYY HH:mm:ss').format('YYYY-MM-DD');\r\n      this.$http.get(this.$server_url + 'temasCapacitacion?validarPorFecha=yes&fecha=' + fecha + '&tema_id=' + this.tema.id)\r\n        .then(function (res) {\r\n          me.longitudCapacitaciones = res.data.length\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error + ' error');\r\n        })\r\n      me.capacitacionesToday(fecha)\r\n    },\r\n    //capacitaciones de una fecha\r\n    capacitacionesToday(fecha) {\r\n      let me = this;\r\n      this.$http.get(this.$server_url + 'temasCapacitacion?encontrarCapacitaciones=yes&fecha=' + fecha)\r\n        .then(function (res) {\r\n          me.encontrarCapacitaciones = res.data\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error + ' error');\r\n        })\r\n    },\r\n    addEvent() {\r\n      let me = this;\r\n      console.log(\"addEvent\");\r\n      if (this.endDate == \"Invalid date\" || this.endDate == \"\") {\r\n        me.error = true\r\n        me.endDate = \"\"\r\n        me.startDate = \"\"\r\n        me.startDate_send = \"\"\r\n        me.endDate_send = \"\"\r\n        me.tema = \"\"\r\n        me.messageError = \"Debe seleccionar un tema y luego seleccionar la fecha por favor\"\r\n        me.activePromptAddEvent = true\r\n        return false\r\n      }\r\n      if (this.estado == 2) {\r\n        me.error = true\r\n        me.messageError = \"La capacitación ya fue realizada ya no puede ser modificada\"\r\n        me.activePromptAddEvent = true\r\n        return false\r\n      }\r\n      if (this.estado == 0) {\r\n        me.error = true\r\n        me.messageError = \"La capacitación fue cancelada ya no puede ser modificada\"\r\n        me.activePromptAddEvent = true\r\n        return false\r\n      }\r\n\r\n      if (this.institucion_id == \"\" && this.institucion_id_temporal == \"\") {\r\n        me.error = true;\r\n        me.messageError = \"Seleccione una institución por favor\";\r\n        me.activePromptAddEvent = true\r\n        return false;\r\n      }\r\n      if (this.endDate_send == '' || this.hora_inicio == '' || this.hora_fin == '' || this.tema == '' || this.tema == null || this.tema == undefined) {\r\n        me.error = true;\r\n        me.messageError = \"Complete los campos por favor\";\r\n        me.activePromptAddEvent = true\r\n        return false;\r\n      }\r\n      //validar la fecha que no sea menor a los 5 dias de reserva\r\n      let fecha = moment(this.endDate, 'DD/MM/YYYY HH:mm:ss').format('YYYY-MM-DD');\r\n      let fechaActual = localStorage.getItem(\"fecha_actual\")\r\n      if (fecha < fechaActual) {\r\n        me.error = true\r\n        me.messageError = \"Debe seleccionar la fecha que empieze desde \" + fechaActual\r\n        me.activePromptAddEvent = true\r\n        return false\r\n      } else {\r\n        console.log(me.asesor) // observer i need to parse to object\r\n        let asesor = me.asesor ? me.asesor.idusuario : me.usuario.idusuario\r\n        console.log(asesor)\r\n        const obj = {\r\n          idusuario: this.usuario.idusuario,\r\n          id: this.id,\r\n          title: this.tema.tema,\r\n          observacion: this.observacion,\r\n          startDate: this.endDate_send,\r\n          endDate: this.endDate_send,\r\n          classes: 'event-' + this.labelLocal.color,\r\n          label: this.labelLocal.text,\r\n          capacitadores:this.capacitadores,\r\n          tema_id: this.tema.id,\r\n          capacitador: this.tema.capacitador,\r\n          hora_inicio: this.hora_inicio.substring(0, 5),\r\n          hora_fin: this.hora_fin.substring(0, 5),\r\n          institucion_id: this.institucion_id,\r\n          institucion_id_temporal: this.institucion_id_temporal,\r\n          estado_institucion_temporal: this.estado_institucion_temporal,\r\n          periodo_id_temporal: this.periodo_id_temporal,\r\n          nombreInstitucion: this.nombreInstitucion,\r\n          tipo: this.tipoCapacitacion,\r\n          asistentes: this.asistentes,\r\n          link_reunion: this.link_reunion,\r\n        }\r\n        if (this.id != 0) {\r\n          this.$store.dispatch('calendar/editEvent', obj)\r\n        } else {\r\n          this.$store.dispatch('calendar/addEvent', obj)\r\n        }\r\n      }\r\n    },\r\n    updateMonth(val) {\r\n      this.showDate = this.$refs.calendar.getIncrementedPeriod(val)\r\n    },\r\n    clearFields() {\r\n      this.tipoCapacitacion = '0'\r\n      this.title = this.endDate = null\r\n      this.id = 0\r\n      this.labelLocal = {\r\n        text: 'Baja',\r\n        color: 'success'\r\n      }\r\n      this.label_cancel = 'Cancelar'\r\n      this.institucion_id = \"\"\r\n      this.institucion_id_temporal = \"\"\r\n      this.estado = 5;\r\n      this.observacion = \"\"\r\n      this.capacitadores = \"\"\r\n      this.nombreInstitucion = \"\"\r\n      this.startDate = \"\"\r\n      this.endDate = \"\"\r\n      this.hora_inicio = \"\"\r\n      this.hora_fin = \"\"\r\n      this.url = \"\"\r\n      this.tema = \"\"\r\n      this.encontrarCapacitaciones = []\r\n    },\r\n    promptAddNewEvent(date) {\r\n      let me = this;\r\n      this.disabledFrom = false\r\n      this.addNewEventDialog(date)\r\n      this.tema = \"\"\r\n      this.endDate = null\r\n      me.encontrarCapacitaciones = []\r\n    },\r\n    addNewEventDialog(date) {\r\n      this.clearFields()\r\n      this.startDate = date\r\n      // this.endDate = date\r\n      this.formatoFechas()\r\n      this.activePromptAddEvent = true\r\n    },\r\n    openAddNewEvent(date) {\r\n      this.disabledFrom = true\r\n      this.addNewEventDialog(date)\r\n    },\r\n    openEditEvent(event) {\r\n      this.nombreInstitucion = \"\"\r\n      const e = this.$store.getters['calendar/getEvent'](event.id)\r\n      this.id = e.id\r\n      this.title = e.title.split('(')[0]\r\n      this.startDate = e.startDate\r\n      this.endDate = e.endDate\r\n      this.labelLocal = {\r\n        text: e.label,\r\n        color: e.classes.split('-')[1]\r\n      }\r\n      this.startDate_send = this.startDate\r\n      this.endDate_send = this.endDate\r\n      this.hora_inicio = e.hora_inicio\r\n      this.hora_fin = e.hora_fin\r\n      this.label_cancel = 'Remover'\r\n      this.activePromptAddEvent = true\r\n      this.estado = e.estado\r\n      this.observacion = e.observacion\r\n      this.capacitadores = e.capacitadores\r\n      if (e.estado_institucion_temporal == \"1\") {\r\n        this.nombreInstitucion = e.nombre_institucion_temporal\r\n        this.institucion_id_temporal = e.institucion_id_temporal\r\n        this.periodo_id_temporal = e.periodo_id\r\n        this.estado_institucion_temporal = 1\r\n      } else {\r\n        this.nombreInstitucion = e.nombreInstitucion\r\n        this.institucion_id = e.institucion_id\r\n        this.estado_institucion_temporal = 0\r\n      }\r\n      this.tipoCapacitacion = e.tipo\r\n      this.tema = {\r\n        id: e.tema_id,\r\n        tema: e.title,\r\n        capacitador: e.capacitador\r\n      }\r\n      this.link_reunion = e.link_reunion\r\n    },\r\n    removeEvent() {\r\n      let me = this;\r\n      if (this.estado == 2) {\r\n        me.error = true\r\n        me.messageError = \"La capacitación ya fue realizada ya no puede ser modificada\"\r\n        me.activePromptAddEvent = true\r\n        return false\r\n      }\r\n      if (this.label_cancel == \"Cancelar\") {\r\n        me.activePromptAddEvent = false\r\n        return\r\n      }\r\n      if (this.id == 0) {\r\n        return\r\n      }\r\n      this.$store.dispatch('calendar/removeEvent', this.id)\r\n      me.activePromptAddEvent = false\r\n    },\r\n    eventDragged(event, date) {\r\n      const e = this.$store.getters['calendar/getEvent'](event.id)\r\n      this.$store.dispatch('calendar/eventDragged', {\r\n        event,\r\n        date\r\n      })\r\n    },\r\n    formatoFechas() {\r\n      this.error = false\r\n      this.startDate_send = moment(this.startDate, 'DD/MM/YYYY HH:mm:ss').format('YYYY-MM-DD HH:mm:ss');\r\n      this.endDate_send = moment(this.endDate, 'DD/MM/YYYY HH:mm:ss').format('YYYY-MM-DD HH:mm:ss');\r\n    },\r\n    getAsesores() {\r\n      const me = this;\r\n      me.$http.get(this.$server_url + 'listaAsesores')\r\n        .then(function (res) {\r\n          console.log(res.data);\r\n          me.asesores = res.data\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error + ' error');\r\n        })\r\n    }\r\n  },\r\n  created() {\r\n    this.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n    console.log(this.usuario)\r\n    this.$store.registerModule('calendar', moduleCalendar)\r\n    this.$store.dispatch('calendar/fetchEvents')\r\n    this.$store.dispatch('calendar/fetchEventLabels')\r\n    this.listaCiudades()\r\n    this.institucion_id = \"\"\r\n    this.institucion_id_temporal = \"\"\r\n    this.getTemas()\r\n    this.getAsesores()\r\n  },\r\n  mounted() {\r\n    let me = this;\r\n  },\r\n  beforeDestroy() {\r\n    this.$store.unregisterModule('calendar')\r\n  }\r\n}\r\n</script>\r\n<style lang=\"scss\">\r\n@import \"@/assets/scss/vuexy/apps/simple-calendar.scss\";\r\n</style>\r\n"]}]}