{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\evaluaciones\\evaluacion_imprimir.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\evaluaciones\\evaluacion_imprimir.vue","mtime":1712682815872},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nimport flatPickr from 'vue-flatpickr-component';\r\nimport 'flatpickr/dist/flatpickr.css';\r\nimport Vue from 'vue'\r\nimport axios from 'axios'\r\nimport vSelect from 'vue-select'\r\nimport moment from 'moment'\r\nimport $ from 'jquery'\r\nimport VueRouter from 'vue-router'\r\nvar respondidas = [];\r\nvar x = null;\r\nexport default {\r\n    data() {\r\n        return {\r\n            preguntas: [],\r\n            pregunta: {\r\n                descripcion: '',\r\n                id_tema: '',\r\n                respuesta: '',\r\n                opcion1: '',\r\n                opcion2: '',\r\n                opcion3: '',\r\n                img_pregunta: '',\r\n                img_respuesta: '',\r\n                img_opcion1: '',\r\n                img_opcion2: '',\r\n                img_opcion3: ''\r\n            },\r\n            evaluaciones: [],\r\n            evaluacion: {\r\n                nombre: '',\r\n                asignatura: '',\r\n                descripcion: '',\r\n                fecha_inicio: '',\r\n                fecha_fin: '',\r\n                estado: '',\r\n                duracion: '',\r\n                nombre_evaluacion: ''\r\n            },\r\n            usuario: [],\r\n            estudiante: null,\r\n            nombre_estudiante: null,\r\n            apellido_estudiante: null,\r\n            opcionesSelec: [],\r\n            activeConfirm: false,\r\n            urlOrigen: '',\r\n            iniciarActivo: true,\r\n            currentx: 1,\r\n            volverActivo: false,\r\n            verbtniniciar: true,\r\n            calificacion: 0,\r\n            id_evalRevisar: '',\r\n            estudianteSelected: '',\r\n            estudiantes: [],\r\n            puntaje: '',\r\n            previsualizar_eval: 1,\r\n            grupo_selected: '',\r\n            radios1: 1,\r\n            respuestasEstudiante: [],\r\n            calificacionObtenida: '',\r\n            respuestasEscritas: [],\r\n            interarResEscr: 0,\r\n            grupo: '',\r\n            vertodo: false,\r\n            calificacionManual: 0,\r\n            grupoSelectedVal: 1,\r\n            preguntasPendientesRevision: [],\r\n            inicioImpresion: 0,\r\n            nombresImprimir: '',\r\n            calificacionImprimir: 0,\r\n            nombre_institucion: '',\r\n        }\r\n    },\r\n    components: {\r\n        'v-select': vSelect,\r\n        flatPickr\r\n    },\r\n    created() {\r\n        this.id_evalRevisar = localStorage.getItem(\"id_evalRevisar\");\r\n        this.previsualizar_eval = localStorage.getItem(\"previsualizar_eval\");\r\n        this.$vs.loading()\r\n        this.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n        var url = location.pathname.split('/');\r\n        var urlBack = window.location.href\r\n        var urlV = urlBack.split('/')\r\n        this.urlOrigen = urlV[0] + '/' + urlV[1] + '/' + urlV[2] + '/estudiante/evaluaciones'\r\n        this.nombresImprimir = localStorage.getItem(\"nombresImprimir\");\r\n        this.calificacionImprimir = localStorage.getItem(\"calificacionImprimir\");\r\n    },\r\n    mounted() {\r\n        this.datosInicio(this.id_evalRevisar, this.previsualizar_eval)\r\n        this.getInstitucion()\r\n    },\r\n    methods: {\r\n        getInstitucion(){\r\n            let me = this\r\n            me.$http.get(me.$server_url+'institucion/' + me.usuario.institucion_idInstitucion)\r\n            .then(function (res) {\r\n                me.nombre_institucion = res.data.nombreInstitucion\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n        },\r\n        datosInicio(id_evalRevisar, previsualizar_eval) {\r\n            let me = this;\r\n            console.log(\"pre\",previsualizar_eval)\r\n            let formData = new FormData();\r\n            formData.append('codigo', localStorage.codigo);\r\n            formData.append('evaluacion', id_evalRevisar);\r\n            me.$http.post(me.$server_url+'estudiantesEvalCurso', formData)\r\n            .then(function (response) {\r\n                if (response.data[0] === undefined) {\r\n                    console.log(\"uno\")\r\n                    if( me.previsualizar_eval!=1 ){\r\n                        me.$vs.notify({\r\n                            text: 'Ningun estudiante ha realizado esta evaluación.',\r\n                            color: 'warning',\r\n                            iconPack: 'feather'\r\n                        })\r\n                    }\r\n                    me.$vs.loading.close()\r\n                } else {\r\n                    me.estudiantes = response.data;\r\n                    me.estudianteSelected = {\r\n                        id: response.data[0].id,\r\n                        label: response.data[0].label,\r\n                        grupo: response.data[0].grupo\r\n                    }\r\n                    me.grupoSelectedVal = response.data[0].grupo\r\n                    me.nombre_estudiante = response.data[0].label;\r\n                }\r\n\r\n                me.$http.get(me.$server_url+'evaluacionEstudiante/' + id_evalRevisar)\r\n                .then(function (response) {\r\n                    if (response.data.length > 0) {\r\n                        me.evaluaciones = response.data\r\n                        me.$http.get(me.$server_url+'getRespuestas/' + id_evalRevisar)\r\n                        .then(function (response) {\r\n                            var pregOpcion = response.data.items;\r\n                            if (pregOpcion === undefined) {\r\n                                me.$vs.notify({\r\n                                    text: 'Esta evaluación aun no tiene preguntas asignadas',\r\n                                    color: 'warning',\r\n                                    iconPack: 'feather'\r\n                                })\r\n                                me.$vs.loading.close()\r\n                                return\r\n                            }\r\n                            if (previsualizar_eval == 1) {\r\n                                me.verPreguntasEvaluacionGrupos();\r\n                                me.iniciar();\r\n                            } else {\r\n                                me.verEvalEstudiante();\r\n                                me.iniciar();\r\n                            }\r\n                            \r\n                        })\r\n                        .catch(function (error) {\r\n                            console.log(error);\r\n                        })\r\n                    } else {\r\n                        alert('No existen preguntas para esta evaluación');\r\n                        //window.location.href = this.urlOrigen;\r\n                    }\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n        },\r\n        getEvaluacion(item) {\r\n            let me = this\r\n            var formData = new FormData();\r\n            if (me.usuario.id_group === 4) {\r\n                formData.append('estudiante', me.usuario.idusuario);\r\n            } else {\r\n                formData.append('estudiante', me.estudianteSelected.id);\r\n            }\r\n            formData.append('evaluacion', me.id_evalRevisar);\r\n            me.$http.post(me.$server_url+`verifRespEvaluacion`, formData).then(res => {\r\n                if (res.data === 0) {\r\n                    me.volverActivo = true\r\n                } else {\r\n                    me.volverActivo = false\r\n                    me.calificacionObtenida = (res.data[0].calificacion).toFixed(2)\r\n                }\r\n                me.$vs.loading.close()\r\n            })\r\n        },\r\n        iniciar() {\r\n            let me = this\r\n            if (me.preguntas.items === undefined) {\r\n                console.log();\r\n            } else {\r\n                me.iniciarActivo = true;\r\n                me.verbtniniciar = false;\r\n            }\r\n            me.$vs.loading.close()\r\n        },\r\n        verPreguntaSelec(index) {\r\n            let me = this\r\n            for (let i = (me.preguntas.items.length + 1); i <= (me.respuestasEscritas.length + me.preguntas.items.length); i++) {\r\n                document.getElementById(\"contenPregEscr\" + i).style.display = \"block\";\r\n            }\r\n\r\n            for (let j = 1; j <= me.preguntas.items.length; j++) {\r\n                document.getElementById(\"contenPreg\" + j).style.display = \"block\";\r\n            }\r\n            try{\r\n                document.getElementById(\"contenPreg\" + (index + 1)).style.display = \"block\";\r\n            }catch (error){\r\n\r\n            }\r\n\r\n        },\r\n        verEvalEstudiante() {\r\n            let me = this;\r\n            if (me.estudianteSelected.grupo === undefined) {\r\n                me.$vs.notify({\r\n                    text: 'Ningún estudiante ha respondido esta evaluación todavía.',\r\n                    color: 'warning',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-alert-triangle'\r\n                })\r\n                return;\r\n            }\r\n            me.grupo = me.estudianteSelected.grupo;\r\n            var estudiante;\r\n            if (me.usuario.id_group === 4) {\r\n                me.grupo = localStorage.getItem(\"grupo_estudiante\")\r\n                estudiante = me.usuario.idusuario\r\n            } else {\r\n                estudiante = me.estudianteSelected.id\r\n            }\r\n            \r\n            if( estudiante===undefined ){\r\n                console.log('no existen estudiantes');\r\n            }else{\r\n                let formData = new FormData();\r\n                let grupoevalImprimir = localStorage.getItem(\"grupoevalImprimir\");\r\n                let estudianteEvalImprimir = localStorage.getItem(\"estudianteEvalImprimir\");\r\n                formData.append('grupo', grupoevalImprimir);\r\n                formData.append('evaluacion', me.id_evalRevisar);\r\n                formData.append('estudiante', estudianteEvalImprimir);\r\n                me.$vs.loading()\r\n                me.$http.post(me.$server_url+'pregEvaluacionEstudiante', formData)\r\n                .then(function (response) {\r\n                    if (response.data.length === 0) {\r\n                        me.preguntasPendientesRevision=[];\r\n                        me.preguntas=[];\r\n                        me.calificacionObtenida=0;\r\n                        me.$vs.loading.close()\r\n                        me.$vs.notify({\r\n                            text: 'El estudiante seleccionado no ha resuelto la evaluación',\r\n                            color: 'warning',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-alert-triangle'\r\n                        })\r\n                    } else {\r\n                        me.preguntasPendientesRevision=[];\r\n                        me.calificacionObtenida = '';\r\n                        me.preguntas = response.data;\r\n                        me.getEvaluacion(me.id_evalRevisar);\r\n                        me.currentx = 1;\r\n                        var resps = []\r\n                        var respString = []\r\n                        for (var i = 0; i < response.data.items.length; i++) {\r\n                            respString = (response.data.items[i].respuesta).split(',')\r\n                            for (var j = 0; j < respString.length; j++) {\r\n                                resps.push(parseInt(respString[j]))\r\n                            }\r\n                            respString = []\r\n                        }\r\n                        me.opcionesSelec = resps;\r\n                        for (var i = 0; i < response.data.items.length; i++) {\r\n                            if( response.data.items[i].id_tipo_pregunta === 6 || response.data.items[i].id_tipo_pregunta === 2 ){\r\n                                me.preguntasPendientesRevision.push(i)\r\n                            }\r\n                        }\r\n                        me.$vs.loading.close()\r\n                    }\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error)\r\n                })\r\n            }\r\n        },\r\n        verPreguntasEvaluacionGrupos() {\r\n            let me = this\r\n            me.preguntas = []\r\n            let formData = new FormData();\r\n            formData.append('grupo', me.radios1);\r\n            formData.append('evaluacion', me.id_evalRevisar);\r\n            me.$http.post(me.$server_url+`pregEvaluacionGrupo`, formData).then(res => {\r\n                if (res.data.length === 0) {\r\n                    me.$vs.loading.close()\r\n                } else {\r\n                    me.preguntas = res.data;                \r\n                    me.currentx = 1;\r\n                }\r\n            })\r\n        },\r\n        mostrarTodo() {\r\n            let me = this\r\n            me.vertodo = true;\r\n            if (me.preguntas.items === undefined) {\r\n                console.log('asdadasdasdasd');\r\n            } else {\r\n                for (let j = 1; j <= me.preguntas.items.length; j++) {\r\n                    document.getElementById(\"contenPreg\" + j).style.display = \"block\";\r\n                }\r\n            }\r\n            for (let j = (me.preguntas.items.length + 1); j <= (me.respuestasEscritas.length + me.preguntas.items.length); j++) {\r\n                document.getElementById(\"contenPregEscr\" + j).style.display = \"block\";\r\n            }\r\n        },\r\n        calificarManual(puntaje, id_respuesta) {\r\n            let me = this\r\n            me.calificacionObtenida = (parseFloat(me.calificacionManual) + (parseFloat(me.calificacionObtenida) - parseFloat(puntaje))).toFixed(2);\r\n            me.preguntasPendientesRevision=[]\r\n            let formData = new FormData();\r\n            formData.append('estudiante', me.estudianteSelected.id);\r\n            formData.append('calificacion', me.calificacionObtenida);\r\n            formData.append('evaluacion', me.id_evalRevisar);\r\n            formData.append('puntaje', me.calificacionManual);\r\n            formData.append('id_respuesta', id_respuesta);\r\n            me.$http.post(me.$server_url+`modificarEvaluacion`, formData).then(res => {\r\n                me.verEvalEstudiante()\r\n                me.$vs.notify({\r\n                    text: 'Calificación guardada correctamente',\r\n                    color: 'success',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-check'\r\n                })\r\n            })\r\n            me.calificacionManual = 0;\r\n        },\r\n        imprimirEval(){\r\n            let me = this;\r\n            if(me.nombresImprimir){\r\n            }else{\r\n                document.title = me.evaluaciones[0].nombreasignatura\r\n            }\r\n            //var ficha = document.getElementById('seccionImprimir');\r\n            window.print();\r\n            /*var ficha = document.getElementById('seccionImprimir');\r\n            var ventimp = window.open(' ', 'popimpr');\r\n            ventimp.document.write( ficha.innerHTML );\r\n            ventimp.document.close();\r\n            ventimp.print( );\r\n            ventimp.close();*/\r\n        }\r\n    }\r\n}\r\n",{"version":3,"sources":["evaluacion_imprimir.vue"],"names":[],"mappingsfile":"evaluacion_imprimir.vue","sourceRoot":"src/views/evaluaciones","sourcesContent":["<template>\r\n    <div class=\"vx-row p-8\">\r\n        <!------BARRA SUPERIOR-------->\r\n        <div class=\"oculto-impresion flex\" style=\"justify-content: end;width: 98%;\">\r\n            <vs-button v-if=\"usuario.id_group === 6\" color=\"primary\" type=\"border\" class=\"ml-4\" @click=\"$router.go(-1)\"><b>← Volver</b></vs-button>\r\n        </div>\r\n        <div class=\"vx-col w-full mt-2\" style=\"font-size: 18px;\">\r\n            <div v-if=\"evaluaciones[0]===undefined\">No existe evaluación</div>\r\n            <div style=\"border-radius: 7px; background-color: white; padding: 25px;\">\r\n                <!--SI HAY CALIFICACION-->\r\n                <div v-if=\"nombresImprimir\">\r\n                    <div class=\"vx-row\" style=\"color: #2160D5; font-size: 22px;\">{{nombre_institucion}}</div>\r\n                    <div class=\"vx-row mt-0\">\r\n                        <div class=\"vx-col w-full\" align=\"justify\">\r\n                            <b>Asignatura: </b>{{evaluaciones[0].nombreasignatura}}<br>\r\n                            <b>Estudiante: </b>{{nombresImprimir}}<br>\r\n                            <b>Calificación: </b>{{calificacionImprimir}}<br>\r\n                            <b>Fecha: </b> {{evaluaciones[0].fecha_fin}}<br>\r\n                            <div v-if=\"evaluaciones[0].descripcion==='' || evaluaciones[0].descripcion === null || evaluaciones[0].descripcion === 'null'\"></div>\r\n                            <div v-else><b>Descripción: </b> {{evaluaciones[0].descripcion}}<br></div>\r\n                            <div v-if=\"usuario.id_group===6 && previsualizar_eval!=1\"><b>Grupo: </b> {{estudianteSelected.grupo}} <br></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <!--IMPRIMIR EVALUACION-->\r\n                <div v-else>\r\n                    <div class=\"vx-row mt-0\">\r\n                        <div class=\"vx-col w-full\" align=\"justify\">\r\n                            <b>Asignatura: </b>{{evaluaciones[0].nombreasignatura}}<br>\r\n                            <b>Nombre: </b><br>\r\n                            <b>Curso: </b><br>\r\n                            <b>Fecha: </b><br>\r\n                        </div>\r\n                    </div>\r\n                </div> \r\n                <div class=\"w-full oculto-impresion\">\r\n                    <ul v-if=\"previsualizar_eval==1 && usuario.id_group===6\" align=\"center\" class=\"mt-2 mb-0\" style=\"border: 1px solid #D5D5D5; border-radius: 5px; height: 50px;\">\r\n                        <vs-radio v-for=\"(grupos_g, key) in evaluaciones[0].grupos_evaluacion\" :key=\"key\" v-model=\"radios1\" v-bind:vs-value=\"grupos_g\" class=\"m-3\" @input=\"verPreguntasEvaluacionGrupos()\">\r\n                            Grupo {{grupos_g}}\r\n                        </vs-radio>\r\n                        <vs-button v-if=\"usuario.id_group === 6\"  color=\"primary\" class=\"ml-6\" style=\"display: inline-block;\" @click=\"verPreguntasEvaluacionGrupos()\"><ion-icon name=\"shuffle-outline\"></ion-icon> Nueva combinación</vs-button>\r\n                        <vs-button color=\"warning\" class=\"ml-6\" style=\"display: inline-block;\" @click=\"imprimirEval()\">Generar reporte</vs-button>\r\n                        <vs-button v-if=\"usuario.id_group === 4\" color=\"primary\" type=\"border\" class=\"ml-4\" @click=\"$router.push('/estudiante/evaluaciones')\"><b>← Volver</b></vs-button>\r\n                        <vs-button v-else color=\"primary\" type=\"border\" class=\"ml-4\" @click=\"$router.go(-1)\"><b>← Volver</b></vs-button>\r\n                    </ul>\r\n                    <ul align=\"center\" class=\"mt-2 mb-0\" v-else>\r\n                        <vs-button color=\"warning\" class=\"ml-6\" style=\"display: inline-block;\" @click=\"imprimirEval()\">Imprimir</vs-button>\r\n                        <vs-button v-if=\"usuario.id_group === 4\" color=\"primary\" type=\"border\" class=\"ml-4\" @click=\"$router.push('/estudiante/evaluaciones')\"><b>← Volver</b></vs-button>\r\n                        <vs-button v-else color=\"primary\" type=\"border\" class=\"ml-4\" @click=\"$router.go(-1)\"><b>← Volver</b></vs-button>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <!-------INICIO SECCION RESPONDER---------->\r\n            <div class=\"mt-5 mb-6\" style=\"border-radius: 7px; background-color: white; padding: 25px;\">\r\n                <div class=\"w-full\" align=\"center\" v-if=\"volverActivo===true && previsualizar_eval!=1\">\r\n                    <div class=\"mb-2\">Esta evaluación aún no ha sido resuelta.</div>\r\n                </div>\r\n                <div class=\"text-center\" v-else>\r\n                    <div cols=\"12\" v-for=\"(item, index) in preguntas.items\" :key=\"index\" v-bind:id=\"'contenPreg'+(index+1)\" style=\"display: block;\" class=\"mb-4\">\r\n                        <div class=\"mb-5\" style=\"font-size: 20px;\" align=\"center\">\r\n                            <vs-divider v-if=\"index>0\" />\r\n                            <div align=\"right\">\r\n                                <b>{{item.puntaje}}</b> / {{item.puntaje_pregunta}} pts<br>\r\n                                {{item.nombre_tipo}}\r\n                            </div>\r\n                            <div align=\"left\">\r\n                                <b>{{ index+1 }}) {{item.descripcion}}</b> <br>\r\n                            </div>\r\n                            <img style=\"border-radius: 5px;\" v-if=\"item.img_pregunta\" v-bind:src=\"$data_url+'archivos/img/img_preguntas/'+item.img_pregunta\" class=\"img-responsive mt-2 altura\" min-width=\"350px\" width=\"450px\">\r\n                        </div>\r\n                        <ol type=\"a\">\r\n                            <div align=\"left\" style=\"font-size: 18px;\">\r\n                                <!-----PREGUNTAS SELECCION---->\r\n                                <div v-if=\"item.id_tipo_pregunta===1 || item.id_tipo_pregunta===5 || item.id_tipo_pregunta===3\">\r\n                                    <div v-for=\"(itemop, index) in item.opciones\" :key=\"index\">\r\n                                        <li>\r\n                                            <vs-checkbox disabled=\"true\" class=\"mb-4\" v-model=\"opcionesSelec\" v-bind:vs-value=\"itemop.id_opcion_pregunta\">\r\n                                                {{ itemop.opcion }}\r\n                                                <img style=\"border-radius: 5px;\" v-if=\"itemop.img_opcion\" v-bind:src=\"$data_url+'archivos/img/img_preguntas/'+itemop.img_opcion\" class=\"img-responsive altura\" width=\"300px\">\r\n                                            </vs-checkbox>\r\n                                        </li>\r\n                                    </div>\r\n                                </div>\r\n                                <!-----PREGUNTAS ESCRITAS---->\r\n                                <div v-if=\"item.id_tipo_pregunta===2 || item.id_tipo_pregunta===6\">\r\n                                    <div v-for=\"(itemop, index1) in item.opciones\" :key=\"index1\">\r\n                                        <textarea disabled=\"true\" v-bind:placeholder=\"item.respuesta\" class=\"w-full respAbierta inputRespuesta\" />\r\n                                    </div>\r\n                                    <div v-if=\"item.opciones.length <= 0\">\r\n                                        <textarea disabled=\"true\" v-bind:placeholder=\"item.respuesta\" class=\"w-full respAbierta inputRespuesta\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </ol>\r\n                    </div>\r\n                    <div v-if=\"preguntas.items===undefined\"></div>\r\n                    <div v-else>\r\n                        <vs-pagination class=\"mt-6 oculto-impresion\" color=\"success\" v-if=\"iniciarActivo===true\" :total=\"preguntas.items.length\" v-model=\"currentx\" @input=\"verPreguntaSelec(currentx-1)\"></vs-pagination>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script><script>\r\nimport flatPickr from 'vue-flatpickr-component';\r\nimport 'flatpickr/dist/flatpickr.css';\r\nimport Vue from 'vue'\r\nimport axios from 'axios'\r\nimport vSelect from 'vue-select'\r\nimport moment from 'moment'\r\nimport $ from 'jquery'\r\nimport VueRouter from 'vue-router'\r\nvar respondidas = [];\r\nvar x = null;\r\nexport default {\r\n    data() {\r\n        return {\r\n            preguntas: [],\r\n            pregunta: {\r\n                descripcion: '',\r\n                id_tema: '',\r\n                respuesta: '',\r\n                opcion1: '',\r\n                opcion2: '',\r\n                opcion3: '',\r\n                img_pregunta: '',\r\n                img_respuesta: '',\r\n                img_opcion1: '',\r\n                img_opcion2: '',\r\n                img_opcion3: ''\r\n            },\r\n            evaluaciones: [],\r\n            evaluacion: {\r\n                nombre: '',\r\n                asignatura: '',\r\n                descripcion: '',\r\n                fecha_inicio: '',\r\n                fecha_fin: '',\r\n                estado: '',\r\n                duracion: '',\r\n                nombre_evaluacion: ''\r\n            },\r\n            usuario: [],\r\n            estudiante: null,\r\n            nombre_estudiante: null,\r\n            apellido_estudiante: null,\r\n            opcionesSelec: [],\r\n            activeConfirm: false,\r\n            urlOrigen: '',\r\n            iniciarActivo: true,\r\n            currentx: 1,\r\n            volverActivo: false,\r\n            verbtniniciar: true,\r\n            calificacion: 0,\r\n            id_evalRevisar: '',\r\n            estudianteSelected: '',\r\n            estudiantes: [],\r\n            puntaje: '',\r\n            previsualizar_eval: 1,\r\n            grupo_selected: '',\r\n            radios1: 1,\r\n            respuestasEstudiante: [],\r\n            calificacionObtenida: '',\r\n            respuestasEscritas: [],\r\n            interarResEscr: 0,\r\n            grupo: '',\r\n            vertodo: false,\r\n            calificacionManual: 0,\r\n            grupoSelectedVal: 1,\r\n            preguntasPendientesRevision: [],\r\n            inicioImpresion: 0,\r\n            nombresImprimir: '',\r\n            calificacionImprimir: 0,\r\n            nombre_institucion: '',\r\n        }\r\n    },\r\n    components: {\r\n        'v-select': vSelect,\r\n        flatPickr\r\n    },\r\n    created() {\r\n        this.id_evalRevisar = localStorage.getItem(\"id_evalRevisar\");\r\n        this.previsualizar_eval = localStorage.getItem(\"previsualizar_eval\");\r\n        this.$vs.loading()\r\n        this.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n        var url = location.pathname.split('/');\r\n        var urlBack = window.location.href\r\n        var urlV = urlBack.split('/')\r\n        this.urlOrigen = urlV[0] + '/' + urlV[1] + '/' + urlV[2] + '/estudiante/evaluaciones'\r\n        this.nombresImprimir = localStorage.getItem(\"nombresImprimir\");\r\n        this.calificacionImprimir = localStorage.getItem(\"calificacionImprimir\");\r\n    },\r\n    mounted() {\r\n        this.datosInicio(this.id_evalRevisar, this.previsualizar_eval)\r\n        this.getInstitucion()\r\n    },\r\n    methods: {\r\n        getInstitucion(){\r\n            let me = this\r\n            me.$http.get(me.$server_url+'institucion/' + me.usuario.institucion_idInstitucion)\r\n            .then(function (res) {\r\n                me.nombre_institucion = res.data.nombreInstitucion\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n        },\r\n        datosInicio(id_evalRevisar, previsualizar_eval) {\r\n            let me = this;\r\n            console.log(\"pre\",previsualizar_eval)\r\n            let formData = new FormData();\r\n            formData.append('codigo', localStorage.codigo);\r\n            formData.append('evaluacion', id_evalRevisar);\r\n            me.$http.post(me.$server_url+'estudiantesEvalCurso', formData)\r\n            .then(function (response) {\r\n                if (response.data[0] === undefined) {\r\n                    console.log(\"uno\")\r\n                    if( me.previsualizar_eval!=1 ){\r\n                        me.$vs.notify({\r\n                            text: 'Ningun estudiante ha realizado esta evaluación.',\r\n                            color: 'warning',\r\n                            iconPack: 'feather'\r\n                        })\r\n                    }\r\n                    me.$vs.loading.close()\r\n                } else {\r\n                    me.estudiantes = response.data;\r\n                    me.estudianteSelected = {\r\n                        id: response.data[0].id,\r\n                        label: response.data[0].label,\r\n                        grupo: response.data[0].grupo\r\n                    }\r\n                    me.grupoSelectedVal = response.data[0].grupo\r\n                    me.nombre_estudiante = response.data[0].label;\r\n                }\r\n\r\n                me.$http.get(me.$server_url+'evaluacionEstudiante/' + id_evalRevisar)\r\n                .then(function (response) {\r\n                    if (response.data.length > 0) {\r\n                        me.evaluaciones = response.data\r\n                        me.$http.get(me.$server_url+'getRespuestas/' + id_evalRevisar)\r\n                        .then(function (response) {\r\n                            var pregOpcion = response.data.items;\r\n                            if (pregOpcion === undefined) {\r\n                                me.$vs.notify({\r\n                                    text: 'Esta evaluación aun no tiene preguntas asignadas',\r\n                                    color: 'warning',\r\n                                    iconPack: 'feather'\r\n                                })\r\n                                me.$vs.loading.close()\r\n                                return\r\n                            }\r\n                            if (previsualizar_eval == 1) {\r\n                                me.verPreguntasEvaluacionGrupos();\r\n                                me.iniciar();\r\n                            } else {\r\n                                me.verEvalEstudiante();\r\n                                me.iniciar();\r\n                            }\r\n                            \r\n                        })\r\n                        .catch(function (error) {\r\n                            console.log(error);\r\n                        })\r\n                    } else {\r\n                        alert('No existen preguntas para esta evaluación');\r\n                        //window.location.href = this.urlOrigen;\r\n                    }\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n        },\r\n        getEvaluacion(item) {\r\n            let me = this\r\n            var formData = new FormData();\r\n            if (me.usuario.id_group === 4) {\r\n                formData.append('estudiante', me.usuario.idusuario);\r\n            } else {\r\n                formData.append('estudiante', me.estudianteSelected.id);\r\n            }\r\n            formData.append('evaluacion', me.id_evalRevisar);\r\n            me.$http.post(me.$server_url+`verifRespEvaluacion`, formData).then(res => {\r\n                if (res.data === 0) {\r\n                    me.volverActivo = true\r\n                } else {\r\n                    me.volverActivo = false\r\n                    me.calificacionObtenida = (res.data[0].calificacion).toFixed(2)\r\n                }\r\n                me.$vs.loading.close()\r\n            })\r\n        },\r\n        iniciar() {\r\n            let me = this\r\n            if (me.preguntas.items === undefined) {\r\n                console.log();\r\n            } else {\r\n                me.iniciarActivo = true;\r\n                me.verbtniniciar = false;\r\n            }\r\n            me.$vs.loading.close()\r\n        },\r\n        verPreguntaSelec(index) {\r\n            let me = this\r\n            for (let i = (me.preguntas.items.length + 1); i <= (me.respuestasEscritas.length + me.preguntas.items.length); i++) {\r\n                document.getElementById(\"contenPregEscr\" + i).style.display = \"block\";\r\n            }\r\n\r\n            for (let j = 1; j <= me.preguntas.items.length; j++) {\r\n                document.getElementById(\"contenPreg\" + j).style.display = \"block\";\r\n            }\r\n            try{\r\n                document.getElementById(\"contenPreg\" + (index + 1)).style.display = \"block\";\r\n            }catch (error){\r\n\r\n            }\r\n\r\n        },\r\n        verEvalEstudiante() {\r\n            let me = this;\r\n            if (me.estudianteSelected.grupo === undefined) {\r\n                me.$vs.notify({\r\n                    text: 'Ningún estudiante ha respondido esta evaluación todavía.',\r\n                    color: 'warning',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-alert-triangle'\r\n                })\r\n                return;\r\n            }\r\n            me.grupo = me.estudianteSelected.grupo;\r\n            var estudiante;\r\n            if (me.usuario.id_group === 4) {\r\n                me.grupo = localStorage.getItem(\"grupo_estudiante\")\r\n                estudiante = me.usuario.idusuario\r\n            } else {\r\n                estudiante = me.estudianteSelected.id\r\n            }\r\n            \r\n            if( estudiante===undefined ){\r\n                console.log('no existen estudiantes');\r\n            }else{\r\n                let formData = new FormData();\r\n                let grupoevalImprimir = localStorage.getItem(\"grupoevalImprimir\");\r\n                let estudianteEvalImprimir = localStorage.getItem(\"estudianteEvalImprimir\");\r\n                formData.append('grupo', grupoevalImprimir);\r\n                formData.append('evaluacion', me.id_evalRevisar);\r\n                formData.append('estudiante', estudianteEvalImprimir);\r\n                me.$vs.loading()\r\n                me.$http.post(me.$server_url+'pregEvaluacionEstudiante', formData)\r\n                .then(function (response) {\r\n                    if (response.data.length === 0) {\r\n                        me.preguntasPendientesRevision=[];\r\n                        me.preguntas=[];\r\n                        me.calificacionObtenida=0;\r\n                        me.$vs.loading.close()\r\n                        me.$vs.notify({\r\n                            text: 'El estudiante seleccionado no ha resuelto la evaluación',\r\n                            color: 'warning',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-alert-triangle'\r\n                        })\r\n                    } else {\r\n                        me.preguntasPendientesRevision=[];\r\n                        me.calificacionObtenida = '';\r\n                        me.preguntas = response.data;\r\n                        me.getEvaluacion(me.id_evalRevisar);\r\n                        me.currentx = 1;\r\n                        var resps = []\r\n                        var respString = []\r\n                        for (var i = 0; i < response.data.items.length; i++) {\r\n                            respString = (response.data.items[i].respuesta).split(',')\r\n                            for (var j = 0; j < respString.length; j++) {\r\n                                resps.push(parseInt(respString[j]))\r\n                            }\r\n                            respString = []\r\n                        }\r\n                        me.opcionesSelec = resps;\r\n                        for (var i = 0; i < response.data.items.length; i++) {\r\n                            if( response.data.items[i].id_tipo_pregunta === 6 || response.data.items[i].id_tipo_pregunta === 2 ){\r\n                                me.preguntasPendientesRevision.push(i)\r\n                            }\r\n                        }\r\n                        me.$vs.loading.close()\r\n                    }\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error)\r\n                })\r\n            }\r\n        },\r\n        verPreguntasEvaluacionGrupos() {\r\n            let me = this\r\n            me.preguntas = []\r\n            let formData = new FormData();\r\n            formData.append('grupo', me.radios1);\r\n            formData.append('evaluacion', me.id_evalRevisar);\r\n            me.$http.post(me.$server_url+`pregEvaluacionGrupo`, formData).then(res => {\r\n                if (res.data.length === 0) {\r\n                    me.$vs.loading.close()\r\n                } else {\r\n                    me.preguntas = res.data;                \r\n                    me.currentx = 1;\r\n                }\r\n            })\r\n        },\r\n        mostrarTodo() {\r\n            let me = this\r\n            me.vertodo = true;\r\n            if (me.preguntas.items === undefined) {\r\n                console.log('asdadasdasdasd');\r\n            } else {\r\n                for (let j = 1; j <= me.preguntas.items.length; j++) {\r\n                    document.getElementById(\"contenPreg\" + j).style.display = \"block\";\r\n                }\r\n            }\r\n            for (let j = (me.preguntas.items.length + 1); j <= (me.respuestasEscritas.length + me.preguntas.items.length); j++) {\r\n                document.getElementById(\"contenPregEscr\" + j).style.display = \"block\";\r\n            }\r\n        },\r\n        calificarManual(puntaje, id_respuesta) {\r\n            let me = this\r\n            me.calificacionObtenida = (parseFloat(me.calificacionManual) + (parseFloat(me.calificacionObtenida) - parseFloat(puntaje))).toFixed(2);\r\n            me.preguntasPendientesRevision=[]\r\n            let formData = new FormData();\r\n            formData.append('estudiante', me.estudianteSelected.id);\r\n            formData.append('calificacion', me.calificacionObtenida);\r\n            formData.append('evaluacion', me.id_evalRevisar);\r\n            formData.append('puntaje', me.calificacionManual);\r\n            formData.append('id_respuesta', id_respuesta);\r\n            me.$http.post(me.$server_url+`modificarEvaluacion`, formData).then(res => {\r\n                me.verEvalEstudiante()\r\n                me.$vs.notify({\r\n                    text: 'Calificación guardada correctamente',\r\n                    color: 'success',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-check'\r\n                })\r\n            })\r\n            me.calificacionManual = 0;\r\n        },\r\n        imprimirEval(){\r\n            let me = this;\r\n            if(me.nombresImprimir){\r\n            }else{\r\n                document.title = me.evaluaciones[0].nombreasignatura\r\n            }\r\n            //var ficha = document.getElementById('seccionImprimir');\r\n            window.print();\r\n            /*var ficha = document.getElementById('seccionImprimir');\r\n            var ventimp = window.open(' ', 'popimpr');\r\n            ventimp.document.write( ficha.innerHTML );\r\n            ventimp.document.close();\r\n            ventimp.print( );\r\n            ventimp.close();*/\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n.inputRespuesta {\r\n    height: 80px;\r\n    border-radius: 5px;\r\n    border: 1px solid #d5d5d5;\r\n    font-size: 18px;\r\n    padding: 5px 10px 5px 10px;\r\n    resize: vertical;\r\n}\r\n\r\n.altura{\r\n    max-height: 350px;\r\n}\r\n\r\n@media print{\r\n    .oculto-impresion *{\r\n        display: none !important;\r\n    }\r\n}\r\n</style>\r\n"]}]}