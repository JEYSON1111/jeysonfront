{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\estudiantes\\libros.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\estudiantes\\libros.vue","mtime":1712682815832},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nimport historicoMixin from \"@/mixins/historicomix\";\r\nimport Vue from 'vue'\r\nimport axios from 'axios'\r\nimport vSelect from 'vue-select'\r\nimport 'vue-select/dist/vue-select.css';\r\nVue.use(axios)\r\nexport default {\r\n    mixins: [historicoMixin],\r\n    components: {\r\n        'v-select': vSelect,\r\n    },\r\n    data() {\r\n        return {\r\n            counterDanger: false,\r\n            datosEstudiante:[],\r\n            ticket:{\r\n                nombreInstitucion:'',\r\n                estudiante:'',\r\n                usuario:'',\r\n                institucion:'',\r\n                codigo:'',\r\n                descripcion:'',\r\n                observacion:'',\r\n                cedula:'',\r\n            },\r\n            popupTicket:false,\r\n            activePrompt: false,\r\n            activePrompt2: false,\r\n            val: '',\r\n            idlibro: '',\r\n            valMultipe: {\r\n                value1: '',\r\n                value2: ''\r\n            },\r\n            select: [],\r\n            libros: [],\r\n            planlector: [],\r\n            usuario: [],\r\n            codigo: '',\r\n            isNavOpen: false,\r\n            idLibroSelec: null,\r\n            popupConfirmQuitar: false,\r\n            codigoLibroSelec: '',\r\n            miusuario: '',\r\n\r\n        }\r\n    },\r\n    watch:{\r\n      codigo(results){\r\n        if(results !=\"\"){\r\n          this.codigo = results.replace(/\\s/g, \"\");\r\n        }\r\n      }\r\n    },\r\n    computed: {\r\n        validName() {\r\n            return (this.valMultipe.value1.length > 0 && this.valMultipe.value2.length > 0)\r\n        }\r\n    },\r\n    created() {\r\n        let me = this;\r\n        this.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n        this.miusuario = this.usuario\r\n    },\r\n    mounted() {\r\n        localStorage.removeItem('pag_inicio');\r\n        localStorage.removeItem('pag_fin');\r\n        this.wasSidebarOpen = this.$store.state.reduceButton\r\n        this.$store.commit('TOGGLE_REDUCE_BUTTON', false)\r\n        this.getLibros()\r\n    },\r\n    methods: {\r\n        async abrirTicket(){\r\n            let me = this;\r\n             if(me.ticket.codigo.length >= 25){\r\n                me.$vs.notify({\r\n                    color: 'primary',\r\n                    title: 'Mensaje',\r\n                    text: 'El codigo no puede superar los 25 caracteres.'\r\n                    })\r\n                return false;\r\n            }\r\n            if(me.ticket.observacion.length >= 500){\r\n                me.$vs.notify({\r\n                    color: 'primary',\r\n                    title: 'Mensaje',\r\n                    text: 'El motivo no puede superar los 500 caracteres.'\r\n                    })\r\n                return false;\r\n            }\r\n            let formData = new FormData();\r\n            formData.append('cedula',               me.ticket.cedula);\r\n            formData.append('codigo',               me.ticket.codigo);\r\n            formData.append('institucion_id',       me.ticket.institucion);\r\n            formData.append('usuario_id',           me.ticket.usuario);\r\n            formData.append('group_id',             \"4\");\r\n            formData.append('descripcion',          me.ticket.descripcion);\r\n            formData.append('observacion',          me.ticket.observacion);\r\n            formData.append('nombreInstitucion',    me.ticket.nombreInstitucion);\r\n            formData.append('ticket_asesor',        0)\r\n            this.$http.post(this.$server_url+'ticket', formData)\r\n                .then(function (res) {\r\n                    me.$vs.notify({\r\n                        text: res.data,\r\n                        color: 'primary',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-alert-triangle'\r\n                    })\r\n                    me.popupTicket=false;\r\n                    me.ticket.observacion = \"\";\r\n                    me.ticket.cedula = \"\";\r\n                    me.ticket.codigo = \"\";\r\n                    me.ticket.institucion = \"\";\r\n                    me.ticket.usuario = \"\";\r\n                    me.ticket.descripcion = \"\";\r\n                })\r\n                .catch(function (error) {})\r\n        },\r\n        async getLibros() {\r\n            let me = this;\r\n            me.$vs.loading()\r\n            let region  = localStorage.region\r\n            this.$http.get(this.$server_url+'codigos_libros_estudiante/' + me.usuario.idusuario+'/'+me.usuario.institucion_idInstitucion+'/'+localStorage.periodo_id+'/'+region+'/4')\r\n                .then(function (response) {\r\n                    me.libros = response.data.libros\r\n                    me.$vs.loading.close()\r\n                })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close()\r\n                })\r\n        },\r\n        datoplanlector(url) {\r\n            let me = this;\r\n            let h_idinstitucion = me.miusuario.institucion_idInstitucion;\r\n            let h_idusuario = me.miusuario.idusuario;\r\n            let h_idgrupo = me.miusuario.id_group;\r\n            let h_idasignatura = url.asignatura_idasignatura\r\n            let h_nombreasignatura = url.nombreplanlector\r\n            let h_recursotipo = 1; //1 = libro\r\n            let datoHistorico = {\r\n                'user_nombre': me.miusuario.nombres,\r\n                'user_apellido': me.miusuario.apellidos,\r\n                'user_email': me.miusuario.email,\r\n                'user_cedula': me.miusuario.cedula,\r\n                'recurso_accion': 'ver',\r\n                'recurso_tipo': 'plan lector',\r\n                'recurso_nombre': url.descripcionplanlector,\r\n                'recurso_detalle': '',\r\n            }\r\n            me.historicoVisitas(h_idinstitucion, h_idusuario, h_idgrupo, h_idasignatura, h_nombreasignatura, h_recursotipo, datoHistorico);\r\n            me.saveHistoricoVisitas(h_idinstitucion, h_idusuario, h_idgrupo, h_idasignatura,h_nombreasignatura,  h_recursotipo,datoHistorico)\r\n            localStorage.url = url.webplanlector;\r\n            this.$router.push('/estudiante/libros/planlector');\r\n        },\r\n        datolibro(url) {\r\n            let me = this;\r\n            localStorage.url = url.weblibro;\r\n            localStorage.puerto = url.puerto;\r\n            localStorage.idasignatura = url.asignatura_idasignatura\r\n            me.$vs.loading()\r\n            let region  = localStorage.region\r\n            this.$http.get(this.$server_url+'menu_unidades_libros/' + url.idlibro+'/'+region)\r\n                .then(function (response) {\r\n                    me.unidadesLibro = response.data\r\n                    console.log(me.unidadesLibro)\r\n                    for (let index = 0; index < me.unidadesLibro.length; index++) {\r\n                        if (index == 0) {\r\n                            localStorage.pag_inicio = me.unidadesLibro[index].pag_inicio\r\n                        }\r\n                        localStorage.pag_fin = me.unidadesLibro[index].pag_fin\r\n                    }\r\n                    let h_idinstitucion = me.miusuario.institucion_idInstitucion;\r\n                    let h_idusuario = me.miusuario.idusuario;\r\n                    let h_idgrupo = me.miusuario.id_group;\r\n                    let h_idasignatura = url.idasignatura\r\n                    let h_nombreasignatura = url.nombreasignatura\r\n                    let h_recursotipo = 1; //1 = libro\r\n                    let datoHistorico = {\r\n                        'user_nombre': me.miusuario.nombres,\r\n                        'user_apellido': me.miusuario.apellidos,\r\n                        'user_email': me.miusuario.email,\r\n                        'user_cedula': me.miusuario.cedula,\r\n                        'recurso_accion': 'ver',\r\n                        'recurso_tipo': 'libro',\r\n                        'recurso_nombre': url.nombrelibro,\r\n                        'recurso_detalle': '',\r\n                    }\r\n                    me.historicoVisitas(h_idinstitucion, h_idusuario, h_idgrupo, h_idasignatura, h_nombreasignatura, h_recursotipo, datoHistorico);\r\n                    me.saveHistoricoVisitas(h_idinstitucion, h_idusuario, h_idgrupo, h_idasignatura,h_nombreasignatura,  h_recursotipo,datoHistorico)\r\n                    me.$vs.loading.close()\r\n                    let route = me.$router.resolve({path: '/estudiante/libro/digital'});\r\n                    window.open(route.href, '_blank');\r\n                })\r\n        },\r\n        openConfirmQuitarLibro(item) {\r\n            this.idLibroSelec = item.idlibro;\r\n            this.codigoLibroSelec = item.codigo;\r\n            this.popupConfirmQuitar = true;\r\n        },\r\n        acceptAlertQuitar() {\r\n            let me = this;\r\n            me.popupConfirmQuitar = false;\r\n            let formData = new FormData();\r\n            formData.append('idusuario', me.usuario.idusuario);\r\n            formData.append('codigo', me.codigoLibroSelec);\r\n            formData.append('idlibro', me.idLibroSelec);\r\n            this.$http.post(this.$server_url+'quitarlibroestudiante', formData)\r\n                .then(function (response) {\r\n                    me.idLibroSelec = null;\r\n                    me.getLibros();\r\n                    me.$vs.notify({\r\n                        color: 'success',\r\n                        title: 'Eliminado',\r\n                        text: 'Libro Eliminado Correctamente'\r\n                    })\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n        },\r\n        acceptAlert() {\r\n          let me = this;\r\n          let formData = new FormData();\r\n          if (!me.codigo) {\r\n            me.$vs.notify({\r\n                color: 'warning',\r\n                title: 'Ingrese un código',\r\n            })\r\n          } else {\r\n            formData.append('codigo', me.codigo);\r\n            formData.append('idusuario', me.usuario.idusuario);\r\n            formData.append('id_periodo', localStorage.periodo_id);\r\n            formData.append('id_institucion', me.usuario.institucion_idInstitucion);\r\n            this.$http.post(this.$server_url+'codigoslibros', formData)\r\n              .then(function (response) {\r\n                if(response.data.status == 5){\r\n                  me.$vs.notify({\r\n                      text: response.data.message,\r\n                      color: 'danger',\r\n                      iconPack: 'feather',\r\n                      icon: 'icon-alert-triangle',\r\n                      time:6000\r\n                  })\r\n                  return\r\n                }\r\n                if (response.data.status == 0) {\r\n                  me.getLibros();\r\n                  me.codigo = ''\r\n                  me.$vs.notify({\r\n                      color: 'danger',\r\n                      title: 'Error',\r\n                      text: 'El código ingresado, ya está en uso.'\r\n                  })\r\n                  if(response.data.realizarTicket == 'ok'){\r\n                    //Para abrir un ticket\r\n                    me.ticket.codigo = response.data.codigo;\r\n                    me.ticket.usuario = response.data.usuario;\r\n                    me.ticket.institucion = response.data.institucion;\r\n                    me.ticket.descripcion = \"El código ingresado, ya está en uso.\";\r\n                    me.ticket.nombreInstitucion = response.data.datosEstudiante[0].nombreInstitucion;\r\n                    me.ticket.estudiante = response.data.datosEstudiante[0].estudiante;\r\n                    me.ticket.cedula = response.data.datosEstudiante[0].cedula;\r\n                    me.popupTicket = true;\r\n                  }\r\n                  else{\r\n                      me.$vs.notify({\r\n                      color: 'primary',\r\n                      title: 'Mensaje',\r\n                      text: 'Tiene un ticket abierto.'\r\n                      })\r\n                  }\r\n                }\r\n                if (response.data.status == 1) {\r\n                  me.getLibros();\r\n                  me.codigo = ''\r\n                  me.$vs.notify({\r\n                      color: 'success',\r\n                      title: 'Guardado',\r\n                      text: 'Libro Agregado'\r\n                  })\r\n                }\r\n                if (response.data.status == 2) {\r\n                  me.getLibros();\r\n                  me.codigo = ''\r\n                  me.$vs.notify({\r\n                      color: 'warning',\r\n                      title: 'Error',\r\n                      text: 'El código ingresado, no existe.'\r\n                  })\r\n                  if(response.data.realizarTicket == 'ok'){\r\n                      //Para abrir un ticket\r\n                      me.ticket.codigo = response.data.codigo;\r\n                      me.ticket.usuario = response.data.usuario;\r\n                      me.ticket.institucion = response.data.institucion;\r\n                      me.ticket.descripcion = \"El código ingresado, no existe\";\r\n                      me.ticket.nombreInstitucion = response.data.datosEstudiante[0].nombreInstitucion;\r\n                      me.ticket.estudiante = response.data.datosEstudiante[0].estudiante;\r\n                      me.ticket.cedula = response.data.datosEstudiante[0].cedula;\r\n                      me.popupTicket = true;\r\n                  }\r\n                  else{\r\n                      me.$vs.notify({\r\n                      color: 'primary',\r\n                      title: 'Mensaje',\r\n                      text: 'Tiene un ticket abierto.'\r\n                      })\r\n                  }\r\n                }\r\n                if (response.data.status == 4) {\r\n                  me.getLibros();\r\n                  me.codigo = ''\r\n                  me.$vs.notify({\r\n                      color: 'warning',\r\n                      title: 'Error',\r\n                      text: 'El código ingresado, ha sido devuelto.'\r\n                  })\r\n                  if(response.data.realizarTicket == 'ok'){\r\n                      //Para abrir un ticket\r\n                      me.ticket.codigo = response.data.codigo;\r\n                      me.ticket.usuario = response.data.usuario;\r\n                      me.ticket.institucion = response.data.institucion;\r\n                      me.ticket.descripcion = \"El código ingresado, ha sido devuelto\";\r\n                      me.ticket.nombreInstitucion = response.data.datosEstudiante[0].nombreInstitucion;\r\n                      me.ticket.estudiante = response.data.datosEstudiante[0].estudiante;\r\n                      me.ticket.cedula = response.data.datosEstudiante[0].cedula;\r\n                      me.popupTicket = true;\r\n                  }else{\r\n                      me.$vs.notify({\r\n                      color: 'primary',\r\n                      title: 'Mensaje',\r\n                      text: 'Tiene un ticket abierto.'\r\n                      })\r\n                  }\r\n                }\r\n                if (response.data.status == 3) {\r\n                  me.getLibros();\r\n                  me.codigo = ''\r\n                  me.$vs.notify({\r\n                      color: 'warning',\r\n                      title: 'Error',\r\n                      text: 'El código ingresado, se encuentra bloqueado.'\r\n                  })\r\n                  if(response.data.realizarTicket == 'ok'){\r\n                      //Para abrir un ticket\r\n                      me.ticket.codigo = response.data.codigo;\r\n                      me.ticket.usuario = response.data.usuario;\r\n                      me.ticket.institucion = response.data.institucion;\r\n                      me.ticket.descripcion = \"El código ingresado, se encuentra bloqueado\";\r\n                      me.ticket.nombreInstitucion = response.data.datosEstudiante[0].nombreInstitucion;\r\n                      me.ticket.estudiante = response.data.datosEstudiante[0].estudiante;\r\n                      me.ticket.cedula = response.data.datosEstudiante[0].cedula;\r\n                      me.popupTicket = true;\r\n                  }else{\r\n                      me.$vs.notify({\r\n                      color: 'primary',\r\n                      title: 'Mensaje',\r\n                      text: 'Tiene un ticket abierto.'\r\n                      })\r\n                  }\r\n                }\r\n              })\r\n              .catch(function (error) {})\r\n            }\r\n        },\r\n        close() {\r\n            this.$vs.notify({\r\n                color: 'danger',\r\n                title: '',\r\n                text: 'Datos no guardados!'\r\n            })\r\n        },\r\n    },\r\n}\r\n",{"version":3,"sources":["libros.vue"],"names":[],"mappings":";AAsfile":"libros.vue","sourceRoot":"src/views/estudiantes","sourcesContent":["<template>\r\n<div>\r\n    <vs-popup title=\"Confirmar\" :active.sync=\"popupConfirmQuitar\">\r\n        <div align=\"center\">\r\n            <p>¿Está seguro de eliminar este libro?</p><br>\r\n            <vs-button color=\"danger\" type=\"filled\" @click=\"acceptAlertQuitar\">Aceptar</vs-button>\r\n        </div>\r\n    </vs-popup>\r\n    <vs-button @click=\"activePrompt = true\" color=\"dark\" type=\"relief\">Agregar Libros</vs-button>\r\n    <vs-prompt title=\"Agregar libro\" @cancel=\"idlibro=''\" @accept=\"acceptAlert\" @close=\"close\" acceptText=\"Aceptar\" cancelText=\"Cancelar\" :active.sync=\"activePrompt\">\r\n        <div class=\"con-exemple-prompt\">\r\n            <vs-alert active=\"true\" color=\"success\">\r\n                Ingresa el código que se encuentra en tu libro.\r\n            </vs-alert>\r\n            <br>\r\n            <vs-input icon-after=\"true\" @keydown.space=\"(event) => event.preventDefault()\" class=\"mt-4 w-full\" icon=\"code\" label-placeholder=\"MLE3-KJVBXXXXXX-XXX\" v-model=\"codigo\" />\r\n        </div>\r\n    </vs-prompt>\r\n    <div class=\"vx-row\">\r\n        <div class=\"vx-col w-1/2 md:w-1/3 xl:w-1/4 mt-3\" v-for=\"(item,$index) in libros\" :key=\"$index\">\r\n            <vx-card class=\"text-center\">\r\n                <div slot=\"no-body\">\r\n                    <img v-if=\"item.weblibro != null \" class=\"responsive card-img-top\" v-bind:src=\"$data_url+'archivos/upload/libro/'+item.weblibro+'/portada.png'\" alt=\"Card image cap\">\r\n                    <img v-else class=\"responsive card-img-top\" v-bind:src=\"$data_url+'tareas/img/'+item.portada\" alt=\"Card image cap\">\r\n                </div>\r\n                <p class=\"font-bold\">\r\n                    {{item.nombrelibro}}\r\n                </p>\r\n                <small>\r\n                    {{item.descripcionlibro}}\r\n                </small>\r\n                <div class=\"w-3/3 ml-auto mt-3\">\r\n                    <vs-button color=\"primary\" class=\"w-full mb-2\" type=\"border\" icon-pack=\"feather\" @click=\"datolibro(item)\" icon=\"icon-book\">Libro Web</vs-button>\r\n                </div>\r\n            </vx-card>\r\n        </div>\r\n    </div>\r\n    <vs-prompt\r\n      @cancel=\"idlibro=''\"\r\n      title=\"Abrir Ticket\"\r\n      @accept=\"abrirTicket\"\r\n      @close=\"close\"\r\n      :active.sync=\"popupTicket\">\r\n        <div class=\"con-exemple-prompt\">\r\n            <vs-input class=\"inputx mb-3 w-full\" disabled label=\"Estudiante\" v-model=\"ticket.estudiante\" />\r\n            <vs-input class=\"inputx mb-3 w-full\" disabled label=\"Institucion\" v-model=\"ticket.nombreInstitucion\" />\r\n            <vs-input class=\"inputx mb-3 w-full\" disabled label=\"Codigo\" v-model=\"ticket.codigo\" />\r\n            <vs-input class=\"inputx mb-3 w-full\" disabled label=\"Motivo\" v-model=\"ticket.descripcion\" />\r\n            <vs-textarea counter=\"500\" style=\"width:100%;\" :counter-danger.sync=\"counterDanger\" label=\"Mensaje (Opcional)\" v-model=\"ticket.observacion\" />\r\n        </div>\r\n    </vs-prompt>\r\n</div>\r\n</template>\r\n<script>\r\nimport historicoMixin from \"@/mixins/historicomix\";\r\nimport Vue from 'vue'\r\nimport axios from 'axios'\r\nimport vSelect from 'vue-select'\r\nimport 'vue-select/dist/vue-select.css';\r\nVue.use(axios)\r\nexport default {\r\n    mixins: [historicoMixin],\r\n    components: {\r\n        'v-select': vSelect,\r\n    },\r\n    data() {\r\n        return {\r\n            counterDanger: false,\r\n            datosEstudiante:[],\r\n            ticket:{\r\n                nombreInstitucion:'',\r\n                estudiante:'',\r\n                usuario:'',\r\n                institucion:'',\r\n                codigo:'',\r\n                descripcion:'',\r\n                observacion:'',\r\n                cedula:'',\r\n            },\r\n            popupTicket:false,\r\n            activePrompt: false,\r\n            activePrompt2: false,\r\n            val: '',\r\n            idlibro: '',\r\n            valMultipe: {\r\n                value1: '',\r\n                value2: ''\r\n            },\r\n            select: [],\r\n            libros: [],\r\n            planlector: [],\r\n            usuario: [],\r\n            codigo: '',\r\n            isNavOpen: false,\r\n            idLibroSelec: null,\r\n            popupConfirmQuitar: false,\r\n            codigoLibroSelec: '',\r\n            miusuario: '',\r\n\r\n        }\r\n    },\r\n    watch:{\r\n      codigo(results){\r\n        if(results !=\"\"){\r\n          this.codigo = results.replace(/\\s/g, \"\");\r\n        }\r\n      }\r\n    },\r\n    computed: {\r\n        validName() {\r\n            return (this.valMultipe.value1.length > 0 && this.valMultipe.value2.length > 0)\r\n        }\r\n    },\r\n    created() {\r\n        let me = this;\r\n        this.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n        this.miusuario = this.usuario\r\n    },\r\n    mounted() {\r\n        localStorage.removeItem('pag_inicio');\r\n        localStorage.removeItem('pag_fin');\r\n        this.wasSidebarOpen = this.$store.state.reduceButton\r\n        this.$store.commit('TOGGLE_REDUCE_BUTTON', false)\r\n        this.getLibros()\r\n    },\r\n    methods: {\r\n        async abrirTicket(){\r\n            let me = this;\r\n             if(me.ticket.codigo.length >= 25){\r\n                me.$vs.notify({\r\n                    color: 'primary',\r\n                    title: 'Mensaje',\r\n                    text: 'El codigo no puede superar los 25 caracteres.'\r\n                    })\r\n                return false;\r\n            }\r\n            if(me.ticket.observacion.length >= 500){\r\n                me.$vs.notify({\r\n                    color: 'primary',\r\n                    title: 'Mensaje',\r\n                    text: 'El motivo no puede superar los 500 caracteres.'\r\n                    })\r\n                return false;\r\n            }\r\n            let formData = new FormData();\r\n            formData.append('cedula',               me.ticket.cedula);\r\n            formData.append('codigo',               me.ticket.codigo);\r\n            formData.append('institucion_id',       me.ticket.institucion);\r\n            formData.append('usuario_id',           me.ticket.usuario);\r\n            formData.append('group_id',             \"4\");\r\n            formData.append('descripcion',          me.ticket.descripcion);\r\n            formData.append('observacion',          me.ticket.observacion);\r\n            formData.append('nombreInstitucion',    me.ticket.nombreInstitucion);\r\n            formData.append('ticket_asesor',        0)\r\n            this.$http.post(this.$server_url+'ticket', formData)\r\n                .then(function (res) {\r\n                    me.$vs.notify({\r\n                        text: res.data,\r\n                        color: 'primary',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-alert-triangle'\r\n                    })\r\n                    me.popupTicket=false;\r\n                    me.ticket.observacion = \"\";\r\n                    me.ticket.cedula = \"\";\r\n                    me.ticket.codigo = \"\";\r\n                    me.ticket.institucion = \"\";\r\n                    me.ticket.usuario = \"\";\r\n                    me.ticket.descripcion = \"\";\r\n                })\r\n                .catch(function (error) {})\r\n        },\r\n        async getLibros() {\r\n            let me = this;\r\n            me.$vs.loading()\r\n            let region  = localStorage.region\r\n            this.$http.get(this.$server_url+'codigos_libros_estudiante/' + me.usuario.idusuario+'/'+me.usuario.institucion_idInstitucion+'/'+localStorage.periodo_id+'/'+region+'/4')\r\n                .then(function (response) {\r\n                    me.libros = response.data.libros\r\n                    me.$vs.loading.close()\r\n                })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close()\r\n                })\r\n        },\r\n        datoplanlector(url) {\r\n            let me = this;\r\n            let h_idinstitucion = me.miusuario.institucion_idInstitucion;\r\n            let h_idusuario = me.miusuario.idusuario;\r\n            let h_idgrupo = me.miusuario.id_group;\r\n            let h_idasignatura = url.asignatura_idasignatura\r\n            let h_nombreasignatura = url.nombreplanlector\r\n            let h_recursotipo = 1; //1 = libro\r\n            let datoHistorico = {\r\n                'user_nombre': me.miusuario.nombres,\r\n                'user_apellido': me.miusuario.apellidos,\r\n                'user_email': me.miusuario.email,\r\n                'user_cedula': me.miusuario.cedula,\r\n                'recurso_accion': 'ver',\r\n                'recurso_tipo': 'plan lector',\r\n                'recurso_nombre': url.descripcionplanlector,\r\n                'recurso_detalle': '',\r\n            }\r\n            me.historicoVisitas(h_idinstitucion, h_idusuario, h_idgrupo, h_idasignatura, h_nombreasignatura, h_recursotipo, datoHistorico);\r\n            me.saveHistoricoVisitas(h_idinstitucion, h_idusuario, h_idgrupo, h_idasignatura,h_nombreasignatura,  h_recursotipo,datoHistorico)\r\n            localStorage.url = url.webplanlector;\r\n            this.$router.push('/estudiante/libros/planlector');\r\n        },\r\n        datolibro(url) {\r\n            let me = this;\r\n            localStorage.url = url.weblibro;\r\n            localStorage.puerto = url.puerto;\r\n            localStorage.idasignatura = url.asignatura_idasignatura\r\n            me.$vs.loading()\r\n            let region  = localStorage.region\r\n            this.$http.get(this.$server_url+'menu_unidades_libros/' + url.idlibro+'/'+region)\r\n                .then(function (response) {\r\n                    me.unidadesLibro = response.data\r\n                    console.log(me.unidadesLibro)\r\n                    for (let index = 0; index < me.unidadesLibro.length; index++) {\r\n                        if (index == 0) {\r\n                            localStorage.pag_inicio = me.unidadesLibro[index].pag_inicio\r\n                        }\r\n                        localStorage.pag_fin = me.unidadesLibro[index].pag_fin\r\n                    }\r\n                    let h_idinstitucion = me.miusuario.institucion_idInstitucion;\r\n                    let h_idusuario = me.miusuario.idusuario;\r\n                    let h_idgrupo = me.miusuario.id_group;\r\n                    let h_idasignatura = url.idasignatura\r\n                    let h_nombreasignatura = url.nombreasignatura\r\n                    let h_recursotipo = 1; //1 = libro\r\n                    let datoHistorico = {\r\n                        'user_nombre': me.miusuario.nombres,\r\n                        'user_apellido': me.miusuario.apellidos,\r\n                        'user_email': me.miusuario.email,\r\n                        'user_cedula': me.miusuario.cedula,\r\n                        'recurso_accion': 'ver',\r\n                        'recurso_tipo': 'libro',\r\n                        'recurso_nombre': url.nombrelibro,\r\n                        'recurso_detalle': '',\r\n                    }\r\n                    me.historicoVisitas(h_idinstitucion, h_idusuario, h_idgrupo, h_idasignatura, h_nombreasignatura, h_recursotipo, datoHistorico);\r\n                    me.saveHistoricoVisitas(h_idinstitucion, h_idusuario, h_idgrupo, h_idasignatura,h_nombreasignatura,  h_recursotipo,datoHistorico)\r\n                    me.$vs.loading.close()\r\n                    let route = me.$router.resolve({path: '/estudiante/libro/digital'});\r\n                    window.open(route.href, '_blank');\r\n                })\r\n        },\r\n        openConfirmQuitarLibro(item) {\r\n            this.idLibroSelec = item.idlibro;\r\n            this.codigoLibroSelec = item.codigo;\r\n            this.popupConfirmQuitar = true;\r\n        },\r\n        acceptAlertQuitar() {\r\n            let me = this;\r\n            me.popupConfirmQuitar = false;\r\n            let formData = new FormData();\r\n            formData.append('idusuario', me.usuario.idusuario);\r\n            formData.append('codigo', me.codigoLibroSelec);\r\n            formData.append('idlibro', me.idLibroSelec);\r\n            this.$http.post(this.$server_url+'quitarlibroestudiante', formData)\r\n                .then(function (response) {\r\n                    me.idLibroSelec = null;\r\n                    me.getLibros();\r\n                    me.$vs.notify({\r\n                        color: 'success',\r\n                        title: 'Eliminado',\r\n                        text: 'Libro Eliminado Correctamente'\r\n                    })\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n        },\r\n        acceptAlert() {\r\n          let me = this;\r\n          let formData = new FormData();\r\n          if (!me.codigo) {\r\n            me.$vs.notify({\r\n                color: 'warning',\r\n                title: 'Ingrese un código',\r\n            })\r\n          } else {\r\n            formData.append('codigo', me.codigo);\r\n            formData.append('idusuario', me.usuario.idusuario);\r\n            formData.append('id_periodo', localStorage.periodo_id);\r\n            formData.append('id_institucion', me.usuario.institucion_idInstitucion);\r\n            this.$http.post(this.$server_url+'codigoslibros', formData)\r\n              .then(function (response) {\r\n                if(response.data.status == 5){\r\n                  me.$vs.notify({\r\n                      text: response.data.message,\r\n                      color: 'danger',\r\n                      iconPack: 'feather',\r\n                      icon: 'icon-alert-triangle',\r\n                      time:6000\r\n                  })\r\n                  return\r\n                }\r\n                if (response.data.status == 0) {\r\n                  me.getLibros();\r\n                  me.codigo = ''\r\n                  me.$vs.notify({\r\n                      color: 'danger',\r\n                      title: 'Error',\r\n                      text: 'El código ingresado, ya está en uso.'\r\n                  })\r\n                  if(response.data.realizarTicket == 'ok'){\r\n                    //Para abrir un ticket\r\n                    me.ticket.codigo = response.data.codigo;\r\n                    me.ticket.usuario = response.data.usuario;\r\n                    me.ticket.institucion = response.data.institucion;\r\n                    me.ticket.descripcion = \"El código ingresado, ya está en uso.\";\r\n                    me.ticket.nombreInstitucion = response.data.datosEstudiante[0].nombreInstitucion;\r\n                    me.ticket.estudiante = response.data.datosEstudiante[0].estudiante;\r\n                    me.ticket.cedula = response.data.datosEstudiante[0].cedula;\r\n                    me.popupTicket = true;\r\n                  }\r\n                  else{\r\n                      me.$vs.notify({\r\n                      color: 'primary',\r\n                      title: 'Mensaje',\r\n                      text: 'Tiene un ticket abierto.'\r\n                      })\r\n                  }\r\n                }\r\n                if (response.data.status == 1) {\r\n                  me.getLibros();\r\n                  me.codigo = ''\r\n                  me.$vs.notify({\r\n                      color: 'success',\r\n                      title: 'Guardado',\r\n                      text: 'Libro Agregado'\r\n                  })\r\n                }\r\n                if (response.data.status == 2) {\r\n                  me.getLibros();\r\n                  me.codigo = ''\r\n                  me.$vs.notify({\r\n                      color: 'warning',\r\n                      title: 'Error',\r\n                      text: 'El código ingresado, no existe.'\r\n                  })\r\n                  if(response.data.realizarTicket == 'ok'){\r\n                      //Para abrir un ticket\r\n                      me.ticket.codigo = response.data.codigo;\r\n                      me.ticket.usuario = response.data.usuario;\r\n                      me.ticket.institucion = response.data.institucion;\r\n                      me.ticket.descripcion = \"El código ingresado, no existe\";\r\n                      me.ticket.nombreInstitucion = response.data.datosEstudiante[0].nombreInstitucion;\r\n                      me.ticket.estudiante = response.data.datosEstudiante[0].estudiante;\r\n                      me.ticket.cedula = response.data.datosEstudiante[0].cedula;\r\n                      me.popupTicket = true;\r\n                  }\r\n                  else{\r\n                      me.$vs.notify({\r\n                      color: 'primary',\r\n                      title: 'Mensaje',\r\n                      text: 'Tiene un ticket abierto.'\r\n                      })\r\n                  }\r\n                }\r\n                if (response.data.status == 4) {\r\n                  me.getLibros();\r\n                  me.codigo = ''\r\n                  me.$vs.notify({\r\n                      color: 'warning',\r\n                      title: 'Error',\r\n                      text: 'El código ingresado, ha sido devuelto.'\r\n                  })\r\n                  if(response.data.realizarTicket == 'ok'){\r\n                      //Para abrir un ticket\r\n                      me.ticket.codigo = response.data.codigo;\r\n                      me.ticket.usuario = response.data.usuario;\r\n                      me.ticket.institucion = response.data.institucion;\r\n                      me.ticket.descripcion = \"El código ingresado, ha sido devuelto\";\r\n                      me.ticket.nombreInstitucion = response.data.datosEstudiante[0].nombreInstitucion;\r\n                      me.ticket.estudiante = response.data.datosEstudiante[0].estudiante;\r\n                      me.ticket.cedula = response.data.datosEstudiante[0].cedula;\r\n                      me.popupTicket = true;\r\n                  }else{\r\n                      me.$vs.notify({\r\n                      color: 'primary',\r\n                      title: 'Mensaje',\r\n                      text: 'Tiene un ticket abierto.'\r\n                      })\r\n                  }\r\n                }\r\n                if (response.data.status == 3) {\r\n                  me.getLibros();\r\n                  me.codigo = ''\r\n                  me.$vs.notify({\r\n                      color: 'warning',\r\n                      title: 'Error',\r\n                      text: 'El código ingresado, se encuentra bloqueado.'\r\n                  })\r\n                  if(response.data.realizarTicket == 'ok'){\r\n                      //Para abrir un ticket\r\n                      me.ticket.codigo = response.data.codigo;\r\n                      me.ticket.usuario = response.data.usuario;\r\n                      me.ticket.institucion = response.data.institucion;\r\n                      me.ticket.descripcion = \"El código ingresado, se encuentra bloqueado\";\r\n                      me.ticket.nombreInstitucion = response.data.datosEstudiante[0].nombreInstitucion;\r\n                      me.ticket.estudiante = response.data.datosEstudiante[0].estudiante;\r\n                      me.ticket.cedula = response.data.datosEstudiante[0].cedula;\r\n                      me.popupTicket = true;\r\n                  }else{\r\n                      me.$vs.notify({\r\n                      color: 'primary',\r\n                      title: 'Mensaje',\r\n                      text: 'Tiene un ticket abierto.'\r\n                      })\r\n                  }\r\n                }\r\n              })\r\n              .catch(function (error) {})\r\n            }\r\n        },\r\n        close() {\r\n            this.$vs.notify({\r\n                color: 'danger',\r\n                title: '',\r\n                text: 'Datos no guardados!'\r\n            })\r\n        },\r\n    },\r\n}\r\n</script>\r\n"]}]}