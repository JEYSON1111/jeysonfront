{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\salle\\administrador\\evaluaciones\\CrearPreguntaSalle.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\salle\\administrador\\evaluaciones\\CrearPreguntaSalle.vue","mtime":1712682816504},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\n  import axios from 'axios'\r\n  import vSelect from 'vue-select'\r\n  import \"quill/dist/quill.core.css\";\r\n  import \"quill/dist/quill.snow.css\";\r\n  import \"quill/dist/quill.bubble.css\";\r\n  import {\r\n      quillEditor\r\n  } from \"vue-quill-editor\";\r\nexport default{\r\n    components:{\r\n        quillEditor,\r\n        vSelect,\r\n    },\r\n    data(){\r\n        return{\r\n            pregunta: {descripcion: '', tema: {id: '', label: ''}, respuesta: '', opcion1: '', opcion2: '', opcion3: '', img_pregunta: '', img_respuesta: '', img_opcion1: '', img_opcion2: '', img_opcion3: '', puntaje_pregunta: '', cant_coincidencias: 0},\r\n            opcion: {id_opcion_pregunta: '', id_pregunta: '', opcion: '', img_opcion: '', tipo: ''},\r\n            opciones: [],\r\n            img_opcion_old:'',\r\n            src_imagen_opcion:'',\r\n            src_imagen_pregunta:'',\r\n            activoPregunta:true,\r\n            id_opcion_tipo234:'',\r\n            palabras_clave:'',\r\n            editarOpcionActiva:false,\r\n            id_preguntaActiva: '',\r\n        }\r\n    },\r\n    props:{\r\n        usuario:{\r\n            type:Object,\r\n            default:{}\r\n        },\r\n        arregloPeriodos:{\r\n            type:Array,\r\n            default:[]\r\n        },\r\n        periodoSelect:{\r\n            type:String,\r\n            default:\"\"\r\n        },\r\n        editarActivo:{\r\n            type:Boolean,\r\n            default:false,\r\n        },\r\n        guardadoActivo:{\r\n            type:Boolean,\r\n            default:false\r\n        },\r\n        pregTipo:{\r\n            type:Number,\r\n            default:1\r\n        },\r\n        titPregTipo:{\r\n            type:String,\r\n            default:\"\"\r\n        },\r\n        txtPregTipo:{\r\n            type:String,\r\n            default:\"\"\r\n        },\r\n        areas:{\r\n            type:Array,\r\n            default:[]\r\n        },\r\n        asignaturas:{\r\n            type:Array,\r\n            default:[]\r\n        },\r\n        active1:{\r\n            type:Boolean,\r\n            default:false,\r\n        },\r\n        area_pregunta:{\r\n            type:Object,\r\n            default:{}\r\n        },\r\n        asignatura_pregunta:{\r\n            type:Object,\r\n            default:{}\r\n        },\r\n        preguntaSelect:{\r\n            type:String,\r\n            default:\"\"\r\n        },\r\n        puntaje_pregunta:{\r\n            type:Number,\r\n            default:1\r\n        },\r\n    },\r\n    watch:{\r\n        guardadoActivo(results){\r\n            if(results == false){\r\n                console.log(\"aaaak\")\r\n                this.limpiar()\r\n            }\r\n        },\r\n    },\r\n    mounted(){\r\n        let me = this\r\n        this.limpiar()\r\n        if(me.editarActivo){\r\n            me.editarFormulario()\r\n        }\r\n    },\r\n    methods:{\r\n        editarFormulario(){\r\n            let me = this;\r\n            let dataE               = me.preguntaSelect\r\n            console.log(\"aaa\",dataE)\r\n            if(dataE.pregunta.estado == 1){\r\n            me.activoPregunta               = true\r\n            }else{\r\n            me.activoPregunta               = false\r\n            }\r\n            me.pregunta                     = dataE.pregunta\r\n            me.id_preguntaActiva            = dataE.pregunta.id_pregunta;\r\n            me.img_preg_old                 = dataE.pregunta.img_pregunta;\r\n            if(dataE.pregunta.img_pregunta!=''){\r\n                me.src_imagen_pregunta = this.$data_url+'archivos/img/salle/img_preguntas/'+dataE.pregunta.img_pregunta;\r\n            }\r\n            ///mostrar opciones\r\n            if(me.pregTipo == 3){\r\n            if(dataE.opciones.length > 0){\r\n                let preOpciones             = dataE.opciones.filter(p => p.tipo == '1')\r\n                me.opcion                   = preOpciones[0]\r\n            }\r\n            }else{\r\n            me.opcion = {}\r\n            }\r\n            me.opciones                     = dataE.opciones\r\n            if(dataE.opciones.length > 0){\r\n            me.palabras_clave               = dataE.opciones[0].opcion;\r\n            me.pregunta.cant_coincidencias  = dataE.opciones[0].cant_coincidencias;\r\n            me.id_opcion_tipo234            = dataE.opciones[0].id_opcion_pregunta;\r\n            }\r\n        },\r\n        agregar(){\r\n            let me = this;\r\n            if( me.pregunta.descripcion.trim() === '' || me.puntaje_pregunta === '' || me.puntaje_pregunta === undefined || me.asignatura_pregunta === null || me.asignatura_pregunta === undefined){\r\n            me.$vs.notify({\r\n            text:'Debe completar todos los campos antes de guardar',\r\n            color:'warning',\r\n            iconPack: 'feather',\r\n            icon:'icon-alert-triangle'})\r\n            return;\r\n            }\r\n            if( me.asignatura_pregunta.id_asignatura === '' || me.asignatura_pregunta.id_asignatura === undefined ){\r\n            me.$vs.notify({\r\n            text:'Seleccione una asignatura antes de guardar',\r\n            color:'warning',\r\n            iconPack: 'feather',\r\n            icon:'icon-alert-triangle'})\r\n            return;\r\n            }\r\n            me.$vs.loading()\r\n            let fileImgPreg\r\n            fileImgPreg = document.getElementById(\"file1\").files[0];\r\n            me.pregunta.file1 = fileImgPreg;\r\n            const formData = new FormData();\r\n            formData.append('descripcion',      me.pregunta.descripcion);\r\n            formData.append('img_pregunta',     fileImgPreg);\r\n            formData.append('id_tipo_pregunta', me.pregTipo);\r\n            formData.append('id_asignatura',    me.asignatura_pregunta.id_asignatura);\r\n            formData.append('puntaje_pregunta', me.puntaje_pregunta);\r\n            formData.append('editor',           me.usuario.idusuario);\r\n            formData.append('n_evaluacion',     me.periodoSelect)\r\n            formData.append('estado',           1)\r\n            axios.post(this.$data_url+'api/preguntas_salle', formData)\r\n            .then(res => {\r\n                me.id_preguntaActiva    = res.data.id_pregunta;\r\n                me.$vs.loading.close()\r\n                me.$emit('changeRecharge',4)\r\n                me.$vs.notify({\r\n                text:'Pregunta creada exitosamente',\r\n                color:'success',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n            })\r\n            .catch(function (error) {\r\n                me.$vs.loading.close()\r\n                console.log(error + ': error al crear pregunta');\r\n            })\r\n        },\r\n        editarPregunta(){\r\n            let me = this;\r\n            if( me.pregunta.descripcion.trim() === '' || me.puntaje_pregunta === '' || me.puntaje_pregunta === undefined || me.asignatura_pregunta === null || me.asignatura_pregunta === undefined){\r\n            me.$vs.notify({\r\n                text:'Debe completar todos los campos antes de guardar',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-alert-triangle'})\r\n            return;\r\n            }\r\n            if( me.asignatura_pregunta.id_asignatura === '' || me.asignatura_pregunta.id_asignatura === undefined ){\r\n            me.$vs.notify({\r\n                text:'Seleccione una asignatura antes de guardar',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-alert-triangle'})\r\n            return;\r\n            }\r\n            me.$vs.loading()\r\n            let fileImgPreg = document.getElementById(\"file1\").files[0];\r\n            if(fileImgPreg === undefined ){\r\n                fileImgPreg = me.pregunta.img_pregunta;\r\n            }\r\n            const formData = new FormData();\r\n            formData.append('id_pregunta',      me.pregunta.id_pregunta);\r\n            formData.append('id_tipo_pregunta', me.pregTipo);\r\n            formData.append('id_asignatura',    me.asignatura_pregunta.id_asignatura);\r\n            formData.append('descripcion',      me.pregunta.descripcion);\r\n            formData.append('img_pregunta',     fileImgPreg);\r\n            formData.append('img_pregunta_old', me.img_preg_old);\r\n            formData.append('puntaje_pregunta', me.puntaje_pregunta);\r\n            formData.append('editor',           me.usuario.idusuario);\r\n            formData.append('n_evaluacion',     me.periodoSelect);\r\n            formData.append('estado',           me.pregunta.estado)\r\n            axios.post(this.$data_url+'api/preguntas_salle', formData).then(res => {\r\n            me.$emit('changeRecharge',2)\r\n            me.img_preg_old = res.data.img_pregunta\r\n            me.$vs.loading.close()\r\n            me.$vs.notify({\r\n            text:'Pregunta editada correctamente',\r\n            color:'success',\r\n            iconPack: 'feather',\r\n            icon:'icon-check'})\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n                me.$vs.loading.close()\r\n            })\r\n        },\r\n        limpiar(){\r\n            let me = this;\r\n            this.src_imagen_pregunta        = '';\r\n            this.src_imagen_opcion          = '';\r\n            this.opciones                   = [];\r\n            this.pregunta.descripcion       = '';\r\n            this.pregunta.cant_coincidencias='';\r\n            this.pregunta.opcion            = '';\r\n            this.opcion.opcion              = '';\r\n            this.opcion.tipo                = '';\r\n            this.palabras_clave             = '';\r\n            this.editarOpcionActiva         = false\r\n            this.id_preguntaActiva          = '';\r\n        },\r\n        editarOpcion(item){\r\n            let me                          = this;\r\n            //cargar formulario de opciones\r\n            me.img_opcion_old               = \"\"\r\n            location.href                   = '#editar'\r\n            me.img_opcion_old               = item.img_opcion\r\n            document.getElementById(\"file2\").value = '';\r\n            me.opcion                       = item\r\n            me.src_imagen_opcion            = this.$data_url+'archivos/img/salle/img_preguntas/'+item.img_opcion;\r\n        },\r\n        confirmEditarOpcion(item){\r\n            let me                          = this;\r\n            me.editarOpcionActiva           = false;\r\n            let fileImgOpcion;\r\n            fileImgOpcion = document.getElementById(\"file2\").files[0];\r\n            if(fileImgOpcion === undefined ){\r\n                fileImgOpcion = item.img_opcion;\r\n            }\r\n            let tipo = 0;\r\n            if( me.opcion.tipo === true || me.opcion.tipo === 1 ){\r\n                tipo = 1;\r\n            }\r\n            const formData = new FormData();\r\n            formData.append('opcion',               me.opcion.opcion);\r\n            formData.append('tipo',                 tipo);\r\n            formData.append('img_opcion',           fileImgOpcion);\r\n            formData.append('img_opcion_old',       me.img_opcion_old);\r\n            formData.append('id_opcion_pregunta',   item.id_opcion_pregunta);\r\n            formData.append('id_pregunta',          item.id_pregunta);\r\n            formData.append('cant_coincidencias',   0);\r\n            formData.append('n_evaluacion',         me.periodoSelect);\r\n            axios.post(this.$data_url+'api/editar_opcion_salle', formData)\r\n            .then(res => {\r\n                me.opciones             = res.data;\r\n                me.editarOpcionActiva   = false;\r\n                me.opcion.opcion        = '';\r\n                me.opcion.tipo          = '';\r\n                me.src_imagen_opcion    = '';\r\n                me.$emit('changeRecharge',2)\r\n                me.$vs.notify({\r\n                text:'Opción editada correctamente',\r\n                color:'success',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n        },\r\n        mostrarImg(file, img){\r\n            let me                  = this;\r\n            me.src_imagen_opcion    = ' ';\r\n            me.src_imagen_pregunta  = ' ';\r\n            var archivo = document.getElementById(\"file\"+file).files[0];\r\n            var reader = new FileReader();\r\n            if (me) {\r\n                reader.readAsDataURL(archivo );\r\n                reader.onloadend = function () {\r\n                    document.getElementById(\"img\"+img).src = reader.result;\r\n                }\r\n            }\r\n        },\r\n        quitarOpcion(item){\r\n            let me = this;\r\n            axios.get(this.$data_url+'api/quitar_opcion_salle/'+item.id_opcion_pregunta)\r\n            .then(res => {\r\n                me.removeItemFromArr(me.opciones, item)\r\n                me.$emit('changeRecharge',2)\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n        },\r\n        removeItemFromArr (arr, item) {\r\n          const i = arr.indexOf(item)\r\n          arr.splice(i, 1)\r\n        },\r\n        quitarImagen(id){\r\n          let me = this\r\n          document.getElementById('file' + id).value = null;\r\n          if( document.getElementById(\"img\" + id) ){\r\n            document.getElementById(\"img\" + id).src = '';\r\n          }\r\n          if( id === 1 ){\r\n            me.img_preg_old = ''\r\n          }else{\r\n            me.img_opcion_old = ''\r\n          }\r\n        },\r\n        editarPalabrasclave(){\r\n          let me = this;\r\n          if( me.pregunta.cant_coincidencias === '' || me.pregunta.cant_coincidencias === undefined || me.pregunta.cant_coincidencias < 0){\r\n              me.$vs.notify({\r\n              text:'Ingrese la cantidad de coincidencias de palabras clave.',\r\n              color:'warning',\r\n              iconPack: 'feather',\r\n              icon:'icon-check'})\r\n              return\r\n          }\r\n          var cantCoin = parseInt(me.pregunta.cant_coincidencias)\r\n          if( me.id_opcion_tipo234 != '' ){\r\n              let palabrasV = me.palabras_clave.replace(/ /gi, '')\r\n              const formData = new FormData();\r\n              formData.append('opcion', palabrasV);\r\n              formData.append('tipo', 1);\r\n              formData.append('img_opcion', '');\r\n              formData.append('img_opcion_old', '');\r\n              formData.append('id_opcion_pregunta', me.id_opcion_tipo234);\r\n              formData.append('id_pregunta', me.pregunta.id_pregunta);\r\n              formData.append('cant_coincidencias', cantCoin);\r\n              formData.append('n_evaluacion',         me.periodoSelect);\r\n              me.$vs.loading()\r\n              axios.post(this.$data_url+'api/editar_opcion_salle', formData)\r\n              .then(res => {\r\n                me.$vs.loading.close()\r\n                  me.opciones           = res.data;\r\n                  me.editarOpcionActiva = false;\r\n                  me.opcion.opcion      = '';\r\n                  me.opcion.tipo        = '';\r\n                  me.src_imagen_opcion  = '';\r\n                  me.$emit('changeRecharge',2)\r\n                  me.$vs.loading.close()\r\n                  me.$vs.notify({\r\n                  text:'Palabras clave guardada correctamente',\r\n                  color:'success',\r\n                  iconPack: 'feather',\r\n                  icon:'icon-check'})\r\n              })\r\n              .catch(function (error) {\r\n                  me.$vs.loading.close()\r\n                  console.log(error);\r\n              })\r\n          }else{\r\n              me.cargarOpcionAbierta()\r\n          }\r\n        },\r\n        cargarOpcion(){\r\n            let me = this;\r\n            if( me.id_preguntaActiva === '' ){\r\n                me.$vs.notify({\r\n                    text:'Debe crear una pregunta antes de cargar las opciones.',\r\n                    color:'warning',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check'})\r\n            }else{\r\n                me.$vs.loading()\r\n                const formData = new FormData();\r\n                let fileImgPreg = document.getElementById(\"file2\").files[0];\r\n                let tipo = 0;\r\n                if( me.opcion.tipo === true ){\r\n                    tipo = 1;\r\n                }\r\n                formData.append('opcion',               me.opcion.opcion);\r\n                formData.append('id_pregunta',          me.id_preguntaActiva);\r\n                formData.append('img_opcion',           fileImgPreg);\r\n                formData.append('tipo',                 tipo);\r\n                formData.append('cant_coincidencias',   0);\r\n                formData.append('n_evaluacion',         me.periodoSelect);\r\n                axios.post(this.$data_url+'api/cargar_opcion_salle', formData)\r\n                .then(res => {\r\n                    me.opciones             = res.data;\r\n                    me.opcion.opcion        = '';\r\n                    me.opcion.tipo          = '';\r\n                    me.src_imagen_opcion    = '';\r\n                    document.getElementById(\"file2\").value = '';\r\n                    me.$vs.loading.close()\r\n                    me.$emit('changeRecharge',2)\r\n                    //notify guardado\r\n                })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close()\r\n                    console.log(error);\r\n                })\r\n            }\r\n        },\r\n        cargarOpcionAbierta(){\r\n            let me = this;\r\n            if( me.pregunta.cant_coincidencias === '' || me.pregunta.cant_coincidencias === undefined || me.pregunta.cant_coincidencias < 0){\r\n            me.$vs.notify({\r\n            text:'Ingrese la cantidad de coincidencias de palabras clave.',\r\n            color:'warning',\r\n            iconPack: 'feather',\r\n            icon:'icon-check'})\r\n            return\r\n            }\r\n            if( me.id_preguntaActiva === '' ){\r\n            me.$vs.notify({\r\n            text:'Debe crear una pregunta antes de cargar las opciones.',\r\n            color:'warning',\r\n            iconPack: 'feather',\r\n            icon:'icon-check'})\r\n            }else{\r\n            let tipo = 6;\r\n            let palabrasV = me.palabras_clave.replace(/ /gi, '')\r\n            const formData = new FormData();\r\n            formData.append('opcion',               palabrasV);\r\n            formData.append('tipo',                 tipo);\r\n            formData.append('img_opcion',           null);\r\n            formData.append('id_pregunta',          me.id_preguntaActiva);\r\n            formData.append('cant_coincidencias',   parseInt(me.pregunta.cant_coincidencias));\r\n            formData.append('n_evaluacion',         me.periodoSelect);   \r\n            me.$vs.loading()\r\n            axios.post(this.$data_url+'api/cargar_opcion_salle', formData)\r\n            .then(res => {\r\n                me.id_opcion_tipo234       = res.data[0].id_opcion_pregunta\r\n                me.opciones             = res.data;\r\n                me.opcion.opcion        = '';\r\n                me.opcion.tipo          = '';\r\n                me.src_imagen_opcion    = '';\r\n                me.$emit('changeRecharge',2)\r\n                me.$vs.loading.close()\r\n                me.$vs.notify({\r\n                text:'Palabras clave guardadas correctamente',\r\n                color:'success',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n            })\r\n            .catch(function (error) {\r\n                me.$vs.loading.close()\r\n                console.log(error);\r\n            })\r\n            }\r\n        },\r\n        cargarOpcionesVF(){\r\n            let me = this;\r\n            if( me.id_preguntaActiva === '' ){\r\n                me.$vs.notify({\r\n                text:'Debe crear una pregunta antes de cargar las opciones.',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n            }else{\r\n                me.$vs.loading()\r\n                const formData = new FormData();\r\n                formData.append('opcion',       me.opcion.opcion);\r\n                formData.append('id_pregunta',  me.id_preguntaActiva);\r\n                formData.append('img_opcion', null);\r\n                formData.append('tipo', 1);\r\n                formData.append('cant_coincidencias', 0);\r\n                this.$http.post(this.$server_url+'cargar_opcion_vf_salle', formData)\r\n                .then(res => {\r\n                    // me.opcion.opcion        = '';\r\n                    // me.opcion.tipo          = '';\r\n                    me.editarActivo            = true\r\n                    me.src_imagen_opcion       = '';\r\n                    me.$vs.loading.close()\r\n                    me.$vs.notify({\r\n                    text:'Opción guardada correctamente',\r\n                    color:'success',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check'})\r\n                    me.$emit('changeRecharge',3)\r\n                })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close()\r\n                    console.log(error);\r\n                })\r\n            }\r\n        },\r\n        editarOpcionesVF(){\r\n            let me = this;\r\n            me.$vs.loading()\r\n            const formData = new FormData();\r\n                formData.append('opcion',       me.opcion.opcion);\r\n                formData.append('id_pregunta',  me.id_preguntaActiva);\r\n                formData.append('img_opcion', null);\r\n                formData.append('tipo', 1);\r\n                formData.append('id_opcion', 1);\r\n                formData.append('cant_coincidencias', 0);\r\n            this.$http.post(this.$server_url+'cargar_opcion_vf_salle', formData)\r\n            .then(res => {\r\n                me.$vs.loading.close()\r\n                me.$emit('changeRecharge',2)\r\n                me.$vs.notify({\r\n                text:'Opción guardada correctamente',\r\n                color:'success',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n            })\r\n            .catch(function (error) {\r\n                me.$vs.loading.close()\r\n                console.log(error);\r\n            })\r\n        },\r\n        transformarPregunta(){\r\n            let me = this\r\n            me.$vs.loading()\r\n            const formData = new FormData();\r\n            formData.append('id_pregunta', me.pregunta.id_pregunta);\r\n            formData.append('id_tipo_pregunta', me.pregTipo);\r\n            this.$http.post(this.$server_url+'transformar_preguntas_salle', formData).then(res => {\r\n            me.$vs.notify({\r\n            text:'Pregunta transformada correctamente.',\r\n            color:'primary',\r\n            iconPack: 'feather',\r\n            icon:'icon-check'})\r\n            me.$emit('changeRecharge',1)\r\n            me.$vs.loading.close()\r\n            })\r\n            .catch(function (error) {\r\n            me.$vs.loading.close()\r\n            })\r\n        },\r\n        //METODOS PARA CAMBIAR ESTADO PREGUNTA\r\n        CambiarEstadoPreguntaSalle(){\r\n            let me        = this\r\n            let est       = 0\r\n            if(me.activoPregunta){\r\n            est         = 1\r\n            }else{\r\n            est         = 0\r\n            }\r\n            me.pregunta.estado = est\r\n            let formData  = new FormData();\r\n            formData.append('id_pregunta',    me.pregunta.id_pregunta);\r\n            formData.append('estado',         est)\r\n            me.$vs.loading()\r\n            this.$http.post(this.$server_url+'CambiarEstadoPreguntaSalle', formData)\r\n            .then(res => {\r\n            me.$vs.loading.close()\r\n            me.$vs.notify({\r\n            text:'Se cambio de estado correctamente',\r\n            color:'warning',\r\n            iconPack: 'feather',\r\n            icon:'icon-check',\r\n            })\r\n            me.$emit('changeRecharge',2)\r\n            })\r\n        },\r\n       //FIN METODOS PARA CAMBIAR ESTADO PREGUNTA\r\n    }\r\n}       \r\n",{"version":3,"sources":["CrearPreguntaSalle.vue"],"names":[],"mappings":";AAmLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CrearPreguntaSalle.vue","sourceRoot":"src/views/salle/administrador/evaluaciones","sourcesContent":["<template>\r\n    <div>\r\n        <vx-card v-bind:title=\"titPregTipo\" title-color=\"primary\" v-bind:subtitle=\"txtPregTipo\">\r\n            <vs-tabs alignment=\"fixed\">\r\n              <vs-tab label=\"Pregunta\">\r\n                <div class=\"vx-row\">\r\n                  <div class=\"flex justify-center\">\r\n                    <p v-for=\"(item,key) in arregloPeriodos\" :key=\"key\">\r\n                      <vs-chip class=\"ml-2\" v-if=\"item.id == periodoSelect\">Período Evaluación Seleccionada: <b class=\"ml-1\">{{ item.nombre }}</b></vs-chip>\r\n                    </p>\r\n                    <br>\r\n                  </div>\r\n                </div>\r\n                  <div class=\"vx-row mb-5 mt-4\">\r\n                    <!------------SELEC TEMA PREGUNTA-------------------->\r\n                    <div class=\"vx-col sm:w-1/2 w-full\">\r\n                      Área\r\n                      <v-select :options=\"areas\" :reduce=\"areas => areas\" label=\"nombre_area\" v-model=\"area_pregunta\" @input=\"getAsignaturas()\"></v-select>\r\n                    </div>\r\n                    <div class=\"vx-col sm:w-1/2 w-full\">\r\n                        Asignatura\r\n                        <v-select :options=\"asignaturas\" :reduce=\"asignaturas => asignaturas\" label=\"nombre_asignatura\" v-model=\"asignatura_pregunta\"></v-select>\r\n                    </div>\r\n                    <!------------FIN SELEC TEMA PREGUNTA-------------------->\r\n                  </div>\r\n                  <div class=\"vx-row mb-5\">\r\n                      <div class=\"vx-col w-full\">\r\n                          <div style=\"border: 1px solid #d5d5d5; border-radius: 10px; padding: 5px 5px 5px 5px;\" align=\"center\" class=\"mb-2\">\r\n                              <input type=\"file\" name=\"file1\" id=\"file1\" class=\"inputfile\" style=\"display: none;\" v-on:change=\"mostrarImg(1,1)\">\r\n                              <label for=\"file1\" style=\"margin-bottom: -10px; margin-right: 10px; cursor: pointer; color: gray; width: 49%; font-size: 11px; line-height: 80%;\">\r\n                                  Click aquí para subir imagen\r\n                              </label>\r\n                              <label @click=\"quitarImagen(1)\" style=\"margin-bottom: -10px; margin-left: 10px; cursor: pointer; color: red; width: 49%; font-size: 11px;\">\r\n                                  Click aquí para quitar imagen\r\n                              </label>\r\n                              <div v-if=\"src_imagen_pregunta==='' || src_imagen_pregunta===null || src_imagen_pregunta==='null' || src_imagen_pregunta===this.$server_url+'img/salle/img_preguntas/null'\"></div>\r\n                              <img id=\"img1\" class=\"img-responsive mb-2\" v-bind:src=\"src_imagen_pregunta\" style=\"max-width: 400px; border-radius: 5px;\" v-else>\r\n                          </div>\r\n                      </div>\r\n                      <div class=\"vx-col w-full mt-3\">\r\n                        <p>Nombre Pregunta</p>\r\n                        <quill-editor class=\"w-full h-25 alto mt-2\" style=\"height:80px;\" v-model=\"pregunta.descripcion\"></quill-editor>\r\n                      </div>\r\n                      <div class=\"vx-col sm:w-1/4 w-full\" style=\"margin-top: 50px;\">\r\n                          <vs-input disabled type=\"number\" class=\"mb-4 w-full mt-5\" label=\"Puntaje\" placeholder=\"Puntaje\" v-model=\"puntaje_pregunta\"/>\r\n                      </div>\r\n                      <div v-if=\"editarActivo===true\" class=\"vx-col sm:w-1/4 w-full pt-5\" align=\"center\" style=\"margin-top: 50px;\">\r\n                        <vs-switch  color=\"success\" @input=\"CambiarEstadoPreguntaSalle()\" v-model=\"activoPregunta\">\r\n                          <span slot=\"on\">Activado</span>\r\n                          <span slot=\"off\">Desactivado</span>\r\n                        </vs-switch>\r\n                      </div>\r\n                      <div class=\"vx-col sm:w-1/4 w-full pt-5\" align=\"center\" style=\"margin-top: 50px;\">\r\n                          <vs-button class=\"w-full mt-5 p-3\" title=\"Transformar pregunta a respuesta simple o viceversa\" icon-pack=\"feather\" icon=\"icon-loader\" color=\"warning\" @click=\"transformarPregunta()\"> Transformar pregunta </vs-button>\r\n                      </div>\r\n                      <div class=\"vx-col sm:w-1/4 w-full mb-2\" align=\"right\" style=\"margin-top: 50px;\">\r\n                          <div v-if=\"editarActivo\">\r\n                              <vs-button class=\"w-full mt-10\" @click=\"editarPregunta\" type=\"filled\">Editar pregunta</vs-button>\r\n                          </div>\r\n                          <div v-else>\r\n                              <vs-button class=\"w-full mt-10\" v-if=\"guardadoActivo == false\" color=\"success\" type=\"filled\" @click=\"agregar()\">Guardar pregunta</vs-button>\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n              </vs-tab>\r\n              <!-------INICIO TAB OPCIONES PREG TIPO 1, 5----->\r\n              <vs-tab label=\"Opciones\" v-if=\"pregTipo===1 || pregTipo===5\">\r\n                  <div class=\"vx-col w-full mb-2\" style=\"padding: 10px;\">\r\n                    <div class=\"vx-row\">\r\n                      <div class=\"flex justify-center\">\r\n                        <p v-for=\"(item,key) in arregloPeriodos\" :key=\"key\">\r\n                          <vs-chip class=\"ml-2\" v-if=\"item.id == periodoSelect\">Período Evaluación Seleccionada: <b class=\"ml-1\">{{ item.nombre }}</b></vs-chip>\r\n                        </p>\r\n                        <br>\r\n                      </div>\r\n                    </div>\r\n                  <vs-divider position=\"left\" color=\"success\">Crear opciones</vs-divider>\r\n                  <div class=\"vx-row mb-2\" id=\"editar\">\r\n                      <div class=\"vx-col w-full mb-1\">\r\n                          <div style=\"border: 1px solid #d5d5d5; border-radius: 5px; padding: 5px 5px 5px 5px;\" align=\"center\">\r\n                              <input type=\"file\" name=\"file2\" id=\"file2\" class=\"inputfile\" style=\"display: none;\" v-on:change=\"mostrarImg(2,2)\">\r\n                              <label for=\"file2\" style=\"margin-bottom: -10px; margin-right: 10px; cursor: pointer; color: gray; width: 49%; font-size: 11px;\">\r\n                                  Click aquí para subir imagen\r\n                              </label>\r\n                              <label @click=\"quitarImagen(2)\" style=\"margin-bottom: -10px; margin-left: 10px; cursor: pointer; color: red; width: 49%; font-size: 11px;\">\r\n                                  Click aquí para quitar imagen\r\n                              </label>\r\n                              <div v-if=\"src_imagen_opcion==='' || src_imagen_opcion===null || src_imagen_opcion==='null' || src_imagen_opcion===this.$server_url+'archivos/img/salle/img_preguntas/'\"></div>\r\n                              <img id=\"img2\" style=\"max-width: 400px; border-radius: 5px;\" class=\"img-responsive mb-2\" v-bind:src=\"src_imagen_opcion\" v-else>\r\n                          </div>\r\n                          <vs-textarea class=\"mt-2\" label=\"Nombre Opción\" v-model=\"opcion.opcion\" height=\"60px\"/>\r\n                      </div>\r\n                      <div class=\"vx-row w-full\" v-if=\"pregTipo===1 || pregTipo===5\">\r\n                          <div class=\"vx-col sm:w-1/2 w-full\" align=\"center\">\r\n                              <vs-switch style=\"width: 100px;\" color=\"success\" class=\"mt-3 mb-5\" v-model=\"opcion.tipo\">\r\n                                  <span slot=\"on\">Correcta</span>\r\n                                  <span slot=\"off\">Incorrecta</span>\r\n                              </vs-switch>\r\n                          </div>\r\n                          <div class=\"vx-col sm:w-1/2 w-full mb-1\" align=\"center\">\r\n                              <vs-button v-if=\"editarOpcionActiva===false\" color=\"success\" type=\"flat\" icon-pack=\"feather\" icon=\"icon-plus\" @click=\"cargarOpcion()\">Agregar</vs-button>\r\n                              <vs-button v-else color=\"primary\" class=\"w-full\" type=\"flat\" icon-pack=\"feather\" icon=\"icon-save\" @click=\"confirmEditarOpcion(opcion)\">Actualizar Opción</vs-button>\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n                  </div>\r\n                  <div class=\"vx-col w-full\">\r\n                  <vs-divider position=\"center\" color=\"primary\">Opciones agregadas</vs-divider>\r\n                  <div class=\"vx-row mb-3\" :key=\"indexitem\" v-for=\"(item, indexitem) in opciones\">\r\n                      <div class=\"vx-col sm:w-1/5 w-full\" align=\"center\">\r\n                        <img v-if=\"item.img_opcion\" style=\"border-radius: 5px;\" v-bind:src=\"$data_url+'archivos/img/salle/img_preguntas/'+item.img_opcion\" width=\"100%\">\r\n                      </div>\r\n                      <div class=\"vx-col sm:w-4/5 w-full text-center\">\r\n                          {{item.opcion}}\r\n                          <div class=\"vx-row\" align=\"center\">\r\n                          <div class=\"vx-col sm:w-1/3 w-full\">\r\n                              <vs-switch style=\"width: 100px;\" disabled=\"true\" color=\"success\" class=\"mt-3 mb-5\" v-model=\"item.tipo\">\r\n                                  <span slot=\"on\">Correcta</span>\r\n                                  <span slot=\"off\">Incorrecta</span>\r\n                              </vs-switch>\r\n                          </div>\r\n                          <div class=\"vx-col sm:w-1/3 w-full\">\r\n                              <vs-button color=\"primary\" type=\"line\" icon-pack=\"feather\" icon=\"icon-edit-1\" size=\"small\" @click=\"editarOpcionActiva=true; editarOpcion(item)\">Editar</vs-button>\r\n                          </div>\r\n                          <div class=\"vx-col sm:w-1/3 w-full\">\r\n                              <vs-button color=\"danger\" type=\"line\" icon-pack=\"feather\" icon=\"icon-trash\" size=\"small\" @click=\"quitarOpcion(item)\">Eliminar</vs-button>\r\n                          </div>\r\n                          </div>\r\n                          <vs-divider></vs-divider>\r\n                      </div>\r\n                  </div>\r\n                  </div>\r\n              </vs-tab>\r\n              <!-------FIN TAB OPCIONES PREG TIPO 1, 5----->\r\n              <!-------INICIO TAB OPCIONES PREG TIPO 3, 4----->\r\n              <vs-tab label=\"Respuesta\" v-if=\"pregTipo===3 || pregTipo===4\">\r\n                  <div v-if=\"pregTipo===3\" class=\"mt-6\">\r\n                  <div>\r\n                      <vx-card class=\"mb-4 mt-6\">\r\n                          <vs-radio v-model=\"opcion.opcion\" vs-name=\"radios1opcion\" vs-value=\"Verdadero\">Verdadero</vs-radio>\r\n                      </vx-card>\r\n                      <vx-card class=\"mb-4\">\r\n                          <vs-radio v-model=\"opcion.opcion\" vs-name=\"radios1opcion\" vs-value=\"Falso\">Falso</vs-radio>\r\n                      </vx-card>\r\n                  </div>\r\n                  </div>\r\n                  <div class=\"vx-col w-full mt-6\" align=\"right\">\r\n                      <vs-button  color=\"primary\" type=\"filled\" icon-pack=\"feather\" icon=\"icon-edit-1\" @click=\"editarOpcionesVF()\">Guardar opción</vs-button>\r\n                      <!-- <vs-button v-else color=\"success\" type=\"filled\" @click=\"editarActivo=true;cargarOpcionesVF()\">Guardar</vs-button> -->\r\n                  </div>\r\n              </vs-tab>\r\n              <!-------FIN TAB OPCIONES PREG TIPO 3, 4----->\r\n              <!-------INICIO TAB OPCIONES PREG CERRADA-------->\r\n              <vs-tab label=\"Palabras Clave\" v-if=\"pregTipo===2\">\r\n                  <div class=\"vx-row mt-6\">\r\n                      <div class=\"vx-col w-full\">\r\n                          <vs-alert :active.sync=\"active1\" closable icon-pack=\"feather\" close-icon=\"icon-x\" class=\"mb-3\">\r\n                              Ejemplo: Forma correcta: <span style=\"color: green;\">24, mayo, 1822</span> - Forma Incorrecta: <span style=\"color: red;\">24 de mayo, 1822 </span>\r\n                          </vs-alert>\r\n                          <div style=\"color: #1A76FA;\" class=\"mb-4 w-full\">Evite usar caracteres especiales como: punto, signos de expresión etc...</div>\r\n                          <vs-textarea class=\"mb-3\" label=\"Palabras clave de la respuesta\" placeholder=\"Escriba las palabras clave de la respuesta separadas por una coma (,).\" v-model=\"palabras_clave\"  height=\"70px\"/>\r\n                      </div>\r\n                  </div>\r\n                  <div class=\"vx-row w-full\">\r\n                      <div class=\"vx-col sm:w-1/2 w-full\">\r\n                          <vs-input type=\"number\" class=\"mb-2 w-full\" label=\"Cantidad de coincidencias\" v-model=\"pregunta.cant_coincidencias\"/>\r\n                      </div>\r\n                      <div class=\"vx-col sm:w-1/2 w-full mt-5\">\r\n                          <vs-button class=\"w-full\" v-if=\"editarActivo===true\" @click=\"editarPalabrasclave\" type=\"filled\">Editar</vs-button>\r\n                          <vs-button class=\"w-full\" v-else @click=\"cargarOpcionAbierta\" color=\"success\" type=\"filled\">Guardar</vs-button>\r\n                      </div>\r\n                  </div>\r\n              </vs-tab>\r\n              <!------FIN TAB OPCION TIPO PREG ABIERTA----->\r\n            </vs-tabs>\r\n          </vx-card>\r\n    </div>\r\n</template>\r\n<script>\r\n  import axios from 'axios'\r\n  import vSelect from 'vue-select'\r\n  import \"quill/dist/quill.core.css\";\r\n  import \"quill/dist/quill.snow.css\";\r\n  import \"quill/dist/quill.bubble.css\";\r\n  import {\r\n      quillEditor\r\n  } from \"vue-quill-editor\";\r\nexport default{\r\n    components:{\r\n        quillEditor,\r\n        vSelect,\r\n    },\r\n    data(){\r\n        return{\r\n            pregunta: {descripcion: '', tema: {id: '', label: ''}, respuesta: '', opcion1: '', opcion2: '', opcion3: '', img_pregunta: '', img_respuesta: '', img_opcion1: '', img_opcion2: '', img_opcion3: '', puntaje_pregunta: '', cant_coincidencias: 0},\r\n            opcion: {id_opcion_pregunta: '', id_pregunta: '', opcion: '', img_opcion: '', tipo: ''},\r\n            opciones: [],\r\n            img_opcion_old:'',\r\n            src_imagen_opcion:'',\r\n            src_imagen_pregunta:'',\r\n            activoPregunta:true,\r\n            id_opcion_tipo234:'',\r\n            palabras_clave:'',\r\n            editarOpcionActiva:false,\r\n            id_preguntaActiva: '',\r\n        }\r\n    },\r\n    props:{\r\n        usuario:{\r\n            type:Object,\r\n            default:{}\r\n        },\r\n        arregloPeriodos:{\r\n            type:Array,\r\n            default:[]\r\n        },\r\n        periodoSelect:{\r\n            type:String,\r\n            default:\"\"\r\n        },\r\n        editarActivo:{\r\n            type:Boolean,\r\n            default:false,\r\n        },\r\n        guardadoActivo:{\r\n            type:Boolean,\r\n            default:false\r\n        },\r\n        pregTipo:{\r\n            type:Number,\r\n            default:1\r\n        },\r\n        titPregTipo:{\r\n            type:String,\r\n            default:\"\"\r\n        },\r\n        txtPregTipo:{\r\n            type:String,\r\n            default:\"\"\r\n        },\r\n        areas:{\r\n            type:Array,\r\n            default:[]\r\n        },\r\n        asignaturas:{\r\n            type:Array,\r\n            default:[]\r\n        },\r\n        active1:{\r\n            type:Boolean,\r\n            default:false,\r\n        },\r\n        area_pregunta:{\r\n            type:Object,\r\n            default:{}\r\n        },\r\n        asignatura_pregunta:{\r\n            type:Object,\r\n            default:{}\r\n        },\r\n        preguntaSelect:{\r\n            type:String,\r\n            default:\"\"\r\n        },\r\n        puntaje_pregunta:{\r\n            type:Number,\r\n            default:1\r\n        },\r\n    },\r\n    watch:{\r\n        guardadoActivo(results){\r\n            if(results == false){\r\n                console.log(\"aaaak\")\r\n                this.limpiar()\r\n            }\r\n        },\r\n    },\r\n    mounted(){\r\n        let me = this\r\n        this.limpiar()\r\n        if(me.editarActivo){\r\n            me.editarFormulario()\r\n        }\r\n    },\r\n    methods:{\r\n        editarFormulario(){\r\n            let me = this;\r\n            let dataE               = me.preguntaSelect\r\n            console.log(\"aaa\",dataE)\r\n            if(dataE.pregunta.estado == 1){\r\n            me.activoPregunta               = true\r\n            }else{\r\n            me.activoPregunta               = false\r\n            }\r\n            me.pregunta                     = dataE.pregunta\r\n            me.id_preguntaActiva            = dataE.pregunta.id_pregunta;\r\n            me.img_preg_old                 = dataE.pregunta.img_pregunta;\r\n            if(dataE.pregunta.img_pregunta!=''){\r\n                me.src_imagen_pregunta = this.$data_url+'archivos/img/salle/img_preguntas/'+dataE.pregunta.img_pregunta;\r\n            }\r\n            ///mostrar opciones\r\n            if(me.pregTipo == 3){\r\n            if(dataE.opciones.length > 0){\r\n                let preOpciones             = dataE.opciones.filter(p => p.tipo == '1')\r\n                me.opcion                   = preOpciones[0]\r\n            }\r\n            }else{\r\n            me.opcion = {}\r\n            }\r\n            me.opciones                     = dataE.opciones\r\n            if(dataE.opciones.length > 0){\r\n            me.palabras_clave               = dataE.opciones[0].opcion;\r\n            me.pregunta.cant_coincidencias  = dataE.opciones[0].cant_coincidencias;\r\n            me.id_opcion_tipo234            = dataE.opciones[0].id_opcion_pregunta;\r\n            }\r\n        },\r\n        agregar(){\r\n            let me = this;\r\n            if( me.pregunta.descripcion.trim() === '' || me.puntaje_pregunta === '' || me.puntaje_pregunta === undefined || me.asignatura_pregunta === null || me.asignatura_pregunta === undefined){\r\n            me.$vs.notify({\r\n            text:'Debe completar todos los campos antes de guardar',\r\n            color:'warning',\r\n            iconPack: 'feather',\r\n            icon:'icon-alert-triangle'})\r\n            return;\r\n            }\r\n            if( me.asignatura_pregunta.id_asignatura === '' || me.asignatura_pregunta.id_asignatura === undefined ){\r\n            me.$vs.notify({\r\n            text:'Seleccione una asignatura antes de guardar',\r\n            color:'warning',\r\n            iconPack: 'feather',\r\n            icon:'icon-alert-triangle'})\r\n            return;\r\n            }\r\n            me.$vs.loading()\r\n            let fileImgPreg\r\n            fileImgPreg = document.getElementById(\"file1\").files[0];\r\n            me.pregunta.file1 = fileImgPreg;\r\n            const formData = new FormData();\r\n            formData.append('descripcion',      me.pregunta.descripcion);\r\n            formData.append('img_pregunta',     fileImgPreg);\r\n            formData.append('id_tipo_pregunta', me.pregTipo);\r\n            formData.append('id_asignatura',    me.asignatura_pregunta.id_asignatura);\r\n            formData.append('puntaje_pregunta', me.puntaje_pregunta);\r\n            formData.append('editor',           me.usuario.idusuario);\r\n            formData.append('n_evaluacion',     me.periodoSelect)\r\n            formData.append('estado',           1)\r\n            axios.post(this.$data_url+'api/preguntas_salle', formData)\r\n            .then(res => {\r\n                me.id_preguntaActiva    = res.data.id_pregunta;\r\n                me.$vs.loading.close()\r\n                me.$emit('changeRecharge',4)\r\n                me.$vs.notify({\r\n                text:'Pregunta creada exitosamente',\r\n                color:'success',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n            })\r\n            .catch(function (error) {\r\n                me.$vs.loading.close()\r\n                console.log(error + ': error al crear pregunta');\r\n            })\r\n        },\r\n        editarPregunta(){\r\n            let me = this;\r\n            if( me.pregunta.descripcion.trim() === '' || me.puntaje_pregunta === '' || me.puntaje_pregunta === undefined || me.asignatura_pregunta === null || me.asignatura_pregunta === undefined){\r\n            me.$vs.notify({\r\n                text:'Debe completar todos los campos antes de guardar',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-alert-triangle'})\r\n            return;\r\n            }\r\n            if( me.asignatura_pregunta.id_asignatura === '' || me.asignatura_pregunta.id_asignatura === undefined ){\r\n            me.$vs.notify({\r\n                text:'Seleccione una asignatura antes de guardar',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-alert-triangle'})\r\n            return;\r\n            }\r\n            me.$vs.loading()\r\n            let fileImgPreg = document.getElementById(\"file1\").files[0];\r\n            if(fileImgPreg === undefined ){\r\n                fileImgPreg = me.pregunta.img_pregunta;\r\n            }\r\n            const formData = new FormData();\r\n            formData.append('id_pregunta',      me.pregunta.id_pregunta);\r\n            formData.append('id_tipo_pregunta', me.pregTipo);\r\n            formData.append('id_asignatura',    me.asignatura_pregunta.id_asignatura);\r\n            formData.append('descripcion',      me.pregunta.descripcion);\r\n            formData.append('img_pregunta',     fileImgPreg);\r\n            formData.append('img_pregunta_old', me.img_preg_old);\r\n            formData.append('puntaje_pregunta', me.puntaje_pregunta);\r\n            formData.append('editor',           me.usuario.idusuario);\r\n            formData.append('n_evaluacion',     me.periodoSelect);\r\n            formData.append('estado',           me.pregunta.estado)\r\n            axios.post(this.$data_url+'api/preguntas_salle', formData).then(res => {\r\n            me.$emit('changeRecharge',2)\r\n            me.img_preg_old = res.data.img_pregunta\r\n            me.$vs.loading.close()\r\n            me.$vs.notify({\r\n            text:'Pregunta editada correctamente',\r\n            color:'success',\r\n            iconPack: 'feather',\r\n            icon:'icon-check'})\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n                me.$vs.loading.close()\r\n            })\r\n        },\r\n        limpiar(){\r\n            let me = this;\r\n            this.src_imagen_pregunta        = '';\r\n            this.src_imagen_opcion          = '';\r\n            this.opciones                   = [];\r\n            this.pregunta.descripcion       = '';\r\n            this.pregunta.cant_coincidencias='';\r\n            this.pregunta.opcion            = '';\r\n            this.opcion.opcion              = '';\r\n            this.opcion.tipo                = '';\r\n            this.palabras_clave             = '';\r\n            this.editarOpcionActiva         = false\r\n            this.id_preguntaActiva          = '';\r\n        },\r\n        editarOpcion(item){\r\n            let me                          = this;\r\n            //cargar formulario de opciones\r\n            me.img_opcion_old               = \"\"\r\n            location.href                   = '#editar'\r\n            me.img_opcion_old               = item.img_opcion\r\n            document.getElementById(\"file2\").value = '';\r\n            me.opcion                       = item\r\n            me.src_imagen_opcion            = this.$data_url+'archivos/img/salle/img_preguntas/'+item.img_opcion;\r\n        },\r\n        confirmEditarOpcion(item){\r\n            let me                          = this;\r\n            me.editarOpcionActiva           = false;\r\n            let fileImgOpcion;\r\n            fileImgOpcion = document.getElementById(\"file2\").files[0];\r\n            if(fileImgOpcion === undefined ){\r\n                fileImgOpcion = item.img_opcion;\r\n            }\r\n            let tipo = 0;\r\n            if( me.opcion.tipo === true || me.opcion.tipo === 1 ){\r\n                tipo = 1;\r\n            }\r\n            const formData = new FormData();\r\n            formData.append('opcion',               me.opcion.opcion);\r\n            formData.append('tipo',                 tipo);\r\n            formData.append('img_opcion',           fileImgOpcion);\r\n            formData.append('img_opcion_old',       me.img_opcion_old);\r\n            formData.append('id_opcion_pregunta',   item.id_opcion_pregunta);\r\n            formData.append('id_pregunta',          item.id_pregunta);\r\n            formData.append('cant_coincidencias',   0);\r\n            formData.append('n_evaluacion',         me.periodoSelect);\r\n            axios.post(this.$data_url+'api/editar_opcion_salle', formData)\r\n            .then(res => {\r\n                me.opciones             = res.data;\r\n                me.editarOpcionActiva   = false;\r\n                me.opcion.opcion        = '';\r\n                me.opcion.tipo          = '';\r\n                me.src_imagen_opcion    = '';\r\n                me.$emit('changeRecharge',2)\r\n                me.$vs.notify({\r\n                text:'Opción editada correctamente',\r\n                color:'success',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n        },\r\n        mostrarImg(file, img){\r\n            let me                  = this;\r\n            me.src_imagen_opcion    = ' ';\r\n            me.src_imagen_pregunta  = ' ';\r\n            var archivo = document.getElementById(\"file\"+file).files[0];\r\n            var reader = new FileReader();\r\n            if (me) {\r\n                reader.readAsDataURL(archivo );\r\n                reader.onloadend = function () {\r\n                    document.getElementById(\"img\"+img).src = reader.result;\r\n                }\r\n            }\r\n        },\r\n        quitarOpcion(item){\r\n            let me = this;\r\n            axios.get(this.$data_url+'api/quitar_opcion_salle/'+item.id_opcion_pregunta)\r\n            .then(res => {\r\n                me.removeItemFromArr(me.opciones, item)\r\n                me.$emit('changeRecharge',2)\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n        },\r\n        removeItemFromArr (arr, item) {\r\n          const i = arr.indexOf(item)\r\n          arr.splice(i, 1)\r\n        },\r\n        quitarImagen(id){\r\n          let me = this\r\n          document.getElementById('file' + id).value = null;\r\n          if( document.getElementById(\"img\" + id) ){\r\n            document.getElementById(\"img\" + id).src = '';\r\n          }\r\n          if( id === 1 ){\r\n            me.img_preg_old = ''\r\n          }else{\r\n            me.img_opcion_old = ''\r\n          }\r\n        },\r\n        editarPalabrasclave(){\r\n          let me = this;\r\n          if( me.pregunta.cant_coincidencias === '' || me.pregunta.cant_coincidencias === undefined || me.pregunta.cant_coincidencias < 0){\r\n              me.$vs.notify({\r\n              text:'Ingrese la cantidad de coincidencias de palabras clave.',\r\n              color:'warning',\r\n              iconPack: 'feather',\r\n              icon:'icon-check'})\r\n              return\r\n          }\r\n          var cantCoin = parseInt(me.pregunta.cant_coincidencias)\r\n          if( me.id_opcion_tipo234 != '' ){\r\n              let palabrasV = me.palabras_clave.replace(/ /gi, '')\r\n              const formData = new FormData();\r\n              formData.append('opcion', palabrasV);\r\n              formData.append('tipo', 1);\r\n              formData.append('img_opcion', '');\r\n              formData.append('img_opcion_old', '');\r\n              formData.append('id_opcion_pregunta', me.id_opcion_tipo234);\r\n              formData.append('id_pregunta', me.pregunta.id_pregunta);\r\n              formData.append('cant_coincidencias', cantCoin);\r\n              formData.append('n_evaluacion',         me.periodoSelect);\r\n              me.$vs.loading()\r\n              axios.post(this.$data_url+'api/editar_opcion_salle', formData)\r\n              .then(res => {\r\n                me.$vs.loading.close()\r\n                  me.opciones           = res.data;\r\n                  me.editarOpcionActiva = false;\r\n                  me.opcion.opcion      = '';\r\n                  me.opcion.tipo        = '';\r\n                  me.src_imagen_opcion  = '';\r\n                  me.$emit('changeRecharge',2)\r\n                  me.$vs.loading.close()\r\n                  me.$vs.notify({\r\n                  text:'Palabras clave guardada correctamente',\r\n                  color:'success',\r\n                  iconPack: 'feather',\r\n                  icon:'icon-check'})\r\n              })\r\n              .catch(function (error) {\r\n                  me.$vs.loading.close()\r\n                  console.log(error);\r\n              })\r\n          }else{\r\n              me.cargarOpcionAbierta()\r\n          }\r\n        },\r\n        cargarOpcion(){\r\n            let me = this;\r\n            if( me.id_preguntaActiva === '' ){\r\n                me.$vs.notify({\r\n                    text:'Debe crear una pregunta antes de cargar las opciones.',\r\n                    color:'warning',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check'})\r\n            }else{\r\n                me.$vs.loading()\r\n                const formData = new FormData();\r\n                let fileImgPreg = document.getElementById(\"file2\").files[0];\r\n                let tipo = 0;\r\n                if( me.opcion.tipo === true ){\r\n                    tipo = 1;\r\n                }\r\n                formData.append('opcion',               me.opcion.opcion);\r\n                formData.append('id_pregunta',          me.id_preguntaActiva);\r\n                formData.append('img_opcion',           fileImgPreg);\r\n                formData.append('tipo',                 tipo);\r\n                formData.append('cant_coincidencias',   0);\r\n                formData.append('n_evaluacion',         me.periodoSelect);\r\n                axios.post(this.$data_url+'api/cargar_opcion_salle', formData)\r\n                .then(res => {\r\n                    me.opciones             = res.data;\r\n                    me.opcion.opcion        = '';\r\n                    me.opcion.tipo          = '';\r\n                    me.src_imagen_opcion    = '';\r\n                    document.getElementById(\"file2\").value = '';\r\n                    me.$vs.loading.close()\r\n                    me.$emit('changeRecharge',2)\r\n                    //notify guardado\r\n                })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close()\r\n                    console.log(error);\r\n                })\r\n            }\r\n        },\r\n        cargarOpcionAbierta(){\r\n            let me = this;\r\n            if( me.pregunta.cant_coincidencias === '' || me.pregunta.cant_coincidencias === undefined || me.pregunta.cant_coincidencias < 0){\r\n            me.$vs.notify({\r\n            text:'Ingrese la cantidad de coincidencias de palabras clave.',\r\n            color:'warning',\r\n            iconPack: 'feather',\r\n            icon:'icon-check'})\r\n            return\r\n            }\r\n            if( me.id_preguntaActiva === '' ){\r\n            me.$vs.notify({\r\n            text:'Debe crear una pregunta antes de cargar las opciones.',\r\n            color:'warning',\r\n            iconPack: 'feather',\r\n            icon:'icon-check'})\r\n            }else{\r\n            let tipo = 6;\r\n            let palabrasV = me.palabras_clave.replace(/ /gi, '')\r\n            const formData = new FormData();\r\n            formData.append('opcion',               palabrasV);\r\n            formData.append('tipo',                 tipo);\r\n            formData.append('img_opcion',           null);\r\n            formData.append('id_pregunta',          me.id_preguntaActiva);\r\n            formData.append('cant_coincidencias',   parseInt(me.pregunta.cant_coincidencias));\r\n            formData.append('n_evaluacion',         me.periodoSelect);   \r\n            me.$vs.loading()\r\n            axios.post(this.$data_url+'api/cargar_opcion_salle', formData)\r\n            .then(res => {\r\n                me.id_opcion_tipo234       = res.data[0].id_opcion_pregunta\r\n                me.opciones             = res.data;\r\n                me.opcion.opcion        = '';\r\n                me.opcion.tipo          = '';\r\n                me.src_imagen_opcion    = '';\r\n                me.$emit('changeRecharge',2)\r\n                me.$vs.loading.close()\r\n                me.$vs.notify({\r\n                text:'Palabras clave guardadas correctamente',\r\n                color:'success',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n            })\r\n            .catch(function (error) {\r\n                me.$vs.loading.close()\r\n                console.log(error);\r\n            })\r\n            }\r\n        },\r\n        cargarOpcionesVF(){\r\n            let me = this;\r\n            if( me.id_preguntaActiva === '' ){\r\n                me.$vs.notify({\r\n                text:'Debe crear una pregunta antes de cargar las opciones.',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n            }else{\r\n                me.$vs.loading()\r\n                const formData = new FormData();\r\n                formData.append('opcion',       me.opcion.opcion);\r\n                formData.append('id_pregunta',  me.id_preguntaActiva);\r\n                formData.append('img_opcion', null);\r\n                formData.append('tipo', 1);\r\n                formData.append('cant_coincidencias', 0);\r\n                this.$http.post(this.$server_url+'cargar_opcion_vf_salle', formData)\r\n                .then(res => {\r\n                    // me.opcion.opcion        = '';\r\n                    // me.opcion.tipo          = '';\r\n                    me.editarActivo            = true\r\n                    me.src_imagen_opcion       = '';\r\n                    me.$vs.loading.close()\r\n                    me.$vs.notify({\r\n                    text:'Opción guardada correctamente',\r\n                    color:'success',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check'})\r\n                    me.$emit('changeRecharge',3)\r\n                })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close()\r\n                    console.log(error);\r\n                })\r\n            }\r\n        },\r\n        editarOpcionesVF(){\r\n            let me = this;\r\n            me.$vs.loading()\r\n            const formData = new FormData();\r\n                formData.append('opcion',       me.opcion.opcion);\r\n                formData.append('id_pregunta',  me.id_preguntaActiva);\r\n                formData.append('img_opcion', null);\r\n                formData.append('tipo', 1);\r\n                formData.append('id_opcion', 1);\r\n                formData.append('cant_coincidencias', 0);\r\n            this.$http.post(this.$server_url+'cargar_opcion_vf_salle', formData)\r\n            .then(res => {\r\n                me.$vs.loading.close()\r\n                me.$emit('changeRecharge',2)\r\n                me.$vs.notify({\r\n                text:'Opción guardada correctamente',\r\n                color:'success',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n            })\r\n            .catch(function (error) {\r\n                me.$vs.loading.close()\r\n                console.log(error);\r\n            })\r\n        },\r\n        transformarPregunta(){\r\n            let me = this\r\n            me.$vs.loading()\r\n            const formData = new FormData();\r\n            formData.append('id_pregunta', me.pregunta.id_pregunta);\r\n            formData.append('id_tipo_pregunta', me.pregTipo);\r\n            this.$http.post(this.$server_url+'transformar_preguntas_salle', formData).then(res => {\r\n            me.$vs.notify({\r\n            text:'Pregunta transformada correctamente.',\r\n            color:'primary',\r\n            iconPack: 'feather',\r\n            icon:'icon-check'})\r\n            me.$emit('changeRecharge',1)\r\n            me.$vs.loading.close()\r\n            })\r\n            .catch(function (error) {\r\n            me.$vs.loading.close()\r\n            })\r\n        },\r\n        //METODOS PARA CAMBIAR ESTADO PREGUNTA\r\n        CambiarEstadoPreguntaSalle(){\r\n            let me        = this\r\n            let est       = 0\r\n            if(me.activoPregunta){\r\n            est         = 1\r\n            }else{\r\n            est         = 0\r\n            }\r\n            me.pregunta.estado = est\r\n            let formData  = new FormData();\r\n            formData.append('id_pregunta',    me.pregunta.id_pregunta);\r\n            formData.append('estado',         est)\r\n            me.$vs.loading()\r\n            this.$http.post(this.$server_url+'CambiarEstadoPreguntaSalle', formData)\r\n            .then(res => {\r\n            me.$vs.loading.close()\r\n            me.$vs.notify({\r\n            text:'Se cambio de estado correctamente',\r\n            color:'warning',\r\n            iconPack: 'feather',\r\n            icon:'icon-check',\r\n            })\r\n            me.$emit('changeRecharge',2)\r\n            })\r\n        },\r\n       //FIN METODOS PARA CAMBIAR ESTADO PREGUNTA\r\n    }\r\n}       \r\n</script>"]}]}