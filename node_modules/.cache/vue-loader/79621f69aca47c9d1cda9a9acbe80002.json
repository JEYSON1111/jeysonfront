{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\admin\\simulador\\simulador.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\admin\\simulador\\simulador.vue","mtime":1712682815478},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nimport vSelect from 'vue-select'\r\nexport default {\r\n    data(){\r\n        return{\r\n            id:0,\r\n            counterDanger: false,\r\n            simuladores:[],\r\n            asignaturas:[],\r\n            popupAddSimulador:false,\r\n            simulador:{\r\n                asignatura_id:'',\r\n                nombre:'',\r\n                descripcion:'',\r\n                link:'',\r\n                link_tutorial:'',\r\n                estado:'',\r\n            },\r\n            popupEditSimulador:false,\r\n            update:false,\r\n            estado:'',\r\n            usuario:[],\r\n        }\r\n    },\r\n\r\n    components: {\r\n        'v-select': vSelect,\r\n                \r\n     },\r\n\r\n    created(){\r\n        let me = this;\r\n        me.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n        me.getSimuladores();\r\n        me.getAsignaturas();\r\n    },\r\n    methods:{\r\n\r\n        //para obtener el listado de las areas\r\n        getSimuladores() {\r\n            let me = this;\r\n            me.$vs.loading();\r\n            this.$http.get(this.$server_url+'simulador')\r\n                .then(function (res) {\r\n                    me.simuladores = res.data.simulador;\r\n                    me.$vs.loading.close()\r\n\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                    me.$vs.loading.close()\r\n\r\n                })\r\n        },\r\n\r\n          //para obtener el listado de las areas\r\n        getAsignaturas() {\r\n            let me = this;\r\n            me.$vs.loading();\r\n            this.$http.get(this.$server_url+'simulador')\r\n                .then(function (res) {\r\n                    me.asignaturas = res.data.asignaturas;\r\n                    me.$vs.loading.close()\r\n\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                    me.$vs.loading.close()\r\n\r\n                })\r\n        },\r\n\r\n        guardarSimulador(){\r\n            let me = this;\r\n          \r\n                //datos que se obtienen de los inputs\r\n                if(me.simulador.nombre.length < 4){\r\n                    this.$vs.notify({\r\n                        text:'El nombre debe tener minimo 4 caracteres',\r\n                        color:'warning',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check'})\r\n                    return false;\r\n                }\r\n\r\n                if(me.simulador.descripcion.length < 4){\r\n                    this.$vs.notify({\r\n                        text:'La descripcion debe tener minimo 4 caracteres',\r\n                        color:'warning',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check'})\r\n                    return false;\r\n                }\r\n\r\n                if(me.simulador.link.length < 8){\r\n                    this.$vs.notify({\r\n                        text:'El link debe tener minimo 4 caracteres',\r\n                        color:'warning',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check'})\r\n                    return false;\r\n                }\r\n\r\n                if(me.simulador.nombre.length > 200){\r\n                    this.$vs.notify({\r\n                        text:'El nombre  debe tener maximo 200 caracteres',\r\n                        color:'warning',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check'})\r\n                    return false;\r\n                }\r\n\r\n                if(me.simulador.link_tutorial !==null){\r\n                    if(me.simulador.link_tutorial.length > 200){\r\n                        this.$vs.notify({\r\n                            text:'El link del tutorial  debe tener maximo 200 caracteres',\r\n                            color:'warning',\r\n                            iconPack: 'feather',\r\n                            icon:'icon-check'})\r\n                        return false;\r\n                     }\r\n                }\r\n              \r\n\r\n                  if(me.simulador.descripcion.length > 300){\r\n                     this.$vs.notify({\r\n                        text:'La descripcion debe tener maximo 300 caracteres',\r\n                        color:'warning',\r\n                        iconPack: 'feather',\r\n                         icon:'icon-check'})\r\n                    return false;\r\n                }\r\n\r\n                 if(me.simulador.link.length > 200){\r\n                     this.$vs.notify({\r\n                        text:'El link debe tener maximo 200 caracteres',\r\n                        color:'warning',\r\n                        iconPack: 'feather',\r\n                         icon:'icon-check'})\r\n                    return false;\r\n                }\r\n                let formData = new FormData();\r\n\r\n                if(me.update){\r\n                    formData.append('simulador_id',      me.id);\r\n                    formData.append('asignatura_id',     me.simulador.asignatura_id.idasignatura);\r\n                    formData.append('nombre',            me.simulador.nombre);\r\n                    formData.append('descripcion',       me.simulador.descripcion);\r\n                    formData.append('link',              me.simulador.link);\r\n                    formData.append('link_tutorial',     me.simulador.link_tutorial);\r\n                    \r\n                }else{\r\n                    formData.append('asignatura_id',     me.simulador.asignatura_id.idasignatura);\r\n                    formData.append('nombre',            me.simulador.nombre);\r\n                    formData.append('descripcion',       me.simulador.descripcion);\r\n                    formData.append('link',              me.simulador.link);\r\n                    formData.append('link_tutorial',     me.simulador.link_tutorial);\r\n                }\r\n                \r\n\r\n          \r\n                me.$vs.loading();\r\n                this.$http.post(this.$server_url+'simulador', formData)\r\n                    .then(function (res) {\r\n                        me.$vs.notify({\r\n                            text: res.data,\r\n                            color: 'primary',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-alert-triangle'\r\n                        })\r\n                        me.getSimuladores()\r\n                        me.popupAddSimulador=false,\r\n                        me.popupEditSimulador=false,\r\n                        me.update = false;\r\n                        limpiar()\r\n                    \r\n                    })\r\n                .catch(function (error) {})\r\n        },\r\n       //para editar los campos\r\n        openModalEditar(data={}){\r\n            let me = this;\r\n           \r\n            me.popupEditSimulador = true;\r\n            \r\n            //llenar la data en los campos\r\n             me.id = data.simulador_id;\r\n             me.simulador.nombre = data.nombre;\r\n             me.simulador.descripcion = data.descripcion;\r\n             me.simulador.link = data.link;\r\n             me.simulador.link_tutorial = data.link_tutorial;\r\n             me.simulador.asignatura_id = {idasignatura:data.asignatura_id, nombreasignatura:data.nombreasignatura};\r\n \r\n        },\r\n\r\n        //para abrir el popup de confimacion para eliminar\r\n        openConfirm(simulador_id,estado){\r\n            let me = this;\r\n            me.id = simulador_id;\r\n            me.estado = estado;\r\n            me.$vs.dialog({\r\n                type:'confirm',\r\n                color: 'danger',\r\n                title: `Confirmacion`,\r\n                text: 'Est√°s seguro de cambiar de estado?.',\r\n                accept:me.cambiarEstado\r\n            })\r\n        },\r\n        cambiarEstado(){\r\n            let me = this;\r\n            me.$vs.loading();\r\n            this.$http.get(this.$server_url+'simulador?cambiarEstado=yes&simulador_id='+me.id+'&estado='+me.estado)\r\n                .then(function (res) {\r\n                    me.getSimuladores();\r\n                    me.$vs.loading.close()\r\n                    me.$vs.notify({\r\n                    text:'Estado cambiado con exito',\r\n                    color:'success',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check'})\r\n\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                    me.$vs.loading.close()\r\n\r\n                })\r\n        },\r\n\r\n        limpiar(){\r\n            let me = this;\r\n            me.simulador.asignatura_id ='';\r\n            me.simulador.nombre ='';\r\n            me.simulador.descripcion ='';\r\n            me.simulador.link ='';\r\n            me.simulador.link_tutorial = '';\r\n            me.simulador.estado ='';\r\n        }\r\n    }\r\n}\r\n",{"version":3,"sources":["simulador.vue"],"names":[],"mappings":";AAwfile":"simulador.vue","sourceRoot":"src/views/admin/simulador","sourcesContent":["<template>\r\n    <div v-if=\"usuario.id_group == '1'\">\r\n        <vs-card>\r\n            <vs-button color=\"primary\"  @click=\"limpiar();popupAddSimulador=true;update = false;\" style=\"margin:10px 0px 0px 20px;\"  type=\"gradient\" icon=\"library_add\">Crear Simulador</vs-button>\r\n\r\n            <div v-if=\"simuladores.length > 0 \">\r\n                <br/>\r\n            \r\n                <vs-table max-items=\"10\" search pagination :data=\"simuladores\">\r\n                    <template slot=\"thead\">\r\n                        \r\n                        <vs-th>Asignatura</vs-th>\r\n                        <vs-th>Nombre Simulador</vs-th>\r\n                        <vs-th>Descripci√≥n</vs-th>\r\n                        <vs-th>Enlaces</vs-th> \r\n                        <vs-th>Estado</vs-th> \r\n                        <vs-th >Acciones</vs-th>\r\n                    </template>\r\n                    <template slot-scope=\"{data}\">\r\n                        <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                            \r\n                            <vs-td>\r\n                               \r\n                                {{data[indextr].nombreasignatura}}<br>\r\n                                \r\n                            </vs-td>\r\n                            <vs-td>\r\n                           \r\n                                {{data[indextr].nombre}}<br>\r\n                            </vs-td>\r\n\r\n                            <vs-td>\r\n                             \r\n                                {{data[indextr].descripcion}}<br>\r\n                            </vs-td>\r\n                             <vs-td>\r\n                                <div>\r\n                                    <p>Enlace Simulador:</p>\r\n                                     <a :href=\"tr.link\" target=\"_blank\">{{tr.link}}</a><br>   \r\n                                </div>\r\n\r\n                                <template>\r\n                                    <div v-if=\"tr.link_tutorial == '' || tr.link_tutorial == 'null' || tr.link_tutorial == null\">\r\n                                        \r\n                                        \r\n                                    </div>\r\n                                    <div v-else>\r\n                                        <p>Enlace Tutorial:</p>\r\n                                        <a :href=\"tr.link_tutorial\" target=\"_blank\">{{tr.link_tutorial}}</a><br>   \r\n                                    </div>\r\n                                </template>\r\n                          \r\n                            </vs-td>\r\n                            \r\n                            <vs-td>\r\n                                <div v-if=\"tr.estado == '1'\">\r\n                                    <p>Activo</p>\r\n                                </div>\r\n                                <div v-else>\r\n                                    <p>Desactivado</p>    \r\n                                </div>\r\n                            </vs-td>\r\n                            <vs-td>\r\n\r\n                            <div style=\"display:flex;\">\r\n                                <vx-tooltip style=\"display: inline-block;\" text=\"Editar simulador\" position=\"top\" color=\"primary\">\r\n                                    <vs-button class=\"modal-default-button\" size=\"small\" color=\"warning\" @click=\"update=true;openModalEditar(data[indextr])\" type=\"filled\" icon-pack=\"feather\" icon=\"icon-edit\"> </vs-button>\r\n                                    </vx-tooltip> &nbsp;\r\n\r\n\r\n                                <div v-if=\"tr.estado == '1'\">\r\n                                        <vx-tooltip style=\"display: inline-block;\" text=\"Desactivar simulador\" position=\"top\" color=\"primary\">\r\n                                            <vs-button class=\"modal-default-button\" size=\"small\" color=\"danger\" @click=\"openConfirm(data[indextr].simulador_id,0)\" type=\"filled\" icon-pack=\"feather\" icon=\"icon-x-square\"> </vs-button>\r\n                                        </vx-tooltip> &nbsp;  \r\n                                </div>\r\n                                <div v-else>\r\n                                    <vx-tooltip style=\"display: inline-block;\" text=\"Activar simulador\" position=\"top\" color=\"primary\">\r\n                                            <vs-button class=\"modal-default-button\" size=\"small\" color=\"success\" @click=\"openConfirm(data[indextr].simulador_id,1)\" type=\"filled\" icon-pack=\"feather\" icon=\"icon-check\"> </vs-button>\r\n                                    </vx-tooltip> &nbsp;     \r\n                                </div>\r\n                                \r\n                            </div>\r\n                              \r\n\r\n                            </vs-td> \r\n                            \r\n                        </vs-tr>\r\n                    </template>\r\n                </vs-table>   \r\n            </div>\r\n\r\n            <div v-else style=\"margin:20px 0px 0px 25px;\">\r\n                <p> No existe Simuladores aun. </p>\r\n            </div>\r\n\r\n        </vs-card>\r\n\r\n        <!--PARA LOS MODALES -->\r\n          <!-- Modal Agregar-->\r\n        <div class=\"demo-alignment\">\r\n            <vs-popup classContent=\"popup-example\" title=\"Agregar Simulador\" :active.sync=\"popupAddSimulador\">\r\n               \r\n                Asignatura:\r\n        \r\n                <v-select :options=\"asignaturas\" :reduce=\"asignaturas => asignaturas\" label=\"nombreasignatura\" class=\"w-full\" v-model=\"simulador.asignatura_id\" />\r\n                <br/>\r\n                <vs-input class=\"inputx mb-3 w-full\" label=\"Nombre simulador\" v-model=\"simulador.nombre\" />\r\n                <br/>\r\n                <vs-textarea counter=\"300\" style=\"width:100%;\" label=\"Descripci√≥n\" :counter-danger.sync=\"counterDanger\" v-model=\"simulador.descripcion\" />\r\n                <vs-input class=\"inputx mb-3 w-full\" label=\"Link\" v-model=\"simulador.link\" />\r\n                <vs-input class=\"inputx mb-3 w-full\" label=\"Tutorial\" v-model=\"simulador.link_tutorial\" />\r\n                <br><br>       \r\n                <vs-button color=\"success\" class=\"w-full mb-3\" @click=\"guardarSimulador()\" type=\"gradient\" >Guardar</vs-button>\r\n            </vs-popup>\r\n        </div>\r\n\r\n       <!-- Modal Editar-->\r\n        <div class=\"demo-alignment\">\r\n\r\n            <vs-popup classContent=\"popup-example\" title=\"Editar Simulador\" :active.sync=\"popupEditSimulador\">\r\n                Asignatura:\r\n        \r\n                <v-select :options=\"asignaturas\" :reduce=\"asignaturas => asignaturas\" label=\"nombreasignatura\" class=\"w-full\" v-model=\"simulador.asignatura_id\" />\r\n                \r\n                <vs-input class=\"inputx mb-3 w-full\" label=\"Nombre Simulador\" v-model=\"simulador.nombre\" />\r\n                <vs-textarea counter=\"300\" style=\"width:100%;\" label=\"Descripci√≥n\" :counter-danger.sync=\"counterDanger\" v-model=\"simulador.descripcion\" />\r\n                <vs-input class=\"inputx mb-3 w-full\" label=\"Link\" v-model=\"simulador.link\" />\r\n                <vs-input class=\"inputx mb-3 w-full\" label=\"Tutorial\" v-model=\"simulador.link_tutorial\" />\r\n                 <br><br>       \r\n                <vs-button color=\"success\" class=\"w-full mb-3\" @click=\"guardarSimulador()\" type=\"gradient\" >Actualizar</vs-button>\r\n            </vs-popup>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport vSelect from 'vue-select'\r\nexport default {\r\n    data(){\r\n        return{\r\n            id:0,\r\n            counterDanger: false,\r\n            simuladores:[],\r\n            asignaturas:[],\r\n            popupAddSimulador:false,\r\n            simulador:{\r\n                asignatura_id:'',\r\n                nombre:'',\r\n                descripcion:'',\r\n                link:'',\r\n                link_tutorial:'',\r\n                estado:'',\r\n            },\r\n            popupEditSimulador:false,\r\n            update:false,\r\n            estado:'',\r\n            usuario:[],\r\n        }\r\n    },\r\n\r\n    components: {\r\n        'v-select': vSelect,\r\n                \r\n     },\r\n\r\n    created(){\r\n        let me = this;\r\n        me.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n        me.getSimuladores();\r\n        me.getAsignaturas();\r\n    },\r\n    methods:{\r\n\r\n        //para obtener el listado de las areas\r\n        getSimuladores() {\r\n            let me = this;\r\n            me.$vs.loading();\r\n            this.$http.get(this.$server_url+'simulador')\r\n                .then(function (res) {\r\n                    me.simuladores = res.data.simulador;\r\n                    me.$vs.loading.close()\r\n\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                    me.$vs.loading.close()\r\n\r\n                })\r\n        },\r\n\r\n          //para obtener el listado de las areas\r\n        getAsignaturas() {\r\n            let me = this;\r\n            me.$vs.loading();\r\n            this.$http.get(this.$server_url+'simulador')\r\n                .then(function (res) {\r\n                    me.asignaturas = res.data.asignaturas;\r\n                    me.$vs.loading.close()\r\n\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                    me.$vs.loading.close()\r\n\r\n                })\r\n        },\r\n\r\n        guardarSimulador(){\r\n            let me = this;\r\n          \r\n                //datos que se obtienen de los inputs\r\n                if(me.simulador.nombre.length < 4){\r\n                    this.$vs.notify({\r\n                        text:'El nombre debe tener minimo 4 caracteres',\r\n                        color:'warning',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check'})\r\n                    return false;\r\n                }\r\n\r\n                if(me.simulador.descripcion.length < 4){\r\n                    this.$vs.notify({\r\n                        text:'La descripcion debe tener minimo 4 caracteres',\r\n                        color:'warning',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check'})\r\n                    return false;\r\n                }\r\n\r\n                if(me.simulador.link.length < 8){\r\n                    this.$vs.notify({\r\n                        text:'El link debe tener minimo 4 caracteres',\r\n                        color:'warning',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check'})\r\n                    return false;\r\n                }\r\n\r\n                if(me.simulador.nombre.length > 200){\r\n                    this.$vs.notify({\r\n                        text:'El nombre  debe tener maximo 200 caracteres',\r\n                        color:'warning',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check'})\r\n                    return false;\r\n                }\r\n\r\n                if(me.simulador.link_tutorial !==null){\r\n                    if(me.simulador.link_tutorial.length > 200){\r\n                        this.$vs.notify({\r\n                            text:'El link del tutorial  debe tener maximo 200 caracteres',\r\n                            color:'warning',\r\n                            iconPack: 'feather',\r\n                            icon:'icon-check'})\r\n                        return false;\r\n                     }\r\n                }\r\n              \r\n\r\n                  if(me.simulador.descripcion.length > 300){\r\n                     this.$vs.notify({\r\n                        text:'La descripcion debe tener maximo 300 caracteres',\r\n                        color:'warning',\r\n                        iconPack: 'feather',\r\n                         icon:'icon-check'})\r\n                    return false;\r\n                }\r\n\r\n                 if(me.simulador.link.length > 200){\r\n                     this.$vs.notify({\r\n                        text:'El link debe tener maximo 200 caracteres',\r\n                        color:'warning',\r\n                        iconPack: 'feather',\r\n                         icon:'icon-check'})\r\n                    return false;\r\n                }\r\n                let formData = new FormData();\r\n\r\n                if(me.update){\r\n                    formData.append('simulador_id',      me.id);\r\n                    formData.append('asignatura_id',     me.simulador.asignatura_id.idasignatura);\r\n                    formData.append('nombre',            me.simulador.nombre);\r\n                    formData.append('descripcion',       me.simulador.descripcion);\r\n                    formData.append('link',              me.simulador.link);\r\n                    formData.append('link_tutorial',     me.simulador.link_tutorial);\r\n                    \r\n                }else{\r\n                    formData.append('asignatura_id',     me.simulador.asignatura_id.idasignatura);\r\n                    formData.append('nombre',            me.simulador.nombre);\r\n                    formData.append('descripcion',       me.simulador.descripcion);\r\n                    formData.append('link',              me.simulador.link);\r\n                    formData.append('link_tutorial',     me.simulador.link_tutorial);\r\n                }\r\n                \r\n\r\n          \r\n                me.$vs.loading();\r\n                this.$http.post(this.$server_url+'simulador', formData)\r\n                    .then(function (res) {\r\n                        me.$vs.notify({\r\n                            text: res.data,\r\n                            color: 'primary',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-alert-triangle'\r\n                        })\r\n                        me.getSimuladores()\r\n                        me.popupAddSimulador=false,\r\n                        me.popupEditSimulador=false,\r\n                        me.update = false;\r\n                        limpiar()\r\n                    \r\n                    })\r\n                .catch(function (error) {})\r\n        },\r\n       //para editar los campos\r\n        openModalEditar(data={}){\r\n            let me = this;\r\n           \r\n            me.popupEditSimulador = true;\r\n            \r\n            //llenar la data en los campos\r\n             me.id = data.simulador_id;\r\n             me.simulador.nombre = data.nombre;\r\n             me.simulador.descripcion = data.descripcion;\r\n             me.simulador.link = data.link;\r\n             me.simulador.link_tutorial = data.link_tutorial;\r\n             me.simulador.asignatura_id = {idasignatura:data.asignatura_id, nombreasignatura:data.nombreasignatura};\r\n \r\n        },\r\n\r\n        //para abrir el popup de confimacion para eliminar\r\n        openConfirm(simulador_id,estado){\r\n            let me = this;\r\n            me.id = simulador_id;\r\n            me.estado = estado;\r\n            me.$vs.dialog({\r\n                type:'confirm',\r\n                color: 'danger',\r\n                title: `Confirmacion`,\r\n                text: 'Est√°s seguro de cambiar de estado?.',\r\n                accept:me.cambiarEstado\r\n            })\r\n        },\r\n        cambiarEstado(){\r\n            let me = this;\r\n            me.$vs.loading();\r\n            this.$http.get(this.$server_url+'simulador?cambiarEstado=yes&simulador_id='+me.id+'&estado='+me.estado)\r\n                .then(function (res) {\r\n                    me.getSimuladores();\r\n                    me.$vs.loading.close()\r\n                    me.$vs.notify({\r\n                    text:'Estado cambiado con exito',\r\n                    color:'success',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check'})\r\n\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                    me.$vs.loading.close()\r\n\r\n                })\r\n        },\r\n\r\n        limpiar(){\r\n            let me = this;\r\n            me.simulador.asignatura_id ='';\r\n            me.simulador.nombre ='';\r\n            me.simulador.descripcion ='';\r\n            me.simulador.link ='';\r\n            me.simulador.link_tutorial = '';\r\n            me.simulador.estado ='';\r\n        }\r\n    }\r\n}\r\n</script>"]}]}