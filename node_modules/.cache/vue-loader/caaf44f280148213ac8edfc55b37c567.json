{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\bodega\\prueba.vue?vue&type=style&index=0&id=de81fda4&scoped=true&lang=css","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\bodega\\prueba.vue","mtime":1712682815575},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\n.tabla{\r\n  width: 100%;\r\n  margin-top: 10px;\r\n}\r\n .tabla {\r\n  \r\n  border: 1px solid #D1E5F1;\r\n  padding: 2px;\r\n  border-radius: 5px;\r\n}\r\n.th1{\r\n  background-color: #F17F76;\r\n  border-radius: 5px;\r\n  color:white;\r\n}\r\n.td1, .th1{\r\n padding: 10px;\r\n text-align: center;\r\n border:none;\r\n}\r\n",{"version":3,"sources":["prueba.vue"],"names":[],"mappings":";AAkSA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"prueba.vue","sourceRoot":"src/views/bodega","sourcesContent":["\r\n<template>\r\n  <div>\r\n\r\n    <vs-popup title=\"Errores en excel de los codigos\" :active.sync=\"modalErrores\" style=\"padding: 0% !important;\">\r\n       <div class=\"w-full\" style=\"background: rgb(121,9,9); padding: 20px; border-radius: 5px; background: linear-gradient(90deg, rgba(121,9,9,1) 28%, rgba(255,0,48,1) 100%); color: white;\">\r\n         <div class=\"vx-row\">\r\n            <div class=\"vx-col sm:w-1/2 w-full\">\r\n                <b>Código</b>\r\n            </div>\r\n            <div class=\"vx-col sm:w-1/2 w-full\">\r\n                <b>Institución</b>\r\n            </div>\r\n        </div>\r\n        <vs-divider></vs-divider>\r\n        <div :key=\"index\" v-for=\"(item, index) in errores\">\r\n          <div class=\"vx-row\">\r\n              <div class=\"vx-col sm:w-1/2 w-full\">\r\n                  <span v-if=\"item.codigo\"> {{item.codigo}} </span>\r\n              </div>\r\n              <div class=\"vx-col sm:w-1/2 w-full\">\r\n                  <span v-if=\"item.bc_estado\"> {{item.bc_estado}} </span>\r\n              </div>\r\n               <div class=\"vx-col sm:w-1/2 w-full\">\r\n                  <span v-if=\"item.comentario\"> {{item.comentario}} </span>\r\n              </div>\r\n          </div>\r\n        </div>\r\n       </div>\r\n    </vs-popup>\r\n\r\n\r\n\r\n    <vs-popup title=\"Códigos no encontrados\" :active.sync=\"modalCedulas\" @accept=\"recargar()\" @close=\"recargar()\" @cancel=\"recargar()\"  style=\"padding: 0% !important;\">\r\n       <div class=\"w-full\" style=\"background: rgb(235,147,25); background: linear-gradient(90deg, rgba(235,147,25,1) 28%, rgba(255,166,0,1) 100%); color: white; border-radius: 5px; padding: 10px;\">\r\n        <div class=\"vx-row\"> \r\n          <div class=\"vx-col w-full\" align=\"center\"> \r\n           <b>Codigos a las que no se aplicaron correctamente</b>\r\n          </div> \r\n        </div> \r\n        <vs-divider></vs-divider>\r\n        <div :key=\"index\" v-for=\"(item, index) in cedulas_no_encontradas\">\r\n          <div class=\"vx-row\">\r\n              <div class=\"vx-col w-full\" align=\"center\"> <span> {{item}} </span> </div>\r\n          </div>\r\n        </div>\r\n       </div>\r\n    </vs-popup>\r\n\r\n\r\n    <vs-popup small title=\"Confirmación\" :active.sync=\"modalConfirm\">\r\n      \r\n      <div class=\"w-full mb-base\" align=\"center\">\r\n        <h4>Está seguro de aplicar estas códigos?</h4>\r\n      </div>\r\n      \r\n      <div class=\"w-full\" align=\"center\">\r\n        <vs-button class=\"mb-2\" color=\"danger\" type=\"gradient\" @click=\"procesarPagos()\"> Confirmar </vs-button>\r\n      </div>\r\n\r\n    </vs-popup>\r\n\r\n\r\n\r\n\r\n\r\n    <div class=\"mb-6\" align=\"center\">\r\n          <div class=\"vx-col w-full\">\r\n        \r\n          <p style=\"color:#EC4518;\">\r\n         <i class=\"fa fa-file\" aria-hidden=\"true\"></i>  Subida  de Códigos mediante importación <span style=\"font-weight: bold;\">(no ingrese más de 1500 registros en una sola carga.)</span>\r\n          </p>\r\n       \r\n        </div>\r\n        <br/>\r\n        <import-excel :onSuccess=\"loadDataInTable\"  class=\"mb-4\" />\r\n        \r\n      <div>\r\n\r\n     <vs-row>\r\n            <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\" vs-sm = \"12\" vs-xs=\"12\" >\r\n                 <vs-input label=\"observacion\" class=\"w-full\" v-model=\"observacion\" placeholder=\"observacion\"/>\r\n            </vs-col>\r\n\r\n     \r\n    </vs-row>\r\n\r\n  <vs-chip color=\"primary\">Codigos ingresados  {{ porcentaje }}</vs-chip >\r\n  <br/>\r\n    <vs-row class=\"mt-5\">\r\n        <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"6\" vs-sm = \"12\" vs-xs=\"12\" >\r\n            <vs-card>\r\n            <div class=\"header\">\r\n                <p style=\"font-weight: bold;\">Formato del archivo excel</p>\r\n                <table class=\"tabla\">\r\n                    <tr>\r\n                    <th class=\"th1\">codigo</th>\r\n                    <!-- <th class=\"th1\">Institución</th>\r\n                    <th class=\"th1\">grupo</th> -->\r\n                    </tr>\r\n                    <tr>\r\n                    <td class=\"td1\">xxx</td>\r\n                    <!-- <td class=\"td1\">Prolipa costa</td>\r\n                    <td class=\"td1\">1</td> -->\r\n                    </tr>\r\n\r\n                </table>\r\n            </div>\r\n\r\n            </vs-card>\r\n        </vs-col>\r\n\r\n    </vs-row>\r\n\r\n      </div>\r\n       \r\n        <vs-alert v-if=\"tableData.length > 0\" color=\"danger\" class=\"mb-3 mt-2\"  icon-pack=\"feather\" icon=\"icon-alert-triangle\">\r\n            <span>Excel cargado exitosamente. ¿Está seguro de subir estos códigos?</span><br>\r\n          \r\n        </vs-alert>\r\n\r\n        <vs-row v-if=\"tableData.length > 0 && tableData.length <= 1500 \" class=\"mt-2\">\r\n            <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\">\r\n               <vs-button class=\"mb-2\" color=\"danger\"  type=\"relief\" @click=\"openConfirm(0)\"> Subir códigos  </vs-button>\r\n            </vs-col>\r\n        </vs-row>\r\n        \r\n        <vs-card>\r\n            <vs-row v-if=\"codigosPerdidos == true\">\r\n                <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"6\">\r\n                    \r\n                    <vs-list>\r\n                        <vs-list-header icon=\"supervisor_account\" title=\"Códigos ya existentes\"></vs-list-header>\r\n                        <vs-list-item :key=\"indextr\" v-for=\"(tr, indextr) in codigosRepetidos\" icon=\"check\" :title=\"tr.codigos\" >\r\n                            <vs-chip color=\"primary\">Total Duplicados {{tr.repetidas}}</vs-chip>\r\n                        </vs-list-item>\r\n                \r\n                    \r\n                    </vs-list>\r\n                </vs-col>\r\n            \r\n            </vs-row>\r\n        </vs-card>\r\n    \r\n\r\n    </div>\r\n\r\n    <vx-card v-if=\"tableData.length && header.length\">\r\n      <vs-table stripe pagination :max-items=\"10\" search :data=\"tableData\">\r\n        <template slot=\"header\">\r\n          <h4>Códigos a subir {{tableData.length}}</h4>\r\n        </template>\r\n\r\n        <template slot=\"thead\">\r\n          <vs-th :sort-key=\"heading\" v-for=\"heading in header\" :key=\"heading\">{{ heading }}</vs-th>\r\n        </template>\r\n\r\n        <template slot-scope=\"{data}\">\r\n          <vs-tr :data=\"tr\" :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n            <vs-td :data=\"col\" v-for=\"(col, indexcol) in data[indextr]\" :key=\"indexcol + col\">\r\n              {{ col }}\r\n            </vs-td>\r\n          </vs-tr>\r\n        </template>\r\n      </vs-table>\r\n    </vx-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport ImportExcel from \"./import_excel.vue\";\r\n\r\nexport default {\r\n  components: {\r\n    ImportExcel\r\n  },\r\n  data () {\r\n    return {\r\n      codigosPerdidos:false,\r\n      tableData: [],\r\n      header: [],\r\n      sheetName: '',\r\n      usuario: [],\r\n      modalConfirm: false,\r\n      modalErrores: false,\r\n      errores: [],\r\n      tipo_selected: '',\r\n      cedulas_no_encontradas: [],\r\n      modalCedulas: false,\r\n      codigosLeidos:[],\r\n      codigosSinBarra:[],\r\n      observacion:'',\r\n      codigosRepetidos:[],\r\n      porcentaje:0\r\n     \r\n    }\r\n  },\r\n  created(){\r\n        this.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n        this.codigosPerdidos = false\r\n    },\r\n  methods: {\r\n    loadDataInTable ({ results, header, meta }) {\r\n      this.header = header\r\n      this.tableData = results\r\n      this.sheetName = meta.sheetName\r\n    },\r\n    procesarPagos(){\r\n        let me = this\r\n\r\n        me.$vs.loading()\r\n        \r\n        let json_pagos = JSON.stringify(me.tableData)\r\n        let formData = new FormData();\r\n        formData.append('data_codigos', json_pagos);\r\n        formData.append('usuario', me.usuario.idusuario);\r\n        formData.append('observacion', me.observacion);\r\n    \r\n        this.$http.post(this.$server_url+'bodega', formData)\r\n        .then(res => {\r\n          \r\n            me.$vs.loading.close()\r\n            me.$vs.notify({\r\n            text:'Códigos procesados exitosamente',\r\n            color:'success',\r\n            iconPack: 'feather',\r\n            icon:'icon-check'})\r\n        \r\n            me.modalConfirm = false\r\n            me.tableData = []\r\n            me.codigosPerdidos = true\r\n            me.codigosRepetidos = res.data.codigosRepetidos\r\n            me.porcentaje  = res.data.porcentaje\r\n            console.log('ss',res.data)\r\n            // me.codigosSinBarra = res.data.codigosSinBarra\r\n         \r\n     \r\n            \r\n        })\r\n        .catch(function (error) {\r\n            me.$vs.notify({\r\n            text:'Verifique que la información se haya guardado correctamente.',\r\n            color:'warning',\r\n            iconPack: 'feather',\r\n            icon:'icon-alert-triangle'})\r\n            me.$vs.loading.close()\r\n            // setTimeout(function() {location.reload()}, 1000);\r\n        })\r\n    },\r\n    openConfirm(tipo) {\r\n\r\n      let me = this\r\n      me.tipo_selected = tipo\r\n      \r\n    //   if( !me.tableData[0].codigo || me.tableData[0].bc_estado < 0 ||  me.tableData[0].bc_estado > 2  ||  !me.tableData[0].comentario){\r\n    //         me.$vs.loading.close()\r\n    //         me.$vs.notify({ text:'Corrija el formato del excel y vuelva a intentar.', color:'warning', iconPack: 'feather', icon:'icon-alert-triangle'})\r\n    //         return\r\n    //     }\r\n\r\n      if( !me.tableData[0].codigo){\r\n            me.$vs.loading.close()\r\n            me.$vs.notify({ text:'Corrija el formato del excel y vuelva a intentar.', color:'warning', iconPack: 'feather', icon:'icon-alert-triangle'})\r\n            return\r\n        }\r\n\r\n      me.errores = []\r\n      $.each(me.tableData,function(key, value){\r\n        if( !value.codigo || isNaN(value.bc_estado ||  !value.comentario) ){\r\n          me.errores.push(value)\r\n        }\r\n      })\r\n\r\n      if( me.errores.length > 0 ){\r\n        me.modalErrores = true\r\n      }else{\r\n        me.modalConfirm = true\r\n      }\r\n    },\r\n    recargar(){\r\n      location.reload()\r\n    }\r\n\r\n\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.tabla{\r\n  width: 100%;\r\n  margin-top: 10px;\r\n}\r\n .tabla {\r\n  \r\n  border: 1px solid #D1E5F1;\r\n  padding: 2px;\r\n  border-radius: 5px;\r\n}\r\n.th1{\r\n  background-color: #F17F76;\r\n  border-radius: 5px;\r\n  color:white;\r\n}\r\n.td1, .th1{\r\n padding: 10px;\r\n text-align: center;\r\n border:none;\r\n}\r\n</style>\r\n"]}]}