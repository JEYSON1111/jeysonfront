{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\pedidos\\facturacion_api\\cliente_institucion.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\pedidos\\facturacion_api\\cliente_institucion.vue","mtime":1712682816318},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nimport Vue from 'vue'\r\nimport axios from 'axios'\r\nexport default {\r\n    data() {\r\n        return{\r\n            CliIns: [],\r\n            popupActivoGuardar: false,\r\n            popupActivoEditar: false,\r\n            popupActivoEliminar: false,\r\n            cliInsCodigo: 0,\r\n            busquedaxcodigo: \"\",\r\n            valorBusqueda:\"0\",\r\n        }\r\n    },\r\n    mounted() {\r\n        this.getCliente();\r\n    },\r\n    methods: {\r\n        /*\r\n        getCliente() {\r\n            let me = this;\r\n            //axios.get(this.$apifacturacion_url + 'f_ClienteInstitucion')\r\n            this.$http.get(this.$server_url+'Get_Cliente_Institucion')\r\n            .then(res => {\r\n            let resultado = res.data.clienteinstitucion.filter(c => c.cliInsCodigo !== 0);\r\n            this.CliIns = resultado;\r\n            })\r\n            .catch(err => {\r\n            console.log(err)\r\n            })\r\n        },\r\n        */\r\n        getClienteInstitucionParametro() {\r\n            let me = this;\r\n            if(me.busquedaxcodigo.length < 2){\r\n                me.$vs.notify({\r\n                text:'Minimo 2 caracteres de busqueda',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n                return false;\r\n            }\r\n            me.$vs.loading()\r\n            //axios.get(this.$apifacturacion_url + 'f_ClienteInstitucion/GetxParametros?busqueda='+me.busqueda+'&razonbusqueda='+me.busquedaxcodigo)\r\n            this.$http.get(this.$server_url+'Get_ClienteInstitucionxbusquedayrazonbusqueda?busqueda='+me.busqueda+'&razonbusqueda='+me.busquedaxcodigo)\r\n            .then(function (res) {\r\n                // me.tmpVenta = res.data;\r\n                // let resultado = res.data.filter(c => c.cliCi !== 0);\r\n                me.CliIns = res.data;\r\n                // me.filtroRegion();\r\n                me.$vs.loading.close()\r\n                if(res.data.message){\r\n                    me.$vs.notify({\r\n                    text: res.data.message,\r\n                    color: 'success',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-user'\r\n                    })\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                if (error.response && error.response.status === 404) {\r\n                    me.$vs.notify({\r\n                        text: 'No hay productos para esta búsqueda',\r\n                        color: 'danger',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-x'\r\n                    })\r\n                me.CliIns = []; // Asignar un arreglo vacío para vaciar la lista de registros\r\n                me.$vs.loading.close()\r\n                } else {\r\n                    console.log(error + ' error');\r\n                    me.$vs.loading.close();\r\n                }\r\n            })\r\n        },\r\n        // getCliente() {\r\n        // axios.get('https://localhost:7252/api/Cliente')\r\n        //     .then(res => {\r\n        //     let resultado = res.data.filter(c => c.cliCi !== null && c.cliCi !== '');\r\n        //     this.CliIns = resultado;\r\n        //     console.log(this.CliIns);\r\n        //     })\r\n        //     .catch(err => {\r\n        //     console.log(err);\r\n        //     });\r\n        // },\r\n        getPreguntaEliminar(tr) {\r\n            this.cliInsCodigo = tr.cliInsCodigo\r\n            this.popupActivoEliminar = true\r\n            //console.log(this.caf_id);\r\n        },\r\n        getEliminar() {\r\n            let me = this;\r\n            me.$vs.loading()\r\n            //axios.post(this.$apifacturacion_url + 'f_ClienteInstitucion/DeleteClienteInstitucion?id=' + this.cliInsCodigo)\r\n            this.$http.post(this.$server_url+'Delete_Cliente_Institucion?id=' + this.cliInsCodigo)\r\n            .then(data => {\r\n                me.$vs.loading.close()\r\n                this.getCliente();\r\n                me.$vs.notify({\r\n                    text: 'Registro eliminado con exito',\r\n                    color: 'success',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-check'\r\n                })\r\n                this.popupActivoEditar = false;\r\n                this.popupActivoGuardar = false;\r\n                this.popupActivoEliminar = false;\r\n            })\r\n            .catch(function () {\r\n                me.$vs.loading.close()\r\n                me.$vs.notify({\r\n                    text: 'Registro no se pudo eliminar',\r\n                    color: 'danger',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-x'\r\n                })\r\n            })\r\n        },\r\n        getCancelar() {\r\n            this.popupActivoEditar = false;\r\n            this.popupActivoGuardar = false;\r\n            this.popupActivoEliminar = false;\r\n        },\r\n    },\r\n    // created(){\r\n    //     let url = \"https://localhost:7252/api/Cliente\";\r\n    //     axios.get(url).then((response) => this.CliIns = response.data);\r\n    //     // fetch(\"https://localhost:7252/api/Cliente/\")\r\n    //     // .then(response => response.json())\r\n    //     // .then((data) => (this.CliIns = data));\r\n    //     // // .then(data => (this.totalVuePackages = data.total));\r\n    // }\r\n}\r\n",{"version":3,"sources":["cliente_institucion.vue"],"names":[],"mappings":";AAkfile":"cliente_institucion.vue","sourceRoot":"src/views/pedidos/facturacion_api","sourcesContent":["<template>\r\n    <vx-card fixed-height=\"true\">\r\n        <vs-row vs-justify=\"flex-start\">\r\n            <vs-col type=\"flex\" vs-justify=\"flex-start\" vs-align=\"flex-start\" class=\"m-2\" vs-w=\"12\">\r\n                <p>Búsqueda por filtros</p>\r\n                <br>\r\n                <vs-card>\r\n                    <div style=\"\">\r\n                        <vs-input class=\"w-full\" @keyup.enter=\"getClienteInstitucionParametro()\" icon-after=\"true\" label-placeholder=\"icon-after\" style=\"margin:0px 0px 20px 0px;\"  icon=\"search\" placeholder=\"Buscar\" v-model=\"busquedaxcodigo\"/>\r\n                    </div>\r\n                    <div style=\"\">\r\n                        <ul class=\"leftx\" style=\"display:flex;margin:0px 0px 0px 20px;\">\r\n                            <li class=\"modelx\">\r\n                            </li>\r\n                            <li style=\"margin:10px 10px 0px 0px;\">\r\n                                <vs-radio vs-name=\"radios1\" vs-value=\"0\" v-model=\"valorBusqueda\"  @input=\"busqueda='bclienteinsid'\">Id</vs-radio>\r\n                            </li>\r\n                            <li style=\"margin:10px 20px 0px 0px;\">\r\n                                <vs-radio vs-name=\"radios2\" vs-value=\"1\" v-model=\"valorBusqueda\" @input=\"busqueda='bcedulacliente'\">Cédula Cliente</vs-radio>\r\n                            </li>\r\n                            <li style=\"margin:10px 10px 0px 0px;\">\r\n                                <vs-radio vs-name=\"radios3\" vs-value=\"3\" v-model=\"valorBusqueda\"  @input=\"busqueda='binscodigo'\">Id Institución</vs-radio>\r\n                            </li>\r\n                            <li>\r\n                                <vs-button color=\"warning\" type=\"filled\" style=\"margin-left:10px;\" @click=\"getClienteInstitucionParametro();\" icon=\"search\"></vs-button>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </vs-card>\r\n            </vs-col>\r\n        </vs-row>\r\n        <!-- <vs-button type=\"border\" color=\"success\" class=\"mr-2\" @click=\"getNuevo()\">Agregar Nuevo Cliente</vs-button> -->\r\n        <vs-table max-items=\"10\" pagination search :data=\"CliIns\">\r\n            <template slot=\"header\">\r\n                        <vs-chip  color=\"primary\">Cantidad: <b> {{ CliIns.length }}</b></vs-chip>\r\n                    </template>\r\n            <!-- {{cliCi}} -->\r\n            <template slot=\"thead\">\r\n                <vs-th>\r\n                    Id\r\n                </vs-th>\r\n                <vs-th colspan=\"2\">\r\n                    Información Cliente - Institución\r\n                </vs-th>\r\n                <vs-th>\r\n                    Acciones\r\n                </vs-th>\r\n            </template>\r\n            <template slot-scope=\"{data}\">\r\n                <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                    <vs-td :data=\"data[indextr].cliInsCodigo\">\r\n                        {{ data[indextr].cliInsCodigo }}\r\n                    </vs-td>\r\n                    <vs-td>\r\n                        <small><b>Id Institución:</b> {{tr.insCodigo}}</small><br>\r\n                        <small><b>Institución:</b> {{tr.insCodigoNavigation.insNombre}}</small><br>\r\n                        <small><b>Código Vendedor:</b> {{tr.venDCodigo}}</small><br>\r\n                    </vs-td>\r\n                    <vs-td>\r\n                        <small><b>Cédula Cliente:</b> {{tr.cliCi}} </small><br>\r\n                        <small><b>Nombres Cliente:</b> {{tr.cliCiNavigation.cliNombres}}</small><br>\r\n                    </vs-td>\r\n                    <vs-td :data=\"data[indextr].cliInsCodigo\">\r\n                        <!-- <vs-button type=\"border\" size=\"small\" icon-pack=\"feather\" icon=\"icon-edit\" class=\"mr-2 inline\" color=\"success\" @click=\"getEditar(tr)\"></vs-button> -->\r\n                        <vs-button type=\"border\" size=\"small\" icon-pack=\"feather\" icon=\"icon-trash\" class=\"mr-2 inline\" color=\"danger\" @click=\"getPreguntaEliminar(tr)\"></vs-button>\r\n                    </vs-td>\r\n                </vs-tr>\r\n            </template>\r\n        </vs-table>\r\n        <vs-popup class=\"eliminar\" :title=\"`¿Confirma que desea eliminar el registro: ${cliInsCodigo}?`\" :active.sync=\"popupActivoEliminar\">\r\n            <!-- <div align=\"center\" style=\"font-size: 40px\"><b>{{ cliInsCodigo }}</b></div>  -->\r\n        <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"3\" class=\"mt-2\"></vs-col>\r\n        <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"3\" class=\"mt-2\">\r\n            <vs-button @click=\"getEliminar()\" type=\"relief\">Aceptar</vs-button>\r\n        </vs-col>\r\n        <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"3\" class=\"mt-2\">\r\n            <vs-button @click=\"getCancelar()\" color=\"danger\" type=\"relief\">Cancelar</vs-button>\r\n        </vs-col>\r\n    </vs-popup>\r\n    </vx-card>\r\n    </template>\r\n<script>\r\nimport Vue from 'vue'\r\nimport axios from 'axios'\r\nexport default {\r\n    data() {\r\n        return{\r\n            CliIns: [],\r\n            popupActivoGuardar: false,\r\n            popupActivoEditar: false,\r\n            popupActivoEliminar: false,\r\n            cliInsCodigo: 0,\r\n            busquedaxcodigo: \"\",\r\n            valorBusqueda:\"0\",\r\n        }\r\n    },\r\n    mounted() {\r\n        this.getCliente();\r\n    },\r\n    methods: {\r\n        /*\r\n        getCliente() {\r\n            let me = this;\r\n            //axios.get(this.$apifacturacion_url + 'f_ClienteInstitucion')\r\n            this.$http.get(this.$server_url+'Get_Cliente_Institucion')\r\n            .then(res => {\r\n            let resultado = res.data.clienteinstitucion.filter(c => c.cliInsCodigo !== 0);\r\n            this.CliIns = resultado;\r\n            })\r\n            .catch(err => {\r\n            console.log(err)\r\n            })\r\n        },\r\n        */\r\n        getClienteInstitucionParametro() {\r\n            let me = this;\r\n            if(me.busquedaxcodigo.length < 2){\r\n                me.$vs.notify({\r\n                text:'Minimo 2 caracteres de busqueda',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n                return false;\r\n            }\r\n            me.$vs.loading()\r\n            //axios.get(this.$apifacturacion_url + 'f_ClienteInstitucion/GetxParametros?busqueda='+me.busqueda+'&razonbusqueda='+me.busquedaxcodigo)\r\n            this.$http.get(this.$server_url+'Get_ClienteInstitucionxbusquedayrazonbusqueda?busqueda='+me.busqueda+'&razonbusqueda='+me.busquedaxcodigo)\r\n            .then(function (res) {\r\n                // me.tmpVenta = res.data;\r\n                // let resultado = res.data.filter(c => c.cliCi !== 0);\r\n                me.CliIns = res.data;\r\n                // me.filtroRegion();\r\n                me.$vs.loading.close()\r\n                if(res.data.message){\r\n                    me.$vs.notify({\r\n                    text: res.data.message,\r\n                    color: 'success',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-user'\r\n                    })\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                if (error.response && error.response.status === 404) {\r\n                    me.$vs.notify({\r\n                        text: 'No hay productos para esta búsqueda',\r\n                        color: 'danger',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-x'\r\n                    })\r\n                me.CliIns = []; // Asignar un arreglo vacío para vaciar la lista de registros\r\n                me.$vs.loading.close()\r\n                } else {\r\n                    console.log(error + ' error');\r\n                    me.$vs.loading.close();\r\n                }\r\n            })\r\n        },\r\n        // getCliente() {\r\n        // axios.get('https://localhost:7252/api/Cliente')\r\n        //     .then(res => {\r\n        //     let resultado = res.data.filter(c => c.cliCi !== null && c.cliCi !== '');\r\n        //     this.CliIns = resultado;\r\n        //     console.log(this.CliIns);\r\n        //     })\r\n        //     .catch(err => {\r\n        //     console.log(err);\r\n        //     });\r\n        // },\r\n        getPreguntaEliminar(tr) {\r\n            this.cliInsCodigo = tr.cliInsCodigo\r\n            this.popupActivoEliminar = true\r\n            //console.log(this.caf_id);\r\n        },\r\n        getEliminar() {\r\n            let me = this;\r\n            me.$vs.loading()\r\n            //axios.post(this.$apifacturacion_url + 'f_ClienteInstitucion/DeleteClienteInstitucion?id=' + this.cliInsCodigo)\r\n            this.$http.post(this.$server_url+'Delete_Cliente_Institucion?id=' + this.cliInsCodigo)\r\n            .then(data => {\r\n                me.$vs.loading.close()\r\n                this.getCliente();\r\n                me.$vs.notify({\r\n                    text: 'Registro eliminado con exito',\r\n                    color: 'success',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-check'\r\n                })\r\n                this.popupActivoEditar = false;\r\n                this.popupActivoGuardar = false;\r\n                this.popupActivoEliminar = false;\r\n            })\r\n            .catch(function () {\r\n                me.$vs.loading.close()\r\n                me.$vs.notify({\r\n                    text: 'Registro no se pudo eliminar',\r\n                    color: 'danger',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-x'\r\n                })\r\n            })\r\n        },\r\n        getCancelar() {\r\n            this.popupActivoEditar = false;\r\n            this.popupActivoGuardar = false;\r\n            this.popupActivoEliminar = false;\r\n        },\r\n    },\r\n    // created(){\r\n    //     let url = \"https://localhost:7252/api/Cliente\";\r\n    //     axios.get(url).then((response) => this.CliIns = response.data);\r\n    //     // fetch(\"https://localhost:7252/api/Cliente/\")\r\n    //     // .then(response => response.json())\r\n    //     // .then((data) => (this.CliIns = data));\r\n    //     // // .then(data => (this.totalVuePackages = data.total));\r\n    // }\r\n}\r\n</script>"]}]}