{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\codigos\\components\\EliminarCodigos.vue?vue&type=style&index=0&id=44386562&scoped=true&lang=css","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\codigos\\components\\EliminarCodigos.vue","mtime":1712682815617},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\n.tabla{\r\n  width: 100%;\r\n  margin-top: 10px;\r\n}\r\n .tabla {\r\n\r\n  border: 1px solid #D1E5F1;\r\n  padding: 2px;\r\n  border-radius: 5px;\r\n}\r\n.th1{\r\n  background-color: #F17F76;\r\n  border-radius: 5px;\r\n  color:white;\r\n}\r\n.td1, .th1{\r\n padding: 10px;\r\n text-align: center;\r\n border:none;\r\n}\r\n",{"version":3,"sources":["EliminarCodigos.vue"],"names":[],"mappings":";AAuOA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"EliminarCodigos.vue","sourceRoot":"src/views/codigos/components","sourcesContent":["\r\n<template>\r\n  <div>\r\n    <vs-popup title=\"Códigos no encontrados\" :active.sync=\"modalCedulas\" @accept=\"recargar()\" @close=\"recargar()\" @cancel=\"recargar()\"  style=\"padding: 0% !important;\">\r\n       <div class=\"w-full\" style=\"background: rgb(235,147,25); background: linear-gradient(90deg, rgba(235,147,25,1) 28%, rgba(255,166,0,1) 100%); color: white; border-radius: 5px; padding: 10px;\">\r\n        <div class=\"vx-row\">\r\n          <div class=\"vx-col w-full\" align=\"center\">\r\n           <b>Codigos a las que no se aplicaron correctamente</b>\r\n          </div>\r\n        </div>\r\n        <vs-divider></vs-divider>\r\n        <div :key=\"index\" v-for=\"(item, index) in cedulas_no_encontradas\">\r\n          <div class=\"vx-row\">\r\n              <div class=\"vx-col w-full\" align=\"center\"> <span> {{item}} </span> </div>\r\n          </div>\r\n        </div>\r\n       </div>\r\n    </vs-popup>\r\n    <vs-popup small title=\"Confirmación\" :active.sync=\"modalConfirm\">\r\n      <div class=\"w-full mb-base\" align=\"center\">\r\n        <h4>Está seguro de aplicar estas códigos?</h4>\r\n      </div>\r\n      <div class=\"w-full\" align=\"center\">\r\n        <vs-button class=\"mb-2\" color=\"danger\" type=\"gradient\" @click=\"procesarPagos()\"> Confirmar </vs-button>\r\n      </div>\r\n    </vs-popup>\r\n    <div class=\"mb-6\" align=\"center\">\r\n          <div class=\"vx-col w-full\">\r\n            <p style=\"color:#EC4518;\">\r\n            <i class=\"fa fa-file\" aria-hidden=\"true\"></i>  Eliminación de Códigos de la BD mediante importación <span style=\"font-weight: bold;\">(no ingrese más de 2000 registros en una sola carga.)</span>\r\n            </p>\r\n        </div>\r\n        <br/>\r\n        <vs-input icon=\"icon-message-square\" class=\"w-full\" icon-pack=\"feather\" placeholder=\"Comentario\" v-model=\"observacion\"/>\r\n        <import-excel :onSuccess=\"loadDataInTable\"  class=\"mb-4 mt-10\" />\r\n      <div>\r\n          <vs-row>\r\n            <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\" vs-sm = \"12\" vs-xs=\"12\" >\r\n              <vs-card>\r\n                <div class=\"header\">\r\n                  <p style=\"font-weight: bold;\">Formato del archivo excel</p>\r\n                  <table class=\"tabla\">\r\n                    <tr>\r\n                      <th class=\"th1\">codigo</th>\r\n                    </tr>\r\n                    <tr>\r\n                      <td class=\"td1\">xxx</td>\r\n                    </tr>\r\n                  </table>\r\n                </div>\r\n              </vs-card>\r\n            </vs-col>\r\n          </vs-row>\r\n      </div>\r\n      <vs-alert v-if=\"tableData.length > 0\" color=\"danger\" class=\"mb-3 mt-2\"  icon-pack=\"feather\" icon=\"icon-alert-triangle\">\r\n        <span>Excel cargado exitosamente. ¿Está seguro de eliminar estos códigos?</span><br>\r\n      </vs-alert>\r\n        <vs-row v-if=\"tableData.length > 0 && tableData.length <= 2000 \" class=\"mt-2\">\r\n          <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\">\r\n              <vs-button class=\"mb-2\" color=\"danger\"  type=\"relief\" @click=\"openConfirm()\"> Eliminar códigos </vs-button>\r\n          </vs-col>\r\n        </vs-row>\r\n        <vs-row v-if=\"codigosPerdidos == true\">\r\n          <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\">\r\n            <vs-alert active=\"true\">\r\n                Se eliminarón {{ porcentaje }} códigos\r\n            </vs-alert>\r\n          </vs-col>\r\n        </vs-row>\r\n        <vs-row v-if=\"codigosPerdidos == true\">\r\n            <vs-card>\r\n            <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"6\">\r\n              <vs-list>\r\n                <p>Cantidad <span>{{ codigosNoCambiados.length }}</span></p>\r\n                  <vs-list-header icon=\"supervisor_account\" title=\"Códigos que no se pudieron eliminar\"></vs-list-header>\r\n                  <vs-list-item :key=\"indextr\" v-for=\"(tr, indextr) in codigosNoCambiados\" icon=\"check\" :title=\"tr.codigo\" >\r\n                    <p v-if=\"tr.mensaje !='0'\"> {{ tr.mensaje }}</p>\r\n                  </vs-list-item>\r\n              </vs-list>\r\n            </vs-col>\r\n            <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"6\">\r\n              <vs-list>\r\n                <p>Cantidad <span>{{ codigoNoExiste.length }}</span></p>\r\n                  <vs-list-header icon=\"supervisor_account\" title=\"Códigos que no existen\"></vs-list-header>\r\n                  <vs-list-item :key=\"s\" v-for=\"(tr, s) in codigoNoExiste\" icon=\"check\" :title=\"tr.codigo\" >\r\n                  </vs-list-item>\r\n              </vs-list>\r\n            </vs-col>\r\n          </vs-card>\r\n        </vs-row>\r\n        <vs-row v-if=\"codigosPerdidos == true\">\r\n          <vs-card>\r\n            <div class=\"header\">\r\n              <span style=\"font-weight:bold;\">Codigos que tienen usuario / o ya esta liquidado</span>\r\n            </div>\r\n            <gestionCodigosListaVue :arregloCodigos=\"codigosConUsuario\" openModal=\"1\"/>\r\n          </vs-card>\r\n        </vs-row>\r\n    </div>\r\n    <vx-card v-if=\"tableData.length && header.length\">\r\n      <vs-table stripe pagination :max-items=\"10\" search :data=\"tableData\">\r\n        <template slot=\"header\">\r\n          <h4>Códigos a eliminar {{tableData.length}}</h4>\r\n        </template>\r\n        <template slot=\"thead\">\r\n          <vs-th :sort-key=\"heading\" v-for=\"heading in header\" :key=\"heading\">{{ heading }}</vs-th>\r\n        </template>\r\n        <template slot-scope=\"{data}\">\r\n          <vs-tr :data=\"tr\" :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n            <vs-td :data=\"col\" v-for=\"(col, indexcol) in data[indextr]\" :key=\"indexcol + col\">\r\n              {{ col }}\r\n            </vs-td>\r\n          </vs-tr>\r\n        </template>\r\n      </vs-table>\r\n    </vx-card>\r\n  </div>\r\n</template>\r\n<script>\r\nimport ImportExcel from './importExcel.vue'\r\nimport gestionCodigosListaVue from './utils/gestionCodigosLista.vue';\r\nexport default {\r\n  components: {\r\n    ImportExcel,\r\n    gestionCodigosListaVue,\r\n  },\r\n  data () {\r\n    return {\r\n      codigosPerdidos:false,\r\n      tableData: [],\r\n      header: [],\r\n      sheetName: '',\r\n      usuario: [],\r\n      modalConfirm: false,\r\n      modalErrores: false,\r\n      errores: [],\r\n      cedulas_no_encontradas: [],\r\n      modalCedulas: false,\r\n      codigosNoCambiados:[],\r\n      codigoNoExiste:[],\r\n      codigosConUsuario:[],\r\n      porcentaje:0,\r\n      observacion: '',\r\n    }\r\n  },\r\n  created(){\r\n    this.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n    this.codigosPerdidos = false\r\n  },\r\n  methods: {\r\n    loadDataInTable ({ results, header, meta }) {\r\n      this.codigosPerdidos = false\r\n      this.header = header\r\n      this.tableData = results\r\n      this.sheetName = meta.sheetName\r\n    },\r\n    procesarPagos(){\r\n      let me = this\r\n      if(me.observacion == '' || me.observacion == null || me.observacion == undefined){\r\n        me.$vs.loading.close()\r\n        me.$vs.notify({ text:'Ingrese un comentario.', color:'warning', iconPack: 'feather', icon:'icon-alert-triangle'})\r\n        return\r\n      }\r\n      if(me.observacion.length < 5){\r\n        me.$vs.loading.close()\r\n        me.$vs.notify({ text:'El comentario debe tener al menos 5 caracteres.', color:'warning', iconPack: 'feather', icon:'icon-alert-triangle'})\r\n        return\r\n      }\r\n      let json_pagos = JSON.stringify(me.tableData)\r\n      let formData = new FormData();\r\n      me.$vs.loading()\r\n      formData.append('data_codigos', json_pagos);\r\n      formData.append('id_usuario',   me.usuario.idusuario);\r\n      formData.append('observacion',  me.observacion);\r\n      this.$http.post(this.$server_url+'codigos/eliminar', formData)\r\n      .then(res => {\r\n        me.$vs.loading.close()\r\n        me.$vs.notify({\r\n        text:'Códigos procesados exitosamente',\r\n        color:'success',\r\n        iconPack: 'feather',\r\n        icon:'icon-check'})\r\n        me.modalConfirm       = false\r\n        me.tableData          = []\r\n        me.codigosPerdidos    = true\r\n        me.codigosConUsuario  = res.data.codigosConUsuario\r\n        me.codigosNoCambiados = res.data.codigosNoCambiados\r\n        me.codigoNoExiste     = res.data.codigoNoExiste\r\n        me.porcentaje         = res.data.eliminados\r\n        me.observacion        = ''\r\n      })\r\n      .catch(function (error) {\r\n        me.$vs.notify({\r\n        text:'Verifique que la información se haya guardado correctamente.',\r\n        color:'warning',\r\n        iconPack: 'feather',\r\n        icon:'icon-alert-triangle'})\r\n        me.$vs.loading.close()\r\n        // setTimeout(function() {location.reload()}, 1000);\r\n      })\r\n    },\r\n    openConfirm(tipo) {\r\n      let me = this\r\n      if( !me.tableData[0].codigo){\r\n        me.$vs.loading.close()\r\n        me.$vs.notify({ text:'Corrija el formato del excel y vuelva a intentar.', color:'warning', iconPack: 'feather', icon:'icon-alert-triangle'})\r\n        return\r\n      }\r\n      me.errores = []\r\n      $.each(me.tableData,function(key, value){\r\n        if( !value.codigo){\r\n          me.errores.push(value)\r\n        }\r\n      })\r\n      if( me.errores.length > 0 ){\r\n        me.modalErrores = true\r\n      }else{\r\n        me.modalConfirm = true\r\n      }\r\n    },\r\n    recargar(){\r\n      location.reload()\r\n    }\r\n\r\n\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.tabla{\r\n  width: 100%;\r\n  margin-top: 10px;\r\n}\r\n .tabla {\r\n\r\n  border: 1px solid #D1E5F1;\r\n  padding: 2px;\r\n  border-radius: 5px;\r\n}\r\n.th1{\r\n  background-color: #F17F76;\r\n  border-radius: 5px;\r\n  color:white;\r\n}\r\n.td1, .th1{\r\n padding: 10px;\r\n text-align: center;\r\n border:none;\r\n}\r\n</style>\r\n"]}]}