{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\evaluaciones\\PreguntasComponent.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\evaluaciones\\PreguntasComponent.vue","mtime":1712682815861},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\n    import flatPickr from 'vue-flatpickr-component';\r\n    import 'flatpickr/dist/flatpickr.css';\r\n    import Vue from 'vue'\r\n    import axios from 'axios'\r\n    import vSelect from 'vue-select'\r\n    import moment from 'moment'\r\n    import $ from 'jquery'\r\n    var img_preg_old = '', img_opcion_old = '';\r\n\r\n    export default {\r\n        data(){\r\n            return {\r\n                asignaturas: [],\r\n                asignatura: {id: '', label: ''},\r\n                preguntas: [],\r\n                pregunta: {descripcion: '', tema: {id: '', label: ''}, respuesta: '', opcion1: '', opcion2: '', opcion3: '', img_pregunta: '', img_respuesta: '', img_opcion1: '', img_opcion2: '', img_opcion3: '', puntaje_pregunta: '',estado:1},\r\n                temas: [],\r\n                tema: {id: '', label: '', id_asignatura: '', unidad: ''},\r\n                temaSelected: {id: '', label: ''},\r\n                opcion: {id_opcion_pregunta: '', id_pregunta: '', opcion: '', img_opcion: '', tipo: ''},\r\n                opciones: [],\r\n                editarActivo: false,\r\n                popupAddPreg: false,\r\n                popupEditPreg: false,\r\n                popupTipoPreg: false,\r\n                popupAddPregVarOp: false,\r\n                pregSelected: [],\r\n                pregTipo: 1,\r\n                titPregTipo: '',\r\n                txtPregTipo: '',\r\n                active1: true,\r\n                tipo_opcion: '',\r\n                cargarOpcionActivo: false,\r\n                guardadoActivo: false,\r\n                'tableList': [\r\n                    'vs-th: Component',\r\n                    'vs-tr: Component',\r\n                    'vs-td: Component',\r\n                    'thread: Slot',\r\n                    'tbody: Slot',\r\n                    'header: Slot'\r\n                ],\r\n                usuario: [],\r\n                docente: null,\r\n\r\n                id_preguntaActiva: '',\r\n                editarOpcionActiva: false,\r\n                src_imagen_pregunta: '',\r\n                src_imagen_opcion: '',\r\n                palabras_clave: '',\r\n                id_opcion_tipo234: '',\r\n                urlOrigen: '',\r\n                url: '',\r\n                id_pregunta_creada: null,\r\n                opcionselecradio: '',\r\n                asignaturaSelected: '',\r\n                unidadSelected: '',\r\n                unidades: [\r\n                    { id: \"1\", label: \"Unidad 1\", }, { id: \"2\", label: \"Unidad 2\", }, { id: \"3\", label: \"Unidad 3\", }, { id: \"4\", label: \"Unidad 4\", }, { id: \"5\", label: \"Unidad 5\", }, { id: \"6\", label: \"Unidad 6\", }, { id: \"7\", label: \"Unidad 7\", }, { id: \"8\", label: \"Unidad 8\", }\r\n                ],\r\n                tipoSelected: '',\r\n                tipos: [\r\n                    { id: \"1\", label: \"Opción múltiple\", }, { id: \"2\", label: \"Respuesta cerrada\", }, { id: \"3\", label: \"Verdadero/Falso\", }, { id: \"5\", label: \"Selección simple\"}, { id: \"6\", label: \"Respuesta abierta\" }\r\n                ],\r\n                datosEliminar: [],\r\n                idPregEliminar: '',\r\n                bancoSelected: {id:'3',label:'Ambas'},\r\n                bancos: [\r\n                    {id:'1',label:'Preguntas de Prolipa'},\r\n                    {id:'2',label:'Solo mis preguntas'},\r\n                    {id:'3',label:'Ambas'},\r\n                ],\r\n                tema_ambito: 'Tema',\r\n                arrayQuestions: [],\r\n                srcPreguntaAQuitar: '',\r\n            }\r\n        },\r\n        components: {\r\n            'v-select': vSelect,\r\n            flatPickr\r\n        },\r\n        created(){\r\n            let me = this;\r\n            me.$vs.loading()\r\n            me.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n            me.docente = me.usuario.idusuario\r\n            me.url = location.pathname.split('/');\r\n            var urlBack = window.location.href\r\n            var urlV = urlBack.split('/')\r\n            me.urlOrigen = urlV[0]+'/'+urlV[1]+'/'+urlV[2]+'/temas'\r\n            if( me.url[2] === undefined ){\r\n                this.$http.get(this.$server_url+'asignaturasDoc/0').then(res => {\r\n                    me.asignaturas = res.data;\r\n                    me.$vs.loading.close()\r\n                })\r\n            }else{\r\n                this.$http.get(this.$server_url+'asignaturasDoc/'+me.docente).then(res => {\r\n                    me.asignaturas = res.data;\r\n                    me.$vs.loading.close()\r\n                })\r\n            }\r\n\r\n            me.asignaturaSelected = { id: localStorage.idasignatura, label: localStorage.nombreasignatura }\r\n        },\r\n        methods: {\r\n            onResize() {\r\n            if (window.innerWidth < 769)\r\n                this.isMobile = true;\r\n            else\r\n                this.isMobile = false;\r\n            },\r\n            limpiar(){\r\n                this.guardadoActivo = false;\r\n                this.opciones = [];\r\n                this.pregunta.descripcion = '';\r\n                this.pregunta.puntaje_pregunta = '';\r\n                //this.pregunta.tema = '';\r\n                this.pregunta.opcion = '';\r\n                this.opcion.opcion = '';\r\n                this.opcion.tipo = '';\r\n                this.src_imagen_pregunta = '';\r\n                this.srcPreguntaAQuitar = '';\r\n                this.src_imagen_opcion = '';\r\n                this.editarActivo = false;\r\n                this.palabras_clave = '';\r\n                this.id_preguntaActiva='';\r\n                this.editarOpcionActiva=false;\r\n                this.pregunta.cant_coincidencias='';\r\n                this.pregunta.puntaje_pregunta=1;\r\n                this.pregunta.estado=1;\r\n                switch (this.pregTipo) {\r\n                    case 1:\r\n                        this.titPregTipo='Crear pregunta de opción múltiple.';\r\n                        this.txtPregTipo='Esta pregunta puede tener una o varias opciones correctas. Las opciones pueden contener: solo texto, solo imágenes o ambas.';\r\n                        break;\r\n                    case 2:\r\n                        this.titPregTipo='Crear pregunta cerrada';\r\n                        this.txtPregTipo='Esta pregunta debe ser respondida de forma escrita. La respuesta correcta debe contener palabras clave para poder comparar con la respuesta del estudiante.';\r\n                        break;\r\n                    case 3:\r\n                        this.titPregTipo='Crear pregunta de Verdadero o Falso';\r\n                        this.txtPregTipo='Esta pregunta debe tener dos opciones, una correcta y otra incorrecta.';\r\n                        break;\r\n                    case 4:\r\n                        this.titPregTipo='Crear pregunta de tipo dicotómica (Si o No)';\r\n                        this.txtPregTipo='Esta pregunta debe tener dos opciones, una correcta y otra incorrecta.';\r\n                        break;\r\n                    case 5:\r\n                        this.titPregTipo='Crear pregunta de selección simple';\r\n                        this.txtPregTipo='Esta pregunta puede tener solo una opción correcta. Las opciones pueden contener: solo texto, solo imágenes o ambas.';\r\n                        break;\r\n                    default:\r\n                        this.titPregTipo='Crear pregunta abierta';\r\n                        this.txtPregTipo='Esta pregunta no tiene una respuesta. Es una pregunta de opinión que se deberá calificar manualmente.';\r\n                        break;\r\n                }\r\n            },\r\n            addTypeQuestion(){\r\n                switch (this.pregTipo) {\r\n                    case 1:\r\n                        this.titPregTipo='Crear pregunta de opción múltiple.';\r\n                        this.txtPregTipo='Esta pregunta puede tener una o varias opciones correctas. Las opciones pueden contener: solo texto, solo imágenes o ambas.';\r\n                        break;\r\n                    case 2:\r\n                        this.titPregTipo='Crear pregunta cerrada';\r\n                        this.txtPregTipo='Esta pregunta debe ser respondida de forma escrita. La respuesta correcta debe contener palabras clave para poder comparar con la respuesta del estudiante.';\r\n                        break;\r\n                    case 3:\r\n                        this.titPregTipo='Crear pregunta de Verdadero o Falso';\r\n                        this.txtPregTipo='Esta pregunta debe tener dos opciones, una correcta y otra incorrecta.';\r\n                        break;\r\n                    case 4:\r\n                        this.titPregTipo='Crear pregunta de tipo dicotómica (Si o No)';\r\n                        this.txtPregTipo='Esta pregunta debe tener dos opciones, una correcta y otra incorrecta.';\r\n                        break;\r\n                    case 5:\r\n                        this.titPregTipo='Crear pregunta de selección simple';\r\n                        this.txtPregTipo='Esta pregunta puede tener solo una opción correcta. Las opciones pueden contener: solo texto, solo imágenes o ambas.';\r\n                        break;\r\n                    default:\r\n                        this.titPregTipo='Crear pregunta abierta';\r\n                        this.txtPregTipo='Esta pregunta no tiene una respuesta. Es una pregunta de opinión que se deberá calificar manualmente.';\r\n                        break;\r\n                }\r\n            },\r\n            agregar(){\r\n                let me = this;\r\n                if( me.pregunta.descripcion.trim() === '' || me.pregunta.tema === '' || me.pregunta.tema === undefined || me.pregunta.tema === null || this.pregunta.puntaje_pregunta === '' || me.pregunta.puntaje_pregunta === undefined){\r\n                    me.$vs.notify({\r\n                        text:'Debe completar todos los campos antes de guardar',\r\n                        color:'warning',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check'})\r\n                    return;\r\n                }\r\n\r\n                if( me.pregunta.tema.id ==='' ){\r\n                    me.$vs.notify({\r\n                        text:'Seleccione un '+me.tema_ambito+' antes de guardar',\r\n                        color:'warning',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check'})\r\n                    return;\r\n                }\r\n\r\n                me.$vs.loading()\r\n                let fileImgPreg\r\n                fileImgPreg = document.getElementById(\"file1\").files[0];\r\n                me.pregunta.file1 = fileImgPreg;\r\n\r\n                const formData = new FormData();\r\n                formData.append('descripcion', me.pregunta.descripcion);\r\n                formData.append('tema', me.pregunta.tema.id);\r\n                formData.append('img_pregunta', fileImgPreg);\r\n                formData.append('id_tipo_pregunta', me.pregTipo);\r\n                formData.append('puntaje_pregunta', me.pregunta.puntaje_pregunta);\r\n                formData.append('idusuario', me.usuario.idusuario);\r\n                formData.append('estado', me.pregunta.estado);\r\n                axios.post(this.$data_url+'api/pregunta', formData)\r\n                .then(res => {\r\n                    me.guardadoActivo = true;\r\n                    me.id_preguntaActiva = res.data.id;\r\n                    me.filtrarTipos()\r\n                    me.$vs.notify({\r\n                    text:'Pregunta creada exitosamente',\r\n                    color:'success',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check'})\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ': error al crear pregunta');\r\n                })\r\n\r\n\r\n            },\r\n            cargarOpcion(){\r\n                let me = this;\r\n                if( me.id_preguntaActiva === '' ){\r\n                    me.$vs.notify({\r\n                        text:'Debe crear una pregunta antes de cargar las opciones.',\r\n                        color:'warning',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check'})\r\n                }else{\r\n                    me.$vs.loading()\r\n\r\n                    const formData = new FormData();\r\n\r\n                    let fileImgPreg = document.getElementById(\"file2\").files[0];\r\n                    let tipo = 0;\r\n                    if( me.opcion.tipo === true ){\r\n                        tipo = 1;\r\n                    }\r\n                    formData.append('opcion', me.opcion.opcion);\r\n                    formData.append('id_pregunta', me.id_preguntaActiva);\r\n                    formData.append('img_opcion', fileImgPreg);\r\n                    formData.append('tipo', tipo);\r\n                    formData.append('cant_coincidencias', 0);\r\n\r\n                    axios.post(this.$data_url+'api/cargarOpcion', formData)\r\n                    .then(res => {\r\n                        me.opciones = res.data;\r\n                        me.opcion.opcion = '';\r\n                        me.opcion.tipo = '';\r\n                        me.src_imagen_opcion = '';\r\n                        document.getElementById(\"file2\").value = '';\r\n                        me.msgExito('cargada');\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(error);\r\n                    })\r\n                }\r\n            },\r\n            cargarOpcionAbierta(){\r\n                let me = this;\r\n                if( me.pregunta.cant_coincidencias === '' || me.pregunta.cant_coincidencias === undefined || me.pregunta.cant_coincidencias < 0){\r\n                    me.$vs.notify({\r\n                    text:'Ingrese la cantidad de coincidencias de palabras clave.',\r\n                    color:'warning',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check'})\r\n                    return\r\n                }\r\n\r\n                if( me.id_preguntaActiva === '' ){\r\n                    me.$vs.notify({\r\n                        text:'Debe crear una pregunta antes de cargar las opciones.',\r\n                        color:'warning',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check'})\r\n                }else{\r\n                    me.$vs.loading()\r\n                    let tipo = 1;\r\n                    let palabrasV = me.palabras_clave.replace(/ /gi, '')\r\n                    const formData = new FormData();\r\n                    formData.append('opcion', palabrasV);\r\n                    formData.append('id_pregunta', me.id_preguntaActiva);\r\n                    formData.append('img_opcion', null);\r\n                    formData.append('tipo', tipo);\r\n                    formData.append('cant_coincidencias', parseInt(me.pregunta.cant_coincidencias));\r\n                    this.$http.post(this.$server_url+'cargarOpcion', formData)\r\n                    .then(res => {\r\n                        me.opciones = res.data;\r\n                        me.opcion.opcion = '';\r\n                        me.opcion.tipo = '';\r\n                        me.src_imagen_opcion = '';\r\n                        me.msgExito('guardada');\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(error);\r\n                    })\r\n                }\r\n            },\r\n            cargarOpcionesDico(){\r\n                let me = this;\r\n                if( me.id_preguntaActiva === '' ){\r\n                    me.$vs.notify({\r\n                        text:'Debe crear una pregunta antes de cargar las opciones.',\r\n                        color:'warning',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check'})\r\n                }else{\r\n                    me.$vs.loading()\r\n                    const formData = new FormData();\r\n                    formData.append('opcion', me.opcion.opcion);\r\n                    formData.append('id_pregunta', me.id_preguntaActiva);\r\n                    formData.append('img_opcion', null);\r\n                    formData.append('tipo', 1);\r\n                    formData.append('cant_coincidencias', 0);\r\n                    this.$http.post(this.$server_url+'cargarOpcionDico', formData)\r\n                    .then(res => {\r\n                        me.opcion.opcion = '';\r\n                        me.opcion.tipo = '';\r\n                        me.src_imagen_opcion = '';\r\n                        me.msgExito('guardada');\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(error);\r\n                    })\r\n                }\r\n            },\r\n            confirmEditarOpcion(item){\r\n                let me = this;\r\n                me.editarOpcionActiva= false;\r\n\r\n                let fileImgOpcion;\r\n                fileImgOpcion = document.getElementById(\"file2\").files[0];\r\n\r\n                if(fileImgOpcion === undefined ){\r\n                    fileImgOpcion = item.img_opcion;\r\n                }\r\n\r\n                let tipo = 0;\r\n                if( me.opcion.tipo === true || me.opcion.tipo === 1 ){\r\n                    tipo = 1;\r\n                }\r\n\r\n                const formData = new FormData();\r\n                formData.append('opcion', me.opcion.opcion);\r\n                formData.append('tipo', tipo);\r\n                formData.append('img_opcion', fileImgOpcion);\r\n                formData.append('img_opcion_old', img_opcion_old);\r\n                formData.append('id_opcion_pregunta', item.id_opcion_pregunta);\r\n                formData.append('id_pregunta', item.id_pregunta);\r\n                formData.append('cant_coincidencias', 0);\r\n                axios.post(this.$data_url+'api/editarOpcion', formData).\r\n                then(res => {\r\n                    me.opciones = res.data;\r\n                    me.editarOpcionActiva = false;\r\n                    me.opcion.opcion = '';\r\n                    me.opcion.tipo = '';\r\n                    me.src_imagen_opcion = '';\r\n                    me.msgExito('cargada');\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n            },\r\n            editarOpcion(item){\r\n                let me = this;\r\n                location.href = '#editar'\r\n                me.opcion.opcion = '';\r\n                document.getElementById(\"file2\").value = '';\r\n\r\n                me.opcion.opcion = item.opcion;\r\n                me.opcion.tipo = item.tipo;\r\n                me.opcion.id_opcion_pregunta = item.id_opcion_pregunta;\r\n                me.opcion.id_pregunta = item.id_pregunta;\r\n\r\n                img_opcion_old = item.img_opcion;\r\n                me.src_imagen_opcion = this.$data_url+'archivos/img/img_preguntas/'+item.img_opcion;\r\n            },\r\n            editarOpcionesDico(){\r\n                let me = this;\r\n                me.$vs.loading()\r\n                const formData = new FormData();\r\n                    formData.append('opcion', me.opcion.opcion);\r\n                    formData.append('id_pregunta', me.id_preguntaActiva);\r\n                    formData.append('img_opcion', null);\r\n                    formData.append('tipo', 1);\r\n                    formData.append('id_opcion', 1);\r\n                    formData.append('cant_coincidencias', 0);\r\n\r\n                this.$http.post(this.$server_url+'cargarOpcionDico', formData)\r\n                .then(res => {\r\n                    me.msgExito('editada');\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n            },\r\n            confirmarEliminarPreg(){\r\n                this.$vs.dialog({\r\n                    type: 'confirm',\r\n                    color: 'danger',\r\n                    title: 'Confirmar',\r\n                    acceptText:'Si, deseo eliminar',\r\n                    cancelText:'Cancelar',\r\n                    text: '¿Está seguro de eliminar esta pregunta?',\r\n                    accept: this.eliminarPregunta\r\n                })\r\n            },\r\n            eliminarPregunta(){\r\n                let me = this;\r\n                axios.get(this.$data_url+'api/eliminarPregunta?id='+me.datosEliminar.id)\r\n                .then(res => {\r\n                // this.$http.get(this.$server_url+`eliminarPregunta/`+me.datosEliminar.id).then(() => {\r\n                    if(res.data.status == 0){\r\n                        me.$vs.notify({\r\n                        text:res.data.message,\r\n                        color:'warning',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check',\r\n                        time:4000\r\n                        })\r\n                        return;\r\n                    }\r\n                    me.filtrarTipos();\r\n\r\n                    /*this.$http.get(this.$server_url+'preguntasDocente/'+me.usuario.idusuario).then(res => {\r\n                        me.preguntas = res.data;\r\n                        me.$vs.loading.close()\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(error + ': error al eliminar pregunta');\r\n                    })*/\r\n                })\r\n                .catch(function (error) {\r\n                    alert(error+'NO SE PUEDE ELIMINAR ESTA PREGUNTA, YA QUE SE ESTÁ UTILIZANDO EN UNA EVALUACIÓN.');\r\n                })\r\n            },\r\n            quitarOpcion(item){\r\n                let me = this;\r\n                me.$vs.loading()\r\n                this.$http.get(this.$server_url+'quitarOpcion/'+item.id_opcion_pregunta)\r\n                .then(res => {\r\n                    me.removeItemFromArr(me.opciones, item)\r\n                    me.$vs.loading.close()\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n            },\r\n            editarFormulario(item){\r\n                let me = this;\r\n                me.limpiar();\r\n                me.pregTipo                     = item.id_tipo_pregunta;\r\n                me.addTypeQuestion();\r\n                me.id_preguntaActiva            = item.id;\r\n                me.temaSelected                 = {id: item.id_tema, label: item.nombre_tema};\r\n                me.pregunta.descripcion         = item.descripcion;\r\n                me.pregunta.tema                = {id: item.id_tema, label: item.nombre_tema};\r\n                me.pregunta.id                  = item.id;\r\n                me.pregunta.img_pregunta        = item.img_pregunta;\r\n                me.pregunta.puntaje_pregunta    = item.puntaje_pregunta;\r\n                me.pregunta.estado              = item.estado\r\n                img_preg_old                    = item.img_pregunta;\r\n                me.srcPreguntaAQuitar           = item.img_pregunta;\r\n                if(item.img_pregunta!=''){      me.src_imagen_pregunta = this.$data_url+'archivos/img/img_preguntas/'+item.img_pregunta;  }\r\n                me.editarActivo = true;\r\n                ///mostrar opciones\r\n                this.$http.get(this.$server_url+'verOpciones/'+ item.id)\r\n                .then(res => {\r\n                    if(res.data.length > 0){\r\n                        me.opciones = res.data;\r\n                        me.palabras_clave = res.data[0].opcion;\r\n                        me.id_opcion_tipo234 = res.data[0].id_opcion_pregunta;\r\n                        me.opcion.opcion = res.data[0].opcion;\r\n                        me.pregunta.cant_coincidencias = res.data[0].cant_coincidencias;\r\n                    }\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n            },\r\n            quitarImagen(){\r\n              let me = this;\r\n              me.src_imagen_pregunta = '';\r\n              document.getElementById(\"file1\").value = ''\r\n              img_preg_old = '';\r\n            },\r\n            editarPregunta(){\r\n                let me = this;\r\n                if(me.pregunta.estado == \"\" || me.pregunta.estado == null || me.pregunta.estado == undefined){\r\n                   me.$vs.notify({\r\n                    text:'Debe seleccionar un estado para la pregunta',\r\n                    color:'warning',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check'})\r\n                    return;\r\n                }\r\n                if( me.pregunta.descripcion.trim() === '' || me.pregunta.tema === '' || me.pregunta.tema === undefined || me.pregunta.tema === null || me.pregunta.puntaje_pregunta === '' || me.pregunta.puntaje_pregunta === undefined){\r\n                    me.$vs.notify({\r\n                        text:'Debe completar todos los campos antes de guardar',\r\n                        color:'warning',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check'})\r\n                    return;\r\n                }\r\n\r\n                me.$vs.loading()\r\n                let fileImgPreg;\r\n                const formData = new FormData();\r\n                fileImgPreg = document.getElementById(\"file1\").files[0];\r\n                if(fileImgPreg === undefined ){\r\n                    // fileImgPreg = me.pregunta.img_pregunta;\r\n                    formData.append('img_pregunta', \"\");\r\n                }else{\r\n                    formData.append('img_pregunta', fileImgPreg);\r\n                }\r\n                formData.append('descripcion', me.pregunta.descripcion);\r\n                formData.append('tema', me.pregunta.tema.id);\r\n                // formData.append('img_pregunta', fileImgPreg);\r\n                formData.append('img_pregunta_old', img_preg_old);\r\n                formData.append('id', me.pregunta.id);\r\n                formData.append('puntaje_pregunta', me.pregunta.puntaje_pregunta);\r\n                formData.append('idusuario', me.usuario.idusuario);\r\n                formData.append('estado', me.pregunta.estado);\r\n                formData.append('srcPreguntaAQuitar', me.srcPreguntaAQuitar);\r\n                axios.post(this.$data_url+'api/pregunta', formData).then(res => {\r\n                    document.getElementById(\"file1\").value = ''\r\n                    me.msgExito('editada');\r\n                    me.srcPreguntaAQuitar = '';\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n            },\r\n            mostrarImg(file, img){\r\n                let me = this;\r\n                me.src_imagen_opcion = ' ';\r\n                me.src_imagen_pregunta = ' ';\r\n                var archivo = document.getElementById(\"file\"+file).files[0];\r\n                var reader = new FileReader();\r\n                if (me) {\r\n                    reader.readAsDataURL(archivo );\r\n                    reader.onloadend = function () {\r\n                        //document.getElementById(\"img\"+img).style.display = \"block\";\r\n                        document.getElementById(\"img\"+img).src = reader.result;\r\n                    }\r\n                }\r\n            },\r\n            removeItemFromArr (arr, item) {\r\n                const i = arr.indexOf(item)\r\n                arr.splice(i, 1)\r\n            },\r\n            editarPalabrasclave(){\r\n                let me = this;\r\n                if( me.pregunta.cant_coincidencias === '' || me.pregunta.cant_coincidencias === undefined || me.pregunta.cant_coincidencias < 0){\r\n                    me.$vs.notify({\r\n                    text:'Ingrese la cantidad de coincidencias de palabras clave.',\r\n                    color:'warning',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check'})\r\n                    return\r\n                }\r\n                var cantCoin = parseInt(me.pregunta.cant_coincidencias)\r\n                if( me.id_opcion_tipo234 != '' ){\r\n                    me.$vs.loading()\r\n                    let palabrasV = me.palabras_clave.replace(/ /gi, '')\r\n                    const formData = new FormData();\r\n                    formData.append('opcion', palabrasV);\r\n                    formData.append('tipo', 1);\r\n                    formData.append('img_opcion', '');\r\n                    formData.append('img_opcion_old', '');\r\n                    formData.append('id_opcion_pregunta', me.id_opcion_tipo234);\r\n                    formData.append('id_pregunta', me.pregunta.id);\r\n                    formData.append('cant_coincidencias', cantCoin);\r\n\r\n                    this.$http.post(this.$server_url+'editarOpcion', formData).\r\n                    then(res => {\r\n                        me.opciones = res.data;\r\n                        me.editarOpcionActiva = false;\r\n                        me.opcion.opcion = '';\r\n                        me.opcion.tipo = '';\r\n                        me.src_imagen_opcion = '';\r\n                        me.msgExito('editada');\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(error);\r\n                    })\r\n                }else{\r\n                    me.cargarOpcionAbierta()\r\n                }\r\n            },\r\n            msgExito(tipo_msg){\r\n                let me = this;\r\n                me.preguntas = []\r\n                var tipobanco;\r\n                if( me.bancoSelected===null || me.bancoSelected==='' ){\r\n                    tipobanco ='todos'\r\n                }else{\r\n                    if( me.bancoSelected.id==='3'){\r\n                        tipobanco = 'todos'\r\n                    }\r\n                    if(me.bancoSelected.id==='1'){\r\n                        tipobanco = 'prolipa'\r\n                    }\r\n\r\n                    if(me.bancoSelected.id==='2'){\r\n                        tipobanco = 'docente'\r\n                    }\r\n                }\r\n                me.tipoSelected = '';\r\n                const formData = new FormData();\r\n                formData.append('id', me.pregunta.tema.id);\r\n                formData.append('tipobanco', tipobanco);\r\n                formData.append('usuario', me.usuario.idusuario);\r\n                formData.append('id_group',me.usuario.id_group)\r\n                formData.append('institucion_id',   me.usuario.institucion_idInstitucion)\r\n                var url = \"\"\r\n                if(me.usuario.id_group == 6){\r\n                    url = 'preguntas_x_tema_Docente'\r\n                }else{\r\n                    url = 'preguntasxtema'\r\n                }\r\n                this.$http.post(this.$server_url+url, formData).then(res => {\r\n                    let datos = res.data\r\n                    if(datos.items){\r\n                      if(datos.items.length >  0){\r\n                        if(me.usuario.id_group == 6){\r\n                          me.preguntas =  { items: datos.items.filter(item => item.estado == 1) };\r\n                        }\r\n                        else{ me.preguntas = res.data; }\r\n                      }\r\n                    }\r\n                    me.editarActivo = false;\r\n                    if(tipo_msg != 'cargada'){\r\n                        me.popupTipoPreg = false;\r\n                    }\r\n                    me.$vs.loading.close()\r\n                    me.$vs.notify({\r\n                    text:'Pregunta '+ tipo_msg +' exitosamente',\r\n                    color:'success',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check'})\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n\r\n            },\r\n            verpreguntasxtema(){\r\n                let me = this;\r\n                me.preguntas        = []\r\n                me.arrayQuestions   = []\r\n                if(me.pregunta.tema.id===undefined || me.pregunta.tema.id===null || me.pregunta.tema.id==='' || me.pregunta.tema===''){\r\n                    return;\r\n                }\r\n\r\n                var tipobanco;\r\n                if( me.bancoSelected===null || me.bancoSelected==='' ){\r\n                    tipobanco ='todos'\r\n                }else{\r\n                    if( me.bancoSelected.id==='3'){\r\n                        tipobanco = 'todos'\r\n                    }\r\n                    if(me.bancoSelected.id==='1'){\r\n                        tipobanco = 'prolipa'\r\n                    }\r\n\r\n                    if(me.bancoSelected.id==='2'){\r\n                        tipobanco = 'docente'\r\n                    }\r\n                }\r\n                me.$vs.loading()\r\n                me.tipoSelected = '';\r\n                const formData = new FormData();\r\n                formData.append('id',             me.pregunta.tema.id);\r\n                formData.append('tipobanco',      tipobanco);\r\n                formData.append('usuario',        me.usuario.idusuario);\r\n                formData.append('id_group',       me.usuario.id_group)\r\n                formData.append('institucion_id', me.usuario.institucion_idInstitucion)\r\n                var url = \"\"\r\n                if(me.usuario.id_group == 6){\r\n                    url = 'preguntas_x_tema_Docente'\r\n                }else{\r\n                    url = 'preguntasxtema'\r\n                }\r\n                this.$http.post(this.$server_url+url, formData)\r\n                // this.$http.post(this.$server_url+'preguntasxtema', formData)\r\n                .then(res => {\r\n                  me.$vs.loading.close()\r\n                  let datos = res.data\r\n                  me.arrayQuestions = datos\r\n                  if(datos.items){\r\n                    if(datos.items.length >  0){\r\n                      if(me.usuario.id_group == 6){\r\n                        me.preguntas =  { items: datos.items.filter(item => item.estado == 1) };\r\n                      }\r\n                      else{ me.preguntas = res.data; }\r\n                    }\r\n                  }\r\n                })\r\n                .catch(function (error) {\r\n                  me.$vs.loading.close()\r\n                  console.log(error);\r\n                  me.$vs.notify({\r\n                    text:'Hubo problemas con preguntas para este tema',\r\n                    color:'warning',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check'})\r\n                })\r\n            },\r\n            irTemas(){\r\n                let me = this;\r\n                me.popupTipoPreg = false;\r\n                window.location.href = me.urlOrigen;\r\n            },\r\n            filtrarPreguntas(){\r\n                let me = this;\r\n                me.preguntas = []\r\n                me.preguntas.id = ''\r\n                if( me.asignaturaSelected.id === undefined ){\r\n                    me.$vs.notify({\r\n                        text:'Seleccione una asignatura antes de filtrar por Unidades',\r\n                        color:'warning',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check'})\r\n                    return;\r\n                }\r\n\r\n                if( me.asignaturaSelected.id===113 || me.asignaturaSelected.id===114 || me.asignaturaSelected.id===115 ){\r\n                    me.tema_ambito = 'Ámbito'\r\n                }else{\r\n                    me.tema_ambito = 'Tema'\r\n                }\r\n\r\n                if( me.unidadSelected.id === undefined ){\r\n                    return;\r\n                }\r\n                me.temas = []\r\n                me.pregunta.tema.id = ''\r\n                me.$vs.loading()\r\n                const formData = new FormData();\r\n                    formData.append('asignatura', me.asignaturaSelected.id);\r\n                    formData.append('unidad', me.unidadSelected.id);\r\n\r\n                this.$http.post(this.$server_url+'temasignunidad', formData).then(res => {\r\n                  let datos = res.data\r\n                  if(me.usuario.id_group == 6) {\r\n                    me.temas = datos.filter(p => p.tipo_tema == 0);\r\n                    me.temas = me.temas.filter(p => !p.nombre_tema.startsWith(\"0.\"));\r\n                  }\r\n                  else                         { me.temas = datos}\r\n                  me.$vs.loading.close()\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n\r\n            },\r\n            filtrarTipos(){\r\n                let me = this;\r\n                if( me.pregunta.tema.id === ''){\r\n                    return;\r\n                }\r\n                if( me.tipoSelected===null || me.tipoSelected===undefined || me.tipoSelected==='' || me.tipoSelected==='null'  ){\r\n                    me.verpreguntasxtema()\r\n                }else{\r\n                    me.preguntas = []\r\n                    me.preguntas =  { items: me.arrayQuestions.items.filter(item => item.id_tipo_pregunta == me.tipoSelected.id) };\r\n                    // var tipobanco;\r\n                    // if( me.bancoSelected===null || me.bancoSelected==='' ){\r\n                    //     tipobanco ='todos'\r\n                    // }else{\r\n                    //     if( me.bancoSelected.id==='3'){\r\n                    //         tipobanco = 'todos'\r\n                    //     }\r\n                    //     if(me.bancoSelected.id==='1'){\r\n                    //         tipobanco = 'prolipa'\r\n                    //     }\r\n                    //     if(me.bancoSelected.id==='2'){\r\n                    //         tipobanco = 'docente'\r\n                    //     }\r\n                    // }\r\n                    // me.$vs.loading()\r\n                    // const formData = new FormData();\r\n                    // formData.append('tema',             me.pregunta.tema.id);\r\n                    // formData.append('tipo',             me.tipoSelected.id);\r\n                    // formData.append('usuario',          me.usuario.idusuario);\r\n                    // formData.append('tipobanco',        tipobanco);\r\n                    // formData.append('id_group',         me.usuario.id_group)\r\n                    // formData.append('institucion_id',   me.usuario.institucion_idInstitucion)\r\n                    // this.$http.post(this.$server_url+'preguntastipo', formData).then(res => {\r\n                    //     me.preguntas = res.data;\r\n                    //     me.$vs.loading.close()\r\n                    // })\r\n                    // .catch(function (error) {\r\n                    //     console.log(error);\r\n                    // })\r\n                }\r\n            },\r\n            cargarPreguntaEval(item) {\r\n                let me = this;\r\n                me.$vs.loading()\r\n                let formData = new FormData();\r\n                    formData.append('id_evaluacion', localStorage.id_desde_eval);\r\n                    formData.append('id_pregunta', item.id);\r\n                    formData.append('grupo', localStorage.grupo_desde_eval);\r\n                me.$http.post(this.$server_url+'pregEvaluacion', formData)\r\n                .then(res => {\r\n                    let msg = 'Pregunta cargada correctamente'\r\n                    if( res.data == 0 ){\r\n                        msg = 'No puede cargar más de una vez la misma pregunta'\r\n                    }\r\n                    me.$vs.loading.close()\r\n                    me.$vs.notify({\r\n                    text: msg,\r\n                    color:'success',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check'})\r\n                })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close()\r\n                    console.log(error);\r\n                })\r\n            },\r\n        },\r\n    }\r\n",{"version":3,"sources":["PreguntasComponent.vue"],"names":[],"mappings":";AAsafile":"PreguntasComponent.vue","sourceRoot":"src/views/evaluaciones","sourcesContent":["<template>\r\n<div >\r\n<!------ELEGIR TIPO PREGUNTA--------->\r\n  <vs-popup fullscreen classContent=\"popup-example\" title=\"Crear Preguntas\" :active.sync=\"popupTipoPreg\">\r\n    <div class=\"vx-row\">\r\n      <div class=\"vx-col sm:w-1/4 w-full mb-4\">\r\n          <vx-card v-if=\"usuario.id_group === 1 || usuario.id_group === 5\">\r\n              <div class=\"btn-group\" align=\"center\">\r\n                  <vs-button type=\"flat\" v-if=\"usuario.id_group === 1 || usuario.id_group === 5 || asignaturaSelected.id>619\" color=\"primary\" @click=\"irTemas\">Crear {{tema_ambito}}</vs-button>\r\n              </div>\r\n              <vs-divider v-if=\"editarActivo===false\"/>\r\n              <div class=\"btn-group\" align=\"center\" v-if=\"editarActivo===false\">\r\n                  <vs-button type=\"flat\" class=\"w-full\" @click=\"pregTipo = 5; limpiar(); pregunta.puntaje_pregunta = 1; \">Selección simple</vs-button>\r\n                  <vs-button type=\"flat\" class=\"w-full\" @click=\"pregTipo = 1; limpiar(); pregunta.puntaje_pregunta = 1; \">Opción múltiple</vs-button>\r\n                  <vs-button type=\"flat\" class=\"w-full\" @click=\"pregTipo = 3; limpiar(); pregunta.puntaje_pregunta = 0.5; \">Verdadero/Falso</vs-button>\r\n                  <!--<vs-button type=\"flat\" class=\"w-full\" @click=\"pregTipo = 4; limpiar()\" style=\"min-width: 150px;\">Si/No</vs-button>-->\r\n                  <vs-button type=\"flat\" class=\"w-full\" @click=\"pregTipo = 2; limpiar(); pregunta.puntaje_pregunta = 2; \">Pregunta cerrada</vs-button>\r\n                  <vs-button type=\"flat\" class=\"w-full\" @click=\"pregTipo = 6; limpiar(); pregunta.puntaje_pregunta = 2; \">Pregunta abierta</vs-button>\r\n              </div>\r\n          </vx-card>\r\n          <vx-card v-if=\"usuario.id_group === 6\">\r\n              <div class=\"btn-group\" align=\"center\" v-if=\"editarActivo===false\">\r\n                  <vs-button type=\"flat\" class=\"w-full\" @click=\"pregTipo = 5; limpiar(); pregunta.puntaje_pregunta = 1; \">Selección simple</vs-button>\r\n                  <vs-button type=\"flat\" class=\"w-full\" @click=\"pregTipo = 1; limpiar(); pregunta.puntaje_pregunta = 1; \">Opción múltiple</vs-button>\r\n                  <vs-button type=\"flat\" class=\"w-full\" @click=\"pregTipo = 3; limpiar(); pregunta.puntaje_pregunta = 0.5; \">Verdadero/Falso</vs-button>\r\n                  <!--<vs-button type=\"flat\" class=\"w-full\" @click=\"pregTipo = 4; limpiar()\" style=\"min-width: 150px;\">Si/No</vs-button>-->\r\n                  <vs-button type=\"flat\" class=\"w-full\" @click=\"pregTipo = 2; limpiar(); pregunta.puntaje_pregunta = 2; \">Pregunta cerrada</vs-button>\r\n                  <vs-button type=\"flat\" class=\"w-full\" @click=\"pregTipo = 6; limpiar(); pregunta.puntaje_pregunta = 2; \">Pregunta abierta</vs-button>\r\n              </div>\r\n          </vx-card>\r\n      </div>\r\n      <!-------FIN BOTONES TIPOS PREGUNTA------------>\r\n      <!-------INICIO MODAL CREAR PREGUNTAS--------->\r\n      <div class=\"vx-col sm:w-3/4 w-full\">\r\n      <vx-card v-bind:title=\"titPregTipo\" title-color=\"primary\" v-bind:subtitle=\"txtPregTipo\">\r\n          <vs-tabs alignment=\"fixed\">\r\n          <vs-tab label=\"Pregunta\">\r\n            <div class=\"vx-row mb-5 mt-4\">\r\n                <!------------SELEC TEMA PREGUNTA-------------------->\r\n                <div class=\"vx-col sm:w-1/2 w-full\">\r\n                    Asignatura\r\n                    <v-select class=\"mb-2\" v-model=\"asignaturaSelected\" :options=\"asignaturas\" @input=\"filtrarPreguntas()\" :dir=\"$vs.rtl ? 'rtl' : 'ltr'\" />\r\n                </div>\r\n                <div class=\"vx-col sm:w-1/2 w-full\">\r\n                  Unidad\r\n                    <v-select class=\"mb-2\" v-model=\"unidadSelected\" :options=\"unidades\" @input=\"filtrarPreguntas()\" :dir=\"$vs.rtl ? 'rtl' : 'ltr'\" />\r\n                </div>\r\n                <div class=\"vx-col w-full\">\r\n                    {{tema_ambito}}\r\n                    <vx-input-group class=\"mb-2\">\r\n                        <v-select v-model=\"pregunta.tema\" @input=\"verpreguntasxtema()\" :options=\"temas\" :dir=\"$vs.rtl ? 'rtl' : 'ltr'\" />\r\n                        <template slot=\"append\">\r\n                            <div class=\"append-text btn-addon\">\r\n                            <vs-button color=\"primary\" v-if=\"usuario.id_group === 1 || usuario.id_group === 5 || asignaturaSelected.id>619\" @click=\"$router.push('/temas')\">Crear {{tema_ambito}}</vs-button>\r\n                            </div>\r\n                        </template>\r\n                    </vx-input-group>\r\n                </div>\r\n                <!------------FIN SELEC TEMA PREGUNTA-------------------->\r\n\r\n            </div>\r\n            <div class=\"vx-row mb-5\">\r\n                <div class=\"vx-col w-full\">\r\n                    <div style=\"border: 1px solid #d5d5d5; border-radius: 10px; padding: 5px 5px 5px 5px;\" align=\"center\" class=\"mb-2\">\r\n                        <input type=\"file\" name=\"file1\" id=\"file1\" class=\"inputfile\" style=\"display: none;\" v-on:change=\"mostrarImg(1,1)\">\r\n                        <label for=\"file1\" style=\"margin-bottom: -10px; cursor: pointer; color: gray; width: 100%; font-size: 11px; line-height: 80%;\" class=\"font-bold\">\r\n                            Click aquí para subir imagen de la pregunta\r\n                        </label>\r\n                        <div v-if=\"src_imagen_pregunta==='' || src_imagen_pregunta===null || src_imagen_pregunta==='null'\"></div>\r\n                        <div v-else>\r\n                          <img id=\"img1\" class=\"img-responsive mb-2\" v-bind:src=\"src_imagen_pregunta\" style=\"border-radius: 5px;\">\r\n                          <!--button para quitar-->\r\n                          <vs-button @click=\"quitarImagen()\" class=\"mt-5\" color=\"danger\" icon-pack=\"feather\" icon=\"icon-x\">Quitar</vs-button>\r\n                        </div>\r\n                    </div>\r\n                    <!--<div align=\"center\">\r\n                        <vs-button color=\"danger\" type=\"line\" icon-pack=\"feather\" icon=\"icon-trash\" size=\"small\" @click=\"src_imagen_pregunta = ''\"></vs-button>\r\n                    </div>-->\r\n                </div>\r\n                <div class=\"vx-col w-full\">\r\n                    <vs-textarea class=\"mb-4\" label=\"Nombre Pregunta\" v-model=\"pregunta.descripcion\"  height=\"80px\"/>\r\n                </div>\r\n                <div class=\"vx-col sm:w-full w-full\">\r\n                    <ul class=\"leftx\">\r\n                        <li>\r\n                        <vs-radio v-model=\"pregunta.estado\" vs-name=\"radios1estado\" vs-value=\"1\">Activo</vs-radio>\r\n                        </li>\r\n                        <li>\r\n                        <vs-radio v-model=\"pregunta.estado\" vs-name=\"radios1estado\" vs-value=\"0\">Desactivado</vs-radio>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div class=\"vx-col sm:w-1/2 w-full\">\r\n                    <vs-input disabled v-if=\"usuario.institucion_idInstitucion != 66\" type=\"number\" class=\"mb-4 w-full\" label=\"Puntaje\" placeholder=\"Puntaje\" v-model=\"pregunta.puntaje_pregunta\"/>\r\n                    <vs-input v-else disabled type=\"number\" class=\"mb-4 w-full\" label=\"Puntaje\" placeholder=\"Puntaje\" v-model=\"pregunta.puntaje_pregunta\"/>\r\n                </div>\r\n                <div class=\"vx-col sm:w-1/2 w-full mb-2\" align=\"right\">\r\n                    <div v-if=\"editarActivo===true\">\r\n                        <vs-button class=\"w-full mt-6\" @click=\"editarPregunta\" type=\"filled\">Editar pregunta</vs-button>\r\n                    </div>\r\n\r\n                    <div v-else>\r\n                        <vs-button class=\"w-full mt-6\" v-if=\"guardadoActivo===false\" color=\"success\" type=\"filled\" @click=\"agregar()\">Guardar pregunta</vs-button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n          </vs-tab>\r\n          <!-------INICIO TAB OPCIONES PREG TIPO 1, 5----->\r\n          <vs-tab label=\"Opciones\" v-if=\"pregTipo===1 || pregTipo===5\">\r\n              <div class=\"vx-col w-full mb-2\" style=\"padding: 10px;\">\r\n              <vs-divider position=\"left\" color=\"success\">Crear opciones</vs-divider>\r\n\r\n              <div class=\"vx-row mb-2\" id=\"editar\">\r\n                  <div class=\"vx-col w-full mb-1\">\r\n                      <div style=\"border: 1px solid #d5d5d5; border-radius: 5px; padding: 5px 5px 5px 5px;\" align=\"center\">\r\n                          <input type=\"file\" name=\"file2\" id=\"file2\" class=\"inputfile\" style=\"display: none;\" v-on:change=\"mostrarImg(2,2)\">\r\n                          <label for=\"file2\" style=\"margin-bottom: -10px; cursor: pointer; color: gray; width: 100%; font-size: 11px;\">\r\n                              Click aquí para subir imagen\r\n                          </label>\r\n                          <div v-if=\"src_imagen_opcion==='' || src_imagen_opcion===null || src_imagen_opcion==='null'\"></div>\r\n                          <img id=\"img2\" style=\"border-radius: 5px;\" class=\"img-responsive mb-2\" v-bind:src=\"src_imagen_opcion\" v-else>\r\n                      </div>\r\n                      <!--<div align=\"center\">\r\n                          <vs-button color=\"danger\" type=\"line\" icon-pack=\"feather\" icon=\"icon-trash\" size=\"small\" @click=\"src_imagen_opcion = ''\"></vs-button>\r\n                      </div>-->\r\n\r\n                      <vs-textarea class=\"mt-2\" label=\"Nombre Opción\" v-model=\"opcion.opcion\" height=\"60px\"/>\r\n                  </div>\r\n\r\n                  <div class=\"vx-row w-full\" v-if=\"pregTipo===1 || pregTipo===5\">\r\n\r\n                      <div class=\"vx-col sm:w-1/2 w-full\" align=\"center\">\r\n                          <vs-switch style=\"width: 100px;\" color=\"success\" class=\"mt-3 mb-5\" v-model=\"opcion.tipo\">\r\n                              <span slot=\"on\">Correcta</span>\r\n                              <span slot=\"off\">Incorrecta</span>\r\n                          </vs-switch>\r\n                      </div>\r\n                      <div class=\"vx-col sm:w-1/2 w-full mb-1\" align=\"center\">\r\n                          <vs-button v-if=\"editarOpcionActiva===false\" color=\"success\" type=\"flat\" icon-pack=\"feather\" icon=\"icon-plus\" @click=\"cargarOpcion()\">Agregar</vs-button>\r\n\r\n                          <vs-button v-else color=\"primary\" class=\"w-full\" type=\"flat\" icon-pack=\"feather\" icon=\"icon-edit-1\" @click=\"confirmEditarOpcion(opcion)\">Editar</vs-button>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n              </div>\r\n\r\n              <div class=\"vx-col w-full\">\r\n              <vs-divider position=\"center\" color=\"primary\">Opciones agregadas</vs-divider>\r\n\r\n              <div class=\"vx-row mb-3\" :key=\"indexitem\" v-for=\"(item, indexitem) in opciones\">\r\n\r\n                  <div class=\"vx-col sm:w-1/5 w-full\" align=\"center\">\r\n                      <img v-if=\"item.img_opcion\" style=\"border-radius: 5px;\" v-bind:src=\"$data_url+'archivos/img/img_preguntas/'+item.img_opcion\" width=\"100%\">\r\n                  </div>\r\n                  <div class=\"vx-col sm:w-4/5 w-full\">\r\n                      <vs-input class=\"w-full\" v-model=\"item.opcion\"/>\r\n\r\n                      <div class=\"vx-row\" align=\"center\">\r\n                      <div class=\"vx-col sm:w-1/3 w-full\">\r\n                          <vs-switch style=\"width: 100px;\" disabled=\"true\" color=\"success\" class=\"mt-3 mb-5\" v-model=\"item.tipo\">\r\n                              <span slot=\"on\">Correcta</span>\r\n                              <span slot=\"off\">Incorrecta</span>\r\n                          </vs-switch>\r\n                      </div>\r\n                      <div class=\"vx-col sm:w-1/3 w-full\">\r\n                          <vs-button color=\"primary\" type=\"line\" icon-pack=\"feather\" icon=\"icon-edit-1\" size=\"small\" @click=\"src_imagen_opcion=''; editarOpcionActiva=true; editarOpcion(item)\">Editar</vs-button>\r\n                      </div>\r\n                      <div class=\"vx-col sm:w-1/3 w-full\">\r\n                          <vs-button color=\"danger\" type=\"line\" icon-pack=\"feather\" icon=\"icon-trash\" size=\"small\" @click=\"quitarOpcion(item)\">Eliminar</vs-button>\r\n                      </div>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n              </div>\r\n          </vs-tab>\r\n          <!-------FIN TAB OPCIONES PREG TIPO 1, 5----->\r\n          <!-------INICIO TAB OPCIONES PREG TIPO 3, 4----->\r\n          <vs-tab label=\"Respuesta\" v-if=\"pregTipo===3 || pregTipo===4\">\r\n              <div v-if=\"pregTipo===3\" class=\"mt-6\">\r\n\r\n              <div v-if=\"opciones.length > 0\">\r\n                  <vx-card class=\"mb-3\" :key=\"indexitem\" v-for=\"(item, indexitem) in opciones\">\r\n                      <vs-radio v-model=\"opcion.opcion\" v-bind:vs-value=\"item.opcion\">{{item.opcion}}</vs-radio>\r\n                  </vx-card>\r\n              </div>\r\n              <div v-else>\r\n                  <vx-card class=\"mb-4 mt-6\">\r\n                      <vs-radio v-model=\"opcion.opcion\" vs-value=\"Verdadero\">Verdadero</vs-radio>\r\n                  </vx-card>\r\n\r\n                  <vx-card class=\"mb-4\">\r\n                      <vs-radio v-model=\"opcion.opcion\" vs-value=\"Falso\">Falso</vs-radio>\r\n                  </vx-card>\r\n              </div>\r\n              </div>\r\n\r\n              <div v-if=\"pregTipo===4\" class=\"mt-6\">\r\n              <div v-if=\"opciones.length > 0\">\r\n                  <vx-card class=\"mb-3\" :key=\"indexitem\" v-for=\"(item, indexitem) in opciones\">\r\n                      <vs-radio v-model=\"opcion.opcion\" v-bind:vs-value=\"item.opcion\">{{item.opcion}}</vs-radio>\r\n                  </vx-card>\r\n              </div>\r\n              <div v-else>\r\n                  <vx-card class=\"mb-4 mt-6\">\r\n                      <vs-radio v-model=\"opcion.opcion\" vs-value=\"Si\">Si</vs-radio>\r\n                  </vx-card>\r\n\r\n                  <vx-card class=\"mb-4\">\r\n                      <vs-radio v-model=\"opcion.opcion\" vs-value=\"No\">No</vs-radio>\r\n                  </vx-card>\r\n              </div>\r\n              </div>\r\n\r\n              <div class=\"vx-col w-full mt-6\" align=\"right\">\r\n                  <vs-button v-if=\"editarActivo===true\" color=\"primary\" type=\"filled\" icon-pack=\"feather\" icon=\"icon-edit-1\" @click=\"editarOpcionesDico()\">Editar</vs-button>\r\n\r\n                  <vs-button v-else color=\"success\" type=\"filled\" @click=\"cargarOpcionesDico()\">Guardar</vs-button>\r\n              </div>\r\n          </vs-tab>\r\n          <!-------FIN TAB OPCIONES PREG TIPO 3, 4----->\r\n          <!-------INICIO TAB OPCIONES PREG CERRADA-------->\r\n          <vs-tab label=\"Palabras Clave\" v-if=\"pregTipo===2\">\r\n              <div class=\"vx-row mt-6\">\r\n                  <div class=\"vx-col w-full\">\r\n                      <vs-alert :active.sync=\"active1\" closable icon-pack=\"feather\" close-icon=\"icon-x\" class=\"mb-3\">\r\n                          Ejemplo: Forma correcta: <span style=\"color: green;\">24, mayo, 1822</span> - Forma Incorrecta: <span style=\"color: red;\">24 de mayo, 1822 </span>\r\n                      </vs-alert>\r\n\r\n                      <div style=\"color: #1A76FA;\" class=\"mb-4 w-full\">Evite usar caracteres especiales como: punto, signos de expresión etc...</div>\r\n\r\n                      <vs-textarea class=\"mb-3\" label=\"Palabras clave de la respuesta\" placeholder=\"Escriba las palabras clave de la respuesta separadas por una coma (,).\" v-model=\"palabras_clave\"  height=\"70px\"/>\r\n                  </div>\r\n              </div>\r\n\r\n              <div class=\"vx-row w-full\">\r\n                  <div class=\"vx-col sm:w-1/2 w-full\">\r\n                      <vs-input type=\"number\" class=\"mb-2 w-full\" label=\"Cantidad de coincidencias\" v-model=\"pregunta.cant_coincidencias\"/>\r\n                  </div>\r\n                  <div class=\"vx-col sm:w-1/2 w-full mt-5\">\r\n                      <vs-button class=\"w-full\" v-if=\"editarActivo===true\" @click=\"editarPalabrasclave\" type=\"filled\">Editar</vs-button>\r\n\r\n                      <vs-button class=\"w-full\" v-else @click=\"cargarOpcionAbierta\" color=\"success\" type=\"filled\">Guardar</vs-button>\r\n                  </div>\r\n              </div>\r\n\r\n          </vs-tab>\r\n          <!------FIN TAB OPCION TIPO PREG ABIERTA----->\r\n          <!-------INICIO TAB PREG ABIERTA-------->\r\n          <vs-tab label=\"Información\" v-if=\"pregTipo===6\">\r\n              <div class=\"mt-6\" align=\"center\">\r\n                  <h4 class=\"mt-6\">Esta pregunta no puede tener respuestas. Debe ser calificada manualmente por el docente.</h4>\r\n              </div>\r\n          </vs-tab>\r\n          <!------FIN TAB OPCION TIPO PREG ABIERTA----->\r\n      </vs-tabs>\r\n      </vx-card>\r\n          <!-------FIN MODAL CREAR PREGUNTAS--------->\r\n\r\n      </div>\r\n    </div>\r\n</vs-popup>\r\n<!------FIN ELEGIR TIPO PREGUNTA--------->\r\n<!--LISTADO DE Pregunta-->\r\n  <vx-card>\r\n    <div v-if=\"preguntas.items === undefined\">\r\n      <div class=\"vx-row w-full mb-4\">\r\n          <div class=\"vx-col sm:w-1/2 w-full\">\r\n              Asignatura\r\n              <v-select class=\"mb-2\" v-model=\"asignaturaSelected\" :options=\"asignaturas\" @input=\"filtrarPreguntas()\" :dir=\"$vs.rtl ? 'rtl' : 'ltr'\" />\r\n          </div>\r\n          <div class=\"vx-col sm:w-1/2 w-full\">\r\n            Unidad\r\n              <v-select class=\"mb-2\" v-model=\"unidadSelected\" :options=\"unidades\" @input=\"filtrarPreguntas()\" :dir=\"$vs.rtl ? 'rtl' : 'ltr'\" />\r\n          </div>\r\n          <div class=\"vx-col w-full\">\r\n              {{tema_ambito}}\r\n              <vx-input-group class=\"mb-2\">\r\n                  <v-select v-model=\"pregunta.tema\" @input=\"verpreguntasxtema()\" :options=\"temas\" :dir=\"$vs.rtl ? 'rtl' : 'ltr'\" />\r\n                  <template slot=\"append\">\r\n                      <div class=\"append-text btn-addon\">\r\n                      <vs-button color=\"primary\" v-if=\"usuario.id_group === 1 || usuario.id_group === 5 || asignaturaSelected.id>619\" @click=\"$router.push('/temas')\">Crear {{tema_ambito}}</vs-button>\r\n                      </div>\r\n                  </template>\r\n              </vx-input-group>\r\n          </div>\r\n\r\n\r\n          <div class=\"vx-col sm:w-1/2 w-full\">\r\n              Banco\r\n              <v-select v-model=\"bancoSelected\" class=\"w-full\" :options=\"bancos\" @input=\"verpreguntasxtema()\" :dir=\"$vs.rtl ? 'rtl' : 'ltr'\" />\r\n          </div>\r\n\r\n          <div class=\"vx-col sm:w-1/2 w-full\">\r\n              Tipo\r\n              <v-select class=\"w-full\" v-model=\"tipoSelected\" :options=\"tipos\" @input=\"filtrarTipos()\" :dir=\"$vs.rtl ? 'rtl' : 'ltr'\" />\r\n          </div>\r\n      </div>\r\n      <!-- <vs-button v-if=\"usuario.id_group===6\" @click=\"$router.push('/evaluaciones');\" size=\"small\" style=\"font-size: 14px; display: inline-block;\" class=\"mr-2\" color=\"primary\" type=\"filled\">← Evaluaciones</vs-button> -->\r\n      <vs-button v-if=\"pregunta.tema.id!=''\" @click=\"active1!=active1; popupTipoPreg=true; id_preguntaActiva=''; editarOpcionActiva=false; editarActivo=false; pregTipo = 1; limpiar();\" size=\"small\" style=\"font-size: 14px; display: inline-block;\" color=\"dark\" class=\"mr-3\" type=\"filled\">Crear pregunta</vs-button>\r\n    </div>\r\n    <div v-else title-color=\"primary\">\r\n      <div class=\"vx-row w-full mb-4\">\r\n          <div class=\"vx-col sm:w-1/2 w-full\">\r\n              Asignatura\r\n              <v-select class=\"mb-2\" v-model=\"asignaturaSelected\" :options=\"asignaturas\" @input=\"filtrarPreguntas()\" :dir=\"$vs.rtl ? 'rtl' : 'ltr'\" />\r\n          </div>\r\n          <div class=\"vx-col sm:w-1/2 w-full\">\r\n              Unidad\r\n              <v-select class=\"mb-2\" v-model=\"unidadSelected\" :options=\"unidades\" @input=\"filtrarPreguntas()\" :dir=\"$vs.rtl ? 'rtl' : 'ltr'\" />\r\n          </div>\r\n\r\n\r\n          <div class=\"vx-col w-full\">\r\n              {{tema_ambito}}\r\n              <vx-input-group class=\"mb-2\">\r\n                  <v-select v-model=\"pregunta.tema\" @input=\"verpreguntasxtema()\" :options=\"temas\" :dir=\"$vs.rtl ? 'rtl' : 'ltr'\" />\r\n\r\n                  <template slot=\"append\">\r\n                      <div class=\"append-text btn-addon\">\r\n                      <vs-button color=\"primary\" v-if=\"usuario.id_group === 1 || usuario.id_group === 5 || asignaturaSelected.id>619\" @click=\"$router.push('/temas')\">Crear {{tema_ambito}}</vs-button>\r\n                      </div>\r\n                  </template>\r\n              </vx-input-group>\r\n          </div>\r\n          <div class=\"vx-col sm:w-1/2 w-full\">\r\n              Banco\r\n              <v-select v-model=\"bancoSelected\" class=\"w-full\" :options=\"bancos\" @input=\"verpreguntasxtema()\" :dir=\"$vs.rtl ? 'rtl' : 'ltr'\" />\r\n          </div>\r\n          <div class=\"vx-col sm:w-1/2 w-full\">\r\n              Tipo\r\n              <v-select style=\"width:240px; min-width: 60px;\" v-model=\"tipoSelected\" :options=\"tipos\" @input=\"filtrarTipos()\" :dir=\"$vs.rtl ? 'rtl' : 'ltr'\" />\r\n          </div>\r\n      </div>\r\n      <vs-table stripe v-model=\"pregSelected\" pagination max-items=\"25\" search :data=\"preguntas.items\">\r\n          <template slot=\"header\">\r\n            <small>Cantidad: {{ preguntas.items.length }}</small>\r\n              <vs-button v-if=\"pregunta.tema.id!=''\" @click=\"active1!=active1; popupTipoPreg=true; id_preguntaActiva=''; editarOpcionActiva=false; editarActivo=false; pregTipo=1; limpiar();\" size=\"small\" style=\"font-size: 14px;\" color=\"dark\" class=\"ml-3\" type=\"filled\">Crear pregunta</vs-button>\r\n          </template>\r\n\r\n          <template slot=\"thead\">\r\n              <vs-th sort-key=\"pregunta\">#</vs-th>\r\n              <vs-th sort-key=\"pregunta\">Pregunta</vs-th>\r\n              <vs-th sort-key=\"id_tipo_pregunta\">Tipo</vs-th>\r\n              <vs-th>Acciones</vs-th>\r\n          </template>\r\n\r\n          <template slot-scope=\"{data}\">\r\n          <vs-tr :data=\"tr\" :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n              <vs-td>\r\n                <p>{{ tr.id }}</p>\r\n                <b>Editor:</b>\r\n                <p>{{ tr.editor }} </p>\r\n                <b>Fecha creación:</b>\r\n                <p>{{ tr.created_at }}</p>\r\n                <b>Fechas modificación:</b>\r\n                <p>{{ tr.updated_at }}</p>\r\n                <p><vs-chip color=\"primary\" v-if=\"tr.estado == '1'\">Activo</vs-chip></p>\r\n                <p><vs-chip color=\"danger\" v-if=\"tr.estado == '0'\">Desactivado</vs-chip></p>\r\n              </vs-td>\r\n              <vs-td :data=\"data[indextr].descripcion\">\r\n                  {{ data[indextr].descripcion }}<br>\r\n                  <img v-if=\"data[indextr].img_pregunta!='' && data[indextr].img_pregunta!='null' && data[indextr].img_pregunta!=null\" v-bind:src=\"$data_url+'archivos/img/img_preguntas/'+data[indextr].img_pregunta\" class=\"img-responsive\" width=\"100px\" style=\"border-radius: 5px;\">\r\n\r\n                  <vs-collapse>\r\n                  <vs-collapse-item>\r\n                      <div slot=\"header\">\r\n                          Opciones\r\n                      </div>\r\n                      <div class=\"mb-5\" :key=\"indexitem\" v-for=\"(item, indexitem) in data[indextr].opciones\">\r\n                      <div style=\"width: 100%; font-size: 12px; color: #0DCD88;\" v-if=\"item.tipo===1\">Respuesta correcta<br></div>\r\n                      <div style=\"width: 100%; font-size: 12px; color: #FD5858;\" v-else>Respuesta incorrecta<br></div>\r\n                      <div style=\"width: 100%\"> {{ item.opcion }}<br></div>\r\n                      <div style=\"width: 100%\" ><img v-if=\"item.img_opcion!='' && item.img_opcion!='null' && item.img_opcion!=null\" v-bind:src=\"$data_url+'archivos/img/img_preguntas/'+item.img_opcion\" class=\"img-responsive\" style=\"border-radius: 5px;\" width=\"100px\"></div>\r\n                      </div>\r\n                  </vs-collapse-item>\r\n                  </vs-collapse>\r\n              </vs-td>\r\n\r\n              <vs-td :data=\"data[indextr].nombre_tipo\">\r\n                  {{data[indextr].nombre_tipo}}\r\n              </vs-td>\r\n\r\n              <vs-td :data=\"data[indextr].id\" align=\"center\">\r\n                  <vs-button v-if=\"usuario.idusuario === data[indextr].idusuario || usuario.id_group===1 || usuario.id_group===5\" @click=\"src_imagen_opcion=''; src_imagen_pregunta=''; pregunta.puntaje=1; popupTipoPreg=true; editarFormulario(data[indextr]);\" size=\"small\" style=\"padding: 7px; width: 80px; font-size: 12px;\" color=\"primary\" type=\"gradient\" class=\"m-1\">editar</vs-button>\r\n\r\n                  <vs-button v-if=\"usuario.idusuario === data[indextr].idusuario || usuario.id_group===1 || usuario.id_group===5\" @click=\"datosEliminar = tr; confirmarEliminarPreg()\" size=\"small\" style=\"padding: 7px; width: 80px; font-size: 12px;\" color=\"danger\" type=\"filled\" class=\"m-1\">eliminar</vs-button>\r\n\r\n                  <vs-button v-if=\"usuario.id_group===6\" @click=\"cargarPreguntaEval(data[indextr])\" size=\"small\" style=\"padding: 7px; width: 150px; font-size: 12px;\" color=\"success\" type=\"filled\" class=\"m-1\">cargar a evaluación</vs-button>\r\n              </vs-td>\r\n\r\n          </vs-tr>\r\n          </template>\r\n      </vs-table>\r\n    </div>\r\n    <div v-if=\"preguntas.items === undefined\">\r\n      <vs-table stripe v-model=\"pregSelected\" pagination max-items=\"5\" search :data=\"preguntas\">\r\n        <template slot=\"thead\">\r\n            <vs-th sort-key=\"pregunta\">#</vs-th>\r\n            <vs-th sort-key=\"pregunta\">Pregunta</vs-th>\r\n            <vs-th sort-key=\"id_tipo_pregunta\">Tipo</vs-th>\r\n            <vs-th>Acciones</vs-th>\r\n        </template>\r\n        <template slot-scope=\"{data}\">\r\n        <vs-tr :data=\"tr\" :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n            <vs-td>\r\n            </vs-td>ya\r\n            <vs-td :data=\"data[indextr].descripcion\">\r\n            </vs-td>\r\n            <vs-td :data=\"data[indextr].nombre_tipo\">\r\n            </vs-td>\r\n            <vs-td :data=\"data[indextr].id\" align=\"center\">\r\n            </vs-td>\r\n        </vs-tr>\r\n        </template>\r\n       </vs-table>\r\n       <br><br><br><br><br><br><br><br><br>\r\n    </div>\r\n  </vx-card>\r\n</div>\r\n</template>\r\n\r\n<script>\r\n    import flatPickr from 'vue-flatpickr-component';\r\n    import 'flatpickr/dist/flatpickr.css';\r\n    import Vue from 'vue'\r\n    import axios from 'axios'\r\n    import vSelect from 'vue-select'\r\n    import moment from 'moment'\r\n    import $ from 'jquery'\r\n    var img_preg_old = '', img_opcion_old = '';\r\n\r\n    export default {\r\n        data(){\r\n            return {\r\n                asignaturas: [],\r\n                asignatura: {id: '', label: ''},\r\n                preguntas: [],\r\n                pregunta: {descripcion: '', tema: {id: '', label: ''}, respuesta: '', opcion1: '', opcion2: '', opcion3: '', img_pregunta: '', img_respuesta: '', img_opcion1: '', img_opcion2: '', img_opcion3: '', puntaje_pregunta: '',estado:1},\r\n                temas: [],\r\n                tema: {id: '', label: '', id_asignatura: '', unidad: ''},\r\n                temaSelected: {id: '', label: ''},\r\n                opcion: {id_opcion_pregunta: '', id_pregunta: '', opcion: '', img_opcion: '', tipo: ''},\r\n                opciones: [],\r\n                editarActivo: false,\r\n                popupAddPreg: false,\r\n                popupEditPreg: false,\r\n                popupTipoPreg: false,\r\n                popupAddPregVarOp: false,\r\n                pregSelected: [],\r\n                pregTipo: 1,\r\n                titPregTipo: '',\r\n                txtPregTipo: '',\r\n                active1: true,\r\n                tipo_opcion: '',\r\n                cargarOpcionActivo: false,\r\n                guardadoActivo: false,\r\n                'tableList': [\r\n                    'vs-th: Component',\r\n                    'vs-tr: Component',\r\n                    'vs-td: Component',\r\n                    'thread: Slot',\r\n                    'tbody: Slot',\r\n                    'header: Slot'\r\n                ],\r\n                usuario: [],\r\n                docente: null,\r\n\r\n                id_preguntaActiva: '',\r\n                editarOpcionActiva: false,\r\n                src_imagen_pregunta: '',\r\n                src_imagen_opcion: '',\r\n                palabras_clave: '',\r\n                id_opcion_tipo234: '',\r\n                urlOrigen: '',\r\n                url: '',\r\n                id_pregunta_creada: null,\r\n                opcionselecradio: '',\r\n                asignaturaSelected: '',\r\n                unidadSelected: '',\r\n                unidades: [\r\n                    { id: \"1\", label: \"Unidad 1\", }, { id: \"2\", label: \"Unidad 2\", }, { id: \"3\", label: \"Unidad 3\", }, { id: \"4\", label: \"Unidad 4\", }, { id: \"5\", label: \"Unidad 5\", }, { id: \"6\", label: \"Unidad 6\", }, { id: \"7\", label: \"Unidad 7\", }, { id: \"8\", label: \"Unidad 8\", }\r\n                ],\r\n                tipoSelected: '',\r\n                tipos: [\r\n                    { id: \"1\", label: \"Opción múltiple\", }, { id: \"2\", label: \"Respuesta cerrada\", }, { id: \"3\", label: \"Verdadero/Falso\", }, { id: \"5\", label: \"Selección simple\"}, { id: \"6\", label: \"Respuesta abierta\" }\r\n                ],\r\n                datosEliminar: [],\r\n                idPregEliminar: '',\r\n                bancoSelected: {id:'3',label:'Ambas'},\r\n                bancos: [\r\n                    {id:'1',label:'Preguntas de Prolipa'},\r\n                    {id:'2',label:'Solo mis preguntas'},\r\n                    {id:'3',label:'Ambas'},\r\n                ],\r\n                tema_ambito: 'Tema',\r\n                arrayQuestions: [],\r\n                srcPreguntaAQuitar: '',\r\n            }\r\n        },\r\n        components: {\r\n            'v-select': vSelect,\r\n            flatPickr\r\n        },\r\n        created(){\r\n            let me = this;\r\n            me.$vs.loading()\r\n            me.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n            me.docente = me.usuario.idusuario\r\n            me.url = location.pathname.split('/');\r\n            var urlBack = window.location.href\r\n            var urlV = urlBack.split('/')\r\n            me.urlOrigen = urlV[0]+'/'+urlV[1]+'/'+urlV[2]+'/temas'\r\n            if( me.url[2] === undefined ){\r\n                this.$http.get(this.$server_url+'asignaturasDoc/0').then(res => {\r\n                    me.asignaturas = res.data;\r\n                    me.$vs.loading.close()\r\n                })\r\n            }else{\r\n                this.$http.get(this.$server_url+'asignaturasDoc/'+me.docente).then(res => {\r\n                    me.asignaturas = res.data;\r\n                    me.$vs.loading.close()\r\n                })\r\n            }\r\n\r\n            me.asignaturaSelected = { id: localStorage.idasignatura, label: localStorage.nombreasignatura }\r\n        },\r\n        methods: {\r\n            onResize() {\r\n            if (window.innerWidth < 769)\r\n                this.isMobile = true;\r\n            else\r\n                this.isMobile = false;\r\n            },\r\n            limpiar(){\r\n                this.guardadoActivo = false;\r\n                this.opciones = [];\r\n                this.pregunta.descripcion = '';\r\n                this.pregunta.puntaje_pregunta = '';\r\n                //this.pregunta.tema = '';\r\n                this.pregunta.opcion = '';\r\n                this.opcion.opcion = '';\r\n                this.opcion.tipo = '';\r\n                this.src_imagen_pregunta = '';\r\n                this.srcPreguntaAQuitar = '';\r\n                this.src_imagen_opcion = '';\r\n                this.editarActivo = false;\r\n                this.palabras_clave = '';\r\n                this.id_preguntaActiva='';\r\n                this.editarOpcionActiva=false;\r\n                this.pregunta.cant_coincidencias='';\r\n                this.pregunta.puntaje_pregunta=1;\r\n                this.pregunta.estado=1;\r\n                switch (this.pregTipo) {\r\n                    case 1:\r\n                        this.titPregTipo='Crear pregunta de opción múltiple.';\r\n                        this.txtPregTipo='Esta pregunta puede tener una o varias opciones correctas. Las opciones pueden contener: solo texto, solo imágenes o ambas.';\r\n                        break;\r\n                    case 2:\r\n                        this.titPregTipo='Crear pregunta cerrada';\r\n                        this.txtPregTipo='Esta pregunta debe ser respondida de forma escrita. La respuesta correcta debe contener palabras clave para poder comparar con la respuesta del estudiante.';\r\n                        break;\r\n                    case 3:\r\n                        this.titPregTipo='Crear pregunta de Verdadero o Falso';\r\n                        this.txtPregTipo='Esta pregunta debe tener dos opciones, una correcta y otra incorrecta.';\r\n                        break;\r\n                    case 4:\r\n                        this.titPregTipo='Crear pregunta de tipo dicotómica (Si o No)';\r\n                        this.txtPregTipo='Esta pregunta debe tener dos opciones, una correcta y otra incorrecta.';\r\n                        break;\r\n                    case 5:\r\n                        this.titPregTipo='Crear pregunta de selección simple';\r\n                        this.txtPregTipo='Esta pregunta puede tener solo una opción correcta. Las opciones pueden contener: solo texto, solo imágenes o ambas.';\r\n                        break;\r\n                    default:\r\n                        this.titPregTipo='Crear pregunta abierta';\r\n                        this.txtPregTipo='Esta pregunta no tiene una respuesta. Es una pregunta de opinión que se deberá calificar manualmente.';\r\n                        break;\r\n                }\r\n            },\r\n            addTypeQuestion(){\r\n                switch (this.pregTipo) {\r\n                    case 1:\r\n                        this.titPregTipo='Crear pregunta de opción múltiple.';\r\n                        this.txtPregTipo='Esta pregunta puede tener una o varias opciones correctas. Las opciones pueden contener: solo texto, solo imágenes o ambas.';\r\n                        break;\r\n                    case 2:\r\n                        this.titPregTipo='Crear pregunta cerrada';\r\n                        this.txtPregTipo='Esta pregunta debe ser respondida de forma escrita. La respuesta correcta debe contener palabras clave para poder comparar con la respuesta del estudiante.';\r\n                        break;\r\n                    case 3:\r\n                        this.titPregTipo='Crear pregunta de Verdadero o Falso';\r\n                        this.txtPregTipo='Esta pregunta debe tener dos opciones, una correcta y otra incorrecta.';\r\n                        break;\r\n                    case 4:\r\n                        this.titPregTipo='Crear pregunta de tipo dicotómica (Si o No)';\r\n                        this.txtPregTipo='Esta pregunta debe tener dos opciones, una correcta y otra incorrecta.';\r\n                        break;\r\n                    case 5:\r\n                        this.titPregTipo='Crear pregunta de selección simple';\r\n                        this.txtPregTipo='Esta pregunta puede tener solo una opción correcta. Las opciones pueden contener: solo texto, solo imágenes o ambas.';\r\n                        break;\r\n                    default:\r\n                        this.titPregTipo='Crear pregunta abierta';\r\n                        this.txtPregTipo='Esta pregunta no tiene una respuesta. Es una pregunta de opinión que se deberá calificar manualmente.';\r\n                        break;\r\n                }\r\n            },\r\n            agregar(){\r\n                let me = this;\r\n                if( me.pregunta.descripcion.trim() === '' || me.pregunta.tema === '' || me.pregunta.tema === undefined || me.pregunta.tema === null || this.pregunta.puntaje_pregunta === '' || me.pregunta.puntaje_pregunta === undefined){\r\n                    me.$vs.notify({\r\n                        text:'Debe completar todos los campos antes de guardar',\r\n                        color:'warning',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check'})\r\n                    return;\r\n                }\r\n\r\n                if( me.pregunta.tema.id ==='' ){\r\n                    me.$vs.notify({\r\n                        text:'Seleccione un '+me.tema_ambito+' antes de guardar',\r\n                        color:'warning',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check'})\r\n                    return;\r\n                }\r\n\r\n                me.$vs.loading()\r\n                let fileImgPreg\r\n                fileImgPreg = document.getElementById(\"file1\").files[0];\r\n                me.pregunta.file1 = fileImgPreg;\r\n\r\n                const formData = new FormData();\r\n                formData.append('descripcion', me.pregunta.descripcion);\r\n                formData.append('tema', me.pregunta.tema.id);\r\n                formData.append('img_pregunta', fileImgPreg);\r\n                formData.append('id_tipo_pregunta', me.pregTipo);\r\n                formData.append('puntaje_pregunta', me.pregunta.puntaje_pregunta);\r\n                formData.append('idusuario', me.usuario.idusuario);\r\n                formData.append('estado', me.pregunta.estado);\r\n                axios.post(this.$data_url+'api/pregunta', formData)\r\n                .then(res => {\r\n                    me.guardadoActivo = true;\r\n                    me.id_preguntaActiva = res.data.id;\r\n                    me.filtrarTipos()\r\n                    me.$vs.notify({\r\n                    text:'Pregunta creada exitosamente',\r\n                    color:'success',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check'})\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ': error al crear pregunta');\r\n                })\r\n\r\n\r\n            },\r\n            cargarOpcion(){\r\n                let me = this;\r\n                if( me.id_preguntaActiva === '' ){\r\n                    me.$vs.notify({\r\n                        text:'Debe crear una pregunta antes de cargar las opciones.',\r\n                        color:'warning',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check'})\r\n                }else{\r\n                    me.$vs.loading()\r\n\r\n                    const formData = new FormData();\r\n\r\n                    let fileImgPreg = document.getElementById(\"file2\").files[0];\r\n                    let tipo = 0;\r\n                    if( me.opcion.tipo === true ){\r\n                        tipo = 1;\r\n                    }\r\n                    formData.append('opcion', me.opcion.opcion);\r\n                    formData.append('id_pregunta', me.id_preguntaActiva);\r\n                    formData.append('img_opcion', fileImgPreg);\r\n                    formData.append('tipo', tipo);\r\n                    formData.append('cant_coincidencias', 0);\r\n\r\n                    axios.post(this.$data_url+'api/cargarOpcion', formData)\r\n                    .then(res => {\r\n                        me.opciones = res.data;\r\n                        me.opcion.opcion = '';\r\n                        me.opcion.tipo = '';\r\n                        me.src_imagen_opcion = '';\r\n                        document.getElementById(\"file2\").value = '';\r\n                        me.msgExito('cargada');\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(error);\r\n                    })\r\n                }\r\n            },\r\n            cargarOpcionAbierta(){\r\n                let me = this;\r\n                if( me.pregunta.cant_coincidencias === '' || me.pregunta.cant_coincidencias === undefined || me.pregunta.cant_coincidencias < 0){\r\n                    me.$vs.notify({\r\n                    text:'Ingrese la cantidad de coincidencias de palabras clave.',\r\n                    color:'warning',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check'})\r\n                    return\r\n                }\r\n\r\n                if( me.id_preguntaActiva === '' ){\r\n                    me.$vs.notify({\r\n                        text:'Debe crear una pregunta antes de cargar las opciones.',\r\n                        color:'warning',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check'})\r\n                }else{\r\n                    me.$vs.loading()\r\n                    let tipo = 1;\r\n                    let palabrasV = me.palabras_clave.replace(/ /gi, '')\r\n                    const formData = new FormData();\r\n                    formData.append('opcion', palabrasV);\r\n                    formData.append('id_pregunta', me.id_preguntaActiva);\r\n                    formData.append('img_opcion', null);\r\n                    formData.append('tipo', tipo);\r\n                    formData.append('cant_coincidencias', parseInt(me.pregunta.cant_coincidencias));\r\n                    this.$http.post(this.$server_url+'cargarOpcion', formData)\r\n                    .then(res => {\r\n                        me.opciones = res.data;\r\n                        me.opcion.opcion = '';\r\n                        me.opcion.tipo = '';\r\n                        me.src_imagen_opcion = '';\r\n                        me.msgExito('guardada');\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(error);\r\n                    })\r\n                }\r\n            },\r\n            cargarOpcionesDico(){\r\n                let me = this;\r\n                if( me.id_preguntaActiva === '' ){\r\n                    me.$vs.notify({\r\n                        text:'Debe crear una pregunta antes de cargar las opciones.',\r\n                        color:'warning',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check'})\r\n                }else{\r\n                    me.$vs.loading()\r\n                    const formData = new FormData();\r\n                    formData.append('opcion', me.opcion.opcion);\r\n                    formData.append('id_pregunta', me.id_preguntaActiva);\r\n                    formData.append('img_opcion', null);\r\n                    formData.append('tipo', 1);\r\n                    formData.append('cant_coincidencias', 0);\r\n                    this.$http.post(this.$server_url+'cargarOpcionDico', formData)\r\n                    .then(res => {\r\n                        me.opcion.opcion = '';\r\n                        me.opcion.tipo = '';\r\n                        me.src_imagen_opcion = '';\r\n                        me.msgExito('guardada');\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(error);\r\n                    })\r\n                }\r\n            },\r\n            confirmEditarOpcion(item){\r\n                let me = this;\r\n                me.editarOpcionActiva= false;\r\n\r\n                let fileImgOpcion;\r\n                fileImgOpcion = document.getElementById(\"file2\").files[0];\r\n\r\n                if(fileImgOpcion === undefined ){\r\n                    fileImgOpcion = item.img_opcion;\r\n                }\r\n\r\n                let tipo = 0;\r\n                if( me.opcion.tipo === true || me.opcion.tipo === 1 ){\r\n                    tipo = 1;\r\n                }\r\n\r\n                const formData = new FormData();\r\n                formData.append('opcion', me.opcion.opcion);\r\n                formData.append('tipo', tipo);\r\n                formData.append('img_opcion', fileImgOpcion);\r\n                formData.append('img_opcion_old', img_opcion_old);\r\n                formData.append('id_opcion_pregunta', item.id_opcion_pregunta);\r\n                formData.append('id_pregunta', item.id_pregunta);\r\n                formData.append('cant_coincidencias', 0);\r\n                axios.post(this.$data_url+'api/editarOpcion', formData).\r\n                then(res => {\r\n                    me.opciones = res.data;\r\n                    me.editarOpcionActiva = false;\r\n                    me.opcion.opcion = '';\r\n                    me.opcion.tipo = '';\r\n                    me.src_imagen_opcion = '';\r\n                    me.msgExito('cargada');\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n            },\r\n            editarOpcion(item){\r\n                let me = this;\r\n                location.href = '#editar'\r\n                me.opcion.opcion = '';\r\n                document.getElementById(\"file2\").value = '';\r\n\r\n                me.opcion.opcion = item.opcion;\r\n                me.opcion.tipo = item.tipo;\r\n                me.opcion.id_opcion_pregunta = item.id_opcion_pregunta;\r\n                me.opcion.id_pregunta = item.id_pregunta;\r\n\r\n                img_opcion_old = item.img_opcion;\r\n                me.src_imagen_opcion = this.$data_url+'archivos/img/img_preguntas/'+item.img_opcion;\r\n            },\r\n            editarOpcionesDico(){\r\n                let me = this;\r\n                me.$vs.loading()\r\n                const formData = new FormData();\r\n                    formData.append('opcion', me.opcion.opcion);\r\n                    formData.append('id_pregunta', me.id_preguntaActiva);\r\n                    formData.append('img_opcion', null);\r\n                    formData.append('tipo', 1);\r\n                    formData.append('id_opcion', 1);\r\n                    formData.append('cant_coincidencias', 0);\r\n\r\n                this.$http.post(this.$server_url+'cargarOpcionDico', formData)\r\n                .then(res => {\r\n                    me.msgExito('editada');\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n            },\r\n            confirmarEliminarPreg(){\r\n                this.$vs.dialog({\r\n                    type: 'confirm',\r\n                    color: 'danger',\r\n                    title: 'Confirmar',\r\n                    acceptText:'Si, deseo eliminar',\r\n                    cancelText:'Cancelar',\r\n                    text: '¿Está seguro de eliminar esta pregunta?',\r\n                    accept: this.eliminarPregunta\r\n                })\r\n            },\r\n            eliminarPregunta(){\r\n                let me = this;\r\n                axios.get(this.$data_url+'api/eliminarPregunta?id='+me.datosEliminar.id)\r\n                .then(res => {\r\n                // this.$http.get(this.$server_url+`eliminarPregunta/`+me.datosEliminar.id).then(() => {\r\n                    if(res.data.status == 0){\r\n                        me.$vs.notify({\r\n                        text:res.data.message,\r\n                        color:'warning',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check',\r\n                        time:4000\r\n                        })\r\n                        return;\r\n                    }\r\n                    me.filtrarTipos();\r\n\r\n                    /*this.$http.get(this.$server_url+'preguntasDocente/'+me.usuario.idusuario).then(res => {\r\n                        me.preguntas = res.data;\r\n                        me.$vs.loading.close()\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(error + ': error al eliminar pregunta');\r\n                    })*/\r\n                })\r\n                .catch(function (error) {\r\n                    alert(error+'NO SE PUEDE ELIMINAR ESTA PREGUNTA, YA QUE SE ESTÁ UTILIZANDO EN UNA EVALUACIÓN.');\r\n                })\r\n            },\r\n            quitarOpcion(item){\r\n                let me = this;\r\n                me.$vs.loading()\r\n                this.$http.get(this.$server_url+'quitarOpcion/'+item.id_opcion_pregunta)\r\n                .then(res => {\r\n                    me.removeItemFromArr(me.opciones, item)\r\n                    me.$vs.loading.close()\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n            },\r\n            editarFormulario(item){\r\n                let me = this;\r\n                me.limpiar();\r\n                me.pregTipo                     = item.id_tipo_pregunta;\r\n                me.addTypeQuestion();\r\n                me.id_preguntaActiva            = item.id;\r\n                me.temaSelected                 = {id: item.id_tema, label: item.nombre_tema};\r\n                me.pregunta.descripcion         = item.descripcion;\r\n                me.pregunta.tema                = {id: item.id_tema, label: item.nombre_tema};\r\n                me.pregunta.id                  = item.id;\r\n                me.pregunta.img_pregunta        = item.img_pregunta;\r\n                me.pregunta.puntaje_pregunta    = item.puntaje_pregunta;\r\n                me.pregunta.estado              = item.estado\r\n                img_preg_old                    = item.img_pregunta;\r\n                me.srcPreguntaAQuitar           = item.img_pregunta;\r\n                if(item.img_pregunta!=''){      me.src_imagen_pregunta = this.$data_url+'archivos/img/img_preguntas/'+item.img_pregunta;  }\r\n                me.editarActivo = true;\r\n                ///mostrar opciones\r\n                this.$http.get(this.$server_url+'verOpciones/'+ item.id)\r\n                .then(res => {\r\n                    if(res.data.length > 0){\r\n                        me.opciones = res.data;\r\n                        me.palabras_clave = res.data[0].opcion;\r\n                        me.id_opcion_tipo234 = res.data[0].id_opcion_pregunta;\r\n                        me.opcion.opcion = res.data[0].opcion;\r\n                        me.pregunta.cant_coincidencias = res.data[0].cant_coincidencias;\r\n                    }\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n            },\r\n            quitarImagen(){\r\n              let me = this;\r\n              me.src_imagen_pregunta = '';\r\n              document.getElementById(\"file1\").value = ''\r\n              img_preg_old = '';\r\n            },\r\n            editarPregunta(){\r\n                let me = this;\r\n                if(me.pregunta.estado == \"\" || me.pregunta.estado == null || me.pregunta.estado == undefined){\r\n                   me.$vs.notify({\r\n                    text:'Debe seleccionar un estado para la pregunta',\r\n                    color:'warning',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check'})\r\n                    return;\r\n                }\r\n                if( me.pregunta.descripcion.trim() === '' || me.pregunta.tema === '' || me.pregunta.tema === undefined || me.pregunta.tema === null || me.pregunta.puntaje_pregunta === '' || me.pregunta.puntaje_pregunta === undefined){\r\n                    me.$vs.notify({\r\n                        text:'Debe completar todos los campos antes de guardar',\r\n                        color:'warning',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check'})\r\n                    return;\r\n                }\r\n\r\n                me.$vs.loading()\r\n                let fileImgPreg;\r\n                const formData = new FormData();\r\n                fileImgPreg = document.getElementById(\"file1\").files[0];\r\n                if(fileImgPreg === undefined ){\r\n                    // fileImgPreg = me.pregunta.img_pregunta;\r\n                    formData.append('img_pregunta', \"\");\r\n                }else{\r\n                    formData.append('img_pregunta', fileImgPreg);\r\n                }\r\n                formData.append('descripcion', me.pregunta.descripcion);\r\n                formData.append('tema', me.pregunta.tema.id);\r\n                // formData.append('img_pregunta', fileImgPreg);\r\n                formData.append('img_pregunta_old', img_preg_old);\r\n                formData.append('id', me.pregunta.id);\r\n                formData.append('puntaje_pregunta', me.pregunta.puntaje_pregunta);\r\n                formData.append('idusuario', me.usuario.idusuario);\r\n                formData.append('estado', me.pregunta.estado);\r\n                formData.append('srcPreguntaAQuitar', me.srcPreguntaAQuitar);\r\n                axios.post(this.$data_url+'api/pregunta', formData).then(res => {\r\n                    document.getElementById(\"file1\").value = ''\r\n                    me.msgExito('editada');\r\n                    me.srcPreguntaAQuitar = '';\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n            },\r\n            mostrarImg(file, img){\r\n                let me = this;\r\n                me.src_imagen_opcion = ' ';\r\n                me.src_imagen_pregunta = ' ';\r\n                var archivo = document.getElementById(\"file\"+file).files[0];\r\n                var reader = new FileReader();\r\n                if (me) {\r\n                    reader.readAsDataURL(archivo );\r\n                    reader.onloadend = function () {\r\n                        //document.getElementById(\"img\"+img).style.display = \"block\";\r\n                        document.getElementById(\"img\"+img).src = reader.result;\r\n                    }\r\n                }\r\n            },\r\n            removeItemFromArr (arr, item) {\r\n                const i = arr.indexOf(item)\r\n                arr.splice(i, 1)\r\n            },\r\n            editarPalabrasclave(){\r\n                let me = this;\r\n                if( me.pregunta.cant_coincidencias === '' || me.pregunta.cant_coincidencias === undefined || me.pregunta.cant_coincidencias < 0){\r\n                    me.$vs.notify({\r\n                    text:'Ingrese la cantidad de coincidencias de palabras clave.',\r\n                    color:'warning',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check'})\r\n                    return\r\n                }\r\n                var cantCoin = parseInt(me.pregunta.cant_coincidencias)\r\n                if( me.id_opcion_tipo234 != '' ){\r\n                    me.$vs.loading()\r\n                    let palabrasV = me.palabras_clave.replace(/ /gi, '')\r\n                    const formData = new FormData();\r\n                    formData.append('opcion', palabrasV);\r\n                    formData.append('tipo', 1);\r\n                    formData.append('img_opcion', '');\r\n                    formData.append('img_opcion_old', '');\r\n                    formData.append('id_opcion_pregunta', me.id_opcion_tipo234);\r\n                    formData.append('id_pregunta', me.pregunta.id);\r\n                    formData.append('cant_coincidencias', cantCoin);\r\n\r\n                    this.$http.post(this.$server_url+'editarOpcion', formData).\r\n                    then(res => {\r\n                        me.opciones = res.data;\r\n                        me.editarOpcionActiva = false;\r\n                        me.opcion.opcion = '';\r\n                        me.opcion.tipo = '';\r\n                        me.src_imagen_opcion = '';\r\n                        me.msgExito('editada');\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(error);\r\n                    })\r\n                }else{\r\n                    me.cargarOpcionAbierta()\r\n                }\r\n            },\r\n            msgExito(tipo_msg){\r\n                let me = this;\r\n                me.preguntas = []\r\n                var tipobanco;\r\n                if( me.bancoSelected===null || me.bancoSelected==='' ){\r\n                    tipobanco ='todos'\r\n                }else{\r\n                    if( me.bancoSelected.id==='3'){\r\n                        tipobanco = 'todos'\r\n                    }\r\n                    if(me.bancoSelected.id==='1'){\r\n                        tipobanco = 'prolipa'\r\n                    }\r\n\r\n                    if(me.bancoSelected.id==='2'){\r\n                        tipobanco = 'docente'\r\n                    }\r\n                }\r\n                me.tipoSelected = '';\r\n                const formData = new FormData();\r\n                formData.append('id', me.pregunta.tema.id);\r\n                formData.append('tipobanco', tipobanco);\r\n                formData.append('usuario', me.usuario.idusuario);\r\n                formData.append('id_group',me.usuario.id_group)\r\n                formData.append('institucion_id',   me.usuario.institucion_idInstitucion)\r\n                var url = \"\"\r\n                if(me.usuario.id_group == 6){\r\n                    url = 'preguntas_x_tema_Docente'\r\n                }else{\r\n                    url = 'preguntasxtema'\r\n                }\r\n                this.$http.post(this.$server_url+url, formData).then(res => {\r\n                    let datos = res.data\r\n                    if(datos.items){\r\n                      if(datos.items.length >  0){\r\n                        if(me.usuario.id_group == 6){\r\n                          me.preguntas =  { items: datos.items.filter(item => item.estado == 1) };\r\n                        }\r\n                        else{ me.preguntas = res.data; }\r\n                      }\r\n                    }\r\n                    me.editarActivo = false;\r\n                    if(tipo_msg != 'cargada'){\r\n                        me.popupTipoPreg = false;\r\n                    }\r\n                    me.$vs.loading.close()\r\n                    me.$vs.notify({\r\n                    text:'Pregunta '+ tipo_msg +' exitosamente',\r\n                    color:'success',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check'})\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n\r\n            },\r\n            verpreguntasxtema(){\r\n                let me = this;\r\n                me.preguntas        = []\r\n                me.arrayQuestions   = []\r\n                if(me.pregunta.tema.id===undefined || me.pregunta.tema.id===null || me.pregunta.tema.id==='' || me.pregunta.tema===''){\r\n                    return;\r\n                }\r\n\r\n                var tipobanco;\r\n                if( me.bancoSelected===null || me.bancoSelected==='' ){\r\n                    tipobanco ='todos'\r\n                }else{\r\n                    if( me.bancoSelected.id==='3'){\r\n                        tipobanco = 'todos'\r\n                    }\r\n                    if(me.bancoSelected.id==='1'){\r\n                        tipobanco = 'prolipa'\r\n                    }\r\n\r\n                    if(me.bancoSelected.id==='2'){\r\n                        tipobanco = 'docente'\r\n                    }\r\n                }\r\n                me.$vs.loading()\r\n                me.tipoSelected = '';\r\n                const formData = new FormData();\r\n                formData.append('id',             me.pregunta.tema.id);\r\n                formData.append('tipobanco',      tipobanco);\r\n                formData.append('usuario',        me.usuario.idusuario);\r\n                formData.append('id_group',       me.usuario.id_group)\r\n                formData.append('institucion_id', me.usuario.institucion_idInstitucion)\r\n                var url = \"\"\r\n                if(me.usuario.id_group == 6){\r\n                    url = 'preguntas_x_tema_Docente'\r\n                }else{\r\n                    url = 'preguntasxtema'\r\n                }\r\n                this.$http.post(this.$server_url+url, formData)\r\n                // this.$http.post(this.$server_url+'preguntasxtema', formData)\r\n                .then(res => {\r\n                  me.$vs.loading.close()\r\n                  let datos = res.data\r\n                  me.arrayQuestions = datos\r\n                  if(datos.items){\r\n                    if(datos.items.length >  0){\r\n                      if(me.usuario.id_group == 6){\r\n                        me.preguntas =  { items: datos.items.filter(item => item.estado == 1) };\r\n                      }\r\n                      else{ me.preguntas = res.data; }\r\n                    }\r\n                  }\r\n                })\r\n                .catch(function (error) {\r\n                  me.$vs.loading.close()\r\n                  console.log(error);\r\n                  me.$vs.notify({\r\n                    text:'Hubo problemas con preguntas para este tema',\r\n                    color:'warning',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check'})\r\n                })\r\n            },\r\n            irTemas(){\r\n                let me = this;\r\n                me.popupTipoPreg = false;\r\n                window.location.href = me.urlOrigen;\r\n            },\r\n            filtrarPreguntas(){\r\n                let me = this;\r\n                me.preguntas = []\r\n                me.preguntas.id = ''\r\n                if( me.asignaturaSelected.id === undefined ){\r\n                    me.$vs.notify({\r\n                        text:'Seleccione una asignatura antes de filtrar por Unidades',\r\n                        color:'warning',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check'})\r\n                    return;\r\n                }\r\n\r\n                if( me.asignaturaSelected.id===113 || me.asignaturaSelected.id===114 || me.asignaturaSelected.id===115 ){\r\n                    me.tema_ambito = 'Ámbito'\r\n                }else{\r\n                    me.tema_ambito = 'Tema'\r\n                }\r\n\r\n                if( me.unidadSelected.id === undefined ){\r\n                    return;\r\n                }\r\n                me.temas = []\r\n                me.pregunta.tema.id = ''\r\n                me.$vs.loading()\r\n                const formData = new FormData();\r\n                    formData.append('asignatura', me.asignaturaSelected.id);\r\n                    formData.append('unidad', me.unidadSelected.id);\r\n\r\n                this.$http.post(this.$server_url+'temasignunidad', formData).then(res => {\r\n                  let datos = res.data\r\n                  if(me.usuario.id_group == 6) {\r\n                    me.temas = datos.filter(p => p.tipo_tema == 0);\r\n                    me.temas = me.temas.filter(p => !p.nombre_tema.startsWith(\"0.\"));\r\n                  }\r\n                  else                         { me.temas = datos}\r\n                  me.$vs.loading.close()\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n\r\n            },\r\n            filtrarTipos(){\r\n                let me = this;\r\n                if( me.pregunta.tema.id === ''){\r\n                    return;\r\n                }\r\n                if( me.tipoSelected===null || me.tipoSelected===undefined || me.tipoSelected==='' || me.tipoSelected==='null'  ){\r\n                    me.verpreguntasxtema()\r\n                }else{\r\n                    me.preguntas = []\r\n                    me.preguntas =  { items: me.arrayQuestions.items.filter(item => item.id_tipo_pregunta == me.tipoSelected.id) };\r\n                    // var tipobanco;\r\n                    // if( me.bancoSelected===null || me.bancoSelected==='' ){\r\n                    //     tipobanco ='todos'\r\n                    // }else{\r\n                    //     if( me.bancoSelected.id==='3'){\r\n                    //         tipobanco = 'todos'\r\n                    //     }\r\n                    //     if(me.bancoSelected.id==='1'){\r\n                    //         tipobanco = 'prolipa'\r\n                    //     }\r\n                    //     if(me.bancoSelected.id==='2'){\r\n                    //         tipobanco = 'docente'\r\n                    //     }\r\n                    // }\r\n                    // me.$vs.loading()\r\n                    // const formData = new FormData();\r\n                    // formData.append('tema',             me.pregunta.tema.id);\r\n                    // formData.append('tipo',             me.tipoSelected.id);\r\n                    // formData.append('usuario',          me.usuario.idusuario);\r\n                    // formData.append('tipobanco',        tipobanco);\r\n                    // formData.append('id_group',         me.usuario.id_group)\r\n                    // formData.append('institucion_id',   me.usuario.institucion_idInstitucion)\r\n                    // this.$http.post(this.$server_url+'preguntastipo', formData).then(res => {\r\n                    //     me.preguntas = res.data;\r\n                    //     me.$vs.loading.close()\r\n                    // })\r\n                    // .catch(function (error) {\r\n                    //     console.log(error);\r\n                    // })\r\n                }\r\n            },\r\n            cargarPreguntaEval(item) {\r\n                let me = this;\r\n                me.$vs.loading()\r\n                let formData = new FormData();\r\n                    formData.append('id_evaluacion', localStorage.id_desde_eval);\r\n                    formData.append('id_pregunta', item.id);\r\n                    formData.append('grupo', localStorage.grupo_desde_eval);\r\n                me.$http.post(this.$server_url+'pregEvaluacion', formData)\r\n                .then(res => {\r\n                    let msg = 'Pregunta cargada correctamente'\r\n                    if( res.data == 0 ){\r\n                        msg = 'No puede cargar más de una vez la misma pregunta'\r\n                    }\r\n                    me.$vs.loading.close()\r\n                    me.$vs.notify({\r\n                    text: msg,\r\n                    color:'success',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check'})\r\n                })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close()\r\n                    console.log(error);\r\n                })\r\n            },\r\n        },\r\n    }\r\n</script>\r\n"]}]}