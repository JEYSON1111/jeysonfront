{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\docentes\\agenda_docente.vue?vue&type=style&index=0&id=2668e063&lang=scss","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\docentes\\agenda_docente.vue","mtime":1712682815744},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\n@import \"@/assets/scss/vuexy/apps/simple-calendar.scss\";\r\n",{"version":3,"sources":["agenda_docente.vue"],"names":[],"mappings":";AA2TA","file":"agenda_docente.vue","sourceRoot":"src/views/docentes","sourcesContent":["<template>\r\n  <div id=\"simple-calendar-app\">\r\n    <div class=\"vx-card no-scroll-content\">\r\n      <calendar-view\r\n        ref=\"calendar\"\r\n        :displayPeriodUom=\"calendarView\"\r\n        :show-date=\"showDate\"\r\n        :events=\"simpleCalendarEvents\"\r\n        :eventTop=\"windowWidth <= 400 ? '2rem' : '3rem'\"\r\n        eventBorderHeight=\"0px\"\r\n        eventContentHeight=\"1.65rem\"\r\n        class=\"theme-default\"\r\n        @click-date=\"openAddNewEvent\"\r\n        @click-event=\"openEditEvent\">\r\n\r\n        <div slot=\"header\" class=\"mb-4\">\r\n\r\n          <div class=\"vx-row no-gutter\">\r\n\r\n            <!-- Month Name -->\r\n            <div class=\"vx-col w-1/3 items-center sm:flex hidden\">\r\n              <!-- Add new event button -->\r\n              <vs-button icon-pack=\"feather\" class=\"mr-2\" color=\"dark\" style=\"padding: 7px 10px 7px 10px; font-size: 14px;\" icon=\"icon-plus\" @click=\"promptAddNewEvent(new Date())\">Crear evento</vs-button>\r\n              <vs-button color=\"dark\" type=\"border\" style=\"padding: 7px 10px 7px 10px; font-size: 14px;\" @click=\"$router.go()\">Hoy</vs-button>\r\n            </div>\r\n\r\n            <!-- Current Month -->\r\n            <div class=\"vx-col sm:w-1/3 w-full sm:my-0 my-3 flex sm:justify-end justify-center order-last\">\r\n              <div class=\"flex items-center\">\r\n                <feather-icon\r\n                  :icon=\"$vs.rtl ? 'ChevronRightIcon' : 'ChevronLeftIcon'\"\r\n                  @click=\"updateMonth(-1)\"\r\n                  svgClasses=\"w-5 h-5 m-1\"\r\n                  class=\"cursor-pointer bg-primary text-white rounded-full\" />\r\n\r\n                <span class=\"mx-3 text-xl font-medium whitespace-no-wrap\">{{ showDate.toString().substring(0,16) }}</span>\r\n\r\n                <feather-icon\r\n                  :icon=\"$vs.rtl ? 'ChevronLeftIcon' : 'ChevronRightIcon'\"\r\n                  @click=\"updateMonth(1)\"\r\n                  svgClasses=\"w-5 h-5 m-1\"\r\n                  class=\"cursor-pointer bg-primary text-white rounded-full\" />\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"vx-col sm:w-1/3 w-full flex justify-center\">\r\n              <template v-for=\"(view, index) in calendarViewTypes\">\r\n                <vs-button\r\n                  v-if=\"calendarView === view.val\"\r\n                  :key=\"String(view.val) + 'filled'\"\r\n                  type=\"filled\" style=\"padding: 7px 10px 7px 10px !important; font-size: 14px;\"\r\n                  class=\"p-3 md:px-8 md:py-3\" \r\n                  :class=\"{'border-l-0': index, 'rounded-r-none': calendarViewTypes.length !== index+1}\"\r\n                  @click=\"calendarView = view.val\"\r\n                  >{{ view.label }}</vs-button>\r\n                <vs-button\r\n                  v-else\r\n                  :key=\"String(view.val) + 'border'\"\r\n                  type=\"line\" style=\"padding: 7px 10px 7px 10px !important; font-size: 14px;\"\r\n                  class=\"p-3 md:px-8 md:py-3\"\r\n                  :class=\"{'border-l-0': index, 'rounded-r-none': calendarViewTypes.length !== index+1}\"\r\n                  @click=\"calendarView = view.val\"\r\n                  >{{ view.label }}</vs-button>\r\n              </template>\r\n\r\n            </div>\r\n          </div>\r\n            \r\n          <div class=\"vx-row sm:flex hidden mt-4\">\r\n            <div class=\"vx-col w-full flex\">\r\n              <!-- Labels -->\r\n              <!-- {{calendarLabels}} -->\r\n              <div class=\"flex flex-wrap sm:justify-start justify-center\">\r\n                  <div v-for=\"(label, index) in calendarLabels\" :key=\"index\" class=\"flex items-center mr-4 mb-2\">\r\n                      <div class=\"h-3 w-3 inline-block rounded-full mr-2\" :class=\"'bg-' + label.color\"></div>\r\n                      <span>{{ label.text }}</span>\r\n                  </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </calendar-view>\r\n    </div>\r\n\r\n    <!-- ADD EVENT -->\r\n    <vs-prompt\r\n        class=\"calendar-event-dialog\"\r\n        title=\"Evento\"\r\n        accept-text= \"Guardar\"\r\n        :cancel-text=\"label_cancel\"\r\n        @accept=\"addEvent\"\r\n        @cancel=\"removeEvent\"\r\n        :active.sync=\"activePromptAddEvent\">\r\n\r\n        <div class=\"calendar__label-container flex mb-6\">\r\n            <vs-chip class=\"text-white\" :class=\"'bg-' + labelLocal.color\">{{ labelLocal.text }}</vs-chip>\r\n\r\n            <vs-dropdown vs-custom-content vs-trigger-click class=\"ml-auto my-2 cursor-pointer\">\r\n\r\n                <feather-icon icon=\"TagIcon\" svgClasses=\"h-5 w-5\" class=\"cursor-pointer\" @click.prevent></feather-icon>\r\n\r\n                <vs-dropdown-menu style=\"z-index: 200001\">\r\n                        <vs-dropdown-item v-for=\"(label, index) in calendarLabels\" :key=\"index\" @click=\"labelLocal = label\">\r\n                            <div class=\"h-3 w-3 inline-block rounded-full mr-2\" :class=\"'bg-' + label.color\"></div>\r\n                            <span>{{ label.text }}</span>\r\n                        </vs-dropdown-item>\r\n                </vs-dropdown-menu>\r\n            </vs-dropdown>\r\n        </div>\r\n\r\n        <vs-input class=\"w-full mb-3\" label-placeholder=\"Título del evento *\" v-model=\"title\"></vs-input>\r\n\r\n        <div class=\"vx-row mb-3\">\r\n          <div class=\"vx-col sm:w-1/2 w-full\">\r\n            <small class=\"date-label\">Fecha inicio *</small>\r\n            <datepicker class=\"w-full\" name=\"start-date\" v-model=\"startDate\" @input=\"formatoFechas()\" :disabled=\"disabledFrom\"></datepicker>\r\n          </div>\r\n          <div class=\"vx-col sm:w-1/2 w-full\">\r\n            <small class=\"date-label\">Fecha fin *</small>\r\n            <datepicker class=\"w-full\" :disabledDates=\"disabledDatesTo\" @input=\"formatoFechas()\" name=\"end-date\" v-model=\"endDate\"></datepicker>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"vx-row mb-3\">\r\n          <div class=\"vx-col sm:w-1/2 w-full\">\r\n            <small class=\"date-label\">Hora inicio *</small>\r\n            <flat-pickr class=\"w-full\" :config=\"configdateTimePicker\" v-model=\"hora_inicio\"/>\r\n          </div>\r\n          <div class=\"vx-col sm:w-1/2 w-full\">\r\n            <small class=\"date-label\">Hora fin *</small>\r\n            <flat-pickr class=\"w-full\" :config=\"configdateTimePicker\" v-model=\"hora_fin\"/>\r\n          </div>\r\n        </div>\r\n\r\n        <vs-textarea name=\"event-url\" class=\"w-full mb-3\" label=\"Descripción del evento *\" v-model=\"url\" />\r\n\r\n    </vs-prompt>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { CalendarView, CalendarViewHeader } from 'vue-simple-calendar'\r\nimport moduleCalendar from '@/store/calendar/moduleCalendar.js'\r\nrequire('vue-simple-calendar/static/css/default.css')\r\n\r\nimport moment from 'moment'\r\nimport Datepicker from 'vuejs-datepicker'\r\nimport flatPickr from 'vue-flatpickr-component';\r\nimport 'flatpickr/dist/flatpickr.css';\r\nimport { en, he } from 'vuejs-datepicker/src/locale'\r\n\r\nexport default {\r\n  components: {\r\n    CalendarView,\r\n    CalendarViewHeader,\r\n    Datepicker,\r\n    flatPickr\r\n  },\r\n  data () {\r\n    return {\r\n      usuario: [],\r\n      showDate: new Date(),\r\n      disabledFrom: false,\r\n      titulo: '',\r\n      id: 0,\r\n      title: '',\r\n      startDate: '',\r\n      endDate: '',\r\n      labelLocal: {text: 'Baja', color: 'success'},\r\n      startDate_send: '',\r\n      endDate_sed: '',\r\n      langHe: he,\r\n      langEn: en,\r\n\r\n      url: '',\r\n      calendarView: 'month',\r\n\r\n      activePromptAddEvent: false,\r\n      label_cancel: 'Cancelar',\r\n      calendarViewTypes: [\r\n        {\r\n          label: 'Mes',\r\n          val: 'month'\r\n        },\r\n        {\r\n          label: 'Semana',\r\n          val: 'week'\r\n        },\r\n        {\r\n          label: 'Año',\r\n          val: 'year'\r\n        }\r\n      ],\r\n      time: null,\r\n      configdateTimePicker: {\r\n        enableTime: true,\r\n        enableSeconds: false,\r\n        noCalendar: true\r\n      },\r\n      hora_inicio: '',\r\n      hora_fin: '',\r\n    }\r\n  },\r\n  computed: {\r\n    simpleCalendarEvents () {\r\n      return this.$store.state.calendar.events\r\n    },\r\n    disabledDatesTo () {\r\n      return { to: new Date(this.startDate) }\r\n    },\r\n    disabledDatesFrom () {\r\n      return { from: new Date(this.endDate) }\r\n    },\r\n    calendarLabels () {\r\n      return this.$store.state.calendar.eventLabels\r\n    },\r\n    labelColor () {\r\n      return (label) => {\r\n        if      (label === 'business') return 'success'\r\n        else if (label === 'work')     return 'warning'\r\n        else if (label === 'personal') return 'danger'\r\n        else if (label === 'baja')     return 'primary'\r\n      }\r\n    },\r\n    windowWidth () {\r\n      return this.$store.state.windowWidth\r\n    }\r\n  },\r\n  methods: {\r\n    addEvent () {\r\n      // alert(this.title +'_'+ this.startDate_send +'_'+ this.endDate_send +'_'+ this.url +'_'+ this.hora_inicio +'_'+ this.hora_fin)\r\n      if( this.title == '' || this.startDate_send == '' || this.endDate_send == '' || this.url == '' || this.hora_inicio == '' || this.hora_fin == '' ){\r\n        this.$vs.notify({\r\n        text:'Complete todos los campos antes de guardar.',\r\n        color:'warning',\r\n        iconPack: 'feather',\r\n        icon:'icon-alert-triangle'})\r\n        return\r\n      }\r\n      const obj = { idusuario: this.usuario.idusuario, id: this.id, title: this.title, startDate: this.startDate_send, endDate: this.endDate_send, classes: 'event-'+this.labelLocal.color, label: this.labelLocal.text, url: this.url, hora_inicio: this.hora_inicio.substring(0,5), hora_fin: this.hora_fin.substring(0,5) }\r\n\r\n      if( this.id != 0 ){\r\n        this.$store.dispatch('calendar/editEvent', obj)\r\n      }else{\r\n        this.$store.dispatch('calendar/addEvent', obj)\r\n      }\r\n    },\r\n    updateMonth (val) {\r\n      this.showDate = this.$refs.calendar.getIncrementedPeriod(val)\r\n    },\r\n    clearFields () {\r\n      this.title = this.endDate = this.url = ''\r\n      this.id = 0\r\n      this.labelLocal = {text: 'Baja', color: 'success'}\r\n      this.label_cancel = 'Cancelar'\r\n    },\r\n    promptAddNewEvent (date) {\r\n      this.disabledFrom = false\r\n      this.addNewEventDialog(date)\r\n    },\r\n    addNewEventDialog (date) {\r\n      this.clearFields()\r\n      this.startDate = date\r\n      this.endDate = date\r\n      this.formatoFechas()\r\n      this.activePromptAddEvent = true\r\n    },\r\n    openAddNewEvent (date) {\r\n      this.disabledFrom = true\r\n      this.addNewEventDialog(date)\r\n    },\r\n    openEditEvent (event) {\r\n      const e = this.$store.getters['calendar/getEvent'](event.id)\r\n      this.id = e.id\r\n      this.title = e.title.split('(')[0]\r\n      this.startDate = e.startDate\r\n      this.endDate = e.endDate\r\n      this.url = e.url\r\n      this.labelLocal = {text: e.label, color: e.classes.split('-')[1]}\r\n      this.startDate_send = this.startDate\r\n      this.endDate_send = this.endDate\r\n      this.hora_inicio = e.hora_inicio\r\n      this.hora_fin = e.hora_fin\r\n      this.label_cancel = 'Remover'\r\n      this.activePromptAddEvent = true\r\n    },\r\n    removeEvent () {\r\n      if( this.id == 0 ){return}\r\n      this.$store.dispatch('calendar/removeEvent', this.id)\r\n    },\r\n    eventDragged (event, date) {\r\n      const e = this.$store.getters['calendar/getEvent'](event.id)\r\n      this.$store.dispatch('calendar/eventDragged', {event, date})\r\n    },\r\n    formatoFechas(){\r\n      this.startDate_send =  moment(this.startDate, 'DD/MM/YYYY HH:mm:ss').format('YYYY-MM-DD HH:mm:ss');\r\n      this.endDate_send =  moment(this.endDate, 'DD/MM/YYYY HH:mm:ss').format('YYYY-MM-DD HH:mm:ss');\r\n      // alert(' frmat:  '+this.endDate_send)\r\n    }\r\n  },\r\n  created () {\r\n    this.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n\r\n    this.$store.registerModule('calendar', moduleCalendar)\r\n    this.$store.dispatch('calendar/fetchEvents')\r\n    this.$store.dispatch('calendar/fetchEventLabels')\r\n  },\r\n  beforeDestroy () {\r\n    this.$store.unregisterModule('calendar')\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import \"@/assets/scss/vuexy/apps/simple-calendar.scss\";\r\n</style>\r\n"]}]}