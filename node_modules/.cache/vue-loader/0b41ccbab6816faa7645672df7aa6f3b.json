{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\usuarios\\tipos\\usuariosPerfil.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\usuarios\\tipos\\usuariosPerfil.vue","mtime":1712682816672},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nimport vSelect from 'vue-select';\r\nimport editarUsuarioVue from './components/editarUsuario.vue';\r\nexport default {\r\n    data() {\r\n        return {\r\n            usuarios: {},\r\n            arregloFacturadores: [],\r\n            //para el reporte excel\r\n            fileName: null,\r\n            activePrompt: false,\r\n            codigoSelected: [],\r\n            reportesActivo: 0,\r\n            fileName: null,\r\n            formats: ['xls', 'xlsx', 'csv', 'txt'],\r\n            cellAutoWidth: true,\r\n            selectedFormat: 'xls',\r\n            //fin variables para exportar\r\n            cedula: 0,\r\n            lookInstituciones: false,\r\n            instituciones: [],\r\n            popupActivo: false,\r\n            listaPerfiles: [],\r\n            perfilSelect: '',\r\n            listaTodosUsuarios: [],\r\n        }\r\n    },\r\n    components: {\r\n        editarUsuarioVue,\r\n        'v-select': vSelect,\r\n    },\r\n    props: {\r\n        periodo_idSierra: {\r\n            type: Number,\r\n            default: 0,\r\n        },\r\n        periodo_idCosta: {\r\n            type: Number,\r\n            default: 0,\r\n        },\r\n    },\r\n    created() {\r\n        let me = this;\r\n        me.$http.get(me.$server_url + 'institucionesResportes').then(res => {\r\n            me.instituciones = res.data;\r\n        })\r\n    },\r\n    mounted() {\r\n        let me = this;\r\n        me.f_getPerfiles();\r\n    },\r\n    methods: {\r\n        changeHandleEditar() {\r\n            let me = this;\r\n            me.f_get_Usuarios()\r\n            // me.popupActivo = false\r\n        },\r\n        //editar\r\n        getEdit(data = {}) {\r\n            let me = this;\r\n            me.usuarios = data\r\n        },\r\n        verInstituciones(tr) {\r\n            let me = this;\r\n            me.cedula = tr.cedula;\r\n            me.lookInstituciones = true;\r\n        },\r\n        //para limipiar los campos del excel\r\n        clearFields() {\r\n            this.fileName = ''\r\n            this.cellAutoWidth = true\r\n            this.selectedFormat = 'xls'\r\n        },\r\n        //metodo par descargar el excel\r\n        exportToExcel() {\r\n            let headerTitle = ['Nombres','Apellidos','Usuario', 'Cedula', 'Email','Grupo', 'Estado'];\r\n            let headerVal = ['nombres','apellidos','name_usuario','cedula','email', 'grupo', 'nombreestado'];\r\n            let codigoSelectedMayus = this.codigoSelected\r\n            for (var i = 0; i < codigoSelectedMayus.length; i++) {\r\n                for (var key in codigoSelectedMayus[i]) {\r\n                    if (typeof codigoSelectedMayus[i][key] == \"string\") {\r\n                        codigoSelectedMayus[i][key] = codigoSelectedMayus[i][key].toUpperCase();\r\n                    }\r\n                }\r\n            }\r\n            import('@/vendor/Export2Excel').then(excel => {\r\n                const list = codigoSelectedMayus\r\n                const data = this.formatJson(headerVal, list)\r\n                excel.export_json_to_excel({\r\n                    header: headerTitle,\r\n                    data,\r\n                    filename: this.fileName,\r\n                    autoWidth: this.cellAutoWidth,\r\n                    bookType: this.selectedFormat\r\n                })\r\n                this.clearFields()\r\n                this.guardarActivo = '';\r\n                this.generarActivo = ' ';\r\n                this.textAlertCant = '';\r\n                this.cantidad = '';\r\n                this.codigoSelected = [];\r\n            })\r\n        },\r\n        formatJson(filterVal, jsonData) {\r\n            return jsonData.map(v => filterVal.map(j => {\r\n                return v[j]\r\n            }))\r\n        },\r\n        f_getPerfiles() {\r\n            let me = this;\r\n            me.$vs.loading();\r\n            this.$http.get(this.$server_url + 'obtenerPerfiles')\r\n                .then(function (res) {\r\n                    console.log(res.data)\r\n                    me.listaPerfiles = res.data\r\n                    me.$vs.loading.close();\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                    me.$vs.loading.close();\r\n                })\r\n        },\r\n        f_get_Usuarios() {\r\n            let me = this;\r\n            if(me.perfilSelect == null || me.perfilSelect == \"\" || me.perfilSelect == undefined ){\r\n                me.$vs.notify({\r\n                text:'Seleccione un perfil por favor',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n                return\r\n            }\r\n            me.$vs.loading();\r\n            me.popupActivo = false;\r\n            this.$http.get(this.$server_url + 'getUsuariosPorRol/' + me.perfilSelect.id)\r\n                .then(function (res) {\r\n                    console.log(res.data)\r\n                    me.arregloFacturadores = res.data\r\n                    me.$vs.loading.close();\r\n                })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close();\r\n                    console.log(error + ' error');\r\n                })\r\n        }\r\n    }\r\n}\r\n",{"version":3,"sources":["usuariosPerfil.vue"],"names":[],"mappingsfile":"usuariosPerfil.vue","sourceRoot":"src/views/usuarios/tipos","sourcesContent":["<template>\r\n<vx-card>\r\n    <div>\r\n        <p class=\"text-primary text-2xl font-medium\">Lista de usuarios total</p>\r\n        <vs-divider></vs-divider>\r\n        <div class=\"m-2 mb-4\">\r\n            <small>Seleccione un perfil: </small>\r\n            <v-select :options=\"listaPerfiles\" label=\"level\" class=\"w-full\" v-model=\"perfilSelect\" @input=\"f_get_Usuarios(perfilSelect)\" />\r\n        </div>\r\n        <vs-table multiple stripe v-model=\"codigoSelected\" pagination max-items=\"25\" search :data=\"arregloFacturadores\">\r\n            <template slot=\"header\">\r\n                <div style=\"display:flex;\">\r\n                    <vs-chip color=\"success\" style=\"font-size:12px;\">\r\n                        Total: {{arregloFacturadores.length}}\r\n                    </vs-chip>\r\n                    <vs-button color=\"warning\" type=\"line\" icon=\"description\" size=\"small\" class=\"mr-5 ml-3\" style=\"font-size: 14px;\" @click=\"activePrompt=true;\">Exportar</vs-button>\r\n                </div>\r\n            </template>\r\n            <template slot=\"thead\">\r\n                <vs-th sort-key=\"asesor\">#</vs-th>\r\n                <vs-th sort-key=\"asesor\">Usuario</vs-th>\r\n                <vs-th sort-key=\"grupo\">Grupo</vs-th>\r\n                <vs-th>Acciones</vs-th>\r\n            </template>\r\n            <template slot-scope=\"{data}\">\r\n                <vs-tr :data=\"tr\" :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                    <vs-td :data=\"data[indextr].id\">\r\n                        {{data[indextr].idusuario}}\r\n                    </vs-td>\r\n                    <vs-td :data=\"data[indextr].Nombres\">\r\n                        <!-- <span class=\"font-bold\">Nombres:</span> -->\r\n                        <p>{{data[indextr].usuario}}</p>\r\n                        <span class=\"font-bold\">Usuario:</span>\r\n                        <p>{{data[indextr].name_usuario}}</p>\r\n                        <span class=\"font-bold\">Clave:</span>\r\n                        <p>{{data[indextr].cedula}}</p>\r\n                    </vs-td>\r\n                    <vs-td :data=\"data[indextr].grupo\">\r\n                        <vs-chip color=\"warning\" v-if=\"data[indextr].capacitador == 1\">\r\n                            Capacitador\r\n                        </vs-chip> <br /><br />\r\n                        <vs-chip color=\"success\">\r\n                            {{data[indextr].grupo}}\r\n                        </vs-chip> <br /><br />\r\n                        <span :class=\"data[indextr].estado_idEstado == 1 ? 'text-dark' : 'text-danger' \">\r\n                            {{data[indextr].nombreestado}}\r\n                        </span>\r\n                    </vs-td>\r\n                    <vs-td>\r\n                        <div class=\"flex\">\r\n                            <vx-tooltip style=\"display: inline-block;\" text=\"editar\" position=\"top\" color=\"warning\">\r\n                                <vs-button type=\"line\" size=\"small\" icon-pack=\"feather\" icon=\"icon-edit\" color=\"warning\" @click=\"popupActivo=true;getEdit(tr)\"></vs-button>\r\n                            </vx-tooltip>\r\n                        </div>\r\n                    </vs-td>\r\n                </vs-tr>\r\n            </template>\r\n        </vs-table>\r\n    </div>\r\n    <!--MODAL PARA EXPORTAR A EXCEL-->\r\n    <vs-prompt title=\"Exportar a Excel\" class=\"export-options\" @cancel=\"clearFields\" @accept=\"exportToExcel\" accept-text=\"Exportar\" @close=\"clearFields\" :active.sync=\"activePrompt\">\r\n        <vs-alert class=\"mb-3\" color=\"danger\" icon-pack=\"feather\" icon=\"icon-info\">\r\n            <span>Recuerde <b>seleccionar</b> los registros que desea exportar.</span>\r\n        </vs-alert>\r\n        <vs-input v-model=\"fileName\" placeholder=\"Ingrese el nombre del archivo\" class=\"w-full\" />\r\n        <v-select v-model=\"selectedFormat\" :options=\"formats\" class=\"my-4\" />\r\n        <div class=\"flex\">\r\n        </div>\r\n    </vs-prompt>\r\n    <!--Modal de Editar-->\r\n    <vs-popup class=\"editpop\" title=\"Editar\" :active.sync=\"popupActivo\" fullscreen>\r\n        <editarUsuarioVue @saveChange=\"changeHandleEditar\" :usuarios=\"usuarios\" :instituciones=\"instituciones\" />\r\n    </vs-popup>\r\n</vx-card>\r\n</template>\r\n\r\n<script>\r\nimport vSelect from 'vue-select';\r\nimport editarUsuarioVue from './components/editarUsuario.vue';\r\nexport default {\r\n    data() {\r\n        return {\r\n            usuarios: {},\r\n            arregloFacturadores: [],\r\n            //para el reporte excel\r\n            fileName: null,\r\n            activePrompt: false,\r\n            codigoSelected: [],\r\n            reportesActivo: 0,\r\n            fileName: null,\r\n            formats: ['xls', 'xlsx', 'csv', 'txt'],\r\n            cellAutoWidth: true,\r\n            selectedFormat: 'xls',\r\n            //fin variables para exportar\r\n            cedula: 0,\r\n            lookInstituciones: false,\r\n            instituciones: [],\r\n            popupActivo: false,\r\n            listaPerfiles: [],\r\n            perfilSelect: '',\r\n            listaTodosUsuarios: [],\r\n        }\r\n    },\r\n    components: {\r\n        editarUsuarioVue,\r\n        'v-select': vSelect,\r\n    },\r\n    props: {\r\n        periodo_idSierra: {\r\n            type: Number,\r\n            default: 0,\r\n        },\r\n        periodo_idCosta: {\r\n            type: Number,\r\n            default: 0,\r\n        },\r\n    },\r\n    created() {\r\n        let me = this;\r\n        me.$http.get(me.$server_url + 'institucionesResportes').then(res => {\r\n            me.instituciones = res.data;\r\n        })\r\n    },\r\n    mounted() {\r\n        let me = this;\r\n        me.f_getPerfiles();\r\n    },\r\n    methods: {\r\n        changeHandleEditar() {\r\n            let me = this;\r\n            me.f_get_Usuarios()\r\n            // me.popupActivo = false\r\n        },\r\n        //editar\r\n        getEdit(data = {}) {\r\n            let me = this;\r\n            me.usuarios = data\r\n        },\r\n        verInstituciones(tr) {\r\n            let me = this;\r\n            me.cedula = tr.cedula;\r\n            me.lookInstituciones = true;\r\n        },\r\n        //para limipiar los campos del excel\r\n        clearFields() {\r\n            this.fileName = ''\r\n            this.cellAutoWidth = true\r\n            this.selectedFormat = 'xls'\r\n        },\r\n        //metodo par descargar el excel\r\n        exportToExcel() {\r\n            let headerTitle = ['Nombres','Apellidos','Usuario', 'Cedula', 'Email','Grupo', 'Estado'];\r\n            let headerVal = ['nombres','apellidos','name_usuario','cedula','email', 'grupo', 'nombreestado'];\r\n            let codigoSelectedMayus = this.codigoSelected\r\n            for (var i = 0; i < codigoSelectedMayus.length; i++) {\r\n                for (var key in codigoSelectedMayus[i]) {\r\n                    if (typeof codigoSelectedMayus[i][key] == \"string\") {\r\n                        codigoSelectedMayus[i][key] = codigoSelectedMayus[i][key].toUpperCase();\r\n                    }\r\n                }\r\n            }\r\n            import('@/vendor/Export2Excel').then(excel => {\r\n                const list = codigoSelectedMayus\r\n                const data = this.formatJson(headerVal, list)\r\n                excel.export_json_to_excel({\r\n                    header: headerTitle,\r\n                    data,\r\n                    filename: this.fileName,\r\n                    autoWidth: this.cellAutoWidth,\r\n                    bookType: this.selectedFormat\r\n                })\r\n                this.clearFields()\r\n                this.guardarActivo = '';\r\n                this.generarActivo = ' ';\r\n                this.textAlertCant = '';\r\n                this.cantidad = '';\r\n                this.codigoSelected = [];\r\n            })\r\n        },\r\n        formatJson(filterVal, jsonData) {\r\n            return jsonData.map(v => filterVal.map(j => {\r\n                return v[j]\r\n            }))\r\n        },\r\n        f_getPerfiles() {\r\n            let me = this;\r\n            me.$vs.loading();\r\n            this.$http.get(this.$server_url + 'obtenerPerfiles')\r\n                .then(function (res) {\r\n                    console.log(res.data)\r\n                    me.listaPerfiles = res.data\r\n                    me.$vs.loading.close();\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                    me.$vs.loading.close();\r\n                })\r\n        },\r\n        f_get_Usuarios() {\r\n            let me = this;\r\n            if(me.perfilSelect == null || me.perfilSelect == \"\" || me.perfilSelect == undefined ){\r\n                me.$vs.notify({\r\n                text:'Seleccione un perfil por favor',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n                return\r\n            }\r\n            me.$vs.loading();\r\n            me.popupActivo = false;\r\n            this.$http.get(this.$server_url + 'getUsuariosPorRol/' + me.perfilSelect.id)\r\n                .then(function (res) {\r\n                    console.log(res.data)\r\n                    me.arregloFacturadores = res.data\r\n                    me.$vs.loading.close();\r\n                })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close();\r\n                    console.log(error + ' error');\r\n                })\r\n        }\r\n    }\r\n}\r\n</script>\r\n"]}]}