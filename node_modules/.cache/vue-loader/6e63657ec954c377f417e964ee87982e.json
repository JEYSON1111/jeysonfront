{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\salle\\docente\\evaluaciones\\RevisarEvaluacionSalle.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\salle\\docente\\evaluaciones\\RevisarEvaluacionSalle.vue","mtime":1712682816538},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\n  import imageZoom from 'vue-image-zoomer';\r\n  import vSelect from 'vue-select'\r\n  import $ from 'jquery'\r\n  var x = null;\r\n  export default {\r\n      data(){\r\n        return {\r\n          usuario: [],\r\n          evaluacion: [],\r\n          area_activa: 0,\r\n          opciones: [],\r\n          opciones_check: {},\r\n          id_evaluacion: '',\r\n          evaluacion_activa: 0,\r\n          alerta_evaluacion: '',\r\n          revision_activa: false,\r\n          configuracion: [],\r\n          color_overlay: '',\r\n          text_overlay: '',\r\n          tiempo_evaluacion: 0,\r\n          calificacion: 0,\r\n          dataaaa: [],\r\n          current_preg: [],\r\n          revisa_admin_salle: 0,\r\n          datos_docente_revisando: '',\r\n          arregloPeriodos:[],\r\n          user:{},\r\n          //variables para mostrar la imagen\r\n          dataPregunta:'',\r\n          popupMostrarImagen:false,\r\n        }\r\n      },\r\n      components: {\r\n        'v-select': vSelect,\r\n        imageZoom,\r\n      },\r\n      props:{\r\n        user:{\r\n          type:Object,\r\n          default:{}\r\n        },\r\n      },\r\n      created(){\r\n        let me = this\r\n        me.getPeriodosEvaluacion()\r\n        me.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n        me.tipo_revisar_activo = 0\r\n        // me.tipo_revisar_activo = localStorage.tipo_revisar\r\n        me.revisa_admin_salle = localStorage.revisa_admin_salle\r\n        me.datos_docente_revisando = localStorage.datos_docente_revisando\r\n        me.generarEvaluacion()\r\n        me.getConfiguracion()\r\n      },\r\n      methods: {\r\n        getPeriodosEvaluacion() {\r\n          let me = this;\r\n          this.$http.get(this.$server_url+'salle/periodos')\r\n            .then(function (response) {\r\n              me.arregloPeriodos = response.data;\r\n            })\r\n            .catch(function (error) {\r\n            })\r\n        },\r\n        async generarEvaluacion(){\r\n          let me = this\r\n          me.color_overlay = '#22c16b'\r\n          me.text_overlay = 'Estamos preparando su evaluación, no tomará mucho tiempo'\r\n          me.$vs.loading({ background: me.color_overlay, color: 'rgb(255, 255, 255)',  type: 'sound', text: me.text_overlay })\r\n          await this.$http.get(this.$server_url+'generar_evaluacion_salle/' + me.user.idusuario+'/'+me.user.institucion_idInstitucion+'/'+localStorage.EvaluacionSelectSalle+'/1')\r\n          .then(res => {\r\n            if(res.data.length == 0){\r\n              me.alerta_evaluacion = 'No hay preguntas cargadas en las asignaturas'\r\n              return\r\n            }\r\n            if( res.data === 0 ){\r\n              me.evaluacion_activa = 0\r\n              me.revision_activa = true\r\n              me.alerta_evaluacion = 'Lo sentimos el tiempo para resolver esta evaluación ha terminado.'\r\n              me.$vs.loading.close()\r\n              return\r\n            }\r\n            if( res.data === 1 ){\r\n              me.evaluacion_activa = 0\r\n              me.revision_activa = true\r\n              me.alerta_evaluacion = 'La institución a la que pertenece necesita ser configurada, por favor comuníquese con el administrador del sistema.'\r\n              me.$vs.loading.close()\r\n              return\r\n            }\r\n            // if( res.data === 2 ){\r\n            //   me.evaluacion_activa = 0\r\n            //   me.revision_activa = true\r\n            //   me.alerta_evaluacion = 'Su evaluación ha finalizado.'\r\n            //   me.$vs.loading.close()\r\n            //   return\r\n            // }\r\n            me.evaluacion         = res.data\r\n            me.evaluacion_activa  = 1\r\n            me.$vs.loading.close()\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n            me.$vs.loading.close()\r\n          })\r\n        },\r\n        getConfiguracion(){\r\n          let me = this\r\n          var InstitucionUser = \"\"\r\n          InstitucionUser = me.user.institucion_idInstitucion\r\n          me.$http.get(this.$server_url+'salle_getConfiguracion/' + InstitucionUser+'/'+localStorage.EvaluacionSelectSalle)\r\n          .then(res => {\r\n            me.configuracion = res.data.configuracion[0]\r\n            // alert(me.configuracion.ver_respuestas +'  &&  '+ me.tipo_revisar_activo)\r\n            if( me.configuracion.ver_respuestas == 0 && me.tipo_revisar_activo == 1 ){\r\n              console.log('no puede ver las preguntas')\r\n              me.alerta_evaluacion = 'La revisión de sus evaluaciones está desactivada.'\r\n              if( me.revisa_admin_salle != 1 ){ // cuando revisa el admin no se bloquea\r\n                me.evaluacion_activa = 0\r\n              }\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n              console.log(error);\r\n          })\r\n        },\r\n        ver_area(index){\r\n          let me = this\r\n          for( var i=0; i<me.evaluacion.areas.length; i++ ){\r\n            document.getElementById(\"area_activa\"+i).style.display = \"none\";\r\n          }\r\n          document.getElementById(\"area_activa\"+index).style.display = \"block\";\r\n        },\r\n        async guardarSeleccion(tipo_pregunta, item, opciones, puntaje){\r\n          let me = this\r\n          if( me.tipo_revisar_activo === 1 ){ return } // no se guardan las respuestas en modo revision\r\n          // se obtiene la cantidad de opciones correctas de la pregunta respondida\r\n          let cant_correctas = 0\r\n          $.each(opciones, function(key, value){\r\n            if(value.tipo === 1){\r\n                cant_correctas++\r\n            }\r\n          })\r\n          let opciones_seleccionadas = []\r\n          $.each(me.opciones_check, function(key, value){\r\n            for( var i=0; i<opciones.length; i++ ){\r\n              if( key == opciones[i].id_opcion_pregunta ){\r\n                if(value !== false ){\r\n                    opciones_seleccionadas.push(key)\r\n                }\r\n              }\r\n            }\r\n          })\r\n          let puntaje_seleccion = 0\r\n          // alert(opciones_seleccionadas.length +' <= '+ cant_correctas)\r\n          if( opciones_seleccionadas.length <= cant_correctas ){\r\n            if( item.tipo === 1 ){\r\n              //si la opcion seleccionada es de tipo correcta y no ha excedido la cantidad de opciones correctas\r\n              puntaje_seleccion = (parseFloat(puntaje)/cant_correctas).toFixed(2)\r\n              // alert('puntaje_seleccion bien: ' + puntaje_seleccion)\r\n            }\r\n          }else{\r\n            // se le resta el puntaje cuando selecciona mas opciones de las correctas\r\n            puntaje_seleccion = parseFloat(puntaje)*(-1)\r\n            // alert('puntaje_seleccion else: ' + puntaje_seleccion)\r\n          }\r\n          let dataSeleccion = {\r\n            id_evaluacion: me.id_evaluacion,\r\n            id_usuario: me.usuario.idusuario,\r\n            id_pregunta: item.id_pregunta,\r\n            id_opcion_pregunta: item.id_opcion_pregunta,\r\n            tipo_pregunta: tipo_pregunta,\r\n            puntaje_seleccion: puntaje_seleccion\r\n          }\r\n          await me.$http.post(this.$server_url+'salle_guardarSeleccion', dataSeleccion)\r\n          .then(res => {\r\n            console.log(res)\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          })\r\n        },\r\n        openConfirm() {\r\n          let me = this;\r\n          me.popupConfirmStart = true\r\n        },\r\n        acceptAlert() {\r\n          let me = this\r\n           if(me.intentosEvaluacion > 1){\r\n            me.popupConfirmStart = false\r\n            this.saveIntento()\r\n            me.generarEvaluacion()\r\n            return\r\n          }\r\n          me.popupConfirmStart = false\r\n          this.saveIntento()\r\n          document.getElementById(\"area_activa0\").style.display = \"block\";\r\n          this.f_tiempo()\r\n        },\r\n        saveIntento(){\r\n          let me = this;\r\n          //si es docentes cuantos los intentos\r\n          if(me.usuario.id_group == 13){\r\n            let formData = new FormData();\r\n            formData.append('id_evaluacion',me.id_evaluacion);\r\n            formData.append('id_usuario',   me.usuario.idusuario)\r\n            formData.append('intentosEval', me.intentosEvaluacion)\r\n            this.$http.post(this.$server_url+'save_finalizar_evalIntentos', formData)\r\n            .then(res => {\r\n              me.intentosEvaluacion = res.data.intentos\r\n            })\r\n          }\r\n        },\r\n        paginacion(index, tam, asign_content){\r\n          let me = this;\r\n          for( let i=1; i<=tam; i++ ){\r\n              $('#'+asign_content+''+i).css('display', 'none')\r\n          }\r\n          $('#'+asign_content+''+me.current_preg[index]).css('display', 'block')\r\n        }\r\n      },\r\n  }\r\n",{"version":3,"sources":["RevisarEvaluacionSalle.vue"],"names":[],"mappingsfile":"RevisarEvaluacionSalle.vue","sourceRoot":"src/views/salle/docente/evaluaciones","sourcesContent":["<template>\r\n  <div class=\"vx-row w-full p-3\">\r\n    <div class=\"vx-col sm:w-3/4 w-full\">\r\n    <!-- ENCABEZADO -->\r\n    <vx-card v-bind:title=\"evaluacion.nombreasignatura\" title-color=\"primary\">\r\n      <div class=\"vx-row w-full\">\r\n        <div class=\"vx-col sm:w-1/4 w-full\">\r\n            <img src=\"https://plataforma.prolipadigital.com.ec/img/prolipa.a3e6ff1b.png\" style=\"max-width: 200px; border-radius: 5px;\">\r\n        </div>\r\n        <div class=\"vx-col sm:w-3/4 w-full pt-3 text-right\">\r\n            <div><b>Estudiantes:</b> {{user.nombres}} {{user.apellidos}} - {{user.cedula}}<br></div>\r\n\r\n            <b class=\"mt-1\">Inicia:</b> {{configuracion.fecha_inicio}} - <b class=\"ml-1\">Finaliza:</b> {{ configuracion.fecha_fin}} <br>\r\n            <b>Observaciones: </b> <span v-if=\"configuracion.observaciones !== null && configuracion.observaciones != 'null'\">{{configuracion.observaciones}}</span>\r\n            <div class=\"mt-1\">\r\n              <p v-for=\"(item,key) in arregloPeriodos\" :key=\"key\">\r\n                <span v-if=\"item.id == configuracion.n_evaluacion\"><b>Evaluación Seleccionada:</b> <span class=\"ml-1\">{{ item.nombre }}</span></span>\r\n              </p>\r\n              <br>\r\n            </div>\r\n            <p class=\"flex justify-end\">\r\n              <vs-chip color=\"warning\" v-if=\"user.id_evaluacion == null || user.id_evaluacion == 'null'\">Evaluación aun no realizada</vs-chip>\r\n              <vs-chip color=\"success\" v-else>Evaluación realizada</vs-chip>\r\n            </p>\r\n          </div>\r\n      </div>\r\n    </vx-card>\r\n    <!-- FIN ENCABEZADO -->\r\n    <!-- SECCION RESPONDER PREGUNTAS -->\r\n    <vx-card class=\"mt-5 mb-6 text-center\" v-if=\"evaluacion_activa==1\">\r\n      <div>\r\n        <vs-button type=\"line\" v-for=\"(itemR, indexR) in evaluacion.areas\" :key=\"indexR\" @click=\"ver_area(indexR)\" class=\"m-1\"> {{itemR.area.nombre_area}} </vs-button>\r\n      </div>\r\n      <div v-for=\"(item, index) in evaluacion.areas\" :key=\"index\">\r\n        <div v-bind:id=\"'area_activa'+index\" style=\"display: none;\" class=\"mt-6 text-left\">\r\n            <h5 class=\"ml-5\">Asignaturas área: {{item.area.nombre_area}}</h5>\r\n            <vs-collapse type=\"margin\">\r\n            <vs-collapse-item v-for=\"(itemA, indexA) in item[0].asignaturas\" :key=\"indexA\">\r\n                <div slot=\"header\"> Preguntas - {{itemA.asignatura.nombre_asignatura}} </div>\r\n                <div  style=\"overflow-y: scroll; height:600px;\" id=\"div_pregunta\">\r\n                <!-- <div  style=\"overflow-y: scroll; height:450px;\" id=\"div_pregunta\"> -->\r\n                <div v-for=\"(itemP, indexP) in itemA[0].preguntas\" :key=\"indexP\" class=\"w-full mb-2\">\r\n                <div :id=\"itemA.asignatura.id_asignatura+''+(indexP+1)\" class=\"w-full p-3\" style=\"display: none; min-height: 380px; vertical-align: top; background: rgb(64,105,213); background: radial-gradient(circle, rgba(64,105,213,0.073564459963673) 20%, rgba(0,101,228,0.16600143475358897) 87%);\">\r\n                    <div class=\"mt-2\" style=\"font-size: 17px; min-height: 50px;\" align=\"justify\"> <b><span v-html=\"itemP.pregunta.descripcion\"></span></b> </div>\r\n                    <div class=\"mb-base text-right\">\r\n                        Pregunta de {{itemP.pregunta.nombre_tipo}} sobre {{itemP.pregunta.puntaje_pregunta}} pts.\r\n                    </div>\r\n                    <img v-if=\"itemP.pregunta.img_pregunta !== null && itemP.pregunta.img_pregunta !== 'null' && itemP.pregunta.img_pregunta !== ''\" :src=\"$data_url+'archivos/img/salle/img_preguntas/'+itemP.pregunta.img_pregunta\" style=\"max-width: 400px; border-radius: 5px; mix-blend-mode: multiply;\" class=\"mb-base\">\r\n\r\n                    <div v-if=\"itemP.pregunta.id_tipo_pregunta === 1\" class=\"m-3\" style=\"font-size: 15px;\">\r\n                        <div>\r\n                            <!-- se carga array de preguntas de seleccion multiple -->\r\n                            <div v-for=\"(itemRes, indexRes) in itemP.respuestas\" :key=\"indexRes\" style=\"display: none;\">\r\n                                {{opciones_check[itemRes.respuesta] = itemRes.respuesta}}\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"text-left mb-5\" v-for=\"(itemO, indexO) in itemP.opciones\" :key=\"indexO\">\r\n                            <div style=\"width: 10%; display: inline-block;\" align=\"center\">\r\n                                <span v-if=\"itemO.tipo == 1\" style=\"color: #3DE090; font-size: 18px;\">✔</span>\r\n                                <span v-if=\"itemO.tipo == 0\" style=\"color: #E73A5A; font-size: 18px;\"><b>X</b></span>\r\n                            </div>\r\n\r\n                            <div style=\"width: 85%; display: inline-block; text-align: left;\" align=\"left\">\r\n                                <vs-checkbox  disabled=\"true\" v-model=\"opciones_check[itemO.id_opcion_pregunta]\" :vs-value=\"itemO.id_opcion_pregunta\" @input=\"guardarSeleccion(1, itemO, itemP.opciones, itemP.pregunta.puntaje_pregunta)\">\r\n                                    {{itemO.opcion}}\r\n                                    <img v-if=\"itemO.img_opcion !== null && itemO.itemO !== 'null' && itemO.itemO !== ''\" :src=\"$data_url+'archivos/img/salle/img_preguntas/'+itemO.img_opcion\" alt=\"\">\r\n                                </vs-checkbox>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div v-if=\"itemP.pregunta.id_tipo_pregunta === 3 || itemP.pregunta.id_tipo_pregunta === 5\"  class=\"m-3\" style=\"font-size: 15px;\">\r\n                        <div>\r\n                          <!-- se carga array de preguntas de opcion simple -->\r\n                          <div v-for=\"(itemRes, indexRes) in itemP.respuestas\" :key=\"indexRes\" style=\"display: none;\">\r\n                              {{opciones[itemRes.id_pregunta] = itemRes.respuesta}}\r\n                          </div>\r\n                        </div>\r\n                        <ul class=\"justify\" v-for=\"(itemO, indexO) in itemP.opciones\" :key=\"indexO\">\r\n                            <li class=\"mb-5\">\r\n                            <div style=\"width: 10%; display: inline-block;\" align=\"center\">\r\n                            <span v-if=\"itemO.tipo == 1\" style=\"color: #3DE090; font-size: 18px;\">✔</span>\r\n                            <span v-else style=\"color: #E73A5A; font-size: 18px;\"><b>X</b></span>\r\n                            </div>\r\n                            <div style=\"width: 85%; display: inline-block;\">\r\n                            <vs-radio disabled=\"true\" v-model=\"opciones[itemO.id_pregunta]\" :vs-value=\"itemO.id_opcion_pregunta\" @input=\"guardarSeleccion(3, itemO, itemP.opciones, itemP.pregunta.puntaje_pregunta)\">\r\n                                {{itemO.opcion}}\r\n                                <img v-if=\"itemO.img_opcion !== null && itemO.itemO !== 'null' && itemO.itemO !== ''\" :src=\"$data_url+'archivos/img/salle/img_preguntas/'+itemO.img_opcion\" alt=\"\">\r\n                            </vs-radio>\r\n                            </div>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n\r\n                </div>\r\n                </div>\r\n                <vs-pagination :total=\"itemA[0].preguntas.length\" v-model=\"current_preg[indexA]\" @input=\"paginacion(indexA, itemA[0].preguntas.length, itemA.asignatura.id_asignatura)\"></vs-pagination>\r\n                </div>\r\n            </vs-collapse-item>\r\n            </vs-collapse>\r\n        </div>\r\n      </div>\r\n    </vx-card>\r\n    <vx-card class=\"mt-5 mb-6 text-center p-5\" v-else>\r\n      <br>\r\n      <h5> {{alerta_evaluacion}} </h5>\r\n      <br><br>\r\n      <vs-button color=\"success\" type=\"border\" class=\"m-2\" @click=\"$emit('changeReturn',true)\"><b>← Volver</b></vs-button>\r\n      <!-- <br><br>\r\n      <h5 v-if=\"tipo_revisar_activo!=1\">Si no visualiza su evaluación, recargue la página.</h5> -->\r\n    </vx-card>\r\n    <!-- FIN SECCION RESPONDER PREGUNTAS -->\r\n    </div>\r\n    <!-- SECCION TIEMPO, NAVEGACION -->\r\n    <div class=\"vx-col sm:w-1/4 w-full\">\r\n      <vx-card v-if=\"evaluacion_activa==1\">\r\n        <div align=\"center\">\r\n        <div class=\"reloj mb-6 mt-4\" style=\"font-size: 40px; color: #2974FE;\"></div>\r\n        <div class=\"mb-3\">\r\n            <vs-button color=\"success\" type=\"border\" class=\"m-1\" @click=\"$emit('changeReturn',true)\"><b>← Volver</b></vs-button>\r\n        </div>\r\n        </div>\r\n      </vx-card>\r\n    </div>\r\n    <!--MODAL PARA MOSTRAR LA IMAGEN DE LA PREGUNTA-->\r\n    <vs-popup class=\"holamundo\" title=\"Mostrar imagen\" :active.sync=\"popupMostrarImagen\">\r\n      <div class=\"flex\" style=\"justify-content: center;\" v-if=\"popupMostrarImagen\">\r\n        <image-zoom\r\n            :regular=\"$data_url+'archivos/img/salle/img_preguntas/'+dataPregunta.pregunta.img_pregunta\"\r\n            :zoom-amount=\"3\"\r\n            :click-zoom=\"true\"\r\n            click-message=\"De click para aumentar\"\r\n            img-class=\"img-fluid\"\r\n            >\r\n        </image-zoom>\r\n      </div>\r\n    </vs-popup>\r\n  </div>\r\n</template>\r\n<style>\r\n/* width */\r\n#div_pregunta::-webkit-scrollbar {\r\nwidth: 10px;\r\n}\r\n\r\n/* Track */\r\n#div_pregunta::-webkit-scrollbar-track {\r\nbox-shadow: inset 0 0 5px rgb(211, 207, 241);\r\nborder-radius: 10px;\r\n}\r\n\r\n/* Handle */\r\n#div_pregunta::-webkit-scrollbar-thumb {\r\nbackground: #2e85e9;\r\nborder-radius: 10px;\r\n}\r\n\r\n/* Handle on hover */\r\n#div_pregunta::-webkit-scrollbar-thumb:hover {\r\nbackground: #2e85e9;\r\n}\r\n/* CSS */\r\n.button-7 {\r\nbackground-color: #0095ff;\r\nborder: 1px solid transparent;\r\nborder-radius: 3px;\r\nbox-shadow: rgba(255, 255, 255, .4) 0 1px 0 0 inset;\r\nbox-sizing: border-box;\r\ncolor: #fff;\r\ncursor: pointer;\r\ndisplay: inline-block;\r\nfont-family: -apple-system,system-ui,\"Segoe UI\",\"Liberation Sans\",sans-serif;\r\nfont-size: 13px;\r\nfont-weight: 400;\r\nline-height: 1.15385;\r\nmargin: 0;\r\noutline: none;\r\npadding: 8px .8em;\r\nposition: relative;\r\ntext-align: center;\r\ntext-decoration: none;\r\nuser-select: none;\r\n-webkit-user-select: none;\r\ntouch-action: manipulation;\r\nvertical-align: baseline;\r\nwhite-space: nowrap;\r\n}\r\n\r\n.button-7:hover,\r\n.button-7:focus {\r\nbackground-color: #07c;\r\n}\r\n\r\n.button-7:focus {\r\nbox-shadow: 0 0 0 4px rgba(0, 149, 255, .15);\r\n}\r\n\r\n.button-7:active {\r\nbackground-color: #0064bd;\r\nbox-shadow: none;\r\n}\r\n</style>\r\n<script>\r\n  import imageZoom from 'vue-image-zoomer';\r\n  import vSelect from 'vue-select'\r\n  import $ from 'jquery'\r\n  var x = null;\r\n  export default {\r\n      data(){\r\n        return {\r\n          usuario: [],\r\n          evaluacion: [],\r\n          area_activa: 0,\r\n          opciones: [],\r\n          opciones_check: {},\r\n          id_evaluacion: '',\r\n          evaluacion_activa: 0,\r\n          alerta_evaluacion: '',\r\n          revision_activa: false,\r\n          configuracion: [],\r\n          color_overlay: '',\r\n          text_overlay: '',\r\n          tiempo_evaluacion: 0,\r\n          calificacion: 0,\r\n          dataaaa: [],\r\n          current_preg: [],\r\n          revisa_admin_salle: 0,\r\n          datos_docente_revisando: '',\r\n          arregloPeriodos:[],\r\n          user:{},\r\n          //variables para mostrar la imagen\r\n          dataPregunta:'',\r\n          popupMostrarImagen:false,\r\n        }\r\n      },\r\n      components: {\r\n        'v-select': vSelect,\r\n        imageZoom,\r\n      },\r\n      props:{\r\n        user:{\r\n          type:Object,\r\n          default:{}\r\n        },\r\n      },\r\n      created(){\r\n        let me = this\r\n        me.getPeriodosEvaluacion()\r\n        me.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n        me.tipo_revisar_activo = 0\r\n        // me.tipo_revisar_activo = localStorage.tipo_revisar\r\n        me.revisa_admin_salle = localStorage.revisa_admin_salle\r\n        me.datos_docente_revisando = localStorage.datos_docente_revisando\r\n        me.generarEvaluacion()\r\n        me.getConfiguracion()\r\n      },\r\n      methods: {\r\n        getPeriodosEvaluacion() {\r\n          let me = this;\r\n          this.$http.get(this.$server_url+'salle/periodos')\r\n            .then(function (response) {\r\n              me.arregloPeriodos = response.data;\r\n            })\r\n            .catch(function (error) {\r\n            })\r\n        },\r\n        async generarEvaluacion(){\r\n          let me = this\r\n          me.color_overlay = '#22c16b'\r\n          me.text_overlay = 'Estamos preparando su evaluación, no tomará mucho tiempo'\r\n          me.$vs.loading({ background: me.color_overlay, color: 'rgb(255, 255, 255)',  type: 'sound', text: me.text_overlay })\r\n          await this.$http.get(this.$server_url+'generar_evaluacion_salle/' + me.user.idusuario+'/'+me.user.institucion_idInstitucion+'/'+localStorage.EvaluacionSelectSalle+'/1')\r\n          .then(res => {\r\n            if(res.data.length == 0){\r\n              me.alerta_evaluacion = 'No hay preguntas cargadas en las asignaturas'\r\n              return\r\n            }\r\n            if( res.data === 0 ){\r\n              me.evaluacion_activa = 0\r\n              me.revision_activa = true\r\n              me.alerta_evaluacion = 'Lo sentimos el tiempo para resolver esta evaluación ha terminado.'\r\n              me.$vs.loading.close()\r\n              return\r\n            }\r\n            if( res.data === 1 ){\r\n              me.evaluacion_activa = 0\r\n              me.revision_activa = true\r\n              me.alerta_evaluacion = 'La institución a la que pertenece necesita ser configurada, por favor comuníquese con el administrador del sistema.'\r\n              me.$vs.loading.close()\r\n              return\r\n            }\r\n            // if( res.data === 2 ){\r\n            //   me.evaluacion_activa = 0\r\n            //   me.revision_activa = true\r\n            //   me.alerta_evaluacion = 'Su evaluación ha finalizado.'\r\n            //   me.$vs.loading.close()\r\n            //   return\r\n            // }\r\n            me.evaluacion         = res.data\r\n            me.evaluacion_activa  = 1\r\n            me.$vs.loading.close()\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n            me.$vs.loading.close()\r\n          })\r\n        },\r\n        getConfiguracion(){\r\n          let me = this\r\n          var InstitucionUser = \"\"\r\n          InstitucionUser = me.user.institucion_idInstitucion\r\n          me.$http.get(this.$server_url+'salle_getConfiguracion/' + InstitucionUser+'/'+localStorage.EvaluacionSelectSalle)\r\n          .then(res => {\r\n            me.configuracion = res.data.configuracion[0]\r\n            // alert(me.configuracion.ver_respuestas +'  &&  '+ me.tipo_revisar_activo)\r\n            if( me.configuracion.ver_respuestas == 0 && me.tipo_revisar_activo == 1 ){\r\n              console.log('no puede ver las preguntas')\r\n              me.alerta_evaluacion = 'La revisión de sus evaluaciones está desactivada.'\r\n              if( me.revisa_admin_salle != 1 ){ // cuando revisa el admin no se bloquea\r\n                me.evaluacion_activa = 0\r\n              }\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n              console.log(error);\r\n          })\r\n        },\r\n        ver_area(index){\r\n          let me = this\r\n          for( var i=0; i<me.evaluacion.areas.length; i++ ){\r\n            document.getElementById(\"area_activa\"+i).style.display = \"none\";\r\n          }\r\n          document.getElementById(\"area_activa\"+index).style.display = \"block\";\r\n        },\r\n        async guardarSeleccion(tipo_pregunta, item, opciones, puntaje){\r\n          let me = this\r\n          if( me.tipo_revisar_activo === 1 ){ return } // no se guardan las respuestas en modo revision\r\n          // se obtiene la cantidad de opciones correctas de la pregunta respondida\r\n          let cant_correctas = 0\r\n          $.each(opciones, function(key, value){\r\n            if(value.tipo === 1){\r\n                cant_correctas++\r\n            }\r\n          })\r\n          let opciones_seleccionadas = []\r\n          $.each(me.opciones_check, function(key, value){\r\n            for( var i=0; i<opciones.length; i++ ){\r\n              if( key == opciones[i].id_opcion_pregunta ){\r\n                if(value !== false ){\r\n                    opciones_seleccionadas.push(key)\r\n                }\r\n              }\r\n            }\r\n          })\r\n          let puntaje_seleccion = 0\r\n          // alert(opciones_seleccionadas.length +' <= '+ cant_correctas)\r\n          if( opciones_seleccionadas.length <= cant_correctas ){\r\n            if( item.tipo === 1 ){\r\n              //si la opcion seleccionada es de tipo correcta y no ha excedido la cantidad de opciones correctas\r\n              puntaje_seleccion = (parseFloat(puntaje)/cant_correctas).toFixed(2)\r\n              // alert('puntaje_seleccion bien: ' + puntaje_seleccion)\r\n            }\r\n          }else{\r\n            // se le resta el puntaje cuando selecciona mas opciones de las correctas\r\n            puntaje_seleccion = parseFloat(puntaje)*(-1)\r\n            // alert('puntaje_seleccion else: ' + puntaje_seleccion)\r\n          }\r\n          let dataSeleccion = {\r\n            id_evaluacion: me.id_evaluacion,\r\n            id_usuario: me.usuario.idusuario,\r\n            id_pregunta: item.id_pregunta,\r\n            id_opcion_pregunta: item.id_opcion_pregunta,\r\n            tipo_pregunta: tipo_pregunta,\r\n            puntaje_seleccion: puntaje_seleccion\r\n          }\r\n          await me.$http.post(this.$server_url+'salle_guardarSeleccion', dataSeleccion)\r\n          .then(res => {\r\n            console.log(res)\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          })\r\n        },\r\n        openConfirm() {\r\n          let me = this;\r\n          me.popupConfirmStart = true\r\n        },\r\n        acceptAlert() {\r\n          let me = this\r\n           if(me.intentosEvaluacion > 1){\r\n            me.popupConfirmStart = false\r\n            this.saveIntento()\r\n            me.generarEvaluacion()\r\n            return\r\n          }\r\n          me.popupConfirmStart = false\r\n          this.saveIntento()\r\n          document.getElementById(\"area_activa0\").style.display = \"block\";\r\n          this.f_tiempo()\r\n        },\r\n        saveIntento(){\r\n          let me = this;\r\n          //si es docentes cuantos los intentos\r\n          if(me.usuario.id_group == 13){\r\n            let formData = new FormData();\r\n            formData.append('id_evaluacion',me.id_evaluacion);\r\n            formData.append('id_usuario',   me.usuario.idusuario)\r\n            formData.append('intentosEval', me.intentosEvaluacion)\r\n            this.$http.post(this.$server_url+'save_finalizar_evalIntentos', formData)\r\n            .then(res => {\r\n              me.intentosEvaluacion = res.data.intentos\r\n            })\r\n          }\r\n        },\r\n        paginacion(index, tam, asign_content){\r\n          let me = this;\r\n          for( let i=1; i<=tam; i++ ){\r\n              $('#'+asign_content+''+i).css('display', 'none')\r\n          }\r\n          $('#'+asign_content+''+me.current_preg[index]).css('display', 'block')\r\n        }\r\n      },\r\n  }\r\n</script>\r\n"]}]}