{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\pedidos\\components\\Guias\\guiasFacturador\\listadoGuiasFacturador.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\pedidos\\components\\Guias\\guiasFacturador\\listadoGuiasFacturador.vue","mtime":1712682816280},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\n    import exportGuiasVue from '../../../../temporadas/components/exportGuias.vue';\r\n    import exportActaGuiasVue from '../../../../temporadas/components/exportActaGuias.vue';\r\n    import exportActaGuiasBodegaVue from '../../../../temporadas/components/exportActaGuiasBodega.vue';\r\n    import GuiasStockVue from '../GuiasStock.vue';\r\n    export default {\r\n        data() {\r\n            return {\r\n                usuario: [],\r\n                tmpPedidos: [],\r\n                pedido: {},\r\n                id_pedido: 0,\r\n                popupCarga: false,\r\n                mostrarReporteG: false,\r\n                mostrarImprimirActa:false,\r\n                mostrarImprimirActaBodega:false,\r\n                pedidoGuiaEliminar: '',\r\n                filtro: 0,\r\n                arregloLibros: [],\r\n                arregloStock:[],\r\n                modalLibros: false,\r\n                popupConfirmAprobar:false,\r\n                verResumen:false,\r\n                totalLibros: 0,\r\n                userAdmin:false,\r\n                userFacturador:false,\r\n                NohayStock:false,\r\n                popupObservacion:false,\r\n            }\r\n        },\r\n        components: {\r\n            exportGuiasVue,\r\n            exportActaGuiasVue,\r\n            exportActaGuiasBodegaVue,\r\n            GuiasStockVue,\r\n        },\r\n        props: {\r\n            pedidos: {\r\n                type: Array,\r\n                default: []\r\n            },\r\n            id_periodo: {\r\n                type: Number,\r\n                default: 0\r\n            },\r\n        },\r\n        created() {\r\n            let me = this;\r\n            me.usuario = JSON.parse(localStorage.getItem(\"usuario\"))\r\n        },\r\n        watch: {\r\n            pedidos(results) {\r\n                let me = this;\r\n                me.tmpPedidos = []\r\n                me.filtroTipo()\r\n            },\r\n        },\r\n        mounted() {\r\n            let me = this;\r\n            setTimeout(() => {\r\n                me.filtroTipo()\r\n            }, 1000);\r\n            if(me.usuario.id_group == 27 || me.usuario.id_group == 17){\r\n                me.filtro = 1\r\n            }else{\r\n                me.filtro = 0\r\n            }\r\n            //user admin\r\n            if(me.usuario.id_group  == 22 || me.usuario.id_group == 23 || me.usuario.id_group == 1){\r\n                me.userAdmin = true\r\n            }\r\n            //user facturador\r\n            if(me.usuario.id_group  == 22 || me.usuario.id_group == 23){\r\n                me.userFacturador = true\r\n            }\r\n        },\r\n        computed: {\r\n            sumaPendientes() {\r\n                let me = this;\r\n                //pendientes admin bodega\r\n                var predatos = []\r\n                if(me.usuario.id_group == 27){\r\n                   predatos  = me.pedidos.filter(p => p.id_asesor == me.usuario.idusuario)\r\n                }else{\r\n                    predatos = me.pedidos\r\n                }\r\n                let datos = predatos.filter(p => (p.estado_entrega == 0) && (p.estado == 1));\r\n                let resultado = datos.length\r\n                return resultado\r\n            },\r\n            SumaAprobados() {\r\n                let me = this;\r\n                let datos = me.pedidos.filter(p => (p.estado_entrega == 1) && (p.estado == 1));\r\n                let resultado = datos.length\r\n                return resultado\r\n            },\r\n            SumaEntregados() {\r\n                let me = this;\r\n                let datos = me.pedidos.filter(p => (p.estado_entrega == 2) && (p.estado == 1));\r\n                let resultado = datos.length\r\n                return resultado\r\n            },\r\n        },\r\n        methods: {\r\n            verStock(tipo){\r\n                let me = this;\r\n                me.arregloStock = []\r\n                me.$vs.loading()\r\n                var url = \"\"\r\n                //resumen para facturacion\r\n                if(tipo == 0){\r\n                    var url = this.$server_url+'guias?verStock=yes&id_pedido='+me.pedido.id_pedido\r\n                }\r\n                //resumen para bodega\r\n                if(tipo == 1){\r\n                    url = this.$server_url+'guias?verStockGuiasProlipa=yes&id_pedido='+me.pedido.id_pedido+'&acta='+me.pedido.ven_codigo\r\n                }\r\n                this.$http.get(url)\r\n                    .then(function (res) {\r\n                        me.$vs.loading.close()\r\n                        if(res.data.status == 0){\r\n                            me.$vs.notify({\r\n                                text: res.data.message,\r\n                                color: 'danger',\r\n                                iconPack: 'feather',\r\n                                icon: 'icon-alert-triangle',\r\n                                time:3000\r\n                            })\r\n                            return\r\n                        }\r\n                        //ingresar libros en array\r\n                        let datos = res.data\r\n                        if(tipo == 0){\r\n                            //validate que haya stock\r\n                            let validate = datos.filter(p => p.nuevoStock < 1)\r\n                            if(validate.length > 0){\r\n                                me.NohayStock = true\r\n                            }else{\r\n                                me.NohayStock = false\r\n                            }\r\n                            //fin validate que haya stock\r\n                        }\r\n                      \r\n                        var predatos = []\r\n                        predatos = datos\r\n                        me.arregloStock = predatos.sort(function(a, b) {\r\n                            var nombreA = a.nombrelibro.toLowerCase();\r\n                            var nombreB = b.nombrelibro.toLowerCase();\r\n                            var numA = parseInt(nombreA.match(/\\d+$/)); // extraer el número del final (si existe)\r\n                            var numB = parseInt(nombreB.match(/\\d+$/)); // extraer el número del final (si existe)\r\n                            nombreA = nombreA.replace(/\\d+$/, ''); // quitar el número del final\r\n                            nombreB = nombreB.replace(/\\d+$/, ''); // quitar el número del final\r\n                            \r\n                            if (nombreA < nombreB) {\r\n                                return -1;\r\n                            }\r\n                            if (nombreA > nombreB) {\r\n                                return 1;\r\n                            }\r\n                            if (numA && !numB) { // si a tiene número y b no, b va primero\r\n                                return 1;\r\n                            }\r\n                            if (!numA && numB) { // si b tiene número y a no, a va primero\r\n                                return -1;\r\n                            }\r\n                            if (numA && numB) { // si ambos tienen número, compararlos\r\n                                if (numA < 10 && numB >= 10) { // si a es menor que 10 y b es 10 o mayor, a va primero\r\n                                return -1;\r\n                                }\r\n                                if (numA >= 10 && numB < 10) { // si b es menor que 10 y a es 10 o mayor, b va primero\r\n                                return 1;\r\n                                }\r\n                                return numA - numB; // comparar los números directamente\r\n                            }\r\n                            return 0; // si son iguales en todo, no hay diferencia\r\n                        });\r\n                        //open confirm\r\n                        me.popupConfirmAprobar = true\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(error + ' error');\r\n                        me.$vs.loading.close()\r\n                        me.$vs.notify({\r\n                            text: \"Hubo problemas con el servidor de facturacion\",\r\n                            color: 'danger',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-alert-triangle',\r\n                            time:3000\r\n                        })\r\n                    })\r\n                \r\n            },\r\n            enviarGuiasBDMilton(){\r\n                let me = this\r\n                //validacion \r\n                if(me.pedido.codigo_contrato == null || me.pedido.codigo_contrato == \"\" || me.pedido.codigo_contrato == undefined || me.pedido.iniciales == \"\" || me.pedido.iniciales == null || me.pedido.iniciales == \"null\"){\r\n                    me.$vs.notify({\r\n                        text: 'El codigo del periodo o las iniciales del asesor no estan configuradas',\r\n                        color: 'primary',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-alert-triangle'\r\n                    })\r\n                    return\r\n                }\r\n                if(me.usuario.cod_usuario == null || me.usuario.cod_usuario == \"null\" || me.usuario.cod_usuario == \"\" || me.usuario.cod_usuario == undefined){\r\n                    me.$vs.notify({\r\n                        text: 'El codigo del usuario facturador no esta configurado',\r\n                        color: 'primary',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-alert-triangle'\r\n                    })\r\n                    return\r\n                }\r\n                let formData = new FormData();\r\n                formData.append('id_pedido',            me.pedido.id_pedido)\r\n                formData.append('codigo_contrato',      me.pedido.codigo_contrato)\r\n                formData.append('iniciales',            me.pedido.iniciales);\r\n                formData.append('usuario_fact',         me.usuario.idusuario)\r\n                formData.append('codigo_usuario_fact',  me.usuario.cod_usuario);\r\n                formData.append('region_idregion',      me.pedido.region_idregion)\r\n                formData.append('asesor_id',            me.pedido.id_asesor)\r\n                formData.append('id_periodo',           me.pedido.id_periodo)\r\n                formData.append('cli_ins_codigo',       me.pedido.cli_ins_codigo)\r\n                me.$vs.loading()\r\n                this.$http.post(this.$server_url+'guardarGuiasBDMilton', formData)\r\n                .then(function (res) {\r\n                    me.$vs.loading.close()\r\n                    if(res.data.status == 0){\r\n                        me.$vs.notify({\r\n                            text: res.data.message,\r\n                            color: 'danger',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-alert-triangle',\r\n                            time:3000\r\n                        })\r\n                        return\r\n                    }\r\n                    me.$vs.notify({\r\n                        text: 'Se guardo correctamente',\r\n                        color: 'primary',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-alert-triangle'\r\n                    })\r\n                    me.popupConfirmAprobar = false;\r\n                    me.$emit('changeRecarge', true)\r\n                })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close()\r\n                    me.$vs.notify({\r\n                        text: 'No se puedo guardar',\r\n                        color: 'danger',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-alert-triangle'\r\n                    })\r\n                })\r\n            },\r\n            changeHandle(e) {\r\n                let me                  = this;\r\n                me.popupCarga           = false\r\n                me.mostrarReporteG      = false\r\n                me.mostrarImprimirActa  = false\r\n                me.mostrarImprimirActaBodega = false\r\n                me.pedido               = {}\r\n            },\r\n            ver_pedido(item) {\r\n                let me = this;\r\n                localStorage.setItem(\"id_periodo_selected\", item.id_periodo)\r\n                localStorage.setItem(\"nombre_periodo_selected\", item.periodo)\r\n                this.$store.dispatch('setGuia',item)\r\n                this.$emit('showPedido',1)\r\n            },\r\n            getReporteGuia(tr) {\r\n                let me = this;\r\n                localStorage.setItem(\"id_periodo_selected\", tr.id_periodo)\r\n                localStorage.setItem(\"nombre_periodo_selected\", tr.periodo)\r\n                me.id_pedido = tr.id_pedido\r\n                me.popupCarga = true\r\n                me.mostrarReporteG = true\r\n            },\r\n            ImprimirActa(tipo){\r\n                let me                              = this;\r\n                me.popupCarga                       = true\r\n                if(tipo == 0){\r\n                    me.mostrarImprimirActa          = true\r\n                }\r\n                if(tipo == 1){\r\n                    me.mostrarImprimirActaBodega    = true\r\n                }\r\n               \r\n            },\r\n            confirma_delete_pedido(item) {\r\n                console.log(item)\r\n                let me = this;\r\n                me.pedidoGuiaEliminar = item;\r\n                me.$vs.dialog({\r\n                    type: 'confirm',\r\n                    color: 'danger',\r\n                    title: 'Confirmar',\r\n                    text: 'Seguro desea eliminar este pedido?. No lo podrá recuperar',\r\n                    acceptText: 'Aceptar',\r\n                    cancelText: 'Cancelar',\r\n                    accept: me.f_eliminarGuiaPedido\r\n                })\r\n            },\r\n            f_eliminarGuiaPedido() {\r\n                let me = this;\r\n                this.$http.get(this.$server_url + 'deletePedidoGuia/' + me.pedidoGuiaEliminar.id_pedido)\r\n                    .then((result) => {\r\n                        console.log(result.data)\r\n                        me.$vs.notify({\r\n                            color: 'danger',\r\n                            text: 'Pedido eliminado correctamente'\r\n                        })\r\n                        me.$emit('changeRecarge', true)\r\n                    }).catch((err) => {\r\n                        console.log(err)\r\n                    });\r\n            },\r\n            filtroTipo() {\r\n                let me = this;\r\n                me.tmpPedidos = []\r\n                //para ver los pedidos pendientes\r\n                if (me.filtro == 0) {\r\n                    //bodega mostrar los pedidos pendientes de bodega\r\n                    var predatos = []\r\n                    if(me.usuario.id_group == 27){\r\n                    predatos  = me.pedidos.filter(p => p.id_asesor == me.usuario.idusuario)\r\n                    }else{\r\n                        predatos = me.pedidos\r\n                    }\r\n                    let datos = predatos.filter(p => (p.estado_entrega == 0 && p.estado == 1));\r\n                    me.tmpPedidos = datos\r\n                    return\r\n                }\r\n                //para ver los pedidos aprobados\r\n                if (me.filtro == 1) {\r\n                    let datos = me.pedidos.filter(p => (p.estado_entrega == 1) && p.estado == 1);\r\n                    me.tmpPedidos = datos\r\n                    return\r\n                }\r\n                //para ver los pedidos entregados por bodega\r\n                if (me.filtro == 2) {\r\n                    let datos = me.pedidos.filter(p => (p.estado_entrega == 2) && p.estado == 1);\r\n                    me.tmpPedidos = datos\r\n                    return\r\n                }\r\n            },\r\n            //====METODOS DE BODEGA======\r\n            openConfirm(){\r\n                this.$vs.dialog({\r\n                    type:'confirm',\r\n                    color: 'danger',\r\n                    title: `Confirmar`,\r\n                    acceptText:'aceptar',\r\n                    cancelText:'cancelar',\r\n                    text: 'Esta seguro de entregar esta solicitud de guias?',\r\n                    accept:this.entregarPedido\r\n                })\r\n            },\r\n            entregarPedido() {\r\n                let me = this\r\n                me.$vs.loading();\r\n                let data = {\r\n                    'id_pedido': this.pedido.id_pedido,\r\n                    'estado': '2',\r\n                    'grupo': 'bodega',\r\n                    'acta':this.pedido.ven_codigo,\r\n                    'asesor_id':this.pedido.id_asesor\r\n                }\r\n                this.$http.post(this.$server_url + 'entregarPedido', data)\r\n                    .then(res => {\r\n                        me.f_notificaciones('Pedido entregado', 'success', 'check')\r\n                        me.$emit('changeRecarge', true)\r\n                        me.$vs.loading.close();\r\n                    })\r\n                    .catch(err => {\r\n                        console.log(err)\r\n                        me.$vs.loading.close();\r\n                    })\r\n            },\r\n            f_notificaciones(msj, color, icono) {\r\n                let me = this;\r\n                me.$vs.notify({\r\n                    text: msj,\r\n                    color: color,\r\n                    iconPack: 'feather',\r\n                    icon: icono\r\n                })\r\n                return;\r\n            },\r\n            //====FIN METODOS DE BODEGA====\r\n        }\r\n    }\r\n    ",{"version":3,"sources":["listadoGuiasFacturador.vue"],"names":[],"mappings":";AAqfile":"listadoGuiasFacturador.vue","sourceRoot":"src/views/pedidos/components/Guias/guiasFacturador","sourcesContent":["<template>\r\n    <div>\r\n        <ul class=\"flex mt-2\" style=\"flex-wrap:center;\">\r\n            <li v-if=\"userAdmin == true || usuario.id_group == 27 \">\r\n                <vs-radio v-model=\"filtro\" @input=\"filtroTipo();\" vs-name=\"radios1tipo\" vs-value=\"0\"><span style=\"font-weight:bold;\">{{sumaPendientes}}</span> Pendientes</vs-radio>\r\n            </li>\r\n            <li>\r\n                <vs-radio v-model=\"filtro\" @input=\"filtroTipo();\" class=\"ml-2\" vs-name=\"radios1tipo\" vs-value=\"1\"><span style=\"font-weight:bold;\">{{ SumaAprobados }}</span> Aprobados</vs-radio>\r\n            </li>\r\n            <li>\r\n                <vs-radio v-model=\"filtro\" @input=\"filtroTipo();\" class=\"ml-2\" vs-name=\"radios1tipo\" vs-value=\"2\"><span style=\"font-weight:bold;\">{{ SumaEntregados }}</span> Entregados por bodega </vs-radio>\r\n            </li>\r\n        </ul>\r\n        <vs-table search :data=\"tmpPedidos\" pagination max-items=\"10\">\r\n            <template slot=\"header\">\r\n                <vs-chip>Cantidad: {{ tmpPedidos.length }}</vs-chip>\r\n                <p class=\"btn_lg font-semibold ml-2\">Pedidos de guias </p>\r\n            </template>\r\n            <template slot=\"thead\">\r\n                <vs-th>#</vs-th>\r\n                <vs-th sort-key=\"asesor\">Asesor / Responsable</vs-th>\r\n                <vs-th style=\"width: 140px;\" sort-key=\"fecha_envio\">Fechas</vs-th>\r\n                <vs-th style=\"width: 80px;\" sort-key=\"asesor\">Cant. guias</vs-th>\r\n                <vs-th sort-key=\"asesor\">Estado</vs-th>\r\n                <vs-th>Acciones</vs-th>\r\n            </template>\r\n            <template slot-scope=\"{data}\">\r\n                <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                    <vs-td> {{ tr.id_pedido }} </vs-td>\r\n                    <vs-td>\r\n                        <p class=\"font-bold\">Responsable:</p>\r\n                        <span>{{ tr.responsable }} </span>\r\n                        <p class=\"font-bold\">Cédula:</p>\r\n                        <span>{{ tr.cedula }} </span>\r\n                        <p class=\"font-bold\">Período solicitud:</p>\r\n                        <vs-chip color=\"primary\">{{ tr.periodo }} </vs-chip>\r\n                    </vs-td>\r\n                    <vs-td>\r\n                        <p class=\"font-bold\">Fecha de envio:</p>\r\n                        <span>{{ tr.fecha_envio.substring(0,10) }} </span>\r\n                    </vs-td>\r\n                    <vs-td>\r\n                        {{ tr.total_unidades_guias }}\r\n                    </vs-td>\r\n                    <vs-td>\r\n                        <p v-if=\"tr.observacion != null\">\r\n                            <vx-tooltip style=\"display: inline-block;\" text=\"Ver Observación asesor\" position=\"top\" color=\"primary\">\r\n                                <vs-button  class=\"modal-default-button p-2\" @click=\"pedido=tr;popupObservacion=true;\" size=\"small\" color=\"dark\" type=\"filled\" icon-pack=\"feather\" icon=\"icon-message-circle\">Ver observación </vs-button>\r\n                            </vx-tooltip>   \r\n                            <p class=\"mt-2\"></p>\r\n                        </p>\r\n                        <span v-if=\"tr.estado_entrega == 0\"><b>Pedido:</b><span class=\"ml-1\">Creado</span></span>\r\n                        <span color=\"primary\" v-if=\"tr.estado_entrega == 1\"><b>Pedido:</b><span class=\"ml-1\">Aprobado por facturación</span></span>\r\n                        <span color=\"success\" v-if=\"tr.estado_entrega == 2\"><b>Pedido:</b><span class=\"ml-1\">Entregado por bodega</span></span><br>\r\n                        <div v-if=\"tr.ven_codigo != null\">\r\n                            <p><b>Acta:</b> {{ tr.ven_codigo }}</p>\r\n                        </div>\r\n                        <b v-if=\"tr.estado_entrega > 0\">Fecha aprobacion:</b>\r\n                        <p v-if=\"tr.estado_entrega > 0\">{{ tr.fecha_aprobado_facturacion }}</p>\r\n                        <b v-if=\"tr.estado_entrega > 1\">Fecha entrega bodega:</b>\r\n                        <p v-if=\"tr.estado_entrega > 1\">{{ tr.fecha_entrega_bodega }}</p>\r\n                    </vs-td>\r\n                    <vs-td align=\"center\">\r\n                        <vs-dropdown vs-custom-content vs-trigger-click>\r\n                            <vs-button class=\"a-icons\" href.prevent icon=\"more_vert\" type=\"border\"></vs-button>\r\n                            <vs-dropdown-menu style=\"width: 250px;\" class=\"cursor\">\r\n                                <!--APROBAR ACTA-->\r\n                                <vs-dropdown-item v-if=\"( userFacturador == true )  && tr.ven_codigo == null\">\r\n                                    <vx-tooltip style=\"display: inline-block;\" text=\"AL PRESIONAR SE ENVIARA AL SISTEMA DE FACTURACION\" position=\"top\" color=\"primary\">\r\n                                     <vs-button class=\"w-full\" color=\"dark\"  icon-pack=\"feather\" icon=\"icon-check\" type=\"line\" @click=\"verResumen =false;pedido = tr;verStock(0)\">Aprobar solicitud</vs-button>\r\n                                    </vx-tooltip>    \r\n                                </vs-dropdown-item>\r\n                                <!--IMPRIMIR ACTA FACTURACION-->\r\n                                <vs-dropdown-item v-if=\"( userAdmin == true ) && tr.ven_codigo != null\">\r\n                                    <vs-button class=\"w-full\" color=\"#3541D3\" icon-pack=\"feather\" icon=\"icon-printer\" type=\"line\" @click=\"pedido = tr;ImprimirActa(0)\">Imprimir acta(f)</vs-button>\r\n                                </vs-dropdown-item>\r\n                                <!--IMPRIMIR ACTA BODEGA-->\r\n                                <vs-dropdown-item v-if=\"( usuario.id_group == 1  || usuario.id_group == 27 ) && tr.ven_codigo != null && (filtro == 1 || filtro == 2 )\">\r\n                                    <vs-button class=\"w-full\" color=\"#3541D3\" icon-pack=\"feather\" icon=\"icon-printer\" type=\"line\" @click=\"pedido = tr;ImprimirActa(1)\">Imprimir acta(b)</vs-button>\r\n                                </vs-dropdown-item>\r\n                                <!--RESUMEN-->\r\n                                <vs-dropdown-item v-if=\"filtro == 0\">\r\n                                    <vs-button class=\"w-full\"  icon=\"visibility\" type=\"line\" @click=\"verResumen =true;pedido = tr;verStock(0)\">Resumen</vs-button>\r\n                                </vs-dropdown-item>\r\n                                <vs-dropdown-item v-if=\"filtro == 1 || filtro == 2\">\r\n                                    <vs-button class=\"w-full\"  icon=\"visibility\" type=\"line\" @click=\"verResumen =true;pedido = tr;verStock(1)\">Resumen</vs-button>\r\n                                </vs-dropdown-item>\r\n                                <!--ENTREGAR GUIAS AL ASESOR(bodega)-->\r\n                                <vs-dropdown-item v-if=\"(usuario.id_group == 17 || usuario.id_group == 27 || usuario.id_group == 1) && (tr.estado_entrega == 1)\">\r\n                                    <!-- <vx-tooltip style=\"display: inline-block;\" text=\"MARCAR COMO GUIAS ENTREGADAS AL ASESOR(BODEGA)\" position=\"top\" color=\"primary\"> -->\r\n                                        <vs-button class=\"w-full\"  icon-pack=\"feather\" color=\"dark\" icon=\"icon-book\" type=\"line\" @click=\"pedido = tr;openConfirm(tr);\">Entregar guias</vs-button>\r\n                                    <!-- </vx-tooltip> -->\r\n                                </vs-dropdown-item>\r\n                                <!--EDITAR-->\r\n                                <vs-dropdown-item v-if=\"usuario.id_group == 27\">\r\n                                    <vs-button class=\"w-full\"  icon-pack=\"feather\" color=\"warning\" icon=\"icon-edit\" type=\"line\" @click=\"ver_pedido(tr)\">Revisar pedido</vs-button>\r\n                                </vs-dropdown-item>\r\n                                <!--REPORTE GUIA-->\r\n                                <vs-dropdown-item v-if=\"usuario.id_group != 11\">\r\n                                    <vs-button class=\"w-full\"  icon-pack=\"feather\" icon=\"icon-file\" @click=\"pedido = tr;getReporteGuia(tr);\" color=\"success\" type=\"line\">Reporte guia</vs-button>\r\n                                </vs-dropdown-item>\r\n                                <!--ELIMINAR PEDIDO-->\r\n                                <vs-dropdown-item v-if=\"tr.estado_entrega == 0\">\r\n                                    <vs-button class=\"w-full\"  color=\"danger\" type=\"line\" @click=\"confirma_delete_pedido(tr)\">Eliminar pedido</vs-button>\r\n                                </vs-dropdown-item>\r\n                            </vs-dropdown-menu>\r\n                        </vs-dropdown>\r\n                    </vs-td>\r\n                </vs-tr>\r\n            </template>\r\n        </vs-table>\r\n        <!--IMPRIMIR GUIA-->\r\n        <div v-if=\"mostrarReporteG\">\r\n            <exportGuiasVue style=\"display: none;\" :id_periodo=\"pedido.id_periodo\" :id_pedido=\"pedido.id_pedido\" @change=\"changeHandle\" />\r\n        </div>\r\n        <!--EXPORTAR ACTA FACTURADOR - ASESOR-->\r\n        <div v-if=\"mostrarImprimirActa\">\r\n            <exportActaGuiasVue v-if=\"mostrarImprimirActa\" style=\"display: none;\" :pedido = \"pedido\" @change=\"changeHandle\"/>\r\n        </div>\r\n        <!--EXPORTAR ACTA BODEGA - ASESOR-->\r\n        <div v-if=\"mostrarImprimirActaBodega\">\r\n            <exportActaGuiasBodegaVue v-if=\"mostrarImprimirActaBodega\" style=\"display: none;\" :pedido = \"pedido\" @change=\"changeHandle\"/>\r\n        </div>\r\n        <!--MODAL CARGAR-->\r\n        <vs-popup class=\"holamundo\" title=\"Cargando\" :active.sync=\"popupCarga\">\r\n            <p class=\"text-warning text-3xl bg-dark\"><i class=\"fa-solid fa-cloud\"></i> <b class=\"ml-2\">Espere mientras se descarga el archivo</b></p>\r\n            <img class=\"mt-2\" style=\"margin-left: 35px;\" src=\"https://cdn-icons-png.flaticon.com/512/4578/4578845.png\" />\r\n        </vs-popup>\r\n        <!--MODAL DETALLE DE LIBROS-->\r\n        <vs-popup title=\"Detalle de libros\" fullscreen :active.sync=\"modalLibros\">\r\n            <vs-table max-items=\"100\" search pagination :data=\"arregloLibros\">\r\n                <template slot=\"header\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12\">Total Libros: <b>{{totalLibros}}</b></div>\r\n                        <div class=\"col-12\">Items: <b>{{arregloLibros.length}}</b></div>\r\n                    </div>\r\n                </template>\r\n                <template slot=\"thead\">\r\n                    <vs-th>Libro</vs-th>\r\n                    <vs-th>Cant. unidades</vs-th>\r\n                    <vs-th>Precio unitario</vs-th>\r\n                </template>\r\n                <template slot-scope=\"{data}\">\r\n                    <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                        <vs-td>\r\n                            {{data[indextr].nombrelibro}}<br>\r\n                        </vs-td>\r\n                        <vs-td>\r\n                            {{data[indextr].valor}}<br>\r\n                        </vs-td>\r\n                        <vs-td>\r\n                            {{tr.precio}}\r\n                        </vs-td>\r\n                    </vs-tr>\r\n                </template>\r\n            </vs-table>\r\n        </vs-popup>\r\n        <!--MODAL CONFIRMAR APROBAR-->\r\n        <vs-popup class=\"holamundo\" fullscreen title=\"Stock de guias\" :active.sync=\"popupConfirmAprobar\">\r\n            <p v-if=\"verResumen == false\" class=\"font-bold text-warning text-2xl\">Está seguro de aprobar la solicitud de guias?</p>\r\n            <GuiasStockVue v-if=\"popupConfirmAprobar\" :arregloStock=\"arregloStock\"/>\r\n            <vs-divider v-if=\"verResumen == false\"></vs-divider>\r\n            <div v-if=\"NohayStock\">\r\n                <vs-alert color=\"danger\">No hay stock no se puede aprobar</vs-alert>\r\n            </div>\r\n            <div v-else>\r\n                <div v-if=\"verResumen == false\" class=\"flex justify-center\">\r\n                    <vs-button color=\"primary\" @click=\"enviarGuiasBDMilton();\" type=\"border\" icon=\"save\">Si deseo aprobar</vs-button>\r\n                    <vs-button color=\"warning\" class=\"ml-2\" @click=\"popupConfirmAprobar = false;\" icon-pack=\"feather\" type=\"filled\" icon=\"icon-x-circle\">Cancelar</vs-button>\r\n                </div>\r\n            </div>\r\n        </vs-popup>\r\n        <!--MODAL PARA VER OBSERVACION DEL FACTURADOR-->\r\n        <vs-popup classContent=\"popup-example\" title=\"Ver comentario Asesor\" :active.sync=\"popupObservacion\">\r\n            <p class=\"font-bold text-warning text-2xl\">Comentario Asesor:</p>\r\n            <vs-divider style=\"margin-top: -2px;\"></vs-divider>\r\n            <p class=\"\">{{ pedido.observacion }}</p>\r\n        </vs-popup>\r\n    </div>\r\n    </template>\r\n    <script>\r\n    import exportGuiasVue from '../../../../temporadas/components/exportGuias.vue';\r\n    import exportActaGuiasVue from '../../../../temporadas/components/exportActaGuias.vue';\r\n    import exportActaGuiasBodegaVue from '../../../../temporadas/components/exportActaGuiasBodega.vue';\r\n    import GuiasStockVue from '../GuiasStock.vue';\r\n    export default {\r\n        data() {\r\n            return {\r\n                usuario: [],\r\n                tmpPedidos: [],\r\n                pedido: {},\r\n                id_pedido: 0,\r\n                popupCarga: false,\r\n                mostrarReporteG: false,\r\n                mostrarImprimirActa:false,\r\n                mostrarImprimirActaBodega:false,\r\n                pedidoGuiaEliminar: '',\r\n                filtro: 0,\r\n                arregloLibros: [],\r\n                arregloStock:[],\r\n                modalLibros: false,\r\n                popupConfirmAprobar:false,\r\n                verResumen:false,\r\n                totalLibros: 0,\r\n                userAdmin:false,\r\n                userFacturador:false,\r\n                NohayStock:false,\r\n                popupObservacion:false,\r\n            }\r\n        },\r\n        components: {\r\n            exportGuiasVue,\r\n            exportActaGuiasVue,\r\n            exportActaGuiasBodegaVue,\r\n            GuiasStockVue,\r\n        },\r\n        props: {\r\n            pedidos: {\r\n                type: Array,\r\n                default: []\r\n            },\r\n            id_periodo: {\r\n                type: Number,\r\n                default: 0\r\n            },\r\n        },\r\n        created() {\r\n            let me = this;\r\n            me.usuario = JSON.parse(localStorage.getItem(\"usuario\"))\r\n        },\r\n        watch: {\r\n            pedidos(results) {\r\n                let me = this;\r\n                me.tmpPedidos = []\r\n                me.filtroTipo()\r\n            },\r\n        },\r\n        mounted() {\r\n            let me = this;\r\n            setTimeout(() => {\r\n                me.filtroTipo()\r\n            }, 1000);\r\n            if(me.usuario.id_group == 27 || me.usuario.id_group == 17){\r\n                me.filtro = 1\r\n            }else{\r\n                me.filtro = 0\r\n            }\r\n            //user admin\r\n            if(me.usuario.id_group  == 22 || me.usuario.id_group == 23 || me.usuario.id_group == 1){\r\n                me.userAdmin = true\r\n            }\r\n            //user facturador\r\n            if(me.usuario.id_group  == 22 || me.usuario.id_group == 23){\r\n                me.userFacturador = true\r\n            }\r\n        },\r\n        computed: {\r\n            sumaPendientes() {\r\n                let me = this;\r\n                //pendientes admin bodega\r\n                var predatos = []\r\n                if(me.usuario.id_group == 27){\r\n                   predatos  = me.pedidos.filter(p => p.id_asesor == me.usuario.idusuario)\r\n                }else{\r\n                    predatos = me.pedidos\r\n                }\r\n                let datos = predatos.filter(p => (p.estado_entrega == 0) && (p.estado == 1));\r\n                let resultado = datos.length\r\n                return resultado\r\n            },\r\n            SumaAprobados() {\r\n                let me = this;\r\n                let datos = me.pedidos.filter(p => (p.estado_entrega == 1) && (p.estado == 1));\r\n                let resultado = datos.length\r\n                return resultado\r\n            },\r\n            SumaEntregados() {\r\n                let me = this;\r\n                let datos = me.pedidos.filter(p => (p.estado_entrega == 2) && (p.estado == 1));\r\n                let resultado = datos.length\r\n                return resultado\r\n            },\r\n        },\r\n        methods: {\r\n            verStock(tipo){\r\n                let me = this;\r\n                me.arregloStock = []\r\n                me.$vs.loading()\r\n                var url = \"\"\r\n                //resumen para facturacion\r\n                if(tipo == 0){\r\n                    var url = this.$server_url+'guias?verStock=yes&id_pedido='+me.pedido.id_pedido\r\n                }\r\n                //resumen para bodega\r\n                if(tipo == 1){\r\n                    url = this.$server_url+'guias?verStockGuiasProlipa=yes&id_pedido='+me.pedido.id_pedido+'&acta='+me.pedido.ven_codigo\r\n                }\r\n                this.$http.get(url)\r\n                    .then(function (res) {\r\n                        me.$vs.loading.close()\r\n                        if(res.data.status == 0){\r\n                            me.$vs.notify({\r\n                                text: res.data.message,\r\n                                color: 'danger',\r\n                                iconPack: 'feather',\r\n                                icon: 'icon-alert-triangle',\r\n                                time:3000\r\n                            })\r\n                            return\r\n                        }\r\n                        //ingresar libros en array\r\n                        let datos = res.data\r\n                        if(tipo == 0){\r\n                            //validate que haya stock\r\n                            let validate = datos.filter(p => p.nuevoStock < 1)\r\n                            if(validate.length > 0){\r\n                                me.NohayStock = true\r\n                            }else{\r\n                                me.NohayStock = false\r\n                            }\r\n                            //fin validate que haya stock\r\n                        }\r\n                      \r\n                        var predatos = []\r\n                        predatos = datos\r\n                        me.arregloStock = predatos.sort(function(a, b) {\r\n                            var nombreA = a.nombrelibro.toLowerCase();\r\n                            var nombreB = b.nombrelibro.toLowerCase();\r\n                            var numA = parseInt(nombreA.match(/\\d+$/)); // extraer el número del final (si existe)\r\n                            var numB = parseInt(nombreB.match(/\\d+$/)); // extraer el número del final (si existe)\r\n                            nombreA = nombreA.replace(/\\d+$/, ''); // quitar el número del final\r\n                            nombreB = nombreB.replace(/\\d+$/, ''); // quitar el número del final\r\n                            \r\n                            if (nombreA < nombreB) {\r\n                                return -1;\r\n                            }\r\n                            if (nombreA > nombreB) {\r\n                                return 1;\r\n                            }\r\n                            if (numA && !numB) { // si a tiene número y b no, b va primero\r\n                                return 1;\r\n                            }\r\n                            if (!numA && numB) { // si b tiene número y a no, a va primero\r\n                                return -1;\r\n                            }\r\n                            if (numA && numB) { // si ambos tienen número, compararlos\r\n                                if (numA < 10 && numB >= 10) { // si a es menor que 10 y b es 10 o mayor, a va primero\r\n                                return -1;\r\n                                }\r\n                                if (numA >= 10 && numB < 10) { // si b es menor que 10 y a es 10 o mayor, b va primero\r\n                                return 1;\r\n                                }\r\n                                return numA - numB; // comparar los números directamente\r\n                            }\r\n                            return 0; // si son iguales en todo, no hay diferencia\r\n                        });\r\n                        //open confirm\r\n                        me.popupConfirmAprobar = true\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(error + ' error');\r\n                        me.$vs.loading.close()\r\n                        me.$vs.notify({\r\n                            text: \"Hubo problemas con el servidor de facturacion\",\r\n                            color: 'danger',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-alert-triangle',\r\n                            time:3000\r\n                        })\r\n                    })\r\n                \r\n            },\r\n            enviarGuiasBDMilton(){\r\n                let me = this\r\n                //validacion \r\n                if(me.pedido.codigo_contrato == null || me.pedido.codigo_contrato == \"\" || me.pedido.codigo_contrato == undefined || me.pedido.iniciales == \"\" || me.pedido.iniciales == null || me.pedido.iniciales == \"null\"){\r\n                    me.$vs.notify({\r\n                        text: 'El codigo del periodo o las iniciales del asesor no estan configuradas',\r\n                        color: 'primary',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-alert-triangle'\r\n                    })\r\n                    return\r\n                }\r\n                if(me.usuario.cod_usuario == null || me.usuario.cod_usuario == \"null\" || me.usuario.cod_usuario == \"\" || me.usuario.cod_usuario == undefined){\r\n                    me.$vs.notify({\r\n                        text: 'El codigo del usuario facturador no esta configurado',\r\n                        color: 'primary',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-alert-triangle'\r\n                    })\r\n                    return\r\n                }\r\n                let formData = new FormData();\r\n                formData.append('id_pedido',            me.pedido.id_pedido)\r\n                formData.append('codigo_contrato',      me.pedido.codigo_contrato)\r\n                formData.append('iniciales',            me.pedido.iniciales);\r\n                formData.append('usuario_fact',         me.usuario.idusuario)\r\n                formData.append('codigo_usuario_fact',  me.usuario.cod_usuario);\r\n                formData.append('region_idregion',      me.pedido.region_idregion)\r\n                formData.append('asesor_id',            me.pedido.id_asesor)\r\n                formData.append('id_periodo',           me.pedido.id_periodo)\r\n                formData.append('cli_ins_codigo',       me.pedido.cli_ins_codigo)\r\n                me.$vs.loading()\r\n                this.$http.post(this.$server_url+'guardarGuiasBDMilton', formData)\r\n                .then(function (res) {\r\n                    me.$vs.loading.close()\r\n                    if(res.data.status == 0){\r\n                        me.$vs.notify({\r\n                            text: res.data.message,\r\n                            color: 'danger',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-alert-triangle',\r\n                            time:3000\r\n                        })\r\n                        return\r\n                    }\r\n                    me.$vs.notify({\r\n                        text: 'Se guardo correctamente',\r\n                        color: 'primary',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-alert-triangle'\r\n                    })\r\n                    me.popupConfirmAprobar = false;\r\n                    me.$emit('changeRecarge', true)\r\n                })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close()\r\n                    me.$vs.notify({\r\n                        text: 'No se puedo guardar',\r\n                        color: 'danger',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-alert-triangle'\r\n                    })\r\n                })\r\n            },\r\n            changeHandle(e) {\r\n                let me                  = this;\r\n                me.popupCarga           = false\r\n                me.mostrarReporteG      = false\r\n                me.mostrarImprimirActa  = false\r\n                me.mostrarImprimirActaBodega = false\r\n                me.pedido               = {}\r\n            },\r\n            ver_pedido(item) {\r\n                let me = this;\r\n                localStorage.setItem(\"id_periodo_selected\", item.id_periodo)\r\n                localStorage.setItem(\"nombre_periodo_selected\", item.periodo)\r\n                this.$store.dispatch('setGuia',item)\r\n                this.$emit('showPedido',1)\r\n            },\r\n            getReporteGuia(tr) {\r\n                let me = this;\r\n                localStorage.setItem(\"id_periodo_selected\", tr.id_periodo)\r\n                localStorage.setItem(\"nombre_periodo_selected\", tr.periodo)\r\n                me.id_pedido = tr.id_pedido\r\n                me.popupCarga = true\r\n                me.mostrarReporteG = true\r\n            },\r\n            ImprimirActa(tipo){\r\n                let me                              = this;\r\n                me.popupCarga                       = true\r\n                if(tipo == 0){\r\n                    me.mostrarImprimirActa          = true\r\n                }\r\n                if(tipo == 1){\r\n                    me.mostrarImprimirActaBodega    = true\r\n                }\r\n               \r\n            },\r\n            confirma_delete_pedido(item) {\r\n                console.log(item)\r\n                let me = this;\r\n                me.pedidoGuiaEliminar = item;\r\n                me.$vs.dialog({\r\n                    type: 'confirm',\r\n                    color: 'danger',\r\n                    title: 'Confirmar',\r\n                    text: 'Seguro desea eliminar este pedido?. No lo podrá recuperar',\r\n                    acceptText: 'Aceptar',\r\n                    cancelText: 'Cancelar',\r\n                    accept: me.f_eliminarGuiaPedido\r\n                })\r\n            },\r\n            f_eliminarGuiaPedido() {\r\n                let me = this;\r\n                this.$http.get(this.$server_url + 'deletePedidoGuia/' + me.pedidoGuiaEliminar.id_pedido)\r\n                    .then((result) => {\r\n                        console.log(result.data)\r\n                        me.$vs.notify({\r\n                            color: 'danger',\r\n                            text: 'Pedido eliminado correctamente'\r\n                        })\r\n                        me.$emit('changeRecarge', true)\r\n                    }).catch((err) => {\r\n                        console.log(err)\r\n                    });\r\n            },\r\n            filtroTipo() {\r\n                let me = this;\r\n                me.tmpPedidos = []\r\n                //para ver los pedidos pendientes\r\n                if (me.filtro == 0) {\r\n                    //bodega mostrar los pedidos pendientes de bodega\r\n                    var predatos = []\r\n                    if(me.usuario.id_group == 27){\r\n                    predatos  = me.pedidos.filter(p => p.id_asesor == me.usuario.idusuario)\r\n                    }else{\r\n                        predatos = me.pedidos\r\n                    }\r\n                    let datos = predatos.filter(p => (p.estado_entrega == 0 && p.estado == 1));\r\n                    me.tmpPedidos = datos\r\n                    return\r\n                }\r\n                //para ver los pedidos aprobados\r\n                if (me.filtro == 1) {\r\n                    let datos = me.pedidos.filter(p => (p.estado_entrega == 1) && p.estado == 1);\r\n                    me.tmpPedidos = datos\r\n                    return\r\n                }\r\n                //para ver los pedidos entregados por bodega\r\n                if (me.filtro == 2) {\r\n                    let datos = me.pedidos.filter(p => (p.estado_entrega == 2) && p.estado == 1);\r\n                    me.tmpPedidos = datos\r\n                    return\r\n                }\r\n            },\r\n            //====METODOS DE BODEGA======\r\n            openConfirm(){\r\n                this.$vs.dialog({\r\n                    type:'confirm',\r\n                    color: 'danger',\r\n                    title: `Confirmar`,\r\n                    acceptText:'aceptar',\r\n                    cancelText:'cancelar',\r\n                    text: 'Esta seguro de entregar esta solicitud de guias?',\r\n                    accept:this.entregarPedido\r\n                })\r\n            },\r\n            entregarPedido() {\r\n                let me = this\r\n                me.$vs.loading();\r\n                let data = {\r\n                    'id_pedido': this.pedido.id_pedido,\r\n                    'estado': '2',\r\n                    'grupo': 'bodega',\r\n                    'acta':this.pedido.ven_codigo,\r\n                    'asesor_id':this.pedido.id_asesor\r\n                }\r\n                this.$http.post(this.$server_url + 'entregarPedido', data)\r\n                    .then(res => {\r\n                        me.f_notificaciones('Pedido entregado', 'success', 'check')\r\n                        me.$emit('changeRecarge', true)\r\n                        me.$vs.loading.close();\r\n                    })\r\n                    .catch(err => {\r\n                        console.log(err)\r\n                        me.$vs.loading.close();\r\n                    })\r\n            },\r\n            f_notificaciones(msj, color, icono) {\r\n                let me = this;\r\n                me.$vs.notify({\r\n                    text: msj,\r\n                    color: color,\r\n                    iconPack: 'feather',\r\n                    icon: icono\r\n                })\r\n                return;\r\n            },\r\n            //====FIN METODOS DE BODEGA====\r\n        }\r\n    }\r\n    </script>\r\n    "]}]}