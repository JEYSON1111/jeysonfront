{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\admin\\reporteria\\components\\reporteAgendaGeneral.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\admin\\reporteria\\components\\reporteAgendaGeneral.vue","mtime":1712682815461},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nimport moment from 'moment'\r\nimport flatPickr from 'vue-flatpickr-component'\r\nimport 'flatpickr/dist/flatpickr.css'\r\nexport default {\r\n    data() {\r\n       return{\r\n        fromDate: null,\r\n        toDate: null,\r\n        configdateTimePicker: {\r\n            enableTime: true,\r\n            dateFormat: 'Y-m-d',\r\n            minDate: \"2022-01-05\",\r\n            maxDate: new Date().fp_incr(1)\r\n        },\r\n        visitasAgenda:[],\r\n        //VARIABLES PARA EXPORTAR A EXCEL\r\n        codigoSelected: [],\r\n        formats: ['xls', 'xlsx', 'csv', 'txt'],\r\n        fileName:null,\r\n        selectedFormat: 'xls',\r\n        cellAutoWidth: true,\r\n        activePrompt: false,\r\n        //FIN VARIABLES PARA EXPORTAR A EXCEL\r\n       } \r\n    },\r\n    mounted(){\r\n        let me = this;\r\n        me.configdateTimePicker.minDate = moment().subtract(30, 'd').format('YYYY-MM-DD');\r\n\r\n        //obtener la fecha incio semana y fecha fin semana\r\n        let currentdate = new Date();\r\n        var oneJan = new Date(currentdate.getFullYear(),0,1);\r\n        var numberOfDays = Math.floor((currentdate - oneJan) / (24 * 60 * 60 * 1000));\r\n        var result = Math.ceil(( currentdate.getDay() + 1 + numberOfDays) / 7);\r\n        let preFechainicioSemana = moment().isoWeek(result - 1).startOf(\"isoweek\");\r\n        let preFechaFinSemana = moment().isoWeek(result - 1).endOf(\"isoweek\");\r\n        //convertir a fecha\r\n        let convertirFrom = moment(preFechainicioSemana, 'DD/MM/YYYY HH:mm:ss').format(\r\n        'YYYY-MM-DD'\r\n        );\r\n        let convertirtoDate = moment(preFechaFinSemana, 'DD/MM/YYYY HH:mm:ss').format(\r\n        'YYYY-MM-DD'\r\n        );\r\n        me.fromDate = convertirFrom\r\n        me.toDate = convertirtoDate\r\n        me.getReporteAgenda();\r\n    },\r\n    components:{\r\n        flatPickr,\r\n    },\r\n    methods:{\r\n        getReporteAgenda(){\r\n            let me = this;\r\n            me.visitasAgenda = []\r\n            me.$vs.loading();\r\n            this.$http.get(this.$server_url+'ReporteVisitaAsesores?fromDate='+me.fromDate+'&toDate='+me.toDate)\r\n                .then(function (res) {\r\n                    me.visitasAgenda = res.data\r\n                    me.$vs.loading.close()\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                    me.$vs.loading.close()\r\n                })\r\n        },\r\n          //METODOS PARA EXPORTAR A EXCEL\r\n          exportToExcel() {\r\n            let headerTitle = [ 'Asesor','Cantidad visitas'];\r\n            let headerVal = [ 'asesor','contador'];\r\n            import('@/vendor/Export2Excel').then(excel => {\r\n                const data = this.formatJson(headerVal, this.codigoSelected)\r\n                excel.export_json_to_excel({\r\n                    header: headerTitle,\r\n                    data,\r\n                    filename: this.fileName,\r\n                    autoWidth: this.cellAutoWidth,\r\n                    bookType: this.selectedFormat\r\n                })\r\n                this.clearFields()\r\n                this.guardarActivo = '';\r\n                this.generarActivo = ' ';\r\n                this.textAlertCant = '';\r\n                this.cantidad = '';\r\n                this.codigoSelected = [];\r\n            })\r\n        },\r\n\r\n        formatJson(filterVal, jsonData) {\r\n            return jsonData.map(v => filterVal.map(j => {\r\n                return v[j]\r\n            }))\r\n        },\r\n            //limpiar campos para exportar de nuevo\r\n        clearFields() {\r\n            this.fileName = ''\r\n            this.cellAutoWidth = true\r\n            this.selectedFormat = 'xls'\r\n        },\r\n        //FIN METODOS PARA EXPORTAR A EXCEL\r\n    },\r\n}\r\n",{"version":3,"sources":["reporteAgendaGeneral.vue"],"names":[],"mappings":";AAuDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"reporteAgendaGeneral.vue","sourceRoot":"src/views/admin/reporteria/components","sourcesContent":["<template>\r\n    <vx-card\r\n        title=\"Reporte general de la agenda de los asesores\"\r\n        title-color=\"success\"\r\n        subtitle=\"Filtre por fechas para obtener el reporte.\">\r\n        <vs-row>\r\n            <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"3\" vs-lg=\"4\" vs-sm=\"6\" vs-xs=\"6\">\r\n                <p>Fecha inicio:</p>\r\n                <flat-pickr :config=\"configdateTimePicker\" v-model=\"fromDate\" placeholder=\"Fecha Inicio\" class=\"m-1\" style=\"display: inline-block;width: 100%;\" />\r\n            </vs-col>\r\n            <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"3\" vs-lg=\"4\" vs-sm=\"6\" vs-xs=\"6\">\r\n                <p>Fecha fin:</p>\r\n                <flat-pickr :config=\"configdateTimePicker\" v-model=\"toDate\" placeholder=\"Fecha Fin\" class=\"m-1\" style=\"display: inline-block;width: 100%\" />\r\n            </vs-col>\r\n            <vs-col vs-type=\"flex\" vs-justify=\"left\" vs-align=\"left\" vs-w=\"3\" vs-lg=\"3\" vs-sm=\"6\" vs-xs=\"6\">\r\n                <vs-button radius color=\"success\" @click=\"getReporteAgenda()\" style=\"margin-left:1px;\" type=\"gradient\" icon=\"search\"></vs-button>\r\n            </vs-col>\r\n        </vs-row>\r\n        <vs-table multiple v-model=\"codigoSelected\" pagination max-items=\"25\" search :data=\"visitasAgenda\">\r\n            <template slot=\"header\">\r\n                <vs-chip color=\"primary\" style=\"font-size:12px;\">\r\n                    Cantidad asesores: <span style=\"font-weight:bold;\"> {{visitasAgenda.length}}</span>\r\n                </vs-chip>\r\n                <vs-button color=\"warning\" size=\"small\" class=\"ml-2\" style=\"font-size: 14px;\" @click=\"activePrompt=true;\">Exportar</vs-button>\r\n            </template>\r\n            <template slot=\"thead\">\r\n                <vs-th sort-key=\"asesor\">Asesor</vs-th>\r\n                <vs-th sort-key=\"contador\">Cantidad visitas</vs-th>\r\n            </template>\r\n            <template slot-scope=\"{data}\">\r\n                <vs-tr :data=\"tr\" :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                    <vs-td :data=\"data[indextr].asesor\">\r\n                        {{ data[indextr].asesor  }}\r\n                    </vs-td>\r\n                    <vs-td :data=\"data[indextr].contador\">\r\n                        {{ data[indextr].contador }}\r\n                    </vs-td>\r\n                </vs-tr>\r\n            </template>\r\n        </vs-table>\r\n          <!--modal exportar-->\r\n          <vs-prompt title=\"Exportar a Excel\" class=\"export-options\" @cancle=\"clearFields\" @accept=\"exportToExcel\" accept-text=\"Exportar\" @close=\"clearFields\" :active.sync=\"activePrompt\">\r\n            <vs-alert class=\"mb-3\" color=\"danger\" icon-pack=\"feather\" icon=\"icon-info\">\r\n                <span>Recuerde <b>seleccionar</b> los registros que desea exportar.</span>\r\n            </vs-alert>\r\n            <vs-input v-model=\"fileName\" placeholder=\"Ingrese el nombre del archivo\" class=\"w-full\" />\r\n            <v-select v-model=\"selectedFormat\" :options=\"formats\" class=\"my-4\" />\r\n            <div class=\"flex\">\r\n                <!--<span class=\"mr-4\">Cell Auto Width:</span>\r\n                <vs-switch v-model=\"cellAutoWidth\">Cell Auto Width</vs-switch>-->\r\n            </div>\r\n        </vs-prompt>\r\n    </vx-card>\r\n</template>\r\n<script>\r\nimport moment from 'moment'\r\nimport flatPickr from 'vue-flatpickr-component'\r\nimport 'flatpickr/dist/flatpickr.css'\r\nexport default {\r\n    data() {\r\n       return{\r\n        fromDate: null,\r\n        toDate: null,\r\n        configdateTimePicker: {\r\n            enableTime: true,\r\n            dateFormat: 'Y-m-d',\r\n            minDate: \"2022-01-05\",\r\n            maxDate: new Date().fp_incr(1)\r\n        },\r\n        visitasAgenda:[],\r\n        //VARIABLES PARA EXPORTAR A EXCEL\r\n        codigoSelected: [],\r\n        formats: ['xls', 'xlsx', 'csv', 'txt'],\r\n        fileName:null,\r\n        selectedFormat: 'xls',\r\n        cellAutoWidth: true,\r\n        activePrompt: false,\r\n        //FIN VARIABLES PARA EXPORTAR A EXCEL\r\n       } \r\n    },\r\n    mounted(){\r\n        let me = this;\r\n        me.configdateTimePicker.minDate = moment().subtract(30, 'd').format('YYYY-MM-DD');\r\n\r\n        //obtener la fecha incio semana y fecha fin semana\r\n        let currentdate = new Date();\r\n        var oneJan = new Date(currentdate.getFullYear(),0,1);\r\n        var numberOfDays = Math.floor((currentdate - oneJan) / (24 * 60 * 60 * 1000));\r\n        var result = Math.ceil(( currentdate.getDay() + 1 + numberOfDays) / 7);\r\n        let preFechainicioSemana = moment().isoWeek(result - 1).startOf(\"isoweek\");\r\n        let preFechaFinSemana = moment().isoWeek(result - 1).endOf(\"isoweek\");\r\n        //convertir a fecha\r\n        let convertirFrom = moment(preFechainicioSemana, 'DD/MM/YYYY HH:mm:ss').format(\r\n        'YYYY-MM-DD'\r\n        );\r\n        let convertirtoDate = moment(preFechaFinSemana, 'DD/MM/YYYY HH:mm:ss').format(\r\n        'YYYY-MM-DD'\r\n        );\r\n        me.fromDate = convertirFrom\r\n        me.toDate = convertirtoDate\r\n        me.getReporteAgenda();\r\n    },\r\n    components:{\r\n        flatPickr,\r\n    },\r\n    methods:{\r\n        getReporteAgenda(){\r\n            let me = this;\r\n            me.visitasAgenda = []\r\n            me.$vs.loading();\r\n            this.$http.get(this.$server_url+'ReporteVisitaAsesores?fromDate='+me.fromDate+'&toDate='+me.toDate)\r\n                .then(function (res) {\r\n                    me.visitasAgenda = res.data\r\n                    me.$vs.loading.close()\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                    me.$vs.loading.close()\r\n                })\r\n        },\r\n          //METODOS PARA EXPORTAR A EXCEL\r\n          exportToExcel() {\r\n            let headerTitle = [ 'Asesor','Cantidad visitas'];\r\n            let headerVal = [ 'asesor','contador'];\r\n            import('@/vendor/Export2Excel').then(excel => {\r\n                const data = this.formatJson(headerVal, this.codigoSelected)\r\n                excel.export_json_to_excel({\r\n                    header: headerTitle,\r\n                    data,\r\n                    filename: this.fileName,\r\n                    autoWidth: this.cellAutoWidth,\r\n                    bookType: this.selectedFormat\r\n                })\r\n                this.clearFields()\r\n                this.guardarActivo = '';\r\n                this.generarActivo = ' ';\r\n                this.textAlertCant = '';\r\n                this.cantidad = '';\r\n                this.codigoSelected = [];\r\n            })\r\n        },\r\n\r\n        formatJson(filterVal, jsonData) {\r\n            return jsonData.map(v => filterVal.map(j => {\r\n                return v[j]\r\n            }))\r\n        },\r\n            //limpiar campos para exportar de nuevo\r\n        clearFields() {\r\n            this.fileName = ''\r\n            this.cellAutoWidth = true\r\n            this.selectedFormat = 'xls'\r\n        },\r\n        //FIN METODOS PARA EXPORTAR A EXCEL\r\n    },\r\n}\r\n</script>"]}]}