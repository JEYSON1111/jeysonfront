{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\home\\padres\\encuesta\\EncuestaAsignar.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\home\\padres\\encuesta\\EncuestaAsignar.vue","mtime":1712682816005},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nimport EscuelasAsignadasVue from './EscuelasAsignadas.vue';\r\nimport vSelect from 'vue-select'\r\nexport default{\r\n    data(){\r\n        return{\r\n            usuario:[],\r\n            filtroInstitucion:'',\r\n            arregloEncuestas:[],\r\n            instituciones:[],\r\n            arrayAsignacion:[],\r\n            asignar:{\r\n                encuesta_id:''\r\n            },\r\n            datosInstitucion:{\r\n                idInstitucion:'',\r\n                nombreInstitucion:'',\r\n                periodo_id:'',\r\n            },\r\n            title:'',\r\n        }\r\n    },\r\n    watch:{\r\n        filtroInstitucion(results){\r\n            let me = this;\r\n            if(me.filtroInstitucion.length > 5){\r\n                setTimeout(function() {me.getInstitucion()}, 500);\r\n            }else{\r\n               me.limpiar()\r\n            }\r\n        },\r\n    },  \r\n    created(){\r\n        let me = this;\r\n        me.usuario = JSON.parse(localStorage.getItem(\"usuario\"))\r\n    },\r\n    mounted(){\r\n        let me = this\r\n        me.getEncuestas()\r\n        me.getAsignaciones()\r\n    },\r\n    methods:{\r\n        getEncuestas() {\r\n            let me = this;\r\n            this.$http.get(this.$server_url+'encuesta?getEncuestas=yes')\r\n                .then(function (res) {\r\n                    let datos = res.data\r\n                    me.arregloEncuestas = datos.filter(p => p.estado == 1)   \r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                })\r\n        },\r\n        getAsignaciones(){\r\n            let me = this\r\n            me.$vs.loading()\r\n            this.$http.get(this.$server_url+'encuesta?getEncuestaEscuela=yes')\r\n                .then(function (res) {\r\n                    me.$vs.loading.close()\r\n                    me.arrayAsignacion = res.data\r\n                })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close()\r\n                    console.log(error + ' error');\r\n                })\r\n        },\r\n        agregarEncuesta(){\r\n            let me = this;\r\n            let host = location.protocol + '//' + location.hostname +':'+ location.port + '/encuesta/escuelas/'+ me.datosInstitucion.idInstitucion +'/'\r\n            if(me.datosInstitucion.idInstitucion == null || me.datosInstitucion.idInstitucion == undefined || me.datosInstitucion.idInstitucion == ''){\r\n                me.$vs.notify({\r\n                text:'Debe seleccionar una institución por favor',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n                return false;\r\n            }\r\n            if(me.asignar.encuesta_id == null || me.asignar.encuesta_id == undefined || me.asignar.encuesta_id == '' || me.asignar.encuesta_id == 0){\r\n                me.$vs.notify({\r\n                text:'Debe seleccionar una encuesta por favor',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n                return false;\r\n            }\r\n            me.$vs.loading()\r\n            let formData = new FormData();\r\n            formData.append('institucion_id',     me.datosInstitucion.idInstitucion);\r\n            formData.append('periodo_id',         me.datosInstitucion.periodo_id);\r\n            formData.append('encuesta_id',        me.asignar.encuesta_id);\r\n            formData.append('link',               host)\r\n            formData.append('user_created',       me.usuario.idusuario);  \r\n            this.$http.post(this.$server_url+'guardarAsignacion', formData)\r\n            .then(res => {\r\n                me.$vs.loading.close()\r\n                if(res.data.status == 3){\r\n                    me.$vs.notify({\r\n                    text:res.data.message,\r\n                    color:'warning',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check'})\r\n                    return false;\r\n                }\r\n                // me.limpiar()\r\n                me.getAsignaciones()\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                me.$vs.loading.close();\r\n            })\r\n        },\r\n        selectInstitucion(tr){\r\n            let me = this;\r\n            me.datosInstitucion.idInstitucion       = tr.idInstitucion;\r\n            me.datosInstitucion.nombreInstitucion   = tr.nombreInstitucion;\r\n            me.title = 'Institución seleccionada: '+  me.datosInstitucion.nombreInstitucion\r\n            me.datosInstitucion.periodo_id          = tr.periodo_id\r\n            me.instituciones = []\r\n        },\r\n        getInstitucion() {\r\n            let me = this;\r\n            me.instituciones = [];\r\n            if(me.filtroInstitucion.length < 5){\r\n                me.$vs.notify({\r\n                text:'Minimo 5 caracteres de busqueda',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n                return false;\r\n            }\r\n            me.$vs.loading()\r\n            this.$http.get(this.$server_url + 'listaInsitucion?busqueda='+me.filtroInstitucion)\r\n                .then(function (res) {\r\n                    me.instituciones = res.data;\r\n                    me.$vs.loading.close()\r\n                    if(res.data.message){\r\n                        me.$vs.notify({\r\n                        text: res.data.message,\r\n                        color: 'success',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-user',\r\n                        time:5000,\r\n                    })\r\n                    }\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                    me.$vs.loading.close()\r\n                })\r\n        },\r\n        limpiar(){\r\n            let me = this;\r\n            me.datosInstitucion.idInstitucion       = '';\r\n            me.datosInstitucion.nombreInstitucion   = '';\r\n            me.title                                = '';\r\n            me.datosInstitucion.periodo_id          = '';\r\n        },\r\n        //METODOS DE ESCUELAS ASIGNADAS\r\n        changeHandle(e){\r\n            let me = this;\r\n            if(e.accion == 'eliminar') me.eliminarLink(e.id)\r\n            if(e.accion == 'changeEstado') me.changeEstado(e.id,e.estado)\r\n        },\r\n        changeEstado(id,estado){\r\n            let me = this;\r\n            var estadoE = 0\r\n            if(estado) estadoE = 1\r\n            let formData = new FormData()\r\n            formData.append('changeEstado','yes')\r\n            formData.append('id',id)\r\n            formData.append('estado',estadoE)\r\n            me.$vs.loading()\r\n            this.$http.post(this.$server_url+'encuesta',formData)\r\n            .then(res => {\r\n                me.$vs.loading.close()\r\n                me.$vs.notify({\r\n                    text: 'Se cambio de estado correctamente',\r\n                    color: 'success',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-alert-triangle'\r\n                })\r\n                me.getAsignaciones()\r\n            })\r\n            .catch(function (error) {\r\n            me.$vs.loading.close()\r\n            console.log(error)\r\n            })\r\n\r\n        },\r\n        eliminarLink(id){\r\n        let me = this\r\n        let formData = new FormData()\r\n        formData.append('eliminarEncuestaAsignada','yes')\r\n        formData.append('id',id)\r\n        me.$vs.loading()\r\n        this.$http.post(this.$server_url+'encuesta',formData)\r\n            .then(res => {\r\n                me.$vs.loading.close()\r\n                me.$vs.notify({\r\n                    text: 'Se elimino correctamente la encuesta asignada',\r\n                    color: 'success',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-alert-triangle'\r\n                })\r\n                me.getAsignaciones()\r\n            })\r\n            .catch(function (error) {\r\n            me.$vs.loading.close()\r\n            console.log(error)\r\n            })\r\n        },\r\n        //FIN METODOS ESCUELAS ASIGNADAS\r\n    },\r\n    components:{\r\n        vSelect,\r\n        EscuelasAsignadasVue,\r\n    }\r\n}\r\n",{"version":3,"sources":["EncuestaAsignar.vue"],"names":[],"mappings":";AAwEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"EncuestaAsignar.vue","sourceRoot":"src/views/home/padres/encuesta","sourcesContent":["<template>\r\n    <div class=\"mt-5\">\r\n        <p class=\"text-warning font-semibold\">>> Asignar encuesta a la institución</p>\r\n        <vs-divider color=\"warning\">{{title}}</vs-divider>\r\n        <div class=\"flex mb-4\">\r\n            <div class=\"w-1/2 p-2 bg-gray-400 text-center\">\r\n                <p>Busqueda de institucion</p>\r\n                <vs-input icon=\"search\" class=\"w-full mt-5\" @keyup.enter=\"getInstitucion()\"  v-model=\"filtroInstitucion\"/>\r\n            </div>\r\n            <div class=\"w-1/2 p-2 bg-gray-500 text-center\">\r\n                <p>Encuestas</p>\r\n                <v-select :options=\"arregloEncuestas\" :reduce=\"arregloEncuestas => arregloEncuestas.id\" label=\"descripcion\" class=\"w-full mt-5\" v-model=\"asignar.encuesta_id\" />       \r\n            </div>\r\n        </div>\r\n        <div class=\"w-full\" v-if=\"instituciones.length > 0\">\r\n            <vs-divider color=\"primary\">Seleccione un institucion</vs-divider>\r\n            <vs-table max-items=\"5\" search pagination :data=\"instituciones\">\r\n                <template slot=\"thead\">\r\n                    <vs-th sort-key=\"idInstitucion\">#</vs-th>\r\n                    <vs-th sort-key=\"nombreInstitucion\">Institución (asesores)</vs-th>\r\n                    <vs-th sort-key=\"nombre\">Localidad</vs-th>\r\n                    <vs-th sort-key=\"nombre\">Periodo</vs-th>\r\n                    <vs-th>Acciones</vs-th>\r\n                </template>\r\n                <template slot-scope=\"{data}\">\r\n                    <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                        <vs-td :data=\"data[indextr].idInstitucion \">\r\n                            {{data[indextr].idInstitucion }}\r\n                        </vs-td>\r\n                        <vs-td :data=\"data[indextr].nombreInstitucion\">\r\n                            {{data[indextr].nombreInstitucion}}<br>\r\n                            <div v-if=\"data[indextr].nombre_asesor == null &&  data[indextr].apellido_asesor == null\">\r\n                            <small> <i style=\"color:red;\">No existe asesor </i></small><br>\r\n                            </div>\r\n                            <div v-else>\r\n                                <small> <i>{{data[indextr].nombre_asesor}} {{data[indextr].apellido_asesor}} </i></small><br>\r\n                            </div>\r\n                            <small>{{data[indextr].fecha_registro}} </small><br>\r\n                            <vs-chip v-if=\"tr.estadoInstitucion == 1\" color=\"success\">{{ tr.estado }}</vs-chip>\r\n                            <vs-chip v-else>{{ tr.estado }}</vs-chip>\r\n                        </vs-td>\r\n                        <vs-td :data=\"data[indextr].nombreregion\">\r\n                            {{data[indextr].nombreregion}} <br>\r\n                            <small>{{data[indextr].ciudad}}</small>\r\n                        </vs-td>\r\n                        <vs-td :data=\"data[indextr].periodo\">\r\n                            {{data[indextr].periodo}} <br>\r\n                            <small v-if=\"tr.statusPeriodo == 1\" class=\"text-success font-bold\">{{tr.estadoPeriodo}}</small>\r\n                            <small v-else>{{tr.estadoPeriodo}}</small>\r\n                        </vs-td>\r\n                        <vs-td>\r\n                            <div style=\"display: flex;\">\r\n                                <div>\r\n                                    <vx-tooltip style=\"display: inline-block;\" text=\"Asignar institución\" position=\"top\" color=\"primary\">\r\n                                        <vs-button class=\"modal-default-button\" size=\"small\" color=\"success\" type=\"filled\" @click=\"selectInstitucion(tr)\" icon-pack=\"feather\" icon=\"icon-check\"> </vs-button>\r\n                                    </vx-tooltip> &nbsp;\r\n                                </div>\r\n                            </div>\r\n                        </vs-td> \r\n                    </vs-tr>\r\n                </template>\r\n            </vs-table>\r\n        </div>\r\n        <div class=\"w-full\" align=\"center\">\r\n            <vs-button color=\"success\" icon=\"save\" type=\"gradient\" @click=\"agregarEncuesta()\">Agregar</vs-button>\r\n        </div>\r\n        <p class=\"text-warning font-semibold\">>> Listado de asignaciones</p>\r\n        <vs-divider></vs-divider>\r\n        <EscuelasAsignadasVue @accion =\"changeHandle\" :arrayAsignacion=\"arrayAsignacion\"/>\r\n    </div>\r\n</template>\r\n<script>\r\nimport EscuelasAsignadasVue from './EscuelasAsignadas.vue';\r\nimport vSelect from 'vue-select'\r\nexport default{\r\n    data(){\r\n        return{\r\n            usuario:[],\r\n            filtroInstitucion:'',\r\n            arregloEncuestas:[],\r\n            instituciones:[],\r\n            arrayAsignacion:[],\r\n            asignar:{\r\n                encuesta_id:''\r\n            },\r\n            datosInstitucion:{\r\n                idInstitucion:'',\r\n                nombreInstitucion:'',\r\n                periodo_id:'',\r\n            },\r\n            title:'',\r\n        }\r\n    },\r\n    watch:{\r\n        filtroInstitucion(results){\r\n            let me = this;\r\n            if(me.filtroInstitucion.length > 5){\r\n                setTimeout(function() {me.getInstitucion()}, 500);\r\n            }else{\r\n               me.limpiar()\r\n            }\r\n        },\r\n    },  \r\n    created(){\r\n        let me = this;\r\n        me.usuario = JSON.parse(localStorage.getItem(\"usuario\"))\r\n    },\r\n    mounted(){\r\n        let me = this\r\n        me.getEncuestas()\r\n        me.getAsignaciones()\r\n    },\r\n    methods:{\r\n        getEncuestas() {\r\n            let me = this;\r\n            this.$http.get(this.$server_url+'encuesta?getEncuestas=yes')\r\n                .then(function (res) {\r\n                    let datos = res.data\r\n                    me.arregloEncuestas = datos.filter(p => p.estado == 1)   \r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                })\r\n        },\r\n        getAsignaciones(){\r\n            let me = this\r\n            me.$vs.loading()\r\n            this.$http.get(this.$server_url+'encuesta?getEncuestaEscuela=yes')\r\n                .then(function (res) {\r\n                    me.$vs.loading.close()\r\n                    me.arrayAsignacion = res.data\r\n                })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close()\r\n                    console.log(error + ' error');\r\n                })\r\n        },\r\n        agregarEncuesta(){\r\n            let me = this;\r\n            let host = location.protocol + '//' + location.hostname +':'+ location.port + '/encuesta/escuelas/'+ me.datosInstitucion.idInstitucion +'/'\r\n            if(me.datosInstitucion.idInstitucion == null || me.datosInstitucion.idInstitucion == undefined || me.datosInstitucion.idInstitucion == ''){\r\n                me.$vs.notify({\r\n                text:'Debe seleccionar una institución por favor',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n                return false;\r\n            }\r\n            if(me.asignar.encuesta_id == null || me.asignar.encuesta_id == undefined || me.asignar.encuesta_id == '' || me.asignar.encuesta_id == 0){\r\n                me.$vs.notify({\r\n                text:'Debe seleccionar una encuesta por favor',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n                return false;\r\n            }\r\n            me.$vs.loading()\r\n            let formData = new FormData();\r\n            formData.append('institucion_id',     me.datosInstitucion.idInstitucion);\r\n            formData.append('periodo_id',         me.datosInstitucion.periodo_id);\r\n            formData.append('encuesta_id',        me.asignar.encuesta_id);\r\n            formData.append('link',               host)\r\n            formData.append('user_created',       me.usuario.idusuario);  \r\n            this.$http.post(this.$server_url+'guardarAsignacion', formData)\r\n            .then(res => {\r\n                me.$vs.loading.close()\r\n                if(res.data.status == 3){\r\n                    me.$vs.notify({\r\n                    text:res.data.message,\r\n                    color:'warning',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check'})\r\n                    return false;\r\n                }\r\n                // me.limpiar()\r\n                me.getAsignaciones()\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                me.$vs.loading.close();\r\n            })\r\n        },\r\n        selectInstitucion(tr){\r\n            let me = this;\r\n            me.datosInstitucion.idInstitucion       = tr.idInstitucion;\r\n            me.datosInstitucion.nombreInstitucion   = tr.nombreInstitucion;\r\n            me.title = 'Institución seleccionada: '+  me.datosInstitucion.nombreInstitucion\r\n            me.datosInstitucion.periodo_id          = tr.periodo_id\r\n            me.instituciones = []\r\n        },\r\n        getInstitucion() {\r\n            let me = this;\r\n            me.instituciones = [];\r\n            if(me.filtroInstitucion.length < 5){\r\n                me.$vs.notify({\r\n                text:'Minimo 5 caracteres de busqueda',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n                return false;\r\n            }\r\n            me.$vs.loading()\r\n            this.$http.get(this.$server_url + 'listaInsitucion?busqueda='+me.filtroInstitucion)\r\n                .then(function (res) {\r\n                    me.instituciones = res.data;\r\n                    me.$vs.loading.close()\r\n                    if(res.data.message){\r\n                        me.$vs.notify({\r\n                        text: res.data.message,\r\n                        color: 'success',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-user',\r\n                        time:5000,\r\n                    })\r\n                    }\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                    me.$vs.loading.close()\r\n                })\r\n        },\r\n        limpiar(){\r\n            let me = this;\r\n            me.datosInstitucion.idInstitucion       = '';\r\n            me.datosInstitucion.nombreInstitucion   = '';\r\n            me.title                                = '';\r\n            me.datosInstitucion.periodo_id          = '';\r\n        },\r\n        //METODOS DE ESCUELAS ASIGNADAS\r\n        changeHandle(e){\r\n            let me = this;\r\n            if(e.accion == 'eliminar') me.eliminarLink(e.id)\r\n            if(e.accion == 'changeEstado') me.changeEstado(e.id,e.estado)\r\n        },\r\n        changeEstado(id,estado){\r\n            let me = this;\r\n            var estadoE = 0\r\n            if(estado) estadoE = 1\r\n            let formData = new FormData()\r\n            formData.append('changeEstado','yes')\r\n            formData.append('id',id)\r\n            formData.append('estado',estadoE)\r\n            me.$vs.loading()\r\n            this.$http.post(this.$server_url+'encuesta',formData)\r\n            .then(res => {\r\n                me.$vs.loading.close()\r\n                me.$vs.notify({\r\n                    text: 'Se cambio de estado correctamente',\r\n                    color: 'success',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-alert-triangle'\r\n                })\r\n                me.getAsignaciones()\r\n            })\r\n            .catch(function (error) {\r\n            me.$vs.loading.close()\r\n            console.log(error)\r\n            })\r\n\r\n        },\r\n        eliminarLink(id){\r\n        let me = this\r\n        let formData = new FormData()\r\n        formData.append('eliminarEncuestaAsignada','yes')\r\n        formData.append('id',id)\r\n        me.$vs.loading()\r\n        this.$http.post(this.$server_url+'encuesta',formData)\r\n            .then(res => {\r\n                me.$vs.loading.close()\r\n                me.$vs.notify({\r\n                    text: 'Se elimino correctamente la encuesta asignada',\r\n                    color: 'success',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-alert-triangle'\r\n                })\r\n                me.getAsignaciones()\r\n            })\r\n            .catch(function (error) {\r\n            me.$vs.loading.close()\r\n            console.log(error)\r\n            })\r\n        },\r\n        //FIN METODOS ESCUELAS ASIGNADAS\r\n    },\r\n    components:{\r\n        vSelect,\r\n        EscuelasAsignadasVue,\r\n    }\r\n}\r\n</script>"]}]}