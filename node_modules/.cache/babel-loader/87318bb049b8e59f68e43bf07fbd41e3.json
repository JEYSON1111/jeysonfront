{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\docentes\\chat\\ChatNavbar.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\docentes\\chat\\ChatNavbar.vue","mtime":1712682815753},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\babel.config.js","mtime":1712682813877},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\.babelrc","mtime":1712682813750},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nexport default {\n  props: {\n    userId: {\n      type: Number,\n      required: true\n    },\n    isPinnedProp: {\n      type: Boolean,\n      required: true\n    },\n    isSidebarCollapsed: {\n      type: Boolean,\n      required: true\n    }\n  },\n  computed: {\n    isPinnedLocal: {\n      get: function get() {\n        return this.isPinnedProp;\n      },\n      set: function set(val) {\n        var _this = this;\n        var chatData = this.$store.getters['chat/chatDataOfUser'](this.userId);\n        if (chatData) {\n          var payload = {\n            id: this.userId,\n            value: val\n          };\n          this.$store.dispatch('chat/toggleIsPinned', payload).then(function () {\n            _this.$emit('toggleIsChatPinned', val);\n          }).catch(function (err) {\n            console.error(err);\n          });\n        } else {\n          this.$emit('toggleIsChatPinned', val);\n        }\n      }\n    },\n    userDetails: function userDetails() {\n      return this.$store.getters['chat/contact'](this.userId);\n    },\n    getStatusColor: function getStatusColor() {\n      var _this2 = this;\n      return function (isActiveUser) {\n        var userStatus = _this2.getUserStatus(isActiveUser);\n        if (userStatus === 'online') {\n          return 'success';\n        } else if (userStatus === 'do not disturb') {\n          return 'danger';\n        } else if (userStatus === 'away') {\n          return 'warning';\n        } else {\n          return 'grey';\n        }\n      };\n    }\n  },\n  methods: {\n    getUserStatus: function getUserStatus(isActiveUser) {\n      return isActiveUser ? this.$store.state.AppActiveUser.status : this.userDetails.status;\n    }\n  }\n};",{"version":3,"names":["props","userId","type","Number","required","isPinnedProp","Boolean","isSidebarCollapsed","computed","isPinnedLocal","get","set","val","_this","chatData","$store","getters","payload","id","value","dispatch","then","$emit","catch","err","console","error","userDetails","getStatusColor","_this2","isActiveUser","userStatus","getUserStatus","methods","state","AppActiveUser","status"],"sources":["src/views/docentes/chat/ChatNavbar.vue"],"sourcesContent":["<!-- =========================================================================================\r\n    File Name: ChatNavbar.vue\r\n    Description: Chat Application - Chat navbar\r\n    ----------------------------------------------------------------------------------------\r\n    Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\r\n      Author: Pixinvent\r\n    Author URL: http://www.themeforest.net/user/pixinvent\r\n========================================================================================== -->\r\n\r\n<template>\r\n    <div v-if=\"userId != null\" class=\"chat__header\">\r\n        <vs-navbar class=\"p-4 flex navbar-custom\" color=\"white\" type=\"flat\">\r\n            <div class=\"relative flex mr-4\">\r\n                <feather-icon icon=\"MenuIcon\" class=\"mr-4 cursor-pointer\" v-if=\"isSidebarCollapsed\" @click.stop=\"$emit('openContactsSidebar')\" />\r\n                <vs-avatar class=\"m-0 border-2 border-solid border-white\" size=\"40px\" :src=\"userDetails.photoURL\" @click.stop=\"$emit('showProfileSidebar', userId)\" />\r\n                <div class=\"h-3 w-3 border-white border border-solid rounded-full absolute right-0 bottom-0\" :class=\"'bg-' + getStatusColor(false)\"></div>\r\n            </div>\r\n            <h6>{{ userDetails.displayName }}</h6>\r\n            <vs-spacer></vs-spacer>\r\n            <feather-icon icon=\"StarIcon\" class=\"cursor-pointer\" :svgClasses=\"[{'text-warning stroke-current': isPinnedLocal}, 'w-6', 'h-6']\" @click.stop=\"isPinnedLocal = !isPinnedLocal\"></feather-icon>\r\n        </vs-navbar>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    userId: {\r\n      type: Number,\r\n      required: true\r\n    },\r\n    isPinnedProp: {\r\n      type: Boolean,\r\n      required: true\r\n    },\r\n    isSidebarCollapsed: {\r\n      type: Boolean,\r\n      required: true\r\n    }\r\n  },\r\n  computed: {\r\n    isPinnedLocal: {\r\n      get () {\r\n        return this.isPinnedProp\r\n      },\r\n      set (val) {\r\n        const chatData = this.$store.getters['chat/chatDataOfUser'](this.userId)\r\n        if (chatData) {\r\n          const payload = { id: this.userId, value: val }\r\n          this.$store.dispatch('chat/toggleIsPinned', payload)\r\n            .then(() => { this.$emit('toggleIsChatPinned', val) })\r\n            .catch((err) => { console.error(err) })\r\n        } else {\r\n          this.$emit('toggleIsChatPinned', val)\r\n        }\r\n      }\r\n    },\r\n    userDetails () {\r\n      return this.$store.getters['chat/contact'](this.userId)\r\n    },\r\n    getStatusColor () {\r\n      return (isActiveUser) => {\r\n        const userStatus = this.getUserStatus(isActiveUser)\r\n\r\n        if (userStatus === 'online') {\r\n          return 'success'\r\n        } else if (userStatus === 'do not disturb') {\r\n          return 'danger'\r\n        } else if (userStatus === 'away') {\r\n          return 'warning'\r\n        } else {\r\n          return 'grey'\r\n        }\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    getUserStatus (isActiveUser) {\r\n      return isActiveUser ? this.$store.state.AppActiveUser.status : this.userDetails.status\r\n    }\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n"],"mappings":";AAyBA;EACAA,KAAA;IACAC,MAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,QAAA;IACA;IACAC,YAAA;MACAH,IAAA,EAAAI,OAAA;MACAF,QAAA;IACA;IACAG,kBAAA;MACAL,IAAA,EAAAI,OAAA;MACAF,QAAA;IACA;EACA;EACAI,QAAA;IACAC,aAAA;MACAC,GAAA,WAAAA,IAAA;QACA,YAAAL,YAAA;MACA;MACAM,GAAA,WAAAA,IAAAC,GAAA;QAAA,IAAAC,KAAA;QACA,IAAAC,QAAA,QAAAC,MAAA,CAAAC,OAAA,6BAAAf,MAAA;QACA,IAAAa,QAAA;UACA,IAAAG,OAAA;YAAAC,EAAA,OAAAjB,MAAA;YAAAkB,KAAA,EAAAP;UAAA;UACA,KAAAG,MAAA,CAAAK,QAAA,wBAAAH,OAAA,EACAI,IAAA;YAAAR,KAAA,CAAAS,KAAA,uBAAAV,GAAA;UAAA,GACAW,KAAA,WAAAC,GAAA;YAAAC,OAAA,CAAAC,KAAA,CAAAF,GAAA;UAAA;QACA;UACA,KAAAF,KAAA,uBAAAV,GAAA;QACA;MACA;IACA;IACAe,WAAA,WAAAA,YAAA;MACA,YAAAZ,MAAA,CAAAC,OAAA,sBAAAf,MAAA;IACA;IACA2B,cAAA,WAAAA,eAAA;MAAA,IAAAC,MAAA;MACA,iBAAAC,YAAA;QACA,IAAAC,UAAA,GAAAF,MAAA,CAAAG,aAAA,CAAAF,YAAA;QAEA,IAAAC,UAAA;UACA;QACA,WAAAA,UAAA;UACA;QACA,WAAAA,UAAA;UACA;QACA;UACA;QACA;MACA;IACA;EACA;EACAE,OAAA;IACAD,aAAA,WAAAA,cAAAF,YAAA;MACA,OAAAA,YAAA,QAAAf,MAAA,CAAAmB,KAAA,CAAAC,aAAA,CAAAC,MAAA,QAAAT,WAAA,CAAAS,MAAA;IACA;EACA;AACA","ignoreList":[]}]}