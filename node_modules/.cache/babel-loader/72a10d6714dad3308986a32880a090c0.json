{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\codigos\\components\\importPeriodoVarios.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\codigos\\components\\importPeriodoVarios.vue","mtime":1712682815639},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\babel.config.js","mtime":1712682813877},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\.babelrc","mtime":1712682813750},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import ImportExcel from \"./importExcel.vue\";\nimport gestionCodigosListaVue from \"./utils/gestionCodigosLista.vue\";\nexport default {\n  components: {\n    ImportExcel: ImportExcel,\n    gestionCodigosListaVue: gestionCodigosListaVue\n  },\n  data: function data() {\n    return {\n      codigosPerdidos: false,\n      tableData: [],\n      header: [],\n      sheetName: '',\n      usuario: [],\n      modalConfirm: false,\n      modalErrores: false,\n      errores: [],\n      tipo_selected: '',\n      cedulas_no_encontradas: [],\n      modalCedulas: false,\n      codigosNoCambiados: [],\n      codigosConUsuario: [],\n      codigoNoExiste: [],\n      porcentaje: 0,\n      //variables para el export a excel\n      activePrompt: false,\n      codigoSelected: [],\n      reportesActivo: 0,\n      fileName: null,\n      formats: ['xls', 'xlsx', 'csv', 'txt'],\n      cellAutoWidth: true,\n      selectedFormat: 'xlsx',\n      codigosNoExisten: [],\n      cantidadNoExisten: 0\n    };\n  },\n  created: function created() {\n    this.usuario = JSON.parse(localStorage.getItem('usuario'));\n    this.codigosPerdidos = false;\n  },\n  methods: {\n    loadDataInTable: function loadDataInTable(_ref) {\n      var results = _ref.results,\n        header = _ref.header,\n        meta = _ref.meta;\n      this.header = header;\n      this.tableData = results;\n      this.sheetName = meta.sheetName;\n    },\n    procesarPagos: function procesarPagos() {\n      var me = this;\n      me.$vs.loading();\n      var json_pagos = JSON.stringify(me.tableData);\n      var formData = new FormData();\n      formData.append('data_codigos', json_pagos);\n      formData.append('id_usuario', me.usuario.idusuario);\n      this.$http.post(this.$server_url + 'codigos/import/periodo/varios', formData).then(function (res) {\n        me.$vs.loading.close();\n        if (res.data.status == 0) {\n          me.$vs.notify({\n            text: res.data.message,\n            color: 'success',\n            iconPack: 'feather',\n            icon: 'icon-check'\n          });\n          return false;\n        }\n        me.$vs.notify({\n          text: 'Códigos procesados exitosamente',\n          color: 'success',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        me.modalConfirm = false;\n        me.tableData = [];\n        me.codigosPerdidos = true;\n        me.codigosNoCambiados = res.data.codigosNoCambiados;\n        me.codigoNoExiste = res.data.codigoNoExiste;\n        me.codigosConUsuario = res.data.codigosConUsuario;\n        me.porcentaje = res.data.cambiados;\n      }).catch(function (error) {\n        me.$vs.notify({\n          text: 'Verifique que la información se haya guardado correctamente.',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-alert-triangle'\n        });\n        me.$vs.loading.close();\n        // setTimeout(function() {location.reload()}, 1000);\n      });\n    },\n    openConfirm: function openConfirm(tipo) {\n      var me = this;\n      me.tipo_selected = tipo;\n      if (!me.tableData[0].codigo || !me.tableData[0].id_periodo || !me.tableData[0].comentario) {\n        me.$vs.loading.close();\n        me.$vs.notify({\n          text: 'Corrija el formato del excel y vuelva a intentar.',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-alert-triangle'\n        });\n        return;\n      }\n      me.errores = [];\n      $.each(me.tableData, function (key, value) {\n        if (!value.codigo || isNaN(!value.comentario || !value.id_periodo)) {\n          me.errores.push(value);\n        }\n      });\n      if (me.errores.length > 0) {\n        me.modalErrores = true;\n      } else {\n        me.modalConfirm = true;\n      }\n    },\n    recargar: function recargar() {\n      location.reload();\n    },\n    //METODOS PARA EXCEL\n    //para limipiar los campos del excel\n    clearFields: function clearFields() {\n      this.fileName = '';\n      this.cellAutoWidth = true;\n      this.selectedFormat = 'xls';\n    },\n    //metodo par descargar el excel\n    exportToExcel: function exportToExcel() {\n      var _this = this;\n      var headerTitle = ['codigo', 'institucion estudiante', 'periodo estudiante', 'estudiante', 'cedula', 'estado', 'liquidacion', 'código de barras', 'bc_estado', 'venta estado', 'institucion barras', 'periodo barras'];\n      var headerVal = ['codigo', 'nombreInstitucion', 'periodo', 'estudiante', 'cedula', 'codigoEstado', 'liquidacion', 'status', 'barrasEstado', 'ventaEstado', 'institucionBarra', 'periodo_barras'];\n      var codigoSelectedMayus = this.codigoSelected;\n      for (var i = 0; i < codigoSelectedMayus.length; i++) {\n        for (var key in codigoSelectedMayus[i]) {\n          if (typeof codigoSelectedMayus[i][key] == \"string\") {\n            codigoSelectedMayus[i][key] = codigoSelectedMayus[i][key].toUpperCase();\n          }\n        }\n      }\n      import('@/vendor/Export2Excel').then(function (excel) {\n        var list = codigoSelectedMayus;\n        var data = _this.formatJson(headerVal, list);\n        excel.export_json_to_excel({\n          header: headerTitle,\n          data: data,\n          filename: _this.fileName,\n          autoWidth: _this.cellAutoWidth,\n          bookType: _this.selectedFormat\n        });\n        _this.clearFields();\n        _this.guardarActivo = '';\n        _this.generarActivo = ' ';\n        _this.textAlertCant = '';\n        _this.cantidad = '';\n        _this.codigoSelected = [];\n      });\n    },\n    formatJson: function formatJson(filterVal, jsonData) {\n      return jsonData.map(function (v) {\n        return filterVal.map(function (j) {\n          return v[j];\n        });\n      });\n    }\n  }\n};",{"version":3,"names":["ImportExcel","gestionCodigosListaVue","components","data","codigosPerdidos","tableData","header","sheetName","usuario","modalConfirm","modalErrores","errores","tipo_selected","cedulas_no_encontradas","modalCedulas","codigosNoCambiados","codigosConUsuario","codigoNoExiste","porcentaje","activePrompt","codigoSelected","reportesActivo","fileName","formats","cellAutoWidth","selectedFormat","codigosNoExisten","cantidadNoExisten","created","JSON","parse","localStorage","getItem","methods","loadDataInTable","_ref","results","meta","procesarPagos","me","$vs","loading","json_pagos","stringify","formData","FormData","append","idusuario","$http","post","$server_url","then","res","close","status","notify","text","message","color","iconPack","icon","cambiados","catch","error","openConfirm","tipo","codigo","id_periodo","comentario","$","each","key","value","isNaN","push","length","recargar","location","reload","clearFields","exportToExcel","_this","headerTitle","headerVal","codigoSelectedMayus","i","toUpperCase","excel","list","formatJson","export_json_to_excel","filename","autoWidth","bookType","guardarActivo","generarActivo","textAlertCant","cantidad","filterVal","jsonData","map","v","j"],"sources":["src/views/codigos/components/importPeriodoVarios.vue"],"sourcesContent":["\r\n<template>\r\n  <div>\r\n    <vs-popup title=\"Errores en excel de los codigos\" :active.sync=\"modalErrores\" style=\"padding: 0% !important;\">\r\n       <div class=\"w-full\" style=\"background: rgb(121,9,9); padding: 20px; border-radius: 5px; background: linear-gradient(90deg, rgba(121,9,9,1) 28%, rgba(255,0,48,1) 100%); color: white;\">\r\n         <div class=\"vx-row\">\r\n            <div class=\"vx-col sm:w-1/2 w-full\">\r\n              <b>Código</b>\r\n            </div>\r\n            <div class=\"vx-col sm:w-1/2 w-full\">\r\n              <b>Institución</b>\r\n            </div>\r\n        </div>\r\n        <vs-divider></vs-divider>\r\n        <div :key=\"index\" v-for=\"(item, index) in errores\">\r\n          <div class=\"vx-row\">\r\n            <div class=\"vx-col sm:w-1/2 w-full\">\r\n              <span v-if=\"item.codigo\"> {{item.codigo}} </span>\r\n            </div>\r\n            <div class=\"vx-col sm:w-1/2 w-full\">\r\n              <span v-if=\"item.Id_institucion\"> {{item.Id_institucion}} </span>\r\n            </div>\r\n              <div class=\"vx-col sm:w-1/2 w-full\">\r\n              <span v-if=\"item.comentario\"> {{item.comentario}} </span>\r\n            </div>\r\n            <div class=\"vx-col sm:w-1/2 w-full\">\r\n              <span v-if=\"item.venta_estado\"> {{item.venta_estado}} </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n       </div>\r\n    </vs-popup>\r\n    <vs-popup title=\"Códigos no encontrados\" :active.sync=\"modalCedulas\" @accept=\"recargar()\" @close=\"recargar()\" @cancel=\"recargar()\"  style=\"padding: 0% !important;\">\r\n       <div class=\"w-full\" style=\"background: rgb(235,147,25); background: linear-gradient(90deg, rgba(235,147,25,1) 28%, rgba(255,166,0,1) 100%); color: white; border-radius: 5px; padding: 10px;\">\r\n        <div class=\"vx-row\">\r\n          <div class=\"vx-col w-full\" align=\"center\">\r\n           <b>Codigos a las que no se aplicaron correctamente</b>\r\n          </div>\r\n        </div>\r\n        <vs-divider></vs-divider>\r\n        <div :key=\"index\" v-for=\"(item, index) in cedulas_no_encontradas\">\r\n          <div class=\"vx-row\">\r\n            <div class=\"vx-col w-full\" align=\"center\"> <span> {{item}} </span> </div>\r\n          </div>\r\n        </div>\r\n       </div>\r\n    </vs-popup>\r\n    <vs-popup small title=\"Confirmación\" :active.sync=\"modalConfirm\">\r\n      <div class=\"w-full mb-base\" align=\"center\">\r\n        <h4>Está seguro de aplicar estas códigos?</h4>\r\n      </div>\r\n      <div class=\"w-full\" align=\"center\">\r\n        <vs-button class=\"mb-2\" color=\"danger\" type=\"gradient\" @click=\"procesarPagos()\"> Confirmar </vs-button>\r\n      </div>\r\n    </vs-popup>\r\n    <div class=\"mb-6\" align=\"center\">\r\n        <div class=\"vx-col w-full\">\r\n          <p style=\"color:#D2B61A;\">\r\n         <i class=\"fa fa-file\" aria-hidden=\"true\"></i>   Estos códigos se podran modificar el periodo y el id del usuario  <span style=\"font-weight: bold;\">(no ingrese más de 1500 registros en una sola carga.)</span>\r\n          </p>\r\n        </div>\r\n        <br/>\r\n        <import-excel :onSuccess=\"loadDataInTable\"  class=\"mb-4\" />\r\n      <div>\r\n        <vs-row>\r\n          <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\" vs-sm = \"12\" vs-xs=\"12\" >\r\n            <vs-card>\r\n              <div class=\"header\">\r\n                <p style=\"font-weight: bold;\">Formato del archivo excel</p>\r\n                <table class=\"tabla\">\r\n                  <tr>\r\n                    <th class=\"th1\">codigo</th>\r\n                    <th class=\"th1\">id_periodo</th>\r\n                    <th class=\"th1\">comentario</th>\r\n                  </tr>\r\n                  <tr>\r\n                    <td class=\"td1\">xxx</td>\r\n                    <td class=\"td1\">xxx</td>\r\n                    <td class=\"td1\">Se cambio el periodo del codigo por el motivo</td>\r\n                  </tr>\r\n                </table>\r\n              </div>\r\n            </vs-card>\r\n          </vs-col>\r\n        </vs-row>\r\n      </div>\r\n        <!-- {{tableData}} -->\r\n        <vs-alert v-if=\"tableData.length > 0\" class=\"mb-3\" color=\"success\" icon-pack=\"feather\" icon=\"icon-alert-triangle\">\r\n            <span>Excel cargado exitosamente. ¿Está seguro de procesar estos códigos?</span><br>\r\n        </vs-alert>\r\n        <vs-row v-if=\"tableData.length > 0 && tableData.length <= 1500 \">\r\n          <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\">\r\n            <vs-button class=\"mb-2\" color=\"primary\"  type=\"relief\" @click=\"openConfirm(0)\">Cambiar periodo de los codigos </vs-button>\r\n          </vs-col>\r\n        </vs-row>\r\n        <vs-row v-if=\"codigosPerdidos == true\">\r\n            <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\">\r\n              <vs-alert active=\"true\">\r\n                Se actualizo  {{ porcentaje }} códigos el periodo\r\n              </vs-alert>\r\n            </vs-col>\r\n        </vs-row>\r\n        <vs-row v-if=\"codigosPerdidos == true\">\r\n          <vs-card>\r\n            <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"6\">\r\n              <vs-list>\r\n                <p>Cantidad <span>{{ codigosNoCambiados.length }}</span></p>\r\n                  <vs-list-header icon=\"supervisor_account\" title=\"Códigos que no se pudieron cambiar\"></vs-list-header>\r\n                  <vs-list-item :key=\"indextr\" v-for=\"(tr, indextr) in codigosNoCambiados\" icon=\"check\" :title=\"tr.codigo\" >\r\n                  </vs-list-item>\r\n              </vs-list>\r\n            </vs-col>\r\n            <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"6\">\r\n              <vs-list>\r\n                <p>Cantidad <span>{{ codigoNoExiste.length }}</span></p>\r\n                  <vs-list-header icon=\"supervisor_account\" title=\"Códigos que no existen\"></vs-list-header>\r\n                  <vs-list-item :key=\"s\" v-for=\"(tr, s) in codigoNoExiste\" icon=\"check\" :title=\"tr.codigo\" >\r\n                  </vs-list-item>\r\n              </vs-list>\r\n            </vs-col>\r\n          </vs-card>\r\n        </vs-row>\r\n    </div>\r\n      <vs-row v-if=\"codigosPerdidos == true\">\r\n        <vs-card>\r\n          <div class=\"header\" v-if=\"codigosConUsuario.length >0\">\r\n            <span style=\"font-weight:bold;\">Codigos que tienen usuario</span>\r\n          </div>\r\n          <gestionCodigosListaVue :arregloCodigos=\"codigosConUsuario\" openModal=\"1\"/>\r\n        </vs-card>\r\n    </vs-row>\r\n    <vx-card v-if=\"tableData.length && header.length\">\r\n      <vs-table stripe pagination :max-items=\"10\" search :data=\"tableData\">\r\n        <template slot=\"header\">\r\n          <h4>Códigos a subir {{tableData.length}}</h4>\r\n        </template>\r\n        <template slot=\"thead\">\r\n          <vs-th :sort-key=\"heading\" v-for=\"heading in header\" :key=\"heading\">{{ heading }}</vs-th>\r\n        </template>\r\n        <template slot-scope=\"{data}\">\r\n          <vs-tr :data=\"tr\" :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n            <vs-td :data=\"col\" v-for=\"(col, indexcol) in data[indextr]\" :key=\"indexcol + col\">\r\n              {{ col }}\r\n            </vs-td>\r\n          </vs-tr>\r\n        </template>\r\n      </vs-table>\r\n    </vx-card>\r\n      <!--MODAL PARA EXPORTAR A EXCEL-->\r\n    <vs-prompt title=\"Exportar a Excel\" class=\"export-options\" @cancle=\"clearFields\" @accept=\"exportToExcel\" accept-text=\"Exportar\" @close=\"clearFields\" :active.sync=\"activePrompt\">\r\n      <vs-alert class=\"mb-3\" color=\"danger\" icon-pack=\"feather\" icon=\"icon-info\">\r\n        <span>Recuerde <b>seleccionar</b> los códigos que desea exportar.</span>\r\n      </vs-alert>\r\n      <vs-input v-model=\"fileName\" placeholder=\"Ingrese el nombre del archivo\" class=\"w-full\" />\r\n      <v-select v-model=\"selectedFormat\" :options=\"formats\" class=\"my-4\" />\r\n      <div class=\"flex\">\r\n      </div>\r\n    </vs-prompt>\r\n  </div>\r\n</template>\r\n<script>\r\nimport ImportExcel from './importExcel.vue'\r\nimport gestionCodigosListaVue from './utils/gestionCodigosLista.vue';\r\nexport default {\r\n  components: {\r\n    ImportExcel,\r\n    gestionCodigosListaVue,\r\n  },\r\n  data () {\r\n    return {\r\n      codigosPerdidos:false,\r\n      tableData: [],\r\n      header: [],\r\n      sheetName: '',\r\n      usuario: [],\r\n      modalConfirm: false,\r\n      modalErrores: false,\r\n      errores: [],\r\n      tipo_selected: '',\r\n      cedulas_no_encontradas: [],\r\n      modalCedulas: false,\r\n      codigosNoCambiados:[],\r\n      codigosConUsuario:[],\r\n      codigoNoExiste:[],\r\n      porcentaje:0,\r\n       //variables para el export a excel\r\n      activePrompt:false,\r\n      codigoSelected: [],\r\n      reportesActivo: 0,\r\n      fileName: null,\r\n      formats: ['xls', 'xlsx', 'csv', 'txt'],\r\n      cellAutoWidth: true,\r\n      selectedFormat: 'xlsx',\r\n      codigosNoExisten:[],\r\n      cantidadNoExisten:0,\r\n    }\r\n  },\r\n  created(){\r\n      this.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n      this.codigosPerdidos = false\r\n    },\r\n  methods: {\r\n    loadDataInTable ({ results, header, meta }) {\r\n      this.header = header\r\n      this.tableData = results\r\n      this.sheetName = meta.sheetName\r\n    },\r\n    procesarPagos(){\r\n      let me = this\r\n      me.$vs.loading()\r\n      let json_pagos = JSON.stringify(me.tableData)\r\n      let formData = new FormData();\r\n      formData.append('data_codigos', json_pagos);\r\n      formData.append('id_usuario', me.usuario.idusuario);\r\n      this.$http.post(this.$server_url+'codigos/import/periodo/varios', formData)\r\n      .then(res => {\r\n        me.$vs.loading.close()\r\n        if(res.data.status == 0){\r\n          me.$vs.notify({\r\n          text:res.data.message,\r\n          color:'success',\r\n          iconPack: 'feather',\r\n          icon:'icon-check'})\r\n          return false\r\n        }\r\n        me.$vs.notify({\r\n        text:'Códigos procesados exitosamente',\r\n        color:'success',\r\n        iconPack: 'feather',\r\n        icon:'icon-check'})\r\n        me.modalConfirm = false\r\n        me.tableData = []\r\n        me.codigosPerdidos = true\r\n        me.codigosNoCambiados = res.data.codigosNoCambiados\r\n        me.codigoNoExiste = res.data.codigoNoExiste\r\n        me.codigosConUsuario = res.data.codigosConUsuario\r\n        me.porcentaje = res.data.cambiados\r\n      })\r\n      .catch(function (error) {\r\n        me.$vs.notify({\r\n        text:'Verifique que la información se haya guardado correctamente.',\r\n        color:'warning',\r\n        iconPack: 'feather',\r\n        icon:'icon-alert-triangle'})\r\n        me.$vs.loading.close()\r\n        // setTimeout(function() {location.reload()}, 1000);\r\n      })\r\n    },\r\n    openConfirm(tipo) {\r\n      let me = this\r\n      me.tipo_selected = tipo\r\n      if( !me.tableData[0].codigo || !me.tableData[0].id_periodo || !me.tableData[0].comentario){\r\n        me.$vs.loading.close()\r\n        me.$vs.notify({ text:'Corrija el formato del excel y vuelva a intentar.', color:'warning', iconPack: 'feather', icon:'icon-alert-triangle'})\r\n        return\r\n      }\r\n      me.errores = []\r\n      $.each(me.tableData,function(key, value){\r\n        if( !value.codigo || isNaN(!value.comentario ||  !value.id_periodo) ){\r\n          me.errores.push(value)\r\n        }\r\n      })\r\n      if( me.errores.length > 0 ){\r\n        me.modalErrores = true\r\n      }else{\r\n        me.modalConfirm = true\r\n      }\r\n    },\r\n    recargar(){\r\n      location.reload()\r\n    },\r\n    //METODOS PARA EXCEL\r\n    //para limipiar los campos del excel\r\n    clearFields() {\r\n      this.fileName = ''\r\n      this.cellAutoWidth = true\r\n      this.selectedFormat = 'xls'\r\n    },\r\n    //metodo par descargar el excel\r\n    exportToExcel() {\r\n      let headerTitle = ['codigo','institucion estudiante','periodo estudiante',  'estudiante','cedula', 'estado','liquidacion','código de barras','bc_estado','venta estado','institucion barras','periodo barras'];\r\n      let headerVal = ['codigo', 'nombreInstitucion','periodo','estudiante','cedula', 'codigoEstado','liquidacion','status','barrasEstado','ventaEstado','institucionBarra','periodo_barras'];\r\n      let codigoSelectedMayus = this.codigoSelected\r\n      for (var i = 0; i < codigoSelectedMayus.length; i++) {\r\n        for (var key in codigoSelectedMayus[i]) {\r\n          if (typeof codigoSelectedMayus[i][key] == \"string\") {\r\n              codigoSelectedMayus[i][key] = codigoSelectedMayus[i][key].toUpperCase();\r\n          }\r\n        }\r\n      }\r\n      import('@/vendor/Export2Excel').then(excel => {\r\n          const list = codigoSelectedMayus\r\n          const data = this.formatJson(headerVal, list)\r\n          excel.export_json_to_excel({\r\n            header: headerTitle,\r\n            data,\r\n            filename: this.fileName,\r\n            autoWidth: this.cellAutoWidth,\r\n            bookType: this.selectedFormat\r\n          })\r\n          this.clearFields()\r\n          this.guardarActivo = '';\r\n          this.generarActivo = ' ';\r\n          this.textAlertCant = '';\r\n          this.cantidad = '';\r\n          this.codigoSelected = [];\r\n      })\r\n    },\r\n    formatJson(filterVal, jsonData) {\r\n      return jsonData.map(v => filterVal.map(j => {\r\n        return v[j]\r\n      }))\r\n    },\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n.tabla{\r\n  width: 100%;\r\n  margin-top: 10px;\r\n}\r\n .tabla {\r\n  border: 1px solid #D1E5F1;\r\n  padding: 2px;\r\n  border-radius: 5px;\r\n}\r\n.th1{\r\n  background-color: #E2C41A;\r\n  border-radius: 5px;\r\n  color:white;\r\n}\r\n.td1, .th1{\r\n padding: 10px;\r\n text-align: center;\r\n border:none;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]}]}