{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\usuarios\\asignaturas.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\usuarios\\asignaturas.vue","mtime":1712682816641},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\babel.config.js","mtime":1712682813877},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\.babelrc","mtime":1712682813750},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["export default {\n  props: {},\n  data: function data() {\n    return {\n      area: [],\n      asignaturadocenteselect: [],\n      seleccionadas: '',\n      usuario: '',\n      user_seleccionado: '',\n      user_nombre: '',\n      user_email: '',\n      user_institucion: '',\n      show_inst: ''\n    };\n  },\n  mounted: function mounted() {\n    var me = this;\n    me.show_inst = localStorage.getItem('show_inst');\n    me.usuario = JSON.parse(localStorage.getItem('user_select'));\n    me.user_seleccionado = me.usuario.idusuario;\n    me.user_nombre = me.usuario.nombres + ' ' + me.usuario.apellidos;\n    me.user_email = me.usuario.email;\n    me.user_institucion = JSON.parse(localStorage.getItem('institucion'));\n    me.getAreaSelect();\n    me.getSeleccionadas();\n    // if (me.idusuario) {\n    //     me.asignatura(me.idusuario)\n    // }\n  },\n  methods: {\n    getSeleccionadas: function getSeleccionadas() {\n      var me = this;\n      me.$vs.loading();\n      var data = new FormData();\n      data.append('idusuario', me.user_seleccionado);\n      this.$http.post(this.$server_url + \"asignaturasDocent\", data).then(function (res) {\n        // console.log(res.data);\n        me.seleccionadas = res.data;\n        me.$vs.loading.close();\n      });\n    },\n    getAreaSelect: function getAreaSelect() {\n      var me = this;\n      me.$vs.loading();\n      this.$http.get(this.$server_url + \"areaSelect\").then(function (response) {\n        me.area = response.data.items;\n        // console.log(me.area);\n        me.$vs.loading.close();\n      });\n    },\n    agregaAsignacion: function agregaAsignacion(item) {\n      var me = this;\n      var data = new FormData();\n      data.append('usuario_idusuario', me.user_seleccionado);\n      data.append('asignatura_idasignatura', item.id);\n      this.$http.post(this.$server_url + \"asignar_asignatura_docentes\", data).then(function (res) {\n        // console.log(res.data);\n        if (res.data > 0) {\n          me.$vs.notify({\n            time: 7000,\n            text: 'Esta asignatura ya se encuentra asignada al docente',\n            color: 'danger',\n            iconPack: 'feather',\n            icon: 'icon-alert-triangle'\n          });\n        } else {\n          me.$vs.notify({\n            text: 'Asignatura agregada',\n            color: 'success',\n            iconPack: 'feather',\n            icon: 'icon-check'\n          });\n          me.getSeleccionadas();\n        }\n        me.$vs.loading.close();\n      });\n    },\n    eliminaAsignacion: function eliminaAsignacion(item) {\n      var me = this;\n      // console.log(item)\n      me.$vs.loading();\n      this.$http.get(this.$server_url + \"eliminaAsignacion/\" + item.idasignado).then(function (res) {\n        // console.log(res.data);\n        me.$vs.notify({\n          text: item.nombreasignatura + ' eliminada',\n          color: 'success',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        me.getSeleccionadas();\n        me.$vs.loading.close();\n      });\n    },\n    confirmaQuitar: function confirmaQuitar() {\n      var me = this;\n      me.$vs.dialog({\n        type: 'confirm',\n        color: 'danger',\n        title: 'Confirmar',\n        text: '¿Está seguro de eliminar este contenido?',\n        acceptText: 'Aceptar',\n        cancelText: 'Cancelar',\n        accept: me.f_quitarTodo\n      });\n    },\n    f_quitarTodo: function f_quitarTodo() {\n      var me = this;\n      var idSelects = [];\n      for (var index = 0; index < me.seleccionadas.length; index++) {\n        idSelects.push(me.seleccionadas[index].idasignado);\n      }\n      // console.log(idSelects)\n      me.$vs.loading();\n      var data = new FormData();\n      data.append('idasiguser', idSelects);\n      this.$http.post(this.$server_url + \"quitaTodasAsignaturas\", data).then(function (res) {\n        // console.log(res.data);\n        me.$vs.notify({\n          text: 'Asignaturas quitadas correctamente.',\n          color: 'success',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        me.getSeleccionadas();\n        me.$vs.loading.close();\n      });\n    }\n  }\n};",{"version":3,"names":["props","data","area","asignaturadocenteselect","seleccionadas","usuario","user_seleccionado","user_nombre","user_email","user_institucion","show_inst","mounted","me","localStorage","getItem","JSON","parse","idusuario","nombres","apellidos","email","getAreaSelect","getSeleccionadas","methods","$vs","loading","FormData","append","$http","post","$server_url","then","res","close","get","response","items","agregaAsignacion","item","id","notify","time","text","color","iconPack","icon","eliminaAsignacion","idasignado","nombreasignatura","confirmaQuitar","dialog","type","title","acceptText","cancelText","accept","f_quitarTodo","idSelects","index","length","push"],"sources":["src/views/usuarios/asignaturas.vue"],"sourcesContent":["<template>\r\n<vx-card>\r\n    <div class=\"m-2\">\r\n        <vs-list>\r\n            <vs-list-item v-if=\"show_inst== 'si'\" title=\"Institución\" :subtitle=\"user_institucion.nombreInstitucion\"></vs-list-item>\r\n            <vs-list-item title=\"Nombre\" :subtitle=\"user_nombre\"></vs-list-item>\r\n            <vs-list-item title=\"Email\" :subtitle=\"user_email\"></vs-list-item>\r\n        </vs-list>\r\n        <vs-divider color=\"success\">Areas seleccionadas ( {{seleccionadas.length}} ) </vs-divider>\r\n        <vs-collapse>\r\n            <vs-collapse-item icon-pack=\"feather\" icon-arrow=\"icon-arrow-down\">\r\n                <div slot=\"header\">\r\n                    Ver ( {{seleccionadas.length}} )\r\n                </div>\r\n                <div class=\"vx-row\">\r\n                    <div class=\"vx-col sm:w-full text-right\" v-if=\"seleccionadas.length >1\">\r\n                        <vs-button type=\"border\" color=\"danger\" size=\"small\" @click=\"confirmaQuitar()\">Quitar todas <span class=\"feather icon icon-trash\"></span></vs-button>\r\n                    </div>\r\n                    <div class=\"vx-col sm:w-full\">\r\n                        <div v-for=\"(item, index) in seleccionadas\" :key=\"index\" class=\"m-1 p-1 asig-select text-dark\">\r\n                            {{item.nombreasignatura}} &nbsp; &nbsp;\r\n                            <vs-button @click=\"eliminaAsignacion(item)\" style=\"display:inline\" size=\"small\" color=\"danger\" radius type=\"border\" icon-pack=\"feather\" icon=\"icon-trash\"></vs-button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </vs-collapse-item>\r\n        </vs-collapse>\r\n\r\n    </div>\r\n    <div class=\"m-2\">\r\n        <vs-divider color=primary> Areas ( {{area.length}} ) </vs-divider>\r\n        <vs-collapse>\r\n            <vs-collapse-item icon-pack=\"feather\" icon-arrow=\"icon-arrow-down\" v-for=\"(listItem, index) in area\" :key=\"index\" :title=\"listItem.name\">\r\n                <div slot=\"header\">\r\n                    {{listItem.name}}\r\n                </div>\r\n                <vs-button v-for=\"(listIAsig, indexAsig) in listItem.children\" :key=\"indexAsig\" type=\"border\" color=\"primary\" class=\"p-2 m-1\" @click=\"agregaAsignacion(listIAsig)\">\r\n                    {{listIAsig.name}}\r\n                </vs-button>\r\n            </vs-collapse-item>\r\n        </vs-collapse>\r\n\r\n    </div>\r\n</vx-card>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    props: {},\r\n    data() {\r\n        return {\r\n            area: [],\r\n            asignaturadocenteselect: [],\r\n            seleccionadas: '',\r\n            usuario: '',\r\n            user_seleccionado: '',\r\n            user_nombre: '',\r\n            user_email: '',\r\n            user_institucion: '',\r\n            show_inst: '',\r\n        }\r\n    },\r\n    mounted() {\r\n        let me = this;\r\n        me.show_inst = (localStorage.getItem('show_inst'));\r\n        me.usuario = JSON.parse(localStorage.getItem('user_select'));\r\n        me.user_seleccionado = me.usuario.idusuario\r\n        me.user_nombre = me.usuario.nombres + ' ' + me.usuario.apellidos\r\n        me.user_email = me.usuario.email\r\n        me.user_institucion = JSON.parse(localStorage.getItem('institucion'))\r\n        me.getAreaSelect();\r\n        me.getSeleccionadas();\r\n        // if (me.idusuario) {\r\n        //     me.asignatura(me.idusuario)\r\n        // }\r\n    },\r\n    methods: {\r\n        getSeleccionadas() {\r\n            let me = this;\r\n            me.$vs.loading();\r\n            let data = new FormData();\r\n            data.append('idusuario', me.user_seleccionado)\r\n            this.$http.post(this.$server_url + \"asignaturasDocent\", data)\r\n                .then(res => {\r\n                    // console.log(res.data);\r\n                    me.seleccionadas = res.data;\r\n                    me.$vs.loading.close();\r\n                });\r\n        },\r\n        getAreaSelect() {\r\n            let me = this;\r\n            me.$vs.loading();\r\n            this.$http.get(this.$server_url + \"areaSelect\").then(function (response) {\r\n                me.area = response.data.items;\r\n                // console.log(me.area);\r\n                me.$vs.loading.close();\r\n            });\r\n        },\r\n\r\n        agregaAsignacion(item) {\r\n            let me = this;\r\n            let data = new FormData();\r\n            data.append('usuario_idusuario', me.user_seleccionado)\r\n            data.append('asignatura_idasignatura', item.id)\r\n            this.$http.post(this.$server_url + \"asignar_asignatura_docentes\", data)\r\n                .then(function (res) {\r\n                    // console.log(res.data);\r\n                    if (res.data > 0) {\r\n                        me.$vs.notify({\r\n                            time: 7000,\r\n                            text: 'Esta asignatura ya se encuentra asignada al docente',\r\n                            color: 'danger',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-alert-triangle'\r\n                        })\r\n                    } else {\r\n                        me.$vs.notify({\r\n                            text: 'Asignatura agregada',\r\n                            color: 'success',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-check'\r\n                        })\r\n                        me.getSeleccionadas();\r\n                    }\r\n                    me.$vs.loading.close();\r\n                });\r\n        },\r\n        eliminaAsignacion(item) {\r\n            let me = this;\r\n            // console.log(item)\r\n            me.$vs.loading();\r\n            this.$http.get(this.$server_url + \"eliminaAsignacion/\" + item.idasignado)\r\n                .then(function (res) {\r\n                    // console.log(res.data);\r\n                    me.$vs.notify({\r\n                        text: item.nombreasignatura + ' eliminada',\r\n                        color: 'success',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check'\r\n                    })\r\n                    me.getSeleccionadas();\r\n                    me.$vs.loading.close();\r\n                });\r\n        },\r\n        confirmaQuitar() {\r\n            let me = this;\r\n            me.$vs.dialog({\r\n                type: 'confirm',\r\n                color: 'danger',\r\n                title: 'Confirmar',\r\n                text: '¿Está seguro de eliminar este contenido?',\r\n                acceptText: 'Aceptar',\r\n                cancelText: 'Cancelar',\r\n                accept: me.f_quitarTodo\r\n            })\r\n        },\r\n        f_quitarTodo() {\r\n            let me = this;\r\n            let idSelects = [];\r\n            for (let index = 0; index < me.seleccionadas.length; index++) {\r\n                idSelects.push(me.seleccionadas[index].idasignado)\r\n            }\r\n            // console.log(idSelects)\r\n            me.$vs.loading();\r\n            let data = new FormData();\r\n            data.append('idasiguser', idSelects)\r\n            this.$http.post(this.$server_url + \"quitaTodasAsignaturas\", data)\r\n                .then(function (res) {\r\n                    // console.log(res.data);\r\n                     me.$vs.notify({\r\n                        text: 'Asignaturas quitadas correctamente.',\r\n                        color: 'success',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check'\r\n                    })\r\n                    me.getSeleccionadas();\r\n                    me.$vs.loading.close();\r\n                });\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style lang=\"css\">\r\n.asig-select {\r\n    display: inline-block;\r\n    border: 0.7px solid rgb(201, 201, 204);\r\n    border-radius: 6px;\r\n    font-size: 12px;\r\n}\r\n</style>\r\n"],"mappings":"AA+CA;EACAA,KAAA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,IAAA;MACAC,uBAAA;MACAC,aAAA;MACAC,OAAA;MACAC,iBAAA;MACAC,WAAA;MACAC,UAAA;MACAC,gBAAA;MACAC,SAAA;IACA;EACA;EACAC,OAAA,WAAAA,QAAA;IACA,IAAAC,EAAA;IACAA,EAAA,CAAAF,SAAA,GAAAG,YAAA,CAAAC,OAAA;IACAF,EAAA,CAAAP,OAAA,GAAAU,IAAA,CAAAC,KAAA,CAAAH,YAAA,CAAAC,OAAA;IACAF,EAAA,CAAAN,iBAAA,GAAAM,EAAA,CAAAP,OAAA,CAAAY,SAAA;IACAL,EAAA,CAAAL,WAAA,GAAAK,EAAA,CAAAP,OAAA,CAAAa,OAAA,SAAAN,EAAA,CAAAP,OAAA,CAAAc,SAAA;IACAP,EAAA,CAAAJ,UAAA,GAAAI,EAAA,CAAAP,OAAA,CAAAe,KAAA;IACAR,EAAA,CAAAH,gBAAA,GAAAM,IAAA,CAAAC,KAAA,CAAAH,YAAA,CAAAC,OAAA;IACAF,EAAA,CAAAS,aAAA;IACAT,EAAA,CAAAU,gBAAA;IACA;IACA;IACA;EACA;EACAC,OAAA;IACAD,gBAAA,WAAAA,iBAAA;MACA,IAAAV,EAAA;MACAA,EAAA,CAAAY,GAAA,CAAAC,OAAA;MACA,IAAAxB,IAAA,OAAAyB,QAAA;MACAzB,IAAA,CAAA0B,MAAA,cAAAf,EAAA,CAAAN,iBAAA;MACA,KAAAsB,KAAA,CAAAC,IAAA,MAAAC,WAAA,wBAAA7B,IAAA,EACA8B,IAAA,WAAAC,GAAA;QACA;QACApB,EAAA,CAAAR,aAAA,GAAA4B,GAAA,CAAA/B,IAAA;QACAW,EAAA,CAAAY,GAAA,CAAAC,OAAA,CAAAQ,KAAA;MACA;IACA;IACAZ,aAAA,WAAAA,cAAA;MACA,IAAAT,EAAA;MACAA,EAAA,CAAAY,GAAA,CAAAC,OAAA;MACA,KAAAG,KAAA,CAAAM,GAAA,MAAAJ,WAAA,iBAAAC,IAAA,WAAAI,QAAA;QACAvB,EAAA,CAAAV,IAAA,GAAAiC,QAAA,CAAAlC,IAAA,CAAAmC,KAAA;QACA;QACAxB,EAAA,CAAAY,GAAA,CAAAC,OAAA,CAAAQ,KAAA;MACA;IACA;IAEAI,gBAAA,WAAAA,iBAAAC,IAAA;MACA,IAAA1B,EAAA;MACA,IAAAX,IAAA,OAAAyB,QAAA;MACAzB,IAAA,CAAA0B,MAAA,sBAAAf,EAAA,CAAAN,iBAAA;MACAL,IAAA,CAAA0B,MAAA,4BAAAW,IAAA,CAAAC,EAAA;MACA,KAAAX,KAAA,CAAAC,IAAA,MAAAC,WAAA,kCAAA7B,IAAA,EACA8B,IAAA,WAAAC,GAAA;QACA;QACA,IAAAA,GAAA,CAAA/B,IAAA;UACAW,EAAA,CAAAY,GAAA,CAAAgB,MAAA;YACAC,IAAA;YACAC,IAAA;YACAC,KAAA;YACAC,QAAA;YACAC,IAAA;UACA;QACA;UACAjC,EAAA,CAAAY,GAAA,CAAAgB,MAAA;YACAE,IAAA;YACAC,KAAA;YACAC,QAAA;YACAC,IAAA;UACA;UACAjC,EAAA,CAAAU,gBAAA;QACA;QACAV,EAAA,CAAAY,GAAA,CAAAC,OAAA,CAAAQ,KAAA;MACA;IACA;IACAa,iBAAA,WAAAA,kBAAAR,IAAA;MACA,IAAA1B,EAAA;MACA;MACAA,EAAA,CAAAY,GAAA,CAAAC,OAAA;MACA,KAAAG,KAAA,CAAAM,GAAA,MAAAJ,WAAA,0BAAAQ,IAAA,CAAAS,UAAA,EACAhB,IAAA,WAAAC,GAAA;QACA;QACApB,EAAA,CAAAY,GAAA,CAAAgB,MAAA;UACAE,IAAA,EAAAJ,IAAA,CAAAU,gBAAA;UACAL,KAAA;UACAC,QAAA;UACAC,IAAA;QACA;QACAjC,EAAA,CAAAU,gBAAA;QACAV,EAAA,CAAAY,GAAA,CAAAC,OAAA,CAAAQ,KAAA;MACA;IACA;IACAgB,cAAA,WAAAA,eAAA;MACA,IAAArC,EAAA;MACAA,EAAA,CAAAY,GAAA,CAAA0B,MAAA;QACAC,IAAA;QACAR,KAAA;QACAS,KAAA;QACAV,IAAA;QACAW,UAAA;QACAC,UAAA;QACAC,MAAA,EAAA3C,EAAA,CAAA4C;MACA;IACA;IACAA,YAAA,WAAAA,aAAA;MACA,IAAA5C,EAAA;MACA,IAAA6C,SAAA;MACA,SAAAC,KAAA,MAAAA,KAAA,GAAA9C,EAAA,CAAAR,aAAA,CAAAuD,MAAA,EAAAD,KAAA;QACAD,SAAA,CAAAG,IAAA,CAAAhD,EAAA,CAAAR,aAAA,CAAAsD,KAAA,EAAAX,UAAA;MACA;MACA;MACAnC,EAAA,CAAAY,GAAA,CAAAC,OAAA;MACA,IAAAxB,IAAA,OAAAyB,QAAA;MACAzB,IAAA,CAAA0B,MAAA,eAAA8B,SAAA;MACA,KAAA7B,KAAA,CAAAC,IAAA,MAAAC,WAAA,4BAAA7B,IAAA,EACA8B,IAAA,WAAAC,GAAA;QACA;QACApB,EAAA,CAAAY,GAAA,CAAAgB,MAAA;UACAE,IAAA;UACAC,KAAA;UACAC,QAAA;UACAC,IAAA;QACA;QACAjC,EAAA,CAAAU,gBAAA;QACAV,EAAA,CAAAY,GAAA,CAAAC,OAAA,CAAAQ,KAAA;MACA;IACA;EACA;AACA","ignoreList":[]}]}