{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\documentosMinisterio\\editarDocumentos.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\documentosMinisterio\\editarDocumentos.vue","mtime":1712682815807},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\babel.config.js","mtime":1712682813877},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\.babelrc","mtime":1712682813750},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import axios from 'axios';\nimport vSelect from 'vue-select';\nimport vueFilePond from \"vue-filepond\";\nimport \"filepond/dist/filepond.min.css\";\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.min.css\";\nimport FilePondPluginFileValidateType from \"filepond-plugin-file-validate-type\";\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\nvar FilePond = vueFilePond(FilePondPluginFileValidateType, FilePondPluginImagePreview);\nexport default {\n  components: {\n    FilePond: FilePond,\n    'v-select': vSelect\n  },\n  data: function data() {\n    return {\n      estado: false,\n      documento: {},\n      asignatura: {},\n      documentos: [],\n      asignaturas: [],\n      usuario: [],\n      id: ''\n    };\n  },\n  created: function created() {\n    this.documento = JSON.parse(localStorage.getItem('doc'));\n    this.asignatura = this.documento.asignaturas;\n  },\n  mounted: function mounted() {\n    var me = this;\n    me.usuario = JSON.parse(localStorage.getItem('usuario'));\n    console.log(this.documento.nombre);\n    this.getAsignaturas();\n    this.getDocumento();\n  },\n  methods: {\n    onprocessfile: function onprocessfile(error, file) {\n      this.getDocumento();\n      this.myFiles.push(JSON.parse(file.serverId));\n      console.log(this.myFiles);\n    },\n    onprocessfilestart: function onprocessfilestart(file) {\n      console.log(\"upload\");\n      this.disable = true;\n      this.isActive = true;\n    },\n    onUpdateFiles: function onUpdateFiles(file) {\n      this.formData.image = file;\n    },\n    handleFilePondInit: function handleFilePondInit() {\n      console.log(\"FilePond has initialized\");\n    },\n    resp: function resp(r) {\n      console.log(r);\n      console.log(\"hi\");\n    },\n    getAsignaturas: function getAsignaturas() {\n      var me = this;\n      this.$http.get(this.$server_url + 'asignaturasDoc/' + me.usuario.idusuario).then(function (res) {\n        me.asignaturas = res.data;\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    getDocumento: function getDocumento() {\n      var me = this;\n      this.$vs.loading();\n      this.$http.get(this.$server_url + 'document?id=' + this.documento.id).then(function (res) {\n        me.documentos = res.data;\n        console.log(res.data);\n        me.$vs.loading.close();\n      }).catch(function (error) {\n        console.log('no se conecto a los documentos ministeriales ' + error);\n        me.$vs.loading.close();\n      });\n    },\n    descargaArchivo: function descargaArchivo(item) {\n      axios({\n        url: 'https://data.prolipadigital.com.ec/documentos/' + item,\n        //your url\n        method: 'GET',\n        responseType: 'blob' // important\n      }).then(function (response) {\n        var url = window.URL.createObjectURL(new Blob([response.data]));\n        var link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', item); //or any other extension\n        document.body.appendChild(link);\n        link.click();\n      });\n    },\n    mostrarArchivo: function mostrarArchivo(item) {\n      window.open('https://view.officeapps.live.com/op/embed.aspx?src=https://data.prolipadigital.com.ec/documentos/' + item);\n    },\n    agregarDocumento: function agregarDocumento() {\n      var me = this;\n      this.documento.asignaturas = this.asignatura;\n      this.$http.post(this.$server_url + 'document?id=' + this.documento.id, this.documento).then(function (response) {}).catch(function (error) {});\n    },\n    openConfirm: function openConfirm(id, nombre) {\n      var me = this;\n      me.id = id;\n      this.$vs.dialog({\n        type: 'confirm',\n        color: 'danger',\n        title: \"Confirmaci\\xF3n\",\n        text: 'Está seguro en eliminar este archivo',\n        accept: this.getEliminar\n      });\n    },\n    getEliminar: function getEliminar(id) {\n      var me = this;\n      console.log(id);\n      this.$http.post(this.$server_url + \"archivoDelete?id=\" + me.id).then(function (response) {\n        me.$vs.notify({\n          color: 'warning',\n          text: 'Registro eliminado'\n        });\n        me.getDocumento();\n      }).catch(function (error) {});\n    }\n  }\n};",{"version":3,"names":["axios","vSelect","vueFilePond","FilePondPluginFileValidateType","FilePondPluginImagePreview","FilePond","components","data","estado","documento","asignatura","documentos","asignaturas","usuario","id","created","JSON","parse","localStorage","getItem","mounted","me","console","log","nombre","getAsignaturas","getDocumento","methods","onprocessfile","error","file","myFiles","push","serverId","onprocessfilestart","disable","isActive","onUpdateFiles","formData","image","handleFilePondInit","resp","r","$http","get","$server_url","idusuario","then","res","catch","$vs","loading","close","descargaArchivo","item","url","method","responseType","response","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","mostrarArchivo","open","agregarDocumento","post","openConfirm","dialog","type","color","title","text","accept","getEliminar","notify"],"sources":["src/views/documentosMinisterio/editarDocumentos.vue"],"sourcesContent":["<template>\r\n<div class=\"vx-col md:w-full w-full mb-base h-screen\">\r\n    <vx-card class=\"h-full\">\r\n        <div class=\"vx-row mt-4\">\r\n            <div class=\"vx-col sm:w-1/2 lg:w-1/2 w-full\" align=\"left\">\r\n                <div style=\"font-size: 12px; \">Nombre: </div>\r\n                <vs-input type=\"text\" class=\"inputx w-full mb-6\" v-model=\"documento.nombre\" @input=\"agregarDocumento()\" maxlength=\"100\" placeholder=\"Nombre del documento\" />\r\n            </div>\r\n            <div class=\"vx-col sm:w-1/2 lg:w-1/2 w-full\" align=\"left\">\r\n                <div style=\"font-size: 12px; \">Descripción: </div>\r\n                <vs-input type=\"text\" class=\"inputx w-full mb-6\" v-model=\"documento.descripcion\" @input=\"agregarDocumento()\" maxlength=\"100\" placeholder=\"Descripción del documento\" />\r\n            </div>\r\n        </div>\r\n        <div class=\"vx-row mb-4\">\r\n            <div class=\"vx-col sm:w-1/2 lg:w-1/2 w-full\" align=\"left\">\r\n                <div style=\"font-size: 12px; \">Asignaturas: </div>\r\n                <v-select multiple class=\"w-full\" v-model=\"asignatura\" :options=\"asignaturas\" @input=\"agregarDocumento()\"/>\r\n            </div>\r\n        </div>\r\n        <div class=\"vx-row mb-4\">\r\n            <div class=\"vx-col sm:w-1/2 lg:w-1/2 w-full\" align=\"left\">\r\n                <div style=\"font-size: 12px; \">Estado: </div>\r\n                <vs-switch v-model=\"documento.status\" @input=\"agregarDocumento()\"></vs-switch>\r\n            </div>\r\n        </div>\r\n        <vs-divider>Archivos cargados</vs-divider>\r\n        <vs-button @click=\"estado = !estado\">Agregar archivo</vs-button>\r\n        <div v-if=\"estado == true\" class=\"vx-col w-full h-64 borde-unidad\">\r\n            <FilePond class=\"h-64\" label-idle=\"Suelta los archivos aquí...\" max-files=\"4\" v-bind:allow-multiple=\"true\" :chunkUploads=\"false\" :chunkForce=\"false\" :onprocessfilestart=\"onprocessfilestart\" chunkRetryDelays=\"[100,100,100]\" chunkSize=\"100\" @onUpdateFiles=\"onUpdateFiles\" @progressfiles=\"resp\" :server=\"$data_url+'api/uploadDocuemntos?id='+documento.id\" @init=\"handleFilePondInit\" :storeAsFile=\"true\" :onprocessfile=\"onprocessfile\" />\r\n        </div>\r\n        <div class=\"vx-col  w-full\">\r\n            <vs-table max-items=\"10\" search pagination :data=\"documentos\" style=\"margin-top:-20px\" class=\"stripe\">\r\n                <template slot=\"thead\">\r\n                    <vs-th>Nombre</vs-th>\r\n                    <vs-th>url</vs-th>\r\n                    <vs-th>Fecha de creación</vs-th>\r\n                </template>\r\n                <template slot-scope=\"{data}\">\r\n                    <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                        <vs-td>\r\n                            {{data[indextr].nombre}} <br>\r\n                        </vs-td>\r\n                        <vs-td class=\"text-center\">\r\n                            <vx-tooltip text=\"Descargar archivo en mi equipo\" position=\"bottom\" style=\"display: inline-block\" color=\"success\">\r\n                                <vs-button style=\"display: inline\" class=\"m-1\" :href=\"'https://data.prolipadigital.com.ec/documentos/'+data[indextr].url\" size=\"small\" icon-pack=\"feather\" icon=\"icon-arrow-down\" color=\"success\" type=\"border\">Descargar</vs-button>\r\n                            </vx-tooltip>\r\n                            <vx-tooltip style=\"display: inline-block;\" text=\"Visualizar archivo\" position=\"bottom\" color=\"primary\">\r\n                                <vs-button style=\"display: inline\" @click=\"mostrarArchivo(data[indextr].url)\" size=\"small\" icon-pack=\"feather\" icon=\"icon-eye\" color=\"primary\" type=\"border\">Visualizar</vs-button>\r\n                            </vx-tooltip>\r\n                            <!-- <a :href=\"'https://data.prolipadigital.com.ec/documentos/'+data[indextr].url\" download>Descargar</a> -->\r\n                        </vs-td>\r\n                        <vs-td>\r\n                            {{data[indextr].updated_at}} <br>\r\n                        </vs-td>\r\n                        <vs-td>\r\n                            <vs-button type=\"border\" size=\"small\" icon-pack=\"feather\" icon=\"icon-trash\" class=\"mr-2\" color=\"danger\" @click=\"openConfirm(data[indextr].id,data[indextr].nombre)\"></vs-button>\r\n                        </vs-td>\r\n                    </vs-tr>\r\n                </template>\r\n            </vs-table>\r\n        </div>\r\n    </vx-card>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nimport vSelect from 'vue-select'\r\nimport vueFilePond from \"vue-filepond\";\r\nimport \"filepond/dist/filepond.min.css\";\r\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.min.css\";\r\nimport FilePondPluginFileValidateType from \"filepond-plugin-file-validate-type\";\r\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\r\nconst FilePond = vueFilePond(\r\n    FilePondPluginFileValidateType,\r\n    FilePondPluginImagePreview\r\n);\r\nexport default {\r\n    components: {\r\n        FilePond,\r\n        'v-select': vSelect,\r\n    },\r\n    data() {\r\n        return {\r\n            estado: false,\r\n            documento: {},\r\n            asignatura: {},\r\n            documentos: [],\r\n            asignaturas: [],\r\n            usuario: [],\r\n            id: ''\r\n        }\r\n    },\r\n    created() {\r\n        this.documento = JSON.parse(localStorage.getItem('doc'))\r\n        this.asignatura = this.documento.asignaturas\r\n    },\r\n    mounted() {\r\n        let me = this\r\n        me.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n        console.log(this.documento.nombre)\r\n        this.getAsignaturas()\r\n        this.getDocumento()\r\n    },\r\n    methods: {\r\n        onprocessfile(error, file) {\r\n            this.getDocumento()\r\n            this.myFiles.push(JSON.parse(file.serverId))\r\n            console.log(this.myFiles)\r\n        },\r\n        onprocessfilestart(file) {\r\n            console.log(\"upload\");\r\n            this.disable = true\r\n            this.isActive = true\r\n        },\r\n        onUpdateFiles(file) {\r\n            this.formData.image = file;\r\n        },\r\n        handleFilePondInit: function () {\r\n            console.log(\"FilePond has initialized\");\r\n        },\r\n        resp(r) {\r\n            console.log(r)\r\n            console.log(\"hi\")\r\n        },\r\n        getAsignaturas() {\r\n            let me = this\r\n            this.$http.get(this.$server_url + 'asignaturasDoc/' + me.usuario.idusuario).then(res => {\r\n                    me.asignaturas = res.data;\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n        },\r\n        getDocumento() {\r\n            let me = this;\r\n            this.$vs.loading()\r\n            this.$http.get(this.$server_url + 'document?id=' + this.documento.id)\r\n                .then(res => {\r\n                    me.documentos = res.data\r\n                    console.log(res.data)\r\n                    me.$vs.loading.close()\r\n\r\n                })\r\n                .catch(error => {\r\n                    console.log('no se conecto a los documentos ministeriales ' + error)\r\n                    me.$vs.loading.close()\r\n                })\r\n        },\r\n        descargaArchivo(item) {\r\n            axios({\r\n                url: 'https://data.prolipadigital.com.ec/documentos/' + item, //your url\r\n                method: 'GET',\r\n                responseType: 'blob', // important\r\n            }).then((response) => {\r\n                const url = window.URL.createObjectURL(new Blob([response.data]));\r\n                const link = document.createElement('a');\r\n                link.href = url;\r\n                link.setAttribute('download', item); //or any other extension\r\n                document.body.appendChild(link);\r\n                link.click();\r\n            });\r\n        },\r\n        mostrarArchivo(item) {\r\n            window.open('https://view.officeapps.live.com/op/embed.aspx?src=https://data.prolipadigital.com.ec/documentos/' + item)\r\n        },\r\n        agregarDocumento() {\r\n            let me = this;\r\n            this.documento.asignaturas = this.asignatura\r\n            this.$http.post(this.$server_url + 'document?id=' + this.documento.id, this.documento)\r\n                .then(function (response) {})\r\n                .catch(function (error) {})\r\n        },\r\n        openConfirm(id, nombre) {\r\n            let me = this;\r\n            me.id = id\r\n\r\n            this.$vs.dialog({\r\n                type: 'confirm',\r\n                color: 'danger',\r\n                title: `Confirmación`,\r\n                text: 'Está seguro en eliminar este archivo',\r\n                accept: this.getEliminar\r\n            })\r\n        },\r\n        getEliminar(id) {\r\n            let me = this;\r\n            console.log(id)\r\n            this.$http.post(this.$server_url + \"archivoDelete?id=\" + me.id)\r\n\r\n                .then(function (response) {\r\n                    me.$vs.notify({\r\n                        color: 'warning',\r\n                        text: 'Registro eliminado'\r\n                    })\r\n                    me.getDocumento()\r\n                })\r\n                .catch(function (error) {})\r\n        }\r\n    },\r\n}\r\n</script>\r\n"],"mappings":"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","ignoreList":[]}]}