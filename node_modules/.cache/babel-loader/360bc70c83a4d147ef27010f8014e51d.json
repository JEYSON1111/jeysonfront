{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\institucion\\instituciones.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\institucion\\instituciones.vue","mtime":1712682816030},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\babel.config.js","mtime":1712682813877},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\.babelrc","mtime":1712682813750},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.string.link\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/laragon/www/PRY_NEW_JEYSON/LOCAL/plataformaprolipa_vue/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es6.function.name\";\nimport _defineProperty from \"C:/laragon/www/PRY_NEW_JEYSON/LOCAL/plataformaprolipa_vue/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport Vue from 'vue';\nimport axios from 'axios';\nimport DataViewSidebar from \"./nuevo\";\nimport Periodos from \"../periodos/periodos.vue\";\nimport vSelect from 'vue-select';\nimport escuelasAsesorVue from \"../home/components/asesor/escuelasAsesor.vue\";\nimport listadoContratoMiltonVue from \"./components/listadoContratoMilton.vue\";\nimport asignarLibrosVue from \"./components/asignarLibros.vue\";\nimport moment from 'moment';\nimport flatPickr from 'vue-flatpickr-component';\nimport asignarRecursosExternosVue from \"./components/asignarRecursosExternos.vue\";\nimport GenerarFormulario from \"../home/docentes/formulario/listadoSolicitudes.vue\";\nimport MenuEncuesta from \"../home/padres/encuesta/MenuEncuesta.vue\";\nimport 'flatpickr/dist/flatpickr.css';\nimport InstitucionesXCiudad from \"./institucionesXCiudad.vue\";\nimport Ciudades_vue from \"../ciudades/listaCiudad.vue\";\nimport Zonas_vue from \"../zonas/listaZona.vue\";\nimport Periodo_config_institucion from \"../periodos/periodo_config_institucion.vue\";\nimport RegistroDocentesVue from \"./components/RegistroDocentes.vue\";\nimport institucionfacturacion from \"../pedidos/facturacion_api/institucion.vue\";\nimport addInstitucionVue from \"./addInstitucion.vue\";\nimport RegistroVentaVue from \"../codigos/components/utils/RevisionVenta.vue\";\nvar ResetearEvaluacionesVue = function ResetearEvaluacionesVue() {\n  return import(\"./components/EvaluacionesInstituciones/ResetearEvaluaciones.vue\");\n};\nexport default {\n  components: {\n    DataViewSidebar: DataViewSidebar,\n    Periodos: Periodos,\n    \"v-select\": vSelect,\n    escuelasAsesorVue: escuelasAsesorVue,\n    asignarLibrosVue: asignarLibrosVue,\n    flatPickr: flatPickr,\n    asignarRecursosExternosVue: asignarRecursosExternosVue,\n    GenerarFormulario: GenerarFormulario,\n    MenuEncuesta: MenuEncuesta,\n    listadoContratoMiltonVue: listadoContratoMiltonVue,\n    InstitucionesXCiudad: InstitucionesXCiudad,\n    Ciudades_vue: Ciudades_vue,\n    Zonas_vue: Zonas_vue,\n    Periodo_config_institucion: Periodo_config_institucion,\n    RegistroDocentesVue: RegistroDocentesVue,\n    institucionfacturacion: institucionfacturacion,\n    addInstitucionVue: addInstitucionVue,\n    RegistroVentaVue: RegistroVentaVue,\n    ResetearEvaluacionesVue: ResetearEvaluacionesVue\n  },\n  data: function data() {\n    var _ref;\n    return _ref = {\n      institucion_id: 0,\n      configdateTimePicker: {\n        enableTime: true,\n        dateFormat: 'Y-m-d'\n      },\n      user_institucion_send: '',\n      //variables para exportar a excel\n      activePrompt: false,\n      reportesActivo: 0,\n      fileName: null,\n      formats: ['xls', 'xlsx', 'csv', 'txt'],\n      cellAutoWidth: true,\n      selectedFormat: 'xls',\n      reporteAsesorActivo: false,\n      guardarActivo: '',\n      generarActivo: '',\n      textAlertCant: '',\n      cantidad: '',\n      codigoSelected: [],\n      codigoTipo: '0',\n      //FIN DE VARIABLES PARA EXPORTAR A EXCEL\n      escuelas: [],\n      popupVistasUsuario: false,\n      popupAsignacion: false,\n      popupDocentes: false,\n      popupAddInstitucion: false,\n      popupPeriodos: false,\n      busquedaInstitucion: \"\",\n      instituciones: [],\n      tmpInstituciones: [],\n      sidebarData: {},\n      addNewDataSidebar: false,\n      usuario: [],\n      grupo_usuario: '',\n      //para el total visitas de institucion\n      visitasginstitucion: '',\n      //para el total visitas de docentes\n      visitasgdocente: '',\n      //para el total visitas de estudiantes\n      visitasgestudiantes: '',\n      //para  llenar el historico por institucion\n      historicoinstitucionArreglo: [],\n      //para  llenar el historico para docentes\n      historicoDocenteArreglo: [],\n      //para llenar el historico de para estudiantes\n      historicoEstudianteArreglo: [],\n      //para guardar el nombre de la institucion en el localstorage\n      visitasnombreinstitucion: '',\n      user_autorizado: '',\n      c_region: 'SIERRA',\n      //=========VARIABLES PARA PERIODOS==============\n      nombreInstitucion: '',\n      idInstitucion: '',\n      listaPeriodos: '',\n      tmplistaPeriodos: '',\n      listaPeriodosInstitucion: '',\n      tmp: '',\n      f_periodos: 1,\n      modalPeriodos: false,\n      id_eliminar: '',\n      region: []\n    }, _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_ref, \"usuario\", []), \"estadoLimiteAcceso\", \"0\"), \"fecha\", null), \"institucion\", {\n      'idInstitucion': '',\n      'nombreInstitucion': '',\n      'telefonoInstitucion': '',\n      'direccionInstitucion': '',\n      'solicitudInstitucion': '',\n      'vendedorInstitucion': '',\n      'periodoescolar': '',\n      'tipo_institucion': '',\n      'ciudad_id': '',\n      'region_idregion': '',\n      'estado': '1',\n      'matricula': '1',\n      'punto_venta': 0\n    }), \"errors\", {\n      'nombreInstitucion': '',\n      'telefonoInstitucion': '',\n      'direccionInstitucion': '',\n      'solicitudInstitucion': '',\n      'vendedorInstitucion': '',\n      'periodoescolar': '',\n      'tipo_institucion': '',\n      'ciudad_id': '',\n      'region_idregion': ''\n    }), \"titulo\", ''), \"ciudad\", []), \"region\", []), \"periodo\", []), \"vendedor\", []), _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_ref, \"usuario\", ''), \"limiteMegas\", 1), \"porcentaje\", ''), \"pesoArchivo\", ''), \"muyPesado\", ''), \"msj\", ''), \"usuarios\", []), \"accesosDocentes\", []), \"conteoDocentes\", [{\n      'idusuario': '',\n      'cantidad': 0\n    }]), \"accesosEstudiantes\", []), _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_ref, \"institucionDocente\", ''), \"tipo\", ''), \"conteo\", 0), \"usuario\", ''), \"perfil_autorizado\", ''), \"area\", []), \"asignaturadocenteselect\", []), \"seleccionadas\", ''), \"usuarioAsignacion\", ''), \"user_seleccionado\", ''), _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_ref, \"user_nombre\", ''), \"user_email\", ''), \"user_institucion\", ''), \"show_inst\", ''), \"docente\", ''), \"listaVisitas\", []), \"datoU\", ''), \"update\", false), \"asignatura_id\", 0), \"colegio_asignatura_id\", 0), _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_ref, \"permisoRoot\", false), \"attachments\", []), \"form\", new FormData()), \"numeroIteM\", '0'), \"instituciones\", []), \"errorImage\", ''), \"tamanioError\", ''), \"archivoName\", ''), \"file\", ''), \"id\", 0), _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_ref, \"fromDate\", null), \"toDate\", null), \"visitasD\", false), \"verPermisosExternos\", 0), \"permisosInstitucion\", ''), \"permisosNombreInstitucion\", ''), \"value1\", ''), \"value2\", ''), \"valid\", {\n      email: false,\n      password: false\n    }), \"formulario\", {\n      institucion: '0',\n      periodo_id: 0,\n      periodoDescripcion: '',\n      nombreInstitucion: ''\n    }), _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_ref, \"arregloCoincidencias\", []), \"arregloIdsCoincidencias\", []), \"popupCoincidencia\", false), \"institucionEnviar\", 0), \"institucionEnviarCedula\", 0), \"institucionEnviarAIniciales\", ''), \"institucionNombreEnviar\", ''), \"institucionCiudad\", ''), \"busquedaMilton\", ''), \"sendInstitucion\", {}), _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_ref, \"popupAsignacionDocentes\", false), \"arregloCodigosEstudiantes\", []), \"popupTipoVenta\", false), \"pedido\", {}), \"tituloDetalleVenta\", ''), \"popupActualizarPeriodo\", false), \"periodoSelect\", []), \"institucionSelected\", 0), \"arrayEvaluacionesInstitucion\", []), \"popupEvaluaciones\", false);\n  },\n  mounted: function mounted() {\n    var me = this;\n    localStorage.removeItem('institucion');\n    localStorage.removeItem('tipoUser');\n    me.usuario = JSON.parse(localStorage.getItem('usuario'));\n    me.user_autorizado = me.usuario.id_group;\n    me.getUserRoot();\n    var date = new Date();\n    var primerDia = new Date(date.getFullYear(), date.getMonth(), 1);\n    var ultimoDia = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n    me.fromDate = primerDia;\n    me.toDate = ultimoDia;\n  },\n  methods: {\n    //para ir al formulario docente\n    irFormularioDocente: function irFormularioDocente(tr) {\n      var me = this;\n      localStorage.setItem('formulario', 'institucion');\n      me.formulario.institucion = tr.idInstitucion;\n      me.formulario.nombreInstitucion = tr.nombreInstitucion;\n      me.formulario.periodoDescripcion = tr.periodo;\n      me.formulario.periodo_id = tr.periodo_id;\n      me.verPermisosExternos = 2;\n    },\n    irGestionEncuestas: function irGestionEncuestas(tr) {\n      var me = this;\n      localStorage.setItem('formulario', 'institucion');\n      me.formulario.institucion = tr.idInstitucion;\n      me.formulario.nombreInstitucion = tr.nombreInstitucion;\n      me.formulario.periodoDescripcion = tr.periodo;\n      me.formulario.periodo_id = tr.periodo_id;\n      me.verPermisosExternos = 3;\n    },\n    fieldChange: function fieldChange(e) {\n      var me = this;\n      me.errorImage = 'no';\n      me.tamanioError = \"no\";\n      this.attachments = [];\n      var selectedFiles = e.target.files;\n      var validar = e.target.files[0].type;\n      var tamanio = e.target.files[0].size;\n      if (tamanio > 1000000) {\n        me.tamanioError = \"yes\";\n        me.$vs.notify({\n          text: 'El tamaño de la imagen excede 1MB',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        return false;\n      }\n      if (validar == 'image/png' || validar == 'image/jpg' || validar == 'image/jpeg') {\n        me.file = e.target.files[0];\n        for (var i = 0; i < selectedFiles.length; i++) {\n          this.attachments.push(selectedFiles[i]);\n          localStorage.setItem('nameArchivo', this.attachments[0].name);\n          me.archivoName = localStorage.getItem(\"nameArchivo\");\n        }\n        me.errorImage = 'no';\n      } else {\n        me.errorImage = 'yes';\n        me.$vs.notify({\n          text: 'Formato de imagen no aceptada solo se acepta png/jpg/jpeg',\n          color: 'success',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        return false;\n      }\n    },\n    //para obtener el listado de los usuarios root\n    getUserRoot: function getUserRoot() {\n      var me = this;\n      this.$http.get(this.$server_url + 'permisos?permiso=yes&usuario_id=' + me.usuario.idusuario).then(function (res) {\n        if (res.data.status == '1') {\n          me.permisoRoot = true;\n        } else {\n          me.permisoRoot = false;\n        }\n      }).catch(function (error) {\n        console.log(error + ' error');\n      });\n    },\n    //PERMISOS EXTERNOS\n    agregarPermisosExternos: function agregarPermisosExternos(data) {\n      var me = this;\n      me.verPermisosExternos = 1;\n      me.permisosInstitucion = data.idInstitucion;\n      me.permisosNombreInstitucion = data.nombreInstitucion;\n      return false;\n    },\n    //FIN PERMISOS EXTERNOS\n    closeBtn: function closeBtn(event) {\n      this.popupAsignacion = false;\n      this.popupDocentes = true;\n    },\n    //para ir asignar recursos externos a prolipa\n    irAddRecursosExternos: function irAddRecursosExternos() {\n      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var me = this;\n      localStorage.setItem('institucionExterna', data.idInstitucion);\n      localStorage.setItem('ciudadExterna', data.ciudad);\n      me.$router.push('/recursos/asignaturas');\n    },\n    addNewData: function addNewData() {\n      this.sidebarData = {};\n      this.toggleDataSidebar(true);\n    },\n    toggleDataSidebar: function toggleDataSidebar() {\n      var val = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      this.addNewDataSidebar = val;\n    },\n    getInstitucion: function getInstitucion() {\n      var me = this;\n      me.instituciones = [];\n      if (me.busquedaInstitucion.length < 5) {\n        me.$vs.notify({\n          text: 'Minimo 5 caracteres de busqueda',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        return false;\n      }\n      me.$vs.loading();\n      this.$http.get(this.$server_url + 'listaInsitucion?busqueda=' + me.busquedaInstitucion).then(function (res) {\n        // me.tmpInstituciones = res.data;\n        me.instituciones = res.data;\n        // me.filtroRegion();\n        me.$vs.loading.close();\n        if (res.data.message) {\n          me.$vs.notify({\n            text: res.data.message,\n            color: 'success',\n            iconPack: 'feather',\n            icon: 'icon-user'\n          });\n        }\n      }).catch(function (error) {\n        console.log(error + ' error');\n        me.$vs.loading.close();\n      });\n    },\n    getPeriodoInstitucion: function getPeriodoInstitucion(id) {\n      var me = this;\n      this.$http.get(this.$server_url + 'institucionTraerPeriodo?institucion_id=' + id).then(function (res) {\n        localStorage.setItem('free_periodo_id', res.data[0].periodo);\n      }).catch(function (error) {\n        console.log(error + ' error');\n      });\n    },\n    agregarLibro: function agregarLibro(id) {\n      localStorage.idinstitucion = id;\n      this.getPeriodoInstitucion(id);\n      this.$router.push('/institucion/addlibro');\n    },\n    agregarLibrerias: function agregarLibrerias(id) {\n      localStorage.idinstitucion = id;\n      this.$router.push('/institucion/librerias');\n    },\n    verDocentes: function verDocentes(item) {\n      var me = this;\n      me.usuarios = [];\n      me.popupDocentes = true;\n      me.visitasD = false;\n      // console.log( item.idInstitucion )\n      localStorage.institucion = JSON.stringify(item);\n      localStorage.tipoUser = \"docente\";\n      // me.$router.push('/institucion/docentes');\n\n      localStorage.removeItem('datoUser');\n      localStorage.removeItem('user_select');\n      localStorage.removeItem('show_inst');\n      me.usuario = JSON.parse(localStorage.getItem('usuario'));\n      me.institucionDocente = JSON.parse(localStorage.getItem('institucion'));\n      me.tipo = localStorage.getItem('tipoUser');\n      me.perfil_autorizado = me.usuario.id_group;\n      me.getUsuariosTipo();\n    },\n    verDocentesVisitas: function verDocentesVisitas(item) {\n      var me = this;\n      me.usuarios = [];\n      me.visitasD = true;\n      me.popupDocentes = true;\n      // console.log( item.idInstitucion )\n      localStorage.institucion = JSON.stringify(item);\n      localStorage.tipoUser = \"docente\";\n      // me.$router.push('/institucion/docentes');\n\n      localStorage.removeItem('datoUser');\n      localStorage.removeItem('user_select');\n      localStorage.removeItem('show_inst');\n      me.usuario = JSON.parse(localStorage.getItem('usuario'));\n      me.institucionDocente = JSON.parse(localStorage.getItem('institucion'));\n      me.tipo = localStorage.getItem('tipoUser');\n      me.perfil_autorizado = me.usuario.id_group;\n      me.getUsuariosTipoVisitas();\n    },\n    confirmEliminarInstitucion: function confirmEliminarInstitucion(tr) {\n      var me = this;\n      me.id = tr.idInstitucion;\n      this.$vs.dialog({\n        type: 'confirm',\n        color: 'danger',\n        title: \"Confirmar\",\n        text: 'Estas seguro de eliminar la institución',\n        accept: this.eliminarInstitucion\n      });\n    },\n    eliminarInstitucion: function eliminarInstitucion() {\n      var me = this;\n      var formData = new FormData();\n      formData.append('id', me.id);\n      me.$vs.loading();\n      this.$http.post(this.$server_url + 'institucionEliminar', formData).then(function (res) {\n        me.$vs.loading.close();\n        me.getInstitucion();\n        me.$vs.notify({\n          text: 'Institución eliminada con exito',\n          color: 'success',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n      }).catch(function (e) {\n        me.$vs.loading.close();\n        me.$vs.notify({\n          text: 'No se pudo eliminar la institucion',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n      });\n    },\n    verEstudiantes: function verEstudiantes(item) {\n      var me = this;\n      me.popupDocentes = true;\n      // console.log( item.idInstitucion )\n      localStorage.tipoUser = \"estudiante\";\n      localStorage.institucion = JSON.stringify(item);\n      // me.$router.push('/institucion/estudiantes');\n      localStorage.removeItem('datoUser');\n      localStorage.removeItem('user_select');\n      localStorage.removeItem('show_inst');\n      me.usuario = JSON.parse(localStorage.getItem('usuario'));\n      me.institucionDocente = JSON.parse(localStorage.getItem('institucion'));\n      me.tipo = localStorage.getItem('tipoUser');\n      me.perfil_autorizado = me.usuario.id_group;\n      me.getUsuariosTipo();\n    },\n    getVisitas: function getVisitas(item, nombreInstitucion) {\n      var _this = this;\n      var me = this;\n      axios.get('https://foro.prolipadigital.com.ec/historico-recursos?idinstitucion=' + item + '&_limit=-1').then(function (res) {\n        // console.log(res.data.length)\n        // me.visitas = res.data.length;\n        //para guardar las intitucion en el localstorage\n        _this.historicoinstitucionArreglo = res.data;\n        localStorage.setItem(\"historicoinstitucionArreglo\", JSON.stringify(_this.historicoinstitucionArreglo));\n\n        //para guardar el nombre de la institucion en localstorage\n\n        _this.visitasnombreinstitucion = nombreInstitucion;\n        localStorage.setItem(\"visitasnombreinstitucion\", JSON.stringify(_this.visitasnombreinstitucion));\n        //para enviar el id de la institucion\n        localStorage.setItem(\"visitasid\", JSON.stringify(item));\n\n        //para guardar las visitas generales de la institucion\n        _this.visitasginstitucion = res.data.length;\n        localStorage.setItem(\"visitasginstitucion\", JSON.stringify(_this.visitasginstitucion));\n\n        //     //para guardar en localstorage el historico de docentes\n        me.historicoDocenteArreglo = _this.historicoinstitucionArreglo.filter(function (p) {\n          return p.idgrupo == \"6\";\n        });\n        //    localStorage.setItem(\"historicoDocenteArreglo\", JSON.stringify(this.historicoDocenteArreglo));\n\n        //para guardar las visitas generales de los docentes\n        _this.visitasgdocente = me.historicoDocenteArreglo.length;\n        localStorage.setItem(\"visitasgdocente\", JSON.stringify(_this.visitasgdocente));\n\n        //     //para guardar en localstorage el historico de estudiantes\n        me.historicoEstudianteArreglo = _this.historicoinstitucionArreglo.filter(function (p) {\n          return p.idgrupo == \"4\";\n        });\n        //    localStorage.setItem(\"historicoEstudianteArreglo\", JSON.stringify(this.historicoEstudianteArreglo));\n\n        //para guardar las visitas generales de los estudiantes\n        _this.visitasgestudiantes = me.historicoEstudianteArreglo.length;\n        localStorage.setItem(\"visitasgestudiantes\", JSON.stringify(_this.visitasgestudiantes));\n        me.$router.push('/reporte/institucion/');\n      }).catch(function (err) {\n        console.log(err);\n      });\n    },\n    verMatricula: function verMatricula(tr) {\n      var me = this;\n      localStorage.setItem('matricula_institucion', tr.idInstitucion);\n      localStorage.setItem('matricula_admin', \"yes\");\n      me.$router.push('/matricula/listado_matriculas');\n    },\n    periodos: function periodos(item) {\n      // localStorage.institucion = JSON.stringify(item);\n      var me = this;\n      me.popupPeriodos = true;\n      var institucion = item;\n      me.tmp = institucion;\n      me.nombreInstitucion = me.tmp.nombreInstitucion;\n      me.idInstitucion = me.tmp.idInstitucion;\n      me.region = me.tmp.nombreregion;\n      me.getPeriodosInstitucion();\n      me.usuario = JSON.parse(localStorage.getItem('usuario'));\n      me.getPeriodos();\n      // this.$router.push('/institucion/periodosInstitucion');\n    },\n    getSeguimiento: function () {\n      var _getSeguimiento = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(tr) {\n        var me;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              me = this;\n              this.$http.get(this.$server_url + 'escuelasAsesor?asesor_id=' + tr.asesor_id + '&desdeAdmin=yes' + '&institucion_id=' + tr.idInstitucion).then(function (response) {\n                var periodo_id = response.data[0].periodo;\n                var periodo_nombre = response.data[0].descripcion;\n                me.$router.push('/administrador/seguimiento/institucion');\n                localStorage.setItem('institucion_seguimiento_asesor_id', tr.asesor_id);\n                localStorage.setItem('institucion_seguimiento_id', tr.idInstitucion);\n                localStorage.setItem('institucion_seguimiento_nombre', tr.nombreInstitucion);\n                localStorage.setItem('institucion_seguimiento_periodo_id', periodo_id);\n                localStorage.setItem('institucion_seguimiento_periodo', periodo_nombre);\n                localStorage.setItem('adminSeguimiento', \"yes\");\n              }).catch(function (error) {});\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function getSeguimiento(_x) {\n        return _getSeguimiento.apply(this, arguments);\n      }\n      return getSeguimiento;\n    }(),\n    //===========METODOS DE PERIODO===========================\n    getPeriodosInstitucion: function getPeriodosInstitucion() {\n      var me = this;\n      me.$vs.loading();\n      this.$http.get(this.$server_url + 'periodosXInstitucion/' + me.idInstitucion).then(function (res) {\n        me.listaPeriodosInstitucion = res.data;\n        // console.log(res.data);\n        me.$vs.loading.close();\n      }).catch(function (err) {\n        console.log(err);\n        me.$vs.loading.close();\n      });\n    },\n    getPeriodos: function getPeriodos() {\n      var me = this;\n      this.$http.get(this.$server_url + 'periodoRegion?region=' + me.region).then(function (res) {\n        me.tmplistaPeriodos = res.data;\n        //capturo el periodo activo para limitar el acceso a agregar periodo\n        var filtrarPeriodoAcceso = me.tmplistaPeriodos.filter(function (p) {\n          return p.estado == '1';\n        });\n        //capturo la fecha actual\n        var fecha = moment().add(-1, 'days').format('YYYY/MM/DD');\n\n        // filtro la fecha limite del periodo\n        var fechafinal = filtrarPeriodoAcceso.map(function (p) {\n          return p.fhasta_limite;\n        });\n        //comparo si la fecha final ya se paso a la actual\n        if (Date.parse(fechafinal) < Date.parse(fecha)) {\n          me.estadoLimiteAcceso = \"0\";\n        } else {\n          me.estadoLimiteAcceso = \"1\";\n        }\n        me.filtroPeriodos();\n      }).catch(function (err) {\n        console.log(err);\n      });\n    },\n    abrirModal: function abrirModal() {\n      var me = this;\n      me.popupPeriodos = false;\n      me.modalPeriodos = true;\n    },\n    filtroPeriodos: function filtroPeriodos() {\n      var me = this;\n      // console.log(me.tmplistaPeriodos)\n      me.listaPeriodos = [];\n      for (var index = 0; index < me.tmplistaPeriodos.length; index++) {\n        if (me.tmplistaPeriodos[index].estado == me.f_periodos) {\n          me.listaPeriodos.push(me.tmplistaPeriodos[index]);\n        }\n      }\n    },\n    verificarPeriodo: function verificarPeriodo(item) {\n      var me = this;\n      // console.log(item.idperiodoescolar, me.idInstitucion)\n      me.$vs.loading();\n      var data = new FormData();\n      data.append('idperiodoescolar', item.idperiodoescolar);\n      data.append('idinstitucion', me.idInstitucion);\n      this.$http.post(this.$server_url + 'verifica_periodo', data).then(function (res) {\n        // console.log(res.data)\n        if (res.data == 1) {\n          me.$vs.notify({\n            time: 8000,\n            text: 'Este periodo ya se encuentra asignado a la institucion ' + me.nombreInstitucion,\n            color: 'danger',\n            iconPack: 'feather',\n            icon: 'icon-alert-triangle'\n          });\n        } else {\n          me.$vs.notify({\n            text: 'Periodo agregado correctamente a la institucion ' + me.nombreInstitucion,\n            color: 'success',\n            iconPack: 'feather',\n            icon: 'icon-check'\n          });\n          me.modalPeriodos = false;\n          me.getPeriodosInstitucion();\n        }\n        me.$vs.loading.close();\n      }).catch(function (err) {\n        console.log(err);\n        me.$vs.loading.close();\n      });\n    },\n    confirmaEliminar: function confirmaEliminar(item) {\n      var me = this;\n      me.id_eliminar = item.id;\n      // console.log(me.id_eliminar)\n      // return\n      me.popupPeriodos = false;\n      me.$vs.dialog({\n        type: 'confirm',\n        color: 'danger',\n        title: 'Confirmar',\n        text: 'Seguro desea eliminar este item?',\n        acceptText: 'Aceptar',\n        cancelText: 'Cancelar',\n        accept: me.eliminarItem,\n        cancel: me.close\n      });\n    },\n    close: function close() {\n      var me = this;\n      me.popupPeriodos = true;\n      this.$vs.notify({\n        color: 'danger',\n        title: 'Cerrado',\n        text: 'Has cerrado!'\n      });\n    },\n    eliminarItem: function eliminarItem() {\n      var me = this;\n      this.$http.get(this.$server_url + 'eliminarPeriodosInstitucion/' + me.id_eliminar).then(function (res) {\n        me.$vs.notify({\n          text: 'Periodo de esta institución eliminado correctamente',\n          color: 'success',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        me.getPeriodosInstitucion();\n      }).catch(function (err) {\n        console.log(err);\n      });\n    },\n    //===========FIN DE METODOS DE PERIODOS======================\n    //===========METODOS PARA EDITAR INSTITUCION ===============\n    getCiudadSelect: function () {\n      var _getCiudadSelect = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var me;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              me = this;\n              this.$http.get(this.$server_url + \"ciudad\").then(function (response) {\n                me.ciudad = response.data;\n                // console.log(me.ciudad);\n              });\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function getCiudadSelect() {\n        return _getCiudadSelect.apply(this, arguments);\n      }\n      return getCiudadSelect;\n    }(),\n    getRegionSelect: function () {\n      var _getRegionSelect = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var me;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              me = this;\n              this.$http.get(this.$server_url + \"region\").then(function (response) {\n                me.region = response.data;\n              });\n            case 2:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function getRegionSelect() {\n        return _getRegionSelect.apply(this, arguments);\n      }\n      return getRegionSelect;\n    }(),\n    getPeriodoSelect: function () {\n      var _getPeriodoSelect = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n        var me;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              me = this;\n              this.$http.get(this.$server_url + \"periodo\").then(function (response) {\n                me.periodo = response.data;\n              });\n            case 2:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n      function getPeriodoSelect() {\n        return _getPeriodoSelect.apply(this, arguments);\n      }\n      return getPeriodoSelect;\n    }(),\n    getInstitucionEditar: function () {\n      var _getInstitucionEditar = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(idinstitucion) {\n        var me;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              me = this;\n              me.$vs.loading();\n              this.$http.get(this.$server_url + \"institucion/\" + idinstitucion).then(function (response) {\n                me.institucion = response.data;\n                if (me.institucion.tipo_institucion == 1) {\n                  me.institucion.tipo_institucion = 'no';\n                } else {\n                  me.institucion.tipo_institucion = 'si';\n                }\n                //llenar el radio matricula\n                if (me.institucion.aplica_matricula == 1) {\n                  me.institucion.matricula = '1';\n                } else {\n                  me.institucion.matricula = '0';\n                }\n                me.institucion.estado = response.data.estado_idEstado;\n                console.log(me.institucion);\n                me.$vs.loading.close();\n              }).catch(function (error) {\n                me.$vs.loading.close();\n              });\n            case 3:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this);\n      }));\n      function getInstitucionEditar(_x2) {\n        return _getInstitucionEditar.apply(this, arguments);\n      }\n      return getInstitucionEditar;\n    }(),\n    rechargeInstitucion: function rechargeInstitucion(e) {\n      var me = this;\n      //0 => RECARGAR ; 1 CERRAR MODAL\n      if (e == 0) {\n        me.popupAddInstitucion = false;\n        me.getInstitucion();\n      } else {\n        me.popupAddInstitucion = false;\n      }\n    },\n    getVendedor: function () {\n      var _getVendedor = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n        var me;\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              me = this;\n              this.$http.get(this.$server_url + 'listaAsesores').then(function (response) {\n                me.vendedor = response.data;\n                // console.log(me.vendedor);\n              }).catch(function (error) {});\n            case 2:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this);\n      }));\n      function getVendedor() {\n        return _getVendedor.apply(this, arguments);\n      }\n      return getVendedor;\n    }(),\n    //=======FIN DE METODOS PARA EDITAR INSTITUCION============\n    //=======METODOS PARA EL MODAL DE LISTA DE DOCENTES========\n    getUsuariosTipo: function getUsuariosTipo() {\n      var me = this;\n      me.$vs.loading();\n      if (me.tipo == 'docente') {\n        this.$http.get(this.$server_url + 'docentes?idInstitucion=' + me.institucionDocente.idInstitucion).then(function (response) {\n          me.usuarios = response.data;\n          me.$vs.loading.close();\n          // console.log(me.usuarios)\n        }).catch(function (error) {\n          console.log(error);\n          me.$vs.loading.close();\n        });\n      }\n      if (me.tipo == 'estudiante') {\n        this.$http.get(this.$server_url + 'estudiantesXInstitucion/' + me.institucionDocente.idInstitucion).then(function (response) {\n          me.usuarios = response.data;\n          me.$vs.loading.close();\n          // console.log(me.usuarios)\n        }).catch(function (error) {\n          console.log(error);\n          me.$vs.loading.close();\n        });\n      }\n    },\n    getUsuariosTipoVisitas: function getUsuariosTipoVisitas() {\n      var me = this;\n      var from = moment(me.fromDate).format('YYYY-MM-DD');\n      var to = moment(me.toDate).format('YYYY-MM-DD');\n      if (me.fromDate == null) {\n        me.$vs.notify({\n          text: 'Debe escoger una fecha inicio',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        return false;\n      }\n      if (me.toDate == null) {\n        me.$vs.notify({\n          text: 'Debe escoger una fecha final',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        return false;\n      }\n      if (me.fromDate > me.toDate) {\n        me.$vs.notify({\n          text: 'La fecha inicio no puede mayor que la fecha final',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        return false;\n      }\n      me.usuarios = [];\n      me.$vs.loading();\n      this.$http.get(this.$server_url + 'docentesVisitas?idInstitucion=' + me.institucionDocente.idInstitucion + '&fromDate=' + from + '&toDate=' + to).then(function (response) {\n        me.usuarios = response.data;\n        me.$vs.loading.close();\n        // console.log(me.usuarios)\n      }).catch(function (error) {\n        console.log(error);\n        me.$vs.loading.close();\n      });\n    },\n    verVisitas: function verVisitas(item) {\n      var me = this;\n      // console.log(item);\n      me.popupVistasUsuario = true;\n      localStorage.datoUser = JSON.stringify(item);\n      me.datoU = JSON.parse(localStorage.getItem('datoUser'));\n      me.getVisitasDocente();\n      // if (me.tipo == 'docente') {\n      //     me.$router.push('/institucion/docentes/visitas');\n      // }\n      // if (me.tipo == 'estudiante') {\n      //     me.$router.push('/institucion/estudiante/visitas');\n      // }\n    },\n    irAsignacion: function irAsignacion(item) {\n      var me = this;\n      // console.log( item )\n      me.popupAsignacion = true;\n      localStorage.setItem('user_select', JSON.stringify(item));\n      localStorage.setItem('show_inst', 'si'); //desde vista docentes, mostrar institucion\n\n      me.show_inst = localStorage.getItem('show_inst');\n      me.usuarioAsignacion = JSON.parse(localStorage.getItem('user_select'));\n      me.user_seleccionado = me.usuarioAsignacion.idusuario;\n      me.user_nombre = me.usuarioAsignacion.nombres + ' ' + me.usuarioAsignacion.apellidos;\n      me.user_email = me.usuarioAsignacion.email;\n      me.user_institucion = JSON.parse(localStorage.getItem('institucion'));\n      me.getAreaSelect();\n      me.getSeleccionadas();\n\n      // me.$router.push('/usuarios/asignaturasInstitucion');\n    },\n    //=======FIN DEL METODOS PARA EL MODAL DE LISTA DE DOCENTES\n    //=======METODOS PARA MODAL DE ASIGNACION DE LIBROS\n    getSeleccionadas: function getSeleccionadas() {\n      var me = this;\n      me.$vs.loading();\n      var data = new FormData();\n      data.append('idusuario', me.user_seleccionado);\n      this.$http.post(this.$server_url + \"asignaturasDocent\", data).then(function (res) {\n        // console.log(res.data);\n        me.seleccionadas = res.data;\n        // me.popupDocentes = true;\n        me.$vs.loading.close();\n      });\n    },\n    getAreaSelect: function getAreaSelect() {\n      var me = this;\n      me.$vs.loading();\n      this.$http.get(this.$server_url + \"areaSelect\").then(function (response) {\n        me.area = response.data.items;\n        // console.log(me.area);\n        me.$vs.loading.close();\n      });\n    },\n    agregaAsignacion: function agregaAsignacion(item) {\n      var me = this;\n      var data = new FormData();\n      data.append('usuario_idusuario', me.user_seleccionado);\n      data.append('asignatura_idasignatura', item.id);\n      this.$http.post(this.$server_url + \"asignar_asignatura_docentes\", data).then(function (res) {\n        // console.log(res.data);\n        if (res.data > 0) {\n          me.$vs.notify({\n            time: 7000,\n            text: 'Esta asignatura ya se encuentra asignada al docente',\n            color: 'danger',\n            iconPack: 'feather',\n            icon: 'icon-alert-triangle'\n          });\n        } else {\n          me.$vs.notify({\n            text: 'Asignatura agregada',\n            color: 'success',\n            iconPack: 'feather',\n            icon: 'icon-check'\n          });\n          me.getSeleccionadas();\n        }\n        me.$vs.loading.close();\n      });\n    },\n    eliminaAsignacion: function eliminaAsignacion(item) {\n      var me = this;\n      // console.log(item)\n      me.$vs.loading();\n      this.$http.get(this.$server_url + \"eliminaAsignacion/\" + item.idasignado).then(function (res) {\n        // console.log(res.data);\n        me.$vs.notify({\n          text: item.nombreasignatura + ' eliminada',\n          color: 'success',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        me.getSeleccionadas();\n        me.$vs.loading.close();\n      });\n    },\n    moverPeriodoActual: function moverPeriodoActual() {\n      var me = this;\n      console.log(\"user_seleccionado\", me.user_seleccionado);\n      console.log(\"periodo\", me.institucionSelected.periodo_id);\n      this.$http.get(this.$server_url + 'moverAsignaturasPeriodo/' + me.user_seleccionado + '/' + me.institucionSelected.periodo_id).then(function (res) {\n        me.$vs.notify({\n          text: 'Se cambio correctamente',\n          color: 'success',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        me.getSeleccionadas();\n      }).catch(function (error) {\n        console.log(error + ' error');\n      });\n    },\n    confirmaQuitar: function confirmaQuitar() {\n      var me = this;\n      me.popupAsignacion = false;\n      me.$vs.dialog({\n        type: 'confirm',\n        color: 'danger',\n        title: 'Confirmar',\n        text: '¿Está seguro de eliminar este contenido?',\n        acceptText: 'Aceptar',\n        cancelText: 'Cancelar',\n        accept: me.f_quitarTodo,\n        cancel: me.f_regresar\n      });\n    },\n    f_regresar: function f_regresar() {\n      var me = this;\n      me.popupAsignacion = true;\n    },\n    f_quitarTodo: function f_quitarTodo() {\n      var me = this;\n      var idSelects = [];\n      for (var index = 0; index < me.seleccionadas.length; index++) {\n        idSelects.push(me.seleccionadas[index].idasignado);\n      }\n      // console.log(idSelects)\n      me.$vs.loading();\n      var data = new FormData();\n      data.append('idasiguser', idSelects);\n      this.$http.post(this.$server_url + \"quitaTodasAsignaturas\", data).then(function (res) {\n        // console.log(res.data);\n        me.$vs.notify({\n          text: 'Asignaturas quitadas correctamente.',\n          color: 'success',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        me.getSeleccionadas();\n        me.$vs.loading.close();\n      });\n    },\n    //=======FIN DE METODOS PARA MODAL DE ASIGNACION DE LIBROS\n    //METODOS PARA MODAL VISITAS DE USUARIO\n    getVisitasDocente: function getVisitasDocente() {\n      var me = this;\n      axios.get('https://foro.prolipadigital.com.ec/estudiantes?idusuario=' + me.datoU.idusuario + '&_sort=updatedAt:DESC').then(function (res) {\n        me.listaVisitas = res.data;\n        // console.log(me.listaVisitas)\n      }).catch(function (error) {\n        console.log(' no se conecto a consultar las visitas ');\n      });\n    },\n    //======FIN DE MODAL PARA VISITAS DE USUARIO\n    //====PARA EXPORTAR A EXCEL LOS DOCENTES CON LAS VISITAS======\n    exportToExcel: function exportToExcel() {\n      var _this2 = this;\n      var headerTitle = ['nombres', 'apellidos', 'email', 'usuario', 'cedula', 'visitas', 'Fecha creacion'];\n      var headerVal = ['nombres', 'apellidos', 'email', 'name_usuario', 'cedula', 'visitas', 'created_at'];\n      var codigoSelectedMayus = this.codigoSelected;\n      for (var i = 0; i < codigoSelectedMayus.length; i++) {\n        for (var key in codigoSelectedMayus[i]) {\n          if (typeof codigoSelectedMayus[i][key] == \"string\") {\n            codigoSelectedMayus[i][key] = codigoSelectedMayus[i][key].toUpperCase();\n          }\n        }\n      }\n      import('@/vendor/Export2Excel').then(function (excel) {\n        var list = codigoSelectedMayus;\n        var data = _this2.formatJson(headerVal, list);\n        excel.export_json_to_excel({\n          header: headerTitle,\n          data: data,\n          filename: _this2.fileName,\n          autoWidth: _this2.cellAutoWidth,\n          bookType: _this2.selectedFormat\n        });\n        _this2.clearFields();\n        _this2.guardarActivo = '';\n        _this2.generarActivo = ' ';\n        _this2.textAlertCant = '';\n        _this2.cantidad = '';\n        _this2.codigoSelected = [];\n      });\n    },\n    formatJson: function formatJson(filterVal, jsonData) {\n      return jsonData.map(function (v) {\n        return filterVal.map(function (j) {\n          return v[j];\n        });\n      });\n    },\n    clearFields: function clearFields() {\n      this.fileName = '';\n      this.cellAutoWidth = true;\n      this.selectedFormat = 'xls';\n    },\n    openLoadingColor: function openLoadingColor(libro) {\n      this.$vs.loading({\n        color: '#1A76F2'\n      });\n    },\n    //generar enlace para el estudiante pueda ingresar los codigos\n    generateEnlaceEstudiante: function generateEnlaceEstudiante(tr) {\n      var me = this;\n      var host = location.protocol + '//' + location.hostname + ':' + location.port + '/formulario/diagnostico/';\n      //let host = location.protocol + '//' + location.hostname +':'+ location.port + '/formulario/diagnostico/'+ tr.idInstitucion +'/'\n      if (tr.statusPeriodo == 0) {\n        me.$vs.notify({\n          text: 'La institución tiene período inactivo no se puede generar el enlace',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-check',\n          time: 6000\n        });\n        return;\n      }\n      var formData = new FormData();\n      me.$vs.loading();\n      formData.append('institucion_id', tr.idInstitucion);\n      formData.append('periodo_id', tr.periodo_id);\n      formData.append('link', host);\n      this.$http.post(this.$server_url + 'GenerarEnlaceDiagnostico', formData).then(function (res) {\n        me.$vs.loading.close();\n        me.copiarLink(res.data[0]);\n      }).catch(function (error) {\n        me.$vs.loading.close();\n      });\n    },\n    VerCoincidencias: function VerCoincidencias(tr) {\n      var me = this;\n      var resultado = \"\";\n      me.busquedaMilton = \"\";\n      me.arregloCoincidencias = [];\n      me.arregloIdsCoincidencias = [];\n      me.institucionCiudad = tr.ciudad;\n      me.institucionEnviar = tr.idInstitucion;\n      me.institucionNombreEnviar = tr.nombreInstitucion;\n      me.institucionEnviarCedula = tr.vendedorInstitucion;\n      me.institucionEnviarAIniciales = tr.iniciales;\n      var texto = tr.nombreInstitucion;\n      // Convertimos la cadena en un arreglo de palabras\n      var palabras = texto.split(\" \");\n      if (palabras.length > 3) {\n        // Obtenemos las últimas 3 palabras del arreglo\n        var ultimasTres = palabras.slice(-3);\n        // Unimos las últimas 3 palabras en una sola cadena\n        resultado = ultimasTres.join(\" \");\n      } else {\n        resultado = tr.nombreInstitucion;\n      }\n      //enviar ids coincidencias al arreglo\n      if (tr.codigo_mitlon_coincidencias == \"null\" || tr.codigo_mitlon_coincidencias == null || tr.codigo_mitlon_coincidencias == \"\") {} else {\n        var transforWords = tr.codigo_mitlon_coincidencias;\n        me.arregloIdsCoincidencias = transforWords.split(\",\");\n      }\n      me.buscarCoincidencias(resultado);\n    },\n    buscarCoincidencias: function buscarCoincidencias(coincidencia) {\n      var me = this;\n      me.arregloCoincidencias = [];\n      me.$vs.loading();\n      this.$http.get(this.$server_url + 'buscarCoincidenciaInstitucionMilton?coincidencia=' + coincidencia).then(function (res) {\n        me.$vs.loading.close();\n        if (res.data.status == 0) {\n          me.$vs.notify({\n            text: res.data.message,\n            color: 'primary',\n            iconPack: 'feather',\n            icon: 'icon-check'\n          });\n        }\n        me.arregloCoincidencias = res.data;\n        me.popupCoincidencia = true;\n      }).catch(function (error) {\n        console.log(error + ' error');\n        me.$vs.loading.close();\n      });\n    },\n    AsignarCodigoMilton: function AsignarCodigoMilton(tr) {\n      var me = this;\n      var resolve = me.arregloIdsCoincidencias.filter(function (p) {\n        return p == tr.ID_INSTITUCION;\n      });\n      if (resolve.length == 0) {\n        me.arregloIdsCoincidencias.push(tr.ID_INSTITUCION);\n      }\n    },\n    guadarIdsMilton: function guadarIdsMilton() {\n      var me = this;\n      if (me.arregloIdsCoincidencias.length == 0) {\n        me.$vs.notify({\n          text: 'Debe seleccionar al menos un id',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        return;\n      }\n      var valorPrimario = me.arregloIdsCoincidencias[0];\n      var enviarIds = me.arregloIdsCoincidencias.join(',');\n      var formData = new FormData();\n      formData.append('valorPrimario', valorPrimario);\n      formData.append('codigosM', enviarIds);\n      formData.append('institucion_id', me.institucionEnviar);\n      formData.append('cedulaAsesor', me.institucionEnviarCedula);\n      formData.append('cedulaAsesorIniciales', me.institucionEnviarAIniciales);\n      me.$vs.loading();\n      this.$http.post(this.$server_url + 'guadarIdsMilton', formData).then(function (res) {\n        me.$vs.loading.close();\n        me.$vs.notify({\n          text: 'Se actualizo correctamente',\n          color: 'primary',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        me.getInstitucion();\n        me.popupCoincidencia = false;\n      }).catch(function (error) {\n        console.log(error + ' error');\n        me.$vs.loading.close();\n      });\n    },\n    eliminaAsignacionIdMilton: function eliminaAsignacionIdMilton(value) {\n      var me = this;\n      me.arregloIdsCoincidencias.splice(value, 1);\n    },\n    copiarLink: function copiarLink(tr) {\n      var me = this;\n      var ruta = tr.link;\n      var aux = document.createElement(\"input\");\n      aux.setAttribute(\"value\", ruta);\n      document.body.appendChild(aux);\n      aux.select();\n      try {\n        var status = document.execCommand('copy');\n        if (!status) {\n          me.$vs.notify({\n            text: 'Error al copiar el link',\n            color: 'warning',\n            iconPack: 'feather',\n            icon: 'icon-alert-triangle'\n          });\n        } else {\n          me.$vs.notify({\n            text: 'Link copiado',\n            color: 'success',\n            iconPack: 'feather',\n            icon: 'icon-check'\n          });\n        }\n      } catch (err) {\n        console.log('No se pudo copiar');\n      }\n      document.body.removeChild(aux);\n    },\n    //METODOS REGISTRO DE DOCENTES\n    registroDocentes: function registroDocentes(tr) {\n      var me = this;\n      if (tr.statusPeriodo == 0) {\n        me.$vs.notify({\n          text: 'La institución tiene periodo inactivo, solicite la activación a Soporte',\n          color: 'danger',\n          iconPack: 'feather',\n          icon: 'icon-check',\n          time: 6000\n        });\n        return;\n      }\n      me.popupAsignacionDocentes = true;\n    },\n    //FIN METODOS REGISTRO DE DOCENTES\n    //IMPRIMIR CODIGOS ESTUDIANTES\n    imprimirCodigosEstudiante: function imprimirCodigosEstudiante(tr) {\n      var me = this;\n      var datos = tr.periodo_id + '*' + tr.idInstitucion;\n      me.$vs.loading();\n      this.$http.get(this.$server_url + 'getEstudianteCodigos/' + datos).then(function (response) {\n        me.$vs.loading.close();\n        if (response.data.length == 0) {\n          me.$vs.notify({\n            text: 'No hay códigos registrados en esta institución',\n            color: 'danger',\n            time: 6000,\n            position: 'center',\n            iconPack: 'feather',\n            icon: 'icon-check'\n          });\n          return;\n        }\n        me.arregloCodigosEstudiantes = response.data;\n        me.exportToExcelCodigos();\n      }).catch(function (error) {\n        me.$vs.loading.close();\n      });\n    },\n    getEvaluacionesInstitucion: function getEvaluacionesInstitucion() {\n      var me = this;\n      me.$vs.loading();\n      var _me$institucionSelect = me.institucionSelected,\n        idInstitucion = _me$institucionSelect.idInstitucion,\n        periodo_id = _me$institucionSelect.periodo_id;\n      this.$http.get(this.$server_url + \"getEvaluacionesInstitucion/\".concat(idInstitucion, \"/\").concat(periodo_id, \"/\")).then(function (response) {\n        me.$vs.loading.close();\n        me.arrayEvaluacionesInstitucion = response.data;\n        me.popupEvaluaciones = true;\n      }).catch(function (error) {\n        me.$vs.loading.close();\n      });\n    },\n    changeEvaluacion: function changeEvaluacion(e) {\n      var me = this;\n      me.popupEvaluaciones = false;\n    },\n    //METODOS PARA DETALE DE VENTA\n    getTipoVenta: function getTipoVenta(tr) {\n      var me = this;\n      me.pedido.nombreInstitucion = tr.nombreInstitucion;\n      me.pedido.idInstitucion = tr.idInstitucion;\n      me.pedido.periodo = tr.periodo;\n      me.pedido.periodo_id = tr.periodo_id;\n      me.tituloDetalleVenta = 'Detalle de venta de ' + me.pedido.nombreInstitucion;\n      me.popupTipoVenta = true;\n    },\n    //FIN METODOS PARA DETALLE DE VENTA\n    //METODOS PARA ACTIVAR AL ULTIMO PERIODO\n    getPeriodosActivar: function getPeriodosActivar() {\n      var me = this;\n      me.$vs.loading();\n      me.periodoSelect = [];\n      this.$http.get(this.$server_url + 'get_periodos_pedidos').then(function (res) {\n        me.$vs.loading.close();\n        var datos = res.data;\n        if (datos.length == 0) {\n          me.$vs.notify({\n            text: 'No existe períodos para activar Comuniquese con soporte',\n            color: 'warning',\n            iconPack: 'feather',\n            icon: 'icon-check',\n            time: 5000\n          });\n          return;\n        }\n        //obtener el perido activo de la region para activar a la escuela en ese periodo\n        if (datos.length > 0) {\n          me.periodoSelect = datos.filter(function (p) {\n            return p.cambiar_periodo == 1 && p.region_idregion == me.sendInstitucion.region;\n          });\n          //si no existe el periodo activo para la region para poder cambiar\n          if (me.periodoSelect.length == 0) {\n            me.$vs.notify({\n              text: 'No existe un período configurado para activar Comuniquese con soporte',\n              color: 'warning',\n              iconPack: 'feather',\n              icon: 'icon-check',\n              time: 5000\n            });\n            return;\n          }\n          //si existe mas de un periodo activo para la region\n          if (me.periodoSelect.length > 1) {\n            me.$vs.notify({\n              text: 'Existe más de un período configurado para activar Comuniquese con soporte',\n              color: 'warning',\n              iconPack: 'feather',\n              icon: 'icon-check',\n              time: 5000\n            });\n            return;\n          }\n          me.popupActualizarPeriodo = true;\n        }\n      }).catch(function (error) {\n        me.$vs.loading.close();\n      });\n    },\n    changePeriodo: function changePeriodo() {\n      var me = this;\n      me.$vs.loading();\n      var data = new FormData();\n      data.append('idperiodoescolar', me.periodoSelect[0].idperiodoescolar);\n      data.append('idinstitucion', me.sendInstitucion.idInstitucion);\n      this.$http.post(this.$server_url + 'verifica_periodo', data).then(function (res) {\n        me.$vs.loading.close();\n        if (res.data == 1) {\n          me.$vs.notify({\n            time: 8000,\n            text: 'Este periodo ya se encuentra asignado a la institucion ' + me.sendInstitucion.nombreInstitucion,\n            color: 'danger',\n            iconPack: 'feather',\n            icon: 'icon-alert-triangle'\n          });\n        } else {\n          me.$vs.notify({\n            text: 'Periodo agregado correctamente a la institucion ' + me.sendInstitucion.labnombreInstitucionel,\n            color: 'success',\n            iconPack: 'feather',\n            icon: 'icon-check'\n          });\n        }\n        me.getInstitucion();\n        me.sendInstitucion = {};\n        me.popupActualizarPeriodo = false;\n      }).catch(function (err) {\n        console.log(err);\n        me.$vs.loading.close();\n      });\n    },\n    //FIN METODOS PARA ACTIVAR AL ULTIMO PERIODO\n    //METODOS PARA EXCEL\n    //para limipiar los campos del excel\n    //metodo par descargar el excel\n    exportToExcelCodigos: function exportToExcelCodigos() {\n      var _this3 = this;\n      var headerTitle = ['Código', 'Estudiante', 'Libro'];\n      var headerVal = ['codigo', 'estudiante', 'nombrelibro'];\n      var codigoSelectedMayus = this.arregloCodigosEstudiantes;\n      for (var i = 0; i < codigoSelectedMayus.length; i++) {\n        for (var key in codigoSelectedMayus[i]) {\n          if (typeof codigoSelectedMayus[i][key] == \"string\") {\n            codigoSelectedMayus[i][key] = codigoSelectedMayus[i][key].toUpperCase();\n          }\n        }\n      }\n      import('@/vendor/Export2Excel').then(function (excel) {\n        var list = codigoSelectedMayus;\n        var data = _this3.formatJson(headerVal, list);\n        var nombrefile = \"\";\n        if (_this3.openModal == 1) {\n          nombrefile = _this3.fileName;\n        } else {\n          nombrefile = \"Reporte_de_codigo_de_estudiantes\";\n        }\n        excel.export_json_to_excel({\n          header: headerTitle,\n          data: data,\n          filename: nombrefile,\n          autoWidth: _this3.cellAutoWidth,\n          bookType: _this3.selectedFormat\n        });\n        _this3.clearFields();\n        _this3.guardarActivo = '';\n        _this3.generarActivo = ' ';\n        _this3.textAlertCant = '';\n        _this3.cantidad = '';\n      });\n    }\n  }\n};",{"version":3,"names":["Vue","axios","DataViewSidebar","Periodos","vSelect","escuelasAsesorVue","listadoContratoMiltonVue","asignarLibrosVue","moment","flatPickr","asignarRecursosExternosVue","GenerarFormulario","MenuEncuesta","InstitucionesXCiudad","Ciudades_vue","Zonas_vue","Periodo_config_institucion","RegistroDocentesVue","institucionfacturacion","addInstitucionVue","RegistroVentaVue","ResetearEvaluacionesVue","components","data","_ref","institucion_id","configdateTimePicker","enableTime","dateFormat","user_institucion_send","activePrompt","reportesActivo","fileName","formats","cellAutoWidth","selectedFormat","reporteAsesorActivo","guardarActivo","generarActivo","textAlertCant","cantidad","codigoSelected","codigoTipo","escuelas","popupVistasUsuario","popupAsignacion","popupDocentes","popupAddInstitucion","popupPeriodos","busquedaInstitucion","instituciones","tmpInstituciones","sidebarData","addNewDataSidebar","usuario","grupo_usuario","visitasginstitucion","visitasgdocente","visitasgestudiantes","historicoinstitucionArreglo","historicoDocenteArreglo","historicoEstudianteArreglo","visitasnombreinstitucion","user_autorizado","c_region","nombreInstitucion","idInstitucion","listaPeriodos","tmplistaPeriodos","listaPeriodosInstitucion","tmp","f_periodos","modalPeriodos","id_eliminar","region","_defineProperty","FormData","email","password","institucion","periodo_id","periodoDescripcion","mounted","me","localStorage","removeItem","JSON","parse","getItem","id_group","getUserRoot","date","Date","primerDia","getFullYear","getMonth","ultimoDia","fromDate","toDate","methods","irFormularioDocente","tr","setItem","formulario","periodo","verPermisosExternos","irGestionEncuestas","fieldChange","e","errorImage","tamanioError","attachments","selectedFiles","target","files","validar","type","tamanio","size","$vs","notify","text","color","iconPack","icon","file","i","length","push","name","archivoName","$http","get","$server_url","idusuario","then","res","status","permisoRoot","catch","error","console","log","agregarPermisosExternos","permisosInstitucion","permisosNombreInstitucion","closeBtn","event","irAddRecursosExternos","arguments","undefined","ciudad","$router","addNewData","toggleDataSidebar","val","getInstitucion","loading","close","message","getPeriodoInstitucion","id","agregarLibro","idinstitucion","agregarLibrerias","verDocentes","item","usuarios","visitasD","stringify","tipoUser","institucionDocente","tipo","perfil_autorizado","getUsuariosTipo","verDocentesVisitas","getUsuariosTipoVisitas","confirmEliminarInstitucion","dialog","title","accept","eliminarInstitucion","formData","append","post","verEstudiantes","getVisitas","_this","filter","p","idgrupo","err","verMatricula","periodos","nombreregion","getPeriodosInstitucion","getPeriodos","getSeguimiento","_getSeguimiento","_asyncToGenerator","regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","asesor_id","response","periodo_nombre","descripcion","stop","_x","apply","filtrarPeriodoAcceso","estado","fecha","add","format","fechafinal","map","fhasta_limite","estadoLimiteAcceso","filtroPeriodos","abrirModal","index","verificarPeriodo","idperiodoescolar","time","confirmaEliminar","acceptText","cancelText","eliminarItem","cancel","getCiudadSelect","_getCiudadSelect","_callee2","_callee2$","_context2","getRegionSelect","_getRegionSelect","_callee3","_callee3$","_context3","getPeriodoSelect","_getPeriodoSelect","_callee4","_callee4$","_context4","getInstitucionEditar","_getInstitucionEditar","_callee5","_callee5$","_context5","tipo_institucion","aplica_matricula","matricula","estado_idEstado","_x2","rechargeInstitucion","getVendedor","_getVendedor","_callee6","_callee6$","_context6","vendedor","from","to","verVisitas","datoUser","datoU","getVisitasDocente","irAsignacion","show_inst","usuarioAsignacion","user_seleccionado","user_nombre","nombres","apellidos","user_email","user_institucion","getAreaSelect","getSeleccionadas","seleccionadas","area","items","agregaAsignacion","eliminaAsignacion","idasignado","nombreasignatura","moverPeriodoActual","institucionSelected","confirmaQuitar","f_quitarTodo","f_regresar","idSelects","listaVisitas","exportToExcel","_this2","headerTitle","headerVal","codigoSelectedMayus","key","toUpperCase","excel","list","formatJson","export_json_to_excel","header","filename","autoWidth","bookType","clearFields","filterVal","jsonData","v","j","openLoadingColor","libro","generateEnlaceEstudiante","host","location","protocol","hostname","port","statusPeriodo","copiarLink","VerCoincidencias","resultado","busquedaMilton","arregloCoincidencias","arregloIdsCoincidencias","institucionCiudad","institucionEnviar","institucionNombreEnviar","institucionEnviarCedula","vendedorInstitucion","institucionEnviarAIniciales","iniciales","texto","palabras","split","ultimasTres","slice","join","codigo_mitlon_coincidencias","transforWords","buscarCoincidencias","coincidencia","popupCoincidencia","AsignarCodigoMilton","resolve","ID_INSTITUCION","guadarIdsMilton","valorPrimario","enviarIds","eliminaAsignacionIdMilton","value","splice","ruta","link","aux","document","createElement","setAttribute","body","appendChild","select","execCommand","removeChild","registroDocentes","popupAsignacionDocentes","imprimirCodigosEstudiante","datos","position","arregloCodigosEstudiantes","exportToExcelCodigos","getEvaluacionesInstitucion","_me$institucionSelect","concat","arrayEvaluacionesInstitucion","popupEvaluaciones","changeEvaluacion","getTipoVenta","pedido","tituloDetalleVenta","popupTipoVenta","getPeriodosActivar","periodoSelect","cambiar_periodo","region_idregion","sendInstitucion","popupActualizarPeriodo","changePeriodo","labnombreInstitucionel","_this3","nombrefile","openModal"],"sources":["src/views/institucion/instituciones.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <vx-card>\r\n          <div v-if=\"verPermisosExternos == 0\">\r\n            <vs-tabs>\r\n              <vs-tab label=\"Mis Instituciones\" v-if=\"usuario.id_group == 11\">\r\n                <escuelasAsesorVue />\r\n              </vs-tab>\r\n              <vs-tab label=\"Instituciones Prolipa\">\r\n                  <div class=\"con-tab-ejemplo\">\r\n                      <br>\r\n                      <div style=\"display:flex;flex-wrap:wrap;\">\r\n                          <div style=\"width:65%;display:flex;\">\r\n                              <div style=\"width:80%;\">\r\n                                  <vs-input icon=\"search\" style=\"width:100%;\" placeholder=\"Search\" @keyup.enter=\"getInstitucion()\" v-model=\"busquedaInstitucion\" />\r\n                              </div>\r\n                              <div style=\"width:20%;margin-left:10px;\">\r\n                                  <vs-button radius color=\"warning\" @click=\"getInstitucion()\" type=\"filled\" icon=\"search\"></vs-button>\r\n                              </div>\r\n                          </div>\r\n                          <div style=\"width:20%;\">\r\n                              <vs-button v-if=\"user_autorizado == 1\" color=\"primary\" type=\"border\" @click=\"institucion_id = 0; popupAddInstitucion = true;\" icon-pack=\"feather\" icon=\"icon-plus\">Agregar</vs-button>\r\n                          </div>\r\n                      </div>\r\n                      <br>\r\n                      <vs-table stripe max-items=\"50\" search pagination :data=\"instituciones\">\r\n                          <template slot=\"header\">\r\n                              <div class=\"vx-row\">\r\n                                  <div class=\"vx-col w-full m-3\">\r\n                                      Cantidad: {{instituciones.length}}\r\n                                  </div>\r\n                              </div>\r\n                          </template>\r\n                          <template slot=\"thead\">\r\n                              <vs-th sort-key=\"idInstitucion\">#</vs-th>\r\n                              <vs-th sort-key=\"nombreInstitucion\">Institución (asesores)</vs-th>\r\n                              <vs-th sort-key=\"nombre\">Localidad</vs-th>\r\n                              <vs-th sort-key=\"nombre\">Periodo</vs-th>\r\n                              <vs-th sort-key=\"visitas\">Cod. facturación</vs-th>\r\n                              <vs-th>Acciones</vs-th>\r\n                          </template>\r\n                          <template slot-scope=\"{data}\">\r\n                              <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                                  <vs-td :data=\"data[indextr].idInstitucion \">\r\n                                      {{data[indextr].idInstitucion }}\r\n                                  </vs-td>\r\n                                  <vs-td :data=\"data[indextr].nombreInstitucion\">\r\n                                      {{data[indextr].nombreInstitucion}}<br>\r\n                                      <div v-if=\"data[indextr].nombre_asesor == null &&  data[indextr].apellido_asesor == null\">\r\n                                          <small> <i style=\"color:red;\">No existe asesor </i></small><br>\r\n                                      </div>\r\n                                      <div v-else>\r\n                                          <small> <i>{{data[indextr].nombre_asesor}} {{data[indextr].apellido_asesor}} </i></small><br>\r\n                                      </div>\r\n                                      <small>{{data[indextr].fecha_registro}} </small><br>\r\n                                      <vs-chip v-if=\"tr.estadoInstitucion == 1\" color=\"success\">{{ tr.estado }}</vs-chip>\r\n                                      <vs-chip v-else>{{ tr.estado }}</vs-chip>\r\n                                  </vs-td>\r\n                                  <vs-td :data=\"data[indextr].nombreregion\">\r\n                                      {{data[indextr].nombreregion}} <br>\r\n                                      <small>{{data[indextr].ciudad}}</small>\r\n                                  </vs-td>\r\n                                  <vs-td :data=\"data[indextr].periodo\">\r\n                                      {{data[indextr].periodo}} <br>\r\n                                      <small v-if=\"tr.statusPeriodo == 1\" class=\"text-success font-bold\">{{tr.estadoPeriodo}}</small>\r\n                                      <small v-else>{{tr.estadoPeriodo}}</small>\r\n                                  </vs-td>\r\n                                  <vs-td>\r\n                                      <p> {{ tr.codigo_institucion_milton }} </p>\r\n                                      <small class=\"text-warning\" v-if=\"tr.codigo_institucion_milton == 22507\">Hay que cambiar</small>\r\n                                  </vs-td>\r\n                                  <vs-td :data=\"tr.idInstitucion\">\r\n                                      <vs-dropdown vs-custom-content vs-trigger-click>\r\n                                          <vs-button type=\"relief\" class=\"a-icon\">\r\n                                              Opciones\r\n                                              <vs-icon class=\"\" icon=\"expand_more\"></vs-icon>\r\n                                          </vs-button>\r\n                                          <vs-dropdown-menu class=\"loginx\">\r\n                                              <vs-dropdown-item v-if=\"usuario.id_group =='1' || usuario.id_group =='11' \" style=\"width:200px\" @click=\"irFormularioDocente(tr)\">\r\n                                                  <span class=\"feather icon icon-link\"></span> <small class=\"text-success ml-1\" style=\"font-size:13px;\">Solicitudes de libros</small>\r\n                                              </vs-dropdown-item>\r\n                                              <vs-dropdown-item v-if=\"permisoRoot || usuario.id_group == '11' \" style=\"width:200px\" @click=\"sendInstitucion = tr;getPeriodosActivar();\">\r\n                                                <span class=\"feather icon icon-link\"></span> <small class=\"text-primary ml-1\" style=\"font-size:13px;\">Activar a período actual</small>\r\n                                              </vs-dropdown-item>\r\n                                              <vs-dropdown-item v-if=\"permisoRoot == true\" style=\"width:200px\" @click=\"periodos(tr)\">\r\n                                                  <span class=\"feather icon icon-crop\"></span> Ver periodos\r\n                                              </vs-dropdown-item>\r\n                                              <vs-dropdown-item style=\"width:200px\" @click=\"getTipoVenta(tr)\">\r\n                                                  <span class=\"feather icon icon-shopping-cart\"></span> Ver detalle de venta\r\n                                              </vs-dropdown-item>\r\n                                              <vs-dropdown-item style=\"width:200px\" @click=\"institucion_id = tr.idInstitucion;popupAddInstitucion = true;\">\r\n                                                  <span class=\"feather icon icon-edit\"></span> Editar\r\n                                              </vs-dropdown-item>\r\n                                              <vs-dropdown-item v-if=\"permisoRoot == true\" style=\"width:200px\" @click=\"agregarLibro(tr.idInstitucion)\">\r\n                                                  <span class=\"feather icon icon-gift\"></span> Asignar libros gratis\r\n                                              </vs-dropdown-item>\r\n                                              <vs-dropdown-item v-if=\"permisoRoot == true\" style=\"width:200px\" @click=\"agregarLibrerias(tr.idInstitucion)\">\r\n                                                  <span class=\"feather icon icon-home\"></span> Asignar  librerias\r\n                                              </vs-dropdown-item>\r\n                                              <vs-dropdown-item style=\"width:200px\" @click=\"institucionSelected=tr;verDocentes(tr)\">\r\n                                                  <span class=\"feather icon icon-users\"></span> Lista de docentes\r\n                                              </vs-dropdown-item>\r\n                                              <vs-dropdown-item style=\"width:200px\" @click=\"verEstudiantes(tr)\">\r\n                                                  <span class=\"feather icon icon-user\"></span> Lista de Estudiantes\r\n                                              </vs-dropdown-item>\r\n                                              <vs-dropdown-item style=\"width:200px\" @click=\"verDocentesVisitas(tr)\">\r\n                                                  <span class=\"feather icon icon-filter\"></span> Visitas de docentes\r\n                                              </vs-dropdown-item>\r\n                                              <vs-dropdown-item v-if=\"permisoRoot == true\" style=\"width:200px\" @click=\"confirmEliminarInstitucion(tr)\">\r\n                                                  <span class=\"feather icon icon-trash\"></span> Eliminar institucion\r\n                                              </vs-dropdown-item>\r\n                                              <vs-dropdown-item v-if=\"(usuario.idusuario == '35748' || usuario.idusuario == '5103' || usuario.idusuario == '4853' && tr.aplica_matricula == 1 )\" style=\"width:200px\" @click=\"verMatricula(tr)\">\r\n                                                  <span class=\"feather icon icon-bookmark\"></span> Estado matricula\r\n                                              </vs-dropdown-item>\r\n                                              <vs-dropdown-item style=\"width:200px\" @click=\"generateEnlaceEstudiante(tr)\">\r\n                                                  <span class=\"feather icon icon-link\"></span> Enlace estudiantes\r\n                                              </vs-dropdown-item>\r\n                                              <vs-dropdown-item style=\"width:200px\" @click=\"sendInstitucion=tr;registroDocentes(tr)\">\r\n                                                  <span class=\"feather icon icon-user\"></span> Registro de docentes\r\n                                              </vs-dropdown-item>\r\n                                              <vs-dropdown-item style=\"width:200px\" @click=\"imprimirCodigosEstudiante(tr)\">\r\n                                                  <span class=\"feather icon icon-user\"></span>Exportar Códigos de estudiantes\r\n                                              </vs-dropdown-item>\r\n                                              <vs-dropdown-item v-if=\"permisoRoot && tr.cantidad_cambio_ventana_evaluacion > 0 \" style=\"width:200px\" @click=\"institucionSelected=tr;getEvaluacionesInstitucion(tr)\">\r\n                                                  <span class=\"feather icon icon-user\"></span>Reiniciar Evaluaciones\r\n                                              </vs-dropdown-item>\r\n                                              <!-- <vs-dropdown-item v-if=\"usuario.id_group =='1'\" style=\"width:200px\" @click=\"agregarPermisosExternos(tr)\">\r\n                                                  <span class=\"feather icon icon-layout\"></span> Recursos externos\r\n                                              </vs-dropdown-item> -->\r\n                                              <!-- <vs-dropdown-item v-if=\"permisoRoot == true\" style=\"width:200px\" @click=\"VerCoincidencias(tr)\">\r\n                                                  <span class=\"feather icon icon-link\"></span> Coincidencias de codigos de miltoN\r\n                                              </vs-dropdown-item> -->\r\n                                          </vs-dropdown-menu>\r\n                                      </vs-dropdown>\r\n                                  </vs-td>\r\n                              </vs-tr>\r\n                          </template>\r\n                      </vs-table>\r\n                  </div>\r\n              </vs-tab>\r\n              <vs-tab label=\"Instituciones Facturación\" v-if=\"permisoRoot\">\r\n                  <institucionfacturacion/>\r\n              </vs-tab>\r\n              <vs-tab label=\"Periodos\" v-if=\"permisoRoot\">\r\n                  <div class=\"con-tab-ejemplo\">\r\n                      <Periodos></Periodos>\r\n                  </div>\r\n              </vs-tab>\r\n              <vs-tab label=\"Instituciones por ciudades\">\r\n                <InstitucionesXCiudad />\r\n              </vs-tab>\r\n              <vs-tab label=\"Ciudades\" v-if=\"permisoRoot\">\r\n                  <Ciudades_vue />\r\n              </vs-tab>\r\n              <vs-tab label=\"Zonas\" v-if=\"permisoRoot\">\r\n                  <Zonas_vue />\r\n              </vs-tab>\r\n              <vs-tab label=\"Contratos Facturacion\" v-if=\"permisoRoot\">\r\n                <listadoContratoMiltonVue />\r\n              </vs-tab>\r\n              <vs-tab label=\"Periodos bodega\" v-if=\"permisoRoot\">\r\n                <Periodo_config_institucion/>\r\n              </vs-tab>\r\n            </vs-tabs>\r\n          </div>\r\n          <div v-if=\"verPermisosExternos == 2\">\r\n              <vs-button size=\"small\" color=\"warning\" @click=\"verPermisosExternos = 0;\" type=\"filled\" icon=\"reply\">Volver a instituciones</vs-button>\r\n              <GenerarFormulario class=\"mt-3\" :formularioInstitucion=\"formulario.institucion\" :formularioNombreInstitucion=\"formulario.nombreInstitucion\" :formularioPeriodo=\"formulario.periodoDescripcion\" :formularioPeriodo_id=\"formulario.periodo_id\" />\r\n          </div>\r\n        </vx-card>\r\n        <!-- =====MODALES=======-->\r\n        <!--Modal para periodos-->\r\n        <vs-popup class=\"holamundo\" fullscreen title=\"Periodos de la institucion\" :active.sync=\"popupPeriodos\">\r\n            <vx-card>\r\n                <h4>\r\n                    {{nombreInstitucion}}\r\n                </h4>\r\n                <!-- <vs-button  v-if=\"estadoLimiteAcceso =='1' || usuario.id_group== '1'\"  type=\"border\" color=\"success\" class=\"m-2\" @click=\"abrirModal();\">Agregar periodo</vs-button> -->\r\n                <vs-button v-if=\"permisoRoot == true\" type=\"border\" color=\"success\" class=\"m-2\" @click=\"abrirModal();\">\r\n                    Agregar periodo\r\n                </vs-button>\r\n                <vs-table max-items=\"20\" search pagination :data=\"listaPeriodosInstitucion\" class=\"mt-4\">\r\n                    <template slot=\"header\">\r\n                        <div>\r\n                            Cantidad: {{listaPeriodosInstitucion.length}}\r\n                        </div>\r\n                    </template>\r\n                    <template slot=\"thead\">\r\n                        <vs-th width=\"40%\">Periodo escolar</vs-th>\r\n                        <vs-th>Región</vs-th>\r\n                        <vs-th>Estado</vs-th>\r\n                        <vs-th>Actualizado</vs-th>\r\n                        <vs-th>Acciones</vs-th>\r\n                    </template>\r\n                    <template slot-scope=\"{data}\">\r\n                        <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                            <vs-td :data=\"tr.periodoescolar\">\r\n                                {{tr.periodoescolar}} <br>\r\n                                <small> {{tr.descripcion}} </small>\r\n                            </vs-td>\r\n                            <vs-td>\r\n                                <vs-chip> {{tr.nombreregion}}</vs-chip>\r\n                            </vs-td>\r\n                            <vs-td>\r\n                                <vs-chip v-if=\"tr.estado == 1\" color=\"success\"> Activo</vs-chip>\r\n                                <vs-chip v-if=\"tr.estado == 0\" color=\"danger\"> Inactivo</vs-chip>\r\n                            </vs-td>\r\n                            <vs-td>\r\n                                {{tr.updated_at}}\r\n                            </vs-td>\r\n                            <vs-td>\r\n                                <vx-tooltip text=\"eliminar periodo de esta institución\" position=\"top\" color=\"danger\" v-if=\"usuario.id_group== '1' \">\r\n                                    <vs-button type=\"border\" color=\"danger\" class=\"m-2\" icon-pack=\"feather\" icon=\"icon-trash\" @click=\"confirmaEliminar(tr);\"></vs-button>\r\n                                </vx-tooltip>\r\n                            </vs-td>\r\n                        </vs-tr>\r\n                    </template>\r\n                </vs-table>\r\n            </vx-card>\r\n        </vs-popup>\r\n        <vs-popup title=\"Periodos\" fullscreen :active.sync=\"modalPeriodos\">\r\n            <vs-table max-items=\"10\" search pagination :data=\"listaPeriodos\">\r\n                <template slot=\"header\">\r\n                    <vs-radio class=\"mb-3 m-2\" color=\"success\" v-model=\"f_periodos\" @change=\"filtroPeriodos\" vs-value=\"1\">Activos</vs-radio>\r\n                    <vs-radio class=\"mb-3 m-2\" color=\"danger\" v-model=\"f_periodos\" @change=\"filtroPeriodos\" vs-value=\"0\">Inactivos</vs-radio>\r\n                </template>\r\n                <template slot=\"thead\">\r\n                    <vs-th>Periodo escolar</vs-th>\r\n                    <vs-th>Fechas</vs-th>\r\n                    <vs-th>Region</vs-th>\r\n                    <vs-th>Estado</vs-th>\r\n                    <vs-th>Acciones</vs-th>\r\n                </template>\r\n                <template slot-scope=\"{data}\">\r\n                    <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                        <vs-td :data=\"tr.periodoescolar\">\r\n                            {{tr.periodoescolar}} <br>\r\n                            <small>{{tr.descripcion}}</small>\r\n                        </vs-td>\r\n                        <vs-td>\r\n                            <small>Inicio: {{tr.fecha_inicial}} </small><br>\r\n                            <small>Fin: {{tr.fecha_final}}</small>\r\n                        </vs-td>\r\n                        <vs-td>\r\n                            <vs-chip v-if=\"tr.region_idregion == 1\"> SIERRA</vs-chip>\r\n                            <vs-chip v-if=\"tr.region_idregion == 2\"> COSTA</vs-chip>\r\n                        </vs-td>\r\n                        <vs-td>\r\n                            <vs-chip v-if=\"tr.estado == 1\" color=\"success\"> Activo</vs-chip>\r\n                            <vs-chip v-if=\"tr.estado == 0\" color=\"danger\"> Inactivo</vs-chip>\r\n                        </vs-td>\r\n                        <vs-td>\r\n                            <vs-button type=\"filled\" size=\"small\" color=\"success\" class=\"m-2\" icon-pack=\"feather\" icon=\"icon-plus\" @click=\"verificarPeriodo(tr);\">Agregar</vs-button>\r\n\r\n                        </vs-td>\r\n                    </vs-tr>\r\n                </template>\r\n            </vs-table>\r\n        </vs-popup>\r\n        <!--FIN DE MODALES DE PERIODOS -->\r\n        <!--Modal para Editar Institucion-->\r\n        <vs-popup title=\"Mantenimiento Institución\" fullscreen :active.sync=\"popupAddInstitucion\">\r\n          <addInstitucionVue v-if=\"popupAddInstitucion\" :id=\"institucion_id\" @rechargeInstitucion=\"rechargeInstitucion\"/>\r\n        </vs-popup>\r\n        <!--FIN de modal para editar institucion -->\r\n        <!-- Modal para lista de docentes -->\r\n        <vs-popup title=\"Lista usuarios\" fullscreen :active.sync=\"popupDocentes\">\r\n            <vx-card>\r\n                <label>Institución : </label>\r\n                <h4> {{institucionDocente.nombreInstitucion}} </h4>\r\n                <div v-if=\"usuarios.length>0\">\r\n                    <vs-table multiple v-model=\"codigoSelected\" pagination max-items=\"25\" search :data=\"usuarios\">\r\n                        <template slot=\"header\">\r\n                            <vs-button color=\"warning\" size=\"small\" class=\"mr-5\" style=\"font-size: 14px;\" @click=\"activePrompt=true;popupDocentes=false;\">Exportar</vs-button>\r\n                            <div> Cantidad de usuarios: &nbsp; <b>{{ usuarios.length }}</b> </div>\r\n                            <vs-row v-if=\"visitasD == true\">\r\n                                <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"4\">\r\n                                    <flat-pickr :config=\"configdateTimePicker\" v-model=\"fromDate\" placeholder=\"Fecha Inicio\" class=\"m-1\" style=\"display: inline-block;width: 100%;\" />\r\n                                </vs-col>\r\n                                <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"4\">\r\n                                    <flat-pickr :config=\"configdateTimePicker\" v-model=\"toDate\" placeholder=\"Fecha Fin\" class=\"m-1\" style=\"display: inline-block;width: 100%\" />\r\n                                </vs-col>\r\n                                <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"1\">\r\n\r\n                                    <vs-button radius @click=\"getUsuariosTipoVisitas()\" color=\"success\" type=\"gradient\" icon=\"search\"></vs-button>\r\n                                </vs-col>\r\n\r\n                            </vs-row>\r\n                        </template>\r\n                        <template slot=\"thead\">\r\n                            <vs-th sort-key=\"cedula\">Cédula</vs-th>\r\n                            <vs-th sort-key=\"nombres\">Nombre</vs-th>\r\n                            <vs-th sort-key=\"nombres\">Visitas</vs-th>\r\n                            <vs-th sort-key=\"email\">Usuario</vs-th>\r\n                            <vs-th>Acciones</vs-th>\r\n                        </template>\r\n                        <template slot-scope=\"{data}\">\r\n                            <vs-tr :data=\"tr\" :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                                <vs-td :data=\"data[indextr].cedula\">\r\n                                    idusuario: {{ data[indextr].idusuario }}<br />\r\n                                    cedula: {{ data[indextr].cedula }}\r\n                                </vs-td>\r\n                                <vs-td :data=\"data[indextr].nombres\">\r\n                                    {{ data[indextr].nombres }}\r\n                                    {{ data[indextr].apellidos }}\r\n                                </vs-td>\r\n                                <vs-td :data=\"data[indextr].visitas\">\r\n                                    {{ data[indextr].visitas }}\r\n                                </vs-td>\r\n                                <vs-td :data=\"data[indextr].name_usuario\">\r\n                                    <span v-if=\"tipo== 'docente'\"><b><small>usuario:</small></b> {{data[indextr].name_usuario}}<br></span>\r\n                                    <b><small>email: </small></b> {{data[indextr].email}} <br />\r\n                                    <b><small>cargo: </small></b> {{data[indextr].cargo}}<br>\r\n                                    <b><small>Fecha de creacion</small>{{ tr.created_at }}</b>\r\n                                </vs-td>\r\n                                <vs-td>\r\n                                    <vx-tooltip v-if=\"perfil_autorizado == 1 || perfil_autorizado == 11\" style=\"display: inline-block;\" text=\"Asignar libros\" position=\"top\" color=\"success\">\r\n                                        <span v-if=\"tipo== 'docente' \">\r\n                                            <vs-button size=\"small\" icon-pack=\"feather\" icon=\"icon-zap\" class=\"mr-2\" color=\"success\" @click=\"popupDocentes=false;irAsignacion(tr);\"></vs-button>\r\n                                        </span>\r\n                                    </vx-tooltip>\r\n                                    <vx-tooltip style=\"display: inline-block;\" text=\"Visitas del usuario\" position=\"top\" color=\"primary\">\r\n                                        <vs-button size=\"small\" icon-pack=\"feather\" icon=\"icon-globe\" class=\"mr-2\" color=\"primary\" @click=\"popupDocentes=false;verVisitas(tr)\"></vs-button>\r\n                                    </vx-tooltip>\r\n                                </vs-td>\r\n                            </vs-tr>\r\n                        </template>\r\n                    </vs-table>\r\n                </div>\r\n                <div v-else class=\"m-4 p-5\">\r\n                    No hay usuarios registrados en esta institución.\r\n                </div>\r\n\r\n            </vx-card>\r\n        </vs-popup>\r\n        <!-- Modal para Asignacion de libros al docente-->\r\n        <vs-popup title=\"Asignación\" fullscreen :active.sync=\"popupAsignacion\">\r\n            <vx-card>\r\n                <vs-button icon=\"home\" class=\"close btn\" style=\"width:210px;\" @click=\"closeBtn($event)\">Regresar al listado</vs-button>\r\n                <br />\r\n                <div class=\"m-2\">\r\n                    <vs-list>\r\n                        <vs-list-item v-if=\"show_inst== 'si'\" title=\"Institución\" :subtitle=\"user_institucion.nombreInstitucion\"></vs-list-item>\r\n                        <vs-list-item v-if=\"institucionSelected.periodo_id > 0\" title=\"Período\" :subtitle=\"institucionSelected.periodo\">\r\n                          <vs-chip v-if=\"institucionSelected.statusPeriodo == '1'\" color=\"success\">Activo</vs-chip>\r\n                          <vs-chip v-else color=\"danger\">Desactivado</vs-chip>\r\n                       </vs-list-item>\r\n                        <vs-list-item title=\"Nombre\" :subtitle=\"user_nombre\"></vs-list-item>\r\n                        <vs-list-item title=\"Email\" :subtitle=\"user_email\"></vs-list-item>\r\n                    </vs-list>\r\n                    <vs-divider color=\"success\">Areas seleccionadas ( {{seleccionadas.length}} ) </vs-divider>\r\n                    <vs-collapse>\r\n                        <vs-collapse-item icon-pack=\"feather\" icon-arrow=\"icon-arrow-down\">\r\n                            <div slot=\"header\">\r\n                                Ver ( {{seleccionadas.length}} )\r\n                            </div>\r\n                            <div class=\"vx-row\">\r\n                                <div class=\"vx-col sm:w-full text-right\" v-if=\"seleccionadas.length >1\">\r\n                                    <vs-button type=\"border\" color=\"danger\" size=\"small\" @click=\"confirmaQuitar()\">Quitar todas <span class=\"feather icon icon-trash\"></span></vs-button>\r\n                                    <vs-button type=\"filled\" color=\"primary\" size=\"small\" @click=\"moverPeriodoActual()\" class=\"ml-2\">Mover a período actual<span class=\"feather icon icon-check\"></span></vs-button>\r\n                                </div>\r\n                                <div class=\"vx-col sm:w-full mt-2\">\r\n                                  <div v-for=\"(item, index) in seleccionadas\" :key=\"index\" class=\"m-1 p-1 asig-select text-dark\">\r\n                                    {{item.nombreasignatura}} ( {{ item.periodoescolar }} )&nbsp; &nbsp;\r\n                                      <vs-button @click=\"eliminaAsignacion(item)\" style=\"display:inline\" size=\"small\" color=\"danger\" radius type=\"border\" icon-pack=\"feather\" icon=\"icon-trash\"></vs-button>\r\n                                  </div>\r\n                                </div>\r\n                            </div>\r\n                        </vs-collapse-item>\r\n                    </vs-collapse>\r\n                </div>\r\n                <div class=\"m-2\">\r\n                    <vs-divider color=primary> Areas ( {{area.length}} ) </vs-divider>\r\n                    <vs-collapse>\r\n                        <vs-collapse-item icon-pack=\"feather\" icon-arrow=\"icon-arrow-down\" v-for=\"(listItem, index) in area\" :key=\"index\" :title=\"listItem.name\">\r\n                            <div slot=\"header\">\r\n                                {{listItem.name}}\r\n                            </div>\r\n                            <vs-button v-for=\"(listIAsig, indexAsig) in listItem.children\" :key=\"indexAsig\" type=\"border\" color=\"primary\" class=\"p-2 m-1\" @click=\"agregaAsignacion(listIAsig)\">\r\n                                {{listIAsig.name}}\r\n                            </vs-button>\r\n                        </vs-collapse-item>\r\n                    </vs-collapse>\r\n                </div>\r\n            </vx-card>\r\n        </vs-popup>\r\n        <!--Modal para visitas del usuario -->\r\n        <vs-popup title=\"Lista usuarios\" fullscreen :active.sync=\"popupVistasUsuario\">\r\n            <vx-card>\r\n                <vs-button icon=\"home\" class=\"close btn\" @click=\"closeBtn($event)\">Regresar al listado</vs-button>\r\n                <br>\r\n                <p><b>Nombre:</b> {{datoU.nombres}} {{datoU.apellidos}} </p>\r\n                <p><b>Email:</b> {{datoU.email}} </p>\r\n                <p><b>Cédula:</b> {{datoU.cedula}} </p>\r\n                <div v-if=\"listaVisitas.length>0\">\r\n                    <vs-table max-items=\"30\" search pagination :data=\"listaVisitas\">\r\n                        <template slot=\"header\">\r\n                            Ultimas visitas &nbsp; <small> <i>(max. 100): </i></small> &nbsp; {{listaVisitas.length}}\r\n                        </template>\r\n                        <template slot=\"thead\">\r\n                            <vs-th sort-key=\"cedula\">Fecha</vs-th>\r\n                            <vs-th sort-key=\"nombres\">Hora</vs-th>\r\n                        </template>\r\n                        <template slot-scope=\"{data}\">\r\n                            <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                                <vs-td>\r\n                                    {{data[indextr].fecha}}\r\n                                </vs-td>\r\n                                <vs-td>\r\n                                    {{data[indextr].hora}}\r\n                                </vs-td>\r\n                            </vs-tr>\r\n                        </template>\r\n                    </vs-table>\r\n                </div>\r\n                <div v-else>\r\n                    <p class=\"p-5\"> No tenemos registros de este usuario en nuestra base de datos, regrese mas tardecito :) </p>\r\n                </div>\r\n            </vx-card>\r\n\r\n        </vs-popup>\r\n        <!--Modales-->\r\n        <!----modal exportar--------->\r\n        <vs-prompt title=\"Exportar a Excel\" class=\"export-options\" @cancle=\"clearFields\" @accept=\"exportToExcel\" accept-text=\"Exportar\" @close=\"clearFields\" :active.sync=\"activePrompt\">\r\n            <vs-button radius color=\"warning\" @click=\"popupDocentes = true\" type=\"gradient\" icon=\"reply\"></vs-button>\r\n            <vs-alert class=\"mb-3\" color=\"danger\" icon-pack=\"feather\" icon=\"icon-info\">\r\n                <span>Recuerde <b>seleccionar</b> los códigos que desea exportar.</span>\r\n            </vs-alert>\r\n            <vs-input v-model=\"fileName\" placeholder=\"Ingrese el nombre del archivo\" class=\"w-full\" />\r\n            <v-select v-model=\"selectedFormat\" :options=\"formats\" class=\"my-4\" />\r\n            <div class=\"flex\">\r\n                <!--<span class=\"mr-4\">Cell Auto Width:</span>\r\n                <vs-switch v-model=\"cellAutoWidth\">Cell Auto Width</vs-switch>-->\r\n            </div>\r\n        </vs-prompt>\r\n        <!--MODAL PARA REGISTRO DE DOCENTE LIBROS-->\r\n        <vs-popup title=\"Asignacion\" fullscreen :active.sync=\"popupAsignacionDocentes\">\r\n            <RegistroDocentesVue :sendInstitucion=\"sendInstitucion\" v-if=\"popupAsignacionDocentes\"/>\r\n        </vs-popup>\r\n        <!--MODAL DETALLE DE VENTA-->\r\n        <vs-popup :title=\"tituloDetalleVenta\" fullscreen :active.sync=\"popupTipoVenta\">\r\n            <RegistroVentaVue :pedido=\"pedido\" v-if=\"popupTipoVenta\" showAgrupado=\"1\"/>\r\n        </vs-popup>\r\n        <!----fin modal exportar--------->\r\n        <!----modal mostrar coincidencias--------->\r\n        <!-- <vs-popup classContent=\"popup-example\" fullscreen :title=\"'Asignar codigo de institucion milton '+institucionNombreEnviar + ' - ' +institucionCiudad \" :active.sync=\"popupCoincidencia\">\r\n            <vx-input-group class=\"mb-base\">\r\n                <template slot=\"prepend\">\r\n                    <div class=\"prepend-text bg-primary\">\r\n                        <span>Busqueda manual</span>\r\n                    </div>\r\n                </template>\r\n                <vs-input v-model=\"busquedaMilton\" @keyup.enter=\"buscarCoincidencias(busquedaMilton)\" placeholder=\"Escriba si no encontro la institucion\" />\r\n            </vx-input-group>\r\n            <p>>>El primer codigo es el principal que se va a ir a la bd de milton</p>\r\n            <vs-divider>Codigo de instituciones de milton</vs-divider>\r\n            <div class=\"vx-col sm:w-full mt-2\">\r\n                <div v-for=\"(item, index) in arregloIdsCoincidencias\" :key=\"index\" class=\"m-1 p-1 asig-select text-dark\">\r\n                    {{item}} &nbsp; &nbsp;\r\n                    <vs-button @click=\"eliminaAsignacionIdMilton(index)\" style=\"display:inline\" size=\"small\" color=\"danger\" radius type=\"border\" icon-pack=\"feather\" icon=\"icon-trash\"></vs-button>\r\n                </div>\r\n            </div>\r\n            <div class=\"flex\" style=\"justify-content: center;\">\r\n                <vs-button color=\"success\" icon=\"save\" @click=\"guadarIdsMilton()\" type=\"filled\" class=\"mt-2\">Guardar</vs-button>\r\n            </div>\r\n            <vs-table max-items=\"10\" search pagination :data=\"arregloCoincidencias\">\r\n                <template slot=\"header\">\r\n                    <vs-chip color=\"primary\">Cantidad: {{ arregloCoincidencias.length }}</vs-chip>\r\n                </template>\r\n                <template slot=\"thead\">\r\n                    <vs-th>Nombre institucion</vs-th>\r\n                    <vs-th>Codigo institucion de milton</vs-th>\r\n                    <vs-th>Codigo CLI_INS_CODIGO</vs-th>\r\n                    <vs-th style=\"width:100px;\">Acciones</vs-th>\r\n                </template>\r\n                <template slot-scope=\"{data}\">\r\n                    <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                        <vs-td>\r\n                            INSTITUCION:\r\n                            <b>{{data[indextr].INSTITUCION}}</b><br>\r\n                            Periodo:\r\n                            <b>{{ tr.PERIODO }}</b><br>\r\n                            Ciudad:\r\n                            <b>{{ tr.INS_CIUDAD }}</b><br>\r\n                            Direccion:\r\n                            <b>{{ tr.INS_DIRECCION }}</b><br>\r\n                            Vendedor:\r\n                            <b>{{ tr.VENDEDOR }}</b>\r\n                        </vs-td>\r\n                        <vs-td>\r\n                            {{data[indextr].ID_INSTITUCION}}<br>\r\n                        </vs-td>\r\n                        <vs-td>{{ tr.CLI_INS_CODIGO }}</vs-td>\r\n                        <vs-td>\r\n                            <div style=\"display: flex;\">\r\n                                <div>\r\n                                    <vx-tooltip style=\"display: inline-block;\" text=\"Editar area\" position=\"top\" color=\"primary\">\r\n                                        <vs-button class=\"modal-default-button\" size=\"small\" color=\"success\" @click=\"AsignarCodigoMilton(tr)\" type=\"filled\" icon-pack=\"feather\" icon=\"icon-edit\"> Asignar codigo</vs-button>\r\n                                    </vx-tooltip> &nbsp;\r\n                                </div>\r\n                            </div>\r\n                        </vs-td>\r\n                    </vs-tr>\r\n                </template>\r\n            </vs-table>\r\n        </vs-popup> -->\r\n        <!----Fin modal mostrar coincidencias--------->\r\n        <!--MODAL PARA CAMBIAR DE PERIODO-->\r\n        <vs-popup classContent=\"popup-example\" title=\"Actualizar a periodo actual\" :active.sync=\"popupActualizarPeriodo\">\r\n          <vx-card v-if=\"popupActualizarPeriodo\">\r\n            <p><b>Insitución:</b>       {{ sendInstitucion.nombreInstitucion }}  </p>\r\n            <p class=\"font-bold text-2xl text-warning mt-2\">Estas seguro de cambiar al periodo {{ periodoSelect[0].periodoescolar }}?</p>\r\n            <div class=\"flex justify-center mt-2\">\r\n              <vs-button class=\"mr-3 mb-2\" @click=\"changePeriodo()\">Si, deseo cambiar</vs-button>\r\n              <vs-button color=\"warning\" type=\"border\" class=\"mb-2\" @click=\"popupActualizarPeriodo = false;\">Cancelar</vs-button>\r\n            </div>\r\n          </vx-card>\r\n        </vs-popup>\r\n        <!--modal de evaluaciones institucion resetar-->\r\n        <vs-popup classContent=\"popup-example\" title=\"Resetar Evaluaciones Instituciones\" :active.sync=\"popupEvaluaciones\">\r\n            <ResetearEvaluacionesVue v-if=\"popupEvaluaciones\" @changeEvaluacion=\"changeEvaluacion\" :institucionSelected=\"institucionSelected\" :arrayEvaluacionesInstitucion=\"arrayEvaluacionesInstitucion\"/>\r\n        </vs-popup>\r\n\r\n    </div>\r\n    </template>\r\n\r\n    <script>\r\n    import Vue from 'vue'\r\n    import axios from 'axios'\r\n    import DataViewSidebar from './nuevo'\r\n    import Periodos from '../periodos/periodos.vue'\r\n    import vSelect from 'vue-select'\r\n    import escuelasAsesorVue from '../home/components/asesor/escuelasAsesor.vue'\r\n    import listadoContratoMiltonVue from './components/listadoContratoMilton.vue'\r\n    import asignarLibrosVue from './components/asignarLibros.vue'\r\n    import moment from 'moment'\r\n    import flatPickr from 'vue-flatpickr-component'\r\n    import asignarRecursosExternosVue from './components/asignarRecursosExternos.vue'\r\n    import GenerarFormulario from '../home/docentes/formulario/listadoSolicitudes.vue'\r\n    import MenuEncuesta from '../home/padres/encuesta/MenuEncuesta.vue'\r\n    import 'flatpickr/dist/flatpickr.css'\r\n    import InstitucionesXCiudad from './institucionesXCiudad.vue'\r\n    import Ciudades_vue from '../ciudades/listaCiudad.vue'\r\n    import Zonas_vue from '../zonas/listaZona.vue'\r\n    import Periodo_config_institucion from '../periodos/periodo_config_institucion.vue'\r\n    import RegistroDocentesVue from './components/RegistroDocentes.vue'\r\n    import institucionfacturacion from '../pedidos/facturacion_api/institucion.vue';\r\n    import addInstitucionVue from './addInstitucion.vue'\r\n    import RegistroVentaVue from '../codigos/components/utils/RevisionVenta.vue'\r\n    const ResetearEvaluacionesVue = () => import('./components/EvaluacionesInstituciones/ResetearEvaluaciones.vue')\r\n    export default {\r\n        components: {\r\n        DataViewSidebar,\r\n        Periodos,\r\n        \"v-select\": vSelect,\r\n        escuelasAsesorVue,\r\n        asignarLibrosVue,\r\n        flatPickr,\r\n        asignarRecursosExternosVue,\r\n        GenerarFormulario,\r\n        MenuEncuesta,\r\n        listadoContratoMiltonVue,\r\n        InstitucionesXCiudad,\r\n        Ciudades_vue,\r\n        Zonas_vue,\r\n        Periodo_config_institucion,\r\n        RegistroDocentesVue,\r\n        institucionfacturacion,\r\n        addInstitucionVue,\r\n        RegistroVentaVue,\r\n        ResetearEvaluacionesVue,\r\n    },\r\n        data() {\r\n            return {\r\n              institucion_id:0,\r\n              configdateTimePicker: {\r\n                  enableTime: true,\r\n                  dateFormat: 'Y-m-d'\r\n              },\r\n              user_institucion_send: '',\r\n              //variables para exportar a excel\r\n              activePrompt: false,\r\n              reportesActivo: 0,\r\n              fileName: null,\r\n              formats: ['xls', 'xlsx', 'csv', 'txt'],\r\n              cellAutoWidth: true,\r\n              selectedFormat: 'xls',\r\n              reporteAsesorActivo: false,\r\n              guardarActivo: '',\r\n              generarActivo: '',\r\n              textAlertCant: '',\r\n              cantidad: '',\r\n              codigoSelected: [],\r\n              codigoTipo: '0',\r\n              //FIN DE VARIABLES PARA EXPORTAR A EXCEL\r\n              escuelas: [],\r\n              popupVistasUsuario: false,\r\n              popupAsignacion: false,\r\n              popupDocentes: false,\r\n              popupAddInstitucion: false,\r\n              popupPeriodos: false,\r\n              busquedaInstitucion: \"\",\r\n              instituciones: [],\r\n              tmpInstituciones: [],\r\n              sidebarData: {},\r\n              addNewDataSidebar: false,\r\n              usuario: [],\r\n              grupo_usuario: '',\r\n              //para el total visitas de institucion\r\n              visitasginstitucion: '',\r\n              //para el total visitas de docentes\r\n              visitasgdocente: '',\r\n              //para el total visitas de estudiantes\r\n              visitasgestudiantes: '',\r\n              //para  llenar el historico por institucion\r\n              historicoinstitucionArreglo: [],\r\n              //para  llenar el historico para docentes\r\n              historicoDocenteArreglo: [],\r\n              //para llenar el historico de para estudiantes\r\n              historicoEstudianteArreglo: [],\r\n              //para guardar el nombre de la institucion en el localstorage\r\n              visitasnombreinstitucion: '',\r\n              user_autorizado: '',\r\n              c_region: 'SIERRA',\r\n              //=========VARIABLES PARA PERIODOS==============\r\n              nombreInstitucion: '',\r\n              idInstitucion: '',\r\n              listaPeriodos: '',\r\n              tmplistaPeriodos: '',\r\n              listaPeriodosInstitucion: '',\r\n              tmp: '',\r\n              f_periodos: 1,\r\n              modalPeriodos: false,\r\n              id_eliminar: '',\r\n              region: [],\r\n              usuario: [],\r\n              estadoLimiteAcceso: \"0\",\r\n              fecha: null,\r\n              //=========VARIABLES PARA EDITAR INSTITUCION=======\r\n              institucion: {\r\n                  'idInstitucion': '',\r\n                  'nombreInstitucion': '',\r\n                  'telefonoInstitucion': '',\r\n                  'direccionInstitucion': '',\r\n                  'solicitudInstitucion': '',\r\n                  'vendedorInstitucion': '',\r\n                  'periodoescolar': '',\r\n                  'tipo_institucion': '',\r\n                  'ciudad_id': '',\r\n                  'region_idregion': '',\r\n                  'estado': '1',\r\n                  'matricula': '1',\r\n                  'punto_venta': 0,\r\n              },\r\n              errors: {\r\n                  'nombreInstitucion': '',\r\n                  'telefonoInstitucion': '',\r\n                  'direccionInstitucion': '',\r\n                  'solicitudInstitucion': '',\r\n                  'vendedorInstitucion': '',\r\n                  'periodoescolar': '',\r\n                  'tipo_institucion': '',\r\n                  'ciudad_id': '',\r\n                  'region_idregion': '',\r\n              },\r\n              titulo: '',\r\n              ciudad: [],\r\n              region: [],\r\n              periodo: [],\r\n              vendedor: [],\r\n              usuario: '',\r\n              limiteMegas: 1,\r\n              porcentaje: '',\r\n              pesoArchivo: '',\r\n              muyPesado: '',\r\n              msj: '',\r\n              //===========VARIABLE PARA MODAL DE LISTA DE DOCENTES=========\r\n              usuarios: [],\r\n              accesosDocentes: [],\r\n              conteoDocentes: [{\r\n                  'idusuario': '',\r\n                  'cantidad': 0\r\n              }],\r\n              accesosEstudiantes: [],\r\n              institucionDocente: '',\r\n              tipo: '',\r\n              conteo: 0,\r\n              usuario: '',\r\n              perfil_autorizado: '',\r\n              //===========VARIABLES PARA MODAL DE ASIGNACION DE LIBROS========\r\n              area: [],\r\n              asignaturadocenteselect: [],\r\n              seleccionadas: '',\r\n              usuarioAsignacion: '',\r\n              user_seleccionado: '',\r\n              user_nombre: '',\r\n              user_email: '',\r\n              user_institucion: '',\r\n              show_inst: '',\r\n              //===========VARIABLES PARA EL MODAL DE VISTAS DE USUARIO=========\r\n              docente: '',\r\n              listaVisitas: [],\r\n              datoU: '',\r\n              //para el modal para agregar permisos\r\n              update: false,\r\n              asignatura_id: 0,\r\n              colegio_asignatura_id: 0,\r\n              permisoRoot: false,\r\n              attachments: [],\r\n              form: new FormData,\r\n              numeroIteM: '0',\r\n              instituciones: [],\r\n              errorImage: '',\r\n              tamanioError: '',\r\n              archivoName: '',\r\n              file: '',\r\n              id: 0,\r\n              fromDate: null,\r\n              toDate: null,\r\n              visitasD: false,\r\n              //variables permisos externos\r\n              verPermisosExternos: 0,\r\n              permisosInstitucion: '',\r\n              permisosNombreInstitucion: '',\r\n              //fin variables permisos externos\r\n              value1: '',\r\n              value2: '',\r\n              valid: {\r\n                  email: false,\r\n                  password: false,\r\n              },\r\n              //formulario docente\r\n              formulario: {\r\n                  institucion: '0',\r\n                  periodo_id: 0,\r\n                  periodoDescripcion: '',\r\n                  nombreInstitucion: '',\r\n              },\r\n              //COINCIDENCIAS\r\n              arregloCoincidencias: [],\r\n              arregloIdsCoincidencias: [],\r\n              popupCoincidencia: false,\r\n              institucionEnviar: 0,\r\n              institucionEnviarCedula: 0,\r\n              institucionEnviarAIniciales: '',\r\n              institucionNombreEnviar: '',\r\n              institucionCiudad: '',\r\n              busquedaMilton: '',\r\n              //FIN COINCIDENCIAS\r\n              //variables registro de docentes\r\n              sendInstitucion:{},\r\n              popupAsignacionDocentes:false,\r\n              //fin variables registro de docentes\r\n              arregloCodigosEstudiantes:[],\r\n              //Variables detalle de venta\r\n              popupTipoVenta:false,\r\n              pedido:{},\r\n              tituloDetalleVenta:'',\r\n              //Fin Variables detalle de venta\r\n              //variables para asignar el periodo actual\r\n              popupActualizarPeriodo:false,\r\n              periodoSelect:[],\r\n              //fin variables para asignar el periodo actual,\r\n              institucionSelected:0,\r\n              //variables para evaluaciones institucion\r\n              arrayEvaluacionesInstitucion:[],\r\n               popupEvaluaciones:false,\r\n              //fin variables para evaluaciones institucion\r\n            }\r\n        },\r\n        mounted() {\r\n            let me = this;\r\n            localStorage.removeItem('institucion')\r\n            localStorage.removeItem('tipoUser')\r\n            me.usuario = JSON.parse(localStorage.getItem('usuario'))\r\n            me.user_autorizado = me.usuario.id_group;\r\n            me.getUserRoot();\r\n            const date = new Date()\r\n            const primerDia = new Date(date.getFullYear(), date.getMonth(), 1)\r\n            const ultimoDia = new Date(date.getFullYear(), date.getMonth() + 1, 0)\r\n            me.fromDate = primerDia\r\n            me.toDate = ultimoDia\r\n        },\r\n        methods: {\r\n            //para ir al formulario docente\r\n            irFormularioDocente(tr) {\r\n                let me = this;\r\n                localStorage.setItem('formulario', 'institucion')\r\n                me.formulario.institucion = tr.idInstitucion;\r\n                me.formulario.nombreInstitucion = tr.nombreInstitucion\r\n                me.formulario.periodoDescripcion = tr.periodo\r\n                me.formulario.periodo_id = tr.periodo_id\r\n                me.verPermisosExternos = 2;\r\n            },\r\n            irGestionEncuestas(tr) {\r\n                let me = this;\r\n                localStorage.setItem('formulario', 'institucion')\r\n                me.formulario.institucion = tr.idInstitucion;\r\n                me.formulario.nombreInstitucion = tr.nombreInstitucion\r\n                me.formulario.periodoDescripcion = tr.periodo\r\n                me.formulario.periodo_id = tr.periodo_id\r\n                me.verPermisosExternos = 3;\r\n            },\r\n            fieldChange(e) {\r\n                let me = this;\r\n                me.errorImage = 'no'\r\n                me.tamanioError = \"no\"\r\n                this.attachments = [];\r\n                let selectedFiles = e.target.files;\r\n                let validar = e.target.files[0].type;\r\n                let tamanio = e.target.files[0].size;\r\n                if (tamanio > 1000000) {\r\n                    me.tamanioError = \"yes\"\r\n                    me.$vs.notify({\r\n                        text: 'El tamaño de la imagen excede 1MB',\r\n                        color: 'warning',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check'\r\n                    })\r\n                    return false;\r\n                }\r\n                if (validar == 'image/png' || validar == 'image/jpg' || validar == 'image/jpeg') {\r\n                    me.file = e.target.files[0]\r\n                    for (let i = 0; i < selectedFiles.length; i++) {\r\n                        this.attachments.push(selectedFiles[i]);\r\n                        localStorage.setItem('nameArchivo', this.attachments[0].name)\r\n                        me.archivoName = localStorage.getItem(\"nameArchivo\")\r\n                    }\r\n                    me.errorImage = 'no'\r\n                } else {\r\n                    me.errorImage = 'yes'\r\n                    me.$vs.notify({\r\n                        text: 'Formato de imagen no aceptada solo se acepta png/jpg/jpeg',\r\n                        color: 'success',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check'\r\n                    })\r\n                    return false;\r\n                }\r\n            },\r\n            //para obtener el listado de los usuarios root\r\n            getUserRoot() {\r\n                let me = this;\r\n                this.$http.get(this.$server_url + 'permisos?permiso=yes&usuario_id=' + me.usuario.idusuario)\r\n                    .then(function (res) {\r\n                        if (res.data.status == '1') {\r\n                            me.permisoRoot = true\r\n                        } else {\r\n                            me.permisoRoot = false\r\n                        }\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(error + ' error');\r\n                    })\r\n            },\r\n            //PERMISOS EXTERNOS\r\n            agregarPermisosExternos(data) {\r\n                let me = this;\r\n                me.verPermisosExternos = 1\r\n                me.permisosInstitucion = data.idInstitucion\r\n                me.permisosNombreInstitucion = data.nombreInstitucion\r\n                return false\r\n            },\r\n            //FIN PERMISOS EXTERNOS\r\n            closeBtn(event) {\r\n                this.popupAsignacion = false;\r\n                this.popupDocentes = true;\r\n            },\r\n\r\n            //para ir asignar recursos externos a prolipa\r\n            irAddRecursosExternos(data = {}) {\r\n                let me = this;\r\n                localStorage.setItem('institucionExterna', data.idInstitucion)\r\n                localStorage.setItem('ciudadExterna', data.ciudad)\r\n                me.$router.push('/recursos/asignaturas');\r\n            },\r\n            addNewData() {\r\n                this.sidebarData = {}\r\n                this.toggleDataSidebar(true)\r\n            },\r\n            toggleDataSidebar(val = false) {\r\n                this.addNewDataSidebar = val\r\n            },\r\n            getInstitucion() {\r\n                let me = this;\r\n                me.instituciones = [];\r\n                if (me.busquedaInstitucion.length < 5) {\r\n                    me.$vs.notify({\r\n                        text: 'Minimo 5 caracteres de busqueda',\r\n                        color: 'warning',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check'\r\n                    })\r\n                    return false;\r\n                }\r\n                me.$vs.loading()\r\n                this.$http.get(this.$server_url + 'listaInsitucion?busqueda=' + me.busquedaInstitucion)\r\n                    .then(function (res) {\r\n                        // me.tmpInstituciones = res.data;\r\n                        me.instituciones = res.data;\r\n                        // me.filtroRegion();\r\n                        me.$vs.loading.close()\r\n                        if (res.data.message) {\r\n                            me.$vs.notify({\r\n                                text: res.data.message,\r\n                                color: 'success',\r\n                                iconPack: 'feather',\r\n                                icon: 'icon-user'\r\n                            })\r\n                        }\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(error + ' error');\r\n                        me.$vs.loading.close()\r\n                    })\r\n            },\r\n            getPeriodoInstitucion(id) {\r\n                let me = this;\r\n                this.$http.get(this.$server_url + 'institucionTraerPeriodo?institucion_id=' + id)\r\n                    .then(function (res) {\r\n\r\n                        localStorage.setItem('free_periodo_id', res.data[0].periodo)\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(error + ' error');\r\n                    })\r\n            },\r\n            agregarLibro(id) {\r\n                localStorage.idinstitucion = id;\r\n                this.getPeriodoInstitucion(id)\r\n                this.$router.push('/institucion/addlibro');\r\n            },\r\n\r\n            agregarLibrerias(id) {\r\n                localStorage.idinstitucion = id;\r\n                this.$router.push('/institucion/librerias');\r\n            },\r\n            verDocentes(item) {\r\n                let me = this;\r\n                me.usuarios = []\r\n                me.popupDocentes = true;\r\n                me.visitasD = false\r\n                // console.log( item.idInstitucion )\r\n                localStorage.institucion = JSON.stringify(item);\r\n                localStorage.tipoUser = \"docente\";\r\n                // me.$router.push('/institucion/docentes');\r\n\r\n                localStorage.removeItem('datoUser')\r\n                localStorage.removeItem('user_select')\r\n                localStorage.removeItem('show_inst')\r\n                me.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n                me.institucionDocente = JSON.parse(localStorage.getItem('institucion'))\r\n                me.tipo = localStorage.getItem('tipoUser');\r\n                me.perfil_autorizado = me.usuario.id_group;\r\n\r\n                me.getUsuariosTipo();\r\n            },\r\n            verDocentesVisitas(item) {\r\n                let me = this;\r\n                me.usuarios = []\r\n                me.visitasD = true\r\n                me.popupDocentes = true;\r\n                // console.log( item.idInstitucion )\r\n                localStorage.institucion = JSON.stringify(item);\r\n                localStorage.tipoUser = \"docente\";\r\n                // me.$router.push('/institucion/docentes');\r\n\r\n                localStorage.removeItem('datoUser')\r\n                localStorage.removeItem('user_select')\r\n                localStorage.removeItem('show_inst')\r\n                me.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n                me.institucionDocente = JSON.parse(localStorage.getItem('institucion'))\r\n                me.tipo = localStorage.getItem('tipoUser');\r\n                me.perfil_autorizado = me.usuario.id_group;\r\n\r\n                me.getUsuariosTipoVisitas();\r\n            },\r\n            confirmEliminarInstitucion(tr) {\r\n                let me = this;\r\n                me.id = tr.idInstitucion\r\n                this.$vs.dialog({\r\n                    type: 'confirm',\r\n                    color: 'danger',\r\n                    title: `Confirmar`,\r\n                    text: 'Estas seguro de eliminar la institución',\r\n                    accept: this.eliminarInstitucion\r\n                })\r\n            },\r\n            eliminarInstitucion() {\r\n                let me = this;\r\n                let formData = new FormData();\r\n                formData.append('id', me.id)\r\n                me.$vs.loading()\r\n                this.$http.post(this.$server_url + 'institucionEliminar', formData)\r\n                    .then(res => {\r\n                        me.$vs.loading.close()\r\n                        me.getInstitucion();\r\n                        me.$vs.notify({\r\n                            text: 'Institución eliminada con exito',\r\n                            color: 'success',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-check'\r\n                        })\r\n                    })\r\n                    .catch(function (e) {\r\n                        me.$vs.loading.close()\r\n                        me.$vs.notify({\r\n                            text: 'No se pudo eliminar la institucion',\r\n                            color: 'warning',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-check'\r\n                        })\r\n                    });\r\n            },\r\n            verEstudiantes(item) {\r\n                let me = this;\r\n                me.popupDocentes = true;\r\n                // console.log( item.idInstitucion )\r\n                localStorage.tipoUser = \"estudiante\";\r\n                localStorage.institucion = JSON.stringify(item);\r\n                // me.$router.push('/institucion/estudiantes');\r\n                localStorage.removeItem('datoUser')\r\n                localStorage.removeItem('user_select')\r\n                localStorage.removeItem('show_inst')\r\n                me.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n                me.institucionDocente = JSON.parse(localStorage.getItem('institucion'))\r\n                me.tipo = localStorage.getItem('tipoUser');\r\n                me.perfil_autorizado = me.usuario.id_group;\r\n\r\n                me.getUsuariosTipo();\r\n            },\r\n            getVisitas(item, nombreInstitucion) {\r\n\r\n                let me = this;\r\n                axios.get('https://foro.prolipadigital.com.ec/historico-recursos?idinstitucion=' + item + '&_limit=-1')\r\n                    .then(res => {\r\n                        // console.log(res.data.length)\r\n                        // me.visitas = res.data.length;\r\n                        //para guardar las intitucion en el localstorage\r\n                        this.historicoinstitucionArreglo = res.data;\r\n                        localStorage.setItem(\"historicoinstitucionArreglo\", JSON.stringify(this.historicoinstitucionArreglo));\r\n\r\n                        //para guardar el nombre de la institucion en localstorage\r\n\r\n                        this.visitasnombreinstitucion = nombreInstitucion\r\n                        localStorage.setItem(\"visitasnombreinstitucion\", JSON.stringify(this.visitasnombreinstitucion));\r\n                        //para enviar el id de la institucion\r\n                        localStorage.setItem(\"visitasid\", JSON.stringify(item));\r\n\r\n                        //para guardar las visitas generales de la institucion\r\n                        this.visitasginstitucion = res.data.length;\r\n                        localStorage.setItem(\"visitasginstitucion\", JSON.stringify(this.visitasginstitucion));\r\n\r\n                        //     //para guardar en localstorage el historico de docentes\r\n                        me.historicoDocenteArreglo = this.historicoinstitucionArreglo.filter(p => p.idgrupo == \"6\");\r\n                        //    localStorage.setItem(\"historicoDocenteArreglo\", JSON.stringify(this.historicoDocenteArreglo));\r\n\r\n                        //para guardar las visitas generales de los docentes\r\n                        this.visitasgdocente = me.historicoDocenteArreglo.length;\r\n                        localStorage.setItem(\"visitasgdocente\", JSON.stringify(this.visitasgdocente));\r\n\r\n                        //     //para guardar en localstorage el historico de estudiantes\r\n                        me.historicoEstudianteArreglo = this.historicoinstitucionArreglo.filter(p => p.idgrupo == \"4\");\r\n                        //    localStorage.setItem(\"historicoEstudianteArreglo\", JSON.stringify(this.historicoEstudianteArreglo));\r\n\r\n                        //para guardar las visitas generales de los estudiantes\r\n                        this.visitasgestudiantes = me.historicoEstudianteArreglo.length;\r\n                        localStorage.setItem(\"visitasgestudiantes\", JSON.stringify(this.visitasgestudiantes));\r\n\r\n                        me.$router.push('/reporte/institucion/');\r\n\r\n                    })\r\n                    .catch(err => {\r\n                        console.log(err)\r\n                    })\r\n            },\r\n\r\n            verMatricula(tr) {\r\n                let me = this;\r\n                localStorage.setItem('matricula_institucion', tr.idInstitucion)\r\n                localStorage.setItem('matricula_admin', \"yes\")\r\n                me.$router.push('/matricula/listado_matriculas')\r\n            },\r\n            periodos(item) {\r\n                // localStorage.institucion = JSON.stringify(item);\r\n                let me = this;\r\n                me.popupPeriodos = true;\r\n                let institucion = item;\r\n                me.tmp = institucion;\r\n                me.nombreInstitucion = me.tmp.nombreInstitucion;\r\n                me.idInstitucion = me.tmp.idInstitucion;\r\n                me.region = me.tmp.nombreregion;\r\n                me.getPeriodosInstitucion();\r\n                me.usuario = JSON.parse(localStorage.getItem('usuario'))\r\n\r\n                me.getPeriodos();\r\n                // this.$router.push('/institucion/periodosInstitucion');\r\n            },\r\n\r\n            async getSeguimiento(tr) {\r\n                let me = this;\r\n                this.$http.get(this.$server_url + 'escuelasAsesor?asesor_id=' + tr.asesor_id + '&desdeAdmin=yes' + '&institucion_id=' + tr.idInstitucion)\r\n                    .then(function (response) {\r\n                        let periodo_id = response.data[0].periodo\r\n                        let periodo_nombre = response.data[0].descripcion\r\n                        me.$router.push('/administrador/seguimiento/institucion')\r\n                        localStorage.setItem('institucion_seguimiento_asesor_id', tr.asesor_id)\r\n                        localStorage.setItem('institucion_seguimiento_id', tr.idInstitucion)\r\n                        localStorage.setItem('institucion_seguimiento_nombre', tr.nombreInstitucion)\r\n                        localStorage.setItem('institucion_seguimiento_periodo_id', periodo_id)\r\n                        localStorage.setItem('institucion_seguimiento_periodo', periodo_nombre)\r\n                        localStorage.setItem('adminSeguimiento', \"yes\")\r\n                    })\r\n                    .catch(function (error) {})\r\n            },\r\n\r\n            //===========METODOS DE PERIODO===========================\r\n\r\n            getPeriodosInstitucion() {\r\n                let me = this;\r\n                me.$vs.loading();\r\n                this.$http.get(this.$server_url + 'periodosXInstitucion/' + me.idInstitucion)\r\n                    .then(res => {\r\n                        me.listaPeriodosInstitucion = res.data;\r\n                        // console.log(res.data);\r\n                        me.$vs.loading.close();\r\n                    })\r\n                    .catch(err => {\r\n                        console.log(err);\r\n                        me.$vs.loading.close();\r\n                    })\r\n            },\r\n            getPeriodos() {\r\n                let me = this;\r\n                this.$http.get(this.$server_url + 'periodoRegion?region=' + me.region)\r\n                    .then(res => {\r\n                        me.tmplistaPeriodos = res.data;\r\n                        //capturo el periodo activo para limitar el acceso a agregar periodo\r\n                        let filtrarPeriodoAcceso = me.tmplistaPeriodos.filter(p => p.estado == '1')\r\n                        //capturo la fecha actual\r\n                        var fecha = moment().add(-1, 'days').format('YYYY/MM/DD');\r\n\r\n                        // filtro la fecha limite del periodo\r\n                        let fechafinal = filtrarPeriodoAcceso.map(p => p.fhasta_limite)\r\n                        //comparo si la fecha final ya se paso a la actual\r\n                        if (Date.parse(fechafinal) < Date.parse(fecha)) {\r\n\r\n                            me.estadoLimiteAcceso = \"0\";\r\n\r\n                        } else {\r\n                            me.estadoLimiteAcceso = \"1\";\r\n                        }\r\n\r\n                        me.filtroPeriodos();\r\n                    })\r\n                    .catch(err => {\r\n                        console.log(err);\r\n                    })\r\n            },\r\n\r\n            abrirModal() {\r\n                let me = this;\r\n                me.popupPeriodos = false;\r\n                me.modalPeriodos = true;\r\n            },\r\n            filtroPeriodos() {\r\n                let me = this;\r\n                // console.log(me.tmplistaPeriodos)\r\n                me.listaPeriodos = [];\r\n                for (let index = 0; index < me.tmplistaPeriodos.length; index++) {\r\n                    if (me.tmplistaPeriodos[index].estado == me.f_periodos) {\r\n                        me.listaPeriodos.push(me.tmplistaPeriodos[index]);\r\n                    }\r\n                }\r\n            },\r\n            verificarPeriodo(item) {\r\n                let me = this;\r\n                // console.log(item.idperiodoescolar, me.idInstitucion)\r\n                me.$vs.loading();\r\n                let data = new FormData();\r\n                data.append('idperiodoescolar', item.idperiodoescolar);\r\n                data.append('idinstitucion', me.idInstitucion)\r\n                this.$http.post(this.$server_url + 'verifica_periodo', data)\r\n                    .then(res => {\r\n                        // console.log(res.data)\r\n                        if (res.data == 1) {\r\n                            me.$vs.notify({\r\n                                time: 8000,\r\n                                text: 'Este periodo ya se encuentra asignado a la institucion ' + me.nombreInstitucion,\r\n                                color: 'danger',\r\n                                iconPack: 'feather',\r\n                                icon: 'icon-alert-triangle'\r\n                            })\r\n                        } else {\r\n                            me.$vs.notify({\r\n                                text: 'Periodo agregado correctamente a la institucion ' + me.nombreInstitucion,\r\n                                color: 'success',\r\n                                iconPack: 'feather',\r\n                                icon: 'icon-check'\r\n                            })\r\n                            me.modalPeriodos = false;\r\n                            me.getPeriodosInstitucion();\r\n                        }\r\n                        me.$vs.loading.close();\r\n                    })\r\n                    .catch(err => {\r\n                        console.log(err);\r\n                        me.$vs.loading.close();\r\n                    })\r\n            },\r\n            confirmaEliminar(item) {\r\n                let me = this;\r\n                me.id_eliminar = item.id;\r\n                // console.log(me.id_eliminar)\r\n                // return\r\n                me.popupPeriodos = false;\r\n                me.$vs.dialog({\r\n                    type: 'confirm',\r\n                    color: 'danger',\r\n                    title: 'Confirmar',\r\n                    text: 'Seguro desea eliminar este item?',\r\n                    acceptText: 'Aceptar',\r\n                    cancelText: 'Cancelar',\r\n                    accept: me.eliminarItem,\r\n                    cancel: me.close\r\n                })\r\n            },\r\n            close() {\r\n                let me = this;\r\n                me.popupPeriodos = true;\r\n                this.$vs.notify({\r\n                    color: 'danger',\r\n                    title: 'Cerrado',\r\n                    text: 'Has cerrado!'\r\n                })\r\n            },\r\n            eliminarItem() {\r\n                let me = this;\r\n                this.$http.get(this.$server_url + 'eliminarPeriodosInstitucion/' + me.id_eliminar)\r\n                    .then(res => {\r\n                        me.$vs.notify({\r\n                            text: 'Periodo de esta institución eliminado correctamente',\r\n                            color: 'success',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-check'\r\n                        })\r\n                        me.getPeriodosInstitucion();\r\n                    })\r\n                    .catch(err => {\r\n                        console.log(err);\r\n                    })\r\n            },\r\n\r\n            //===========FIN DE METODOS DE PERIODOS======================\r\n\r\n            //===========METODOS PARA EDITAR INSTITUCION ===============\r\n\r\n            async getCiudadSelect() {\r\n                let me = this;\r\n                this.$http.get(this.$server_url + \"ciudad\").then(function (response) {\r\n                    me.ciudad = response.data;\r\n                    // console.log(me.ciudad);\r\n                });\r\n            },\r\n            async getRegionSelect() {\r\n                let me = this;\r\n                this.$http.get(this.$server_url + \"region\").then(function (response) {\r\n                    me.region = response.data;\r\n                });\r\n            },\r\n            async getPeriodoSelect() {\r\n                let me = this;\r\n                this.$http.get(this.$server_url + \"periodo\").then(function (response) {\r\n                    me.periodo = response.data;\r\n                });\r\n            },\r\n            async getInstitucionEditar(idinstitucion) {\r\n                let me = this;\r\n                me.$vs.loading();\r\n                this.$http.get(this.$server_url + \"institucion/\" + idinstitucion)\r\n                    .then(function (response) {\r\n                        me.institucion = response.data;\r\n                        if (me.institucion.tipo_institucion == 1) {\r\n                            me.institucion.tipo_institucion = 'no'\r\n                        } else {\r\n                            me.institucion.tipo_institucion = 'si'\r\n                        }\r\n                        //llenar el radio matricula\r\n                        if (me.institucion.aplica_matricula == 1) {\r\n                            me.institucion.matricula = '1'\r\n                        } else {\r\n                            me.institucion.matricula = '0'\r\n                        }\r\n                        me.institucion.estado = response.data.estado_idEstado\r\n                        console.log(me.institucion)\r\n                        me.$vs.loading.close();\r\n                    })\r\n                    .catch(function (error) {\r\n                        me.$vs.loading.close();\r\n                    })\r\n            },\r\n            rechargeInstitucion(e){\r\n              let me = this;\r\n              //0 => RECARGAR ; 1 CERRAR MODAL\r\n              if(e == 0){\r\n                me.popupAddInstitucion = false;\r\n                me.getInstitucion();\r\n              }else{\r\n                me.popupAddInstitucion = false;\r\n              }\r\n            },\r\n            async getVendedor() {\r\n                let me = this;\r\n                this.$http.get(this.$server_url + 'listaAsesores')\r\n                    .then(function (response) {\r\n                        me.vendedor = response.data;\r\n                        // console.log(me.vendedor);\r\n                    })\r\n                    .catch(function (error) {})\r\n            },\r\n\r\n            //=======FIN DE METODOS PARA EDITAR INSTITUCION============\r\n\r\n            //=======METODOS PARA EL MODAL DE LISTA DE DOCENTES========\r\n            getUsuariosTipo() {\r\n                let me = this;\r\n                me.$vs.loading()\r\n                if (me.tipo == 'docente') {\r\n                    this.$http.get(this.$server_url + 'docentes?idInstitucion=' + me.institucionDocente.idInstitucion)\r\n                        .then(function (response) {\r\n                            me.usuarios = response.data\r\n                            me.$vs.loading.close()\r\n                            // console.log(me.usuarios)\r\n                        })\r\n                        .catch(function (error) {\r\n                            console.log(error)\r\n                            me.$vs.loading.close()\r\n                        })\r\n                }\r\n                if (me.tipo == 'estudiante') {\r\n                    this.$http.get(this.$server_url + 'estudiantesXInstitucion/' + me.institucionDocente.idInstitucion)\r\n                        .then(function (response) {\r\n                            me.usuarios = response.data\r\n                            me.$vs.loading.close()\r\n                            // console.log(me.usuarios)\r\n                        })\r\n                        .catch(function (error) {\r\n                            console.log(error)\r\n                            me.$vs.loading.close()\r\n                        })\r\n                }\r\n            },\r\n            getUsuariosTipoVisitas() {\r\n                let me = this;\r\n                const from = moment(me.fromDate).format('YYYY-MM-DD')\r\n                const to = moment(me.toDate).format('YYYY-MM-DD')\r\n                if (me.fromDate == null) {\r\n                    me.$vs.notify({\r\n                        text: 'Debe escoger una fecha inicio',\r\n                        color: 'warning',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check'\r\n                    })\r\n                    return false\r\n                }\r\n                if (me.toDate == null) {\r\n                    me.$vs.notify({\r\n                        text: 'Debe escoger una fecha final',\r\n                        color: 'warning',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check'\r\n                    })\r\n                    return false\r\n                }\r\n                if (me.fromDate > me.toDate) {\r\n                    me.$vs.notify({\r\n                        text: 'La fecha inicio no puede mayor que la fecha final',\r\n                        color: 'warning',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check'\r\n                    })\r\n                    return false\r\n                }\r\n                me.usuarios = []\r\n                me.$vs.loading()\r\n                this.$http.get(this.$server_url + 'docentesVisitas?idInstitucion=' + me.institucionDocente.idInstitucion + '&fromDate=' + from + '&toDate=' + to)\r\n                    .then(function (response) {\r\n                        me.usuarios = response.data\r\n                        me.$vs.loading.close()\r\n                        // console.log(me.usuarios)\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(error)\r\n                        me.$vs.loading.close()\r\n                    })\r\n            },\r\n            verVisitas(item) {\r\n                let me = this;\r\n                // console.log(item);\r\n                me.popupVistasUsuario = true;\r\n                localStorage.datoUser = JSON.stringify(item);\r\n\r\n                me.datoU = JSON.parse(localStorage.getItem('datoUser'))\r\n                me.getVisitasDocente();\r\n                // if (me.tipo == 'docente') {\r\n                //     me.$router.push('/institucion/docentes/visitas');\r\n                // }\r\n                // if (me.tipo == 'estudiante') {\r\n                //     me.$router.push('/institucion/estudiante/visitas');\r\n                // }\r\n            },\r\n            irAsignacion(item) {\r\n\r\n                let me = this;\r\n                // console.log( item )\r\n                me.popupAsignacion = true;\r\n\r\n                localStorage.setItem('user_select', (JSON.stringify(item)));\r\n                localStorage.setItem('show_inst', 'si'); //desde vista docentes, mostrar institucion\r\n\r\n                me.show_inst = (localStorage.getItem('show_inst'));\r\n                me.usuarioAsignacion = JSON.parse(localStorage.getItem('user_select'));\r\n                me.user_seleccionado = me.usuarioAsignacion.idusuario\r\n                me.user_nombre = me.usuarioAsignacion.nombres + ' ' + me.usuarioAsignacion.apellidos\r\n                me.user_email = me.usuarioAsignacion.email\r\n                me.user_institucion = JSON.parse(localStorage.getItem('institucion'))\r\n                me.getAreaSelect();\r\n                me.getSeleccionadas();\r\n\r\n                // me.$router.push('/usuarios/asignaturasInstitucion');\r\n            },\r\n\r\n            //=======FIN DEL METODOS PARA EL MODAL DE LISTA DE DOCENTES\r\n            //=======METODOS PARA MODAL DE ASIGNACION DE LIBROS\r\n            getSeleccionadas() {\r\n                let me = this;\r\n                me.$vs.loading();\r\n                let data = new FormData();\r\n                data.append('idusuario', me.user_seleccionado)\r\n                this.$http.post(this.$server_url + \"asignaturasDocent\", data)\r\n                    .then(res => {\r\n                        // console.log(res.data);\r\n                        me.seleccionadas = res.data;\r\n                        // me.popupDocentes = true;\r\n                        me.$vs.loading.close();\r\n                    });\r\n            },\r\n            getAreaSelect() {\r\n                let me = this;\r\n                me.$vs.loading();\r\n                this.$http.get(this.$server_url + \"areaSelect\").then(function (response) {\r\n                    me.area = response.data.items;\r\n                    // console.log(me.area);\r\n                    me.$vs.loading.close();\r\n                });\r\n            },\r\n\r\n            agregaAsignacion(item) {\r\n                let me = this;\r\n                let data = new FormData();\r\n                data.append('usuario_idusuario', me.user_seleccionado)\r\n                data.append('asignatura_idasignatura', item.id)\r\n                this.$http.post(this.$server_url + \"asignar_asignatura_docentes\", data)\r\n                    .then(function (res) {\r\n                        // console.log(res.data);\r\n                        if (res.data > 0) {\r\n                            me.$vs.notify({\r\n                                time: 7000,\r\n                                text: 'Esta asignatura ya se encuentra asignada al docente',\r\n                                color: 'danger',\r\n                                iconPack: 'feather',\r\n                                icon: 'icon-alert-triangle'\r\n                            })\r\n                        } else {\r\n                            me.$vs.notify({\r\n                                text: 'Asignatura agregada',\r\n                                color: 'success',\r\n                                iconPack: 'feather',\r\n                                icon: 'icon-check'\r\n                            })\r\n                            me.getSeleccionadas();\r\n                        }\r\n                        me.$vs.loading.close();\r\n                    });\r\n            },\r\n            eliminaAsignacion(item) {\r\n                let me = this;\r\n                // console.log(item)\r\n                me.$vs.loading();\r\n                this.$http.get(this.$server_url + \"eliminaAsignacion/\" + item.idasignado)\r\n                    .then(function (res) {\r\n                        // console.log(res.data);\r\n                        me.$vs.notify({\r\n                            text: item.nombreasignatura + ' eliminada',\r\n                            color: 'success',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-check'\r\n                        })\r\n                        me.getSeleccionadas();\r\n                        me.$vs.loading.close();\r\n                    });\r\n            },\r\n            moverPeriodoActual(){\r\n              let me = this\r\n              console.log(\"user_seleccionado\",me.user_seleccionado)\r\n              console.log(\"periodo\",me.institucionSelected.periodo_id)\r\n              this.$http.get(this.$server_url+'moverAsignaturasPeriodo/'+me.user_seleccionado+'/'+me.institucionSelected.periodo_id)\r\n                .then(function (res) {\r\n                  me.$vs.notify({\r\n                  text:'Se cambio correctamente',\r\n                  color:'success',\r\n                  iconPack: 'feather',\r\n                  icon:'icon-check'})\r\n                  me.getSeleccionadas();\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                })\r\n            },\r\n            confirmaQuitar() {\r\n                let me = this;\r\n                me.popupAsignacion = false\r\n                me.$vs.dialog({\r\n                    type: 'confirm',\r\n                    color: 'danger',\r\n                    title: 'Confirmar',\r\n                    text: '¿Está seguro de eliminar este contenido?',\r\n                    acceptText: 'Aceptar',\r\n                    cancelText: 'Cancelar',\r\n                    accept: me.f_quitarTodo,\r\n                    cancel: me.f_regresar\r\n                })\r\n            },\r\n            f_regresar() {\r\n                let me = this\r\n                me.popupAsignacion = true\r\n            },\r\n            f_quitarTodo() {\r\n                let me = this;\r\n                let idSelects = [];\r\n                for (let index = 0; index < me.seleccionadas.length; index++) {\r\n                    idSelects.push(me.seleccionadas[index].idasignado)\r\n                }\r\n                // console.log(idSelects)\r\n                me.$vs.loading();\r\n                let data = new FormData();\r\n                data.append('idasiguser', idSelects)\r\n                this.$http.post(this.$server_url + \"quitaTodasAsignaturas\", data)\r\n                    .then(function (res) {\r\n                        // console.log(res.data);\r\n                        me.$vs.notify({\r\n                            text: 'Asignaturas quitadas correctamente.',\r\n                            color: 'success',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-check'\r\n                        })\r\n                        me.getSeleccionadas();\r\n                        me.$vs.loading.close();\r\n                    });\r\n            },\r\n\r\n            //=======FIN DE METODOS PARA MODAL DE ASIGNACION DE LIBROS\r\n\r\n            //METODOS PARA MODAL VISITAS DE USUARIO\r\n            getVisitasDocente() {\r\n                let me = this;\r\n                axios.get('https://foro.prolipadigital.com.ec/estudiantes?idusuario=' + me.datoU.idusuario + '&_sort=updatedAt:DESC')\r\n                    .then(res => {\r\n                        me.listaVisitas = res.data;\r\n                        // console.log(me.listaVisitas)\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(' no se conecto a consultar las visitas ')\r\n                    })\r\n            },\r\n\r\n            //======FIN DE MODAL PARA VISITAS DE USUARIO\r\n\r\n            //====PARA EXPORTAR A EXCEL LOS DOCENTES CON LAS VISITAS======\r\n            exportToExcel() {\r\n                let headerTitle = ['nombres', 'apellidos', 'email', 'usuario', 'cedula', 'visitas', 'Fecha creacion'];\r\n                let headerVal = ['nombres', 'apellidos', 'email', 'name_usuario', 'cedula', 'visitas', 'created_at'];\r\n                let codigoSelectedMayus = this.codigoSelected\r\n                for (var i = 0; i < codigoSelectedMayus.length; i++) {\r\n                    for (var key in codigoSelectedMayus[i]) {\r\n                        if (typeof codigoSelectedMayus[i][key] == \"string\") {\r\n                            codigoSelectedMayus[i][key] = codigoSelectedMayus[i][key].toUpperCase();\r\n                        }\r\n                    }\r\n                }\r\n                import('@/vendor/Export2Excel').then(excel => {\r\n                    const list = codigoSelectedMayus\r\n                    const data = this.formatJson(headerVal, list)\r\n                    excel.export_json_to_excel({\r\n                        header: headerTitle,\r\n                        data,\r\n                        filename: this.fileName,\r\n                        autoWidth: this.cellAutoWidth,\r\n                        bookType: this.selectedFormat\r\n                    })\r\n                    this.clearFields()\r\n                    this.guardarActivo = '';\r\n                    this.generarActivo = ' ';\r\n                    this.textAlertCant = '';\r\n                    this.cantidad = '';\r\n                    this.codigoSelected = [];\r\n                })\r\n            },\r\n            formatJson(filterVal, jsonData) {\r\n                return jsonData.map(v => filterVal.map(j => {\r\n                    return v[j]\r\n                }))\r\n            },\r\n            clearFields() {\r\n                this.fileName = ''\r\n                this.cellAutoWidth = true\r\n                this.selectedFormat = 'xls'\r\n            },\r\n            openLoadingColor(libro) {\r\n                this.$vs.loading({\r\n                    color: '#1A76F2'\r\n                })\r\n\r\n            },\r\n            //generar enlace para el estudiante pueda ingresar los codigos\r\n            generateEnlaceEstudiante(tr) {\r\n                let me = this;\r\n                let host = location.protocol + '//' + location.hostname + ':' + location.port + '/formulario/diagnostico/'\r\n                //let host = location.protocol + '//' + location.hostname +':'+ location.port + '/formulario/diagnostico/'+ tr.idInstitucion +'/'\r\n                if (tr.statusPeriodo == 0) {\r\n                    me.$vs.notify({\r\n                        text: 'La institución tiene período inactivo no se puede generar el enlace',\r\n                        color: 'warning',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check',\r\n                        time: 6000,\r\n                    })\r\n                    return\r\n                }\r\n                let formData = new FormData();\r\n                me.$vs.loading()\r\n                formData.append('institucion_id', tr.idInstitucion)\r\n                formData.append('periodo_id', tr.periodo_id)\r\n                formData.append('link', host)\r\n                this.$http.post(this.$server_url + 'GenerarEnlaceDiagnostico', formData)\r\n                    .then(function (res) {\r\n                        me.$vs.loading.close()\r\n                        me.copiarLink(res.data[0])\r\n                    })\r\n                    .catch(function (error) {\r\n                        me.$vs.loading.close()\r\n                    })\r\n            },\r\n            VerCoincidencias(tr) {\r\n                let me = this;\r\n                var resultado = \"\"\r\n                me.busquedaMilton = \"\"\r\n                me.arregloCoincidencias = []\r\n                me.arregloIdsCoincidencias = []\r\n                me.institucionCiudad = tr.ciudad\r\n                me.institucionEnviar = tr.idInstitucion\r\n                me.institucionNombreEnviar = tr.nombreInstitucion\r\n                me.institucionEnviarCedula = tr.vendedorInstitucion\r\n                me.institucionEnviarAIniciales = tr.iniciales\r\n                const texto = tr.nombreInstitucion;\r\n                // Convertimos la cadena en un arreglo de palabras\r\n                const palabras = texto.split(\" \");\r\n                if (palabras.length > 3) {\r\n                    // Obtenemos las últimas 3 palabras del arreglo\r\n                    const ultimasTres = palabras.slice(-3);\r\n                    // Unimos las últimas 3 palabras en una sola cadena\r\n                    resultado = ultimasTres.join(\" \");\r\n                } else {\r\n                    resultado = tr.nombreInstitucion\r\n                }\r\n                //enviar ids coincidencias al arreglo\r\n                if (tr.codigo_mitlon_coincidencias == \"null\" || tr.codigo_mitlon_coincidencias == null || tr.codigo_mitlon_coincidencias == \"\") {} else {\r\n                    let transforWords = tr.codigo_mitlon_coincidencias\r\n                    me.arregloIdsCoincidencias = transforWords.split(\",\")\r\n                }\r\n                me.buscarCoincidencias(resultado)\r\n            },\r\n            buscarCoincidencias(coincidencia) {\r\n                let me = this;\r\n                me.arregloCoincidencias = []\r\n                me.$vs.loading();\r\n                this.$http.get(this.$server_url + 'buscarCoincidenciaInstitucionMilton?coincidencia=' + coincidencia)\r\n                    .then(function (res) {\r\n                        me.$vs.loading.close()\r\n                        if (res.data.status == 0) {\r\n                            me.$vs.notify({\r\n                                text: res.data.message,\r\n                                color: 'primary',\r\n                                iconPack: 'feather',\r\n                                icon: 'icon-check'\r\n                            })\r\n                        }\r\n                        me.arregloCoincidencias = res.data\r\n                        me.popupCoincidencia = true\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(error + ' error');\r\n                        me.$vs.loading.close()\r\n                    })\r\n            },\r\n            AsignarCodigoMilton(tr) {\r\n                let me = this;\r\n                let resolve = me.arregloIdsCoincidencias.filter(p => p == tr.ID_INSTITUCION)\r\n                if (resolve.length == 0) {\r\n                    me.arregloIdsCoincidencias.push(tr.ID_INSTITUCION)\r\n                }\r\n            },\r\n            guadarIdsMilton() {\r\n                let me = this\r\n                if (me.arregloIdsCoincidencias.length == 0) {\r\n                    me.$vs.notify({\r\n                        text: 'Debe seleccionar al menos un id',\r\n                        color: 'warning',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check'\r\n                    })\r\n                    return\r\n                }\r\n                let valorPrimario = me.arregloIdsCoincidencias[0]\r\n                let enviarIds = me.arregloIdsCoincidencias.join(',')\r\n                let formData = new FormData();\r\n                formData.append('valorPrimario', valorPrimario)\r\n                formData.append('codigosM', enviarIds)\r\n                formData.append('institucion_id', me.institucionEnviar)\r\n                formData.append('cedulaAsesor', me.institucionEnviarCedula)\r\n                formData.append('cedulaAsesorIniciales', me.institucionEnviarAIniciales)\r\n                me.$vs.loading();\r\n                this.$http.post(this.$server_url + 'guadarIdsMilton', formData)\r\n                    .then(function (res) {\r\n                        me.$vs.loading.close()\r\n                        me.$vs.notify({\r\n                            text: 'Se actualizo correctamente',\r\n                            color: 'primary',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-check'\r\n                        })\r\n                        me.getInstitucion()\r\n                        me.popupCoincidencia = false\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(error + ' error');\r\n                        me.$vs.loading.close()\r\n                    })\r\n            },\r\n            eliminaAsignacionIdMilton(value) {\r\n                let me = this;\r\n                me.arregloIdsCoincidencias.splice(value, 1);\r\n            },\r\n            copiarLink(tr) {\r\n                let me = this;\r\n                let ruta = tr.link\r\n                var aux = document.createElement(\"input\");\r\n                aux.setAttribute(\"value\", ruta);\r\n                document.body.appendChild(aux);\r\n                aux.select();\r\n                try {\r\n                    var status = document.execCommand('copy');\r\n                    if (!status) {\r\n                        me.$vs.notify({\r\n                            text: 'Error al copiar el link',\r\n                            color: 'warning',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-alert-triangle'\r\n                        })\r\n                    } else {\r\n                        me.$vs.notify({\r\n                            text: 'Link copiado',\r\n                            color: 'success',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-check'\r\n                        })\r\n                    }\r\n                } catch (err) {\r\n                    console.log('No se pudo copiar');\r\n                }\r\n                document.body.removeChild(aux);\r\n            },\r\n            //METODOS REGISTRO DE DOCENTES\r\n            registroDocentes(tr){\r\n                let me = this\r\n                if(tr.statusPeriodo == 0){\r\n                    me.$vs.notify({\r\n                        text: 'La institución tiene periodo inactivo, solicite la activación a Soporte',\r\n                        color: 'danger',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check',\r\n                        time:6000\r\n                    })\r\n                    return\r\n                }\r\n                me.popupAsignacionDocentes = true;\r\n            },\r\n            //FIN METODOS REGISTRO DE DOCENTES\r\n            //IMPRIMIR CODIGOS ESTUDIANTES\r\n            imprimirCodigosEstudiante(tr){\r\n                let me = this;\r\n                var datos = tr.periodo_id + '*' + tr.idInstitucion;\r\n                me.$vs.loading()\r\n                this.$http.get(this.$server_url + 'getEstudianteCodigos/'+datos)\r\n                    .then(function (response) {\r\n                        me.$vs.loading.close()\r\n                        if(response.data.length == 0){\r\n                            me.$vs.notify({\r\n                                text: 'No hay códigos registrados en esta institución',\r\n                                color: 'danger',\r\n                                time:6000,\r\n                                position:'center',\r\n                                iconPack: 'feather',\r\n                                icon: 'icon-check'\r\n                            })\r\n                            return\r\n                        }\r\n                        me.arregloCodigosEstudiantes = response.data;\r\n                        me.exportToExcelCodigos()\r\n                    })\r\n                    .catch(function (error) {   me.$vs.loading.close()})\r\n            },\r\n            getEvaluacionesInstitucion(){\r\n                let me = this\r\n                me.$vs.loading()\r\n                const { idInstitucion, periodo_id } = me.institucionSelected\r\n                this.$http.get(this.$server_url + `getEvaluacionesInstitucion/${idInstitucion}/${periodo_id}/`)\r\n                    .then(function (response) {\r\n                        me.$vs.loading.close()\r\n                        me.arrayEvaluacionesInstitucion = response.data\r\n                        me.popupEvaluaciones            = true\r\n                    })\r\n                    .catch(function (error) {   me.$vs.loading.close()})\r\n            },\r\n            changeEvaluacion(e){\r\n                let me = this\r\n                me.popupEvaluaciones = false\r\n            },\r\n            //METODOS PARA DETALE DE VENTA\r\n            getTipoVenta(tr) {\r\n                let me = this;\r\n                me.pedido.nombreInstitucion = tr.nombreInstitucion\r\n                me.pedido.idInstitucion     = tr.idInstitucion\r\n                me.pedido.periodo           = tr.periodo\r\n                me.pedido.periodo_id        = tr.periodo_id\r\n                me.tituloDetalleVenta       = 'Detalle de venta de ' + me.pedido.nombreInstitucion\r\n                me.popupTipoVenta           = true;\r\n            },\r\n            //FIN METODOS PARA DETALLE DE VENTA\r\n            //METODOS PARA ACTIVAR AL ULTIMO PERIODO\r\n            getPeriodosActivar(){\r\n              let me = this\r\n              me.$vs.loading()\r\n              me.periodoSelect = []\r\n              this.$http.get(this.$server_url+'get_periodos_pedidos')\r\n              .then(res => {\r\n                me.$vs.loading.close()\r\n                let datos = res.data\r\n                if(datos.length == 0 ){\r\n                  me.$vs.notify({\r\n                  text:'No existe períodos para activar Comuniquese con soporte',\r\n                  color:'warning',\r\n                  iconPack: 'feather',\r\n                  icon:'icon-check',\r\n                  time:5000,\r\n                  })\r\n                  return\r\n                }\r\n                //obtener el perido activo de la region para activar a la escuela en ese periodo\r\n                if(datos.length > 0){\r\n                  me.periodoSelect = datos.filter(p => p.cambiar_periodo == 1 && p.region_idregion == me.sendInstitucion.region)\r\n                  //si no existe el periodo activo para la region para poder cambiar\r\n                  if( me.periodoSelect.length == 0 ){\r\n                    me.$vs.notify({\r\n                    text:'No existe un período configurado para activar Comuniquese con soporte',\r\n                    color:'warning',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check',\r\n                    time:5000,\r\n                    })\r\n                    return\r\n                  }\r\n                  //si existe mas de un periodo activo para la region\r\n                  if( me.periodoSelect.length > 1 ){\r\n                    me.$vs.notify({\r\n                    text:'Existe más de un período configurado para activar Comuniquese con soporte',\r\n                    color:'warning',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check',\r\n                    time:5000,\r\n                    })\r\n                    return\r\n                  }\r\n                  me.popupActualizarPeriodo = true;\r\n                }\r\n              })\r\n              .catch(function (error) {\r\n                me.$vs.loading.close();\r\n              })\r\n            },\r\n            changePeriodo() {\r\n              let me = this;\r\n              me.$vs.loading();\r\n              let data = new FormData();\r\n              data.append('idperiodoescolar', me.periodoSelect[0].idperiodoescolar);\r\n              data.append('idinstitucion',    me.sendInstitucion.idInstitucion)\r\n              this.$http.post(this.$server_url + 'verifica_periodo', data)\r\n                .then(res => {\r\n                  me.$vs.loading.close();\r\n                  if (res.data == 1) {\r\n                    me.$vs.notify({\r\n                      time: 8000,\r\n                      text: 'Este periodo ya se encuentra asignado a la institucion ' + me.sendInstitucion.nombreInstitucion,\r\n                      color: 'danger',\r\n                      iconPack: 'feather',\r\n                      icon: 'icon-alert-triangle'\r\n                    })\r\n                  } else {\r\n                    me.$vs.notify({\r\n                      text: 'Periodo agregado correctamente a la institucion ' + me.sendInstitucion.labnombreInstitucionel,\r\n                      color: 'success',\r\n                      iconPack: 'feather',\r\n                      icon: 'icon-check'\r\n                    })\r\n                  }\r\n                  me.getInstitucion()\r\n                  me.sendInstitucion            = {}\r\n                  me.popupActualizarPeriodo     = false;\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                    me.$vs.loading.close();\r\n                })\r\n            },\r\n            //FIN METODOS PARA ACTIVAR AL ULTIMO PERIODO\r\n             //METODOS PARA EXCEL\r\n            //para limipiar los campos del excel\r\n            //metodo par descargar el excel\r\n            exportToExcelCodigos() {\r\n                let headerTitle = ['Código','Estudiante','Libro'];\r\n                let headerVal = ['codigo', 'estudiante','nombrelibro'];\r\n                let codigoSelectedMayus = this.arregloCodigosEstudiantes\r\n                for (var i = 0; i < codigoSelectedMayus.length; i++) {\r\n                    for (var key in codigoSelectedMayus[i]) {\r\n                        if (typeof codigoSelectedMayus[i][key] == \"string\") {\r\n                            codigoSelectedMayus[i][key] = codigoSelectedMayus[i][key].toUpperCase();\r\n                        }\r\n                    }\r\n                }\r\n                import('@/vendor/Export2Excel').then(excel => {\r\n                    const list = codigoSelectedMayus\r\n                    const data = this.formatJson(headerVal, list)\r\n                    var nombrefile = \"\"\r\n                    if(this.openModal == 1){\r\n                        nombrefile = this.fileName\r\n                    }else{\r\n                        nombrefile = \"Reporte_de_codigo_de_estudiantes\"\r\n                    }\r\n                    excel.export_json_to_excel({\r\n                        header: headerTitle,\r\n                        data,\r\n                        filename: nombrefile,\r\n                        autoWidth: this.cellAutoWidth,\r\n                        bookType: this.selectedFormat\r\n                    })\r\n                    this.clearFields()\r\n                    this.guardarActivo = '';\r\n                    this.generarActivo = ' ';\r\n                    this.textAlertCant = '';\r\n                    this.cantidad = '';\r\n                })\r\n            },\r\n        },\r\n    }\r\n    </script>\r\n\r\n    <style lang=\"css\">\r\n    .asig-select {\r\n        display: inline-block;\r\n        border: 0.7px solid rgb(201, 201, 204);\r\n        border-radius: 6px;\r\n        font-size: 12px;\r\n    }\r\n\r\n    .titulo {\r\n        background: #4CB8C4;\r\n        /* fallback for old browsers */\r\n        background: -webkit-linear-gradient(to right, #3CD3AD, #4CB8C4);\r\n        /* Chrome 10-25, Safari 5.1-6 */\r\n        background: linear-gradient(to right, #3CD3AD, #4CB8C4);\r\n        /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\r\n        color: white;\r\n        letter-spacing: 1px;\r\n\r\n    }\r\n\r\n    /* Botón para seleccionar archivos */\r\n    button.form-file-button {\r\n        margin-top: 10px;\r\n        vertical-align: middle;\r\n        color: #fff;\r\n        background: #24A6F6;\r\n        margin: 0;\r\n        border: 0;\r\n        width: 50px;\r\n        padding: 2px 8px;\r\n        transform: scaleX(-1);\r\n        /* Invertir botón horizontalmente */\r\n    }\r\n\r\n    /* Lista de archivos */\r\n    span.form-file-span {\r\n        flex: 1;\r\n        display: inline-block;\r\n        text-align: left;\r\n        padding: 4px 10px;\r\n        background: #24A6F6;\r\n        color: #fff;\r\n        padding: 10px;\r\n        border-radius: 5px 15px;\r\n        cursor: pointer;\r\n        font-size: 20px;\r\n\r\n    }\r\n    </style>\r\n"],"mappings":"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","ignoreList":[]}]}