{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\evaluaciones\\ReportesComponent.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\evaluaciones\\ReportesComponent.vue","mtime":1712682815868},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\babel.config.js","mtime":1712682813877},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\.babelrc","mtime":1712682813750},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find-index\";\nimport flatPickr from 'vue-flatpickr-component';\nimport 'flatpickr/dist/flatpickr.css';\nimport Vue from 'vue';\nimport axios from 'axios';\nimport vSelect from 'vue-select';\nimport moment from 'moment';\nexport default {\n  data: function data() {\n    return {\n      docentes: [],\n      docente: {\n        cedula: '',\n        nombres: '',\n        apellidos: '',\n        email: '',\n        foto_user: ''\n      },\n      asignaturas: [],\n      asignatura: {\n        id: '',\n        label: ''\n      },\n      editarActivo: false,\n      docenteSelected: [],\n      asignaturaSelected: {\n        id: '',\n        label: ''\n      },\n      popupAddTema: false,\n      popupEditTema: false,\n      usuario: [],\n      id_login: null,\n      unidades: [{\n        id: \"1\",\n        label: \"Unidad 1\"\n      }]\n    };\n  },\n  components: {\n    'v-select': vSelect,\n    flatPickr: flatPickr\n  },\n  created: function created() {\n    var _this = this;\n    this.usuario = JSON.parse(localStorage.getItem('usuario'));\n    this.id_login = this.usuario.idusuario;\n    this.$http.get(this.$server_url + 'docentesInstitucion/' + this.id_login).then(function (res) {\n      _this.docentes = res.data;\n      //console.log('res.data: ' + res.data[0].cedula);\n    }), this.$http.get(this.$server_url + 'asignaturasDoc/' + this.id_login).then(function (res) {\n      _this.asignaturas = res.data;\n    });\n  },\n  methods: {\n    onResize: function onResize() {\n      if (window.innerWidth < 769) this.isMobile = true;else this.isMobile = false;\n    },\n    limpiar: function limpiar() {\n      this.docente.nombre = '';\n      this.docente.asignatura = '';\n      this.docente.unidad = '';\n    },\n    agregar: function agregar() {\n      var _this2 = this;\n      //datos que se obtienen de los inputs\n      if (this.docente.nombre.trim() === '' || this.docente.unidad.id.trim() === '') {\n        alert('Debes completar todos los campos antes de guardar');\n        return;\n      }\n      var formData = new FormData();\n      formData.append('nombre', this.docente.nombre);\n      formData.append('asignatura', this.docente.asignatura.id);\n      formData.append('unidad', this.docente.unidad.id);\n      this.$http.post(this.$server_url + 'tema', formData).then(function (res) {\n        _this2.temas.push(res.data);\n        _this2.popupAddTema = false;\n        _this2.$vs.notify({\n          text: 'Tema guardado exitosamente',\n          color: 'success',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        location.reload();\n      });\n    },\n    eliminarTema: function eliminarTema(item, index) {\n      var _this3 = this;\n      //index => return\n      var formData = new FormData();\n      formData.append('id', item.id);\n      this.$http.delete(this.$server_url + 'tema', formData).then(function () {\n        _this3.temas.splice(index, 1);\n      }).catch(function (error) {\n        alert('NO SE PUEDE ELIMINAR ESTE TEMA PORQUE TIENE PREGUNTAS ASIGNADAS.');\n      });\n    },\n    editarFormulario: function editarFormulario(item) {\n      this.asignaturaSelected = {\n        id: item.id_asignatura,\n        label: item.nombreasignatura\n      };\n      this.docente.nombre = item.label; //nombre_tema=label\n      this.docente.asignatura = {\n        id: item.id_asignatura,\n        label: item.nombreasignatura\n      };\n      this.docente.unidad = {\n        id: item.unidad,\n        label: 'Unidad ' + item.unidad\n      };\n      this.docente.id = item.id;\n      this.editarActivo = true; //activa el form editar\n    },\n    editarTema: function editarTema(item) {\n      var _this4 = this;\n      var formData = new FormData();\n      formData.append('id', item.id);\n      formData.append('nombre', this.docente.nombre);\n      formData.append('asignatura', this.docente.asignatura.id);\n      formData.append('unidad', this.docente.unidad.id);\n      this.$http.post(this.$server_url + \"tema\", formData).then(function (res) {\n        var index = _this4.temas.findIndex(function (temaBuscar) {\n          return temaBuscar.id === res.data.id;\n        });\n        _this4.tema[index] = res.data;\n        _this4.$http.get(_this4.$server_url + 'tema').then(function (res) {\n          _this4.editarActivo = false; //desactiva el form editar\n          _this4.temas = res.data;\n          _this4.popupEditTema = false;\n          _this4.$vs.notify({\n            text: 'Tema editado exitosamente',\n            color: 'success',\n            iconPack: 'feather',\n            icon: 'icon-check'\n          });\n        });\n      });\n    }\n  }\n};",{"version":3,"names":["flatPickr","Vue","axios","vSelect","moment","data","docentes","docente","cedula","nombres","apellidos","email","foto_user","asignaturas","asignatura","id","label","editarActivo","docenteSelected","asignaturaSelected","popupAddTema","popupEditTema","usuario","id_login","unidades","components","created","_this","JSON","parse","localStorage","getItem","idusuario","$http","get","$server_url","then","res","methods","onResize","window","innerWidth","isMobile","limpiar","nombre","unidad","agregar","_this2","trim","alert","formData","FormData","append","post","temas","push","$vs","notify","text","color","iconPack","icon","location","reload","eliminarTema","item","index","_this3","delete","splice","catch","error","editarFormulario","id_asignatura","nombreasignatura","editarTema","_this4","findIndex","temaBuscar","tema"],"sources":["src/views/evaluaciones/ReportesComponent.vue"],"sourcesContent":["<template>\r\n    <div>\r\n\r\n        <!-- Modal Agregar-->\r\n        <div class=\"demo-alignment\">\r\n            <vs-popup classContent=\"popup-example\" title=\"Agregar Tema\" :active.sync=\"popupAddTema\">\r\n                <vs-input class=\"inputx mb-3\" placeholder=\"Nombre Tema\" v-model=\"docente.nombre\" style=\"width: 100%;\" />\r\n                \r\n                Asignatura: \r\n                <v-select class=\"mb-3\" v-model=\"docente.asignatura\" :options=\"asignaturas\" :value=\"asignaturaSelected\" :dir=\"$vs.rtl ? 'rtl' : 'ltr'\" />\r\n\r\n                Unidad:\r\n                <v-select class=\"mb-3\" v-model=\"docente.unidad\" :options=\"unidades\" :dir=\"$vs.rtl ? 'rtl' : 'ltr'\" />\r\n\r\n                <vs-button color=\"success\" type=\"gradient\" @click=\"agregar()\">Guardar</vs-button>\r\n            </vs-popup>\r\n        </div>\r\n        <!----FIN MODAL AGREGAR-->\r\n\r\n\r\n\r\n        <!-- Modal Editar Temas-->\r\n        <div class=\"demo-alignment\">\r\n            <vs-popup classContent=\"popup-example\" title=\"Editar Tema\" :active.sync=\"popupEditTema\">\r\n\r\n                <vs-input class=\"inputx mb-3\" placeholder=\"Nombre Tema\" v-model=\"docente.nombre\" style=\"width: 100%;\"/>\r\n\r\n                <v-select class=\"mb-3\" v-model=\"docente.asignatura\" :options=\"asignaturas\" :dir=\"$vs.rtl ? 'rtl' : 'ltr'\" />\r\n\r\n                <v-select class=\"mb-3\" v-model=\"docente.unidad\" :options=\"unidades\" :dir=\"$vs.rtl ? 'rtl' : 'ltr'\" />\r\n\r\n                <vs-button color=\"success\" type=\"gradient\" @click=\"editarTema(tema)\">Editar</vs-button>\r\n            </vs-popup>\r\n        </div>\r\n        <!----FIN MODAL EDITAR---->\r\n\r\n\r\n\r\n        <!--LISTADO DE TEMA-->\r\n        <div align=\"center\">\r\n\r\n            <vs-breadcrumb\r\n            :items=\"\r\n            [\r\n                {\r\n                title: 'Cursos',\r\n                url: '/cursosInstitucion',\r\n                },\r\n                {\r\n                title: 'Docentes',\r\n                url: '/docentesInstitucion'\r\n                },\r\n                {\r\n                title: 'Estudiantes',\r\n                url: '/estudiantesInstitucion'\r\n                },\r\n                {\r\n                title: 'Active',\r\n                url: '/blog'\r\n                }\r\n            ]\"\r\n            ></vs-breadcrumb>\r\n\r\n            <vs-table multiple v-model=\"docenteSelected\" pagination max-items=\"3\" search :data=\"docentes\">\r\n\r\n                <template slot=\"thead\">\r\n                    <vs-th sort-key=\"pregunta\">Docente</vs-th>\r\n                    <vs-th></vs-th>\r\n                    <vs-th>Acciones</vs-th>\r\n                </template>\r\n\r\n                <template slot-scope=\"{data}\">\r\n                <vs-tr :data=\"tr\" :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n\r\n                    <vs-td :data=\"data[indextr].cedula\">\r\n                        {{ 'Cédula: ' + data[indextr].cedula }}<br>\r\n                        {{ 'Nombre: ' + data[indextr].nombres +' '+ data[indextr].apellidos }}<br>\r\n                        {{ 'Email: ' + data[indextr].email }}<br>\r\n                    </vs-td>\r\n\r\n                    <vs-td>\r\n                        <img v-if=\"data[indextr].foto_user!='' && data[indextr].foto_user!='null' && data[indextr].foto_user!=null\" v-bind:src=\"$data_url+'archivos/img/'+data[indextr].foto_user\" class=\"img-responsive\" width=\"50px\"><br>\r\n                    </vs-td>\r\n\r\n                    <vs-td :data=\"data[indextr].idusuario\">\r\n                        <vs-button radius icon-pack=\"feather\" icon=\"icon-file\" @click=\"editarFormulario(data[indextr]); popupEditTema=true\" color=\"success\" type=\"gradient\" style=\"display: inline-block;\"></vs-button>\r\n                    </vs-td>\r\n\r\n                </vs-tr>\r\n                </template>\r\n            </vs-table>\r\n\r\n        </div>\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\n    import flatPickr from 'vue-flatpickr-component';\r\n    import 'flatpickr/dist/flatpickr.css';\r\n    import Vue from 'vue'\r\n    import axios from 'axios'\r\n    import vSelect from 'vue-select'\r\n    import moment from 'moment'\r\n    export default {\r\n        data(){\r\n            return {\r\n                docentes: [],\r\n                docente: {cedula: '', nombres: '', apellidos: '', email: '', foto_user: ''},\r\n    \r\n                asignaturas: [],\r\n                asignatura: {id: '', label: ''},\r\n                editarActivo: false,\r\n                docenteSelected: [],\r\n                asignaturaSelected: {id: '', label: ''},\r\n                popupAddTema: false,\r\n                popupEditTema: false,\r\n                usuario: [],\r\n                id_login: null,\r\n                unidades: [\r\n                    {\r\n                    id: \"1\",\r\n                    label: \"Unidad 1\",\r\n                    },\r\n                ]\r\n            }\r\n        },\r\n        components: {\r\n            'v-select': vSelect,\r\n            flatPickr\r\n        },\r\n        created(){\r\n            this.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n            this.id_login = this.usuario.idusuario\r\n            this.$http.get(this.$server_url+'docentesInstitucion/'+this.id_login).then(res => {\r\n                this.docentes = res.data;\r\n                //console.log('res.data: ' + res.data[0].cedula);\r\n            }),\r\n            this.$http.get(this.$server_url+'asignaturasDoc/'+this.id_login).then(res => {\r\n                this.asignaturas = res.data;\r\n            })\r\n        },\r\n        methods: {\r\n            onResize() {\r\n            if (window.innerWidth < 769)\r\n                this.isMobile = true;\r\n            else\r\n                this.isMobile = false;\r\n            },\r\n            limpiar(){\r\n                this.docente.nombre = '';\r\n                this.docente.asignatura = '';\r\n                this.docente.unidad = '';\r\n            },\r\n            agregar(){//datos que se obtienen de los inputs\r\n                if(this.docente.nombre.trim() === '' || this.docente.unidad.id.trim() === ''){\r\n                    alert('Debes completar todos los campos antes de guardar');\r\n                    return;\r\n                }\r\n                let formData = new FormData();\r\n                    formData.append('nombre', this.docente.nombre);\r\n                    formData.append('asignatura', this.docente.asignatura.id);\r\n                    formData.append('unidad', this.docente.unidad.id);\r\n                this.$http.post(this.$server_url+'tema', formData)\r\n                .then(res => {\r\n                    this.temas.push(res.data)\r\n                    this.popupAddTema = false\r\n                    this.$vs.notify({\r\n                    text:'Tema guardado exitosamente',\r\n                    color:'success',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check'})\r\n                    \r\n                    location.reload();\r\n                })\r\n            },\r\n            eliminarTema(item, index){ //index => return\r\n                let formData = new FormData();\r\n                    formData.append('id', item.id);\r\n                this.$http.delete(this.$server_url+'tema', formData).then(() => {\r\n                    this.temas.splice(index, 1);\r\n                })\r\n                .catch(function (error) {\r\n                    alert('NO SE PUEDE ELIMINAR ESTE TEMA PORQUE TIENE PREGUNTAS ASIGNADAS.');\r\n                })\r\n            },\r\n            editarFormulario(item){\r\n                this.asignaturaSelected = {id: item.id_asignatura, label: item.nombreasignatura};\r\n                this.docente.nombre = item.label;//nombre_tema=label\r\n                this.docente.asignatura = {id: item.id_asignatura, label: item.nombreasignatura};\r\n                this.docente.unidad = {id: item.unidad, label: 'Unidad '+item.unidad};\r\n                this.docente.id = item.id;\r\n                this.editarActivo = true;//activa el form editar\r\n            },\r\n            editarTema(item){\r\n                let formData = new FormData();\r\n                    formData.append('id', item.id);\r\n                    formData.append('nombre', this.docente.nombre);\r\n                    formData.append('asignatura', this.docente.asignatura.id);\r\n                    formData.append('unidad', this.docente.unidad.id);\r\n                this.$http.post(this.$server_url+`tema`, formData).then(res => {\r\n                    const index = this.temas.findIndex(\r\n                        temaBuscar => temaBuscar.id === res.data.id)\r\n                    this.tema[index] = res.data;\r\n                    this.$http.get(this.$server_url+'tema').then(res => {\r\n                        \r\n                        this.editarActivo = false;//desactiva el form editar\r\n                        this.temas = res.data;\r\n                        this.popupEditTema = false\r\n                        this.$vs.notify({\r\n                        text:'Tema editado exitosamente',\r\n                        color:'success',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check'})\r\n                    })\r\n                    \r\n                });\r\n            },\r\n        },\r\n    }\r\n</script>"],"mappings":"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","ignoreList":[]}]}