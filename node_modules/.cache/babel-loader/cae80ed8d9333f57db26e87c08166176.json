{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\codigos\\components\\utils\\RevisionVentaAgrupado.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\codigos\\components\\utils\\RevisionVentaAgrupado.vue","mtime":1712682815650},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\babel.config.js","mtime":1712682813877},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\.babelrc","mtime":1712682813750},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.sort\";\nexport default {\n  data: function data() {\n    return {\n      //VARIABLES PARA EXPORTAR A EXCEL\n      formats: ['xls', 'xlsx', 'csv', 'txt'],\n      fileName: 'Reporte de codigos agrupados',\n      selectedFormat: 'xlsx',\n      cellAutoWidth: true,\n      activePrompt: false\n      //FIN VARIABLES PARA EXPORTAR A EXCEL\n    };\n  },\n  computed: {\n    sumaTotal: function sumaTotal() {\n      var me = this;\n      if (me.groupedData.length > 0) {\n        var datos = me.groupedData.filter(function (p) {\n          return p.cantidad;\n        });\n        var total = datos.reduce(function (a, b) {\n          return a + (b[\"cantidad\"] || 0);\n        }, 0);\n        return total;\n      }\n    }\n  },\n  props: {\n    groupedData: {\n      type: Array,\n      default: []\n    }\n  },\n  mounted: function mounted() {\n    var me = this;\n    me.ordenar();\n  },\n  methods: {\n    ordenar: function ordenar() {\n      var me = this;\n      if (me.groupedData.length > 0) this.groupedData.sort(function (a, b) {\n        if (a.libro < b.libro) {\n          return -1;\n        }\n        if (a.libro > b.libro) {\n          return 1;\n        }\n        return 0;\n      });\n    },\n    //para limipiar los campos del excel\n    clearFields: function clearFields() {\n      this.fileName = '';\n      this.cellAutoWidth = true;\n      this.selectedFormat = 'xls';\n    },\n    //metodo par descargar el excel\n    exportToExcel: function exportToExcel() {\n      var _this = this;\n      var headerTitle = ['Libro', 'Cantidad'];\n      var headerVal = ['libro', 'cantidad'];\n      var codigoSelectedMayus = this.groupedData;\n      for (var i = 0; i < codigoSelectedMayus.length; i++) {\n        for (var key in codigoSelectedMayus[i]) {\n          if (typeof codigoSelectedMayus[i][key] == \"string\") {\n            codigoSelectedMayus[i][key] = codigoSelectedMayus[i][key].toUpperCase();\n          }\n        }\n      }\n      import('@/vendor/Export2Excel').then(function (excel) {\n        var list = codigoSelectedMayus;\n        var data = _this.formatJson(headerVal, list);\n        excel.export_json_to_excel({\n          header: headerTitle,\n          data: data,\n          filename: _this.fileName,\n          autoWidth: _this.cellAutoWidth,\n          bookType: _this.selectedFormat\n        });\n        _this.clearFields();\n      });\n    },\n    formatJson: function formatJson(filterVal, jsonData) {\n      return jsonData.map(function (v) {\n        return filterVal.map(function (j) {\n          return v[j];\n        });\n      });\n    }\n  }\n};",{"version":3,"names":["data","formats","fileName","selectedFormat","cellAutoWidth","activePrompt","computed","sumaTotal","me","groupedData","length","datos","filter","p","cantidad","total","reduce","a","b","props","type","Array","default","mounted","ordenar","methods","sort","libro","clearFields","exportToExcel","_this","headerTitle","headerVal","codigoSelectedMayus","i","key","toUpperCase","then","excel","list","formatJson","export_json_to_excel","header","filename","autoWidth","bookType","filterVal","jsonData","map","v","j"],"sources":["src/views/codigos/components/utils/RevisionVentaAgrupado.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <vs-table max-items=\"20\" search pagination :data=\"groupedData\">\r\n        <template slot=\"header\">\r\n          <vs-chip  color=\"primary\">Cantidad: <b> {{ groupedData.length }}</b></vs-chip>\r\n          <vs-chip  color=\"success\" class=\"ml-2\">Total c√≥digos: <b> {{ sumaTotal }}</b></vs-chip>\r\n          <span @click=\"exportToExcel()\">\r\n            <vx-tooltip style=\"display: inline-block;\" text=\"Exportar\" position=\"top\" color=\"primary\">\r\n              <vs-avatar color=\"warning\" icon-pack=\"feather\" icon=\"icon-printer\" />\r\n            </vx-tooltip>\r\n          </span>\r\n        </template>\r\n        <template slot=\"thead\">\r\n            <vs-th>Libro</vs-th>\r\n            <vs-th>Cantidad</vs-th>\r\n        </template>\r\n        <template slot-scope=\"{data}\">\r\n          <vs-tr :data=\"tr\" :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n            <vs-td>\r\n              {{data[indextr].libro}}<br>\r\n            </vs-td>\r\n            <vs-td>\r\n              {{data[indextr].cantidad}}<br>\r\n            </vs-td>\r\n          </vs-tr>\r\n        </template>\r\n    </vs-table>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default{\r\n  data(){\r\n    return{\r\n      //VARIABLES PARA EXPORTAR A EXCEL\r\n      formats: ['xls', 'xlsx', 'csv', 'txt'],\r\n      fileName:'Reporte de codigos agrupados',\r\n      selectedFormat: 'xlsx',\r\n      cellAutoWidth: true,\r\n      activePrompt: false,\r\n      //FIN VARIABLES PARA EXPORTAR A EXCEL\r\n    }\r\n  },\r\n  computed:{\r\n    sumaTotal(){\r\n      let me = this;\r\n      if(me.groupedData.length >0){\r\n        let datos = me.groupedData.filter(p => p.cantidad)\r\n        let total = datos.reduce((a, b) => a + (b[\"cantidad\"] || 0), 0);\r\n        return total\r\n      }\r\n    },\r\n  },\r\n  props:{\r\n    groupedData:{\r\n      type:Array,\r\n      default:[]\r\n    }\r\n  },\r\n  mounted(){\r\n    let me = this\r\n    me.ordenar()\r\n  },\r\n  methods:{\r\n    ordenar(){\r\n      let me = this;\r\n      if(me.groupedData.length > 0)\r\n      this.groupedData.sort((a, b) => {\r\n          if (a.libro < b.libro) {\r\n            return -1;\r\n          }\r\n          if (a.libro > b.libro) {\r\n            return 1;\r\n          }\r\n          return 0;\r\n        });\r\n    },\r\n    //para limipiar los campos del excel\r\n    clearFields() {\r\n      this.fileName = ''\r\n      this.cellAutoWidth = true\r\n      this.selectedFormat = 'xls'\r\n    },\r\n    //metodo par descargar el excel\r\n    exportToExcel() {\r\n      let headerTitle = ['Libro' ,'Cantidad'];\r\n      let headerVal = [ 'libro','cantidad'];\r\n      let codigoSelectedMayus = this.groupedData\r\n      for (var i = 0; i < codigoSelectedMayus.length; i++) {\r\n        for (var key in codigoSelectedMayus[i]) {\r\n            if (typeof codigoSelectedMayus[i][key] == \"string\") {\r\n                codigoSelectedMayus[i][key] = codigoSelectedMayus[i][key].toUpperCase();\r\n            }\r\n        }\r\n    }\r\n    import('@/vendor/Export2Excel').then(excel => {\r\n        const list = codigoSelectedMayus\r\n        const data = this.formatJson(headerVal, list)\r\n        excel.export_json_to_excel({\r\n            header: headerTitle,\r\n            data,\r\n            filename: this.fileName,\r\n            autoWidth: this.cellAutoWidth,\r\n            bookType: this.selectedFormat\r\n        })\r\n        this.clearFields()\r\n      })\r\n    },\r\n      formatJson(filterVal, jsonData) {\r\n        return jsonData.map(v => filterVal.map(j => {\r\n            return v[j]\r\n        }))\r\n      },\r\n  }\r\n}\r\n</script>\r\n"],"mappings":";AA8BA;EACAA,IAAA,WAAAA,KAAA;IACA;MACA;MACAC,OAAA;MACAC,QAAA;MACAC,cAAA;MACAC,aAAA;MACAC,YAAA;MACA;IACA;EACA;EACAC,QAAA;IACAC,SAAA,WAAAA,UAAA;MACA,IAAAC,EAAA;MACA,IAAAA,EAAA,CAAAC,WAAA,CAAAC,MAAA;QACA,IAAAC,KAAA,GAAAH,EAAA,CAAAC,WAAA,CAAAG,MAAA,WAAAC,CAAA;UAAA,OAAAA,CAAA,CAAAC,QAAA;QAAA;QACA,IAAAC,KAAA,GAAAJ,KAAA,CAAAK,MAAA,WAAAC,CAAA,EAAAC,CAAA;UAAA,OAAAD,CAAA,IAAAC,CAAA;QAAA;QACA,OAAAH,KAAA;MACA;IACA;EACA;EACAI,KAAA;IACAV,WAAA;MACAW,IAAA,EAAAC,KAAA;MACAC,OAAA;IACA;EACA;EACAC,OAAA,WAAAA,QAAA;IACA,IAAAf,EAAA;IACAA,EAAA,CAAAgB,OAAA;EACA;EACAC,OAAA;IACAD,OAAA,WAAAA,QAAA;MACA,IAAAhB,EAAA;MACA,IAAAA,EAAA,CAAAC,WAAA,CAAAC,MAAA,MACA,KAAAD,WAAA,CAAAiB,IAAA,WAAAT,CAAA,EAAAC,CAAA;QACA,IAAAD,CAAA,CAAAU,KAAA,GAAAT,CAAA,CAAAS,KAAA;UACA;QACA;QACA,IAAAV,CAAA,CAAAU,KAAA,GAAAT,CAAA,CAAAS,KAAA;UACA;QACA;QACA;MACA;IACA;IACA;IACAC,WAAA,WAAAA,YAAA;MACA,KAAA1B,QAAA;MACA,KAAAE,aAAA;MACA,KAAAD,cAAA;IACA;IACA;IACA0B,aAAA,WAAAA,cAAA;MAAA,IAAAC,KAAA;MACA,IAAAC,WAAA;MACA,IAAAC,SAAA;MACA,IAAAC,mBAAA,QAAAxB,WAAA;MACA,SAAAyB,CAAA,MAAAA,CAAA,GAAAD,mBAAA,CAAAvB,MAAA,EAAAwB,CAAA;QACA,SAAAC,GAAA,IAAAF,mBAAA,CAAAC,CAAA;UACA,WAAAD,mBAAA,CAAAC,CAAA,EAAAC,GAAA;YACAF,mBAAA,CAAAC,CAAA,EAAAC,GAAA,IAAAF,mBAAA,CAAAC,CAAA,EAAAC,GAAA,EAAAC,WAAA;UACA;QACA;MACA;MACA,gCAAAC,IAAA,WAAAC,KAAA;QACA,IAAAC,IAAA,GAAAN,mBAAA;QACA,IAAAjC,IAAA,GAAA8B,KAAA,CAAAU,UAAA,CAAAR,SAAA,EAAAO,IAAA;QACAD,KAAA,CAAAG,oBAAA;UACAC,MAAA,EAAAX,WAAA;UACA/B,IAAA,EAAAA,IAAA;UACA2C,QAAA,EAAAb,KAAA,CAAA5B,QAAA;UACA0C,SAAA,EAAAd,KAAA,CAAA1B,aAAA;UACAyC,QAAA,EAAAf,KAAA,CAAA3B;QACA;QACA2B,KAAA,CAAAF,WAAA;MACA;IACA;IACAY,UAAA,WAAAA,WAAAM,SAAA,EAAAC,QAAA;MACA,OAAAA,QAAA,CAAAC,GAAA,WAAAC,CAAA;QAAA,OAAAH,SAAA,CAAAE,GAAA,WAAAE,CAAA;UACA,OAAAD,CAAA,CAAAC,CAAA;QACA;MAAA;IACA;EACA;AACA","ignoreList":[]}]}