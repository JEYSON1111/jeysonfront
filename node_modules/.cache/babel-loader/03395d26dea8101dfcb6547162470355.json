{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\director\\contenidosDocente.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\director\\contenidosDocente.vue","mtime":1712682815731},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\babel.config.js","mtime":1712682813877},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\.babelrc","mtime":1712682813750},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport axios from 'axios';\nimport vSelect from 'vue-select';\nexport default {\n  props: {\n    datoU: Object\n  },\n  components: {\n    'v-select': vSelect\n  },\n  data: function data() {\n    return {\n      docente: '',\n      listaVisitas: [],\n      cursosDocente: [],\n      libros: [],\n      tmplibros: '',\n      datoU: '',\n      oculto: false,\n      grupo_usuario: 0\n    };\n  },\n  mounted: function mounted() {\n    var me = this;\n    // me.datoU = JSON.parse(localStorage.getItem('datoUser'))\n    localStorage.removeItem(\"idDocente\");\n    localStorage.removeItem(\"idlibro\");\n    localStorage.removeItem(\"idasignatura\");\n    localStorage.removeItem(\"nombreasignatura\");\n    // console.log(me.datoU)\n    //me.grupo_usuario = me.datoU.id_group;\n    // me.getCursos();\n    me.getLibros();\n    // me.getVisitas();\n  },\n  methods: {\n    regresar: function regresar() {\n      this.$emit(\"estado\", {\n        plista: true,\n        pnuevo: false,\n        peditar: false\n      });\n    },\n    getCursos: function getCursos() {\n      var me = this;\n      me.$vs.loading();\n      this.$http.get(this.$server_url + 'cursos_x_usuario/' + me.datoU.name_usuario).then(function (res) {\n        if (res.data.length > 0) {\n          me.cursosDocente = res.data;\n          me.$vs.loading.close();\n        } else {\n          me.$vs.notify({\n            text: 'No se encontraron registros',\n            color: 'warning',\n            iconPack: 'feather',\n            icon: 'icon-alert-triangle'\n          });\n        }\n      }).catch(function (error) {\n        me.$vs.loading.close();\n        console.log(' no se conecto a consultar los cursos ' + error);\n      });\n    },\n    getLibros: function getLibros() {\n      var me = this;\n      me.$vs.loading();\n      this.$http.get(this.$server_url + 'libros?idusuario=' + me.datoU.idusuario + '&periodo_id=' + localStorage.periodo_id).then(function (response) {\n        me.libros = response.data;\n        // console.log(me.libros)\n        me.$vs.loading.close();\n        me.getAsignaturasDocente();\n      }).catch(function (error) {\n        console.log('error al conectar a los libros del docente ' + error);\n        me.$vs.loading.close();\n      });\n    },\n    getAsignaturasDocente: function getAsignaturasDocente() {\n      var me = this;\n      me.$vs.loading();\n      this.$http.get(this.$server_url + 'asignaturas_crea_docente/' + me.datoU.idusuario).then(function (response) {\n        me.tmplibros = response.data;\n        for (var index = 0; index < me.tmplibros.length; index++) {\n          me.libros.push(me.tmplibros[index]);\n        }\n        // console.log(me.libros)\n        me.$vs.loading.close();\n      }).catch(function (error) {\n        me.$vs.loading.close();\n      });\n    },\n    contenidoCurso: function contenidoCurso(item) {\n      var me = this;\n      console.log(item);\n      localStorage.datoUser = JSON.stringify(item);\n    },\n    verPDF: function verPDF(url) {\n      localStorage.url = url;\n      window.open('/docente/libro/pdfsinguia', '_blank');\n    },\n    irDesgloseLibro: function irDesgloseLibro(item) {\n      var me = this;\n      // console.log(item)\n      // para consulta del DIRECTOR\n      localStorage.idDocente = me.datoU.idusuario;\n      // fin para consulta del DIRECTOR\n      localStorage.idlibro = item.idlibro;\n      localStorage.idasignatura = item.idasignatura;\n      localStorage.nombreasignatura = item.nombreasignatura;\n      localStorage.tipo_asignatura = \"prolipa\"; //asignaturas de prolipa\n      me.$router.push('/director/institucion/docentes/contenidos/libro');\n    }\n  }\n};",{"version":3,"names":["Vue","axios","vSelect","props","datoU","Object","components","data","docente","listaVisitas","cursosDocente","libros","tmplibros","oculto","grupo_usuario","mounted","me","localStorage","removeItem","getLibros","methods","regresar","$emit","plista","pnuevo","peditar","getCursos","$vs","loading","$http","get","$server_url","name_usuario","then","res","length","close","notify","text","color","iconPack","icon","catch","error","console","log","idusuario","periodo_id","response","getAsignaturasDocente","index","push","contenidoCurso","item","datoUser","JSON","stringify","verPDF","url","window","open","irDesgloseLibro","idDocente","idlibro","idasignatura","nombreasignatura","tipo_asignatura","$router"],"sources":["src/views/director/contenidosDocente.vue"],"sourcesContent":["<template>\r\n<div class=\"vx-col md:w-full w-full mb-base\">\r\n    <vs-button class=\"mb-4\" color=\"dark\" icon-pack=\"feather\" icon=\"icon-arrow-left\" @click=\"regresar\">Regresar</vs-button>\r\n    <vx-card>\r\n        <p><b>Nombre:</b> {{datoU.nombres}} {{datoU.apellidos}} </p>\r\n        <p><b>Email:</b> {{datoU.email}} </p>\r\n        <p><b>Cédula:</b> {{datoU.cedula}} </p>\r\n\r\n        <div class=\"mt-5\">\r\n            <vs-tabs alignment=\"fixed\">\r\n                <vs-tab v-if=\"oculto\" :label=\"'Cursos ( '+cursosDocente.length+' )'\">\r\n                    <div v-if=\"cursosDocente.length>0\">\r\n                        <vs-table max-items=\"30\" search pagination :data=\"cursosDocente\">\r\n                            <template slot=\"header\">\r\n                                Total de cursos: &nbsp; <b>{{cursosDocente.length}}</b>\r\n                            </template>\r\n                            <template slot=\"thead\">\r\n                                <vs-th sort-key=\"codigo\">Código curso</vs-th>\r\n                                <vs-th>Datos</vs-th>\r\n                                <vs-th sort-key=\"updated_at\">Fecha</vs-th>\r\n                                <vs-th sort-key=\"estado\">Estado</vs-th>\r\n                                <vs-th>Acciones</vs-th>\r\n                            </template>\r\n                            <template slot-scope=\"{data}\">\r\n                                <vs-tr :data=\"tr\" :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                                    <vs-td :data=\"data[indextr].codigo\">\r\n                                        {{ data[indextr].codigo }}\r\n                                    </vs-td>\r\n                                    <vs-td :data=\"data[indextr].nombre\">\r\n                                        <b>Nombre:</b> {{ data[indextr].nombre }}<br>\r\n                                        <b>Aula:</b> {{ data[indextr].aula }}<br>\r\n                                        <b>Seccion:</b> {{ data[indextr].seccion }}\r\n                                        <span v-if=\"data[indextr].id_asignatura == 0\" class=\"text-danger\"> <br> Sin asignatura</span>\r\n                                    </vs-td>\r\n                                    <vs-td :data=\"data[indextr].updated_at\">\r\n                                        <small> Actualizado: {{ data[indextr].updated_at }}<br>\r\n                                            Creado: {{ data[indextr].created_at }}</small>\r\n                                    </vs-td>\r\n                                    <vs-td :data=\"data[indextr].estado\">\r\n                                        <span v-if=\"data[indextr].estado ==0\" class=\"text-danger\">Eliminado</span>\r\n                                        <span v-else class=\"text-success\">Activo</span>\r\n                                    </vs-td>\r\n                                    <vs-td>\r\n                                        <!-- <vx-tooltip style=\"display: inline-block;\" text=\"Ver contenido del curso\" position=\"top\" color=\"success\">\r\n                                            <vs-button style=\"display:inline-block\" class=\"mt-2\" radius color=\"success\" type=\"gradient\" icon-pack=\"feather\" icon=\"icon-eye\" @click=\"contenidoCurso(data[indextr])\"></vs-button>\r\n                                        </vx-tooltip> -->\r\n\r\n                                    </vs-td>\r\n                                </vs-tr>\r\n                            </template>\r\n                        </vs-table>\r\n                    </div>\r\n                    <div v-else>\r\n                        <p class=\"p-5\"> No tenemos registros de este usuario en nuestra base de datos. </p>\r\n                    </div>\r\n                </vs-tab>\r\n                <vs-tab :label=\"'Libros ( '+libros.length+' )'\">\r\n                    <div v-if=\"libros.length>0\">\r\n                        <vs-table max-items=\"30\" search pagination :data=\"libros\" stripe>\r\n                            <template slot=\"header\">\r\n                                Total de asginaturas: &nbsp; <b>{{libros.length}}</b>\r\n                            </template>\r\n                            <template slot=\"thead\">\r\n                                <vs-th sort-key=\"nombreasignatura\">Asignatura</vs-th>\r\n                                <vs-th sort-key=\"nombres\">Ver contenido</vs-th>\r\n                            </template>\r\n                            <template slot-scope=\"{data}\">\r\n                                <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                                    <vs-td>\r\n                                        {{data[indextr].nombreasignatura}}\r\n                                    </vs-td>\r\n                                    <vs-td>\r\n                                        <span @click=\"irDesgloseLibro(data[indextr])\">\r\n                                            <vs-avatar v-if=\"data[indextr].weblibro != null \" size=\"50px\" v-bind:src=\"$data_url+'archivos/upload/libro/'+data[indextr].weblibro+'/portada.png'\" alt=\"Card image cap\" />\r\n                                            <vs-avatar v-else size=\"50px\" :src=\"$data_url+'archivos/upload/iconos/docente-curso/cursos.png'\" alt=\"libro\" />\r\n                                        </span>\r\n                                    </vs-td>\r\n                                </vs-tr>\r\n                            </template>\r\n                        </vs-table>\r\n                    </div>\r\n                    <div v-else>\r\n                        <p class=\"p-5\"> No se han asignado libros de Prolipa a este docente. </p>\r\n                    </div>\r\n                </vs-tab>\r\n                <vs-tab :label=\"'Visitas ('+listaVisitas.length+' )' \">\r\n                    <div v-if=\"listaVisitas.length>0\">\r\n                        <vs-table max-items=\"30\" search pagination :data=\"listaVisitas\">\r\n                            <template slot=\"header\">\r\n                                Total de accesos: &nbsp; <b>{{listaVisitas.length}}</b>\r\n                            </template>\r\n                            <template slot=\"thead\">\r\n                                <vs-th sort-key=\"cedula\">Fecha</vs-th>\r\n                                <vs-th sort-key=\"nombres\">Hora</vs-th>\r\n                            </template>\r\n                            <template slot-scope=\"{data}\">\r\n                                <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                                    <vs-td>\r\n                                        {{data[indextr].fecha}}\r\n                                    </vs-td>\r\n                                    <vs-td>\r\n                                        {{ data[indextr].hora}}\r\n                                    </vs-td>\r\n                                </vs-tr>\r\n                            </template>\r\n                        </vs-table>\r\n                    </div>\r\n                    <div v-else>\r\n                        <p class=\"p-5\"> No tenemos registros de este usuario en nuestra base de datos. </p>\r\n                    </div>\r\n                </vs-tab>\r\n            </vs-tabs>\r\n        </div>\r\n    </vx-card>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport Vue from 'vue'\r\nimport axios from 'axios'\r\nimport vSelect from 'vue-select'\r\nexport default {\r\n    props:{\r\n        datoU:Object\r\n    },\r\n    components: {\r\n        'v-select': vSelect,\r\n    },\r\n    data() {\r\n        return {\r\n            docente: '',\r\n            listaVisitas: [],\r\n            cursosDocente: [],\r\n            libros: [],\r\n            tmplibros: '',\r\n            datoU: '',\r\n            oculto: false,\r\n            grupo_usuario: 0,\r\n        }\r\n    },\r\n    mounted() {\r\n        let me = this;\r\n        // me.datoU = JSON.parse(localStorage.getItem('datoUser'))\r\n        localStorage.removeItem(\"idDocente\");\r\n        localStorage.removeItem(\"idlibro\");\r\n        localStorage.removeItem(\"idasignatura\");\r\n        localStorage.removeItem(\"nombreasignatura\");\r\n        // console.log(me.datoU)\r\n        //me.grupo_usuario = me.datoU.id_group;\r\n        // me.getCursos();\r\n        me.getLibros();\r\n        // me.getVisitas();\r\n    },\r\n    methods: {\r\n        regresar() {\r\n            this.$emit(\"estado\", {\r\n                plista: true,\r\n                pnuevo: false,\r\n                peditar: false,\r\n            });\r\n        },\r\n        getCursos() {\r\n            let me = this;\r\n            me.$vs.loading();\r\n            this.$http.get(this.$server_url+'cursos_x_usuario/' + me.datoU.name_usuario)\r\n                .then(res => {\r\n                    if (res.data.length > 0) {\r\n                        me.cursosDocente = res.data;\r\n                        me.$vs.loading.close();\r\n                    } else {\r\n                        me.$vs.notify({\r\n                            text: 'No se encontraron registros',\r\n                            color: 'warning',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-alert-triangle'\r\n                        })\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    me.$vs.loading.close();\r\n                    console.log(' no se conecto a consultar los cursos ' + error)\r\n                })\r\n        },\r\n        getLibros() {\r\n            let me = this;\r\n            me.$vs.loading();\r\n            this.$http.get(this.$server_url+'libros?idusuario=' + me.datoU.idusuario+'&periodo_id='+localStorage.periodo_id)\r\n                .then(function (response) {\r\n                    me.libros = response.data\r\n                    // console.log(me.libros)\r\n                    me.$vs.loading.close();\r\n                    me.getAsignaturasDocente();\r\n                })\r\n                .catch(function (error) {\r\n                    console.log('error al conectar a los libros del docente ' + error)\r\n                    me.$vs.loading.close();\r\n                })\r\n\r\n        },\r\n        getAsignaturasDocente() {\r\n            let me = this;\r\n            me.$vs.loading();\r\n            this.$http.get(this.$server_url+'asignaturas_crea_docente/' + me.datoU.idusuario)\r\n                .then(function (response) {\r\n                    me.tmplibros = (response.data)\r\n                    for (let index = 0; index < me.tmplibros.length; index++) {\r\n                        me.libros.push(me.tmplibros[index])\r\n                    }\r\n                    // console.log(me.libros)\r\n                    me.$vs.loading.close();\r\n\r\n                })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close();\r\n\r\n                })\r\n        },\r\n        contenidoCurso(item) {\r\n            let me = this;\r\n            console.log(item)\r\n            localStorage.datoUser = JSON.stringify(item);\r\n        },\r\n        verPDF(url) {\r\n            localStorage.url = url;\r\n            window.open('/docente/libro/pdfsinguia', '_blank');\r\n        },\r\n        irDesgloseLibro(item) {\r\n            let me = this\r\n            // console.log(item)\r\n            // para consulta del DIRECTOR\r\n            localStorage.idDocente = me.datoU.idusuario\r\n            // fin para consulta del DIRECTOR\r\n            localStorage.idlibro = item.idlibro\r\n            localStorage.idasignatura = item.idasignatura\r\n            localStorage.nombreasignatura = item.nombreasignatura\r\n            localStorage.tipo_asignatura = \"prolipa\"; //asignaturas de prolipa\r\n            me.$router.push('/director/institucion/docentes/contenidos/libro')\r\n        },\r\n    }\r\n}\r\n</script>\r\n"],"mappings":"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","ignoreList":[]}]}