{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\codigos\\paquetes\\version2\\paquetes\\ImportPaquetes2.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\codigos\\paquetes\\version2\\paquetes\\ImportPaquetes2.vue","mtime":1712682815685},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\babel.config.js","mtime":1712682813877},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\.babelrc","mtime":1712682813750},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.string.starts-with\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/laragon/www/PRY_NEW_JEYSON/LOCAL/plataformaprolipa_vue/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _defineProperty from \"C:/laragon/www/PRY_NEW_JEYSON/LOCAL/plataformaprolipa_vue/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { mapState } from \"vuex\";\nvar TableRadiosCodigosListaVue = function TableRadiosCodigosListaVue() {\n  return import(\"../../../components/utils/components/GestionLiquidacion/TableRadiosCodigosLista.vue\");\n};\nvar ImportExcel = function ImportExcel() {\n  return import(\"../../../components/importExcel.vue\");\n};\nvar TablaErroresPaqueteVue = function TablaErroresPaqueteVue() {\n  return import(\"../../components/TablaErroresPaquete.vue\");\n};\nimport vSelect from 'vue-select';\nexport default {\n  components: {\n    ImportExcel: ImportExcel,\n    vSelect: vSelect,\n    TableRadiosCodigosListaVue: TableRadiosCodigosListaVue,\n    TablaErroresPaqueteVue: TablaErroresPaqueteVue\n  },\n  data: function data() {\n    return {\n      codigosPerdidos: false,\n      tableData: [],\n      header: [],\n      sheetName: '',\n      usuario: [],\n      modalConfirm: false,\n      modalErrores: false,\n      errores: [],\n      //variables para codigos union\n      codigosSinCodigoUnion: [],\n      popupProblemasCodigosUnion: false,\n      //fin variables para codigos union\n      arregloProblemasPaquete: [],\n      arregloFormatoSend: [],\n      totalCodigos: 0,\n      totalCodigosReal: 0,\n      popupProblemasDiagnostico: false,\n      arrayPaquetes: 0,\n      arregloResumen: [],\n      codigoConProblemas: [],\n      arregloErroresPaquetes: [],\n      popupConfirmTipoImportado: false,\n      ifOnlyCode: 0,\n      onlyCodes: 1\n    };\n  },\n  created: function created() {\n    this.usuario = JSON.parse(localStorage.getItem('usuario'));\n    this.codigosPerdidos = false;\n  },\n  computed: _objectSpread(_objectSpread({}, mapState([\"auth\", 'userRoot', 'susuario', 'userAsesor'])), {}, {\n    sumaIngresadosA: function sumaIngresadosA() {\n      var me = this;\n      if (me.arregloResumen.length > 0) {\n        var datosA = me.arregloResumen.filter(function (p) {\n          return p.ingresoA;\n        });\n        var resultado = datosA.reduce(function (a, b) {\n          return a + (b[\"ingresoA\"] || 0);\n        }, 0);\n        return resultado;\n      }\n    },\n    sumaIngresadosD: function sumaIngresadosD() {\n      var me = this;\n      if (me.arregloResumen.length > 0) {\n        var datosD = me.arregloResumen.filter(function (p) {\n          return p.ingresoD;\n        });\n        var resultado = datosD.reduce(function (a, b) {\n          return a + (b[\"ingresoD\"] || 0);\n        }, 0);\n        return resultado;\n      }\n    },\n    sumaNoIngresados: function sumaNoIngresados() {\n      var me = this;\n      if (me.arregloResumen.length > 0) {\n        //activacion\n        var datosA = me.arregloResumen.filter(function (p) {\n          return p.ingresoA;\n        });\n        var resultadoA = datosA.reduce(function (a, b) {\n          return a + (b[\"ingresoA\"] || 0);\n        }, 0);\n        //diagnostico\n        var datosD = me.arregloResumen.filter(function (p) {\n          return p.ingresoD;\n        });\n        var resultadoD = datosD.reduce(function (a, b) {\n          return a + (b[\"ingresoD\"] || 0);\n        }, 0);\n        var total = me.totalCodigos - (resultadoA + resultadoD);\n        return total;\n      }\n    },\n    sumaNoExisteA: function sumaNoExisteA() {\n      var me = this;\n      if (me.arregloResumen.length > 0) {\n        var datosD = me.arregloResumen.filter(function (p) {\n          return p.noExisteA;\n        });\n        var resultado = datosD.reduce(function (a, b) {\n          return a + (b[\"noExisteA\"] || 0);\n        }, 0);\n        return resultado;\n      }\n    },\n    sumaNoExisteD: function sumaNoExisteD() {\n      var me = this;\n      if (me.arregloResumen.length > 0) {\n        var datosD = me.arregloResumen.filter(function (p) {\n          return p.noExisteD;\n        });\n        var resultado = datosD.reduce(function (a, b) {\n          return a + (b[\"noExisteD\"] || 0);\n        }, 0);\n        return resultado;\n      }\n    }\n  }),\n  methods: {\n    loadDataInTable: function loadDataInTable(_ref) {\n      var results = _ref.results,\n        header = _ref.header,\n        meta = _ref.meta;\n      var me = this;\n      this.codigosPerdidos = false;\n      this.arregloResumen = [];\n      this.codigoConProblemas = [];\n      this.arregloErroresPaquetes = [];\n      this.header = header;\n      this.tableData = results;\n      this.sheetName = meta.sheetName;\n      this.popupConfirmTipoImportado = true;\n      this.onlyCodes = 1;\n      // me.validateCodigosPaquetes()\n    },\n    validateCodigosPaquetes: function () {\n      var _validateCodigosPaquetes = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var me, datos, preDatos, arrayNormal, objetosFiltrados, nextPaquete, _loop, i;\n        return regeneratorRuntime.wrap(function _callee$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              me = this;\n              me.arregloProblemasPaquete = [];\n              me.arregloFormatoSend = [];\n              me.arrayPaquetes = 0;\n              me.totalCodigosReal = 0;\n              me.totalCodigos = 0;\n              datos = [];\n              preDatos = [];\n              datos = me.tableData;\n              datos.map(function (item) {\n                var obj = new Object();\n                obj.codigo = item.codigo.trim();\n                preDatos.push(obj);\n              });\n              console.log(\"preDatos\", preDatos);\n              arrayNormal = JSON.parse(JSON.stringify(preDatos)); //DE LO CONTRARIO VAMOS A VALIDAR CON LA BASE\n              objetosFiltrados = arrayNormal.filter(function (objeto) {\n                return objeto.codigo.toLowerCase().startsWith('paq-');\n              });\n              me.arrayPaquetes = objetosFiltrados;\n              me.totalCodigos = arrayNormal.length - me.arrayPaquetes.length;\n              //PROCESO\n              // Crear un nuevo array resultante\n              nextPaquete = 1;\n              _loop = /*#__PURE__*/regeneratorRuntime.mark(function _loop() {\n                var nuevoArray, preArray, getPosicion, codigoBuscado, posicionCodigoBuscado, resultado1, resultado2;\n                return regeneratorRuntime.wrap(function _loop$(_context) {\n                  while (1) switch (_context.prev = _context.next) {\n                    case 0:\n                      nuevoArray = [];\n                      preArray = []; //tomo el siguiente paquete y valido si fuera el ultimo\n                      getPosicion = objetosFiltrados[nextPaquete]; //UNDEFINED PORQUE BUSCO EL PROXIMO PAQUETE PARA SABER QUE ES EL ULTIMO\n                      if (!(getPosicion !== undefined)) {\n                        _context.next = 13;\n                        break;\n                      }\n                      //busco la posicion del ultimo paquete para agarrar los codigos hasta la ultima posicion del proximo paquete\n                      codigoBuscado = objetosFiltrados[nextPaquete].codigo;\n                      posicionCodigoBuscado = arrayNormal.findIndex(function (objeto) {\n                        return objeto.codigo === codigoBuscado;\n                      });\n                      nuevoArray.push(arrayNormal.splice(0, posicionCodigoBuscado));\n                      preArray = nuevoArray[0];\n                      _context.next = 10;\n                      return me.ChangeArray(preArray);\n                    case 10:\n                      resultado1 = _context.sent;\n                      _context.next = 18;\n                      break;\n                    case 13:\n                      nuevoArray.push(arrayNormal);\n                      preArray = nuevoArray[0];\n                      _context.next = 17;\n                      return me.ChangeArray(preArray);\n                    case 17:\n                      resultado2 = _context.sent;\n                    case 18:\n                      nextPaquete++;\n                    case 19:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }, _loop);\n              });\n              i = 0;\n            case 19:\n              if (!(i < objetosFiltrados.length)) {\n                _context2.next = 24;\n                break;\n              }\n              return _context2.delegateYield(_loop(), \"t0\", 21);\n            case 21:\n              i++;\n              _context2.next = 19;\n              break;\n            case 24:\n              console.log(\"totalCodigos\", me.totalCodigos);\n              console.log(\"totalCodigosReal\", me.totalCodigosReal);\n              //validar que los codigos paquetes tenga los codigos correctos\n              if (me.totalCodigos != me.totalCodigosReal) {\n                // me.arregloProblemasPaquete = []\n                // me.setErrorsPaquetes(\"En todos los paquetes\",\"Hay problemas con los paquetes corrija por favor\",[],me.arrayPaquetes)\n              }\n              if (me.arregloProblemasPaquete.length > 0) {\n                me.popupProblemasDiagnostico = true;\n              }\n              _context2.next = 34;\n              break;\n            case 30:\n              _context2.prev = 30;\n              _context2.t1 = _context2[\"catch\"](0);\n              console.log(_context2.t1);\n              alert(\"Hubo errores en el archivo\");\n            case 34:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee, this, [[0, 30]]);\n      }));\n      function validateCodigosPaquetes() {\n        return _validateCodigosPaquetes.apply(this, arguments);\n      }\n      return validateCodigosPaquetes;\n    }(),\n    ChangeArray: function () {\n      var _ChangeArray = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(array) {\n        var me, problema, preArray, getCodigoPaquete, codigoPaquete, arrayHijos, ifError, paqueteMinuscula;\n        return regeneratorRuntime.wrap(function _callee2$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              me = this;\n              problema = \"\";\n              preArray = array.flat(10);\n              getCodigoPaquete = preArray.splice(0, 1);\n              codigoPaquete = getCodigoPaquete[0].codigo;\n              arrayHijos = preArray;\n              ifError = false; //VALIDAR CODIGO DE PAQUETE\n              paqueteMinuscula = codigoPaquete.toLowerCase();\n              if (!paqueteMinuscula.startsWith(\"paq-\")) {\n                problema = \"Problema con el paquete, formato incorrecto del paquete\";\n                ifError = true;\n              }\n              //VALIDAR LA CANTIDAD DE CODIGOS HIJOS UN SOLO CODIGO\n              if (me.ifOnlyCode == 2) {\n                if (arrayHijos.length == 5 || arrayHijos.length == 10) {\n                  me.totalCodigosReal = me.totalCodigosReal + arrayHijos.length;\n                  me.generateFormato(codigoPaquete, arrayHijos);\n                } else {\n                  problema = \"Problema con el paquete, insuficiencia de códigos\";\n                  ifError = true;\n                }\n              }\n              //2 CODIGOS ACTIVACION Y DIAGNOSTICA o DIAGNOSTICA Y ACTIVACION\n              else {\n                if (arrayHijos.length == 10 || arrayHijos.length == 20 || arrayHijos.length == 2) {\n                  me.totalCodigosReal = me.totalCodigosReal + arrayHijos.length;\n                  me.generateFormato(codigoPaquete, arrayHijos);\n                } else {\n                  console.log(\"arrayHijos\", arrayHijos.length, 'codigoPaquete', codigoPaquete);\n                  problema = \"Problema con el paquete, insuficiencia de códigos\";\n                  ifError = true;\n                }\n              }\n              if (ifError) {\n                me.setErrorsPaquetes(codigoPaquete, problema, arrayHijos);\n              }\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee2, this);\n      }));\n      function ChangeArray(_x) {\n        return _ChangeArray.apply(this, arguments);\n      }\n      return ChangeArray;\n    }(),\n    generateFormato: function generateFormato(codigoPaquete, codigosHijos) {\n      var me = this;\n      //2 codigos\n      var getcodigos = [];\n      if (me.ifOnlyCode == 0 || me.ifOnlyCode == 1) {\n        getcodigos = me.formatoHijos(codigoPaquete, codigosHijos);\n      } else {\n        getcodigos = codigosHijos;\n      }\n      var cal = new Object();\n      cal.codigoPaquete = codigoPaquete;\n      cal.codigosHijos = getcodigos;\n      me.arregloFormatoSend.push(cal);\n    },\n    formatoHijos: function formatoHijos(codigoPaquete, codigosHijos) {\n      var me = this;\n      var arregloSetear = [];\n      var arrayCodigosErrores = [];\n      codigosHijos.forEach(function (element) {\n        var obj = new Object();\n        obj.codigo = element.codigo;\n        arregloSetear.push(obj);\n      });\n      var preValores = [];\n      var codigosMostrar = [];\n      preValores = arregloSetear;\n      var getLongitud = arregloSetear.length;\n      var longitud = getLongitud / 2;\n      for (var i = 0; i < longitud; i++) {\n        // Creamos un nuevo array para almacenar los objetos quitados\n        var nuevoArray = [];\n        var problemaCodigos = [];\n        var codigoActivacion = \"\";\n        var codigoDiagnostico = \"\";\n        // Quitamos los dos primeros objetos del array original y los agregamos al nuevo array\n        nuevoArray.push(preValores.splice(0, 2));\n        var setear = nuevoArray.flat();\n        if (setear.length == 1) {\n          var cal = new Object();\n          //ACTIVACION - DIAGNOSTICO)\n          if (me.ifOnlyCode == 0) {\n            cal.codigoActivacion = setear[0].codigo;\n            cal.codigoDiagnostico = \"\";\n          }\n          //DIAGNOSTICO - ACTIVACION)\n          if (me.ifOnlyCode == 1) {\n            cal.codigoDiagnostico = setear[0].codigo;\n            cal.codigoActivacion = \"\";\n          }\n          cal.problema = 'formato';\n          problemaCodigos.push(cal);\n          arrayCodigosErrores.push(problemaCodigos);\n        } else {\n          //ACTIVACION - DIAGNOSTICO)\n          if (me.ifOnlyCode == 0) {\n            codigoActivacion = setear[0].codigo;\n            codigoDiagnostico = setear[1].codigo;\n          }\n          //DIAGNOSTICO - ACTIVACION)\n          if (me.ifOnlyCode == 1) {\n            codigoDiagnostico = setear[0].codigo;\n            codigoActivacion = setear[1].codigo;\n          }\n          var cal = new Object();\n          cal.codigoActivacion = codigoActivacion;\n          cal.codigoDiagnostico = codigoDiagnostico;\n          codigosMostrar.push(cal);\n          //VALIDACION\n          var codigosErrores = me.validacionErrores(codigoActivacion, codigoDiagnostico);\n          if (codigosErrores.length > 0) {\n            //si existe errores de formato de los codigos hijos cambio para que se pueda mostrar\n            me.onlyCodes = 0;\n            arrayCodigosErrores.push(codigosErrores);\n          }\n        } //fin else\n      } //fin for\n      //enviar errores\n      if (arrayCodigosErrores.length > 0) {\n        me.setErrorsPaquetes(codigoPaquete, \"Problema en el formato de los codigos hijos\", arrayCodigosErrores);\n      }\n      return codigosMostrar;\n    },\n    validacionErrores: function validacionErrores(codigoActivacion, codigoDiagnostico) {\n      var me = this;\n      var problemaCodigos = [];\n      //============ACTIVACION==================================\n      //VALIDACION SI NO SON STRING\n      if (typeof codigoActivacion !== 'string' || typeof codigoDiagnostico !== 'string') {\n        var cal = new Object();\n        cal.codigoActivacion = codigoActivacion;\n        cal.codigoDiagnostico = codigoDiagnostico;\n        cal.problema = 'formato';\n        problemaCodigos.push(cal);\n      } else {\n        var activacionMinuscula = codigoActivacion.toLowerCase();\n        //validar que el codigo de activacion no tenga una P\n        if (activacionMinuscula.startsWith(\"p\")) {\n          //validar meñique que el codigo de activacion se permita empezar por p DONDE SEA PLM no hago nada\n          if (activacionMinuscula.startsWith(\"plm\")) {} else {\n            var cal = new Object();\n            cal.codigoActivacion = codigoActivacion;\n            cal.codigoDiagnostico = codigoDiagnostico;\n            cal.problema = 'activacion';\n            problemaCodigos.push(cal);\n          }\n        }\n        //=============DIAGNOSTICO===================================\n        //validar que el codigo de activacion tenga una P\n        var diagnosticoMinuscula = codigoDiagnostico.toLowerCase();\n        //validar si es meñique debe tener 2 pp\n        if (activacionMinuscula.startsWith(\"plm\")) {\n          //si no inicia por 2 pp\n          if (!diagnosticoMinuscula.startsWith(\"pp\")) {\n            var cal = new Object();\n            cal.codigoActivacion = codigoActivacion;\n            cal.codigoDiagnostico = codigoDiagnostico;\n            cal.problema = 'diagnostico';\n            problemaCodigos.push(cal);\n          }\n        }\n        //diferente a meñique\n        else {\n          if (!diagnosticoMinuscula.startsWith(\"p\")) {\n            var cal = new Object();\n            cal.codigoActivacion = codigoActivacion;\n            cal.codigoDiagnostico = codigoDiagnostico;\n            cal.problema = 'diagnostico';\n            problemaCodigos.push(cal);\n          }\n        }\n      }\n      return problemaCodigos;\n    },\n    setErrorsPaquetes: function setErrorsPaquetes(codigoPaquete, problema, codigosErrores) {\n      var paquetes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n      var me = this;\n      var cal = new Object();\n      cal.codigoPaquete = codigoPaquete;\n      cal.problema = problema;\n      cal.codigosHijos = codigosErrores.flat(10);\n      cal.setpaquetes = paquetes;\n      me.arregloProblemasPaquete.push(cal);\n    },\n    procesarPagos: function procesarPagos() {\n      var me = this;\n      me.$vs.loading();\n      var json_pagos = JSON.stringify(me.arregloFormatoSend);\n      var formData = new FormData();\n      formData.append('data_codigos', json_pagos);\n      formData.append('id_usuario', me.usuario.idusuario);\n      formData.append('periodo_id', localStorage.periodo_id);\n      var url = \"\";\n      //Varias codigos\n      if (me.ifOnlyCode == 0 || me.ifOnlyCode == 1) {\n        url = this.$server_url + 'paquetes/guardarPaquete';\n      }\n      //un solo codigo\n      if (me.ifOnlyCode == 2) {\n        url = this.$server_url + 'paquetes/guardarPaquete2';\n      }\n      this.$http.post(url, formData).then(function (res) {\n        me.$vs.loading.close();\n        if (res.data.status == 0) {\n          me.$vs.notify({\n            text: res.data.message,\n            color: 'success',\n            iconPack: 'feather',\n            icon: 'icon-check'\n          });\n          return false;\n        }\n        me.$vs.notify({\n          text: 'Códigos procesados exitosamente',\n          color: 'success',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        me.modalConfirm = false;\n        me.tableData = [];\n        me.codigosPerdidos = true;\n        me.arregloResumen = res.data.arregloResumen;\n        me.codigoConProblemas = res.data.codigoConProblemas;\n        me.arregloErroresPaquetes = res.data.arregloErroresPaquetes;\n        // me.codigosLeidos = res.data.codigosLeidos\n        // me.codigosNoCambiados = res.data.codigosNoCambiados\n        // me.codigoNoExiste = res.data.codigoNoExiste\n        // me.codigosSinCodigoUnion  = res.data.codigosSinCodigoUnion\n        // if(me.codigosSinCodigoUnion.length > 0 && !me.userAsesor){\n        //   me.popupProblemasCodigosUnion = true\n        // }\n        // me.porcentaje = res.data.cambiados\n      }).catch(function (error) {\n        me.$vs.notify({\n          text: 'Verifique que la información se haya guardado correctamente.',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-alert-triangle'\n        });\n        me.$vs.loading.close();\n      });\n    },\n    openConfirm: function openConfirm(tipo) {\n      var me = this;\n      me.tipo_selected = tipo;\n      if (!me.tableData[0].codigo) {\n        me.$vs.loading.close();\n        me.$vs.notify({\n          text: 'Corrija el formato del excel y vuelva a intentar.',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-alert-triangle'\n        });\n        return;\n      }\n      me.errores = [];\n      $.each(me.tableData, function (key, value) {\n        if (!value.codigo) {\n          me.errores.push(value);\n        }\n      });\n      if (me.errores.length > 0) {\n        me.modalErrores = true;\n      } else {\n        me.modalConfirm = true;\n      }\n    },\n    recargar: function recargar() {\n      location.reload();\n    }\n  }\n};",{"version":3,"names":["mapState","TableRadiosCodigosListaVue","ImportExcel","TablaErroresPaqueteVue","vSelect","components","data","codigosPerdidos","tableData","header","sheetName","usuario","modalConfirm","modalErrores","errores","codigosSinCodigoUnion","popupProblemasCodigosUnion","arregloProblemasPaquete","arregloFormatoSend","totalCodigos","totalCodigosReal","popupProblemasDiagnostico","arrayPaquetes","arregloResumen","codigoConProblemas","arregloErroresPaquetes","popupConfirmTipoImportado","ifOnlyCode","onlyCodes","created","JSON","parse","localStorage","getItem","computed","_objectSpread","sumaIngresadosA","me","length","datosA","filter","p","ingresoA","resultado","reduce","a","b","sumaIngresadosD","datosD","ingresoD","sumaNoIngresados","resultadoA","resultadoD","total","sumaNoExisteA","noExisteA","sumaNoExisteD","noExisteD","methods","loadDataInTable","_ref","results","meta","validateCodigosPaquetes","_validateCodigosPaquetes","_asyncToGenerator","regeneratorRuntime","mark","_callee","datos","preDatos","arrayNormal","objetosFiltrados","nextPaquete","_loop","i","wrap","_callee$","_context2","prev","next","map","item","obj","Object","codigo","trim","push","console","log","stringify","objeto","toLowerCase","startsWith","nuevoArray","preArray","getPosicion","codigoBuscado","posicionCodigoBuscado","resultado1","resultado2","_loop$","_context","undefined","findIndex","splice","ChangeArray","sent","stop","delegateYield","t1","alert","apply","arguments","_ChangeArray","_callee2","array","problema","getCodigoPaquete","codigoPaquete","arrayHijos","ifError","paqueteMinuscula","_callee2$","_context3","flat","generateFormato","setErrorsPaquetes","_x","codigosHijos","getcodigos","formatoHijos","cal","arregloSetear","arrayCodigosErrores","forEach","element","preValores","codigosMostrar","getLongitud","longitud","problemaCodigos","codigoActivacion","codigoDiagnostico","setear","codigosErrores","validacionErrores","activacionMinuscula","diagnosticoMinuscula","paquetes","setpaquetes","procesarPagos","$vs","loading","json_pagos","formData","FormData","append","idusuario","periodo_id","url","$server_url","$http","post","then","res","close","status","notify","text","message","color","iconPack","icon","catch","error","openConfirm","tipo","tipo_selected","$","each","key","value","recargar","location","reload"],"sources":["src/views/codigos/paquetes/version2/paquetes/ImportPaquetes2.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <vs-popup title=\"Errores en excel de los codigos\" :active.sync=\"modalErrores\" style=\"padding: 0% !important;\">\r\n         <div class=\"w-full\" style=\"background: rgb(121,9,9); padding: 20px; border-radius: 5px; background: linear-gradient(90deg, rgba(121,9,9,1) 28%, rgba(255,0,48,1) 100%); color: white;\">\r\n           <div class=\"vx-row\">\r\n              <div class=\"vx-col sm:w-1/2 w-full\">\r\n                  <b>Código</b>\r\n              </div>\r\n          </div>\r\n          <vs-divider></vs-divider>\r\n          <div :key=\"index\" v-for=\"(item, index) in errores\">\r\n            <div class=\"vx-row\">\r\n                <div class=\"vx-col sm:w-1/2 w-full\">\r\n                    <span v-if=\"item.codigo\"> {{item.codigo}} </span>\r\n                </div>\r\n            </div>\r\n          </div>\r\n         </div>\r\n      </vs-popup>\r\n      <vs-popup small title=\"Confirmación\" :active.sync=\"modalConfirm\">\r\n        <div class=\"w-full mb-base\" align=\"center\">\r\n          <h4>Está seguro de aplicar estos códigos?</h4>\r\n          <h4 class=\"mt-3 text-warning\">Asignar: {{ totalCodigosReal }} códigos en {{ arrayPaquetes.length}} paquetes</h4>\r\n          <small v-if=\"ifOnlyCode == '0'\">Activación - Diagnóstica</small>\r\n          <small v-if=\"ifOnlyCode == '1'\">Diagnóstica - Activación</small>\r\n          <small v-if=\"ifOnlyCode == '2'\">Importación un solo código por libro</small>\r\n        </div>\r\n        <div class=\"w-full\" align=\"center\">\r\n          <vs-button class=\"mb-2\" color=\"danger\" type=\"gradient\" @click=\"procesarPagos()\"> Confirmar </vs-button>\r\n        </div>\r\n      </vs-popup>\r\n      <div class=\"mb-6 mt-5\" align=\"center\">\r\n        <div class=\"vx-col w-full\">\r\n          <p style=\"color:#369DDA;\">\r\n              <i class=\"fa fa-file\" aria-hidden=\"true\"></i> Importación de <b>paquetes</b> de códigos <span style=\"font-weight: bold;\">(no ingrese más de 100 paquetes en una sola carga.)</span>\r\n          </p>\r\n        </div>\r\n        <br/>\r\n        <import-excel :onSuccess=\"loadDataInTable\"  class=\"mb-4\" />\r\n        <!-- {{tableData}} -->\r\n        <vs-alert v-if=\"tableData.length > 0\" class=\"mb-3\" color=\"success\" icon-pack=\"feather\" icon=\"icon-alert-triangle\">\r\n            <span>Excel cargado exitosamente. ¿Está seguro de procesar estos códigos?</span><br>\r\n        </vs-alert>\r\n        <p v-if=\"tableData.length > 0\" class=\"text-danger\">\r\n          {{ ifOnlyCode == 0 ? 'Importación de codigo de activación y diagnóstica por libro'\r\n            :( ifOnlyCode == 1 ? 'Importación de codigo de diagnóstica y activación por libro ':  'Importacion de un solo codigo por libro' )\r\n          }}\r\n        </p>\r\n        <vs-row v-if=\"tableData.length > 0 && tableData.length <= 2000 && arregloProblemasPaquete.length == 0\" class=\"mt-3\">\r\n            <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\">\r\n              <vs-button class=\"mb-2\" color=\"primary\"  type=\"relief\" @click=\"validateCodigosPaquetes();openConfirm(0);\"> Importar {{ totalCodigosReal }} códigos en {{ arrayPaquetes.length }} paquetes </vs-button>\r\n            </vs-col>\r\n        </vs-row>\r\n        <div v-if=\"arregloProblemasPaquete.length > 0\" class=\"ml-5\" style=\"width:50%;\">\r\n          <vs-alert title=\"Archivo con inconvenientes\" color=\"danger\" active=\"true\">\r\n            <p class=\"text-center\">Existe <b>códigos</b> con problemas <b class=\"cursor-pointer\" style=\"background:black;color:white;padding:5px;border-radius:5px;\" @click=\"popupProblemasDiagnostico = true;\"><ion-icon name=\"code-outline\"></ion-icon> Mostrar códigos</b>\r\n            </p>\r\n          </vs-alert>\r\n        </div>\r\n        <!--RESULTADOS-->\r\n        <!--PAQUETES QUE NO EXISTEN-->\r\n        <vs-row v-if=\"codigosPerdidos == true && arregloErroresPaquetes.length > 0\">\r\n          <vs-card>\r\n            <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"6\">\r\n                <vs-list>\r\n                  <p>Cantidad <span>{{ arregloErroresPaquetes.length }}</span></p>\r\n                    <vs-list-header icon=\"supervisor_account\" title=\"Hubo problemas con algunos paquetes\"></vs-list-header>\r\n                    <vs-list-item :key=\"indextr\" v-for=\"(tr, indextr) in arregloErroresPaquetes\" icon=\"check\" :title=\"tr.paquete\" >\r\n                      <p> {{ tr.problema }}</p>\r\n                    </vs-list-item>\r\n                </vs-list>\r\n            </vs-col>\r\n          </vs-card>\r\n        </vs-row>\r\n        <!--RESUMEN DE CAMBIOS-->\r\n        <vs-row v-if=\"arregloResumen.length > 0\">\r\n          <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\" vs-sm=\"12\" vs-xs=\"12\" >\r\n            <vs-card>\r\n              <div class=\"header\">\r\n                <p style=\"font-weight: bold;\" class=\"text-2xl\">Resumen de la importación: </p>\r\n                <!--RESUMENT TOTAL CANTIDAD-->\r\n                <div class=\"flex justify-center mt-4\" style=\"font-size:10px;\">\r\n                  <ul class=\"features flex justify-center\">\r\n                    <li>\r\n                      <span class=\"icon\">\r\n                        <svg height=\"24\" width=\"24\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                          <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\r\n                          <path fill=\"currentColor\" d=\"M10 15.172l9.192-9.193 1.415 1.414L10 18l-6.364-6.364 1.414-1.414z\"></path>\r\n                        </svg>\r\n                      </span>\r\n                      <span><strong>Total Códigos Activación Importados: {{ sumaIngresadosA }} </strong></span>\r\n                    </li>\r\n                    <li>\r\n                      <span class=\"icon\">\r\n                        <svg height=\"24\" width=\"24\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                          <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\r\n                          <path fill=\"currentColor\" d=\"M10 15.172l9.192-9.193 1.415 1.414L10 18l-6.364-6.364 1.414-1.414z\"></path>\r\n                        </svg>\r\n                      </span>\r\n                      <span><strong>Total Códigos Diágnostico Importados: {{ sumaIngresadosD }} </strong></span>\r\n                    </li>\r\n                    <li>\r\n                      <span class=\"icon\">\r\n                        <svg height=\"24\" width=\"24\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                          <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\r\n                          <path fill=\"currentColor\" d=\"M10 15.172l9.192-9.193 1.415 1.414L10 18l-6.364-6.364 1.414-1.414z\"></path>\r\n                        </svg>\r\n                      </span>\r\n                      <span><strong>Total Códigos Afectados: {{ sumaIngresadosA + sumaIngresadosD }} </strong></span>\r\n                    </li>\r\n                    <li>\r\n                      <span class=\"icon\">\r\n                        <svg height=\"24\" width=\"24\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                          <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\r\n                          <path fill=\"currentColor\" d=\"M10 15.172l9.192-9.193 1.415 1.414L10 18l-6.364-6.364 1.414-1.414z\"></path>\r\n                        </svg>\r\n                      </span>\r\n                      <span><strong>Total paquetes: {{ arrayPaquetes.length }} </strong></span>\r\n                    </li>\r\n                    <li v-if=\"sumaNoIngresados > 0\">\r\n                      <span class=\"icon\">\r\n                        <svg height=\"24\" width=\"24\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                          <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\r\n                          <path fill=\"currentColor\" d=\"M10 15.172l9.192-9.193 1.415 1.414L10 18l-6.364-6.364 1.414-1.414z\"></path>\r\n                        </svg>\r\n                      </span>\r\n                      <span><strong>Códigos No ingresados: {{ sumaNoIngresados }} </strong></span>\r\n                    </li>\r\n                    <!--NO EXISTEN-->\r\n                    <li v-if=\"sumaNoExisteA > 0\">\r\n                      <span class=\"icon\">\r\n                        <svg height=\"24\" width=\"24\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                          <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\r\n                          <path fill=\"currentColor\" d=\"M10 15.172l9.192-9.193 1.415 1.414L10 18l-6.364-6.364 1.414-1.414z\"></path>\r\n                        </svg>\r\n                      </span>\r\n                      <span class=\"text-danger\"><strong>Total Códigos Activación No existen: {{ sumaNoExisteA }} </strong></span>\r\n                    </li>\r\n                    <li v-if=\"sumaNoExisteD > 0\">\r\n                      <span class=\"icon\">\r\n                        <svg height=\"24\" width=\"24\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                          <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\r\n                          <path fill=\"currentColor\" d=\"M10 15.172l9.192-9.193 1.415 1.414L10 18l-6.364-6.364 1.414-1.414z\"></path>\r\n                        </svg>\r\n                      </span>\r\n                      <span class=\"text-danger\"><strong>Total Códigos Diágnostico No existen: {{ sumaNoExisteD }} </strong></span>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n                <!--FIN DE TOTAL DE CODIGOS-->\r\n                <!--RESUMEN DE LA TABLA-->\r\n                <table class=\"tabla\">\r\n                    <tr>\r\n                      <th class=\"th1\">Paquete</th>\r\n                      <th class=\"th1\">Problemas</th>\r\n                      <th class=\"th1\">Ingresados</th>\r\n                    </tr>\r\n                    <tr v-for=\"(item,key) in arregloResumen\" :key=\"key\">\r\n                      <td class=\"td1\" style=\"border: 1px solid #f2f2f2;\">\r\n                        {{item.codigoPaquete}}\r\n                        <div class=\"flex justify-center mt-1\">\r\n                          <vs-chip color=\"danger\" v-if=\"item.mensaje == '1'\">No existe el paquete</vs-chip>\r\n                        </div>\r\n                      </td>\r\n                      <vs-td height=\"40%\" width=\"50%\" style=\"border: 1px solid #f2f2f2;\">\r\n                        <div class=\"overflow-y-auto h-24\" v-if=\"item.codigosHijos.length > 0\">\r\n                            <tr>\r\n                              <th class=\"th2\" style=\"font-size:10px;\">Codigo activacion</th>\r\n                              <th class=\"th2\">Codigo</th>\r\n                              <th class=\"th2\">Codigo union</th>\r\n                            </tr>\r\n                            <tr color=\"primary\" :key=\"index\" v-for=\"(item2,index) in item.codigosHijos\">\r\n                              <td class=\"td2\">{{ item2.codigo }}</td>\r\n                              <td class=\"td2\">{{ item2.codigoUnion }}</td>\r\n                              <td class=\"td2\">{{ item2.problema }}</td>\r\n                            </tr>\r\n                          </div>\r\n                        <div v-else>\r\n                          <p class=\"text-center\">No hay problemas</p>\r\n                        </div>\r\n                      </vs-td>\r\n                      <vs-td class=\"tdingreso\">\r\n                        <ul class=\"features flex justify-center\">\r\n                          <li>\r\n                            <span class=\"icon\">\r\n                              <svg height=\"24\" width=\"24\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\r\n                                <path fill=\"currentColor\" d=\"M10 15.172l9.192-9.193 1.415 1.414L10 18l-6.364-6.364 1.414-1.414z\"></path>\r\n                              </svg>\r\n                            </span>\r\n                            <span><strong>Códigos Activación Importados: {{ item.ingresoA }} </strong></span>\r\n                          </li>\r\n                          <li>\r\n                            <span class=\"icon\">\r\n                              <svg height=\"24\" width=\"24\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\r\n                                <path fill=\"currentColor\" d=\"M10 15.172l9.192-9.193 1.415 1.414L10 18l-6.364-6.364 1.414-1.414z\"></path>\r\n                              </svg>\r\n                            </span>\r\n                            <span><strong>Códigos Diágnostico Importados: {{ item.ingresoD }} </strong></span>\r\n                          </li>\r\n                          <li>\r\n                            <span class=\"icon\">\r\n                              <svg height=\"24\" width=\"24\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\r\n                                <path fill=\"currentColor\" d=\"M10 15.172l9.192-9.193 1.415 1.414L10 18l-6.364-6.364 1.414-1.414z\"></path>\r\n                              </svg>\r\n                            </span>\r\n                            <span><strong>Total Importados: {{ item.ingresoA+ item.ingresoD }} </strong></span>\r\n                          </li>\r\n                          <!--NO EXISTEN-->\r\n                          <li v-if=\"item.noExisteA > 0\">\r\n                            <span class=\"icon\">\r\n                              <svg height=\"24\" width=\"24\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\r\n                                <path fill=\"currentColor\" d=\"M10 15.172l9.192-9.193 1.415 1.414L10 18l-6.364-6.364 1.414-1.414z\"></path>\r\n                              </svg>\r\n                            </span>\r\n                            <span class=\"text-danger\"><strong>Códigos Activación No existen: {{ item.noExisteA }} </strong></span>\r\n                          </li>\r\n                          <li v-if=\"item.noExisteD > 0\">\r\n                            <span class=\"icon\">\r\n                              <svg height=\"24\" width=\"24\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\r\n                                <path fill=\"currentColor\" d=\"M10 15.172l9.192-9.193 1.415 1.414L10 18l-6.364-6.364 1.414-1.414z\"></path>\r\n                              </svg>\r\n                            </span>\r\n                            <span class=\"text-danger\"><strong>Códigos Diágnostico No existen: {{ item.noExisteD }} </strong></span>\r\n                          </li>\r\n                        </ul>\r\n                      </vs-td>\r\n                    </tr>\r\n                </table>\r\n              </div>\r\n            </vs-card>\r\n          </vs-col>\r\n        </vs-row>\r\n        <vs-row v-if=\"codigosPerdidos == true\">\r\n          <vx-card\r\n            title=\"Codigos que no se pudieron guardar\"\r\n            v-if=\"codigoConProblemas.length > 0\"\r\n            >\r\n            <TableRadiosCodigosListaVue :arregloCodigos=\"codigoConProblemas\" openModal=\"1\"/>\r\n          </vx-card>\r\n        </vs-row>\r\n      </div>\r\n      <vx-card v-if=\"tableData.length && header.length\">\r\n        <vs-table stripe pagination :max-items=\"10\" search :data=\"tableData\">\r\n          <template slot=\"header\">\r\n            <h4>Códigos a subir {{tableData.length}}</h4>\r\n          </template>\r\n          <template slot=\"thead\">\r\n            <vs-th :sort-key=\"heading\" v-for=\"heading in header\" :key=\"heading\">{{ heading }}</vs-th>\r\n          </template>\r\n          <template slot-scope=\"{data}\">\r\n            <vs-tr :data=\"tr\" :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n              <vs-td :data=\"col\" v-for=\"(col, indexcol) in data[indextr]\" :key=\"indexcol + col\">\r\n                {{ col }}\r\n              </vs-td>\r\n            </vs-tr>\r\n          </template>\r\n        </vs-table>\r\n      </vx-card>\r\n      <!--MODALES-->\r\n      <!--MODAL PROBLEMAS DIAGNOSTICO-->\r\n      <vs-popup fullscreen title=\"Problemas con los paquete\" :active.sync=\"popupProblemasDiagnostico\">\r\n        <TablaErroresPaqueteVue v-if=\"popupProblemasDiagnostico\" :items=\"10\" :arregloProblemasPaquete=\"arregloProblemasPaquete\" :onlyCodes=\"onlyCodes\"/>\r\n      </vs-popup>\r\n       <!--MODAL CONFIRMAR TIPO DE IMPORTADO-->\r\n      <vs-popup small title=\"Importación de Paquetes\" :active.sync=\"popupConfirmTipoImportado\" @close=\"validateCodigosPaquetes();\">\r\n        <p class=\"text-2xl text-warning font-bold text-center\">Que tipo de importación va a realizar?</p>\r\n        <div class=\"mt-4 mr-4 flex justify-center\">\r\n          <!-- <span class=\"mr-2\">Seleccione:</span> -->\r\n          <ul class=\"flex\">\r\n            <li>\r\n              <vs-radio v-model=\"ifOnlyCode\" vs-name=\"ifOnlyCode\" class=\"mr-4\" vs-value=\"0\">Activación - Diagnóstica</vs-radio>\r\n            </li>\r\n            <li>\r\n              <vs-radio v-model=\"ifOnlyCode\" vs-name=\"ifOnlyCode\" class=\"mr-2\" vs-value=\"1\">Diagnóstica - Activación</vs-radio>\r\n            </li>\r\n            <li>\r\n              <vs-radio v-model=\"ifOnlyCode\" class=\"ml-3\" vs-name=\"ifOnlyCode\" vs-value=\"2\">Activación</vs-radio>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div class=\"flex justify-center mt-5\">\r\n          <vs-button color=\"primary\" type=\"border\" @click=\"validateCodigosPaquetes();popupConfirmTipoImportado=false;\">Aceptar</vs-button>\r\n        </div>\r\n      </vs-popup>\r\n    </div>\r\n  </template>\r\n  <script>\r\n  import {\r\n    mapState\r\n  } from \"vuex\";\r\n  const TableRadiosCodigosListaVue      = () => import('../../../components/utils/components/GestionLiquidacion/TableRadiosCodigosLista.vue')\r\n  const ImportExcel                     = () => import('../../../components/importExcel.vue')\r\n  const TablaErroresPaqueteVue          = () => import('../../components/TablaErroresPaquete.vue')\r\n  import vSelect from 'vue-select'\r\n  export default {\r\n    components: {\r\n      ImportExcel,\r\n      vSelect,\r\n      TableRadiosCodigosListaVue,\r\n      TablaErroresPaqueteVue,\r\n    },\r\n    data () {\r\n      return {\r\n        codigosPerdidos:false,\r\n        tableData: [],\r\n        header: [],\r\n        sheetName: '',\r\n        usuario: [],\r\n        modalConfirm: false,\r\n        modalErrores: false,\r\n        errores: [],\r\n        //variables para codigos union\r\n        codigosSinCodigoUnion:[],\r\n        popupProblemasCodigosUnion:false,\r\n        //fin variables para codigos union\r\n        arregloProblemasPaquete:[],\r\n        arregloFormatoSend:[],\r\n        totalCodigos:0,\r\n        totalCodigosReal:0,\r\n        popupProblemasDiagnostico:false,\r\n        arrayPaquetes:0,\r\n        arregloResumen:[],\r\n        codigoConProblemas:[],\r\n        arregloErroresPaquetes:[],\r\n        popupConfirmTipoImportado:false,\r\n        ifOnlyCode:0,\r\n        onlyCodes:1,\r\n      }\r\n    },\r\n    created(){\r\n        this.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n        this.codigosPerdidos = false\r\n    },\r\n    computed:{\r\n      ...mapState([\"auth\",'userRoot','susuario','userAsesor']),\r\n      sumaIngresadosA(){\r\n        let me = this;\r\n        if(me.arregloResumen.length > 0){\r\n          let datosA = me.arregloResumen.filter(p => p.ingresoA)\r\n          let resultado = datosA.reduce((a, b) => a + (b[\"ingresoA\"] || 0), 0);\r\n          return resultado\r\n        }\r\n      },\r\n      sumaIngresadosD(){\r\n        let me = this;\r\n        if(me.arregloResumen.length > 0){\r\n          let datosD    = me.arregloResumen.filter(p => p.ingresoD)\r\n          let resultado = datosD.reduce((a, b) => a + (b[\"ingresoD\"] || 0), 0);\r\n          return resultado\r\n        }\r\n      },\r\n      sumaNoIngresados(){\r\n        let me = this;\r\n        if(me.arregloResumen.length > 0){\r\n          //activacion\r\n          let datosA = me.arregloResumen.filter(p => p.ingresoA)\r\n          let resultadoA = datosA.reduce((a, b) => a + (b[\"ingresoA\"] || 0), 0);\r\n          //diagnostico\r\n          let datosD     = me.arregloResumen.filter(p => p.ingresoD)\r\n          let resultadoD = datosD.reduce((a, b) => a + (b[\"ingresoD\"] || 0), 0);\r\n          let total      = me.totalCodigos - (resultadoA + resultadoD)\r\n          return total\r\n        }\r\n      },\r\n      sumaNoExisteA(){\r\n        let me = this;\r\n        if(me.arregloResumen.length > 0){\r\n          let datosD    = me.arregloResumen.filter(p => p.noExisteA)\r\n          let resultado = datosD.reduce((a, b) => a + (b[\"noExisteA\"] || 0), 0);\r\n          return resultado\r\n        }\r\n      },\r\n      sumaNoExisteD(){\r\n        let me = this;\r\n        if(me.arregloResumen.length > 0){\r\n          let datosD    = me.arregloResumen.filter(p => p.noExisteD)\r\n          let resultado = datosD.reduce((a, b) => a + (b[\"noExisteD\"] || 0), 0);\r\n          return resultado\r\n        }\r\n      },\r\n    },\r\n    methods: {\r\n        loadDataInTable ({ results, header, meta }) {\r\n        let me                          = this\r\n        this.codigosPerdidos            = false\r\n        this.arregloResumen             = []\r\n        this.codigoConProblemas         = []\r\n        this.arregloErroresPaquetes     = []\r\n        this.header                     = header\r\n        this.tableData                  = results\r\n        this.sheetName                  = meta.sheetName\r\n        this.popupConfirmTipoImportado  = true;\r\n        this.onlyCodes                  = 1\r\n        // me.validateCodigosPaquetes()\r\n        },\r\n        async validateCodigosPaquetes(){\r\n          try{\r\n            let me = this\r\n            me.arregloProblemasPaquete  = []\r\n            me.arregloFormatoSend       = []\r\n            me.arrayPaquetes            = 0\r\n            me.totalCodigosReal         = 0\r\n            me.totalCodigos             = 0\r\n            let datos                   = []\r\n            let preDatos                = []\r\n            datos                       = me.tableData\r\n            datos.map((item) => {\r\n              let obj = new Object();\r\n              obj.codigo = item.codigo.trim()\r\n              preDatos.push(obj)\r\n            })\r\n            console.log(\"preDatos\",preDatos)\r\n            const arrayNormal           = JSON.parse(JSON.stringify(preDatos));\r\n            //DE LO CONTRARIO VAMOS A VALIDAR CON LA BASE\r\n            const objetosFiltrados      = arrayNormal.filter(objeto => objeto.codigo.toLowerCase().startsWith('paq-'));\r\n            me.arrayPaquetes            = objetosFiltrados\r\n            me.totalCodigos             = arrayNormal.length - me.arrayPaquetes.length\r\n            //PROCESO\r\n            // Crear un nuevo array resultante\r\n            var nextPaquete = 1\r\n            for(let i = 0; i<objetosFiltrados.length; i++){\r\n              let nuevoArray = []\r\n              let preArray   = []\r\n              //tomo el siguiente paquete y valido si fuera el ultimo\r\n              let getPosicion = objetosFiltrados[nextPaquete]\r\n              //UNDEFINED PORQUE BUSCO EL PROXIMO PAQUETE PARA SABER QUE ES EL ULTIMO\r\n              if(getPosicion!==undefined){\r\n                //busco la posicion del ultimo paquete para agarrar los codigos hasta la ultima posicion del proximo paquete\r\n                const codigoBuscado         = objetosFiltrados[nextPaquete].codigo;\r\n                const posicionCodigoBuscado = arrayNormal.findIndex(objeto => objeto.codigo === codigoBuscado);\r\n                nuevoArray.push(arrayNormal.splice(0, posicionCodigoBuscado));\r\n                preArray = nuevoArray[0]\r\n                const resultado1 = await me.ChangeArray(preArray)\r\n              }\r\n              //EL ULTIMO PAQUETE NO TIENE POSICION DEL ULTIMO PARQUETE PORQUE TERMINA EN CODIGO\r\n              else{\r\n                nuevoArray.push(arrayNormal);\r\n                preArray = nuevoArray[0]\r\n                const resultado2 = await me.ChangeArray(preArray)\r\n              }\r\n              nextPaquete++\r\n            }\r\n            console.log(\"totalCodigos\",me.totalCodigos)\r\n            console.log(\"totalCodigosReal\",me.totalCodigosReal)\r\n            //validar que los codigos paquetes tenga los codigos correctos\r\n            if(me.totalCodigos != me.totalCodigosReal){\r\n              // me.arregloProblemasPaquete = []\r\n              // me.setErrorsPaquetes(\"En todos los paquetes\",\"Hay problemas con los paquetes corrija por favor\",[],me.arrayPaquetes)\r\n            }\r\n            if(me.arregloProblemasPaquete.length > 0){\r\n              me.popupProblemasDiagnostico = true\r\n            }\r\n          }\r\n          catch (error) {\r\n            console.log(error)\r\n            alert(\"Hubo errores en el archivo\")\r\n          }\r\n      },\r\n      async ChangeArray(array){\r\n        let me = this;\r\n        var problema         = \"\"\r\n        var preArray         = array.flat(10)\r\n        var getCodigoPaquete = preArray.splice(0,1)\r\n        var codigoPaquete    = getCodigoPaquete[0].codigo\r\n        var arrayHijos       = preArray\r\n        var ifError          = false\r\n        //VALIDAR CODIGO DE PAQUETE\r\n        const paqueteMinuscula = codigoPaquete.toLowerCase();\r\n        if(!paqueteMinuscula.startsWith(\"paq-\")){\r\n          problema = \"Problema con el paquete, formato incorrecto del paquete\"\r\n          ifError = true;\r\n        }\r\n        //VALIDAR LA CANTIDAD DE CODIGOS HIJOS UN SOLO CODIGO\r\n        if(me.ifOnlyCode == 2){\r\n          if(arrayHijos.length == 5 || arrayHijos.length == 10){ me.totalCodigosReal  = me.totalCodigosReal + arrayHijos.length;  me.generateFormato(codigoPaquete,arrayHijos); }\r\n          else{\r\n            problema = \"Problema con el paquete, insuficiencia de códigos\"\r\n            ifError = true;\r\n          }\r\n        }\r\n        //2 CODIGOS ACTIVACION Y DIAGNOSTICA o DIAGNOSTICA Y ACTIVACION\r\n        else{\r\n          if(arrayHijos.length == 10 || arrayHijos.length == 20 || arrayHijos.length == 2){ me.totalCodigosReal  = me.totalCodigosReal + arrayHijos.length;  me.generateFormato(codigoPaquete,arrayHijos); }\r\n          else{\r\n            console.log(\"arrayHijos\",arrayHijos.length,'codigoPaquete',codigoPaquete)\r\n            problema = \"Problema con el paquete, insuficiencia de códigos\"\r\n            ifError = true;\r\n          }\r\n        }\r\n        if(ifError){ me.setErrorsPaquetes(codigoPaquete,problema,arrayHijos) }\r\n      },\r\n      generateFormato(codigoPaquete,codigosHijos){\r\n        let me = this;\r\n        //2 codigos\r\n        var getcodigos = []\r\n        if(me.ifOnlyCode == 0 || me.ifOnlyCode == 1)  { getcodigos = me.formatoHijos(codigoPaquete,codigosHijos) }\r\n        else                                          { getcodigos = codigosHijos }\r\n        var cal                                       = new Object\r\n        cal.codigoPaquete                             = codigoPaquete\r\n        cal.codigosHijos                              = getcodigos\r\n        me.arregloFormatoSend.push(cal)\r\n      },\r\n      formatoHijos(codigoPaquete,codigosHijos){\r\n        let me = this;\r\n        var arregloSetear       = []\r\n        var arrayCodigosErrores = []\r\n        codigosHijos.forEach(element => {\r\n          var obj = new Object();\r\n          obj.codigo = element.codigo\r\n          arregloSetear.push(obj)\r\n        });\r\n        var preValores      = []\r\n        var codigosMostrar  = []\r\n        preValores          = arregloSetear\r\n        var getLongitud     = arregloSetear.length\r\n        var longitud        = getLongitud/2\r\n        for(var i = 0; i<longitud;i++){\r\n          // Creamos un nuevo array para almacenar los objetos quitados\r\n          const nuevoArray        = [];\r\n          var problemaCodigos     = [];\r\n          let   codigoActivacion  = \"\";\r\n          let   codigoDiagnostico = \"\";\r\n          // Quitamos los dos primeros objetos del array original y los agregamos al nuevo array\r\n          nuevoArray.push(preValores.splice(0, 2));\r\n          var setear = nuevoArray.flat()\r\n          if(setear.length == 1){\r\n            var cal = new Object\r\n            //ACTIVACION - DIAGNOSTICO)\r\n            if(me.ifOnlyCode == 0){\r\n              cal.codigoActivacion =  setear[0].codigo\r\n              cal.codigoDiagnostico  =  \"\"\r\n            }\r\n            //DIAGNOSTICO - ACTIVACION)\r\n            if(me.ifOnlyCode == 1){\r\n              cal.codigoDiagnostico =  setear[0].codigo\r\n              cal.codigoActivacion  =  \"\"\r\n            }\r\n            cal.problema          =  'formato'\r\n            problemaCodigos.push(cal)\r\n            arrayCodigosErrores.push(problemaCodigos)\r\n          }else{\r\n           //ACTIVACION - DIAGNOSTICO)\r\n           if(me.ifOnlyCode == 0){\r\n              codigoActivacion      = setear[0].codigo;\r\n              codigoDiagnostico     = setear[1].codigo\r\n            }\r\n            //DIAGNOSTICO - ACTIVACION)\r\n            if(me.ifOnlyCode == 1){\r\n              codigoDiagnostico     = setear[0].codigo\r\n              codigoActivacion      = setear[1].codigo;\r\n            }\r\n            var cal = new Object\r\n            cal.codigoActivacion  =  codigoActivacion\r\n            cal.codigoDiagnostico =  codigoDiagnostico\r\n            codigosMostrar.push(cal)\r\n            //VALIDACION\r\n            var codigosErrores     = me.validacionErrores(codigoActivacion,codigoDiagnostico)\r\n            if(codigosErrores.length > 0){\r\n              //si existe errores de formato de los codigos hijos cambio para que se pueda mostrar\r\n              me.onlyCodes = 0\r\n              arrayCodigosErrores.push(codigosErrores)\r\n            }\r\n          }//fin else\r\n        }//fin for\r\n        //enviar errores\r\n        if(arrayCodigosErrores.length > 0){\r\n          me.setErrorsPaquetes(codigoPaquete,\"Problema en el formato de los codigos hijos\",arrayCodigosErrores)\r\n        }\r\n        return codigosMostrar\r\n      },\r\n      validacionErrores(codigoActivacion,codigoDiagnostico){\r\n        let me = this\r\n        var problemaCodigos = []\r\n        //============ACTIVACION==================================\r\n        //VALIDACION SI NO SON STRING\r\n        if (typeof codigoActivacion !== 'string' || typeof codigoDiagnostico !== 'string' ) {\r\n          var cal = new Object\r\n          cal.codigoActivacion  =  codigoActivacion\r\n          cal.codigoDiagnostico =  codigoDiagnostico\r\n          cal.problema          =  'formato'\r\n          problemaCodigos.push(cal)\r\n        }\r\n        else{\r\n          const activacionMinuscula = codigoActivacion.toLowerCase();\r\n          //validar que el codigo de activacion no tenga una P\r\n          if(activacionMinuscula.startsWith(\"p\")){\r\n            //validar meñique que el codigo de activacion se permita empezar por p DONDE SEA PLM no hago nada\r\n            if(activacionMinuscula.startsWith(\"plm\")){\r\n            }else{\r\n              var cal = new Object\r\n              cal.codigoActivacion  =  codigoActivacion\r\n              cal.codigoDiagnostico =  codigoDiagnostico\r\n              cal.problema          =  'activacion'\r\n              problemaCodigos.push(cal)\r\n            }\r\n          }\r\n          //=============DIAGNOSTICO===================================\r\n          //validar que el codigo de activacion tenga una P\r\n          const diagnosticoMinuscula = codigoDiagnostico.toLowerCase();\r\n          //validar si es meñique debe tener 2 pp\r\n          if(activacionMinuscula.startsWith(\"plm\")){\r\n            //si no inicia por 2 pp\r\n            if(!diagnosticoMinuscula.startsWith(\"pp\")){\r\n              var cal = new Object\r\n              cal.codigoActivacion  =  codigoActivacion\r\n              cal.codigoDiagnostico =  codigoDiagnostico\r\n              cal.problema          =  'diagnostico'\r\n              problemaCodigos.push(cal)\r\n            }\r\n          }\r\n          //diferente a meñique\r\n          else{\r\n            if(!diagnosticoMinuscula.startsWith(\"p\")){\r\n              var cal = new Object\r\n              cal.codigoActivacion  =  codigoActivacion\r\n              cal.codigoDiagnostico =  codigoDiagnostico\r\n              cal.problema          =  'diagnostico'\r\n              problemaCodigos.push(cal)\r\n            }\r\n          }\r\n        }\r\n        return problemaCodigos\r\n      },\r\n      setErrorsPaquetes(codigoPaquete,problema,codigosErrores,paquetes=[]){\r\n        let me                = this\r\n        var cal               = new Object\r\n        cal.codigoPaquete     = codigoPaquete\r\n        cal.problema          = problema\r\n        cal.codigosHijos      = codigosErrores.flat(10)\r\n        cal.setpaquetes       = paquetes\r\n        me.arregloProblemasPaquete.push(cal)\r\n      },\r\n      procesarPagos(){\r\n        let me = this\r\n        me.$vs.loading()\r\n        let json_pagos = JSON.stringify(me.arregloFormatoSend)\r\n        let formData = new FormData();\r\n        formData.append('data_codigos',     json_pagos);\r\n        formData.append('id_usuario',       me.usuario.idusuario);\r\n        formData.append('periodo_id',       localStorage.periodo_id);\r\n        var url = \"\"\r\n        //Varias codigos\r\n        if( me.ifOnlyCode == 0 || me.ifOnlyCode == 1 ) {   url = this.$server_url+'paquetes/guardarPaquete' }\r\n        //un solo codigo\r\n        if(me.ifOnlyCode == 2) {   url = this.$server_url+'paquetes/guardarPaquete2' }\r\n        this.$http.post(url, formData)\r\n        .then(res => {\r\n            me.$vs.loading.close()\r\n            if(res.data.status == 0){\r\n              me.$vs.notify({\r\n              text:res.data.message,\r\n              color:'success',\r\n              iconPack: 'feather',\r\n              icon:'icon-check'})\r\n              return false\r\n            }\r\n            me.$vs.notify({\r\n            text:'Códigos procesados exitosamente',\r\n            color:'success',\r\n            iconPack: 'feather',\r\n            icon:'icon-check'})\r\n            me.modalConfirm                           = false\r\n            me.tableData                              = []\r\n            me.codigosPerdidos                        = true\r\n            me.arregloResumen                         = res.data.arregloResumen\r\n            me.codigoConProblemas                     = res.data.codigoConProblemas\r\n            me.arregloErroresPaquetes                 = res.data.arregloErroresPaquetes\r\n            // me.codigosLeidos = res.data.codigosLeidos\r\n            // me.codigosNoCambiados = res.data.codigosNoCambiados\r\n            // me.codigoNoExiste = res.data.codigoNoExiste\r\n            // me.codigosSinCodigoUnion  = res.data.codigosSinCodigoUnion\r\n            // if(me.codigosSinCodigoUnion.length > 0 && !me.userAsesor){\r\n            //   me.popupProblemasCodigosUnion = true\r\n            // }\r\n            // me.porcentaje = res.data.cambiados\r\n        })\r\n        .catch(function (error) {\r\n            me.$vs.notify({\r\n            text:'Verifique que la información se haya guardado correctamente.',\r\n            color:'warning',\r\n            iconPack: 'feather',\r\n            icon:'icon-alert-triangle'})\r\n            me.$vs.loading.close()\r\n        })\r\n      },\r\n      openConfirm(tipo) {\r\n        let me = this\r\n        me.tipo_selected = tipo\r\n        if(!me.tableData[0].codigo){\r\n              me.$vs.loading.close()\r\n              me.$vs.notify({ text:'Corrija el formato del excel y vuelva a intentar.', color:'warning', iconPack: 'feather', icon:'icon-alert-triangle'})\r\n              return\r\n          }\r\n        me.errores = []\r\n        $.each(me.tableData,function(key, value){\r\n          if( !value.codigo){\r\n            me.errores.push(value)\r\n          }\r\n        })\r\n        if( me.errores.length > 0 ){\r\n          me.modalErrores = true\r\n        }else{\r\n          me.modalConfirm = true\r\n        }\r\n      },\r\n      recargar(){\r\n        location.reload()\r\n      },\r\n\r\n    }\r\n  }\r\n  </script>\r\n<style scoped>\r\n.tabla{\r\n  width: 100%;\r\n  margin-top: 10px;\r\n}\r\n .tabla {\r\n\r\n  border: 1px solid #D1E5F1;\r\n  padding: 2px;\r\n  border-radius: 5px;\r\n}\r\n.th1{\r\n  background-color: #E3AC6B;\r\n  border-radius: 5px;\r\n  color:white;\r\n}\r\n.td1, .th1{\r\n padding: 10px;\r\n text-align: center;\r\n border:none;\r\n}\r\n.th2{\r\n  color:#93938F;\r\n  font-size: 10px;\r\n  background-color: #E7E7BF;\r\n  text-align: center;\r\n  padding: 8px;\r\n  border-radius: 5px;\r\n}\r\n.td2{\r\n  font-size: 10px;\r\n  padding: 5px;\r\n}\r\n.tdingreso{\r\n  border: 1px solid #f2f2f2;border-radius:5px;padding:10px;font-size:8px;\r\n}\r\n/*CSS IMPORTADOR TIPO BODEGA*/\r\n\r\n.features {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n.features li {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n}\r\n.features li + * {\r\n  margin-top: 0.75rem;\r\n}\r\n.features .icon {\r\n  background-color: #1FCAC5;\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #fff;\r\n  border-radius: 50%;\r\n  width: 20px;\r\n  height: 20px;\r\n}\r\n.features .icon svg {\r\n  width: 14px;\r\n  height: 14px;\r\n}\r\n.features + * {\r\n  margin-top: 1.25rem;\r\n}\r\n</style>\r\n"],"mappings":";;;;;;;;;;AAoSA,SACAA,QAAA,QACA;AACA,IAAAC,0BAAA,YAAAA,2BAAA;EAAA;AAAA;AACA,IAAAC,WAAA,YAAAA,YAAA;EAAA;AAAA;AACA,IAAAC,sBAAA,YAAAA,uBAAA;EAAA;AAAA;AACA,OAAAC,OAAA;AACA;EACAC,UAAA;IACAH,WAAA,EAAAA,WAAA;IACAE,OAAA,EAAAA,OAAA;IACAH,0BAAA,EAAAA,0BAAA;IACAE,sBAAA,EAAAA;EACA;EACAG,IAAA,WAAAA,KAAA;IACA;MACAC,eAAA;MACAC,SAAA;MACAC,MAAA;MACAC,SAAA;MACAC,OAAA;MACAC,YAAA;MACAC,YAAA;MACAC,OAAA;MACA;MACAC,qBAAA;MACAC,0BAAA;MACA;MACAC,uBAAA;MACAC,kBAAA;MACAC,YAAA;MACAC,gBAAA;MACAC,yBAAA;MACAC,aAAA;MACAC,cAAA;MACAC,kBAAA;MACAC,sBAAA;MACAC,yBAAA;MACAC,UAAA;MACAC,SAAA;IACA;EACA;EACAC,OAAA,WAAAA,QAAA;IACA,KAAAlB,OAAA,GAAAmB,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;IACA,KAAA1B,eAAA;EACA;EACA2B,QAAA,EAAAC,aAAA,CAAAA,aAAA,KACAnC,QAAA;IACAoC,eAAA,WAAAA,gBAAA;MACA,IAAAC,EAAA;MACA,IAAAA,EAAA,CAAAd,cAAA,CAAAe,MAAA;QACA,IAAAC,MAAA,GAAAF,EAAA,CAAAd,cAAA,CAAAiB,MAAA,WAAAC,CAAA;UAAA,OAAAA,CAAA,CAAAC,QAAA;QAAA;QACA,IAAAC,SAAA,GAAAJ,MAAA,CAAAK,MAAA,WAAAC,CAAA,EAAAC,CAAA;UAAA,OAAAD,CAAA,IAAAC,CAAA;QAAA;QACA,OAAAH,SAAA;MACA;IACA;IACAI,eAAA,WAAAA,gBAAA;MACA,IAAAV,EAAA;MACA,IAAAA,EAAA,CAAAd,cAAA,CAAAe,MAAA;QACA,IAAAU,MAAA,GAAAX,EAAA,CAAAd,cAAA,CAAAiB,MAAA,WAAAC,CAAA;UAAA,OAAAA,CAAA,CAAAQ,QAAA;QAAA;QACA,IAAAN,SAAA,GAAAK,MAAA,CAAAJ,MAAA,WAAAC,CAAA,EAAAC,CAAA;UAAA,OAAAD,CAAA,IAAAC,CAAA;QAAA;QACA,OAAAH,SAAA;MACA;IACA;IACAO,gBAAA,WAAAA,iBAAA;MACA,IAAAb,EAAA;MACA,IAAAA,EAAA,CAAAd,cAAA,CAAAe,MAAA;QACA;QACA,IAAAC,MAAA,GAAAF,EAAA,CAAAd,cAAA,CAAAiB,MAAA,WAAAC,CAAA;UAAA,OAAAA,CAAA,CAAAC,QAAA;QAAA;QACA,IAAAS,UAAA,GAAAZ,MAAA,CAAAK,MAAA,WAAAC,CAAA,EAAAC,CAAA;UAAA,OAAAD,CAAA,IAAAC,CAAA;QAAA;QACA;QACA,IAAAE,MAAA,GAAAX,EAAA,CAAAd,cAAA,CAAAiB,MAAA,WAAAC,CAAA;UAAA,OAAAA,CAAA,CAAAQ,QAAA;QAAA;QACA,IAAAG,UAAA,GAAAJ,MAAA,CAAAJ,MAAA,WAAAC,CAAA,EAAAC,CAAA;UAAA,OAAAD,CAAA,IAAAC,CAAA;QAAA;QACA,IAAAO,KAAA,GAAAhB,EAAA,CAAAlB,YAAA,IAAAgC,UAAA,GAAAC,UAAA;QACA,OAAAC,KAAA;MACA;IACA;IACAC,aAAA,WAAAA,cAAA;MACA,IAAAjB,EAAA;MACA,IAAAA,EAAA,CAAAd,cAAA,CAAAe,MAAA;QACA,IAAAU,MAAA,GAAAX,EAAA,CAAAd,cAAA,CAAAiB,MAAA,WAAAC,CAAA;UAAA,OAAAA,CAAA,CAAAc,SAAA;QAAA;QACA,IAAAZ,SAAA,GAAAK,MAAA,CAAAJ,MAAA,WAAAC,CAAA,EAAAC,CAAA;UAAA,OAAAD,CAAA,IAAAC,CAAA;QAAA;QACA,OAAAH,SAAA;MACA;IACA;IACAa,aAAA,WAAAA,cAAA;MACA,IAAAnB,EAAA;MACA,IAAAA,EAAA,CAAAd,cAAA,CAAAe,MAAA;QACA,IAAAU,MAAA,GAAAX,EAAA,CAAAd,cAAA,CAAAiB,MAAA,WAAAC,CAAA;UAAA,OAAAA,CAAA,CAAAgB,SAAA;QAAA;QACA,IAAAd,SAAA,GAAAK,MAAA,CAAAJ,MAAA,WAAAC,CAAA,EAAAC,CAAA;UAAA,OAAAD,CAAA,IAAAC,CAAA;QAAA;QACA,OAAAH,SAAA;MACA;IACA;EAAA,EACA;EACAe,OAAA;IACAC,eAAA,WAAAA,gBAAAC,IAAA;MAAA,IAAAC,OAAA,GAAAD,IAAA,CAAAC,OAAA;QAAApD,MAAA,GAAAmD,IAAA,CAAAnD,MAAA;QAAAqD,IAAA,GAAAF,IAAA,CAAAE,IAAA;MACA,IAAAzB,EAAA;MACA,KAAA9B,eAAA;MACA,KAAAgB,cAAA;MACA,KAAAC,kBAAA;MACA,KAAAC,sBAAA;MACA,KAAAhB,MAAA,GAAAA,MAAA;MACA,KAAAD,SAAA,GAAAqD,OAAA;MACA,KAAAnD,SAAA,GAAAoD,IAAA,CAAApD,SAAA;MACA,KAAAgB,yBAAA;MACA,KAAAE,SAAA;MACA;IACA;IACAmC,uBAAA;MAAA,IAAAC,wBAAA,GAAAC,iBAAA,eAAAC,kBAAA,CAAAC,IAAA,UAAAC,QAAA;QAAA,IAAA/B,EAAA,EAAAgC,KAAA,EAAAC,QAAA,EAAAC,WAAA,EAAAC,gBAAA,EAAAC,WAAA,EAAAC,KAAA,EAAAC,CAAA;QAAA,OAAAT,kBAAA,CAAAU,IAAA,UAAAC,SAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAC,IAAA,GAAAD,SAAA,CAAAE,IAAA;YAAA;cAAAF,SAAA,CAAAC,IAAA;cAEA1C,EAAA;cACAA,EAAA,CAAApB,uBAAA;cACAoB,EAAA,CAAAnB,kBAAA;cACAmB,EAAA,CAAAf,aAAA;cACAe,EAAA,CAAAjB,gBAAA;cACAiB,EAAA,CAAAlB,YAAA;cACAkD,KAAA;cACAC,QAAA;cACAD,KAAA,GAAAhC,EAAA,CAAA7B,SAAA;cACA6D,KAAA,CAAAY,GAAA,WAAAC,IAAA;gBACA,IAAAC,GAAA,OAAAC,MAAA;gBACAD,GAAA,CAAAE,MAAA,GAAAH,IAAA,CAAAG,MAAA,CAAAC,IAAA;gBACAhB,QAAA,CAAAiB,IAAA,CAAAJ,GAAA;cACA;cACAK,OAAA,CAAAC,GAAA,aAAAnB,QAAA;cACAC,WAAA,GAAAzC,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAA4D,SAAA,CAAApB,QAAA,IACA;cACAE,gBAAA,GAAAD,WAAA,CAAA/B,MAAA,WAAAmD,MAAA;gBAAA,OAAAA,MAAA,CAAAN,MAAA,CAAAO,WAAA,GAAAC,UAAA;cAAA;cACAxD,EAAA,CAAAf,aAAA,GAAAkD,gBAAA;cACAnC,EAAA,CAAAlB,YAAA,GAAAoD,WAAA,CAAAjC,MAAA,GAAAD,EAAA,CAAAf,aAAA,CAAAgB,MAAA;cACA;cACA;cACAmC,WAAA;cAAAC,KAAA,gBAAAR,kBAAA,CAAAC,IAAA,UAAAO,MAAA;gBAAA,IAAAoB,UAAA,EAAAC,QAAA,EAAAC,WAAA,EAAAC,aAAA,EAAAC,qBAAA,EAAAC,UAAA,EAAAC,UAAA;gBAAA,OAAAlC,kBAAA,CAAAU,IAAA,UAAAyB,OAAAC,QAAA;kBAAA,kBAAAA,QAAA,CAAAvB,IAAA,GAAAuB,QAAA,CAAAtB,IAAA;oBAAA;sBAEAc,UAAA;sBACAC,QAAA,OACA;sBACAC,WAAA,GAAAxB,gBAAA,CAAAC,WAAA,GACA;sBAAA,MACAuB,WAAA,KAAAO,SAAA;wBAAAD,QAAA,CAAAtB,IAAA;wBAAA;sBAAA;sBACA;sBACAiB,aAAA,GAAAzB,gBAAA,CAAAC,WAAA,EAAAY,MAAA;sBACAa,qBAAA,GAAA3B,WAAA,CAAAiC,SAAA,WAAAb,MAAA;wBAAA,OAAAA,MAAA,CAAAN,MAAA,KAAAY,aAAA;sBAAA;sBACAH,UAAA,CAAAP,IAAA,CAAAhB,WAAA,CAAAkC,MAAA,IAAAP,qBAAA;sBACAH,QAAA,GAAAD,UAAA;sBAAAQ,QAAA,CAAAtB,IAAA;sBAAA,OACA3C,EAAA,CAAAqE,WAAA,CAAAX,QAAA;oBAAA;sBAAAI,UAAA,GAAAG,QAAA,CAAAK,IAAA;sBAAAL,QAAA,CAAAtB,IAAA;sBAAA;oBAAA;sBAIAc,UAAA,CAAAP,IAAA,CAAAhB,WAAA;sBACAwB,QAAA,GAAAD,UAAA;sBAAAQ,QAAA,CAAAtB,IAAA;sBAAA,OACA3C,EAAA,CAAAqE,WAAA,CAAAX,QAAA;oBAAA;sBAAAK,UAAA,GAAAE,QAAA,CAAAK,IAAA;oBAAA;sBAEAlC,WAAA;oBAAA;oBAAA;sBAAA,OAAA6B,QAAA,CAAAM,IAAA;kBAAA;gBAAA,GAAAlC,KAAA;cAAA;cApBAC,CAAA;YAAA;cAAA,MAAAA,CAAA,GAAAH,gBAAA,CAAAlC,MAAA;gBAAAwC,SAAA,CAAAE,IAAA;gBAAA;cAAA;cAAA,OAAAF,SAAA,CAAA+B,aAAA,CAAAnC,KAAA;YAAA;cAAAC,CAAA;cAAAG,SAAA,CAAAE,IAAA;cAAA;YAAA;cAsBAQ,OAAA,CAAAC,GAAA,iBAAApD,EAAA,CAAAlB,YAAA;cACAqE,OAAA,CAAAC,GAAA,qBAAApD,EAAA,CAAAjB,gBAAA;cACA;cACA,IAAAiB,EAAA,CAAAlB,YAAA,IAAAkB,EAAA,CAAAjB,gBAAA;gBACA;gBACA;cAAA;cAEA,IAAAiB,EAAA,CAAApB,uBAAA,CAAAqB,MAAA;gBACAD,EAAA,CAAAhB,yBAAA;cACA;cAAAyD,SAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,SAAA,CAAAC,IAAA;cAAAD,SAAA,CAAAgC,EAAA,GAAAhC,SAAA;cAGAU,OAAA,CAAAC,GAAA,CAAAX,SAAA,CAAAgC,EAAA;cACAC,KAAA;YAAA;YAAA;cAAA,OAAAjC,SAAA,CAAA8B,IAAA;UAAA;QAAA,GAAAxC,OAAA;MAAA;MAAA,SAAAL,wBAAA;QAAA,OAAAC,wBAAA,CAAAgD,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAlD,uBAAA;IAAA;IAGA2C,WAAA;MAAA,IAAAQ,YAAA,GAAAjD,iBAAA,eAAAC,kBAAA,CAAAC,IAAA,UAAAgD,SAAAC,KAAA;QAAA,IAAA/E,EAAA,EAAAgF,QAAA,EAAAtB,QAAA,EAAAuB,gBAAA,EAAAC,aAAA,EAAAC,UAAA,EAAAC,OAAA,EAAAC,gBAAA;QAAA,OAAAxD,kBAAA,CAAAU,IAAA,UAAA+C,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAA7C,IAAA,GAAA6C,SAAA,CAAA5C,IAAA;YAAA;cACA3C,EAAA;cACAgF,QAAA;cACAtB,QAAA,GAAAqB,KAAA,CAAAS,IAAA;cACAP,gBAAA,GAAAvB,QAAA,CAAAU,MAAA;cACAc,aAAA,GAAAD,gBAAA,IAAAjC,MAAA;cACAmC,UAAA,GAAAzB,QAAA;cACA0B,OAAA,UACA;cACAC,gBAAA,GAAAH,aAAA,CAAA3B,WAAA;cACA,KAAA8B,gBAAA,CAAA7B,UAAA;gBACAwB,QAAA;gBACAI,OAAA;cACA;cACA;cACA,IAAApF,EAAA,CAAAV,UAAA;gBACA,IAAA6F,UAAA,CAAAlF,MAAA,SAAAkF,UAAA,CAAAlF,MAAA;kBAAAD,EAAA,CAAAjB,gBAAA,GAAAiB,EAAA,CAAAjB,gBAAA,GAAAoG,UAAA,CAAAlF,MAAA;kBAAAD,EAAA,CAAAyF,eAAA,CAAAP,aAAA,EAAAC,UAAA;gBAAA,OACA;kBACAH,QAAA;kBACAI,OAAA;gBACA;cACA;cACA;cAAA,KACA;gBACA,IAAAD,UAAA,CAAAlF,MAAA,UAAAkF,UAAA,CAAAlF,MAAA,UAAAkF,UAAA,CAAAlF,MAAA;kBAAAD,EAAA,CAAAjB,gBAAA,GAAAiB,EAAA,CAAAjB,gBAAA,GAAAoG,UAAA,CAAAlF,MAAA;kBAAAD,EAAA,CAAAyF,eAAA,CAAAP,aAAA,EAAAC,UAAA;gBAAA,OACA;kBACAhC,OAAA,CAAAC,GAAA,eAAA+B,UAAA,CAAAlF,MAAA,mBAAAiF,aAAA;kBACAF,QAAA;kBACAI,OAAA;gBACA;cACA;cACA,IAAAA,OAAA;gBAAApF,EAAA,CAAA0F,iBAAA,CAAAR,aAAA,EAAAF,QAAA,EAAAG,UAAA;cAAA;YAAA;YAAA;cAAA,OAAAI,SAAA,CAAAhB,IAAA;UAAA;QAAA,GAAAO,QAAA;MAAA;MAAA,SAAAT,YAAAsB,EAAA;QAAA,OAAAd,YAAA,CAAAF,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAP,WAAA;IAAA;IAEAoB,eAAA,WAAAA,gBAAAP,aAAA,EAAAU,YAAA;MACA,IAAA5F,EAAA;MACA;MACA,IAAA6F,UAAA;MACA,IAAA7F,EAAA,CAAAV,UAAA,SAAAU,EAAA,CAAAV,UAAA;QAAAuG,UAAA,GAAA7F,EAAA,CAAA8F,YAAA,CAAAZ,aAAA,EAAAU,YAAA;MAAA,OACA;QAAAC,UAAA,GAAAD,YAAA;MAAA;MACA,IAAAG,GAAA,OAAAhD,MAAA;MACAgD,GAAA,CAAAb,aAAA,GAAAA,aAAA;MACAa,GAAA,CAAAH,YAAA,GAAAC,UAAA;MACA7F,EAAA,CAAAnB,kBAAA,CAAAqE,IAAA,CAAA6C,GAAA;IACA;IACAD,YAAA,WAAAA,aAAAZ,aAAA,EAAAU,YAAA;MACA,IAAA5F,EAAA;MACA,IAAAgG,aAAA;MACA,IAAAC,mBAAA;MACAL,YAAA,CAAAM,OAAA,WAAAC,OAAA;QACA,IAAArD,GAAA,OAAAC,MAAA;QACAD,GAAA,CAAAE,MAAA,GAAAmD,OAAA,CAAAnD,MAAA;QACAgD,aAAA,CAAA9C,IAAA,CAAAJ,GAAA;MACA;MACA,IAAAsD,UAAA;MACA,IAAAC,cAAA;MACAD,UAAA,GAAAJ,aAAA;MACA,IAAAM,WAAA,GAAAN,aAAA,CAAA/F,MAAA;MACA,IAAAsG,QAAA,GAAAD,WAAA;MACA,SAAAhE,CAAA,MAAAA,CAAA,GAAAiE,QAAA,EAAAjE,CAAA;QACA;QACA,IAAAmB,UAAA;QACA,IAAA+C,eAAA;QACA,IAAAC,gBAAA;QACA,IAAAC,iBAAA;QACA;QACAjD,UAAA,CAAAP,IAAA,CAAAkD,UAAA,CAAAhC,MAAA;QACA,IAAAuC,MAAA,GAAAlD,UAAA,CAAA+B,IAAA;QACA,IAAAmB,MAAA,CAAA1G,MAAA;UACA,IAAA8F,GAAA,OAAAhD,MAAA;UACA;UACA,IAAA/C,EAAA,CAAAV,UAAA;YACAyG,GAAA,CAAAU,gBAAA,GAAAE,MAAA,IAAA3D,MAAA;YACA+C,GAAA,CAAAW,iBAAA;UACA;UACA;UACA,IAAA1G,EAAA,CAAAV,UAAA;YACAyG,GAAA,CAAAW,iBAAA,GAAAC,MAAA,IAAA3D,MAAA;YACA+C,GAAA,CAAAU,gBAAA;UACA;UACAV,GAAA,CAAAf,QAAA;UACAwB,eAAA,CAAAtD,IAAA,CAAA6C,GAAA;UACAE,mBAAA,CAAA/C,IAAA,CAAAsD,eAAA;QACA;UACA;UACA,IAAAxG,EAAA,CAAAV,UAAA;YACAmH,gBAAA,GAAAE,MAAA,IAAA3D,MAAA;YACA0D,iBAAA,GAAAC,MAAA,IAAA3D,MAAA;UACA;UACA;UACA,IAAAhD,EAAA,CAAAV,UAAA;YACAoH,iBAAA,GAAAC,MAAA,IAAA3D,MAAA;YACAyD,gBAAA,GAAAE,MAAA,IAAA3D,MAAA;UACA;UACA,IAAA+C,GAAA,OAAAhD,MAAA;UACAgD,GAAA,CAAAU,gBAAA,GAAAA,gBAAA;UACAV,GAAA,CAAAW,iBAAA,GAAAA,iBAAA;UACAL,cAAA,CAAAnD,IAAA,CAAA6C,GAAA;UACA;UACA,IAAAa,cAAA,GAAA5G,EAAA,CAAA6G,iBAAA,CAAAJ,gBAAA,EAAAC,iBAAA;UACA,IAAAE,cAAA,CAAA3G,MAAA;YACA;YACAD,EAAA,CAAAT,SAAA;YACA0G,mBAAA,CAAA/C,IAAA,CAAA0D,cAAA;UACA;QACA;MACA;MACA;MACA,IAAAX,mBAAA,CAAAhG,MAAA;QACAD,EAAA,CAAA0F,iBAAA,CAAAR,aAAA,iDAAAe,mBAAA;MACA;MACA,OAAAI,cAAA;IACA;IACAQ,iBAAA,WAAAA,kBAAAJ,gBAAA,EAAAC,iBAAA;MACA,IAAA1G,EAAA;MACA,IAAAwG,eAAA;MACA;MACA;MACA,WAAAC,gBAAA,wBAAAC,iBAAA;QACA,IAAAX,GAAA,OAAAhD,MAAA;QACAgD,GAAA,CAAAU,gBAAA,GAAAA,gBAAA;QACAV,GAAA,CAAAW,iBAAA,GAAAA,iBAAA;QACAX,GAAA,CAAAf,QAAA;QACAwB,eAAA,CAAAtD,IAAA,CAAA6C,GAAA;MACA,OACA;QACA,IAAAe,mBAAA,GAAAL,gBAAA,CAAAlD,WAAA;QACA;QACA,IAAAuD,mBAAA,CAAAtD,UAAA;UACA;UACA,IAAAsD,mBAAA,CAAAtD,UAAA,UACA;YACA,IAAAuC,GAAA,OAAAhD,MAAA;YACAgD,GAAA,CAAAU,gBAAA,GAAAA,gBAAA;YACAV,GAAA,CAAAW,iBAAA,GAAAA,iBAAA;YACAX,GAAA,CAAAf,QAAA;YACAwB,eAAA,CAAAtD,IAAA,CAAA6C,GAAA;UACA;QACA;QACA;QACA;QACA,IAAAgB,oBAAA,GAAAL,iBAAA,CAAAnD,WAAA;QACA;QACA,IAAAuD,mBAAA,CAAAtD,UAAA;UACA;UACA,KAAAuD,oBAAA,CAAAvD,UAAA;YACA,IAAAuC,GAAA,OAAAhD,MAAA;YACAgD,GAAA,CAAAU,gBAAA,GAAAA,gBAAA;YACAV,GAAA,CAAAW,iBAAA,GAAAA,iBAAA;YACAX,GAAA,CAAAf,QAAA;YACAwB,eAAA,CAAAtD,IAAA,CAAA6C,GAAA;UACA;QACA;QACA;QAAA,KACA;UACA,KAAAgB,oBAAA,CAAAvD,UAAA;YACA,IAAAuC,GAAA,OAAAhD,MAAA;YACAgD,GAAA,CAAAU,gBAAA,GAAAA,gBAAA;YACAV,GAAA,CAAAW,iBAAA,GAAAA,iBAAA;YACAX,GAAA,CAAAf,QAAA;YACAwB,eAAA,CAAAtD,IAAA,CAAA6C,GAAA;UACA;QACA;MACA;MACA,OAAAS,eAAA;IACA;IACAd,iBAAA,WAAAA,kBAAAR,aAAA,EAAAF,QAAA,EAAA4B,cAAA;MAAA,IAAAI,QAAA,GAAApC,SAAA,CAAA3E,MAAA,QAAA2E,SAAA,QAAAV,SAAA,GAAAU,SAAA;MACA,IAAA5E,EAAA;MACA,IAAA+F,GAAA,OAAAhD,MAAA;MACAgD,GAAA,CAAAb,aAAA,GAAAA,aAAA;MACAa,GAAA,CAAAf,QAAA,GAAAA,QAAA;MACAe,GAAA,CAAAH,YAAA,GAAAgB,cAAA,CAAApB,IAAA;MACAO,GAAA,CAAAkB,WAAA,GAAAD,QAAA;MACAhH,EAAA,CAAApB,uBAAA,CAAAsE,IAAA,CAAA6C,GAAA;IACA;IACAmB,aAAA,WAAAA,cAAA;MACA,IAAAlH,EAAA;MACAA,EAAA,CAAAmH,GAAA,CAAAC,OAAA;MACA,IAAAC,UAAA,GAAA5H,IAAA,CAAA4D,SAAA,CAAArD,EAAA,CAAAnB,kBAAA;MACA,IAAAyI,QAAA,OAAAC,QAAA;MACAD,QAAA,CAAAE,MAAA,iBAAAH,UAAA;MACAC,QAAA,CAAAE,MAAA,eAAAxH,EAAA,CAAA1B,OAAA,CAAAmJ,SAAA;MACAH,QAAA,CAAAE,MAAA,eAAA7H,YAAA,CAAA+H,UAAA;MACA,IAAAC,GAAA;MACA;MACA,IAAA3H,EAAA,CAAAV,UAAA,SAAAU,EAAA,CAAAV,UAAA;QAAAqI,GAAA,QAAAC,WAAA;MAAA;MACA;MACA,IAAA5H,EAAA,CAAAV,UAAA;QAAAqI,GAAA,QAAAC,WAAA;MAAA;MACA,KAAAC,KAAA,CAAAC,IAAA,CAAAH,GAAA,EAAAL,QAAA,EACAS,IAAA,WAAAC,GAAA;QACAhI,EAAA,CAAAmH,GAAA,CAAAC,OAAA,CAAAa,KAAA;QACA,IAAAD,GAAA,CAAA/J,IAAA,CAAAiK,MAAA;UACAlI,EAAA,CAAAmH,GAAA,CAAAgB,MAAA;YACAC,IAAA,EAAAJ,GAAA,CAAA/J,IAAA,CAAAoK,OAAA;YACAC,KAAA;YACAC,QAAA;YACAC,IAAA;UAAA;UACA;QACA;QACAxI,EAAA,CAAAmH,GAAA,CAAAgB,MAAA;UACAC,IAAA;UACAE,KAAA;UACAC,QAAA;UACAC,IAAA;QAAA;QACAxI,EAAA,CAAAzB,YAAA;QACAyB,EAAA,CAAA7B,SAAA;QACA6B,EAAA,CAAA9B,eAAA;QACA8B,EAAA,CAAAd,cAAA,GAAA8I,GAAA,CAAA/J,IAAA,CAAAiB,cAAA;QACAc,EAAA,CAAAb,kBAAA,GAAA6I,GAAA,CAAA/J,IAAA,CAAAkB,kBAAA;QACAa,EAAA,CAAAZ,sBAAA,GAAA4I,GAAA,CAAA/J,IAAA,CAAAmB,sBAAA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACA,GACAqJ,KAAA,WAAAC,KAAA;QACA1I,EAAA,CAAAmH,GAAA,CAAAgB,MAAA;UACAC,IAAA;UACAE,KAAA;UACAC,QAAA;UACAC,IAAA;QAAA;QACAxI,EAAA,CAAAmH,GAAA,CAAAC,OAAA,CAAAa,KAAA;MACA;IACA;IACAU,WAAA,WAAAA,YAAAC,IAAA;MACA,IAAA5I,EAAA;MACAA,EAAA,CAAA6I,aAAA,GAAAD,IAAA;MACA,KAAA5I,EAAA,CAAA7B,SAAA,IAAA6E,MAAA;QACAhD,EAAA,CAAAmH,GAAA,CAAAC,OAAA,CAAAa,KAAA;QACAjI,EAAA,CAAAmH,GAAA,CAAAgB,MAAA;UAAAC,IAAA;UAAAE,KAAA;UAAAC,QAAA;UAAAC,IAAA;QAAA;QACA;MACA;MACAxI,EAAA,CAAAvB,OAAA;MACAqK,CAAA,CAAAC,IAAA,CAAA/I,EAAA,CAAA7B,SAAA,YAAA6K,GAAA,EAAAC,KAAA;QACA,KAAAA,KAAA,CAAAjG,MAAA;UACAhD,EAAA,CAAAvB,OAAA,CAAAyE,IAAA,CAAA+F,KAAA;QACA;MACA;MACA,IAAAjJ,EAAA,CAAAvB,OAAA,CAAAwB,MAAA;QACAD,EAAA,CAAAxB,YAAA;MACA;QACAwB,EAAA,CAAAzB,YAAA;MACA;IACA;IACA2K,QAAA,WAAAA,SAAA;MACAC,QAAA,CAAAC,MAAA;IACA;EAEA;AACA","ignoreList":[]}]}