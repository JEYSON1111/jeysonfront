{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\pedidos\\notificaciones\\screenNotificacion.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\pedidos\\notificaciones\\screenNotificacion.vue","mtime":1712682816354},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\babel.config.js","mtime":1712682813877},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\.babelrc","mtime":1712682813750},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport io from \"socket.io-client\";\nimport $ from 'jquery';\nimport moment from 'moment';\nexport default {\n  data: function data() {\n    return {\n      arregloNotificaciones: [],\n      tmparregloNotificaciones: [],\n      usuario: [],\n      arregloRespuestas: [],\n      pedido: {},\n      counterDanger: false,\n      respuesta: '',\n      busqueda: '',\n      // socket: io(process.env.socket),\n      boleano: false\n    };\n  },\n  props: {\n    cambiarNotificacion: {\n      type: Boolean,\n      default: false\n    }\n  },\n  watch: {\n    cambiarNotificacion: function cambiarNotificacion(results) {\n      var me = this;\n      me.arregloRespuestas = [];\n      me.pedido = {};\n      me.getNotificaciones();\n    },\n    busqueda: function busqueda(results) {\n      var me = this;\n      me.arregloRespuestas = [];\n      me.tmparregloNotificaciones = [];\n      if (results.length == 0) {\n        me.tmparregloNotificaciones = me.arregloNotificaciones;\n      } else {\n        var datos = me.arregloNotificaciones;\n        me.tmparregloNotificaciones = datos.filter(function (p) {\n          return p.nombreInstitucion.toLowerCase().includes(results);\n        });\n      }\n    },\n    boleano: function boleano(results) {\n      var me = this;\n      if (results == true) {\n        me.boleano = false;\n        setTimeout(function () {\n          me.createNotify();\n        }, \"2000\");\n      }\n    }\n  },\n  created: function created() {\n    var me = this;\n    me.usuario = JSON.parse(localStorage.getItem(\"usuario\"));\n  },\n  mounted: function mounted() {\n    var me = this;\n    moment.locale('es');\n    me.getNotificaciones();\n    // try {\n    //   this.socket.on('enviar', (data) => {\n    //     //si el mensaje envia un asesor\n    //     if(data.tipo == 'pedidos_chat'){\n    //       //si el mensaje envia un asesor\n    //       if(data.grupo == 11){\n    //         me.getNotificaciones()\n    //         if(me.pedido == undefined){\n    //         }else{\n    //           me.mostrarMensajes(me.pedido)\n    //         }\n    //         return\n    //       }\n    //     }\n    //     //Si hay una notificacion de verificaciones\n    //     if(data.tipo == 'verificaciones'){\n    //       //si el mensaje envia un asesor\n    //       if(data.grupo == 11){\n    //         if(me.usuario.id_group == 22 || me.usuario.id_group == 23 || me.usuario.id_group == 1){\n    //           me.$emit('rechargeVerificaciones',true)\n    //         }\n    //         return\n    //       }\n    //     }\n    //     if(data.grupo == 22 || data.grupo == 23 || data.grupo == 25){\n    //       if(me.usuario.id_group == 11 && data.id_asesor == me.usuario.idusuario){\n    //         me.getNotificaciones()\n    //         if(me.pedido == undefined){\n    //         }else{\n    //           me.mostrarMensajes(me.pedido)\n    //         }\n\n    //         return\n    //       }\n    //     }\n    //   })\n    // } catch (error) {\n    //     console.log(error)\n    // }\n  },\n  methods: {\n    getAdministradorMensaje: function getAdministradorMensaje(tr) {\n      var resultado = \"\";\n      for (var i = 0; i < tr.length; i++) {\n        if (tr[i].id_group == \"23\" || tr[i].id_group == \"22\" || tr[i].id_group == \"1\" || tr[i].id_group == \"25\") {\n          resultado = tr[i].usuario;\n          break;\n        }\n      }\n      return resultado;\n    },\n    getNotificaciones: function getNotificaciones() {\n      var me = this;\n      var tipo = 0;\n      if (me.usuario.id_group == 11) {\n        //envia el asesor\n        tipo = 0;\n      } else {\n        //envia un facturador\n        tipo = 1;\n      }\n      this.$http.get(this.$server_url + 'verNotificacionPedidos?tipo=' + tipo).then(function (res) {\n        var datos = res.data;\n        var resultado = 0;\n        if (datos.length > 0) {\n          if (me.usuario.id_group == 11) {\n            me.arregloNotificaciones = datos.filter(function (p) {\n              return p.id_asesor == me.usuario.idusuario;\n            });\n          } else {\n            me.arregloNotificaciones = datos;\n          }\n          me.tmparregloNotificaciones = me.arregloNotificaciones;\n          //contar No vistos\n          resultado = me.arregloNotificaciones.reduce(function (acc, valor) {\n            var respuesta = acc + valor.contadorVistos;\n            return respuesta;\n          }, 0);\n        }\n        me.$emit('ChangecantidadMensajes', resultado);\n      }).catch(function (error) {\n        console.log(error + ' error');\n        // me.$vs.loading.close()\n      });\n    },\n    mostrarMensajes: function mostrarMensajes(tr) {\n      var me = this;\n      var tipo = 0;\n      me.respuesta = '';\n      me.$vs.loading();\n      //me.arregloRespuestas = []\n      this.$http.get(this.$server_url + 'mostrarMensajesPedido?id_pedido=' + tr.id_pedido + '&id_group=' + me.usuario.id_group).then(function (res) {\n        me.$vs.loading.close();\n        me.arregloRespuestas = res.data;\n        me.bajar();\n        me.getNotificaciones();\n      }).catch(function (error) {\n        console.log(error + ' error');\n        me.$vs.loading.close();\n      });\n    },\n    bajar: function bajar() {\n      $(document).ready(function () {\n        $(\"#tudiv\").animate({\n          scrollTop: \"+=55550px\"\n        }, 800);\n      });\n    },\n    respuestaComentario: function respuestaComentario() {\n      var me = this;\n      if (me.pedido.id_pedido == undefined || me.pedido.id_pedido == null || me.pedido.id_pedido == \"\") {\n        me.$vs.notify({\n          color: 'primary',\n          title: 'Mensaje',\n          text: 'Debe seleccionar un chat para enviar mensajes por favor'\n        });\n        return false;\n      }\n      if (me.respuesta.length >= 500) {\n        me.$vs.notify({\n          color: 'primary',\n          title: 'Mensaje',\n          text: 'El motivo del ticket debe tener un maximo de 500 caracteres'\n        });\n        return false;\n      }\n      if (me.respuesta.length < 2) {\n        me.$vs.notify({\n          color: 'primary',\n          title: 'Mensaje',\n          text: 'El motivo del ticket debe tener al menos 2 caracteres.'\n        });\n        return false;\n      }\n      var formData = new FormData();\n      formData.append('id_pedido', me.pedido.id_pedido);\n      formData.append('comentario', me.respuesta);\n      formData.append('id_usuario', me.usuario.idusuario);\n      formData.append('id_group', me.usuario.id_group);\n      me.$vs.loading();\n      this.$http.post(this.$server_url + 'guardar_comentario', formData).then(function (res) {\n        me.$vs.loading.close();\n        me.boleano = true;\n        me.getNotificaciones();\n        if (me.respuesta) {\n          var datos = {\n            id_asesor: me.pedido.id_asesor,\n            emisor: me.usuario.idusuario,\n            grupo: me.usuario.id_group,\n            tipo: \"pedidos_chat\"\n          };\n          // me.sendSocket(datos)\n          me.mostrarMensajes(me.pedido);\n        }\n        me.createNotify();\n        // me.$vs.notify({\n        //   color: 'primary',\n        //   iconPack: 'feather',\n        //   icon: 'icon-check',\n        //   time:18000,\n        // })\n      }).catch(function (error) {\n        me.$vs.loading.close();\n      });\n    },\n    createNotify: function createNotify() {\n      var me = this;\n      var tipo = document.querySelector(\"#notificacion\");\n      if (me.boleano) {\n        tipo.classList.remove(\"hideTipo\");\n        tipo.classList.toggle(\"showTipo\");\n      } else {\n        tipo.classList.remove(\"showTipo\");\n        tipo.classList.toggle(\"hideTipo\");\n      }\n    },\n    // sendSocket(datos){\n    //   try {\n    //     this.socket.emit(\"enviar\", datos);\n    //     } catch (error) {\n    //       console.log(error)\n    //     }\n    // },\n    formatHorasMinutos: function formatHorasMinutos(fecha) {\n      var me = this;\n      var setFecha = moment(fecha).format('HH:mm');\n      return setFecha;\n    },\n    formatoMes: function formatoMes(fecha) {\n      var setFecha = moment(fecha).format('MMMM');\n      var mes = setFecha.replace(/^\\w/, function (c) {\n        return c.toUpperCase();\n      }).substring(0, 3);\n      var year = moment(fecha).format('YYYY');\n      var day = moment(fecha).format('DD');\n      var resultado = year + \"-\" + mes + \"-\" + day;\n      return resultado;\n    },\n    elapsedTime: function elapsedTime(startTime) {\n      var x = new Date(startTime);\n      var now = new Date();\n      var timeDiff = now - x;\n      timeDiff /= 1000;\n      var seconds = Math.round(timeDiff);\n      timeDiff = Math.floor(timeDiff / 60);\n      var minutes = Math.round(timeDiff % 60);\n      timeDiff = Math.floor(timeDiff / 60);\n      var hours = Math.round(timeDiff % 24);\n      timeDiff = Math.floor(timeDiff / 24);\n      var days = Math.round(timeDiff % 365);\n      timeDiff = Math.floor(timeDiff / 365);\n      var years = timeDiff;\n      if (years > 0) {\n        return \"\".concat(years + (years > 1 ? ' Años ' : ' Año '));\n      } else if (days > 0) {\n        return \"Hace \".concat(days + (days > 1 ? ' Dias ' : ' Dia '));\n      } else if (hours > 0) {\n        return \"Hace \".concat(hours + (hours > 1 ? ' Horas ' : ' Hora '));\n      } else if (minutes > 0) {\n        return \"Hace \".concat(minutes + (minutes > 1 ? ' Minutos ' : ' Minuto '));\n      } else if (seconds > 0) {\n        return 'Hace ' + seconds + (seconds > 1 ? ' segundos' : 'justo ahora');\n      }\n      return ' Justo Ahora';\n    }\n  }\n};",{"version":3,"names":["io","$","moment","data","arregloNotificaciones","tmparregloNotificaciones","usuario","arregloRespuestas","pedido","counterDanger","respuesta","busqueda","boleano","props","cambiarNotificacion","type","Boolean","default","watch","results","me","getNotificaciones","length","datos","filter","p","nombreInstitucion","toLowerCase","includes","setTimeout","createNotify","created","JSON","parse","localStorage","getItem","mounted","locale","methods","getAdministradorMensaje","tr","resultado","i","id_group","tipo","$http","get","$server_url","then","res","id_asesor","idusuario","reduce","acc","valor","contadorVistos","$emit","catch","error","console","log","mostrarMensajes","$vs","loading","id_pedido","close","bajar","document","ready","animate","scrollTop","respuestaComentario","undefined","notify","color","title","text","formData","FormData","append","post","emisor","grupo","querySelector","classList","remove","toggle","formatHorasMinutos","fecha","setFecha","format","formatoMes","mes","replace","c","toUpperCase","substring","year","day","elapsedTime","startTime","x","Date","now","timeDiff","seconds","Math","round","floor","minutes","hours","days","years","concat"],"sources":["src/views/pedidos/notificaciones/screenNotificacion.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"notificacion\" >\r\n        <span class=\"hideTipo\" id=\"notificacion\" style=\"width: 60px;height: 40px;background-color: #59E734;padding: 10px;position: relative;border-radius: 5px;color:white;position: absolute;right: 15px;bottom: 15px;\"><ion-icon name=\"checkmark-outline\" style=\"font-size: 22px;margin-left: 12px;font-weight: bold;\"></ion-icon></span>\r\n    </div>\r\n      <div class=\"container\">\r\n          <div class=\"leftSide\">\r\n              <!-- Search Chat -->\r\n              <div class=\"search_chat\">\r\n                  <div class=\"flex\" style=\"justify-content: space-around;\">\r\n                    <div>\r\n                      <p class=\"font-bold\" style=\"text-shadow: 0px 0px 0px #000;\">Chats</p>\r\n                    </div>\r\n                    <div>\r\n                      <span class=\"cursor-pointer\" @click=\"pedido={};arregloRespuestas = [];getNotificaciones()\">\r\n                        <img width=\"20\" src=\"https://cdn-icons-png.flaticon.com/512/2267/2267901.png\"/>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n              </div>\r\n              <div class=\"search_chat\">\r\n                <div>\r\n                  <input type=\"text\" v-model=\"busqueda\" placeholder=\"Buscar escuela\">\r\n                  <ion-icon name=\"search-outline\"></ion-icon>\r\n                </div>\r\n              </div>\r\n              <!-- CHAT LIST -->\r\n              <div class=\"chatlist\">\r\n                <div  class=\"block unread\" v-for=\"(tr,key) in tmparregloNotificaciones\" :key=\"key\" @click=\"pedido=tr;mostrarMensajes(tr)\">\r\n                  <div class=\"details\" >\r\n                    <div class=\"listHead\">\r\n                      <h4  style=\"font-size: 12px!important;\">{{ tr.nombreInstitucion }}  </h4>\r\n                      <p class=\"time\">{{ elapsedTime(tr.contadorMensajes[0].created_at) }}</p>\r\n                    </div>\r\n                    <div class=\"message_p\">\r\n                      <p>\r\n                        {{ tr.contadorMensajes[0].comentario }}\r\n                      </p>\r\n                      <b v-if=\"tr.contadorVistos > 0\">{{  tr.contadorVistos }}</b>\r\n                    </div>\r\n                    <p class=\"mt-4\" style=\"font-size: 10px!important;\">Pedido #{{tr.id_pedido}}</p>\r\n                    <p style=\"font-size: 10px!important;\" v-if=\"usuario.id_group == 11\">Administrador ({{ getAdministradorMensaje(tr.contadorMensajes) }})</p>\r\n                    <p v-else style=\"font-size: 10px!important;\">{{ tr.asesor }}</p>\r\n                    <p style=\"font-size: 11px;\">{{tr.ciudad}}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n          </div>\r\n          <div class=\"rightSide\">\r\n              <div class=\"header\">\r\n                  <div class=\"imgText\"  v-if=\"arregloRespuestas.length > 0\">\r\n                      <h4>{{ usuario.id_group == 11 ? 'Administrador':pedido.asesor }}<br><span>online</span></h4>\r\n                  </div>\r\n                  <ul class=\"nav_icons\">\r\n                      <li><ion-icon name=\"ellipsis-vertical\"></ion-icon></li>\r\n                  </ul>\r\n              </div>\r\n\r\n              <!-- CHAT-BOX -->\r\n              <div class=\"chatbox\" id=\"tudiv\">\r\n                  <div v-for=\"(tr,key) in arregloRespuestas\" :key=\"key\">\r\n                      <div class=\"message my_msg\" v-if=\"tr.id_group == usuario.id_group\">\r\n                        <p>{{ tr.comentario }} <br>\r\n                          <span>{{ formatHorasMinutos(tr.created_at) }} ({{ formatoMes(tr.created_at)}})</span> <ion-icon name=\"checkmark-done-outline\"></ion-icon>\r\n                        </p>\r\n                      </div>\r\n                      <div class=\"message friend_msg\" v-else>\r\n\r\n                        <p>{{ tr.comentario }} <br>\r\n                          <span>{{ formatHorasMinutos(tr.created_at) }}  ({{ formatoMes(tr.created_at)}})</span>\r\n                          <span>{{ tr.rol }}</span>\r\n                        </p>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n              <!-- CHAT INPUT -->\r\n              <div class=\"chat_input\">\r\n                  <!-- <ion-icon name=\"happy-outline\"></ion-icon> -->\r\n                  <!-- <ion-icon name=\"happy-outline\"></ion-icon> -->\r\n                  <input type=\"text\" @keyup.enter=\"respuestaComentario()\" v-model=\"respuesta\" placeholder=\"Escriba el mensaje\">\r\n                  <!-- <ion-icon name=\"mic\"></ion-icon> -->\r\n                  <ion-icon name=\"send-outline\" @click=\"respuestaComentario()\"></ion-icon>\r\n              </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport io from \"socket.io-client\";\r\nimport $ from 'jquery'\r\nimport moment from 'moment'\r\nexport default{\r\n  data(){\r\n      return{\r\n        arregloNotificaciones:[],\r\n        tmparregloNotificaciones:[],\r\n        usuario:[],\r\n        arregloRespuestas:[],\r\n        pedido:{},\r\n        counterDanger: false,\r\n        respuesta:'',\r\n        busqueda:'',\r\n        // socket: io(process.env.socket),\r\n        boleano:false,\r\n      }\r\n  },\r\n  props:{\r\n    cambiarNotificacion:{\r\n      type:Boolean,\r\n      default:false\r\n    },\r\n  },\r\n  watch:{\r\n    cambiarNotificacion(results){\r\n      let me = this;\r\n      me.arregloRespuestas = []\r\n      me.pedido            = {}\r\n      me.getNotificaciones()\r\n    },\r\n    busqueda(results){\r\n      let me = this;\r\n      me.arregloRespuestas = []\r\n      me.tmparregloNotificaciones = []\r\n      if(results.length == 0){\r\n        me.tmparregloNotificaciones = me.arregloNotificaciones\r\n      }else{\r\n        let datos = me.arregloNotificaciones\r\n        me.tmparregloNotificaciones = datos.filter(p => p.nombreInstitucion.toLowerCase().includes(results));\r\n      }\r\n    },\r\n    boleano(results){\r\n      let me = this\r\n      if(results == true){\r\n        me.boleano = false\r\n        setTimeout(() => {\r\n          me.createNotify()\r\n        }, \"2000\");\r\n      }\r\n    }\r\n  },\r\n  created(){\r\n    let me = this;\r\n    me.usuario = JSON.parse(localStorage.getItem(\"usuario\"))\r\n  },\r\n  mounted(){\r\n    let me = this\r\n    moment.locale('es')\r\n    me.getNotificaciones()\r\n    // try {\r\n    //   this.socket.on('enviar', (data) => {\r\n    //     //si el mensaje envia un asesor\r\n    //     if(data.tipo == 'pedidos_chat'){\r\n    //       //si el mensaje envia un asesor\r\n    //       if(data.grupo == 11){\r\n    //         me.getNotificaciones()\r\n    //         if(me.pedido == undefined){\r\n    //         }else{\r\n    //           me.mostrarMensajes(me.pedido)\r\n    //         }\r\n    //         return\r\n    //       }\r\n    //     }\r\n    //     //Si hay una notificacion de verificaciones\r\n    //     if(data.tipo == 'verificaciones'){\r\n    //       //si el mensaje envia un asesor\r\n    //       if(data.grupo == 11){\r\n    //         if(me.usuario.id_group == 22 || me.usuario.id_group == 23 || me.usuario.id_group == 1){\r\n    //           me.$emit('rechargeVerificaciones',true)\r\n    //         }\r\n    //         return\r\n    //       }\r\n    //     }\r\n    //     if(data.grupo == 22 || data.grupo == 23 || data.grupo == 25){\r\n    //       if(me.usuario.id_group == 11 && data.id_asesor == me.usuario.idusuario){\r\n    //         me.getNotificaciones()\r\n    //         if(me.pedido == undefined){\r\n    //         }else{\r\n    //           me.mostrarMensajes(me.pedido)\r\n    //         }\r\n\r\n    //         return\r\n    //       }\r\n    //     }\r\n    //   })\r\n    // } catch (error) {\r\n    //     console.log(error)\r\n    // }\r\n  },\r\n  methods:{\r\n      getAdministradorMensaje(tr){\r\n        var resultado = \"\"\r\n        for(let i =0; i<tr.length;i++){\r\n          if(tr[i].id_group == \"23\" || tr[i].id_group == \"22\" || tr[i].id_group == \"1\" || tr[i].id_group == \"25\"){\r\n            resultado = tr[i].usuario\r\n            break;\r\n          }\r\n        }\r\n        return resultado;\r\n      },\r\n      getNotificaciones(){\r\n        let me = this\r\n        var tipo = 0\r\n        if(me.usuario.id_group == 11){\r\n        //envia el asesor\r\n        tipo = 0\r\n        }else{\r\n        //envia un facturador\r\n        tipo = 1\r\n        }\r\n        this.$http.get(this.$server_url+'verNotificacionPedidos?tipo='+tipo)\r\n          .then(function (res) {\r\n            let datos = res.data\r\n            var resultado = 0\r\n            if(datos.length > 0){\r\n              if(me.usuario.id_group == 11){\r\n              me.arregloNotificaciones = datos.filter(p => p.id_asesor == me.usuario.idusuario)\r\n              }else{\r\n                me.arregloNotificaciones = datos\r\n              }\r\n              me.tmparregloNotificaciones = me.arregloNotificaciones\r\n              //contar No vistos\r\n              resultado =  me.arregloNotificaciones.reduce((acc,valor) =>{\r\n              const respuesta = acc+ valor.contadorVistos\r\n              return respuesta\r\n              },0)\r\n            }\r\n            me.$emit('ChangecantidadMensajes',resultado)\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error + ' error');\r\n              // me.$vs.loading.close()\r\n          })\r\n      },\r\n      mostrarMensajes(tr){\r\n        let me = this\r\n        var tipo = 0\r\n        me.respuesta = ''\r\n        me.$vs.loading()\r\n        //me.arregloRespuestas = []\r\n        this.$http.get(this.$server_url+'mostrarMensajesPedido?id_pedido='+tr.id_pedido+'&id_group='+me.usuario.id_group)\r\n        .then(function (res) {\r\n          me.$vs.loading.close()\r\n          me.arregloRespuestas = res.data\r\n          me.bajar()\r\n          me.getNotificaciones()\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error + ' error');\r\n          me.$vs.loading.close()\r\n        })\r\n      },\r\n      bajar(){\r\n        $(document).ready(function() {\r\n          $(\"#tudiv\").animate({ scrollTop: \"+=55550px\" }, 800);\r\n        });\r\n      },\r\n      respuestaComentario(){\r\n        let me = this;\r\n        if(me.pedido.id_pedido == undefined || me.pedido.id_pedido == null || me.pedido.id_pedido == \"\"){\r\n          me.$vs.notify({\r\n            color: 'primary',\r\n            title: 'Mensaje',\r\n            text: 'Debe seleccionar un chat para enviar mensajes por favor'\r\n            })\r\n          return false;\r\n        }\r\n        if(me.respuesta.length >= 500){\r\n          me.$vs.notify({\r\n            color: 'primary',\r\n            title: 'Mensaje',\r\n            text: 'El motivo del ticket debe tener un maximo de 500 caracteres'\r\n            })\r\n          return false;\r\n        }\r\n          if(me.respuesta.length < 2){\r\n          me.$vs.notify({\r\n            color: 'primary',\r\n            title: 'Mensaje',\r\n            text: 'El motivo del ticket debe tener al menos 2 caracteres.'\r\n            })\r\n          return false;\r\n        }\r\n        let formData = new FormData();\r\n        formData.append('id_pedido',  me.pedido.id_pedido);\r\n        formData.append('comentario', me.respuesta);\r\n        formData.append('id_usuario', me.usuario.idusuario);\r\n        formData.append('id_group',   me.usuario.id_group)\r\n        me.$vs.loading();\r\n        this.$http.post(this.$server_url+'guardar_comentario', formData)\r\n          .then(function (res) {\r\n            me.$vs.loading.close()\r\n            me.boleano = true\r\n            me.getNotificaciones()\r\n            if(me.respuesta){\r\n              let datos = {\r\n                id_asesor:  me.pedido.id_asesor,\r\n                emisor:     me.usuario.idusuario,\r\n                grupo:      me.usuario.id_group,\r\n                tipo:       \"pedidos_chat\"\r\n              }\r\n              // me.sendSocket(datos)\r\n              me.mostrarMensajes(me.pedido)\r\n            }\r\n            me.createNotify()\r\n            // me.$vs.notify({\r\n            //   color: 'primary',\r\n            //   iconPack: 'feather',\r\n            //   icon: 'icon-check',\r\n            //   time:18000,\r\n            // })\r\n\r\n          })\r\n          .catch(function (error) {\r\n            me.$vs.loading.close()\r\n          })\r\n      },\r\n      createNotify(){\r\n        let me = this;\r\n        const tipo = document.querySelector(\"#notificacion\");\r\n        if(me.boleano){\r\n          tipo.classList.remove(\"hideTipo\");\r\n          tipo.classList.toggle(\"showTipo\");\r\n        }else{\r\n          tipo.classList.remove(\"showTipo\");\r\n          tipo.classList.toggle(\"hideTipo\");\r\n        }\r\n      },\r\n      // sendSocket(datos){\r\n      //   try {\r\n      //     this.socket.emit(\"enviar\", datos);\r\n      //     } catch (error) {\r\n      //       console.log(error)\r\n      //     }\r\n      // },\r\n      formatHorasMinutos(fecha){\r\n        let me = this;\r\n        const setFecha = moment(fecha).format('HH:mm')\r\n        return setFecha\r\n      },\r\n      formatoMes(fecha){\r\n        const setFecha = moment(fecha).format('MMMM')\r\n        const mes = setFecha.replace(/^\\w/, (c) => c.toUpperCase()).substring(0,3)\r\n        const year = moment(fecha).format('YYYY')\r\n        const day = moment(fecha).format('DD')\r\n        const resultado = year + \"-\" + mes + \"-\"+day\r\n        return resultado\r\n      },\r\n      elapsedTime(startTime) {\r\n        const x = new Date(startTime)\r\n        const now = new Date()\r\n        let timeDiff = now - x\r\n        timeDiff /= 1000\r\n\r\n        const seconds = Math.round(timeDiff)\r\n        timeDiff = Math.floor(timeDiff / 60)\r\n\r\n        const minutes = Math.round(timeDiff % 60)\r\n        timeDiff = Math.floor(timeDiff / 60)\r\n\r\n        const hours = Math.round(timeDiff % 24)\r\n        timeDiff = Math.floor(timeDiff / 24)\r\n\r\n        const days = Math.round(timeDiff % 365)\r\n        timeDiff = Math.floor(timeDiff / 365)\r\n\r\n        const years = timeDiff\r\n\r\n        if (years > 0) {\r\n            return `${years + (years > 1 ? ' Años ' : ' Año ')}`\r\n        } else if (days > 0) {\r\n            return `Hace ${days + (days > 1 ? ' Dias ' : ' Dia ')}`\r\n        } else if (hours > 0) {\r\n            return `Hace ${hours + (hours > 1 ? ' Horas ' : ' Hora ')}`\r\n        } else if (minutes > 0) {\r\n            return `Hace ${minutes + (minutes > 1 ? ' Minutos ' : ' Minuto ')}`\r\n        } else if (seconds > 0) {\r\n            return 'Hace '+ seconds + (seconds > 1 ? ' segundos' : 'justo ahora')\r\n        }\r\n\r\n        return ' Justo Ahora'\r\n      },\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n/*SHOW / SHOW*/\r\n.showTipo{\r\n  transition: 1s ease all;\r\n  opacity: 1;\r\n  transform: translateY(0%);\r\n}\r\n.hideTipo{\r\n  opacity:0;\r\n  position: relative;\r\n  transition: 1s ease all;\r\n  transform: translateY(-30%);\r\n}\r\n.vs-notifications{\r\n  max-width: 50px!important;\r\n}\r\n.vs-noti-bottom-right{\r\n  max-width: 50px!important;\r\n}\r\n.vs-noti-primary{\r\n  max-width: 50px!important;\r\n}\r\n.activeNoti{\r\n  max-width: 50px!important;\r\n}\r\n.content-noti{\r\n  max-width: 50px!important;\r\n}\r\n.contenedor{\r\n  position: relative;\r\n  display: inline-block;\r\n  text-align: center;\r\n}\r\n.texto-encima{\r\n  position: absolute;\r\n  top: 2px;\r\n  right:  -8px;\r\n  color: white;\r\n  z-index: 1000;\r\n  font-weight: bold;\r\n  font-size: 20px;\r\n  text-shadow: 1px 1px 2px #000;\r\n  background-color: red;\r\n  border-radius: 50%;\r\n  width: 30px;\r\n  height: 30px;\r\n  padding: 1px;\r\n}\r\n/* .centrado{\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n} */\r\n* {\r\nmargin: 0;\r\npadding: 0;\r\nbox-sizing: border-box;\r\nfont-family: Arial, Helvetica, sans-serif;\r\n}\r\n\r\nbody {\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\nmin-height: 100vh;\r\nbackground: linear-gradient(\r\n  #009688 0%,\r\n  #009688 130px,\r\n  #d9dbd5 130px,\r\n  #d9dbd5 100%\r\n);\r\n}\r\n\r\n.container {\r\nposition: relative;\r\nwidth: 100%;\r\nmax-width: 100%;\r\nheight: calc(100vh - 200px);\r\nbackground: #fff;\r\nbox-shadow: 0 1px 1px rgba(0, 0, 0, 0.06), 0 2px 5px 0 rgba(0, 0, 0, 0.06);\r\ndisplay: flex;\r\n}\r\n\r\n.container .leftSide {\r\nposition: relative;\r\nflex: 30%;\r\nbackground: #fff;\r\nborder-right: 1px solid rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.container .rightSide {\r\nposition: relative;\r\nflex: 70%;\r\nbackground: #e5ddd5;\r\n}\r\n\r\n.container .rightSide::before {\r\ncontent: \"\";\r\nposition: absolute;\r\ntop: 0;\r\nleft: 0;\r\nwidth: 100%;\r\nheight: 100%;\r\nbackground: url(\"../../../assets/images/home/pedidos/pattern.png\");\r\nopacity: 0.06;\r\n}\r\n\r\n.header {\r\nposition: relative;\r\nwidth: 100%;\r\nheight: 60px;\r\nbackground: #ededed;\r\ndisplay: flex;\r\njustify-content: space-between;\r\nalign-items: center;\r\npadding: 0 15px;\r\n}\r\n\r\n.userimg {\r\nposition: relative;\r\nwidth: 40px;\r\nheight: 40px;\r\noverflow: hidden;\r\nborder-radius: 50%;\r\ncursor: pointer;\r\n}\r\n\r\n.cover {\r\nposition: absolute;\r\ntop: 0;\r\nleft: 0;\r\nwidth: 100%;\r\nheight: 100%;\r\nobject-fit: cover;\r\n}\r\n\r\n.nav_icons {\r\ndisplay: flex;\r\n}\r\n\r\n.nav_icons li {\r\ndisplay: flex;\r\nlist-style: none;\r\ncursor: pointer;\r\ncolor: #51585c;\r\nfont-size: 1.5em;\r\nmargin-left: 22px;\r\n}\r\n\r\n.search_chat {\r\nposition: relative;\r\nwidth: 100%;\r\nheight: 60px;\r\nbackground: #f6f6f6;\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\npadding: 0  15px;\r\n}\r\n\r\n.search_chat div {\r\nwidth: 100%;\r\n}\r\n\r\n.search_chat div input {\r\nwidth: 100%;\r\noutline: none;\r\nborder: none;\r\nbackground: #fff;\r\npadding: 6px;\r\nheight: 38px;\r\nborder-radius: 30px;\r\nfont-size: 14px;\r\npadding-left: 40px;\r\n}\r\n\r\n.search_chat div input::placeholder {\r\ncolor: #bbb;\r\n}\r\n\r\n.search_chat div ion-icon {\r\nposition: absolute;\r\nleft: 30px;\r\ntop: 20px;\r\nfont-size: 1.2em;\r\n}\r\n\r\n.chatlist {\r\nposition: relative;\r\nheight: calc(100% - 110px);\r\noverflow: auto;\r\n}\r\n\r\n.chatlist .block {\r\nposition: relative;\r\nwidth: 100%;\r\ndisplay: flex;\r\nalign-items: center;\r\npadding: 15px;\r\nborder-bottom: 1px solid rgba(0, 0, 0, 0.06);\r\ncursor: pointer;\r\n}\r\n\r\n.chatlist .block.active {\r\nbackground: #ebebeb;\r\n}\r\n\r\n.chatlist .block:hover {\r\nbackground: #f5f5f5;\r\n}\r\n\r\n.chatlist .block .imgBox {\r\nposition: relative;\r\nmin-width: 45px;\r\nheight: 45px;\r\noverflow: hidden;\r\nborder-radius: 50%;\r\nmargin-right: 10px;\r\nwidth: 50px;\r\n}\r\n\r\n.chatlist .block .details {\r\nposition: relative;\r\nwidth: 100%;\r\n}\r\n\r\n.chatlist .block .details .listHead {\r\ndisplay: flex;\r\njustify-content: space-between;\r\nmargin-bottom: 5px;\r\n}\r\n\r\n.chatlist .block .details .listHead h4 {\r\nfont-size: 13px;\r\nfont-weight: 600;\r\ncolor: #111;\r\n}\r\n\r\n.chatlist .block .details .listHead .time {\r\nfont-size: 0.75em;\r\ncolor: #aaa;\r\n}\r\n\r\n.chatlist .block .details .listHead .time {\r\ncolor: #111;\r\n}\r\n\r\n.chatlist .block.unread .details .listHead .time {\r\ncolor: #06d755;\r\n}\r\n\r\n.message_p {\r\ndisplay: flex;\r\njustify-content: space-between;\r\nalign-items: center;\r\n}\r\n\r\n.message_p b {\r\nbackground: #06d755;\r\ncolor: #fff;\r\nmin-width: 20px;\r\nheight: 20px;\r\nborder-radius: 50%;\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\nfont-size: 0.75rem;\r\n}\r\n\r\n.message_p p {\r\ncolor: #aaa;\r\ndisplay: -webkit-box;\r\n-webkit-line-clamp: 1;\r\nfont-size: 0.9em;\r\n-webkit-box-orient: vertical;\r\noverflow: hidden;\r\ntext-overflow: ellipsis;\r\nfont-size: 11px;\r\n}\r\n\r\n.imgText {\r\nposition: relative;\r\ndisplay: flex;\r\njustify-content: center;\r\nalign-items: center;\r\n}\r\n\r\n.imgText h4 {\r\nfont-weight: 500;\r\nline-height: 1.2em;\r\nmargin-left: 15px;\r\nfont-size: 14px;\r\n}\r\n\r\n.imgText h4 span {\r\nfont-size: 0.8em;\r\ncolor: #555;\r\n}\r\n\r\n/* CHAT BOX */\r\n.chatbox {\r\nposition: relative;\r\nwidth: 100%;\r\nheight: calc(100% - 120px);\r\npadding: 50px;\r\noverflow-y: auto;\r\n}\r\n\r\n.message {\r\nposition: relative;\r\ndisplay: flex;\r\nwidth: 100%;\r\nmargin: 5px 0;\r\nmin-width: 100px!important;\r\n}\r\n\r\n.message p {\r\nposition: relative;\r\nright: 0;\r\ntext-align: right;\r\nmax-width: 65%;\r\npadding: 12px;\r\nbackground: #dcf8c8;\r\nborder-radius: 10px;\r\nfont-size: 0.9em;\r\n}\r\n\r\n.message p::before {\r\ncontent: \"\";\r\nposition: absolute;\r\ntop: 0;\r\nright: -12px;\r\nwidth: 20px;\r\nheight: 20px;\r\nbackground: linear-gradient(\r\n  135deg,\r\n  #dcf8c6 0%,\r\n  #dcf8c6 50%,\r\n  transparent 50%,\r\n  transparent\r\n);\r\n}\r\n\r\n.message p span {\r\ndisplay: block;\r\nmargin-top: 5px;\r\nfont-size: 0.85em;\r\nopacity: 0.5;\r\n}\r\n\r\n.my_msg {\r\njustify-content: flex-end;\r\n}\r\n\r\n.friend_msg {\r\njustify-content: flex-start;\r\n}\r\n\r\n.friend_msg p {\r\nbackground: #fff;\r\ntext-align: left;\r\n}\r\n\r\n.message.friend_msg p::before {\r\ncontent: \"\";\r\nposition: absolute;\r\ntop: 0;\r\nleft: -12px;\r\nwidth: 20px;\r\nheight: 20px;\r\nbackground: linear-gradient(\r\n  225deg,\r\n  #fff 0%,\r\n  #fff 50%,\r\n  transparent 50%,\r\n  transparent\r\n);\r\n}\r\n\r\n.chat_input {\r\nposition: relative;\r\nwidth: 100%;\r\nheight: 60px;\r\nbackground: #f0f0f0;\r\npadding: 15px;\r\ndisplay: flex;\r\njustify-content: space-between;\r\nalign-items: center;\r\n}\r\n\r\n.chat_input ion-icon {\r\ncursor: pointer;\r\nfont-size: 1.8em;\r\ncolor: #51585c;\r\n}\r\n\r\n.chat_input ion-icon:nth-child(1) {\r\nmargin-right: 15px;\r\n}\r\n\r\n.chat_input input {\r\nposition: relative;\r\nwidth: 90%;\r\nmargin: 0 20px;\r\npadding: 10px 20px;\r\nborder: none;\r\noutline: none;\r\nborder-radius: 30px;\r\nfont-size: 1em;\r\n}\r\n\r\n</style>\r\n"],"mappings":"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","ignoreList":[]}]}