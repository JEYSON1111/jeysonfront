{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\home\\padres\\encuesta\\EncuestaPreguntas.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\home\\padres\\encuesta\\EncuestaPreguntas.vue","mtime":1712682816006},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\babel.config.js","mtime":1712682813877},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\.babelrc","mtime":1712682813750},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nexport default {\n  data: function data() {\n    return {\n      usuario: [],\n      opcion: {\n        opcion: '',\n        pregunta_id: 0,\n        pregunta: ''\n      },\n      arregloOpciones: [],\n      editarOpcionActiva: false,\n      statusEliminar: false\n    };\n  },\n  props: {\n    encuesta_id: {\n      type: Number,\n      default: 0\n    }\n  },\n  created: function created() {\n    var me = this;\n    me.usuario = JSON.parse(localStorage.getItem('usuario'));\n  },\n  mounted: function mounted() {\n    var me = this;\n    me.getPreguntas();\n  },\n  methods: {\n    getPreguntas: function getPreguntas() {\n      var me = this;\n      me.$vs.loading();\n      this.$http.get(this.$server_url + 'encuesta?getPreguntas=yes&encuesta_id=' + me.encuesta_id).then(function (res) {\n        me.$vs.loading.close();\n        me.arregloOpciones = res.data;\n      }).catch(function (error) {\n        me.$vs.loading.close();\n        console.log(error + ' error');\n      });\n    },\n    editarOpcion: function editarOpcion(tr) {\n      var me = this;\n      me.opcion.pregunta_id = tr.id;\n      me.opcion.pregunta = tr.pregunta;\n      me.cargarOpcion();\n    },\n    quitarOpcion: function quitarOpcion(tr) {\n      var me = this;\n      me.opcion.pregunta_id = tr.id;\n      me.statusEliminar = true;\n    },\n    eliminarPregunta: function eliminarPregunta() {\n      var me = this;\n      me.$vs.loading();\n      var formData = new FormData();\n      formData.append('eliminarPregunta', 'yes');\n      formData.append('id', me.opcion.pregunta_id);\n      this.$http.post(this.$server_url + 'encuesta', formData).then(function (res) {\n        me.opcion.opcion = '';\n        me.opcion.pregunta_id = 0;\n        me.$vs.notify({\n          text: \"Se elimino correctamente la pregunta\",\n          color: 'primary',\n          iconPack: 'feather',\n          icon: 'icon-alert-triangle'\n        });\n        me.getPreguntas();\n        me.statusEliminar = false;\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    cargarOpcion: function cargarOpcion() {\n      var me = this;\n      if (me.opcion.pregunta_id > 0) {\n        if (me.opcion.pregunta.length < 5) {\n          me.$vs.notify({\n            text: 'Mínimo 5 caracteres para agregar la pregunta',\n            color: 'warning',\n            iconPack: 'feather',\n            icon: 'icon-alert-triangle'\n          });\n          return;\n        }\n      } else {\n        if (me.opcion.opcion.length < 5) {\n          me.$vs.notify({\n            text: 'Mínimo 5 caracteres para agregar la pregunta',\n            color: 'warning',\n            iconPack: 'feather',\n            icon: 'icon-alert-triangle'\n          });\n          return;\n        }\n      }\n      me.$vs.loading();\n      var formData = new FormData();\n      formData.append('guardarOpciones', 'yes');\n      formData.append('id', me.opcion.pregunta_id);\n      formData.append('encuesta_id', me.encuesta_id);\n      if (me.opcion.pregunta_id > 0) {\n        formData.append('pregunta', me.opcion.pregunta);\n      } else {\n        formData.append('pregunta', me.opcion.opcion);\n      }\n      formData.append('user_created', me.usuario.idusuario);\n      this.$http.post(this.$server_url + 'encuesta', formData).then(function (res) {\n        me.opcion.opcion = '';\n        me.opcion.pregunta_id = 0;\n        me.$vs.notify({\n          text: res.data.message,\n          color: 'primary',\n          iconPack: 'feather',\n          icon: 'icon-alert-triangle'\n        });\n        me.getPreguntas();\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }\n};",{"version":3,"names":["data","usuario","opcion","pregunta_id","pregunta","arregloOpciones","editarOpcionActiva","statusEliminar","props","encuesta_id","type","Number","default","created","me","JSON","parse","localStorage","getItem","mounted","getPreguntas","methods","$vs","loading","$http","get","$server_url","then","res","close","catch","error","console","log","editarOpcion","tr","id","cargarOpcion","quitarOpcion","eliminarPregunta","formData","FormData","append","post","notify","text","color","iconPack","icon","length","idusuario","message"],"sources":["src/views/home/padres/encuesta/EncuestaPreguntas.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <div v-if=\"statusEliminar\" class=\"w-full\"  align=\"center\">\r\n        \r\n                <p>Esta seguro de eliminar la pregunta</p>\r\n                <div class=\"flex justify-center\">\r\n                    <vs-button color=\"danger\" @click=\"eliminarPregunta()\" text-color=\"#fff\">Si, Eliminar</vs-button> \r\n                    <vs-button color=\"success\" text-color=\"#fff\" class=\"ml-2\" @click=\"statusEliminar = false\">Cancelar</vs-button>   \r\n                </div>\r\n        </div>\r\n        <div v-else>\r\n            <div class=\"vx-col w-full mb-2\" style=\"padding: 10px;\">\r\n                <vs-divider position=\"left\" color=\"success\">Crear preguntas</vs-divider>\r\n                <div class=\"vx-row mb-2\" id=\"editar\">\r\n                    <div class=\"vx-col w-full mb-1\">\r\n                        <vs-textarea class=\"mt-2\" @keyup.enter=\"opcion.pregunta_id = 0;cargarOpcion()\" label=\"Nombre Pregunta\" v-model=\"opcion.opcion\" height=\"60px\"/>\r\n                    </div>\r\n                    <div class=\"vx-row w-full\">\r\n                        <div class=\"vx-col sm:w-1/2 w-full mb-1\" align=\"left\">\r\n                            <vs-button color=\"success\" type=\"flat\" icon-pack=\"feather\" icon=\"icon-plus\" @click=\"opcion.pregunta_id = 0;cargarOpcion()\">Agregar Pregunta</vs-button>\r\n                            <!-- <vs-button color=\"primary\" class=\"w-full\" type=\"flat\" icon-pack=\"feather\" icon=\"icon-edit-1\" @click=\"confirmEditarOpcion(opcion)\">Editar</vs-button> -->\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"vx-col w-full\">\r\n                <vs-divider position=\"center\" color=\"primary\">Preguntas agregadas</vs-divider>\r\n                <vs-chip v-if=\"arregloOpciones.length > 0\">Cantidad preguntas: {{arregloOpciones.length}} </vs-chip><br><br>\r\n                <div class=\"vx-row mb-3\" :key=\"indexitem\" v-for=\"(item, indexitem) in arregloOpciones\">\r\n                    <div class=\"vx-col sm:w-4/5 w-full\">\r\n                        <vs-input class=\"w-full\" v-model=\"item.pregunta\"/>\r\n                        <div class=\"vx-row mt-3\" align=\"center\">\r\n                        <div class=\"vx-col sm:w-1/3 w-full\">\r\n                            <vs-button color=\"primary\" type=\"line\" icon-pack=\"feather\" icon=\"icon-edit-1\" size=\"small\" @click=\"editarOpcion(item)\">Editar</vs-button>\r\n                        </div>\r\n                        <div class=\"vx-col sm:w-1/3 w-full\">\r\n                            <vs-button color=\"danger\" type=\"line\" icon-pack=\"feather\" icon=\"icon-trash\" size=\"small\" @click=\"quitarOpcion(item)\">Eliminar</vs-button>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>  \r\n        </div>  \r\n    </div>\r\n</template>\r\n<script>\r\nexport default{\r\n    data(){\r\n        return{\r\n            usuario:[],\r\n            opcion:{\r\n                opcion:'',\r\n                pregunta_id:0,\r\n                pregunta:'',\r\n            },\r\n            arregloOpciones:[],\r\n            editarOpcionActiva:false,\r\n            statusEliminar:false,\r\n        }\r\n    },\r\n    props:{\r\n        encuesta_id:{\r\n            type:Number,\r\n            default:0\r\n        },\r\n    },\r\n    created(){\r\n        let me = this;\r\n        me.usuario = JSON.parse(localStorage.getItem('usuario'))\r\n    },\r\n    mounted(){\r\n        let me = this;\r\n        me.getPreguntas()\r\n    },\r\n    methods:{\r\n        getPreguntas() {\r\n            let me = this;\r\n            me.$vs.loading();\r\n            this.$http.get(this.$server_url+'encuesta?getPreguntas=yes&encuesta_id='+me.encuesta_id)\r\n                .then(function (res) {\r\n                    me.$vs.loading.close();\r\n                    me.arregloOpciones = res.data    \r\n                })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close();\r\n                    console.log(error + ' error');\r\n                })\r\n        },\r\n        editarOpcion(tr){\r\n            let me = this;\r\n            me.opcion.pregunta_id = tr.id\r\n            me.opcion.pregunta    = tr.pregunta\r\n            me.cargarOpcion()\r\n        },\r\n        quitarOpcion(tr){\r\n            let me = this\r\n            me.opcion.pregunta_id = tr.id\r\n            me.statusEliminar     = true\r\n        },\r\n        eliminarPregunta(){\r\n            let me = this;\r\n            me.$vs.loading()\r\n            const formData = new FormData();\r\n            formData.append('eliminarPregunta','yes')\r\n            formData.append('id',me.opcion.pregunta_id)\r\n            this.$http.post(this.$server_url+'encuesta', formData)\r\n            .then(res => {\r\n                me.opcion.opcion        = ''\r\n                me.opcion.pregunta_id   = 0\r\n                me.$vs.notify({\r\n                      text: \"Se elimino correctamente la pregunta\",\r\n                      color: 'primary',\r\n                      iconPack: 'feather',\r\n                      icon: 'icon-alert-triangle'\r\n                })\r\n                me.getPreguntas()\r\n                me.statusEliminar = false\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n        },  \r\n        cargarOpcion(){\r\n            let me = this;\r\n            if(me.opcion.pregunta_id > 0){\r\n                if(me.opcion.pregunta.length < 5){\r\n                    me.$vs.notify({\r\n                        text: 'Mínimo 5 caracteres para agregar la pregunta',\r\n                        color: 'warning',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-alert-triangle'\r\n                    })\r\n                    return\r\n                }\r\n            }else{\r\n                if(me.opcion.opcion.length < 5){\r\n                    me.$vs.notify({\r\n                        text: 'Mínimo 5 caracteres para agregar la pregunta',\r\n                        color: 'warning',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-alert-triangle'\r\n                    })\r\n                    return\r\n                }    \r\n            }\r\n           \r\n            me.$vs.loading()\r\n            const formData = new FormData();\r\n            formData.append('guardarOpciones','yes')\r\n            formData.append('id',               me.opcion.pregunta_id)\r\n            formData.append('encuesta_id',      me.encuesta_id);\r\n            if(me.opcion.pregunta_id > 0){\r\n                formData.append('pregunta',     me.opcion.pregunta);\r\n            }else{\r\n                formData.append('pregunta',     me.opcion.opcion);\r\n            }\r\n            formData.append('user_created',     me.usuario.idusuario);\r\n            this.$http.post(this.$server_url+'encuesta', formData)\r\n            .then(res => {\r\n                me.opcion.opcion        = ''\r\n                me.opcion.pregunta_id   = 0\r\n                me.$vs.notify({\r\n                      text: res.data.message,\r\n                      color: 'primary',\r\n                      iconPack: 'feather',\r\n                      icon: 'icon-alert-triangle'\r\n                })\r\n                me.getPreguntas()\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n        },\r\n    }\r\n}\r\n</script>"],"mappings":"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","ignoreList":[]}]}