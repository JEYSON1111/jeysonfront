{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\docentes\\chat\\ChatLog.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\docentes\\chat\\ChatLog.vue","mtime":1712682815752},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\babel.config.js","mtime":1712682813877},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\.babelrc","mtime":1712682813750},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nexport default {\n  props: {\n    userId: {\n      type: Number,\n      required: true\n    }\n  },\n  computed: {\n    chatData: function chatData() {\n      return this.$store.getters['chat/chatDataOfUser'](this.userId);\n    },\n    activeUserImg: function activeUserImg() {\n      return this.$store.state.AppActiveUser.photoURL;\n    },\n    senderImg: function senderImg() {\n      var _this = this;\n      return function (isSentByActiveUser) {\n        if (isSentByActiveUser) return _this.$store.state.AppActiveUser.photoURL;else return _this.$store.getters['chat/contact'](_this.userId).photoURL;\n      };\n    },\n    hasSentPreviousMsg: function hasSentPreviousMsg() {\n      return function (last_sender, current_sender) {\n        return last_sender === current_sender;\n      };\n    }\n  },\n  methods: {\n    isSameDay: function isSameDay(time_to, time_from) {\n      var date_time_to = new Date(Date.parse(time_to));\n      var date_time_from = new Date(Date.parse(time_from));\n      return date_time_to.getFullYear() === date_time_from.getFullYear() && date_time_to.getMonth() === date_time_from.getMonth() && date_time_to.getDate() === date_time_from.getDate();\n    },\n    toDate: function toDate(time) {\n      var locale = 'en-us';\n      var date_obj = new Date(Date.parse(time));\n      var monthName = date_obj.toLocaleString(locale, {\n        month: 'short'\n      });\n      return \"\".concat(date_obj.getDate(), \" \").concat(monthName);\n    },\n    scrollToBottom: function scrollToBottom() {\n      var _this2 = this;\n      this.$nextTick(function () {\n        _this2.$parent.$el.scrollTop = _this2.$parent.$el.scrollHeight;\n      });\n    }\n  },\n  updated: function updated() {\n    this.scrollToBottom();\n  },\n  mounted: function mounted() {\n    this.scrollToBottom();\n  }\n};",{"version":3,"names":["props","userId","type","Number","required","computed","chatData","$store","getters","activeUserImg","state","AppActiveUser","photoURL","senderImg","_this","isSentByActiveUser","hasSentPreviousMsg","last_sender","current_sender","methods","isSameDay","time_to","time_from","date_time_to","Date","parse","date_time_from","getFullYear","getMonth","getDate","toDate","time","locale","date_obj","monthName","toLocaleString","month","concat","scrollToBottom","_this2","$nextTick","$parent","$el","scrollTop","scrollHeight","updated","mounted"],"sources":["src/views/docentes/chat/ChatLog.vue"],"sourcesContent":["<!-- =========================================================================================\r\n    File Name: ChatLog.vue\r\n    Description: Chat Application - Log of chat\r\n    ----------------------------------------------------------------------------------------\r\n    Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\r\n      Author: Pixinvent\r\n    Author URL: http://www.themeforest.net/user/pixinvent\r\n========================================================================================== -->\r\n\r\n<template>\r\n    <div id=\"component-chat-log\" class=\"m-8\" v-if=\"chatData\">\r\n        <div v-for=\"(msg, index) in chatData.msg\" class=\"msg-grp-container\" :key=\"index\">\r\n\r\n            <!-- If previous msg is older than current time -->\r\n            <template v-if=\"chatData.msg[index-1]\">\r\n                <vs-divider v-if=\"!isSameDay(msg.time, chatData.msg[index-1].time)\" class=\"msg-time\">\r\n                    <span>{{ toDate(msg.time) }}</span>\r\n                </vs-divider>\r\n                <div class=\"spacer mt-8\" v-if=\"!hasSentPreviousMsg(chatData.msg[index-1].isSent, msg.isSent)\"></div>\r\n            </template>\r\n\r\n            <div class=\"flex items-start\" :class=\"[{'flex-row-reverse' : msg.isSent}]\">\r\n\r\n                <template v-if=\"chatData.msg[index-1]\">\r\n                    <template v-if=\"(!hasSentPreviousMsg(chatData.msg[index-1].isSent, msg.isSent) || !isSameDay(msg.time, chatData.msg[index-1].time))\">\r\n                        <vs-avatar size=\"40px\" class=\"border-2 shadow border-solid border-white m-0 flex-shrink-0\" :class=\"msg.isSent ? 'sm:ml-5 ml-3' : 'sm:mr-5 mr-3'\" :src=\"senderImg(msg.isSent)\"></vs-avatar>\r\n                    </template>\r\n                </template>\r\n\r\n                <template v-if=\"index == 0\">\r\n                    <vs-avatar size=\"40px\" class=\"border-2 shadow border-solid border-white m-0 flex-shrink-0\" :class=\"msg.isSent ? 'sm:ml-5 ml-3' : 'sm:mr-5 mr-3'\" :src=\"senderImg(msg.isSent)\"></vs-avatar>\r\n                </template>\r\n\r\n                <template v-if=\"chatData.msg[index-1]\">\r\n                    <div class=\"mr-16\" v-if=\"!(!hasSentPreviousMsg(chatData.msg[index-1].isSent, msg.isSent) || !isSameDay(msg.time, chatData.msg[index-1].time))\"></div>\r\n                </template>\r\n\r\n                <div class=\"msg break-words relative shadow-md rounded py-3 px-4 mb-2 rounded-lg max-w-sm\" :class=\"{'bg-primary-gradient text-white': msg.isSent, 'border border-solid border-transparent bg-white': !msg.isSent}\">\r\n                    <span>{{ msg.textContent }}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default{\r\n  props: {\r\n    userId: {\r\n      type: Number,\r\n      required: true\r\n    }\r\n  },\r\n  computed: {\r\n    chatData () {\r\n      return this.$store.getters['chat/chatDataOfUser'](this.userId)\r\n    },\r\n    activeUserImg () {\r\n      return this.$store.state.AppActiveUser.photoURL\r\n    },\r\n    senderImg () {\r\n      return (isSentByActiveUser) => {\r\n        if (isSentByActiveUser) return this.$store.state.AppActiveUser.photoURL\r\n        else return this.$store.getters['chat/contact'](this.userId).photoURL\r\n      }\r\n    },\r\n    hasSentPreviousMsg () {\r\n      return (last_sender, current_sender) => last_sender === current_sender\r\n    }\r\n  },\r\n  methods: {\r\n    isSameDay (time_to, time_from) {\r\n      const date_time_to = new Date(Date.parse(time_to))\r\n      const date_time_from = new Date(Date.parse(time_from))\r\n      return date_time_to.getFullYear() === date_time_from.getFullYear() &&\r\n                date_time_to.getMonth() === date_time_from.getMonth() &&\r\n                date_time_to.getDate() === date_time_from.getDate()\r\n    },\r\n    toDate (time) {\r\n      const locale = 'en-us'\r\n      const date_obj = new Date(Date.parse(time))\r\n      const monthName = date_obj.toLocaleString(locale, {\r\n        month: 'short'\r\n      })\r\n      return `${date_obj.getDate()  } ${   monthName}`\r\n    },\r\n    scrollToBottom () {\r\n      this.$nextTick(() => {\r\n        this.$parent.$el.scrollTop = this.$parent.$el.scrollHeight\r\n      })\r\n    }\r\n  },\r\n  updated () {\r\n    this.scrollToBottom()\r\n  },\r\n  mounted () {\r\n    this.scrollToBottom()\r\n  }\r\n}\r\n</script>\r\n"],"mappings":";AA8CA;EACAA,KAAA;IACAC,MAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,QAAA;IACA;EACA;EACAC,QAAA;IACAC,QAAA,WAAAA,SAAA;MACA,YAAAC,MAAA,CAAAC,OAAA,6BAAAP,MAAA;IACA;IACAQ,aAAA,WAAAA,cAAA;MACA,YAAAF,MAAA,CAAAG,KAAA,CAAAC,aAAA,CAAAC,QAAA;IACA;IACAC,SAAA,WAAAA,UAAA;MAAA,IAAAC,KAAA;MACA,iBAAAC,kBAAA;QACA,IAAAA,kBAAA,SAAAD,KAAA,CAAAP,MAAA,CAAAG,KAAA,CAAAC,aAAA,CAAAC,QAAA,MACA,OAAAE,KAAA,CAAAP,MAAA,CAAAC,OAAA,iBAAAM,KAAA,CAAAb,MAAA,EAAAW,QAAA;MACA;IACA;IACAI,kBAAA,WAAAA,mBAAA;MACA,iBAAAC,WAAA,EAAAC,cAAA;QAAA,OAAAD,WAAA,KAAAC,cAAA;MAAA;IACA;EACA;EACAC,OAAA;IACAC,SAAA,WAAAA,UAAAC,OAAA,EAAAC,SAAA;MACA,IAAAC,YAAA,OAAAC,IAAA,CAAAA,IAAA,CAAAC,KAAA,CAAAJ,OAAA;MACA,IAAAK,cAAA,OAAAF,IAAA,CAAAA,IAAA,CAAAC,KAAA,CAAAH,SAAA;MACA,OAAAC,YAAA,CAAAI,WAAA,OAAAD,cAAA,CAAAC,WAAA,MACAJ,YAAA,CAAAK,QAAA,OAAAF,cAAA,CAAAE,QAAA,MACAL,YAAA,CAAAM,OAAA,OAAAH,cAAA,CAAAG,OAAA;IACA;IACAC,MAAA,WAAAA,OAAAC,IAAA;MACA,IAAAC,MAAA;MACA,IAAAC,QAAA,OAAAT,IAAA,CAAAA,IAAA,CAAAC,KAAA,CAAAM,IAAA;MACA,IAAAG,SAAA,GAAAD,QAAA,CAAAE,cAAA,CAAAH,MAAA;QACAI,KAAA;MACA;MACA,UAAAC,MAAA,CAAAJ,QAAA,CAAAJ,OAAA,SAAAQ,MAAA,CAAAH,SAAA;IACA;IACAI,cAAA,WAAAA,eAAA;MAAA,IAAAC,MAAA;MACA,KAAAC,SAAA;QACAD,MAAA,CAAAE,OAAA,CAAAC,GAAA,CAAAC,SAAA,GAAAJ,MAAA,CAAAE,OAAA,CAAAC,GAAA,CAAAE,YAAA;MACA;IACA;EACA;EACAC,OAAA,WAAAA,QAAA;IACA,KAAAP,cAAA;EACA;EACAQ,OAAA,WAAAA,QAAA;IACA,KAAAR,cAAA;EACA;AACA","ignoreList":[]}]}