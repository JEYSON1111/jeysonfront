{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\salle\\administrador\\evaluaciones\\AreasComponent.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\salle\\administrador\\evaluaciones\\AreasComponent.vue","mtime":1712682816502},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\babel.config.js","mtime":1712682813877},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\.babelrc","mtime":1712682813750},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _defineProperty from \"C:/laragon/www/PRY_NEW_JEYSON/LOCAL/plataformaprolipa_vue/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/laragon/www/PRY_NEW_JEYSON/LOCAL/plataformaprolipa_vue/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport Vue from 'vue';\nimport axios from 'axios';\nimport vSelect from 'vue-select';\nexport default {\n  data: function data() {\n    return {\n      usuario: [],\n      listaAreas: [],\n      listaAsignaturas: [],\n      tmpListaAsignaturas: [],\n      asignaturaSelect: '',\n      datoEditar: '',\n      num: '',\n      modalAreas: false,\n      modalAsignaturas: false,\n      area: {\n        'id_area': '',\n        'nombre_area': '',\n        'descripcion_area': '',\n        'estado': ''\n      },\n      asignatura: {\n        'id_asignatura': '',\n        'id_area': '',\n        'nombre_asignatura': '',\n        'descripcion_asignatura': '',\n        'cant_preguntas': '',\n        'estado': ''\n      },\n      titulo: '',\n      txt_boton: '',\n      txt_msj: '',\n      id_eliminar: '',\n      modalSincronizar: false,\n      asignatura_sinc: [{\n        id_asignatura: '',\n        nombre_asignatura: ''\n      }],\n      asign_selec: [],\n      //VARIABLES PARA EXPORTAR EXCEL\n      arregloSelectArea: [],\n      arregloSelectAsignatura: [],\n      formats: ['xls', 'xlsx', 'csv', 'txt'],\n      fileName: null,\n      selectedFormat: 'xls',\n      cellAutoWidth: true,\n      activePrompt: false,\n      tipo: 0,\n      //FIN VARIABLES PARA EXPORTAR EXCEL\n      //VARIABLES DE PERIODOS EVALUACION\n      arregloPeriodos: [],\n      periodoSelect: '',\n      //FIN VARIABLES DE PERIODOS DE EVALUACION\n      //VARIABLES PARA ASIGNAR COMO AREA BASICA\n      datoFila: {}\n      //FIN VARIABLES PARA ASIGNAR COMO AREA BASICA\n    };\n  },\n  components: {\n    'v-select': vSelect\n  },\n  created: function () {\n    var _created = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            this.usuario = JSON.parse(localStorage.getItem('usuario'));\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, this);\n    }));\n    function created() {\n      return _created.apply(this, arguments);\n    }\n    return created;\n  }(),\n  mounted: function mounted() {\n    var me = this;\n    me.getPeriodosEvaluacion();\n  },\n  methods: _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({\n    getPeriodosEvaluacion: function getPeriodosEvaluacion() {\n      var me = this;\n      this.$http.get(this.$server_url + 'salle/periodos').then(function (response) {\n        me.arregloPeriodos = response.data;\n        var getEvaluacionSelect = localStorage.EvaluacionSelectSalle;\n        //si ya existe el periodo seleccionado lo asigno\n        if (getEvaluacionSelect) {\n          me.periodoSelect = parseInt(getEvaluacionSelect);\n          me.getAreas();\n          return;\n        }\n        if (me.arregloPeriodos.length > 0) {\n          me.periodoSelect = getEvaluacionSelect;\n          me.getAreas();\n        }\n      }).catch(function (error) {});\n    },\n    getAreas: function getAreas() {\n      var me = this;\n      me.listaAreas = [];\n      me.listaAsignaturas = [];\n      me.tmpListaAsignaturas = [];\n      me.asignaturaSelect = '';\n      // if(me.periodoSelect == null || me.periodoSelect == \"\" || me.periodoSelect == undefined){\n      //   me.$vs.notify({\n      //   text:'Seleccione una Evaluación Período por favor',\n      //   color:'warning',\n      //   iconPack: 'feather',\n      //   icon:'icon-check'})\n      //   return\n      // }\n      me.$vs.loading();\n      this.$http.get(this.$server_url + 'areas_salle').then(function (res) {\n        me.$vs.loading.close();\n        var datos = res.data;\n        if (datos.length > 0) {\n          me.listaAreas = datos.filter(function (p) {\n            return p.n_evaluacion == me.periodoSelect;\n          });\n        }\n      }).catch(function (err) {\n        me.$vs.loading.close();\n      });\n      this.$http.get(this.$server_url + 'asignaturas_salle').then(function (res) {\n        me.$vs.loading.close();\n        var datos2 = res.data;\n        if (datos2.length > 0) {\n          me.listaAsignaturas = datos2.filter(function (p) {\n            return p.n_evaluacion == me.periodoSelect;\n          });\n          me.tmpListaAsignaturas = datos2.filter(function (p) {\n            return p.n_evaluacion == me.periodoSelect;\n          });\n        }\n      }).catch(function (err) {\n        me.$vs.loading.close();\n      });\n    },\n    modalAgregaEdita: function modalAgregaEdita(item, valor) {\n      var me = this;\n      me.area.id_area = '';\n      me.area.nombre_area = '';\n      me.area.descripcion_area = '';\n      me.area.estado = 1;\n      if (valor == 1) {\n        me.titulo = 'Agregar área';\n        me.txt_boton = 'Registrar';\n        me.txt_msj = ' registrada ';\n      }\n      if (valor == 2) {\n        me.titulo = 'Editar área';\n        me.txt_boton = 'Editar';\n        me.txt_msj = ' editada ';\n        me.area.id_area = item.id_area;\n        me.area.estado = item.estado;\n        me.area.nombre_area = item.nombre_area;\n        me.area.descripcion_area = item.descripcion_area;\n      }\n      me.modalAreas = true;\n    },\n    modalAgregaEditaAsignatura: function modalAgregaEditaAsignatura(item, valor) {\n      var me = this;\n      me.asignatura.id_asignatura = '';\n      me.asignatura.id_area = '';\n      me.asignatura.nombre_asignatura = '';\n      me.asignatura.descripcion_asignatura = '';\n      me.asignatura.cant_preguntas = '';\n      me.asignatura.estado = 1;\n      // console.log(item, valor)\n      if (valor == 1) {\n        me.titulo = 'Agregar asignatura';\n        me.txt_boton = 'Registrar';\n        me.txt_msj = ' registrada ';\n      }\n      if (valor == 2) {\n        me.titulo = 'Editar asignatura';\n        me.txt_boton = 'Editar';\n        me.txt_msj = ' editada ';\n        me.asignatura.id_area = item.id_area;\n        me.asignatura.id_asignatura = item.id_asignatura;\n        me.asignatura.nombre_asignatura = item.nombre_asignatura;\n        me.asignatura.descripcion_asignatura = item.descripcion_asignatura;\n        me.asignatura.cant_preguntas = item.cant_preguntas;\n        me.asignatura.estado = item.estado;\n      }\n      me.modalAsignaturas = true;\n    },\n    agregarEditarArea: function agregarEditarArea() {\n      var me = this;\n      me.arregloSelectArea = [];\n      if (me.area.nombre_area == '' || me.area.nombre_area == null || me.area.descripcion_area == '' || me.area.descripcion_area == null) {\n        me.$vs.notify({\n          text: 'Complete todos los campos',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-alert-triangle'\n        });\n        return;\n      }\n      if (me.periodoSelect == null || me.periodoSelect == \"\" || me.periodoSelect == undefined) {\n        me.$vs.notify({\n          text: 'Seleccione un período Evaluación por favor',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-alert-triangle'\n        });\n        return;\n      }\n      me.$vs.loading();\n      var datas = new FormData();\n      datas.append('id_area', me.area.id_area);\n      datas.append('nombre_area', me.area.nombre_area);\n      datas.append('descripcion_area', me.area.descripcion_area);\n      datas.append('estado', me.area.estado);\n      datas.append('n_evaluacion', me.periodoSelect);\n      this.$http.post(this.$server_url + 'crea_area_salle', datas).then(function (res) {\n        me.$vs.notify({\n          text: 'Área ' + me.txt_msj + ' correctamente',\n          color: 'success',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        me.$vs.loading.close();\n        me.getAreas();\n      }).catch(function (err) {\n        console.log(err);\n        me.$vs.loading.close();\n      });\n      me.modalAreas = false;\n    },\n    agregarEditarAsignatura: function agregarEditarAsignatura() {\n      var me = this;\n      me.arregloSelectAsignatura = [];\n      if (me.asignatura.id_area == '' || me.asignatura.id_area == null || me.asignatura.nombre_asignatura == '' || me.asignatura.nombre_asignatura == null || me.asignatura.descripcion_asignatura == '' || me.asignatura.descripcion_asignatura == null || me.asignatura.cant_preguntas == '' || me.asignatura.cant_preguntas == null || me.asignatura.estado == '' || me.asignatura.estado == null) {\n        me.$vs.notify({\n          text: 'Complete todos los campos',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-alert-triangle'\n        });\n        return;\n      }\n      me.$vs.loading();\n      var datas = new FormData();\n      datas.append('id_asignatura', me.asignatura.id_asignatura);\n      datas.append('id_area', me.asignatura.id_area);\n      datas.append('nombre_asignatura', me.asignatura.nombre_asignatura);\n      datas.append('descripcion_asignatura', me.asignatura.descripcion_asignatura);\n      datas.append('cant_preguntas', me.asignatura.cant_preguntas);\n      datas.append('estado', me.asignatura.estado);\n      this.$http.post(this.$server_url + 'crea_asignatura_salle', datas).then(function (res) {\n        // console.log(res.data)\n        me.$vs.notify({\n          text: 'Asignatura ' + me.txt_msj + ' correctamente',\n          color: 'success',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        me.$vs.loading.close();\n        me.getAreas();\n      }).catch(function (err) {\n        console.log(err);\n        me.$vs.loading.close();\n      });\n      me.modalAsignaturas = false;\n    },\n    volver: function volver() {\n      var me = this;\n      me.modalAreas = false;\n      me.modalAsignaturas = false;\n    },\n    filtrarAsignaturas: function filtrarAsignaturas() {\n      var me = this;\n      // me.tmpAreas = me.listaAreas;\n      me.listaAsignaturas = [];\n      // console.log( me.asignaturaSelect )\n      for (var index = 0; index < me.tmpListaAsignaturas.length; index++) {\n        if (me.tmpListaAsignaturas[index].id_area == me.asignaturaSelect) {\n          me.listaAsignaturas.push(me.tmpListaAsignaturas[index]);\n        }\n      }\n      if (me.asignaturaSelect == null) {\n        me.listaAsignaturas = me.tmpListaAsignaturas;\n      }\n    },\n    confirmaEliminar: function confirmaEliminar(item) {\n      var me = this;\n      console.log(item);\n      me.id_eliminar = item.id_area;\n      // return\n      me.$vs.dialog({\n        type: 'confirm',\n        color: 'danger',\n        title: 'Confirmar',\n        text: 'Seguro desea eliminar este item?',\n        acceptText: 'Aceptar',\n        cancelText: 'Cancelar',\n        accept: me.eliminarItem\n      });\n    },\n    eliminarItem: function eliminarItem() {\n      var me = this;\n      me.$vs.loading();\n      this.$http.get(this.$server_url + 'eliminaArea/' + me.id_eliminar).then(function (res) {\n        console.log(res.data);\n        if (res.data > 0) {\n          me.$vs.notify({\n            time: 8000,\n            text: 'Esta área no puede ser eliminada, contiene ' + res.data + ' asignaturas creadas',\n            color: 'danger',\n            iconPack: 'feather',\n            icon: 'icon-alert-check'\n          });\n        } else {\n          me.$vs.notify({\n            text: 'Area eliminada  correctamente',\n            color: 'success',\n            iconPack: 'feather',\n            icon: 'icon-check'\n          });\n        }\n        me.getAreas();\n        me.$vs.loading.close();\n      }).catch(function (err) {\n        console.log(err);\n        me.$vs.loading.close();\n      });\n    },\n    confirmaEliminarAsignatura: function confirmaEliminarAsignatura(item) {\n      var me = this;\n      me.id_eliminar = item.id_asignatura;\n      // console.log(item)\n      // return\n      me.$vs.dialog({\n        type: 'confirm',\n        color: 'danger',\n        title: 'Confirmar',\n        text: 'Seguro desea eliminar este item?',\n        acceptText: 'Aceptar',\n        cancelText: 'Cancelar',\n        accept: me.eliminarItem\n      });\n    }\n  }, \"eliminarItem\", function eliminarItem() {\n    var me = this;\n    me.$vs.loading();\n    this.$http.get(this.$server_url + 'eliminaAsignatura/' + me.id_eliminar).then(function (res) {\n      // console.log(res.data)\n      if (res.data.contarSP > 0) {\n        //preguntas creadas\n        me.$vs.notify({\n          time: 8000,\n          text: 'Esta asignatura tiene ' + res.data.contarSP + ' preguntas asignadas, elimine dichas preguntas, antes de quitar esta asignatura',\n          color: 'danger',\n          iconPack: 'feather',\n          icon: 'icon-alert-check'\n        });\n      } else if (res.data.contarSDOC > 0) {\n        //asignaturas asignadas a docentes\n        me.$vs.notify({\n          time: 8000,\n          text: 'Algunos docentes tienen esta asignatura en su perfil, edite la asignación de los docentes, antes de eliminar esta asignatura',\n          color: 'danger',\n          iconPack: 'feather',\n          icon: 'icon-alert-check'\n        });\n      } else {\n        me.$vs.notify({\n          text: 'Asignatura eliminada correctamente',\n          color: 'success',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n      }\n      me.getAreas();\n      me.$vs.loading.close();\n    }).catch(function (err) {\n      console.log(err);\n      me.$vs.loading.close();\n    });\n  }), \"formSincronizar\", function formSincronizar(item) {\n    var me = this;\n    me.asign_selec = item;\n    me.modalSincronizar = true;\n  }), \"sincronizarPreguntas\", function sincronizarPreguntas() {\n    var me = this;\n    me.$vs.loading();\n    this.$http.get(this.$server_url + 'salle_sincronizar_preguntas/' + me.asignatura_sinc.id_asignatura + '/' + me.asign_selec.id_asignatura + '/' + me.usuario.idusuario + '/' + localStorage.EvaluacionSelectSalle).then(function (res) {\n      if (res.data == '1') {\n        me.$vs.notify({\n          text: 'Preguntas sincronizadas correctamente.',\n          color: 'success',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n      } else {\n        me.$vs.notify({\n          text: 'La asignatura seleccionada no tiene asignaturas para sincronizar.',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-alert-triangle'\n        });\n      }\n      me.$vs.loading.close();\n    }).catch(function (err) {\n      me.$vs.loading.close();\n    });\n  }), \"OpenExportar\", function OpenExportar() {\n    var me = this;\n    //tipo => 0 exportar areas;\n    if (me.tipo == 0) {\n      if (me.arregloSelectArea.length == 0) {\n        me.$vs.notify({\n          text: 'Seleccione al menos un registro para exportar por favor',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        return;\n      }\n    }\n    if (me.tipo == 1) {\n      if (me.arregloSelectAsignatura.length == 0) {\n        me.$vs.notify({\n          text: 'Seleccione al menos un registro para exportar por favor',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        return;\n      }\n    }\n    me.activePrompt = true;\n  }), \"confirmarAsignarAreaBasica\", function confirmarAsignarAreaBasica() {\n    var me = this;\n    this.$vs.dialog({\n      type: 'confirm',\n      color: 'danger',\n      title: \"Confirmar\",\n      acceptText: 'Si, deseo asignar',\n      cancelText: 'Cancelar',\n      text: 'Estas seguro de asignar como área básica',\n      accept: this.AsignarComoAreaBasica\n    });\n  }), \"AsignarComoAreaBasica\", function AsignarComoAreaBasica() {\n    var me = this;\n    var formData = new FormData();\n    formData.append('id_area', me.datoFila.id_area);\n    formData.append('n_evaluacion', localStorage.EvaluacionSelectSalle);\n    me.$vs.loading();\n    this.$http.post(this.$server_url + 'AsignarComoAreaBasica', formData).then(function (res) {\n      me.getAreas();\n      me.$vs.loading.close();\n      me.$vs.notify({\n        text: res.data.message,\n        color: 'success',\n        iconPack: 'feather',\n        icon: 'icon-check'\n      });\n    });\n  }), \"exportToExcel\", function exportToExcel() {\n    var _this = this;\n    var me = this;\n    var headerVal = [];\n    var headerTitle = [];\n    //AREA\n    if (me.tipo == 0) {\n      headerTitle = ['Área', 'Descripción', 'Estado', 'Período'];\n      headerVal = ['nombre_area', 'descripcion_area', 'estadoArea', 'periodo'];\n    }\n    //ASIGNATURA\n    if (me.tipo == 1) {\n      headerTitle = ['Área', 'Asignatura', 'Descripción', 'Cantidad Preguntas', 'Estado', 'Período'];\n      headerVal = ['nombre_area', 'nombre_asignatura', 'descripcion_asignatura', 'cant_preguntas', 'estadoAsignatura', 'periodo'];\n    }\n    //tipo array\n    var arryPrint = [];\n    //tipo => 0 = areas\n    if (me.tipo == 0) arryPrint = me.arregloSelectArea;\n    if (me.tipo == 1) arryPrint = me.arregloSelectAsignatura;\n    import('@/vendor/Export2Excel').then(function (excel) {\n      var data = _this.formatJson(headerVal, arryPrint);\n      excel.export_json_to_excel({\n        header: headerTitle,\n        data: data,\n        filename: _this.fileName,\n        autoWidth: _this.cellAutoWidth,\n        bookType: _this.selectedFormat\n      });\n      _this.clearFields();\n      _this.arregloSelectArea = [];\n      _this.arregloSelectAsignatura = [];\n    });\n  }), \"formatJson\", function formatJson(filterVal, jsonData) {\n    return jsonData.map(function (v) {\n      return filterVal.map(function (j) {\n        return v[j];\n      });\n    });\n  }), \"clearFields\", function clearFields() {\n    this.fileName = '';\n    this.cellAutoWidth = true;\n    this.selectedFormat = 'xls';\n  })\n};",{"version":3,"names":["Vue","axios","vSelect","data","usuario","listaAreas","listaAsignaturas","tmpListaAsignaturas","asignaturaSelect","datoEditar","num","modalAreas","modalAsignaturas","area","asignatura","titulo","txt_boton","txt_msj","id_eliminar","modalSincronizar","asignatura_sinc","id_asignatura","nombre_asignatura","asign_selec","arregloSelectArea","arregloSelectAsignatura","formats","fileName","selectedFormat","cellAutoWidth","activePrompt","tipo","arregloPeriodos","periodoSelect","datoFila","components","created","_created","_asyncToGenerator","regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","JSON","parse","localStorage","getItem","stop","apply","arguments","mounted","me","getPeriodosEvaluacion","methods","_defineProperty","$http","get","$server_url","then","response","getEvaluacionSelect","EvaluacionSelectSalle","parseInt","getAreas","length","catch","error","$vs","loading","res","close","datos","filter","p","n_evaluacion","err","datos2","modalAgregaEdita","item","valor","id_area","nombre_area","descripcion_area","estado","modalAgregaEditaAsignatura","descripcion_asignatura","cant_preguntas","agregarEditarArea","notify","text","color","iconPack","icon","undefined","datas","FormData","append","post","console","log","agregarEditarAsignatura","volver","filtrarAsignaturas","index","push","confirmaEliminar","dialog","type","title","acceptText","cancelText","accept","eliminarItem","time","confirmaEliminarAsignatura","contarSP","contarSDOC","formSincronizar","sincronizarPreguntas","idusuario","OpenExportar","confirmarAsignarAreaBasica","AsignarComoAreaBasica","formData","message","exportToExcel","_this","headerVal","headerTitle","arryPrint","excel","formatJson","export_json_to_excel","header","filename","autoWidth","bookType","clearFields","filterVal","jsonData","map","v","j"],"sources":["src/views/salle/administrador/evaluaciones/AreasComponent.vue"],"sourcesContent":["<template>\r\n<div class=\"vx-col md:w-full w-full mb-base\">\r\n  <vs-popup small title=\"Sincronizar preguntas\" subtitle=\"Puede cargar las preguntas de otra asignatura en esta.\" :active.sync=\"modalSincronizar\"><br>\r\n      <div class=\"vx-col w-full mb-base mt-4\">\r\n          Seleccione una asignatura\r\n          <v-select icon-pack=\"feather\" class=\"mb-6\" icon=\"icon-home\" :options=\"listaAsignaturas\" :reduce=\"listaAsignaturas => listaAsignaturas\" label=\"nombre_asignatura\" v-model=\"asignatura_sinc\" placeholder=\"Seleccione una asignatura\"></v-select>\r\n      </div>\r\n\r\n      <br><br>\r\n      <div class=\"mb-6 p-5\" style=\"border-radius: 5px; background-color: #FFE1FB; color: #BF0EA9;\">\r\n        Las preguntas de la asignatura <b>{{asign_selec.nombre_asignatura}}</b> serán eliminadas y serán cargadas las preguntas de la\r\n        asignatura <b>{{asignatura_sinc.nombre_asignatura}}</b>\r\n      </div>\r\n\r\n      <br>\r\n      <div class=\"vx-col sm:w-2/3 w-full ml-auto mt-6\" align=\"right\">\r\n          <vs-button class=\"m-1\" color=\"primary\" type=\"border\" @click=\"sincronizarPreguntas();\">Sincronizar</vs-button>\r\n          <vs-button class=\"m-1\" color=\"danger\" type=\"border\" @click=\"modalSincronizar=false\">Cancelar</vs-button>\r\n      </div>\r\n  </vs-popup>\r\n  <!--MODAL GUARDAR AREAS-->\r\n  <vs-popup :title=\"titulo\" :active.sync=\"modalAreas\">\r\n      <div class=\"vx-col sm:w-1/1 w-full mb-4\">\r\n          <vs-input class=\"w-full\" type=\"text\" label=\"Nombre:\" icon-pack=\"feather\" icon=\"icon-type\" maxlength=\"200\" icon-no-border v-model=\"area.nombre_area\" />\r\n      </div>\r\n      <div class=\"vx-col  w-full mb-4\">\r\n          <vs-input class=\"w-full\" type=\"text\" label=\"Descripción:\" icon-pack=\"feather\" icon=\"icon-align-center\" maxlength=\"200\" icon-no-border v-model=\"area.descripcion_area\" />\r\n      </div>\r\n      <div class=\"vx-col w-full mb-4\">\r\n        <vs-radio class=\"m-2\" v-model=\"area.estado\" vs-value=\"1\">Activa</vs-radio>\r\n        <vs-radio class=\"m-2\" v-model=\"area.estado\" color=\"danger\" vs-value=\"0\">Bloqueada</vs-radio>\r\n      </div>\r\n      <div class=\"flex justify-center\">\r\n        <p v-for=\"(item,key) in arregloPeriodos\" :key=\"key\">\r\n          <vs-chip v-if=\"item.id == periodoSelect\">Evaluación Seleccionada: <b class=\"ml-1\">{{ item.nombre }}</b></vs-chip>\r\n        </p>\r\n        <br>\r\n      </div>\r\n      <div class=\"flex justify-center\">\r\n          <vs-button class=\"m-2\" color=\"primary\" type=\"border\" @click=\"agregarEditarArea();\">{{txt_boton}}</vs-button>\r\n          <vs-button class=\"m-2\" color=\"danger\" type=\"border\" @click=\"volver();\">Cancelar</vs-button>\r\n      </div>\r\n  </vs-popup>\r\n  <vs-popup :title=\"titulo\" :active.sync=\"modalAsignaturas\">\r\n      <div class=\"vx-col sm:w-1/1 w-full mb-4\">\r\n          <span>Área</span>\r\n          <v-select icon-pack=\"feather\" icon=\"icon-home\" :options=\"listaAreas\" :reduce=\"listaAreas => listaAreas.id_area\" label=\"nombre_area\" v-model=\"asignatura.id_area\" placeholder=\"Seleccione...\"></v-select>\r\n      </div>\r\n      <div class=\"vx-col sm:w-1/1 w-full mb-4\">\r\n          <vs-input class=\"w-full\" type=\"text\" label=\"Nombre:\" icon-pack=\"feather\" icon=\"icon-type\" maxlength=\"200\" icon-no-border v-model=\"asignatura.nombre_asignatura\" />\r\n      </div>\r\n      <div class=\"vx-col  w-full mb-4\">\r\n          <vs-input class=\"w-full\" type=\"text\" label=\"Descripción:\" icon-pack=\"feather\" icon=\"icon-align-center\" maxlength=\"200\" icon-no-border v-model=\"asignatura.descripcion_asignatura\" />\r\n      </div>\r\n      <div class=\"vx-col sm:w-1/2 w-full mb-4\">\r\n          <vs-input class=\"w-full\" type=\"number\" label=\"Preguntas mínimas para la evaluación:\" icon-pack=\"feather\" icon=\"icon-hash\" min=\"0\" max=\"999\" icon-no-border v-model=\"asignatura.cant_preguntas\" />\r\n      </div>\r\n      <div class=\"vx-col sm:w-1/2 w-full mb-4\">\r\n        <vs-radio class=\"m-2\" v-model=\"asignatura.estado\" vs-value=\"1\">Activa</vs-radio>\r\n        <vs-radio class=\"m-2\" v-model=\"asignatura.estado\" color=\"danger\" vs-value=\"0\">Bloqueada</vs-radio>\r\n      </div>\r\n      <div class=\"flex justify-center\">\r\n        <p v-for=\"(item,key) in arregloPeriodos\" :key=\"key\">\r\n          <vs-chip v-if=\"item.id == periodoSelect\">Evaluación Seleccionada: <b class=\"ml-1\">{{ item.nombre }}</b></vs-chip>\r\n        </p>\r\n        <br>\r\n      </div>\r\n      <div class=\"vx-col   w-full mb-4\">\r\n          <vs-button class=\"m-2\" color=\"primary\" type=\"border\" @click=\"agregarEditarAsignatura();\">{{txt_boton}}</vs-button>\r\n          <vs-button class=\"m-2\" color=\"danger\" type=\"border\" @click=\"volver();\">Cancelar</vs-button>\r\n      </div>\r\n  </vs-popup>\r\n  <vx-card>\r\n    <!-- <div class=\"flex mt-5\">\r\n      <div style=\"width: 40%;\">\r\n        <p> <ion-icon name=\"contract-outline\"></ion-icon>  Filtro por Evalución período</p>\r\n      </div>\r\n      <div style=\"width: 60%;\">\r\n        <v-select :options=\"arregloPeriodos\" @input=\"getAreas()\" :reduce=\"arregloPeriodos => arregloPeriodos.id\" label=\"nombre\" class=\"w-full\" v-model=\"periodoSelect\" />\r\n      </div>\r\n    </div> -->\r\n    <vs-tabs alignment=\"fixed\" class=\"mt-5\">\r\n      <vs-tab :label=\"'Areas ( ' + listaAreas.length +' )'\">\r\n        <div class=\"flex mt-3\">\r\n          <vs-button color=\"primary\"  type=\"border\" icon-pack=\"feather\" icon=\"icon-plus\" @click=\"modalAgregaEdita(0,1);\">Agregar</vs-button>\r\n          <p class=\"exportButton\" @click=\"tipo=0;OpenExportar()\"><vs-chip transparent color=\"success\" class=\"ml-3 cursor-pointer\" style=\"font-size:15px;padding:15px;\"><ion-icon name=\"cloud-download-outline\" style=\"font-size:20px;\"></ion-icon> <span class=\"ml-2\">Exportar</span></vs-chip></p>\r\n        </div>\r\n        <vs-table v-model=\"arregloSelectArea\" stripe multiple max-items=\"20\" search pagination :data=\"listaAreas\" style=\"margin-top:-20px\">\r\n          <template slot=\"thead\">\r\n              <vs-th width=\"40%\" sort-key=\"nombre\">Nombre</vs-th>\r\n              <vs-th width=\"30%\" sort-key=\"descripcion\">Descripción</vs-th>\r\n              <vs-th width=\"20%\">Período Evaluación</vs-th>\r\n              <vs-th width=\"15%\" sort-key=\"estado\">Estado</vs-th>\r\n              <vs-th width=\"15%\">Acciones</vs-th>\r\n          </template>\r\n          <template slot-scope=\"{data}\">\r\n              <vs-tr :data=\"tr\" :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                <vs-td width=\"40%\">\r\n                  {{data[indextr].nombre_area}}\r\n                </vs-td>\r\n                <vs-td width=\"30%\">\r\n                  {{data[indextr].descripcion_area}}\r\n                </vs-td>\r\n                <vs-td>\r\n                  {{ tr.periodo }}\r\n                </vs-td>\r\n                <vs-td>\r\n                  <vs-chip v-if=\"data[indextr].estado == 1\" size=\"small\">Activa</vs-chip>\r\n                  <vs-chip v-if=\"data[indextr].estado == 0\" color=\"danger\" size=\"small\">Bloqueada</vs-chip>\r\n                  <p class=\"mt-2\">\r\n                    <vs-chip color=\"success\" v-if=\"tr.area_basica == 1\">Área Básica</vs-chip>\r\n                  </p>\r\n                </vs-td>\r\n                <vs-td align=\"center\">\r\n                    <vx-tooltip style=\"display: inline-block;\" text=\"Editar\" position=\"top\" color=\"primary\">\r\n                      <vs-button  v-if=\"data[indextr].area_basica != '1'\" icon-pack=\"feather\" icon=\"icon-edit\" type=\"line\" radius size=\"large\" class=\"m-1\" color=\"primary\" @click=\"modalAgregaEdita(tr,2);\"></vs-button>\r\n                    </vx-tooltip>\r\n                    <vx-tooltip style=\"display: inline-block;\" text=\"Eliminar\" position=\"top\" color=\"primary\">\r\n                      <vs-button  v-if=\"data[indextr].area_basica != '1'\" icon-pack=\"feather\" icon=\"icon-trash\" type=\"line\" radius size=\"large\" class=\"m-1\" color=\"danger\" @click=\"confirmaEliminar(tr);\"></vs-button>\r\n                    </vx-tooltip>\r\n                    <vx-tooltip style=\"display: inline-block;\" text=\"Asignar como área básica\" position=\"top\" color=\"primary\">\r\n                      <vs-button  v-if=\"data[indextr].area_basica == '0'\" icon-pack=\"feather\" icon=\"icon-check\" type=\"line\" size=\"small\" class=\"m-1\" color=\"dark\" @click=\"datoFila=tr;confirmarAsignarAreaBasica(tr);\">Asignar</vs-button>\r\n                    </vx-tooltip>\r\n                </vs-td>\r\n              </vs-tr>\r\n          </template>\r\n        </vs-table>\r\n      </vs-tab>\r\n    <vs-tab :label=\"'Asignaturas ( ' + listaAsignaturas.length +' )'\">\r\n      <div class=\"flex mt-3\">\r\n        <vs-button color=\"primary\"  type=\"border\" icon-pack=\"feather\" icon=\"icon-plus\" @click=\"modalAgregaEditaAsignatura(0,1);\">Agregar</vs-button>\r\n        <p class=\"exportButton\" @click=\"tipo=1;OpenExportar()\"><vs-chip transparent color=\"success\" class=\"ml-3 cursor-pointer\" style=\"font-size:15px;padding:15px;\"><ion-icon name=\"cloud-download-outline\" style=\"font-size:20px;\"></ion-icon> <span class=\"ml-2\">Exportar</span></vs-chip></p>\r\n      </div>\r\n      <vs-table v-model=\"arregloSelectAsignatura\" multiple max-items=\"20\" search pagination :data=\"listaAsignaturas\" style=\"margin-top:-20px\">\r\n        <template slot=\"header\">\r\n          <div class=\"mt-6 mb-4\">\r\n            <br>\r\n            <v-select @input=\"filtrarAsignaturas()\" style=\"width:350px\" :options=\"listaAreas\" :reduce=\"listaAreas => listaAreas.id_area\" label=\"nombre_area\" v-model=\"asignaturaSelect\" placeholder=\"Filtrar areas...\"></v-select>\r\n          </div>\r\n        </template>\r\n        <template slot=\"thead\">\r\n          <vs-th sort-key=\"nombre\">Nombre</vs-th>\r\n          <vs-th sort-key=\"area\">Área</vs-th>\r\n          <vs-th sort-key=\"cant_preguntas\">Preguntas</vs-th>\r\n          <vs-th sort-key=\"cant_preguntas\">Período Evaluación</vs-th>\r\n          <vs-th sort-key=\"estado\">Estado</vs-th>\r\n          <vs-th>Acciones</vs-th>\r\n        </template>\r\n        <template slot-scope=\"{data}\">\r\n          <vs-tr :data=\"tr\" :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n            <vs-td width=\"25%\">\r\n              <br>\r\n              {{data[indextr].nombre_asignatura}}<br>\r\n              <small>{{data[indextr].descripcion_asignatura}}</small>\r\n            </vs-td>\r\n            <vs-td width=\"20%\">\r\n              <span v-for=\"(index , lista) in listaAreas\" :key=\"lista\">\r\n                <span v-if=\"index.id_area === tr.id_area \"> {{index.nombre_area}} </span>\r\n              </span>\r\n            </vs-td>\r\n            <vs-td width=\"5%\">\r\n              {{data[indextr].cant_preguntas}}\r\n            </vs-td>\r\n            <vs-td width=\"10%\">\r\n              {{ tr.periodo }}\r\n            </vs-td>\r\n            <vs-td width=\"15%\">\r\n              <vs-chip v-if=\"data[indextr].estado == 1\" size=\"small\">Activa</vs-chip>\r\n              <vs-chip v-if=\"data[indextr].estado == 0\" color=\"danger\" size=\"small\">Bloqueada</vs-chip>\r\n            </vs-td>\r\n            <vs-td width=\"15%\">\r\n              <vx-tooltip style=\"display: inline-block;\" text=\"Editar\" position=\"top\" color=\"primary\">\r\n                <vs-button style=\"display:inline\" type=\"line\" radius size=\"large\" icon-pack=\"feather\" icon=\"icon-edit\" class=\"m-2\" color=\"primary\" @click=\"modalAgregaEditaAsignatura(tr,2);\"></vs-button>\r\n              </vx-tooltip>\r\n              <vx-tooltip style=\"display: inline-block;\" text=\"Eliminar\" position=\"top\" color=\"primary\">\r\n                <vs-button style=\"display:inline\" type=\"line\" radius size=\"large\" icon-pack=\"feather\" icon=\"icon-trash\" class=\"m-1\" color=\"danger\" @click=\"confirmaEliminarAsignatura(tr);\"></vs-button>\r\n              </vx-tooltip>\r\n              <!-- <vx-tooltip style=\"display: inline-block;\" text=\"Sincronizar / mover preguntas\" position=\"top\" color=\"primary\">\r\n                <vs-button style=\"display:inline\" type=\"line\" radius size=\"large\" icon-pack=\"feather\" icon=\"icon-refresh-ccw\"  class=\"m-1\" color=\"success\" @click=\"formSincronizar(tr)\"></vs-button>\r\n              </vx-tooltip> -->\r\n            </vs-td>\r\n          </vs-tr>\r\n        </template>\r\n      </vs-table>\r\n    </vs-tab>\r\n    </vs-tabs>\r\n  </vx-card>\r\n  <!--MODALES-->\r\n  <!--MODAL PARA EXPORTAR-->\r\n  <!--modal exportar-->\r\n  <vs-prompt title=\"Exportar a Excel\" class=\"export-options\" @cancle=\"clearFields\" @accept=\"exportToExcel\" accept-text=\"Exportar\" @close=\"clearFields\" :active.sync=\"activePrompt\">\r\n    <vs-alert class=\"mb-3\" color=\"danger\" icon-pack=\"feather\" icon=\"icon-info\">\r\n        <span>Recuerde <b>seleccionar</b> los registros que desea exportar.</span>\r\n    </vs-alert>\r\n    <vs-input v-model=\"fileName\" placeholder=\"Ingrese el nombre del archivo\" class=\"w-full\" />\r\n    <v-select v-model=\"selectedFormat\" :options=\"formats\" class=\"my-4\" />\r\n    <div class=\"flex\">\r\n    </div>\r\n  </vs-prompt>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport Vue from 'vue'\r\nimport axios from 'axios'\r\nimport vSelect from 'vue-select'\r\nexport default {\r\n    data() {\r\n        return {\r\n          usuario: [],\r\n          listaAreas: [],\r\n          listaAsignaturas: [],\r\n          tmpListaAsignaturas: [],\r\n          asignaturaSelect: '',\r\n          datoEditar: '',\r\n          num: '',\r\n          modalAreas: false,\r\n          modalAsignaturas: false,\r\n          area: {\r\n              'id_area': '',\r\n              'nombre_area': '',\r\n              'descripcion_area': '',\r\n              'estado': '',\r\n          },\r\n          asignatura: {\r\n              'id_asignatura': '',\r\n              'id_area': '',\r\n              'nombre_asignatura': '',\r\n              'descripcion_asignatura': '',\r\n              'cant_preguntas': '',\r\n              'estado': '',\r\n          },\r\n          titulo: '',\r\n          txt_boton: '',\r\n          txt_msj: '',\r\n          id_eliminar: '',\r\n          modalSincronizar: false,\r\n          asignatura_sinc: [{id_asignatura: '', nombre_asignatura: ''}],\r\n          asign_selec: [],\r\n          //VARIABLES PARA EXPORTAR EXCEL\r\n          arregloSelectArea: [],\r\n          arregloSelectAsignatura:[],\r\n          formats: ['xls', 'xlsx', 'csv', 'txt'],\r\n          fileName:null,\r\n          selectedFormat: 'xls',\r\n          cellAutoWidth: true,\r\n          activePrompt: false,\r\n          tipo:0,\r\n          //FIN VARIABLES PARA EXPORTAR EXCEL\r\n          //VARIABLES DE PERIODOS EVALUACION\r\n          arregloPeriodos:[],\r\n          periodoSelect:'',\r\n          //FIN VARIABLES DE PERIODOS DE EVALUACION\r\n          //VARIABLES PARA ASIGNAR COMO AREA BASICA\r\n          datoFila:{},\r\n          //FIN VARIABLES PARA ASIGNAR COMO AREA BASICA\r\n        }\r\n    },\r\n    components: {\r\n      'v-select': vSelect,\r\n    },\r\n    async created() {\r\n      this.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n    },\r\n    mounted() {\r\n      let me = this;\r\n      me.getPeriodosEvaluacion()\r\n    },\r\n    methods: {\r\n      getPeriodosEvaluacion() {\r\n        let me = this;\r\n        this.$http.get(this.$server_url+'salle/periodos')\r\n          .then(function (response) {\r\n            me.arregloPeriodos = response.data;\r\n            let getEvaluacionSelect = localStorage.EvaluacionSelectSalle\r\n            //si ya existe el periodo seleccionado lo asigno\r\n            if(getEvaluacionSelect){\r\n              me.periodoSelect = parseInt(getEvaluacionSelect)\r\n              me.getAreas()\r\n              return\r\n            }\r\n            if(me.arregloPeriodos.length > 0){\r\n              me.periodoSelect = getEvaluacionSelect\r\n              me.getAreas()\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n          })\r\n      },\r\n      getAreas() {\r\n        let me                  = this;\r\n        me.listaAreas           = []\r\n        me.listaAsignaturas     = []\r\n        me.tmpListaAsignaturas  = []\r\n        me.asignaturaSelect     = ''\r\n        // if(me.periodoSelect == null || me.periodoSelect == \"\" || me.periodoSelect == undefined){\r\n        //   me.$vs.notify({\r\n        //   text:'Seleccione una Evaluación Período por favor',\r\n        //   color:'warning',\r\n        //   iconPack: 'feather',\r\n        //   icon:'icon-check'})\r\n        //   return\r\n        // }\r\n        me.$vs.loading();\r\n        this.$http.get(this.$server_url + 'areas_salle')\r\n          .then(res => {\r\n            me.$vs.loading.close();\r\n            let datos = res.data\r\n            if(datos.length > 0){\r\n              me.listaAreas = datos.filter(p => p.n_evaluacion == me.periodoSelect)\r\n            }\r\n          })\r\n          .catch(err => {\r\n            me.$vs.loading.close();\r\n          })\r\n        this.$http.get(this.$server_url + 'asignaturas_salle')\r\n          .then(res => {\r\n            me.$vs.loading.close();\r\n            let datos2 = res.data\r\n            if(datos2.length > 0){\r\n              me.listaAsignaturas = datos2.filter(p => p.n_evaluacion == me.periodoSelect)\r\n              me.tmpListaAsignaturas = datos2.filter(p => p.n_evaluacion == me.periodoSelect)\r\n            }\r\n          })\r\n          .catch(err => {\r\n            me.$vs.loading.close();\r\n          })\r\n      },\r\n        modalAgregaEdita(item, valor) {\r\n          let me = this;\r\n          me.area.id_area = '';\r\n          me.area.nombre_area = '';\r\n          me.area.descripcion_area = '';\r\n          me.area.estado = 1;\r\n          if (valor == 1) {\r\n            me.titulo = 'Agregar área';\r\n            me.txt_boton = 'Registrar';\r\n            me.txt_msj = ' registrada ';\r\n          }\r\n          if (valor == 2) {\r\n            me.titulo = 'Editar área';\r\n            me.txt_boton = 'Editar';\r\n            me.txt_msj = ' editada ';\r\n            me.area.id_area = item.id_area\r\n            me.area.estado = item.estado\r\n            me.area.nombre_area = item.nombre_area\r\n            me.area.descripcion_area = item.descripcion_area\r\n          }\r\n          me.modalAreas = true;\r\n        },\r\n        modalAgregaEditaAsignatura(item, valor) {\r\n          let me = this;\r\n          me.asignatura.id_asignatura           = '';\r\n          me.asignatura.id_area                 = '';\r\n          me.asignatura.nombre_asignatura       = '';\r\n          me.asignatura.descripcion_asignatura  = '';\r\n          me.asignatura.cant_preguntas          = '';\r\n          me.asignatura.estado                  = 1;\r\n          // console.log(item, valor)\r\n          if (valor == 1) {\r\n              me.titulo = 'Agregar asignatura';\r\n              me.txt_boton = 'Registrar';\r\n              me.txt_msj = ' registrada ';\r\n          }\r\n          if (valor == 2) {\r\n              me.titulo = 'Editar asignatura';\r\n              me.txt_boton = 'Editar';\r\n              me.txt_msj = ' editada ';\r\n              me.asignatura.id_area = item.id_area\r\n              me.asignatura.id_asignatura = item.id_asignatura\r\n              me.asignatura.nombre_asignatura = item.nombre_asignatura\r\n              me.asignatura.descripcion_asignatura = item.descripcion_asignatura\r\n              me.asignatura.cant_preguntas = item.cant_preguntas\r\n              me.asignatura.estado = item.estado\r\n          }\r\n          me.modalAsignaturas = true;\r\n        },\r\n        agregarEditarArea() {\r\n          let me = this;\r\n          me.arregloSelectArea = []\r\n          if (me.area.nombre_area == '' || me.area.nombre_area == null || me.area.descripcion_area == '' || me.area.descripcion_area == null) {\r\n            me.$vs.notify({\r\n              text: 'Complete todos los campos',\r\n              color: 'warning',\r\n              iconPack: 'feather',\r\n              icon: 'icon-alert-triangle'\r\n            })\r\n            return\r\n          }\r\n          if( me.periodoSelect == null || me.periodoSelect == \"\" || me.periodoSelect == undefined){\r\n            me.$vs.notify({\r\n              text: 'Seleccione un período Evaluación por favor',\r\n              color: 'warning',\r\n              iconPack: 'feather',\r\n              icon: 'icon-alert-triangle'\r\n            })\r\n            return\r\n          }\r\n          me.$vs.loading();\r\n          let datas = new FormData();\r\n          datas.append('id_area',           me.area.id_area);\r\n          datas.append('nombre_area',       me.area.nombre_area);\r\n          datas.append('descripcion_area',  me.area.descripcion_area);\r\n          datas.append('estado',            me.area.estado);\r\n          datas.append('n_evaluacion',      me.periodoSelect)\r\n          this.$http.post(this.$server_url + 'crea_area_salle', datas)\r\n            .then(res => {\r\n              me.$vs.notify({\r\n                text: 'Área ' + me.txt_msj + ' correctamente',\r\n                color: 'success',\r\n                iconPack: 'feather',\r\n                icon: 'icon-check'\r\n              })\r\n              me.$vs.loading.close();\r\n              me.getAreas();\r\n            })\r\n            .catch(err => {\r\n              console.log(err);\r\n              me.$vs.loading.close();\r\n            })\r\n          me.modalAreas = false;\r\n        },\r\n        agregarEditarAsignatura() {\r\n          let me = this;\r\n          me.arregloSelectAsignatura = []\r\n          if (me.asignatura.id_area == '' || me.asignatura.id_area == null || me.asignatura.nombre_asignatura == '' || me.asignatura.nombre_asignatura == null || me.asignatura.descripcion_asignatura == '' || me.asignatura.descripcion_asignatura == null || me.asignatura.cant_preguntas == '' || me.asignatura.cant_preguntas == null || me.asignatura.estado == '' || me.asignatura.estado == null) {\r\n              me.$vs.notify({\r\n                  text: 'Complete todos los campos',\r\n                  color: 'warning',\r\n                  iconPack: 'feather',\r\n                  icon: 'icon-alert-triangle'\r\n              })\r\n              return\r\n          }\r\n          me.$vs.loading();\r\n          let datas = new FormData();\r\n          datas.append('id_asignatura', me.asignatura.id_asignatura);\r\n          datas.append('id_area', me.asignatura.id_area);\r\n          datas.append('nombre_asignatura', me.asignatura.nombre_asignatura);\r\n          datas.append('descripcion_asignatura', me.asignatura.descripcion_asignatura);\r\n          datas.append('cant_preguntas', me.asignatura.cant_preguntas);\r\n          datas.append('estado', me.asignatura.estado);\r\n          this.$http.post(this.$server_url + 'crea_asignatura_salle', datas)\r\n              .then(res => {\r\n                  // console.log(res.data)\r\n                  me.$vs.notify({\r\n                      text: 'Asignatura ' + me.txt_msj + ' correctamente',\r\n                      color: 'success',\r\n                      iconPack: 'feather',\r\n                      icon: 'icon-check'\r\n                  })\r\n                  me.$vs.loading.close();\r\n                  me.getAreas();\r\n              })\r\n              .catch(err => {\r\n                  console.log(err);\r\n                  me.$vs.loading.close();\r\n              })\r\n          me.modalAsignaturas = false;\r\n        },\r\n        volver() {\r\n            let me = this;\r\n            me.modalAreas = false;\r\n            me.modalAsignaturas = false;\r\n        },\r\n        filtrarAsignaturas() {\r\n            let me = this;\r\n            // me.tmpAreas = me.listaAreas;\r\n            me.listaAsignaturas = [];\r\n            // console.log( me.asignaturaSelect )\r\n            for (let index = 0; index < me.tmpListaAsignaturas.length; index++) {\r\n                if (me.tmpListaAsignaturas[index].id_area == me.asignaturaSelect) {\r\n                    me.listaAsignaturas.push(me.tmpListaAsignaturas[index]);\r\n                }\r\n            }\r\n            if (me.asignaturaSelect == null) {\r\n                me.listaAsignaturas = me.tmpListaAsignaturas;\r\n            }\r\n        },\r\n        confirmaEliminar(item) {\r\n            let me = this;\r\n            console.log(item)\r\n            me.id_eliminar = item.id_area;\r\n            // return\r\n            me.$vs.dialog({\r\n                type: 'confirm',\r\n                color: 'danger',\r\n                title: 'Confirmar',\r\n                text: 'Seguro desea eliminar este item?',\r\n                acceptText: 'Aceptar',\r\n                cancelText: 'Cancelar',\r\n                accept: me.eliminarItem\r\n            })\r\n        },\r\n        eliminarItem() {\r\n            let me = this;\r\n            me.$vs.loading();\r\n            this.$http.get(this.$server_url + 'eliminaArea/' + me.id_eliminar)\r\n                .then(res => {\r\n                    console.log(res.data)\r\n                    if (res.data > 0) {\r\n                        me.$vs.notify({\r\n                            time: 8000,\r\n                            text: 'Esta área no puede ser eliminada, contiene ' + res.data + ' asignaturas creadas',\r\n                            color: 'danger',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-alert-check'\r\n                        })\r\n                    } else {\r\n                        me.$vs.notify({\r\n                            text: 'Area eliminada  correctamente',\r\n                            color: 'success',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-check'\r\n                        })\r\n                    }\r\n                    me.getAreas();\r\n                    me.$vs.loading.close();\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                    me.$vs.loading.close();\r\n                })\r\n        },\r\n        confirmaEliminarAsignatura(item) {\r\n            let me = this;\r\n            me.id_eliminar = item.id_asignatura;\r\n            // console.log(item)\r\n            // return\r\n            me.$vs.dialog({\r\n                type: 'confirm',\r\n                color: 'danger',\r\n                title: 'Confirmar',\r\n                text: 'Seguro desea eliminar este item?',\r\n                acceptText: 'Aceptar',\r\n                cancelText: 'Cancelar',\r\n                accept: me.eliminarItem\r\n            })\r\n        },\r\n        eliminarItem() {\r\n            let me = this;\r\n            me.$vs.loading();\r\n            this.$http.get(this.$server_url + 'eliminaAsignatura/' + me.id_eliminar)\r\n                .then(res => {\r\n                    // console.log(res.data)\r\n                    if (res.data.contarSP > 0) {  //preguntas creadas\r\n                        me.$vs.notify({\r\n                            time: 8000,\r\n                            text: 'Esta asignatura tiene ' + res.data.contarSP + ' preguntas asignadas, elimine dichas preguntas, antes de quitar esta asignatura',\r\n                            color: 'danger',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-alert-check'\r\n                        })\r\n                    } else if (res.data.contarSDOC > 0) { //asignaturas asignadas a docentes\r\n                        me.$vs.notify({\r\n                            time: 8000,\r\n                            text: 'Algunos docentes tienen esta asignatura en su perfil, edite la asignación de los docentes, antes de eliminar esta asignatura',\r\n                            color: 'danger',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-alert-check'\r\n                        })\r\n                    } else {\r\n                        me.$vs.notify({\r\n                            text: 'Asignatura eliminada correctamente',\r\n                            color: 'success',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-check'\r\n                        })\r\n                    }\r\n                    me.getAreas();\r\n                    me.$vs.loading.close();\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                    me.$vs.loading.close();\r\n                })\r\n        },\r\n        formSincronizar(item){\r\n            let me = this\r\n            me.asign_selec = item\r\n            me.modalSincronizar = true\r\n        },\r\n      sincronizarPreguntas(){\r\n        let me = this\r\n        me.$vs.loading()\r\n        this.$http.get(this.$server_url + 'salle_sincronizar_preguntas/' + me.asignatura_sinc.id_asignatura +'/'+me.asign_selec.id_asignatura+'/'+me.usuario.idusuario+'/'+localStorage.EvaluacionSelectSalle)\r\n        .then(res => {\r\n          if( res.data == '1' ){\r\n            me.$vs.notify({\r\n              text: 'Preguntas sincronizadas correctamente.',\r\n              color: 'success',\r\n              iconPack: 'feather',\r\n              icon: 'icon-check'\r\n            })\r\n          }else{\r\n            me.$vs.notify({\r\n              text: 'La asignatura seleccionada no tiene asignaturas para sincronizar.',\r\n              color: 'warning',\r\n              iconPack: 'feather',\r\n              icon: 'icon-alert-triangle'\r\n            })\r\n          }\r\n          me.$vs.loading.close()\r\n        })\r\n        .catch(err => {\r\n          me.$vs.loading.close()\r\n        })\r\n      },\r\n      //METODOS PARA EXPORTAR EXCEL\r\n      OpenExportar(){\r\n        let me          = this;\r\n        //tipo => 0 exportar areas;\r\n        if(me.tipo == 0){\r\n          if(me.arregloSelectArea.length == 0){\r\n            me.$vs.notify({\r\n            text:'Seleccione al menos un registro para exportar por favor',\r\n            color:'warning',\r\n            iconPack: 'feather',\r\n            icon:'icon-check'})\r\n            return\r\n          }\r\n        }\r\n        if(me.tipo == 1){\r\n          if(me.arregloSelectAsignatura.length == 0){\r\n            me.$vs.notify({\r\n            text:'Seleccione al menos un registro para exportar por favor',\r\n            color:'warning',\r\n            iconPack: 'feather',\r\n            icon:'icon-check'})\r\n            return\r\n          }\r\n        }\r\n        me.activePrompt = true\r\n      },\r\n      //METODOS PARA ASIGNAR COMO AREA BASICA\r\n      confirmarAsignarAreaBasica(){\r\n        let me = this\r\n        this.$vs.dialog({\r\n          type:'confirm',\r\n          color: 'danger',\r\n          title: `Confirmar`,\r\n          acceptText:'Si, deseo asignar',\r\n          cancelText:'Cancelar',\r\n          text: 'Estas seguro de asignar como área básica',\r\n          accept:this.AsignarComoAreaBasica\r\n        })\r\n      },\r\n      AsignarComoAreaBasica(){\r\n        let me = this;\r\n        let formData = new FormData();\r\n        formData.append('id_area',me.datoFila.id_area);\r\n        formData.append('n_evaluacion',localStorage.EvaluacionSelectSalle);\r\n        me.$vs.loading()\r\n        this.$http.post(this.$server_url+'AsignarComoAreaBasica', formData)\r\n        .then(res => {\r\n        me.getAreas();\r\n        me.$vs.loading.close()\r\n        me.$vs.notify({\r\n          text:res.data.message,\r\n          color:'success',\r\n          iconPack: 'feather',\r\n          icon:'icon-check'})\r\n        })\r\n      },\r\n      //METODOS PARA EXPORTAR EXCEL\r\n      exportToExcel() {\r\n        let me = this;\r\n        var headerVal   = []\r\n        var headerTitle = []\r\n        //AREA\r\n        if(me.tipo == 0){\r\n          headerTitle = [ 'Área','Descripción', 'Estado','Período'];\r\n          headerVal = [ 'nombre_area','descripcion_area','estadoArea','periodo'];\r\n        }\r\n        //ASIGNATURA\r\n        if(me.tipo == 1){\r\n          headerTitle = [ 'Área','Asignatura','Descripción', 'Cantidad Preguntas','Estado','Período'];\r\n          headerVal = ['nombre_area', 'nombre_asignatura','descripcion_asignatura','cant_preguntas','estadoAsignatura','periodo'];\r\n        }\r\n        //tipo array\r\n        var arryPrint = []\r\n        //tipo => 0 = areas\r\n        if(me.tipo == 0) arryPrint = me.arregloSelectArea\r\n        if(me.tipo == 1) arryPrint = me.arregloSelectAsignatura\r\n        import('@/vendor/Export2Excel').then(excel => {\r\n        const data = this.formatJson(headerVal, arryPrint)\r\n        excel.export_json_to_excel({\r\n            header: headerTitle,\r\n            data,\r\n            filename: this.fileName,\r\n            autoWidth: this.cellAutoWidth,\r\n            bookType: this.selectedFormat\r\n          })\r\n          this.clearFields()\r\n          this.arregloSelectArea = [];\r\n          this.arregloSelectAsignatura  = [];\r\n        })\r\n    },\r\n    formatJson(filterVal, jsonData) {\r\n      return jsonData.map(v => filterVal.map(j => {\r\n          return v[j]\r\n      }))\r\n    },\r\n    //limpiar campos para exportar de nuevo\r\n    clearFields() {\r\n      this.fileName = ''\r\n      this.cellAutoWidth = true\r\n      this.selectedFormat = 'xls'\r\n    },\r\n  },\r\n}\r\n</script>\r\n<style>\r\n.exportButton{\r\n  transition:1s ease-in;\r\n}\r\n.exportButton:hover{\r\n  transform: scale(1.1);\r\n  color:#f2f2f2;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]}]}