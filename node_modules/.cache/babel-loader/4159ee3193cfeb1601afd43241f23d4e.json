{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\periodos\\periodosInstitucion.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\periodos\\periodosInstitucion.vue","mtime":1712682816421},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\babel.config.js","mtime":1712682813877},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\.babelrc","mtime":1712682813750},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport axios from 'axios';\nimport vSelect from 'vue-select';\nimport moment from 'moment';\nexport default {\n  components: {\n    'v-select': vSelect\n  },\n  data: function data() {\n    return {\n      nombreInstitucion: '',\n      idInstitucion: '',\n      listaPeriodos: '',\n      tmplistaPeriodos: '',\n      listaPeriodosInstitucion: '',\n      tmp: '',\n      f_periodos: 1,\n      modalPeriodos: false,\n      id_eliminar: '',\n      region: [],\n      usuario: [],\n      estadoLimiteAcceso: \"0\",\n      fecha: null\n    };\n  },\n  mounted: function mounted() {\n    var me = this;\n    me.tmp = JSON.parse(localStorage.getItem('institucion'));\n    me.nombreInstitucion = me.tmp.nombreInstitucion;\n    me.idInstitucion = me.tmp.idInstitucion;\n    me.region = me.tmp.nombreregion;\n    me.getPeriodosInstitucion();\n    me.usuario = JSON.parse(localStorage.getItem('usuario'));\n    me.getPeriodos();\n  },\n  methods: {\n    getPeriodosInstitucion: function getPeriodosInstitucion() {\n      var me = this;\n      me.$vs.loading();\n      this.$http.get(this.$server_url + 'periodosXInstitucion/' + me.idInstitucion).then(function (res) {\n        me.listaPeriodosInstitucion = res.data;\n        // console.log(res.data);\n        me.$vs.loading.close();\n      }).catch(function (err) {\n        console.log(err);\n        me.$vs.loading.close();\n      });\n    },\n    getPeriodos: function getPeriodos() {\n      var me = this;\n      this.$http.get(this.$server_url + 'periodoRegion?region=' + me.region).then(function (res) {\n        me.tmplistaPeriodos = res.data;\n        //capturo el periodo activo para limitar el acceso a agregar periodo\n        var filtrarPeriodoAcceso = me.tmplistaPeriodos.filter(function (p) {\n          return p.estado == '1';\n        });\n        //capturo la fecha actual\n        var fecha = moment().add(-1, 'days').format('YYYY/MM/DD');\n\n        // filtro la fecha limite del periodo\n        var fechafinal = filtrarPeriodoAcceso.map(function (p) {\n          return p.fhasta_limite;\n        });\n        //comparo si la fecha final ya se paso a la actual\n        if (Date.parse(fechafinal) < Date.parse(fecha)) {\n          me.estadoLimiteAcceso = \"0\";\n        } else {\n          me.estadoLimiteAcceso = \"1\";\n        }\n        me.filtroPeriodos();\n      }).catch(function (err) {\n        console.log(err);\n      });\n    },\n    abrirModal: function abrirModal() {\n      var me = this;\n      me.modalPeriodos = true;\n    },\n    filtroPeriodos: function filtroPeriodos() {\n      var me = this;\n      // console.log(me.tmplistaPeriodos)\n      me.listaPeriodos = [];\n      for (var index = 0; index < me.tmplistaPeriodos.length; index++) {\n        if (me.tmplistaPeriodos[index].estado == me.f_periodos) {\n          me.listaPeriodos.push(me.tmplistaPeriodos[index]);\n        }\n      }\n    },\n    verificarPeriodo: function verificarPeriodo(item) {\n      var me = this;\n      // console.log(item.idperiodoescolar, me.idInstitucion)\n      me.$vs.loading();\n      var data = new FormData();\n      data.append('idperiodoescolar', item.idperiodoescolar);\n      data.append('idinstitucion', me.idInstitucion);\n      this.$http.post(this.$server_url + 'verifica_periodo', data).then(function (res) {\n        // console.log(res.data)\n        if (res.data == 1) {\n          me.$vs.notify({\n            time: 8000,\n            text: 'Este periodo ya se encuentra asignado a la institucion ' + me.nombreInstitucion,\n            color: 'danger',\n            iconPack: 'feather',\n            icon: 'icon-alert-triangle'\n          });\n        } else {\n          me.$vs.notify({\n            text: 'Periodo agregado correctamente a la institucion ' + me.nombreInstitucion,\n            color: 'success',\n            iconPack: 'feather',\n            icon: 'icon-check'\n          });\n          me.modalPeriodos = false;\n          me.getPeriodosInstitucion();\n        }\n        me.$vs.loading.close();\n      }).catch(function (err) {\n        console.log(err);\n        me.$vs.loading.close();\n      });\n    },\n    confirmaEliminar: function confirmaEliminar(item) {\n      var me = this;\n      me.id_eliminar = item.id;\n      // console.log(me.id_eliminar)\n      // return\n      me.$vs.dialog({\n        type: 'confirm',\n        color: 'danger',\n        title: 'Confirmar',\n        text: 'Seguro desea eliminar este item?',\n        acceptText: 'Aceptar',\n        cancelText: 'Cancelar',\n        accept: me.eliminarItem\n      });\n    },\n    eliminarItem: function eliminarItem() {\n      var me = this;\n      this.$http.get(this.$server_url + 'eliminarPeriodosInstitucion/' + me.id_eliminar).then(function (res) {\n        me.$vs.notify({\n          text: 'Periodo de esta instituciÃ³n eliminado correctamente',\n          color: 'success',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        me.getPeriodosInstitucion();\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  }\n};",{"version":3,"names":["Vue","axios","vSelect","moment","components","data","nombreInstitucion","idInstitucion","listaPeriodos","tmplistaPeriodos","listaPeriodosInstitucion","tmp","f_periodos","modalPeriodos","id_eliminar","region","usuario","estadoLimiteAcceso","fecha","mounted","me","JSON","parse","localStorage","getItem","nombreregion","getPeriodosInstitucion","getPeriodos","methods","$vs","loading","$http","get","$server_url","then","res","close","catch","err","console","log","filtrarPeriodoAcceso","filter","p","estado","add","format","fechafinal","map","fhasta_limite","Date","filtroPeriodos","abrirModal","index","length","push","verificarPeriodo","item","FormData","append","idperiodoescolar","post","notify","time","text","color","iconPack","icon","confirmaEliminar","id","dialog","type","title","acceptText","cancelText","accept","eliminarItem"],"sources":["src/views/periodos/periodosInstitucion.vue"],"sourcesContent":["<template>\r\n<div class=\"vx-col md:w-full w-full mb-base\">\r\n    <vs-popup title=\"Periodos\" fullscreen :active.sync=\"modalPeriodos\">\r\n        <vs-table max-items=\"10\" search pagination :data=\"listaPeriodos\">\r\n            <template slot=\"header\">\r\n                <vs-radio class=\"mb-3 m-2\" color=\"success\" v-model=\"f_periodos\" @change=\"filtroPeriodos\" vs-value=\"1\">Activos</vs-radio>\r\n                <vs-radio class=\"mb-3 m-2\" color=\"danger\" v-model=\"f_periodos\" @change=\"filtroPeriodos\" vs-value=\"0\">Inactivos</vs-radio>\r\n            </template>\r\n            <template slot=\"thead\">\r\n                <vs-th>Periodo escolar</vs-th>\r\n                <vs-th>Fechas</vs-th>\r\n                <vs-th>Region</vs-th>\r\n                <vs-th>Estado</vs-th>\r\n                <vs-th>Acciones</vs-th>\r\n            </template>\r\n            <template slot-scope=\"{data}\">\r\n                <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                    <vs-td :data=\"tr.periodoescolar\">\r\n                        {{tr.periodoescolar}} <br>\r\n                        <small>{{tr.descripcion}}</small>\r\n                    </vs-td>\r\n                    <vs-td>\r\n                        <small>Inicio: {{tr.fecha_inicial}} </small><br>\r\n                        <small>Fin: {{tr.fecha_final}}</small>\r\n                    </vs-td>\r\n                    <vs-td>\r\n                        <vs-chip v-if=\"tr.region_idregion == 1\"> SIERRA</vs-chip>\r\n                        <vs-chip v-if=\"tr.region_idregion == 2\"> COSTA</vs-chip>\r\n                    </vs-td>\r\n                    <vs-td>\r\n                        <vs-chip v-if=\"tr.estado == 1\" color=\"success\"> Activo</vs-chip>\r\n                        <vs-chip v-if=\"tr.estado == 0\" color=\"danger\"> Inactivo</vs-chip>\r\n                    </vs-td>\r\n                    <vs-td>\r\n                        <vs-button type=\"filled\" size=\"small\" color=\"success\" class=\"m-2\" icon-pack=\"feather\" icon=\"icon-plus\" @click=\"verificarPeriodo(tr);\">Agregar</vs-button>\r\n\r\n                    </vs-td>\r\n                </vs-tr>\r\n            </template>\r\n        </vs-table>\r\n    </vs-popup>\r\n\r\n\r\n    <vx-card>\r\n        <h4>\r\n            {{nombreInstitucion}}\r\n        </h4>\r\n      \r\n        <vs-button  v-if=\"estadoLimiteAcceso =='1' || usuario.id_group== '1'\"  type=\"border\" color=\"success\" class=\"m-2\" @click=\"abrirModal();\">Agregar periodo</vs-button>\r\n\r\n        <vs-table max-items=\"20\" search pagination :data=\"listaPeriodosInstitucion\" class=\"mt-4\">\r\n            <template slot=\"header\">\r\n                <div>\r\n                    Cantidad: {{listaPeriodosInstitucion.length}}\r\n                </div>\r\n            </template>\r\n            <template slot=\"thead\">\r\n                <vs-th width=\"40%\">Periodo escolar</vs-th>\r\n                <vs-th>RegiÃ³n</vs-th>\r\n                <vs-th>Estado</vs-th>\r\n                <vs-th>Actualizado</vs-th>\r\n                <vs-th>Acciones</vs-th>\r\n            </template>\r\n            <template slot-scope=\"{data}\">\r\n                <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                    <vs-td :data=\"tr.periodoescolar\">\r\n                        {{tr.periodoescolar}} <br>\r\n                        <small> {{tr.descripcion}} </small>\r\n                    </vs-td>\r\n                    <vs-td>\r\n                        <vs-chip> {{tr.nombreregion}}</vs-chip>\r\n                    </vs-td>\r\n                    <vs-td>\r\n                        <vs-chip v-if=\"tr.estado == 1\" color=\"success\"> Activo</vs-chip>\r\n                        <vs-chip v-if=\"tr.estado == 0\" color=\"danger\"> Inactivo</vs-chip>\r\n                    </vs-td>\r\n                     <vs-td>\r\n                        {{tr.updated_at}}\r\n                    </vs-td>\r\n                    <vs-td>\r\n                        <vx-tooltip text=\"eliminar periodo de esta instituciÃ³n\" position=\"top\" color=\"danger\" v-if=\"usuario.id_group== '1' \">\r\n                            <vs-button type=\"border\" color=\"danger\" class=\"m-2\" icon-pack=\"feather\" icon=\"icon-trash\" @click=\"confirmaEliminar(tr);\"></vs-button>\r\n                        </vx-tooltip>\r\n                    </vs-td>\r\n                </vs-tr>\r\n            </template>\r\n        </vs-table>\r\n    </vx-card>\r\n\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport Vue from 'vue'\r\nimport axios from 'axios'\r\nimport vSelect from 'vue-select'\r\nimport moment from 'moment'\r\nexport default {\r\n    components: {\r\n        'v-select': vSelect,\r\n    },\r\n    data() {\r\n        return {\r\n            nombreInstitucion: '',\r\n            idInstitucion: '',\r\n            listaPeriodos: '',\r\n            tmplistaPeriodos: '',\r\n            listaPeriodosInstitucion: '',\r\n            tmp: '',\r\n            f_periodos: 1,\r\n            modalPeriodos: false,\r\n            id_eliminar: '',\r\n            region : [],\r\n            usuario:[],\r\n            estadoLimiteAcceso:\"0\",\r\n            fecha:null,\r\n        }\r\n    },\r\n  \r\n    mounted() {\r\n        let me = this;\r\n        me.tmp = JSON.parse(localStorage.getItem('institucion'));\r\n        me.nombreInstitucion = me.tmp.nombreInstitucion;\r\n        me.idInstitucion = me.tmp.idInstitucion;\r\n        me.region = me.tmp.nombreregion;\r\n        me.getPeriodosInstitucion();\r\n        me.usuario = JSON.parse(localStorage.getItem('usuario'))\r\n       \r\n        me.getPeriodos();\r\n      \r\n\r\n    },\r\n    methods: {\r\n        getPeriodosInstitucion() {\r\n            let me = this;\r\n            me.$vs.loading();\r\n            this.$http.get(this.$server_url+'periodosXInstitucion/' + me.idInstitucion)\r\n                .then(res => {\r\n                    me.listaPeriodosInstitucion = res.data;\r\n                    // console.log(res.data);\r\n                    me.$vs.loading.close();\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                    me.$vs.loading.close();\r\n                })\r\n        },\r\n        getPeriodos() {\r\n            let me = this;\r\n            this.$http.get(this.$server_url+'periodoRegion?region='+me.region)\r\n                .then(res => {\r\n                    me.tmplistaPeriodos = res.data;\r\n                    //capturo el periodo activo para limitar el acceso a agregar periodo\r\n                    let  filtrarPeriodoAcceso = me.tmplistaPeriodos.filter(p => p.estado == '1')\r\n                    //capturo la fecha actual\r\n                    var fecha = moment().add(-1, 'days').format('YYYY/MM/DD');\r\n                    \r\n                  \r\n                    // filtro la fecha limite del periodo\r\n                    let fechafinal =  filtrarPeriodoAcceso.map(p => p.fhasta_limite)\r\n                    //comparo si la fecha final ya se paso a la actual\r\n                    if(Date.parse(fechafinal) < Date.parse(fecha)) {\r\n\r\n                        me.estadoLimiteAcceso = \"0\";\r\n\r\n                    }else{\r\n                        me.estadoLimiteAcceso = \"1\";\r\n                    }\r\n                    \r\n                    me.filtroPeriodos();\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                })\r\n        },\r\n        abrirModal() {\r\n            let me = this;\r\n            me.modalPeriodos = true;\r\n        },\r\n        filtroPeriodos() {\r\n            let me = this;\r\n            // console.log(me.tmplistaPeriodos)\r\n            me.listaPeriodos = [];\r\n            for (let index = 0; index < me.tmplistaPeriodos.length; index++) {\r\n                if (me.tmplistaPeriodos[index].estado == me.f_periodos) {\r\n                    me.listaPeriodos.push(me.tmplistaPeriodos[index]);\r\n                }\r\n            }\r\n        },\r\n        verificarPeriodo(item) {\r\n            let me = this;\r\n            // console.log(item.idperiodoescolar, me.idInstitucion)\r\n            me.$vs.loading();\r\n            let data = new FormData();\r\n            data.append('idperiodoescolar', item.idperiodoescolar);\r\n            data.append('idinstitucion', me.idInstitucion)\r\n            this.$http.post(this.$server_url+'verifica_periodo', data)\r\n                .then(res => {\r\n                    // console.log(res.data)\r\n                    if (res.data == 1) {\r\n                        me.$vs.notify({\r\n                            time: 8000,\r\n                            text: 'Este periodo ya se encuentra asignado a la institucion ' + me.nombreInstitucion,\r\n                            color: 'danger',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-alert-triangle'\r\n                        })\r\n                    } else {\r\n                        me.$vs.notify({\r\n                            text: 'Periodo agregado correctamente a la institucion ' + me.nombreInstitucion,\r\n                            color: 'success',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-check'\r\n                        })\r\n                        me.modalPeriodos = false;\r\n                        me.getPeriodosInstitucion();\r\n                    }\r\n                    me.$vs.loading.close();\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                    me.$vs.loading.close();\r\n                })\r\n        },\r\n        confirmaEliminar(item) {\r\n            let me = this;\r\n            me.id_eliminar = item.id;\r\n            // console.log(me.id_eliminar)\r\n            // return\r\n            me.$vs.dialog({\r\n                type: 'confirm',\r\n                color: 'danger',\r\n                title: 'Confirmar',\r\n                text: 'Seguro desea eliminar este item?',\r\n                acceptText: 'Aceptar',\r\n                cancelText: 'Cancelar',\r\n                accept: me.eliminarItem\r\n            })\r\n        },\r\n        eliminarItem() {\r\n            let me = this;\r\n            this.$http.get(this.$server_url+'eliminarPeriodosInstitucion/'+me.id_eliminar)\r\n                .then(res => {\r\n                    me.$vs.notify({\r\n                        text: 'Periodo de esta instituciÃ³n eliminado correctamente',\r\n                        color: 'success',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check'\r\n                    })\r\n                    me.getPeriodosInstitucion();\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                })\r\n        },\r\n    }\r\n}\r\n</script>\r\n"],"mappings":"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","ignoreList":[]}]}