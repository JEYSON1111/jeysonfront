{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\codigos\\components\\ImportBloquear.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\codigos\\components\\ImportBloquear.vue","mtime":1712682815622},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\babel.config.js","mtime":1712682813877},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\.babelrc","mtime":1712682813750},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import gestionCodigosLista from \"./utils/gestionCodigosLista.vue\";\nimport ImportExcel from \"./importExcel.vue\";\nimport vSelect from 'vue-select';\nexport default {\n  components: {\n    ImportExcel: ImportExcel,\n    vSelect: vSelect,\n    gestionCodigosLista: gestionCodigosLista\n  },\n  data: function data() {\n    return {\n      codigosPerdidos: false,\n      tableData: [],\n      header: [],\n      sheetName: '',\n      usuario: [],\n      modalConfirm: false,\n      modalErrores: false,\n      errores: [],\n      tipo_selected: '',\n      cedulas_no_encontradas: [],\n      modalCedulas: false,\n      codigoLiquidados: [],\n      codigoNoExiste: [],\n      codigosNoCambiados: [],\n      cantidadNoExisten: 0,\n      comentario: '',\n      //variables para codigos union\n      codigosSinCodigoUnion: [],\n      popupProblemasCodigosUnion: false\n      //fin variables para codigos union\n    };\n  },\n  created: function created() {\n    this.usuario = JSON.parse(localStorage.getItem('usuario'));\n    this.codigosPerdidos = false;\n  },\n  methods: {\n    loadDataInTable: function loadDataInTable(_ref) {\n      var results = _ref.results,\n        header = _ref.header,\n        meta = _ref.meta;\n      var me = this;\n      this.header = header;\n      this.tableData = results;\n      this.sheetName = meta.sheetName;\n      me.codigosPerdidos = false;\n      me.codigosNoCambiados = [];\n      me.codigoNoExiste = [];\n      me.codigoLiquidados = [];\n    },\n    procesarPagos: function procesarPagos() {\n      var me = this;\n      var json_pagos = JSON.stringify(me.tableData);\n      var formData = new FormData();\n      formData.append('data_codigos', json_pagos);\n      if (me.comentario == \"\") {\n        me.$vs.notify({\n          text: 'Ingrese un comentario por favor',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        return;\n      }\n      me.$vs.loading();\n      formData.append('comentario', me.comentario);\n      formData.append('institucion_id', me.usuario.institucion_idInstitucion);\n      formData.append('id_usuario', me.usuario.idusuario);\n      formData.append('periodo_id', localStorage.periodo_id);\n      this.$http.post(this.$server_url + 'codigos/bloquear', formData).then(function (res) {\n        me.$vs.loading.close();\n        me.$vs.notify({\n          text: res.data.cambiados + ' Códigos procesados exitosamente',\n          color: 'success',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        me.modalConfirm = false;\n        me.tableData = [];\n        me.codigosPerdidos = true;\n        me.codigosNoCambiados = res.data.codigosNoCambiados;\n        me.codigoNoExiste = res.data.codigoNoExiste;\n        me.codigoLiquidados = res.data.codigoLiquidados;\n        me.porcentaje = res.data.cambiados;\n        me.codigosSinCodigoUnion = res.data.codigosSinCodigoUnion;\n        if (me.codigosSinCodigoUnion.length > 0) {\n          me.popupProblemasCodigosUnion = true;\n        }\n      }).catch(function (error) {\n        me.$vs.notify({\n          text: 'Verifique que la información se haya guardado correctamente.',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-alert-triangle'\n        });\n        me.$vs.loading.close();\n        // setTimeout(function() {location.reload()}, 1000);\n      });\n    },\n    openConfirm: function openConfirm(tipo) {\n      var me = this;\n      me.tipo_selected = tipo;\n      if (!me.tableData[0].codigo) {\n        me.$vs.loading.close();\n        me.$vs.notify({\n          text: 'Corrija el formato del excel y vuelva a intentar.',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-alert-triangle'\n        });\n        return;\n      }\n      me.errores = [];\n      $.each(me.tableData, function (key, value) {\n        if (!value.codigo) {\n          me.errores.push(value);\n        }\n      });\n      if (me.errores.length > 0) {\n        me.modalErrores = true;\n      } else {\n        me.modalConfirm = true;\n      }\n    }\n  }\n};",{"version":3,"names":["gestionCodigosLista","ImportExcel","vSelect","components","data","codigosPerdidos","tableData","header","sheetName","usuario","modalConfirm","modalErrores","errores","tipo_selected","cedulas_no_encontradas","modalCedulas","codigoLiquidados","codigoNoExiste","codigosNoCambiados","cantidadNoExisten","comentario","codigosSinCodigoUnion","popupProblemasCodigosUnion","created","JSON","parse","localStorage","getItem","methods","loadDataInTable","_ref","results","meta","me","procesarPagos","json_pagos","stringify","formData","FormData","append","$vs","notify","text","color","iconPack","icon","loading","institucion_idInstitucion","idusuario","periodo_id","$http","post","$server_url","then","res","close","cambiados","porcentaje","length","catch","error","openConfirm","tipo","codigo","$","each","key","value","push"],"sources":["src/views/codigos/components/ImportBloquear.vue"],"sourcesContent":["<template>\r\n    <vs-card>\r\n      <vs-popup title=\"Errores en excel de los codigos\" :active.sync=\"modalErrores\" style=\"padding: 0% !important;\">\r\n         <div class=\"w-full\" style=\"background: rgb(121,9,9); padding: 20px; border-radius: 5px; background: linear-gradient(90deg, rgba(121,9,9,1) 28%, rgba(255,0,48,1) 100%); color: white;\">\r\n           <div class=\"vx-row\">\r\n              <div class=\"vx-col sm:w-1/2 w-full\">\r\n                <b>Código</b>\r\n              </div>\r\n              <div class=\"vx-col sm:w-1/2 w-full\">\r\n                <b>Institución</b>\r\n              </div>\r\n          </div>\r\n          <vs-divider></vs-divider>\r\n          <div :key=\"index\" v-for=\"(item, index) in errores\">\r\n            <div class=\"vx-row\">\r\n                <div class=\"vx-col sm:w-1/2 w-full\">\r\n                  <span v-if=\"item.codigo\"> {{item.codigo}} </span>\r\n                </div>\r\n            </div>\r\n          </div>\r\n         </div>\r\n      </vs-popup>\r\n      <vs-popup title=\"Códigos no encontrados\" :active.sync=\"modalCedulas\" @accept=\"recargar()\" @close=\"recargar()\" @cancel=\"recargar()\"  style=\"padding: 0% !important;\">\r\n         <div class=\"w-full\" style=\"background: rgb(235,147,25); background: linear-gradient(90deg, rgba(235,147,25,1) 28%, rgba(255,166,0,1) 100%); color: white; border-radius: 5px; padding: 10px;\">\r\n          <div class=\"vx-row\">\r\n            <div class=\"vx-col w-full\" align=\"center\">\r\n             <b>Codigos a las que no se aplicaron correctamente</b>\r\n            </div>\r\n          </div>\r\n          <vs-divider></vs-divider>\r\n          <div :key=\"index\" v-for=\"(item, index) in cedulas_no_encontradas\">\r\n            <div class=\"vx-row\">\r\n                <div class=\"vx-col w-full\" align=\"center\"> <span> {{item}} </span> </div>\r\n            </div>\r\n          </div>\r\n         </div>\r\n      </vs-popup>\r\n      <vs-popup small title=\"Confirmación\" :active.sync=\"modalConfirm\">\r\n        <div class=\"w-full mb-base\" align=\"center\">\r\n          <h4>Está seguro de bloquear estos {{ tableData.length }} códigos?</h4>\r\n        </div>\r\n        <div class=\"w-full\" align=\"center\">\r\n          <vs-button class=\"mb-2\" color=\"danger\" type=\"gradient\" @click=\"procesarPagos()\"> Confirmar </vs-button>\r\n        </div>\r\n      </vs-popup>\r\n      <div class=\"mb-6\" align=\"center\">\r\n        <div class=\"vx-col w-full\">\r\n          <p style=\"font-weight: 100;opacity: 0.5;\" class=\"text-2xl\">Import bloquear códigos</p>\r\n          <vs-divider></vs-divider>\r\n          <p style=\"color:#8F33D3;\">\r\n            <i class=\"fa fa-file\" aria-hidden=\"true\"></i>  Bloqueo de codigos  <span style=\"font-weight: bold;\">(no ingrese más de 1500 registros en una sola carga.)</span>\r\n          </p>\r\n        </div>\r\n        <!-- Textarea -->\r\n        <vx-input-group class=\"mt-5\">\r\n          <template slot=\"prepend\">\r\n            <div class=\"prepend-text bg-dark\">\r\n              <span>COMENTARIO (obligatorio)</span>\r\n            </div>\r\n          </template>\r\n          <vs-textarea v-model=\"comentario\" placeholder=\"Escriba el motivo de bloqueo de códigos\" />\r\n        </vx-input-group>\r\n        <!-- /Textarea -->\r\n        <br/>\r\n        <import-excel :onSuccess=\"loadDataInTable\"  class=\"mb-4\" />\r\n        <div>\r\n          <vs-row>\r\n            <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\" vs-sm = \"12\" vs-xs=\"12\" >\r\n              <vs-card>\r\n                <div class=\"header\">\r\n                  <p style=\"font-weight: bold;\">Formato del archivo excel</p>\r\n                  <table class=\"tabla\">\r\n                      <tr>\r\n                        <th class=\"th1\">codigo</th>\r\n                      </tr>\r\n                      <tr>\r\n                        <td class=\"td1\">xxx</td>\r\n                      </tr>\r\n                  </table>\r\n                </div>\r\n              </vs-card>\r\n            </vs-col>\r\n          </vs-row>\r\n        </div>\r\n        <!-- {{tableData}} -->\r\n        <vs-alert v-if=\"tableData.length > 0\" class=\"mb-3\" color=\"success\" icon-pack=\"feather\" icon=\"icon-alert-triangle\">\r\n            <span>Excel cargado exitosamente. ¿Está seguro de procesar estos códigos?</span><br>\r\n        </vs-alert>\r\n        <vs-row v-if=\"tableData.length > 0 && tableData.length <= 1500 \">\r\n            <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\">\r\n                <vs-button class=\"mb-2\" color=\"primary\"  type=\"relief\" @click=\"openConfirm(0)\">Bloquear códigos </vs-button>\r\n            </vs-col>\r\n        </vs-row>\r\n        <vs-row v-if=\"codigosPerdidos == true\">\r\n          <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\">\r\n              <vs-alert active=\"true\">\r\n                  Se bloqueo  {{ porcentaje }} códigos\r\n                  <vs-button v-if=\"codigosSinCodigoUnion.length > 0\" @click=\"popupProblemasCodigosUnion = true;\" color=\"primary\" type=\"border\">Mostrar códigos sin código unión</vs-button>\r\n              </vs-alert>\r\n          </vs-col>\r\n        </vs-row>\r\n        <vs-row v-if=\"codigosPerdidos == true\">\r\n            <vs-card>\r\n            <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"6\">\r\n                <vs-list>\r\n                  <p>Cantidad <span>{{ codigosNoCambiados.length }}</span></p>\r\n                    <vs-list-header icon=\"supervisor_account\" title=\"Códigos que no se pudieron cambiar\"></vs-list-header>\r\n                    <vs-list-item :key=\"indextr\" v-for=\"(tr, indextr) in codigosNoCambiados\" icon=\"check\" :title=\"tr.codigo\" >\r\n                      <p v-if=\"tr.mensaje !='0'\"> {{ tr.mensaje }}</p>\r\n                    </vs-list-item>\r\n                </vs-list>\r\n            </vs-col>\r\n            <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"6\">\r\n                <vs-list>\r\n                  <p>Cantidad <span>{{ codigoNoExiste.length }}</span></p>\r\n                    <vs-list-header icon=\"supervisor_account\" title=\"Códigos que no existen\"></vs-list-header>\r\n                    <vs-list-item :key=\"s\" v-for=\"(tr, s) in codigoNoExiste\" icon=\"check\" :title=\"tr.codigo\" >\r\n                    </vs-list-item>\r\n                </vs-list>\r\n            </vs-col>\r\n          </vs-card>\r\n        </vs-row>\r\n        <vs-row v-if=\"codigosPerdidos == true\">\r\n          <vs-card>\r\n            <gestionCodigosLista :arregloCodigos=\"codigoLiquidados\"/>\r\n          </vs-card>\r\n        </vs-row>\r\n      </div>\r\n      <vx-card v-if=\"tableData.length && header.length\">\r\n        <vs-table stripe pagination :max-items=\"20\" search :data=\"tableData\">\r\n          <template slot=\"header\">\r\n            <h4>Códigos a subir {{ tableData.length }}</h4>\r\n          </template>\r\n          <template slot=\"thead\">\r\n            <vs-th :sort-key=\"heading\" v-for=\"heading in header\" :key=\"heading\">{{ heading }}</vs-th>\r\n          </template>\r\n          <template slot-scope=\"{data}\">\r\n            <vs-tr :data=\"tr\" :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n              <vs-td :data=\"col\" v-for=\"(col, indexcol) in data[indextr]\" :key=\"indexcol + col\">\r\n                {{ col }}\r\n              </vs-td>\r\n            </vs-tr>\r\n          </template>\r\n        </vs-table>\r\n      </vx-card>\r\n      <!--MODALES-->\r\n      <!--MODAL PARA MOSTRAR CODIGOS SIN CODIGO UNION-->\r\n      <vs-popup classContent=\"popup-example\" title=\"Códigos sin código Unión\" fullscreen :active.sync=\"popupProblemasCodigosUnion\">\r\n        <gestionCodigosLista :arregloCodigos=\"codigosSinCodigoUnion\" openModal=\"0\"/>\r\n      </vs-popup>\r\n    </vs-card>\r\n  </template>\r\n  <script>\r\n  import gestionCodigosLista from './utils/gestionCodigosLista.vue'\r\n  import ImportExcel from './importExcel.vue'\r\n  import vSelect from 'vue-select'\r\n  export default {\r\n    components: {\r\n      ImportExcel,\r\n      vSelect,\r\n      gestionCodigosLista,\r\n    },\r\n    data () {\r\n      return {\r\n        codigosPerdidos:false,\r\n        tableData: [],\r\n        header: [],\r\n        sheetName: '',\r\n        usuario: [],\r\n        modalConfirm: false,\r\n        modalErrores: false,\r\n        errores: [],\r\n        tipo_selected: '',\r\n        cedulas_no_encontradas: [],\r\n        modalCedulas: false,\r\n        codigoLiquidados:[],\r\n        codigoNoExiste:[],\r\n        codigosNoCambiados:[],\r\n        cantidadNoExisten:0,\r\n        comentario:'',\r\n        //variables para codigos union\r\n        codigosSinCodigoUnion:[],\r\n        popupProblemasCodigosUnion:false,\r\n        //fin variables para codigos union\r\n      }\r\n    },\r\n    created(){\r\n          this.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n          this.codigosPerdidos = false\r\n      },\r\n    methods: {\r\n      loadDataInTable ({ results, header, meta }) {\r\n        let me                = this;\r\n        this.header           = header\r\n        this.tableData        = results\r\n        this.sheetName        = meta.sheetName\r\n        me.codigosPerdidos    = false\r\n        me.codigosNoCambiados = []\r\n        me.codigoNoExiste     = []\r\n        me.codigoLiquidados   = []\r\n      },\r\n      procesarPagos(){\r\n        let me = this\r\n        let json_pagos = JSON.stringify(me.tableData)\r\n        let formData = new FormData();\r\n        formData.append('data_codigos',   json_pagos);\r\n        if(me.comentario == \"\"){\r\n          me.$vs.notify({\r\n          text:'Ingrese un comentario por favor',\r\n          color:'warning',\r\n          iconPack: 'feather',\r\n          icon:'icon-check'})\r\n          return\r\n        }\r\n        me.$vs.loading()\r\n        formData.append('comentario',     me.comentario);\r\n        formData.append('institucion_id', me.usuario.institucion_idInstitucion);\r\n        formData.append('id_usuario',     me.usuario.idusuario);\r\n        formData.append('periodo_id',     localStorage.periodo_id);\r\n        this.$http.post(this.$server_url+'codigos/bloquear', formData)\r\n        .then(res => {\r\n            me.$vs.loading.close()\r\n            me.$vs.notify({\r\n            text:res.data.cambiados +' Códigos procesados exitosamente',\r\n            color:'success',\r\n            iconPack: 'feather',\r\n            icon:'icon-check'})\r\n            me.modalConfirm = false\r\n            me.tableData = []\r\n            me.codigosPerdidos = true\r\n            me.codigosNoCambiados = res.data.codigosNoCambiados\r\n            me.codigoNoExiste     = res.data.codigoNoExiste\r\n            me.codigoLiquidados   = res.data.codigoLiquidados\r\n            me.porcentaje         = res.data.cambiados\r\n            me.codigosSinCodigoUnion  = res.data.codigosSinCodigoUnion\r\n            if(me.codigosSinCodigoUnion.length > 0){\r\n              me.popupProblemasCodigosUnion = true\r\n            }\r\n        })\r\n        .catch(function (error) {\r\n            me.$vs.notify({\r\n            text:'Verifique que la información se haya guardado correctamente.',\r\n            color:'warning',\r\n            iconPack: 'feather',\r\n            icon:'icon-alert-triangle'})\r\n            me.$vs.loading.close()\r\n            // setTimeout(function() {location.reload()}, 1000);\r\n        })\r\n      },\r\n      openConfirm(tipo) {\r\n        let me = this\r\n        me.tipo_selected = tipo\r\n        if( !me.tableData[0].codigo){\r\n              me.$vs.loading.close()\r\n              me.$vs.notify({ text:'Corrija el formato del excel y vuelva a intentar.', color:'warning', iconPack: 'feather', icon:'icon-alert-triangle'})\r\n              return\r\n          }\r\n        me.errores = []\r\n        $.each(me.tableData,function(key, value){\r\n          if( !value.codigo ){\r\n            me.errores.push(value)\r\n          }\r\n        })\r\n        if( me.errores.length > 0 ){\r\n          me.modalErrores = true\r\n        }else{\r\n          me.modalConfirm = true\r\n        }\r\n      },\r\n\r\n    }\r\n  }\r\n  </script>\r\n\r\n  <style scoped>\r\n  .tabla{\r\n    width: 100%;\r\n    margin-top: 10px;\r\n  }\r\n   .tabla {\r\n\r\n    border: 1px solid #D1E5F1;\r\n    padding: 2px;\r\n    border-radius: 5px;\r\n  }\r\n  .th1{\r\n    background-color: #8F33D3;\r\n    border-radius: 5px;\r\n    color:white;\r\n  }\r\n  .td1, .th1{\r\n   padding: 10px;\r\n   text-align: center;\r\n   border:none;\r\n  }\r\n  </style>\r\n"],"mappings":"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","ignoreList":[]}]}