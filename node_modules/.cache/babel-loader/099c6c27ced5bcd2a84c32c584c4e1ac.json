{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\admin\\capacitaciones.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\admin\\capacitaciones.vue","mtime":1712682815441},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\babel.config.js","mtime":1712682813877},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\.babelrc","mtime":1712682813750},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import vSelect from 'vue-select';\nexport default {\n  components: {\n    'v-select': vSelect\n  },\n  data: function data() {\n    return {\n      estado: '',\n      capacitaciones: '',\n      modalAdd: false,\n      capacitacion: {\n        'id': '',\n        'nueva_area': '',\n        'tema': '',\n        'capacitador': '',\n        'observacion': '',\n        'estado': ''\n      },\n      tipos: [],\n      areaSelect: '',\n      otra_area: 0,\n      txt_boton: 'Agregar',\n      color_boton: 'warning',\n      dato_eliminar: '',\n      popupSolicitudes: false,\n      popupEditSolicitud: false,\n      arregloSolicitudes: [],\n      id: 0,\n      asesor: '',\n      comentario: ''\n    };\n  },\n  mounted: function mounted() {\n    var me = this;\n    me.getTipoAreas();\n    me.getCapacitaciones();\n    me.verSolicitudes();\n  },\n  methods: {\n    GuardarEstadoSolicitud: function GuardarEstadoSolicitud() {\n      var me = this;\n      var formData = new FormData();\n      formData.append('id', me.id);\n      formData.append('asesor', me.asesor);\n      formData.append('estado', me.estado);\n      formData.append('comentario', me.comentario);\n      me.$vs.loading();\n      this.$http.post(this.$server_url + 'editarSolicitudTema', formData).then(function (res) {\n        me.$vs.loading.close();\n        me.popupEditSolicitud = false;\n        me.$vs.notify({\n          text: 'Se envio correctamente',\n          color: 'primary',\n          iconPack: 'feather',\n          icon: 'icon-alert-triangle'\n        });\n        me.verSolicitudes();\n        me.popupSolicitudes = true;\n      }).catch(function (error) {\n        console.log(error + ' error');\n        me.$vs.loading.close();\n      });\n    },\n    verSolicitudes: function verSolicitudes() {\n      var me = this;\n      me.$vs.loading();\n      this.$http.get(this.$server_url + 'solicitarTema?todo=yes').then(function (res) {\n        me.$vs.loading.close();\n        me.arregloSolicitudes = res.data;\n      }).catch(function (error) {\n        console.log(error + ' error');\n        me.$vs.loading.close();\n      });\n    },\n    openModalEditar: function openModalEditar(tr) {\n      var me = this;\n      me.id = tr.id;\n      me.asesor = tr.asesor_id;\n      me.comentario = tr.comentario_admin;\n      me.estado = tr.estado;\n      me.popupSolicitudes = false;\n      me.popupEditSolicitud = true;\n    },\n    f_agregar_cap: function f_agregar_cap() {\n      var me = this;\n      me.color_boton = 'primary';\n      me.txt_boton = 'Agregar';\n      me.modalAdd = true;\n    },\n    getCapacitaciones: function getCapacitaciones() {\n      var me = this;\n      me.modalAdd = false;\n      me.$vs.loading();\n      this.$http.get(this.$server_url + 'capacitacionTema').then(function (res) {\n        me.capacitaciones = res.data;\n        me.$vs.loading.close();\n      }).catch(function (error) {\n        console.log(error + ' error');\n        me.$vs.loading.close();\n      });\n    },\n    getTipoAreas: function getTipoAreas() {\n      var me = this;\n      me.$vs.loading();\n      this.$http.get(this.$server_url + 'areas').then(function (res) {\n        me.tipos = res.data.area;\n        me.$vs.loading.close();\n      }).catch(function (error) {\n        console.log(error + ' error');\n        me.$vs.loading.close();\n      });\n    },\n    f_verificar: function f_verificar() {\n      var me = this;\n      if (me.capacitacion.tema == \"\" && me.capacitacion.tema != undefined) {\n        me.$vs.notify({\n          text: 'Ingrese el tema de la capacitación',\n          color: 'danger',\n          iconPack: 'feather',\n          icon: 'icon-alert-triangle'\n        });\n        return;\n      }\n      // if (me.capacitacion.capacitador == \"\" && me.capacitacion.capacitador != null) {\n      //     me.$vs.notify({\n      //         text: 'Ingrese el el nombre del capacitador',\n      //         color: 'danger',\n      //         iconPack: 'feather',\n      //         icon: 'icon-alert-triangle'\n      //     })\n      //     return\n      // }\n      if (me.otra_area == 0) {\n        //si existe un area seleccionada, vaciar el input de  nueva area\n        me.capacitacion.nueva_area = '';\n        if (me.areaSelect == \"\" || me.areaSelect == 0 || me.areaSelect == null) {\n          me.$vs.notify({\n            text: 'Seleccione un área',\n            color: 'danger',\n            iconPack: 'feather',\n            icon: 'icon-alert-triangle'\n          });\n          return;\n        }\n      } else {\n        me.areaSelect = '';\n        if (me.capacitacion.nueva_area == \"\" || me.capacitacion.nueva_area == \"null\" || me.capacitacion.nueva_area == null) {\n          me.$vs.notify({\n            text: 'Ingrese el nombre de la nueva área',\n            color: 'danger',\n            iconPack: 'feather',\n            icon: 'icon-alert-triangle'\n          });\n          return;\n        }\n      }\n      // console.log( me.capacitacion, me.areaSelect )\n      // return\n      if (me.capacitacion.estado == true) {\n        me.capacitacion.estado = 1;\n      } else {\n        me.capacitacion.estado = 0;\n      }\n      var formData = new FormData();\n      formData.append('id', me.capacitacion.id);\n      formData.append('area', me.areaSelect);\n      formData.append('nueva_area', me.capacitacion.nueva_area);\n      formData.append('tema', me.capacitacion.tema);\n      formData.append('capacitador', me.capacitacion.capacitador);\n      formData.append('observacion', me.capacitacion.observacion);\n      formData.append('estado', me.capacitacion.estado);\n      // console.log(me.capacitacion, me.areaSelect)\n      // return\n      me.$vs.loading();\n      this.$http.post(this.$server_url + 'capacitacionTema', formData).then(function (res) {\n        // console.log(res.data);\n        me.getCapacitaciones();\n        me.$vs.loading.close();\n      }).catch(function (error) {\n        console.log(error + ' error');\n        me.$vs.loading.close();\n      });\n    },\n    f_carga_datos: function f_carga_datos(item) {\n      var me = this;\n      me.txt_boton = 'Editar';\n      me.color_boton = 'warning';\n      me.areaSelect = item.area;\n      item.estado == 1 ? item.estado = true : item.estado = false;\n      item.nueva_area == null ? me.otra_area = 0 : me.otra_area = 1;\n      me.capacitacion = item;\n      // console.log(item)\n      me.modalAdd = true;\n    },\n    f_confirmar_elimina: function f_confirmar_elimina(item) {\n      var me = this;\n      // console.log(item)\n      me.dato_eliminar = item.id;\n      me.$vs.dialog({\n        type: 'confirm',\n        color: 'danger',\n        title: \"Eliminar\",\n        text: 'Desea eliminar este item?.',\n        acceptText: 'Aceptar',\n        cancelText: 'Cancelar',\n        accept: me.f_eliminarCapacitacion\n      });\n    },\n    f_eliminarCapacitacion: function f_eliminarCapacitacion() {\n      var me = this;\n      me.$vs.loading();\n      this.$http.delete(this.$server_url + 'capacitacionTema/' + me.dato_eliminar).then(function (res) {\n        // console.log(res.data);\n        me.getCapacitaciones();\n        me.$vs.loading.close();\n      }).catch(function (error) {\n        console.log(error + ' error');\n        me.$vs.loading.close();\n      });\n    },\n    limpiar: function limpiar() {\n      var me = this;\n      me.capacitacion = {\n        'id': '',\n        'nueva_area': '',\n        'tema': '',\n        'capacitador': '',\n        'observacion': '',\n        'estado': ''\n      };\n    }\n  }\n};",{"version":3,"names":["vSelect","components","data","estado","capacitaciones","modalAdd","capacitacion","tipos","areaSelect","otra_area","txt_boton","color_boton","dato_eliminar","popupSolicitudes","popupEditSolicitud","arregloSolicitudes","id","asesor","comentario","mounted","me","getTipoAreas","getCapacitaciones","verSolicitudes","methods","GuardarEstadoSolicitud","formData","FormData","append","$vs","loading","$http","post","$server_url","then","res","close","notify","text","color","iconPack","icon","catch","error","console","log","get","openModalEditar","tr","asesor_id","comentario_admin","f_agregar_cap","area","f_verificar","tema","undefined","nueva_area","capacitador","observacion","f_carga_datos","item","f_confirmar_elimina","dialog","type","title","acceptText","cancelText","accept","f_eliminarCapacitacion","delete","limpiar"],"sources":["src/views/admin/capacitaciones.vue"],"sourcesContent":["<template>\r\n    <div class=\"mt-5\">\r\n        <div>\r\n            <vs-popup title=\"Agregar tema de capacitación \" :active.sync=\"modalAdd\">\r\n                <div class=\"m-2\">\r\n                    <vs-checkbox v-model=\"otra_area\">Otra área</vs-checkbox>\r\n                    <vs-input v-if=\"otra_area == 1\" v-model=\"capacitacion.nueva_area\" maxlength=\"300\" class=\"mb-4 w-full\" label=\"Nueva área\" placeholder=\"Ingrese el nombre de la nueva área\"></vs-input>\r\n                </div>\r\n                <div v-if=\"otra_area == 0\">Area\r\n                    <v-select :options=\"tipos\" :reduce=\"tipos => tipos.idarea\" label=\"nombrearea\" class=\"w-full\" v-model=\"areaSelect\" />\r\n                </div>\r\n        \r\n                <!-- {{areaSelect}} -->\r\n                <vs-input v-model=\"capacitacion.tema\" maxlength=\"300\" class=\"mb-4 w-full\" label=\"Tema\"></vs-input>\r\n                <vs-input v-model=\"capacitacion.capacitador\" hidden maxlength=\"300\" class=\"mb-4 w-full\" label=\"\"></vs-input>\r\n                <vs-input v-model=\"capacitacion.observacion\"  maxlength=\"300\" class=\"mb-4 w-full\" label=\"Observación\"></vs-input>\r\n                <label for=\"\">Estado</label>\r\n                <vs-switch style=\"width:85px\" color=\"success\" v-model=\"capacitacion.estado\">\r\n                    <span slot=\"on\">Activo</span>\r\n                    <span slot=\"off\">Inactivo</span>\r\n                </vs-switch>\r\n                <vs-button class=\"mt-5\" :color=\"color_boton\" @click=\"f_verificar()\" type=\"filled\">{{txt_boton}} </vs-button>\r\n            </vs-popup>\r\n        </div>\r\n        <div style=\"display:flex;\">\r\n            <vs-button color=\"primary\" type=\"border\" size=\"small\" style=\"font-size: 14px;\" @click=\"limpiar();f_agregar_cap();\">Agregar Tema</vs-button>\r\n            <vs-button color=\"warning\" class=\"ml-3\" icon=\"description\" type=\"border\" size=\"small\" style=\"font-size: 14px;\" @click=\"popupSolicitudes=true;\">Solicitudes de Temas</vs-button>\r\n            <vs-button radius color=\"warning\" v-if=\"arregloSolicitudes.length > 0\" class=\"ml-2\" type=\"filled\" icon=\"notifications_active\"></vs-button>\r\n        </div>\r\n        <vs-table max-items=\"10\" search pagination :data=\"capacitaciones\">\r\n            <template slot=\"header\">\r\n                Cantidad:<b> {{capacitaciones.length}}</b>\r\n            </template>\r\n            <template slot=\"thead\">\r\n                <vs-th>Tema</vs-th>\r\n                <vs-th>Capacitador</vs-th>\r\n                <vs-th>Area</vs-th>\r\n                <vs-th>Estado</vs-th>\r\n                <vs-th>Fechas</vs-th>\r\n                <vs-th></vs-th>\r\n\r\n            </template>\r\n            <template slot-scope=\"{data}\">\r\n                <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                    <vs-td>\r\n                        <b>Tema</b>\r\n                        <p>{{data[indextr].tema}}</p>\r\n                        <b>Observación</b>\r\n                        <p>{{ tr.observacion }}</p>\r\n                    </vs-td>\r\n                    <vs-td>\r\n                        {{data[indextr].capacitador}}\r\n                    </vs-td>\r\n                    <vs-td>\r\n                        <div v-if=\"data[indextr].area != null\">\r\n                            <span :key=\"itr\" v-for=\"(tr, itr) in tipos\">\r\n                                <span v-if=\"data[indextr].area == tr.idarea\"> {{tr.nombrearea}} </span>\r\n                            </span>\r\n                        </div>\r\n                        <div v-if=\"data[indextr].nueva_area != null\">\r\n                            {{data[indextr].nueva_area}}\r\n                        </div>\r\n                    </vs-td>\r\n                    <vs-td>\r\n                        <span v-if=\"data[indextr].estado == 1\" class=\"text-success\">Activa</span>\r\n                        <span v-else class=\"text-danger\">Inactiva</span>\r\n                    </vs-td>\r\n                    <vs-td>\r\n                        <small>Actualizado: {{fechaCorta(data[indextr].updated_at) }}</small><br>\r\n                        <small>Creado: {{fechaCorta(data[indextr].created_at) }}</small>\r\n                    </vs-td>\r\n                    <vs-td>\r\n                        <vs-button style=\"display:inline-block\" @click=\"f_carga_datos(tr);\" radius icon-pack=\"feather\" icon=\"icon-edit\" color=\"primary\" type=\"border\"></vs-button>\r\n                        <vs-button class=\"ml-2\" style=\"display:inline-block\" @click=\"f_confirmar_elimina(tr);\" radius icon-pack=\"feather\" icon=\"icon-trash\" color=\"danger\" type=\"border\"></vs-button>\r\n                    </vs-td>\r\n                </vs-tr>\r\n            </template>\r\n        </vs-table>\r\n        <!--POPUP DE LISTADO DE SOLICITUDES-->\r\n        <vs-popup class=\"holamundo\" title=\"Solicitudes\" fullscreen :active.sync=\"popupSolicitudes\">\r\n            <vs-table max-items=\"10\" stripe search pagination :data=\"arregloSolicitudes\">\r\n                <template slot=\"thead\">\r\n\r\n                    <vs-th>Asesor</vs-th>\r\n                    <vs-th>Tema</vs-th>\r\n                    <vs-th>Observacion</vs-th>\r\n                    <vs-th>Comentario Admin</vs-th>\r\n                    <vs-th>Estado</vs-th>\r\n                    <vs-th>Acciones</vs-th>\r\n\r\n                </template>\r\n                <template slot-scope=\"{data}\">\r\n                    <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                        <vs-td>\r\n                            {{data[indextr].asesor}}<br>\r\n                        </vs-td>\r\n                        <vs-td>\r\n                            {{data[indextr].tema}}<br>\r\n                        </vs-td>\r\n                        <vs-td>\r\n                            {{data[indextr].observacion}}<br>\r\n                        </vs-td>\r\n                        <vs-td>\r\n                            {{data[indextr].comentario_admin}}<br>\r\n                        </vs-td>\r\n                        <vs-td>\r\n                            <span v-if=\"data[indextr].estado == 0\"><br>\r\n                                <vs-chip color=\"danger\">Generado</vs-chip>\r\n                            </span>\r\n                            <span v-if=\"data[indextr].estado == 1\"><br>\r\n                                <vs-chip color=\"warning\">Tema Creado</vs-chip>\r\n                            </span>\r\n                            <span v-if=\"data[indextr].estado == 2\"><br>\r\n                                <vs-chip color=\"success\">No se pudo crear</vs-chip>\r\n                            </span>\r\n                        </vs-td>\r\n                        <vs-td>\r\n                            <div style=\"display:flex;\">   \r\n                                <vs-button radius color=\"success\" @click=\"openModalEditar(tr)\" type=\"line\" icon=\"edit\"></vs-button>\r\n                                <vs-button type=\"line\" style=\"border-radius: 10px;\" class=\"ml-3\" @click=\"limpiar();modalAdd = true;\">Agregar Tema</vs-button>\r\n                            </div>\r\n                        </vs-td>\r\n                    </vs-tr>\r\n                </template>\r\n            </vs-table>\r\n        </vs-popup>\r\n        <!--POPUP DE EDICION DE SOLICITUDES-->\r\n        <vs-popup class=\"holamundo\"  title=\"Enviar al asesor\" :active.sync=\"popupEditSolicitud\">\r\n            <vs-row>\r\n                <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\">\r\n                    <vs-input label=\"Comentario\" class=\"w-full\" placeholder=\"Comentario\" v-model=\"comentario\"/>\r\n                </vs-col>\r\n            </vs-row>\r\n            <vs-row class=\"mt-3\">\r\n                <vs-col vs-type=\"flex\" vs-justify=\"left\" vs-align=\"left\" vs-w=\"12\">\r\n                    <ul class=\"leftx\">\r\n                        <small>Estado</small>\r\n                        <li class=\"mt-2\">\r\n                        <vs-radio v-model=\"estado\" vs-name=\"radios1\" vs-value=\"0\">solicitud</vs-radio>\r\n                        </li>\r\n                        <li>\r\n                        <vs-radio v-model=\"estado\" vs-name=\"radios1\" vs-value=\"1\">Tema creado</vs-radio>\r\n                        </li>\r\n                        <li>\r\n                        <vs-radio v-model=\"estado\" vs-name=\"radios1\" vs-value=\"2\">No se pudo crear tema</vs-radio>\r\n                        </li> \r\n                    </ul>\r\n                </vs-col>\r\n            </vs-row>\r\n            <vs-row class=\"mt-2\">\r\n                <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\">\r\n                    <vs-button color=\"success\" @click=\"GuardarEstadoSolicitud()\" type=\"filled\">Enviar</vs-button>\r\n                </vs-col>\r\n            </vs-row>\r\n        </vs-popup>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport vSelect from 'vue-select'\r\nexport default {\r\n    components: {\r\n        'v-select': vSelect,\r\n    },\r\n    data() {\r\n        return {\r\n            estado:'',\r\n            capacitaciones: '',\r\n            modalAdd: false,\r\n            capacitacion: {\r\n                'id': '',\r\n                'nueva_area': '',\r\n                'tema': '',\r\n                'capacitador': '',\r\n                'observacion':'',\r\n                'estado': '',\r\n            },\r\n            tipos: [],\r\n            areaSelect: '',\r\n            otra_area: 0,\r\n            txt_boton: 'Agregar',\r\n            color_boton: 'warning',\r\n            dato_eliminar: '',\r\n            popupSolicitudes: false,\r\n            popupEditSolicitud:false,\r\n            arregloSolicitudes: [],\r\n            id:0,\r\n            asesor:'',\r\n            comentario:''\r\n         \r\n        }\r\n    },\r\n    mounted() {\r\n        let me = this;\r\n        me.getTipoAreas();\r\n        me.getCapacitaciones();\r\n        me.verSolicitudes()\r\n    },\r\n    methods: {\r\n        GuardarEstadoSolicitud(){\r\n            let me = this;\r\n            let formData = new FormData();\r\n            formData.append('id', me.id);\r\n            formData.append('asesor', me.asesor);\r\n            formData.append('estado', me.estado);\r\n            formData.append('comentario', me.comentario);\r\n            me.$vs.loading();\r\n            this.$http.post(this.$server_url + 'editarSolicitudTema',formData)\r\n                .then(function (res) {\r\n                    me.$vs.loading.close()\r\n                    me.popupEditSolicitud = false\r\n                    me.$vs.notify({\r\n                    text: 'Se envio correctamente',\r\n                    color: 'primary',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-alert-triangle'\r\n                    })\r\n                    me.verSolicitudes()\r\n                    me.popupSolicitudes = true\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                    me.$vs.loading.close()\r\n\r\n                })\r\n        },\r\n        verSolicitudes() {\r\n            let me = this;\r\n            me.$vs.loading();\r\n            this.$http.get(this.$server_url + 'solicitarTema?todo=yes')\r\n                .then(function (res) {\r\n                    me.$vs.loading.close()\r\n                    me.arregloSolicitudes = res.data;\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                    me.$vs.loading.close()\r\n                })\r\n        },\r\n        openModalEditar(tr){\r\n            let me = this;\r\n            me.id = tr.id\r\n            me.asesor = tr.asesor_id\r\n            me.comentario = tr.comentario_admin\r\n            me.estado = tr.estado\r\n            me.popupSolicitudes = false\r\n            me.popupEditSolicitud = true\r\n        },\r\n        f_agregar_cap() {\r\n            let me = this;\r\n            me.color_boton = 'primary';\r\n            me.txt_boton = 'Agregar';\r\n            me.modalAdd = true;\r\n        },\r\n        getCapacitaciones() {\r\n            let me = this;\r\n            me.modalAdd = false;\r\n            me.$vs.loading();\r\n            this.$http.get(this.$server_url + 'capacitacionTema')\r\n                .then(function (res) {\r\n                    me.capacitaciones = res.data\r\n                    me.$vs.loading.close()\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                    me.$vs.loading.close()\r\n\r\n                })\r\n        },\r\n        getTipoAreas() {\r\n            let me = this;\r\n            me.$vs.loading();\r\n\r\n            this.$http.get(this.$server_url + 'areas')\r\n                .then(function (res) {\r\n                    me.tipos = res.data.area\r\n                    me.$vs.loading.close()\r\n\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                    me.$vs.loading.close()\r\n\r\n                })\r\n        },\r\n        f_verificar() {\r\n            let me = this;\r\n            if (me.capacitacion.tema == \"\" && me.capacitacion.tema != undefined) {\r\n                me.$vs.notify({\r\n                    text: 'Ingrese el tema de la capacitación',\r\n                    color: 'danger',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-alert-triangle'\r\n                })\r\n                return\r\n            }\r\n            // if (me.capacitacion.capacitador == \"\" && me.capacitacion.capacitador != null) {\r\n            //     me.$vs.notify({\r\n            //         text: 'Ingrese el el nombre del capacitador',\r\n            //         color: 'danger',\r\n            //         iconPack: 'feather',\r\n            //         icon: 'icon-alert-triangle'\r\n            //     })\r\n            //     return\r\n            // }\r\n            if (me.otra_area == 0) {\r\n                //si existe un area seleccionada, vaciar el input de  nueva area\r\n                me.capacitacion.nueva_area = ''\r\n                if (me.areaSelect == \"\" || me.areaSelect == 0 || me.areaSelect == null) {\r\n                    me.$vs.notify({\r\n                        text: 'Seleccione un área',\r\n                        color: 'danger',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-alert-triangle'\r\n                    })\r\n                    return\r\n                }\r\n            } else {\r\n                me.areaSelect = '';\r\n                if (me.capacitacion.nueva_area == \"\" || me.capacitacion.nueva_area == \"null\" || me.capacitacion.nueva_area == null) {\r\n                    me.$vs.notify({\r\n                        text: 'Ingrese el nombre de la nueva área',\r\n                        color: 'danger',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-alert-triangle'\r\n                    })\r\n                    return\r\n                }\r\n            }\r\n            // console.log( me.capacitacion, me.areaSelect )\r\n            // return\r\n            if (me.capacitacion.estado == true) {\r\n                me.capacitacion.estado = 1\r\n            } else {\r\n                me.capacitacion.estado = 0\r\n            }\r\n            let formData = new FormData();\r\n            formData.append('id',           me.capacitacion.id);\r\n            formData.append('area',         me.areaSelect);\r\n            formData.append('nueva_area',   me.capacitacion.nueva_area);\r\n            formData.append('tema',         me.capacitacion.tema);\r\n            formData.append('capacitador',  me.capacitacion.capacitador);\r\n            formData.append('observacion',  me.capacitacion.observacion)\r\n            formData.append('estado',       me.capacitacion.estado);\r\n            // console.log(me.capacitacion, me.areaSelect)\r\n            // return\r\n            me.$vs.loading();\r\n            this.$http.post(this.$server_url + 'capacitacionTema', formData)\r\n                .then(function (res) {\r\n                    // console.log(res.data);\r\n                    me.getCapacitaciones();\r\n                    me.$vs.loading.close()\r\n\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                    me.$vs.loading.close()\r\n\r\n                })\r\n        },\r\n        f_carga_datos(item) {\r\n            let me = this;\r\n            me.txt_boton = 'Editar';\r\n            me.color_boton = 'warning';\r\n            me.areaSelect = item.area\r\n            item.estado == 1 ?\r\n                item.estado = true :\r\n                item.estado = false;\r\n            item.nueva_area == null ?\r\n                me.otra_area = 0 :\r\n                me.otra_area = 1;\r\n            me.capacitacion = item\r\n            // console.log(item)\r\n            me.modalAdd = true;\r\n        },\r\n        f_confirmar_elimina(item) {\r\n            let me = this;\r\n            // console.log(item)\r\n            me.dato_eliminar = item.id\r\n            me.$vs.dialog({\r\n                type: 'confirm',\r\n                color: 'danger',\r\n                title: `Eliminar`,\r\n                text: 'Desea eliminar este item?.',\r\n                acceptText: 'Aceptar',\r\n                cancelText: 'Cancelar',\r\n                accept: me.f_eliminarCapacitacion\r\n            })\r\n        },\r\n        f_eliminarCapacitacion() {\r\n            let me = this;\r\n            me.$vs.loading();\r\n            this.$http.delete(this.$server_url + 'capacitacionTema/' + me.dato_eliminar)\r\n                .then(function (res) {\r\n                    // console.log(res.data);\r\n                    me.getCapacitaciones();\r\n                    me.$vs.loading.close()\r\n\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                    me.$vs.loading.close()\r\n\r\n                })\r\n        },\r\n        limpiar(){\r\n            let me = this;\r\n            me.capacitacion = {\r\n                'id': '',\r\n                'nueva_area': '',\r\n                'tema': '',\r\n                'capacitador': '',\r\n                'observacion':'',\r\n                'estado': '',\r\n            };\r\n        }\r\n    },\r\n}\r\n</script>\r\n"],"mappings":"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","ignoreList":[]}]}