{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\institucion\\components\\asignarLibros.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\institucion\\components\\asignarLibros.vue","mtime":1712682816024},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\babel.config.js","mtime":1712682813877},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\.babelrc","mtime":1712682813750},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _defineProperty from \"C:/laragon/www/PRY_NEW_JEYSON/LOCAL/plataformaprolipa_vue/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nexport default {\n  data: function data() {\n    return _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({\n      asignaturadocenteselect: [],\n      seleccionadas: '',\n      usuarioAsignacion: '',\n      user_seleccionado: '',\n      user_nombre: '',\n      user_email: ''\n    }, \"seleccionadas\", []), \"area\", []), \"usuario\", []), \"show_inst\", ''), \"confirmar\", false);\n  },\n  props: {\n    p_user_nombre: {\n      type: String,\n      default: '0'\n    },\n    p_user_email: {\n      type: String,\n      default: '0'\n    },\n    p_user_institucion: {\n      type: String,\n      default: '0'\n    }\n  },\n  created: function created() {\n    var me = this;\n    me.usuario = JSON.parse(localStorage.getItem(\"usuario\"));\n    me.getSeleccionadas();\n    me.getAreaSelect();\n    me.usuarioAsignacion = me.datos;\n    // me.usuarioAsignacion = JSON.parse(localStorage.getItem('user_select'));\n    me.user_seleccionado = me.usuarioAsignacion.idusuario;\n  },\n  methods: {\n    getSeleccionadas: function getSeleccionadas() {\n      var me = this;\n      me.$vs.loading();\n      var data = new FormData();\n      data.append('idusuario', localStorage.user_seleccionado);\n      this.$http.post(this.$server_url + \"asignaturasDocent\", data).then(function (res) {\n        // console.log(res.data);\n        me.seleccionadas = res.data;\n        localStorage.setItem('aSeleccionadas', JSON.stringify(res.data));\n        // me.popupDocentes = true;\n        me.$vs.loading.close();\n      }).catch(function (e) {\n        me.$vs.loading.close();\n      });\n\n      // me.$vs.loading();\n      // this.$http.get(this.$server_url + \"getasignaturasDocente?idusuario=\"+localStorage.user_seleccionado).then(function (response) {\n      //      me.seleccionadas = res.data;\n      //     localStorage.setItem('aSeleccionadas',JSON.stringify(me.area))\n      //     // console.log(me.area);\n      //     me.$vs.loading.close();\n      // })\n      // .catch(function(e){\n      //     me.$vs.loading.close();\n      //  });\n    },\n    getAreaSelect: function getAreaSelect() {\n      var me = this;\n      me.$vs.loading();\n      this.$http.get(this.$server_url + \"areaSelect\").then(function (response) {\n        me.area = response.data.items;\n        localStorage.setItem('areasSeleccionadas', JSON.stringify(me.area));\n        // console.log(me.area);\n        me.$vs.loading.close();\n      });\n    },\n    agregaAsignacion: function agregaAsignacion(item) {\n      var me = this;\n      var data = new FormData();\n      data.append('usuario_idusuario', localStorage.user_seleccionado);\n      data.append('asignatura_idasignatura', item.id);\n      this.$http.post(this.$server_url + \"asignar_asignatura_docentes\", data).then(function (res) {\n        // console.log(res.data);\n        if (res.data > 0) {\n          me.$vs.notify({\n            time: 7000,\n            text: 'Esta asignatura ya se encuentra asignada al docente',\n            color: 'danger',\n            iconPack: 'feather',\n            icon: 'icon-alert-triangle'\n          });\n        } else {\n          me.$vs.notify({\n            text: 'Asignatura agregada',\n            color: 'success',\n            iconPack: 'feather',\n            icon: 'icon-check'\n          });\n          me.getSeleccionadas();\n        }\n        me.$vs.loading.close();\n      });\n    },\n    eliminaAsignacion: function eliminaAsignacion(item) {\n      var me = this;\n      // console.log(item)\n      me.$vs.loading();\n      this.$http.get(this.$server_url + \"eliminaAsignacion/\" + item.idasignado).then(function (res) {\n        // console.log(res.data);\n        me.$vs.notify({\n          text: item.nombreasignatura + ' eliminada',\n          color: 'success',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        me.getSeleccionadas();\n        me.$vs.loading.close();\n      });\n    },\n    confirmaQuitar: function confirmaQuitar() {\n      var me = this;\n      me.confirmar = true;\n      // me.$vs.dialog({\n      //     type: 'confirm',\n      //     color: 'danger',\n      //     title: 'Confirmar',\n      //     text: '¿Está seguro de eliminar este contenido?',\n      //     acceptText: 'Aceptar',\n      //     cancelText: 'Cancelar',\n      //     cancel:me.cancelar,\n      //     accept: me.f_quitarTodo\n      // })\n    },\n    cancelar: function cancelar() {\n      var me = this;\n      me.confirmar = false;\n    },\n    f_quitarTodo: function f_quitarTodo() {\n      var me = this;\n      me.confirmar = false;\n      var idSelects = [];\n      for (var index = 0; index < me.seleccionadas.length; index++) {\n        idSelects.push(me.seleccionadas[index].idasignado);\n      }\n      // console.log(idSelects)\n      me.$vs.loading();\n      var data = new FormData();\n      data.append('idasiguser', idSelects);\n      this.$http.post(this.$server_url + \"quitaTodasAsignaturas\", data).then(function (res) {\n        // console.log(res.data);\n        me.$vs.notify({\n          text: 'Asignaturas quitadas correctamente.',\n          color: 'success',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        me.getSeleccionadas();\n        me.$vs.loading.close();\n      });\n    }\n  }\n};",{"version":3,"names":["data","_defineProperty","asignaturadocenteselect","seleccionadas","usuarioAsignacion","user_seleccionado","user_nombre","user_email","props","p_user_nombre","type","String","default","p_user_email","p_user_institucion","created","me","usuario","JSON","parse","localStorage","getItem","getSeleccionadas","getAreaSelect","datos","idusuario","methods","$vs","loading","FormData","append","$http","post","$server_url","then","res","setItem","stringify","close","catch","e","get","response","area","items","agregaAsignacion","item","id","notify","time","text","color","iconPack","icon","eliminaAsignacion","idasignado","nombreasignatura","confirmaQuitar","confirmar","cancelar","f_quitarTodo","idSelects","index","length","push"],"sources":["src/views/institucion/components/asignarLibros.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <div v-if=\"confirmar == true\">\r\n            <vs-card class=\"mt-2\">\r\n                <vs-alert title=\"Estas seguro de quitar todo?\" color=\"danger\">\r\n                    <div class=\"flex\">\r\n                        <vs-button color=\"success\" @click=\"f_quitarTodo()\" type=\"relief\">Si, Eliminar todo</vs-button>\r\n                        <vs-button color=\"danger\" class=\"ml-2\" @click=\"cancelar()\" type=\"relief\">Cancelar</vs-button>\r\n                    </div>\r\n                </vs-alert>\r\n\r\n            </vs-card>\r\n        </div>\r\n        <div v-else>\r\n            <br/>\r\n            <div class=\"m-2\">\r\n                <vs-list>\r\n                    <vs-list-item v-if=\"show_inst== 'si'\" title=\"Institución\" :subtitle=\"p_user_institucion\"></vs-list-item>\r\n                    <vs-list-item title=\"Nombre\" :subtitle=\"p_user_nombre\"></vs-list-item>\r\n                    <vs-list-item title=\"Email\" :subtitle=\"p_user_email\"></vs-list-item>\r\n                </vs-list>\r\n                <vs-divider color=\"success\">Areas seleccionadas ( {{seleccionadas.length}} ) </vs-divider>\r\n                <vs-collapse>\r\n                    <vs-collapse-item icon-pack=\"feather\" icon-arrow=\"icon-arrow-down\">\r\n                        <div slot=\"header\">\r\n                            Ver ( {{seleccionadas.length}} )\r\n                        </div>\r\n                        <div class=\"vx-row\">\r\n                            <div class=\"vx-col sm:w-full text-right\" v-if=\"seleccionadas.length >1\">\r\n                                <vs-button type=\"border\" color=\"danger\" size=\"small\" @click=\"confirmaQuitar()\">Quitar todas <span class=\"feather icon icon-trash\"></span></vs-button>\r\n                            </div>\r\n                            <div class=\"vx-col sm:w-full\">\r\n                                <div v-for=\"(item, index) in seleccionadas\" :key=\"index\" class=\"m-1 p-1 asig-select text-dark\">\r\n                                    {{item.nombreasignatura}} &nbsp; &nbsp;\r\n                                    <vs-button @click=\"eliminaAsignacion(item)\" style=\"display:inline\" size=\"small\" color=\"danger\" radius type=\"border\" icon-pack=\"feather\" icon=\"icon-trash\"></vs-button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </vs-collapse-item>\r\n                </vs-collapse>\r\n            </div>\r\n            <div class=\"m-2\">\r\n                <vs-divider color=primary> Areas ( {{area.length}} ) </vs-divider>\r\n                <vs-collapse>\r\n                    <vs-collapse-item icon-pack=\"feather\" icon-arrow=\"icon-arrow-down\" v-for=\"(listItem, index) in area\" :key=\"index\" :title=\"listItem.name\">\r\n                        <div slot=\"header\">\r\n                            {{listItem.name}}\r\n                        </div>\r\n                        <vs-button v-for=\"(listIAsig, indexAsig) in listItem.children\" :key=\"indexAsig\" type=\"border\" color=\"primary\" class=\"p-2 m-1\" @click=\"agregaAsignacion(listIAsig)\">\r\n                            {{listIAsig.name}}\r\n                        </vs-button>\r\n                    </vs-collapse-item>\r\n                </vs-collapse>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n    data() {\r\n      return{\r\n            asignaturadocenteselect: [],\r\n            seleccionadas: '',\r\n            usuarioAsignacion: '',\r\n            user_seleccionado: '',\r\n            user_nombre: '',\r\n            user_email: '',\r\n            seleccionadas:[],\r\n            area:[],\r\n            usuario:[],\r\n            show_inst: '',\r\n            confirmar:false,\r\n      }\r\n    },\r\n    props:{\r\n        p_user_nombre:{\r\n            type:String,\r\n            default:'0'\r\n        },\r\n        p_user_email:{\r\n            type:String,\r\n            default:'0'\r\n        },\r\n        p_user_institucion:{\r\n            type:String,\r\n            default:'0'\r\n        },\r\n\r\n\r\n    },\r\n    created(){\r\n        let me = this;\r\n        me.usuario = JSON.parse(localStorage.getItem(\"usuario\"))\r\n        me.getSeleccionadas()\r\n        me.getAreaSelect();\r\n        me.usuarioAsignacion = me.datos;\r\n        // me.usuarioAsignacion = JSON.parse(localStorage.getItem('user_select'));\r\n        me.user_seleccionado = me.usuarioAsignacion.idusuario\r\n\r\n    },\r\n    methods:{\r\n        getSeleccionadas() {\r\n            let me = this;\r\n            me.$vs.loading();\r\n            let data = new FormData();\r\n            data.append('idusuario', localStorage.user_seleccionado)\r\n            this.$http.post(this.$server_url + \"asignaturasDocent\", data)\r\n                .then(res => {\r\n                    // console.log(res.data);\r\n                    me.seleccionadas = res.data;\r\n                    localStorage.setItem('aSeleccionadas',JSON.stringify(res.data))\r\n                    // me.popupDocentes = true;\r\n                    me.$vs.loading.close();\r\n                })\r\n                .catch(function(e){\r\n                    me.$vs.loading.close();\r\n                })\r\n\r\n            // me.$vs.loading();\r\n            // this.$http.get(this.$server_url + \"getasignaturasDocente?idusuario=\"+localStorage.user_seleccionado).then(function (response) {\r\n            //      me.seleccionadas = res.data;\r\n            //     localStorage.setItem('aSeleccionadas',JSON.stringify(me.area))\r\n            //     // console.log(me.area);\r\n            //     me.$vs.loading.close();\r\n            // })\r\n            // .catch(function(e){\r\n            //     me.$vs.loading.close();\r\n            //  });\r\n        },\r\n        getAreaSelect() {\r\n            let me = this;\r\n            me.$vs.loading();\r\n            this.$http.get(this.$server_url + \"areaSelect\").then(function (response) {\r\n                me.area = response.data.items;\r\n                localStorage.setItem('areasSeleccionadas',JSON.stringify(me.area))\r\n                // console.log(me.area);\r\n                me.$vs.loading.close();\r\n            });\r\n        },\r\n           agregaAsignacion(item) {\r\n            let me = this;\r\n            let data = new FormData();\r\n            data.append('usuario_idusuario', localStorage.user_seleccionado)\r\n            data.append('asignatura_idasignatura', item.id)\r\n            this.$http.post(this.$server_url + \"asignar_asignatura_docentes\", data)\r\n                .then(function (res) {\r\n                    // console.log(res.data);\r\n                    if (res.data > 0) {\r\n                        me.$vs.notify({\r\n                            time: 7000,\r\n                            text: 'Esta asignatura ya se encuentra asignada al docente',\r\n                            color: 'danger',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-alert-triangle'\r\n                        })\r\n                    } else {\r\n                        me.$vs.notify({\r\n                            text: 'Asignatura agregada',\r\n                            color: 'success',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-check'\r\n                        })\r\n                        me.getSeleccionadas();\r\n                    }\r\n                    me.$vs.loading.close();\r\n                });\r\n        },\r\n        eliminaAsignacion(item) {\r\n            let me = this;\r\n            // console.log(item)\r\n            me.$vs.loading();\r\n            this.$http.get(this.$server_url + \"eliminaAsignacion/\" + item.idasignado)\r\n                .then(function (res) {\r\n                    // console.log(res.data);\r\n                    me.$vs.notify({\r\n                        text: item.nombreasignatura + ' eliminada',\r\n                        color: 'success',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check'\r\n                    })\r\n                    me.getSeleccionadas();\r\n                    me.$vs.loading.close();\r\n                });\r\n        },\r\n\r\n        confirmaQuitar() {\r\n            let me = this;\r\n            me.confirmar = true\r\n            // me.$vs.dialog({\r\n            //     type: 'confirm',\r\n            //     color: 'danger',\r\n            //     title: 'Confirmar',\r\n            //     text: '¿Está seguro de eliminar este contenido?',\r\n            //     acceptText: 'Aceptar',\r\n            //     cancelText: 'Cancelar',\r\n            //     cancel:me.cancelar,\r\n            //     accept: me.f_quitarTodo\r\n            // })\r\n        },\r\n        cancelar(){\r\n            let me = this;\r\n            me.confirmar = false\r\n        },\r\n        f_quitarTodo() {\r\n            let me = this;\r\n            me.confirmar = false\r\n            let idSelects = [];\r\n            for (let index = 0; index < me.seleccionadas.length; index++) {\r\n                idSelects.push(me.seleccionadas[index].idasignado)\r\n            }\r\n            // console.log(idSelects)\r\n            me.$vs.loading();\r\n            let data = new FormData();\r\n            data.append('idasiguser', idSelects)\r\n            this.$http.post(this.$server_url + \"quitaTodasAsignaturas\", data)\r\n                .then(function (res) {\r\n                    // console.log(res.data);\r\n                     me.$vs.notify({\r\n                        text: 'Asignaturas quitadas correctamente.',\r\n                        color: 'success',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check'\r\n                    })\r\n                    me.getSeleccionadas();\r\n                    me.$vs.loading.close();\r\n                });\r\n        },\r\n\r\n    }\r\n}\r\n</script>\r\n"],"mappings":";AA2DA;EACAA,IAAA,WAAAA,KAAA;IACA,OAAAC,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA;MACAC,uBAAA;MACAC,aAAA;MACAC,iBAAA;MACAC,iBAAA;MACAC,WAAA;MACAC,UAAA;IAAA,oBACA,aACA,gBACA,kBACA,kBACA;EAEA;EACAC,KAAA;IACAC,aAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;IACAC,YAAA;MACAH,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;IACAE,kBAAA;MACAJ,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;EAGA;EACAG,OAAA,WAAAA,QAAA;IACA,IAAAC,EAAA;IACAA,EAAA,CAAAC,OAAA,GAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;IACAL,EAAA,CAAAM,gBAAA;IACAN,EAAA,CAAAO,aAAA;IACAP,EAAA,CAAAZ,iBAAA,GAAAY,EAAA,CAAAQ,KAAA;IACA;IACAR,EAAA,CAAAX,iBAAA,GAAAW,EAAA,CAAAZ,iBAAA,CAAAqB,SAAA;EAEA;EACAC,OAAA;IACAJ,gBAAA,WAAAA,iBAAA;MACA,IAAAN,EAAA;MACAA,EAAA,CAAAW,GAAA,CAAAC,OAAA;MACA,IAAA5B,IAAA,OAAA6B,QAAA;MACA7B,IAAA,CAAA8B,MAAA,cAAAV,YAAA,CAAAf,iBAAA;MACA,KAAA0B,KAAA,CAAAC,IAAA,MAAAC,WAAA,wBAAAjC,IAAA,EACAkC,IAAA,WAAAC,GAAA;QACA;QACAnB,EAAA,CAAAb,aAAA,GAAAgC,GAAA,CAAAnC,IAAA;QACAoB,YAAA,CAAAgB,OAAA,mBAAAlB,IAAA,CAAAmB,SAAA,CAAAF,GAAA,CAAAnC,IAAA;QACA;QACAgB,EAAA,CAAAW,GAAA,CAAAC,OAAA,CAAAU,KAAA;MACA,GACAC,KAAA,WAAAC,CAAA;QACAxB,EAAA,CAAAW,GAAA,CAAAC,OAAA,CAAAU,KAAA;MACA;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACA;IACAf,aAAA,WAAAA,cAAA;MACA,IAAAP,EAAA;MACAA,EAAA,CAAAW,GAAA,CAAAC,OAAA;MACA,KAAAG,KAAA,CAAAU,GAAA,MAAAR,WAAA,iBAAAC,IAAA,WAAAQ,QAAA;QACA1B,EAAA,CAAA2B,IAAA,GAAAD,QAAA,CAAA1C,IAAA,CAAA4C,KAAA;QACAxB,YAAA,CAAAgB,OAAA,uBAAAlB,IAAA,CAAAmB,SAAA,CAAArB,EAAA,CAAA2B,IAAA;QACA;QACA3B,EAAA,CAAAW,GAAA,CAAAC,OAAA,CAAAU,KAAA;MACA;IACA;IACAO,gBAAA,WAAAA,iBAAAC,IAAA;MACA,IAAA9B,EAAA;MACA,IAAAhB,IAAA,OAAA6B,QAAA;MACA7B,IAAA,CAAA8B,MAAA,sBAAAV,YAAA,CAAAf,iBAAA;MACAL,IAAA,CAAA8B,MAAA,4BAAAgB,IAAA,CAAAC,EAAA;MACA,KAAAhB,KAAA,CAAAC,IAAA,MAAAC,WAAA,kCAAAjC,IAAA,EACAkC,IAAA,WAAAC,GAAA;QACA;QACA,IAAAA,GAAA,CAAAnC,IAAA;UACAgB,EAAA,CAAAW,GAAA,CAAAqB,MAAA;YACAC,IAAA;YACAC,IAAA;YACAC,KAAA;YACAC,QAAA;YACAC,IAAA;UACA;QACA;UACArC,EAAA,CAAAW,GAAA,CAAAqB,MAAA;YACAE,IAAA;YACAC,KAAA;YACAC,QAAA;YACAC,IAAA;UACA;UACArC,EAAA,CAAAM,gBAAA;QACA;QACAN,EAAA,CAAAW,GAAA,CAAAC,OAAA,CAAAU,KAAA;MACA;IACA;IACAgB,iBAAA,WAAAA,kBAAAR,IAAA;MACA,IAAA9B,EAAA;MACA;MACAA,EAAA,CAAAW,GAAA,CAAAC,OAAA;MACA,KAAAG,KAAA,CAAAU,GAAA,MAAAR,WAAA,0BAAAa,IAAA,CAAAS,UAAA,EACArB,IAAA,WAAAC,GAAA;QACA;QACAnB,EAAA,CAAAW,GAAA,CAAAqB,MAAA;UACAE,IAAA,EAAAJ,IAAA,CAAAU,gBAAA;UACAL,KAAA;UACAC,QAAA;UACAC,IAAA;QACA;QACArC,EAAA,CAAAM,gBAAA;QACAN,EAAA,CAAAW,GAAA,CAAAC,OAAA,CAAAU,KAAA;MACA;IACA;IAEAmB,cAAA,WAAAA,eAAA;MACA,IAAAzC,EAAA;MACAA,EAAA,CAAA0C,SAAA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACA;IACAC,QAAA,WAAAA,SAAA;MACA,IAAA3C,EAAA;MACAA,EAAA,CAAA0C,SAAA;IACA;IACAE,YAAA,WAAAA,aAAA;MACA,IAAA5C,EAAA;MACAA,EAAA,CAAA0C,SAAA;MACA,IAAAG,SAAA;MACA,SAAAC,KAAA,MAAAA,KAAA,GAAA9C,EAAA,CAAAb,aAAA,CAAA4D,MAAA,EAAAD,KAAA;QACAD,SAAA,CAAAG,IAAA,CAAAhD,EAAA,CAAAb,aAAA,CAAA2D,KAAA,EAAAP,UAAA;MACA;MACA;MACAvC,EAAA,CAAAW,GAAA,CAAAC,OAAA;MACA,IAAA5B,IAAA,OAAA6B,QAAA;MACA7B,IAAA,CAAA8B,MAAA,eAAA+B,SAAA;MACA,KAAA9B,KAAA,CAAAC,IAAA,MAAAC,WAAA,4BAAAjC,IAAA,EACAkC,IAAA,WAAAC,GAAA;QACA;QACAnB,EAAA,CAAAW,GAAA,CAAAqB,MAAA;UACAE,IAAA;UACAC,KAAA;UACAC,QAAA;UACAC,IAAA;QACA;QACArC,EAAA,CAAAM,gBAAA;QACAN,EAAA,CAAAW,GAAA,CAAAC,OAAA,CAAAU,KAAA;MACA;IACA;EAEA;AACA","ignoreList":[]}]}