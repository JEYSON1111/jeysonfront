{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\evaluaciones\\PreguntasInstituciones\\TranspasarPreguntas.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\evaluaciones\\PreguntasInstituciones\\TranspasarPreguntas.vue","mtime":1712682815866},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\babel.config.js","mtime":1712682813877},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\.babelrc","mtime":1712682813750},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import vSelect from 'vue-select';\nvar TablaPreguntasVue = function TablaPreguntasVue() {\n  return import(\"./TablaPreguntas.vue\");\n};\nexport default {\n  components: {\n    TablaPreguntasVue: TablaPreguntasVue,\n    'v-select': vSelect\n  },\n  data: function data() {\n    return {\n      institucion1Select: '',\n      institucion2Select: '',\n      countPreguntas: 0,\n      arrayPreguntas: [],\n      usuario: [],\n      preguntasYaIngresadas: [],\n      preguntasIngresadas: 0,\n      popopMostrarResultados: false\n    };\n  },\n  created: function created() {\n    var me = this;\n    me.usuario = JSON.parse(localStorage.getItem(\"usuario\"));\n  },\n  props: {\n    arrayInstituciones: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    }\n  },\n  methods: {\n    contarPreguntas: function contarPreguntas() {\n      var me = this;\n      me.countPreguntas = 0;\n      if (me.institucion1Select == '' || me.institucion1Select == undefined || me.institucion1Select == null) {\n        me.$vs.notify({\n          title: 'Aviso',\n          text: 'Debe seleccionar la instituci贸n de origen',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-alert-circle'\n        });\n        return;\n      }\n      me.$vs.loading();\n      me.$http.get(me.$server_url + 'getCountQuestions?idinstitucion=' + me.institucion1Select.idinstitucion).then(function (res) {\n        me.countPreguntas = res.data.length;\n        me.arrayPreguntas = res.data;\n        me.$vs.loading.close();\n      }).catch(function (err) {\n        me.$vs.loading.close();\n        me.$vs.notify({\n          title: 'Error',\n          text: 'Error al obtener preguntas',\n          color: 'danger',\n          iconPack: 'feather',\n          icon: 'icon-alert-circle'\n        });\n      });\n    },\n    openConfirm: function openConfirm() {\n      var me = this;\n      if (me.institucion1Select == '' || me.institucion1Select == undefined || me.institucion1Select == null) {\n        me.$vs.notify({\n          title: 'Aviso',\n          text: 'Debe seleccionar la instituci贸n de origen',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-alert-circle'\n        });\n        return;\n      }\n      if (me.institucion2Select == '' || me.institucion2Select == undefined || me.institucion2Select == null) {\n        me.$vs.notify({\n          title: 'Aviso',\n          text: 'Debe seleccionar la instituci贸n de destino',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-alert-circle'\n        });\n        return;\n      }\n      //si ambas son iguales\n      if (me.institucion1Select == me.institucion2Select) {\n        me.$vs.notify({\n          title: 'Error',\n          text: 'Debe seleccionar instituciones diferentes',\n          color: 'danger',\n          iconPack: 'feather',\n          icon: 'icon-alert-circle'\n        });\n        return;\n      }\n      me.$vs.dialog({\n        title: 'Confirmaci贸n',\n        text: \"\\xBFDesea copiar las \".concat(me.countPreguntas, \" preguntas de la instituci\\xF3n \").concat(me.institucion1Select.nombreinstitucion, \" a la instituci\\xF3n \").concat(me.institucion2Select.nombreinstitucion, \"?\"),\n        acceptText: 'Aceptar',\n        acceptColor: 'rgb(11, 189, 135)',\n        acceptButtonAlign: 'center',\n        // Center align the accept button\n        accept: this.asignarPreguntas\n      });\n    },\n    asignarPreguntas: function asignarPreguntas() {\n      var me = this;\n      // me.arrayNoIngresadas = []\n      me.preguntasYaIngresadas = [];\n      me.preguntasIngresadas = 0;\n      me.$vs.loading();\n      var formData = new FormData();\n      formData.append('institucion_id', me.institucion2Select.idinstitucion);\n      formData.append('user_created', me.usuario.idusuario);\n      formData.append('arrayPreguntas', JSON.stringify(me.arrayPreguntas));\n      this.$http.post(this.$server_url + 'asignar_preguntas_institucion', formData).then(function (res) {\n        me.$vs.loading.close();\n        //si no se asignaron preguntas\n        if (res.data.preguntasIngresadas == 0) {\n          me.$vs.notify({\n            title: 'Error',\n            text: 'Preguntas ya asignadas con anterioridad',\n            iconPack: 'feather',\n            icon: 'icon-alert-circle',\n            color: 'danger'\n          });\n        } else {\n          //si se asignaron preguntas\n          me.$vs.notify({\n            title: 'Exito',\n            text: \"\".concat(res.data.preguntasIngresadas, \" Preguntas  asignadas correctamente\"),\n            iconPack: 'feather',\n            icon: 'icon-check',\n            color: 'success',\n            time: 8000\n          });\n        }\n        me.preguntasYaIngresadas = res.data.preguntasYaIngresadas;\n        me.preguntasIngresadas = res.data.preguntasIngresadas;\n        me.popopMostrarResultados = true;\n      }).catch(function (error) {\n        console.log(error);\n        me.$vs.loading.close();\n        me.$vs.notify({\n          title: 'Error',\n          text: 'Error al asignar las preguntas',\n          iconPack: 'feather',\n          icon: 'icon-alert-circle',\n          color: 'danger'\n        });\n      });\n    }\n  }\n};",{"version":3,"names":["vSelect","TablaPreguntasVue","components","data","institucion1Select","institucion2Select","countPreguntas","arrayPreguntas","usuario","preguntasYaIngresadas","preguntasIngresadas","popopMostrarResultados","created","me","JSON","parse","localStorage","getItem","props","arrayInstituciones","type","Array","default","_default","methods","contarPreguntas","undefined","$vs","notify","title","text","color","iconPack","icon","loading","$http","get","$server_url","idinstitucion","then","res","length","close","catch","err","openConfirm","dialog","concat","nombreinstitucion","acceptText","acceptColor","acceptButtonAlign","accept","asignarPreguntas","formData","FormData","append","idusuario","stringify","post","time","error","console","log"],"sources":["src/views/evaluaciones/PreguntasInstituciones/TranspasarPreguntas.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <vx-card title=\"Copiar Preguntas:\" title-color=\"#6728CE\" subtitle=\"Seleccione 2 instituciones\">\r\n      <!-- Your HTML code here -->\r\n      <div>\r\n        <div class=\"vx-row\">\r\n          <div class=\"vx-col w-full sm:w-1/2 md:w-1/2 lg:w-1/2 xl:w-1/2 mb-6\">\r\n            <small>Copiar Desde:</small>\r\n            <v-select :options=\"arrayInstituciones\" @input=\"contarPreguntas()\" :reduce=\"arrayInstituciones => arrayInstituciones\" label=\"nombreinstitucion\" class=\"w-full\" v-model=\"institucion1Select\" />\r\n            </div>\r\n          <div class=\"vx-col w-full sm:w-1/2 md:w-1/2 lg:w-1/1 xl:w-1/2 mb-6\">\r\n            <small>Copiar a:</small>\r\n            <div class=\"flex\">\r\n              <v-select :options=\"arrayInstituciones\"  :reduce=\"arrayInstituciones => arrayInstituciones\" label=\"nombreinstitucion\" class=\"w-full\" v-model=\"institucion2Select\" />\r\n              <vs-button icon=\"edit\" class=\"ml-1\" @click=\"openConfirm();\">Copiar</vs-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div v-if=\"countPreguntas > 0\">\r\n          <vs-alert color=\"success\" title=\"Preguntas a ser copiadas\" active=\"true\">\r\n              <p class=\"text-center\">(?)<b> {{ countPreguntas }}</b> Preguntas encontradas</p>\r\n          </vs-alert>\r\n        </div>\r\n        <br><br><br><br><br><br>\r\n       </div>\r\n    </vx-card>\r\n    <!--modales-->\r\n    <vs-popup title=\"Resultado de la copia\" :active.sync=\"popopMostrarResultados\">\r\n      <div v-if=\"popopMostrarResultados\">\r\n        <vs-list>\r\n          <vs-list-header title=\"Resultados\"></vs-list-header>\r\n          <vs-list-item title=\"Preguntas Ingresadas\">\r\n            <p>{{ preguntasIngresadas }}</p>\r\n          </vs-list-item>\r\n          <vs-list-item title=\"Preguntas que ya existen\">\r\n            <p>{{ preguntasYaIngresadas.length }}</p>\r\n          </vs-list-item>\r\n        </vs-list>\r\n        <!--boton de aceptar-->\r\n        <div class=\"flex justify-center\">\r\n          <vs-button color=\"rgb(11, 189, 135)\" @click=\"popopMostrarResultados = false;\" type=\"border\" icon=\"check\">Aceptar</vs-button>\r\n        </div>\r\n      </div>\r\n    </vs-popup>\r\n  </div>\r\n</template>\r\n<script>\r\nimport vSelect from 'vue-select'\r\nconst TablaPreguntasVue = () => import('./TablaPreguntas.vue')\r\nexport default {\r\n  components: {\r\n    TablaPreguntasVue,\r\n    'v-select': vSelect,\r\n  },\r\n  data() {\r\n    return{\r\n      institucion1Select: '',\r\n      institucion2Select: '',\r\n      countPreguntas: 0,\r\n      arrayPreguntas: [],\r\n      usuario:[],\r\n      preguntasYaIngresadas: [],\r\n      preguntasIngresadas: 0,\r\n      popopMostrarResultados: false\r\n    }\r\n  },\r\n  created(){\r\n    let me = this\r\n    me.usuario = JSON.parse(localStorage.getItem(\"usuario\"))\r\n  },\r\n  props:{\r\n    arrayInstituciones: {\r\n      type: Array,\r\n      default: () => [],\r\n    },\r\n  },\r\n  methods: {\r\n    contarPreguntas(){\r\n      let me = this\r\n      me.countPreguntas = 0\r\n      if(me.institucion1Select == '' || me.institucion1Select == undefined || me.institucion1Select == null){\r\n        me.$vs.notify({\r\n          title: 'Aviso',\r\n          text: 'Debe seleccionar la instituci贸n de origen',\r\n          color: 'warning',\r\n          iconPack: 'feather',\r\n          icon: 'icon-alert-circle'\r\n        })\r\n        return\r\n      }\r\n      me.$vs.loading()\r\n      me.$http.get(me.$server_url + 'getCountQuestions?idinstitucion='+me.institucion1Select.idinstitucion)\r\n      .then(res => {\r\n        me.countPreguntas = res.data.length\r\n        me.arrayPreguntas = res.data\r\n        me.$vs.loading.close()\r\n      })\r\n      .catch(err => {\r\n        me.$vs.loading.close()\r\n        me.$vs.notify({\r\n          title: 'Error',\r\n          text: 'Error al obtener preguntas',\r\n          color: 'danger',\r\n          iconPack: 'feather',\r\n          icon: 'icon-alert-circle'\r\n        })\r\n      })\r\n    },\r\n    openConfirm(){\r\n      let me = this\r\n      if(me.institucion1Select == '' || me.institucion1Select == undefined || me.institucion1Select == null){\r\n        me.$vs.notify({\r\n          title: 'Aviso',\r\n          text: 'Debe seleccionar la instituci贸n de origen',\r\n          color: 'warning',\r\n          iconPack: 'feather',\r\n          icon: 'icon-alert-circle'\r\n        })\r\n        return\r\n      }\r\n\r\n      if(me.institucion2Select == '' || me.institucion2Select == undefined || me.institucion2Select == null){\r\n        me.$vs.notify({\r\n          title: 'Aviso',\r\n          text: 'Debe seleccionar la instituci贸n de destino',\r\n          color: 'warning',\r\n          iconPack: 'feather',\r\n          icon: 'icon-alert-circle'\r\n        })\r\n        return\r\n      }\r\n      //si ambas son iguales\r\n      if(me.institucion1Select == me.institucion2Select){\r\n        me.$vs.notify({\r\n          title: 'Error',\r\n          text: 'Debe seleccionar instituciones diferentes',\r\n          color: 'danger',\r\n          iconPack: 'feather',\r\n          icon: 'icon-alert-circle'\r\n        })\r\n        return;\r\n      }\r\n      me.$vs.dialog({\r\n        title: 'Confirmaci贸n',\r\n        text: `驴Desea copiar las ${me.countPreguntas} preguntas de la instituci贸n ${me.institucion1Select.nombreinstitucion} a la instituci贸n ${me.institucion2Select.nombreinstitucion}?`,\r\n        acceptText: 'Aceptar',\r\n        acceptColor: 'rgb(11, 189, 135)',\r\n        acceptButtonAlign: 'center', // Center align the accept button\r\n        accept:this.asignarPreguntas\r\n      })\r\n    },\r\n    asignarPreguntas(){\r\n      let me = this;\r\n      // me.arrayNoIngresadas = []\r\n      me.preguntasYaIngresadas     = []\r\n      me.preguntasIngresadas       = 0\r\n      me.$vs.loading()\r\n      const formData = new FormData();\r\n      formData.append('institucion_id', me.institucion2Select.idinstitucion);\r\n      formData.append('user_created',   me.usuario.idusuario);\r\n      formData.append('arrayPreguntas', JSON.stringify(me.arrayPreguntas));\r\n      this.$http.post(this.$server_url + 'asignar_preguntas_institucion', formData)\r\n      .then(res => {\r\n        me.$vs.loading.close()\r\n        //si no se asignaron preguntas\r\n        if(res.data.preguntasIngresadas == 0){\r\n          me.$vs.notify({\r\n            title: 'Error',\r\n            text: 'Preguntas ya asignadas con anterioridad',\r\n            iconPack: 'feather',\r\n            icon: 'icon-alert-circle',\r\n            color: 'danger'\r\n          })\r\n        }else{\r\n          //si se asignaron preguntas\r\n          me.$vs.notify({\r\n            title: 'Exito',\r\n            text: `${ res.data.preguntasIngresadas } Preguntas  asignadas correctamente`,\r\n            iconPack: 'feather',\r\n            icon: 'icon-check',\r\n            color: 'success',\r\n            time:8000\r\n          })\r\n        }\r\n        me.preguntasYaIngresadas = res.data.preguntasYaIngresadas\r\n        me.preguntasIngresadas   = res.data.preguntasIngresadas\r\n        me.popopMostrarResultados = true\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n        me.$vs.loading.close()\r\n        me.$vs.notify({\r\n          title: 'Error',\r\n          text: 'Error al asignar las preguntas',\r\n          iconPack: 'feather',\r\n          icon: 'icon-alert-circle',\r\n          color: 'danger'\r\n        })\r\n      })\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n"],"mappings":"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","ignoreList":[]}]}