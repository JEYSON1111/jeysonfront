{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\admin\\reporteria\\components\\reporteAgendaGeneral.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\admin\\reporteria\\components\\reporteAgendaGeneral.vue","mtime":1712682815461},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\babel.config.js","mtime":1712682813877},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\.babelrc","mtime":1712682813750},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import moment from 'moment';\nimport flatPickr from 'vue-flatpickr-component';\nimport 'flatpickr/dist/flatpickr.css';\nexport default {\n  data: function data() {\n    return {\n      fromDate: null,\n      toDate: null,\n      configdateTimePicker: {\n        enableTime: true,\n        dateFormat: 'Y-m-d',\n        minDate: \"2022-01-05\",\n        maxDate: new Date().fp_incr(1)\n      },\n      visitasAgenda: [],\n      //VARIABLES PARA EXPORTAR A EXCEL\n      codigoSelected: [],\n      formats: ['xls', 'xlsx', 'csv', 'txt'],\n      fileName: null,\n      selectedFormat: 'xls',\n      cellAutoWidth: true,\n      activePrompt: false\n      //FIN VARIABLES PARA EXPORTAR A EXCEL\n    };\n  },\n  mounted: function mounted() {\n    var me = this;\n    me.configdateTimePicker.minDate = moment().subtract(30, 'd').format('YYYY-MM-DD');\n\n    //obtener la fecha incio semana y fecha fin semana\n    var currentdate = new Date();\n    var oneJan = new Date(currentdate.getFullYear(), 0, 1);\n    var numberOfDays = Math.floor((currentdate - oneJan) / (24 * 60 * 60 * 1000));\n    var result = Math.ceil((currentdate.getDay() + 1 + numberOfDays) / 7);\n    var preFechainicioSemana = moment().isoWeek(result - 1).startOf(\"isoweek\");\n    var preFechaFinSemana = moment().isoWeek(result - 1).endOf(\"isoweek\");\n    //convertir a fecha\n    var convertirFrom = moment(preFechainicioSemana, 'DD/MM/YYYY HH:mm:ss').format('YYYY-MM-DD');\n    var convertirtoDate = moment(preFechaFinSemana, 'DD/MM/YYYY HH:mm:ss').format('YYYY-MM-DD');\n    me.fromDate = convertirFrom;\n    me.toDate = convertirtoDate;\n    me.getReporteAgenda();\n  },\n  components: {\n    flatPickr: flatPickr\n  },\n  methods: {\n    getReporteAgenda: function getReporteAgenda() {\n      var me = this;\n      me.visitasAgenda = [];\n      me.$vs.loading();\n      this.$http.get(this.$server_url + 'ReporteVisitaAsesores?fromDate=' + me.fromDate + '&toDate=' + me.toDate).then(function (res) {\n        me.visitasAgenda = res.data;\n        me.$vs.loading.close();\n      }).catch(function (error) {\n        console.log(error + ' error');\n        me.$vs.loading.close();\n      });\n    },\n    //METODOS PARA EXPORTAR A EXCEL\n    exportToExcel: function exportToExcel() {\n      var _this = this;\n      var headerTitle = ['Asesor', 'Cantidad visitas'];\n      var headerVal = ['asesor', 'contador'];\n      import('@/vendor/Export2Excel').then(function (excel) {\n        var data = _this.formatJson(headerVal, _this.codigoSelected);\n        excel.export_json_to_excel({\n          header: headerTitle,\n          data: data,\n          filename: _this.fileName,\n          autoWidth: _this.cellAutoWidth,\n          bookType: _this.selectedFormat\n        });\n        _this.clearFields();\n        _this.guardarActivo = '';\n        _this.generarActivo = ' ';\n        _this.textAlertCant = '';\n        _this.cantidad = '';\n        _this.codigoSelected = [];\n      });\n    },\n    formatJson: function formatJson(filterVal, jsonData) {\n      return jsonData.map(function (v) {\n        return filterVal.map(function (j) {\n          return v[j];\n        });\n      });\n    },\n    //limpiar campos para exportar de nuevo\n    clearFields: function clearFields() {\n      this.fileName = '';\n      this.cellAutoWidth = true;\n      this.selectedFormat = 'xls';\n    } //FIN METODOS PARA EXPORTAR A EXCEL\n  }\n};",{"version":3,"names":["moment","flatPickr","data","fromDate","toDate","configdateTimePicker","enableTime","dateFormat","minDate","maxDate","Date","fp_incr","visitasAgenda","codigoSelected","formats","fileName","selectedFormat","cellAutoWidth","activePrompt","mounted","me","subtract","format","currentdate","oneJan","getFullYear","numberOfDays","Math","floor","result","ceil","getDay","preFechainicioSemana","isoWeek","startOf","preFechaFinSemana","endOf","convertirFrom","convertirtoDate","getReporteAgenda","components","methods","$vs","loading","$http","get","$server_url","then","res","close","catch","error","console","log","exportToExcel","_this","headerTitle","headerVal","excel","formatJson","export_json_to_excel","header","filename","autoWidth","bookType","clearFields","guardarActivo","generarActivo","textAlertCant","cantidad","filterVal","jsonData","map","v","j"],"sources":["src/views/admin/reporteria/components/reporteAgendaGeneral.vue"],"sourcesContent":["<template>\r\n    <vx-card\r\n        title=\"Reporte general de la agenda de los asesores\"\r\n        title-color=\"success\"\r\n        subtitle=\"Filtre por fechas para obtener el reporte.\">\r\n        <vs-row>\r\n            <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"3\" vs-lg=\"4\" vs-sm=\"6\" vs-xs=\"6\">\r\n                <p>Fecha inicio:</p>\r\n                <flat-pickr :config=\"configdateTimePicker\" v-model=\"fromDate\" placeholder=\"Fecha Inicio\" class=\"m-1\" style=\"display: inline-block;width: 100%;\" />\r\n            </vs-col>\r\n            <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"3\" vs-lg=\"4\" vs-sm=\"6\" vs-xs=\"6\">\r\n                <p>Fecha fin:</p>\r\n                <flat-pickr :config=\"configdateTimePicker\" v-model=\"toDate\" placeholder=\"Fecha Fin\" class=\"m-1\" style=\"display: inline-block;width: 100%\" />\r\n            </vs-col>\r\n            <vs-col vs-type=\"flex\" vs-justify=\"left\" vs-align=\"left\" vs-w=\"3\" vs-lg=\"3\" vs-sm=\"6\" vs-xs=\"6\">\r\n                <vs-button radius color=\"success\" @click=\"getReporteAgenda()\" style=\"margin-left:1px;\" type=\"gradient\" icon=\"search\"></vs-button>\r\n            </vs-col>\r\n        </vs-row>\r\n        <vs-table multiple v-model=\"codigoSelected\" pagination max-items=\"25\" search :data=\"visitasAgenda\">\r\n            <template slot=\"header\">\r\n                <vs-chip color=\"primary\" style=\"font-size:12px;\">\r\n                    Cantidad asesores: <span style=\"font-weight:bold;\"> {{visitasAgenda.length}}</span>\r\n                </vs-chip>\r\n                <vs-button color=\"warning\" size=\"small\" class=\"ml-2\" style=\"font-size: 14px;\" @click=\"activePrompt=true;\">Exportar</vs-button>\r\n            </template>\r\n            <template slot=\"thead\">\r\n                <vs-th sort-key=\"asesor\">Asesor</vs-th>\r\n                <vs-th sort-key=\"contador\">Cantidad visitas</vs-th>\r\n            </template>\r\n            <template slot-scope=\"{data}\">\r\n                <vs-tr :data=\"tr\" :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                    <vs-td :data=\"data[indextr].asesor\">\r\n                        {{ data[indextr].asesor  }}\r\n                    </vs-td>\r\n                    <vs-td :data=\"data[indextr].contador\">\r\n                        {{ data[indextr].contador }}\r\n                    </vs-td>\r\n                </vs-tr>\r\n            </template>\r\n        </vs-table>\r\n          <!--modal exportar-->\r\n          <vs-prompt title=\"Exportar a Excel\" class=\"export-options\" @cancle=\"clearFields\" @accept=\"exportToExcel\" accept-text=\"Exportar\" @close=\"clearFields\" :active.sync=\"activePrompt\">\r\n            <vs-alert class=\"mb-3\" color=\"danger\" icon-pack=\"feather\" icon=\"icon-info\">\r\n                <span>Recuerde <b>seleccionar</b> los registros que desea exportar.</span>\r\n            </vs-alert>\r\n            <vs-input v-model=\"fileName\" placeholder=\"Ingrese el nombre del archivo\" class=\"w-full\" />\r\n            <v-select v-model=\"selectedFormat\" :options=\"formats\" class=\"my-4\" />\r\n            <div class=\"flex\">\r\n                <!--<span class=\"mr-4\">Cell Auto Width:</span>\r\n                <vs-switch v-model=\"cellAutoWidth\">Cell Auto Width</vs-switch>-->\r\n            </div>\r\n        </vs-prompt>\r\n    </vx-card>\r\n</template>\r\n<script>\r\nimport moment from 'moment'\r\nimport flatPickr from 'vue-flatpickr-component'\r\nimport 'flatpickr/dist/flatpickr.css'\r\nexport default {\r\n    data() {\r\n       return{\r\n        fromDate: null,\r\n        toDate: null,\r\n        configdateTimePicker: {\r\n            enableTime: true,\r\n            dateFormat: 'Y-m-d',\r\n            minDate: \"2022-01-05\",\r\n            maxDate: new Date().fp_incr(1)\r\n        },\r\n        visitasAgenda:[],\r\n        //VARIABLES PARA EXPORTAR A EXCEL\r\n        codigoSelected: [],\r\n        formats: ['xls', 'xlsx', 'csv', 'txt'],\r\n        fileName:null,\r\n        selectedFormat: 'xls',\r\n        cellAutoWidth: true,\r\n        activePrompt: false,\r\n        //FIN VARIABLES PARA EXPORTAR A EXCEL\r\n       } \r\n    },\r\n    mounted(){\r\n        let me = this;\r\n        me.configdateTimePicker.minDate = moment().subtract(30, 'd').format('YYYY-MM-DD');\r\n\r\n        //obtener la fecha incio semana y fecha fin semana\r\n        let currentdate = new Date();\r\n        var oneJan = new Date(currentdate.getFullYear(),0,1);\r\n        var numberOfDays = Math.floor((currentdate - oneJan) / (24 * 60 * 60 * 1000));\r\n        var result = Math.ceil(( currentdate.getDay() + 1 + numberOfDays) / 7);\r\n        let preFechainicioSemana = moment().isoWeek(result - 1).startOf(\"isoweek\");\r\n        let preFechaFinSemana = moment().isoWeek(result - 1).endOf(\"isoweek\");\r\n        //convertir a fecha\r\n        let convertirFrom = moment(preFechainicioSemana, 'DD/MM/YYYY HH:mm:ss').format(\r\n        'YYYY-MM-DD'\r\n        );\r\n        let convertirtoDate = moment(preFechaFinSemana, 'DD/MM/YYYY HH:mm:ss').format(\r\n        'YYYY-MM-DD'\r\n        );\r\n        me.fromDate = convertirFrom\r\n        me.toDate = convertirtoDate\r\n        me.getReporteAgenda();\r\n    },\r\n    components:{\r\n        flatPickr,\r\n    },\r\n    methods:{\r\n        getReporteAgenda(){\r\n            let me = this;\r\n            me.visitasAgenda = []\r\n            me.$vs.loading();\r\n            this.$http.get(this.$server_url+'ReporteVisitaAsesores?fromDate='+me.fromDate+'&toDate='+me.toDate)\r\n                .then(function (res) {\r\n                    me.visitasAgenda = res.data\r\n                    me.$vs.loading.close()\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                    me.$vs.loading.close()\r\n                })\r\n        },\r\n          //METODOS PARA EXPORTAR A EXCEL\r\n          exportToExcel() {\r\n            let headerTitle = [ 'Asesor','Cantidad visitas'];\r\n            let headerVal = [ 'asesor','contador'];\r\n            import('@/vendor/Export2Excel').then(excel => {\r\n                const data = this.formatJson(headerVal, this.codigoSelected)\r\n                excel.export_json_to_excel({\r\n                    header: headerTitle,\r\n                    data,\r\n                    filename: this.fileName,\r\n                    autoWidth: this.cellAutoWidth,\r\n                    bookType: this.selectedFormat\r\n                })\r\n                this.clearFields()\r\n                this.guardarActivo = '';\r\n                this.generarActivo = ' ';\r\n                this.textAlertCant = '';\r\n                this.cantidad = '';\r\n                this.codigoSelected = [];\r\n            })\r\n        },\r\n\r\n        formatJson(filterVal, jsonData) {\r\n            return jsonData.map(v => filterVal.map(j => {\r\n                return v[j]\r\n            }))\r\n        },\r\n            //limpiar campos para exportar de nuevo\r\n        clearFields() {\r\n            this.fileName = ''\r\n            this.cellAutoWidth = true\r\n            this.selectedFormat = 'xls'\r\n        },\r\n        //FIN METODOS PARA EXPORTAR A EXCEL\r\n    },\r\n}\r\n</script>"],"mappings":"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","ignoreList":[]}]}