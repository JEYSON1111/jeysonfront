{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\evaluaciones\\RespuestasComponent.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\evaluaciones\\RespuestasComponent.vue","mtime":1712682815869},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\babel.config.js","mtime":1712682813877},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\.babelrc","mtime":1712682813750},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.split\";\nimport flatPickr from 'vue-flatpickr-component';\nimport 'flatpickr/dist/flatpickr.css';\nimport Vue from 'vue';\nimport axios from 'axios';\nimport vSelect from 'vue-select';\nimport moment from 'moment';\nimport $ from 'jquery';\nimport VueRouter from 'vue-router';\nvar respondidas = [];\nvar x = null;\nexport default {\n  data: function data() {\n    return {\n      preguntas: [],\n      pregunta: {\n        descripcion: '',\n        id_tema: '',\n        respuesta: '',\n        opcion1: '',\n        opcion2: '',\n        opcion3: '',\n        img_pregunta: '',\n        img_respuesta: '',\n        img_opcion1: '',\n        img_opcion2: '',\n        img_opcion3: ''\n      },\n      evaluaciones: [],\n      evaluacion: {\n        nombre: '',\n        asignatura: '',\n        descripcion: '',\n        fecha_inicio: '',\n        fecha_fin: '',\n        estado: '',\n        duracion: '',\n        nombre_evaluacion: ''\n      },\n      usuario: [],\n      estudiante: null,\n      nombre_estudiante: null,\n      apellido_estudiante: null,\n      opcionesSelec: [],\n      urlOrigen: '',\n      iniciarActivo: false,\n      currentx: 1,\n      volverActivo: false,\n      verbtniniciar: true,\n      calificacion: 0,\n      id_evalRevisar: '',\n      grupo_estudiante: '',\n      preguntas_escritas: [],\n      tipo_preguntas_escritas: [],\n      respuestasAcum: [],\n      contadorIntentosgrupo: 0,\n      vectorLink: [],\n      popupInformacion: false\n    };\n  },\n  components: {\n    'v-select': vSelect,\n    flatPickr: flatPickr\n  },\n  created: function created() {\n    var _this = this;\n    this.$vs.loading();\n    this.vectorLink = this.$route.params.id.split('-');\n    this.id_evalRevisar = this.vectorLink[0]; //localStorage.getItem(\"id_evalRevisar\");\n    this.grupo_estudiante = localStorage.getItem(\"grupo_estudiante\");\n    var url = location.pathname.split('/');\n    var urlBack = window.location.href;\n    var urlV = urlBack.split('/');\n    this.urlOrigen = urlV[0] + '/' + urlV[1] + '/' + urlV[2] + '/estudiante/evaluaciones';\n    this.usuario = JSON.parse(localStorage.getItem('usuario'));\n    if (this.usuario) {\n      this.verificarCurso();\n      this.estudiante = this.usuario.idusuario;\n      this.nombre_estudiante = this.usuario.nombres;\n      this.apellido_estudiante = this.usuario.apellidos;\n      localStorage.evaluacionxLink = '';\n    } else {\n      localStorage.evaluacionxLink = this.$route.params.id;\n      //alert('Antes de rendir esta evaluación debes iniciar sesion. Si aún no te has registrado puedes hacerlo en este momento.')\n      window.location.href = urlV[0] + '/' + urlV[1] + '/' + urlV[2];\n    }\n    this.$http.get(this.$server_url + 'evaluacionEstudiante/' + this.id_evalRevisar).then(function (res) {\n      if (res.data.length > 0) {\n        _this.evaluaciones = res.data;\n        _this.validarTiempo();\n        _this.preguntasEvaluacionGrupo();\n      } else {\n        alert('No existen preguntas para esta evaluación');\n        window.location.href = _this.urlOrigen;\n      }\n    });\n  },\n  methods: {\n    getEvaluacion: function getEvaluacion(item) {\n      var _this2 = this;\n      var formData = new FormData();\n      formData.append('estudiante', this.estudiante);\n      formData.append('evaluacion', item);\n      this.$http.post(this.$server_url + \"verifRespEvaluacion\", formData).then(function (res) {\n        _this2.$vs.loading.close();\n        if (res.data.length > 0) {\n          _this2.volverActivo = true;\n          _this2.verbtniniciar = false;\n        } else {\n          _this2.verbtniniciar = true;\n        }\n      });\n    },\n    validarTiempo: function validarTiempo() {\n      var _this3 = this;\n      if (this.evaluaciones[0].fecha_actual < this.evaluaciones[0].fecha_inicio) {\n        this.volver();\n      }\n      if (this.evaluaciones[0].fecha_actual > this.evaluaciones[0].fecha_fin) {\n        this.volver();\n      }\n      var dia_actual = this.evaluaciones[0].fecha_actual.split('-');\n      var dia_actual1 = dia_actual[2].split(' ');\n      var dia_actual_1 = dia_actual1[0];\n      var dia_fin = this.evaluaciones[0].fecha_fin.split('-');\n      var dia_fin1 = dia_fin[2].split(' ');\n      var dia_fin_1 = dia_fin1[0];\n      if (dia_actual_1 === dia_fin_1) {\n        var tiempo_fin1 = this.evaluaciones[0].fecha_fin.split(' ');\n        var tiempo_fin2 = tiempo_fin1[1].split(':');\n        var tiempo_actual1 = this.evaluaciones[0].fecha_actual.split(' ');\n        var tiempo_actual2 = tiempo_actual1[1].split(':');\n        var tiempo = (parseInt(tiempo_fin2[0] + '' + tiempo_fin2[1] + '' + tiempo_fin2[2]) - parseInt(tiempo_actual2[0] + '' + tiempo_actual2[1] + '' + tiempo_actual2[2])) * 600 - 10000; //600 compensar tiempo\n\n        if (tiempo < 0) {\n          alert('Esta evaluación ha finalizado.');\n          this.volver();\n        } else {\n          setInterval(function () {\n            alert('Esta evaluación ha finalizado.');\n            _this3.calificarValidado();\n          }, tiempo);\n        }\n      }\n    },\n    iniciar: function iniciar() {\n      this.f_tiempo(this.evaluaciones[0].duracion);\n      for (var j = 1; j <= this.preguntas.items.length; j++) {\n        document.getElementById(\"contenPreg\" + j).style.display = \"none\";\n      }\n      this.verbtniniciar = false;\n      ///muestra la primera pregunta\n      document.getElementById(\"contenPreg1\").style.display = \"block\";\n      function marcarBoton(index) {\n        $('#botonRespuesta' + index).addClass('marcarBotonResp');\n      }\n\n      ///mostrar preguntas metodo 2\n      var cantOpciones;\n      for (var i = 0; i < this.preguntas.items.length; i++) {\n        cantOpciones = this.preguntas.items[i].opciones.length;\n        if (cantOpciones === 0) {\n          cantOpciones = 1;\n        }\n        for (var j = 0; j < cantOpciones; j++) {\n          switch (parseInt(this.preguntas.items[i].id_tipo_pregunta)) {\n            case 1:\n              try {\n                $(\"#contenOpciones\" + (i + 1)).append(\"\\n                                <input type=\\\"checkbox\\\" onclick=\\\"document.getElementById('botonRespuesta\" + i + \"').style.background='#046AE7'; document.getElementById('botonRespuesta\" + i + \"').style.color='white'\\\" id=\\\"\".concat(this.preguntas.items[i].opciones[j].id_opcion_pregunta, \"\\\" class=\\\"\").concat(this.preguntas.items[i].id, \" estiloInput\\\" name=\\\"\").concat(this.preguntas.items[i].id, \"\\\" value=\\\"\").concat(this.preguntas.items[i].opciones[j].id_opcion_pregunta, \"\\\">\\n                                <label for=\\\"\").concat(this.preguntas.items[i].opciones[j].id_opcion_pregunta, \"\\\"> \").concat(this.preguntas.items[i].opciones[j].opcion, \"</label><br>\\n                            \"));\n                if (this.preguntas.items[i].opciones[j].img_opcion === '' || this.preguntas.items[i].opciones[j].img_opcion === 'null' || this.preguntas.items[i].opciones[j].img_opcion === null) {} else {\n                  $(\"#contenOpciones\" + (i + 1)).append(\"\\n                                    <label for=\\\"\".concat(this.preguntas.items[i].opciones[j].id_opcion_pregunta, \"\\\">\\n                                    <img style=\\\"border-radius: 5px; cursor: pointer;\\\" for=\\\"\").concat(this.preguntas.items[i].opciones[j].id_opcion_pregunta, \"\\\" src=\\\"\").concat(this.$data_url, \"archivos/img/img_preguntas/\").concat(this.preguntas.items[i].opciones[j].img_opcion, \"\\\" class=\\\"img-responsive mt-2 altura\\\" min-width=\\\"350px\\\" width=\\\"450px\\\">\\n                                    </label><br>\\n                                \"));\n                }\n              } catch (error) {}\n              break;\n            case 3:\n              try {\n                $(\"#contenOpciones\" + (i + 1)).append(\"\\n                                <input type=\\\"radio\\\" onclick=\\\"document.getElementById('botonRespuesta\" + i + \"').style.background='#046AE7'; document.getElementById('botonRespuesta\" + i + \"').style.color='white'\\\" id=\\\"\".concat(this.preguntas.items[i].opciones[j].id_opcion_pregunta, \"\\\" class=\\\"\").concat(this.preguntas.items[i].id, \" estiloInput\\\" name=\\\"\").concat(this.preguntas.items[i].id, \"\\\" value=\\\"\").concat(this.preguntas.items[i].opciones[j].id_opcion_pregunta, \"\\\">\\n                                <label for=\\\"\").concat(this.preguntas.items[i].opciones[j].id_opcion_pregunta, \"\\\"> \").concat(this.preguntas.items[i].opciones[j].opcion, \"</label><br>\\n                            \"));\n              } catch (error) {}\n              break;\n            case 5:\n              try {\n                $(\"#contenOpciones\" + (i + 1)).append(\"\\n                                <input type=\\\"radio\\\" onclick=\\\"document.getElementById('botonRespuesta\" + i + \"').style.background='#046AE7'; document.getElementById('botonRespuesta\" + i + \"').style.color='white'\\\" id=\\\"\".concat(this.preguntas.items[i].opciones[j].id_opcion_pregunta, \"\\\" class=\\\"\").concat(this.preguntas.items[i].id, \" estiloInput\\\" name=\\\"\").concat(this.preguntas.items[i].id, \"\\\" value=\\\"\").concat(this.preguntas.items[i].opciones[j].id_opcion_pregunta, \"\\\">\\n                                <label for=\\\"\").concat(this.preguntas.items[i].opciones[j].id_opcion_pregunta, \"\\\"> \").concat(this.preguntas.items[i].opciones[j].opcion, \"</label><br>\\n                            \"));\n                if (this.preguntas.items[i].opciones[j].img_opcion === '' || this.preguntas.items[i].opciones[j].img_opcion === 'null' || this.preguntas.items[i].opciones[j].img_opcion === null) {} else {\n                  $(\"#contenOpciones\" + (i + 1)).append(\"\\n                                    <label for=\\\"\".concat(this.preguntas.items[i].opciones[j].id_opcion_pregunta, \"\\\">\\n                                    <img style=\\\"border-radius: 5px; cursor: pointer;\\\" for=\\\"\").concat(this.preguntas.items[i].opciones[j].id_opcion_pregunta, \"\\\" src=\\\"\").concat(this.$data_url, \"archivos/img/img_preguntas/\").concat(this.preguntas.items[i].opciones[j].img_opcion, \"\\\" class=\\\"img-responsive mt-2 altura\\\" min-width=\\\"350px\\\" width=\\\"450px\\\">\\n                                    </label><br>\\n                                \"));\n                }\n              } catch (error) {}\n              break;\n            case 2:\n              try {\n                $(\"#contenOpciones\" + (i + 1)).append(\"\\n                                    <textarea oninput=\\\"document.getElementById('botonRespuesta\" + i + \"').style.background='#046AE7'; document.getElementById('botonRespuesta\" + i + \"').style.color='white'\\\" id=\\\"\".concat(this.preguntas.items[i].id, \"\\\" class=\\\"inputRespuesta\\\" rows=\\\"5\\\" placeholder=\\\"Escribe tu respuesta...\\\"></textarea>\\n                                \"));\n              } catch (error) {}\n              break;\n            case 6:\n              try {\n                $(\"#contenOpciones\" + (i + 1)).append(\"\\n                                    <textarea oninput=\\\"document.getElementById('botonRespuesta\" + i + \"').style.background='#046AE7'; document.getElementById('botonRespuesta\" + i + \"').style.color='white'\\\" id=\\\"\".concat(this.preguntas.items[i].id, \"\\\" class=\\\"inputRespuesta\\\" rows=\\\"5\\\" placeholder=\\\"Escribe tu respuesta...\\\"></textarea>\\n                                \"));\n              } catch (error) {}\n              break;\n            default:\n              break;\n          }\n        }\n      }\n    },\n    verPreguntaSelec: function verPreguntaSelec(index) {\n      for (var j = 1; j <= this.preguntas.items.length; j++) {\n        document.getElementById(\"contenPreg\" + j).style.display = \"none\";\n      }\n      document.getElementById(\"contenPreg\" + (index + 1)).style.display = \"block\";\n    },\n    openConfirm: function openConfirm() {\n      this.$vs.dialog({\n        type: 'confirm',\n        color: 'primary',\n        title: \"Confirmar\",\n        text: '¿Está seguro de finalizar la evaluación?',\n        accept: this.calificarValidado\n      });\n    },\n    calificarValidado: function calificarValidado() {\n      var pregsRecorrer = this.preguntas.items;\n      var opcionesSeleccionadas = [];\n      var opcionesSeleccionadasV = [];\n      var califPregFinal = 0;\n      for (var j = 0; j < pregsRecorrer.length; j++) {\n        var index = this.respuestasAcum.map(function (e) {\n          return e.id_pregunta;\n        }).indexOf(pregsRecorrer[j].id);\n        if (pregsRecorrer[j].id_tipo_pregunta === 1 || pregsRecorrer[j].id_tipo_pregunta === 3 || pregsRecorrer[j].id_tipo_pregunta === 5) {\n          if (pregsRecorrer[j].id_tipo_pregunta === 3 || pregsRecorrer[j].id_tipo_pregunta === 5) {\n            opcionesSeleccionadas = $('input:radio[name=' + pregsRecorrer[j].id + ']:checked').val();\n          } else {\n            $('.' + pregsRecorrer[j].id + ':checked').each(function () {\n              opcionesSeleccionadas += $(this).val() + ',';\n            });\n          }\n          try {\n            var tamselecV = 0;\n            opcionesSeleccionadasV = opcionesSeleccionadas.split(',');\n            if (opcionesSeleccionadasV === undefined) {\n              opcionesSeleccionadasV = '';\n              tamselecV = 1;\n            } else {\n              tamselecV = opcionesSeleccionadasV.length - 1;\n              if (opcionesSeleccionadasV.length - 1 <= 0) {\n                tamselecV = 1;\n              }\n            }\n            var opcionRespuesta = this.respuestasAcum[index].id_opcion_pregunta.split(',');\n            var califPreg = 0;\n            for (var i = 0; i < tamselecV; i++) {\n              for (var k = 0; k < opcionRespuesta.length; k++) {\n                if (opcionesSeleccionadasV[i] === opcionRespuesta[k]) {\n                  //alert(opcionesSeleccionadasV[i] +'==='+ opcionRespuesta[k]);\n                  califPreg++;\n                }\n              }\n            }\n            if (tamselecV > opcionRespuesta.length) {\n              califPreg = califPreg - (tamselecV - opcionRespuesta.length);\n            }\n            califPregFinal = (califPreg * this.respuestasAcum[index].puntaje_pregunta / opcionRespuesta.length).toFixed(2);\n\n            //alert(califPregFinal+'----califPreg: ' + califPreg+'----puntaje_pregunta: '+this.respuestasAcum[index].puntaje_pregunta+'----opcionRespuesta.length: '+opcionRespuesta.length);\n          } catch (error) {}\n        } else {\n          //calificar preguntas tipo 2 o 6\n          try {\n            opcionesSeleccionadasV = $('#' + pregsRecorrer[j].id).val().toLowerCase().replace(/,|\\.|\\(|\\)|!|\\?|¿|\\$|/g, '').split(' ');\n            var opcionRespuesta = this.respuestasAcum[index].opcion.split(',');\n            var califPreg = 0;\n            for (var i = 0; i < opcionesSeleccionadasV.length; i++) {\n              for (var k = 0; k < opcionRespuesta.length; k++) {\n                if (opcionesSeleccionadasV[i] === opcionRespuesta[k].toLowerCase().replace(/ /gi, '')) {\n                  //alert('**BIEN: '+( opcionesSeleccionadasV[i] +'==='+ (opcionRespuesta[k].toLowerCase()).replace(/ /g, '') ));\n                  califPreg++;\n                  break;\n                }\n              }\n            }\n            var cant_coincidencias = parseInt(this.respuestasAcum[index].cant_coincidencias);\n            if (cant_coincidencias <= 0) {\n              cant_coincidencias = 1;\n            }\n            var califPregEscr = (califPreg * this.respuestasAcum[index].puntaje_pregunta / parseInt(cant_coincidencias)).toFixed(2);\n            if (califPregEscr > this.respuestasAcum[index].puntaje_pregunta) {\n              califPregEscr = this.respuestasAcum[index].puntaje_pregunta;\n            }\n            califPregFinal = califPregEscr;\n\n            //alert(califPregFinal+'----califPreg ab: ' + califPregEscr+'----puntaje_pregunta: '+this.respuestasAcum[index].puntaje_pregunta);\n          } catch (error) {}\n        }\n        this.guardarRespuesta(this.id_evalRevisar, pregsRecorrer[j].id, this.usuario.idusuario, opcionesSeleccionadasV, califPregFinal);\n        this.calificacion += parseFloat(califPregFinal);\n        califPreg = 0;\n        califPregFinal = 0;\n        opcionesSeleccionadas = [];\n        opcionesSeleccionadasV = [];\n      }\n      this.enviarEvaluacion();\n    },\n    guardarRespuesta: function guardarRespuesta(evaluacion, pregunta, estudiante, respuestas, puntaje) {\n      var formData = new FormData();\n      formData.append('evaluacion', evaluacion);\n      formData.append('pregunta', pregunta);\n      formData.append('estudiante', estudiante);\n      formData.append('respuesta', respuestas);\n      formData.append('puntaje', puntaje);\n      this.$http.post(this.$server_url + 'guardarRespuesta', formData).then(function (res) {}).catch(function (error) {});\n    },\n    enviarEvaluacion: function enviarEvaluacion() {\n      var me = this;\n      var urlBack = window.location.href;\n      var urlV = urlBack.split('/');\n      me.$vs.loading();\n      var formData = new FormData();\n      formData.append('estudiante', me.estudiante);\n      formData.append('evaluacion', me.id_evalRevisar);\n      formData.append('calificacion', me.calificacion.toFixed(2));\n      formData.append('grupo', me.grupo_estudiante);\n      this.$http.post(this.$server_url + 'respEvaluacion', formData).then(function (res) {\n        me.$vs.loading.close();\n        localStorage.setItem('previsualizar_eval', 0);\n        window.location.href = urlV[0] + '/' + urlV[1] + '/' + urlV[2] + '/revisarevaluacion';\n      }).catch(function (error) {\n        //window.location.href = me.urlOrigen;\n      });\n    },\n    volver: function volver() {\n      window.location.href = this.urlOrigen;\n    },\n    f_tiempo: function f_tiempo(numero) {\n      var me = this;\n      var n = numero * 60;\n      x = setInterval(function () {\n        n--;\n        var now = n * 1000;\n        var distance = n + now;\n        var hours = Math.floor(distance % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n        var minutes = Math.floor(distance % (1000 * 60 * 60) / (1000 * 60));\n        var seconds = Math.floor(distance % (1000 * 60) / 1000);\n        $(\".reloj\").html(hours + \" : \" + minutes + \" : \" + seconds + \"\");\n        if (distance < 60000) {\n          $(\".reloj\").css('color', '#FB2452');\n        }\n        if (distance < 0) {\n          $(\".reloj\").html(\"Fin del tiempo\");\n          me.calificarValidado();\n        }\n      }, 1000);\n    },\n    preguntasEvaluacionGrupo: function preguntasEvaluacionGrupo() {\n      var _this4 = this;\n      var grupoRand = Math.floor(Math.random() * (parseInt(this.evaluaciones[0].grupos_evaluacion) + 1 - 1)) + 1;\n      localStorage.setItem('grupo_estudiante', grupoRand);\n      this.grupo_estudiante = grupoRand;\n      this.verRespuestasGrupo();\n      var formData = new FormData();\n      formData.append('grupo', this.grupo_estudiante);\n      formData.append('evaluacion', this.id_evalRevisar);\n      this.$http.post(this.$server_url + \"pregEvaluacionGrupo\", formData).then(function (res) {\n        if (res.data.length === 0) {\n          _this4.contadorIntentosgrupo++;\n          if (_this4.contadorIntentosgrupo < 2) {\n            grupoRand = Math.floor(Math.random() * (parseInt(_this4.evaluaciones[0].grupos_evaluacion) + 1 - 1)) + 1;\n            localStorage.setItem('grupo_estudiante', grupoRand);\n            _this4.grupo_estudiante = grupoRand;\n            _this4.preguntasEvaluacionGrupo();\n            _this4.verRespuestasGrupo();\n          } else {\n            alert('No existen preguntas para esta evaluación.');\n            window.location.href = _this4.urlOrigen;\n          }\n        } else {\n          _this4.preguntas = res.data;\n          for (var i = 0; i < _this4.preguntas.items.length; i++) {\n            if (_this4.preguntas.items[i].id_tipo_pregunta === 2 || _this4.preguntas.items[i].id_tipo_pregunta === 6) {\n              _this4.preguntas_escritas.push(_this4.preguntas.items[i].descripcion);\n              _this4.tipo_preguntas_escritas.push(_this4.preguntas.items[i].id_tipo_pregunta);\n            }\n          }\n          _this4.getEvaluacion(_this4.id_evalRevisar);\n        }\n      });\n    },\n    verRespuestasGrupo: function verRespuestasGrupo() {\n      var _this5 = this;\n      var formData = new FormData();\n      formData.append('grupo', this.grupo_estudiante);\n      formData.append('evaluacion', this.id_evalRevisar);\n      this.$http.post(this.$server_url + 'getRespuestasAcum', formData).then(function (res) {\n        _this5.respuestasAcum = res.data;\n      });\n    },\n    verificarCurso: function verificarCurso() {\n      var me = this;\n      var formData = new FormData();\n      formData.append(\"codigo\", me.vectorLink[1]);\n      formData.append(\"idusuario\", me.usuario.idusuario);\n      this.$http.post(this.$server_url + 'verificarCursoEstudiante', formData).then(function (res) {\n        if (res.data != '') {} else {\n          me.addClase();\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    addClase: function addClase() {\n      var me = this;\n      var formData = new FormData();\n      formData.append(\"codigo\", me.vectorLink[1]);\n      formData.append(\"idusuario\", me.usuario.idusuario);\n      this.$http.post(this.$server_url + 'addClase', formData).then(function (res) {}).catch(function (error) {\n        console.log(error);\n      });\n    }\n  }\n};",{"version":3,"names":["flatPickr","Vue","axios","vSelect","moment","$","VueRouter","respondidas","x","data","preguntas","pregunta","descripcion","id_tema","respuesta","opcion1","opcion2","opcion3","img_pregunta","img_respuesta","img_opcion1","img_opcion2","img_opcion3","evaluaciones","evaluacion","nombre","asignatura","fecha_inicio","fecha_fin","estado","duracion","nombre_evaluacion","usuario","estudiante","nombre_estudiante","apellido_estudiante","opcionesSelec","urlOrigen","iniciarActivo","currentx","volverActivo","verbtniniciar","calificacion","id_evalRevisar","grupo_estudiante","preguntas_escritas","tipo_preguntas_escritas","respuestasAcum","contadorIntentosgrupo","vectorLink","popupInformacion","components","created","_this","$vs","loading","$route","params","id","split","localStorage","getItem","url","location","pathname","urlBack","window","href","urlV","JSON","parse","verificarCurso","idusuario","nombres","apellidos","evaluacionxLink","$http","get","$server_url","then","res","length","validarTiempo","preguntasEvaluacionGrupo","alert","methods","getEvaluacion","item","_this2","formData","FormData","append","post","close","_this3","fecha_actual","volver","dia_actual","dia_actual1","dia_actual_1","dia_fin","dia_fin1","dia_fin_1","tiempo_fin1","tiempo_fin2","tiempo_actual1","tiempo_actual2","tiempo","parseInt","setInterval","calificarValidado","iniciar","f_tiempo","j","items","document","getElementById","style","display","marcarBoton","index","addClass","cantOpciones","i","opciones","id_tipo_pregunta","concat","id_opcion_pregunta","opcion","img_opcion","$data_url","error","verPreguntaSelec","openConfirm","dialog","type","color","title","text","accept","pregsRecorrer","opcionesSeleccionadas","opcionesSeleccionadasV","califPregFinal","map","e","id_pregunta","indexOf","val","each","tamselecV","undefined","opcionRespuesta","califPreg","k","puntaje_pregunta","toFixed","toLowerCase","replace","cant_coincidencias","califPregEscr","guardarRespuesta","parseFloat","enviarEvaluacion","respuestas","puntaje","catch","me","setItem","numero","n","now","distance","hours","Math","floor","minutes","seconds","html","css","_this4","grupoRand","random","grupos_evaluacion","verRespuestasGrupo","push","_this5","addClase","console","log"],"sources":["src/views/evaluaciones/RespuestasComponent.vue"],"sourcesContent":["<template>\r\n<div class=\"vx-row\" style=\"padding: 20px; font-size: 19px;\">\r\n    <div class=\"vx-col sm:w-3/4 w-full\">\r\n    <div v-if=\"evaluaciones[0]===undefined\">No existe evaluación</div>\r\n    <vx-card v-else v-bind:title=\"evaluaciones[0].nombreasignatura\" title-color=\"primary\">\r\n        {{usuario.nombres}} {{usuario.apellidos}} - {{usuario.cedula}}<br>\r\n        {{'Inicia: '+evaluaciones[0].fecha_inicio+' - Finaliza: '+ evaluaciones[0].fecha_fin}}\r\n        <div class=\"vx-row\">\r\n            <div v-if=\"evaluaciones[0].descripcion==='' || evaluaciones[0].descripcion === null || evaluaciones[0].descripcion === 'null'\"></div>\r\n            <div v-else class=\"vx-col w-full\" align=\"justify\">\r\n                {{evaluaciones[0].descripcion}}\r\n            </div>\r\n        </div>\r\n    </vx-card>\r\n\r\n    <!-------INICIO SECCION RESPONDER---------->\r\n    <vx-card class=\"mt-5 mb-6\">\r\n\r\n    <div align=\"center\" v-if=\"volverActivo===true\">\r\n        Esta evaluación ya fue completada.<br><br>\r\n        <vs-button color=\"success\" type=\"gradient\" @click=\"volver()\">Volver</vs-button>\r\n    </div>\r\n    <div v-if=\"verbtniniciar===true\" align=\"center\">\r\n        <div v-if=\"preguntas.items===undefined\">No existen preguntas para esta evaluación.</div>\r\n        <vs-button v-else type=\"gradient\" size=\"large\" style=\"padding: 0px; border-radius: 100%; width: 80px; height: 80px;\" @click=\"iniciar(0); iniciarActivo=true; verbtniniciar=false;\">Iniciar</vs-button>\r\n    </div>\r\n\r\n    <div class=\"text-center\">\r\n    <div cols=\"12\" v-for=\"(item, index) in preguntas.items\" :key=\"index\" v-bind:id=\"'contenPreg'+(index+1)\" style=\"display: none;\" class=\"mb-4\">\r\n        <div class=\"mb-5\" style=\"font-size: 19px;\" align=\"center\">\r\n            <div align=\"left\">\r\n                <b>{{ index+1 }}) <span class=\"pregAbierta\">{{item.descripcion}}</span></b>\r\n            </div>\r\n\r\n            <img style=\"border-radius: 5px;\" v-if=\"item.img_pregunta\" v-bind:src=\"$data_url+'archivos/img/img_preguntas/'+item.img_pregunta\" class=\"img-responsive mt-2 altura\" min-width=\"350px\" width=\"450px\">\r\n\r\n            <div align=\"left\" style=\"font-size: 17px; color: gray;\">{{item.indicaciones}}</div>\r\n        </div>\r\n\r\n        <div v-bind:id=\"'contenOpciones'+(index+1)\" align=\"left\" style=\"font-size: 19px;\" class=\"mb-5\"></div>\r\n    </div>\r\n\r\n    <!-- <vs-pagination color=\"success\" v-if=\"iniciarActivo===true\" :total=\"preguntas.items.length\" v-model=\"currentx\" @input=\"verPreguntaSelec(currentx-1)\"></vs-pagination> -->\r\n    </div>\r\n    </vx-card>\r\n    </div>\r\n\r\n\r\n    <!--<div class=\"vx-col sm:w-1/4 w-full\" style=\"position: fixed; top: 20px; right: 10px; z-index: 1;\">-->\r\n    <div class=\"vx-col sm:w-1/4 w-full\">\r\n    <vx-card>\r\n        <div align=\"center\">\r\n            <img src=\"https://plataforma.prolipadigital.com.ec/img/prolipa.a3e6ff1b.png\" style=\"max-width: 225px;\" class=\"mb-10\">\r\n\r\n        Tiempo para resolver esta evaluación:\r\n        <div v-if=\"iniciarActivo===false && evaluaciones[0]\" class=\"reloj mt-3\" style=\"font-size: 35px; color: #2974FE;\">{{evaluaciones[0].duracion}} minutos</div>\r\n        <div class=\"reloj mb-6 mt-4\" style=\"font-size: 40px; color: #2974FE;\"></div>\r\n        <div v-if=\"iniciarActivo===true\" class=\"mb-2\">\r\n            <vs-button color=\"dark\" type=\"gradient\" class=\"mb-6\" @click=\"openConfirm\">Finalizar evaluación</vs-button><br>\r\n\r\n            <vs-button v-if=\"usuario.id_group === 4\" color=\"success\" type=\"border\" class=\"mt-6\" @click=\"$router.push('/estudiante/evaluaciones')\"><b>← Volver</b></vs-button>\r\n\r\n            <vs-button v-else color=\"success\" type=\"border\" class=\"mt-6 m-1\" @click=\"$router.push('/evaluaciones')\"><b>← Volver</b></vs-button>\r\n\r\n            <vs-divider class=\"mt-4\"> Preguntas </vs-divider>\r\n\r\n            <div class=\"btn-group\">\r\n            <button v-for=\"(item, index) in preguntas.items\" :key=\"index\" @click=\"currentx=(index+1); verPreguntaSelec(index)\" class=\"botonPaginacion\" v-bind:id=\"'botonRespuesta'+index\" style=\"background-color: white; border-radius: 5px; border: 1px solid #046AE7; margin: 2px; color: #046AE7; font-size: 19px; cursor: pointer;\">\r\n                {{ index+1 }}\r\n            </button>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    </vx-card>\r\n    </div>\r\n\r\n</div>\r\n</template>\r\n<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\r\n<script>\r\nimport flatPickr from 'vue-flatpickr-component';\r\nimport 'flatpickr/dist/flatpickr.css';\r\nimport Vue from 'vue'\r\nimport axios from 'axios'\r\nimport vSelect from 'vue-select'\r\nimport moment from 'moment'\r\nimport $ from 'jquery'\r\nimport VueRouter from 'vue-router'\r\n    var respondidas = [];\r\n    var x = null;\r\n    export default {\r\n        data(){\r\n            return {\r\n                preguntas: [],\r\n                pregunta: {descripcion: '', id_tema: '', respuesta: '', opcion1: '', opcion2: '', opcion3: '', img_pregunta: '', img_respuesta: '', img_opcion1: '', img_opcion2: '', img_opcion3: ''},\r\n                evaluaciones: [],\r\n                evaluacion: {nombre: '', asignatura: '', descripcion: '', fecha_inicio: '', fecha_fin: '', estado: '', duracion: '', nombre_evaluacion: ''},\r\n                usuario: [],\r\n                estudiante: null,\r\n                nombre_estudiante: null,\r\n                apellido_estudiante: null,\r\n                opcionesSelec: [],\r\n                urlOrigen: '',\r\n                iniciarActivo: false,\r\n                currentx: 1,\r\n                volverActivo: false,\r\n                verbtniniciar: true,\r\n                calificacion: 0,\r\n                id_evalRevisar: '',\r\n                grupo_estudiante: '',\r\n                preguntas_escritas: [],\r\n                tipo_preguntas_escritas: [],\r\n                respuestasAcum: [],\r\n                contadorIntentosgrupo: 0,\r\n                vectorLink: [],\r\n                popupInformacion: false,\r\n            }\r\n        },\r\n        components: {\r\n            'v-select': vSelect,\r\n            flatPickr\r\n        },\r\n        created(){\r\n            this.$vs.loading()\r\n            this.vectorLink = (this.$route.params.id).split('-')\r\n            this.id_evalRevisar = this.vectorLink[0]//localStorage.getItem(\"id_evalRevisar\");\r\n            this.grupo_estudiante = localStorage.getItem(\"grupo_estudiante\");\r\n            var url = location.pathname.split('/');\r\n            var urlBack = window.location.href\r\n            var urlV = urlBack.split('/')\r\n            this.urlOrigen = urlV[0]+'/'+urlV[1]+'/'+urlV[2]+'/estudiante/evaluaciones'\r\n            this.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n\r\n            if( this.usuario ){\r\n                this.verificarCurso()\r\n                this.estudiante = this.usuario.idusuario\r\n                this.nombre_estudiante = this.usuario.nombres\r\n                this.apellido_estudiante = this.usuario.apellidos\r\n                localStorage.evaluacionxLink = ''\r\n            }else{\r\n                localStorage.evaluacionxLink = this.$route.params.id\r\n                //alert('Antes de rendir esta evaluación debes iniciar sesion. Si aún no te has registrado puedes hacerlo en este momento.')\r\n                window.location.href = urlV[0]+'/'+urlV[1]+'/'+urlV[2];\r\n            }\r\n\r\n            this.$http.get(this.$server_url+'evaluacionEstudiante/'+this.id_evalRevisar).then(res => {\r\n                if(res.data.length > 0){\r\n                    this.evaluaciones = res.data\r\n                    this.validarTiempo()\r\n                    this.preguntasEvaluacionGrupo()\r\n                }else{\r\n                    alert('No existen preguntas para esta evaluación');\r\n                    window.location.href = this.urlOrigen;\r\n                }\r\n            })\r\n        },\r\n        methods: {\r\n            getEvaluacion(item){\r\n                let formData = new FormData();\r\n                    formData.append('estudiante', this.estudiante);\r\n                    formData.append('evaluacion',  item);\r\n\r\n                this.$http.post(this.$server_url+`verifRespEvaluacion`, formData).then(res => {\r\n                    this.$vs.loading.close()\r\n                    if( res.data.length > 0 ){\r\n                        this.volverActivo = true;\r\n                        this.verbtniniciar = false;\r\n                    }else{\r\n                        this.verbtniniciar = true;\r\n                    }\r\n                })\r\n            },\r\n            validarTiempo(){\r\n                if( this.evaluaciones[0].fecha_actual < this.evaluaciones[0].fecha_inicio ){\r\n                    this.volver()\r\n                }\r\n                if( this.evaluaciones[0].fecha_actual > this.evaluaciones[0].fecha_fin ){\r\n                    this.volver()\r\n                }\r\n\r\n                let dia_actual = (this.evaluaciones[0].fecha_actual).split('-')\r\n                let dia_actual1 = dia_actual[2].split(' ')\r\n                let dia_actual_1 = dia_actual1[0]\r\n\r\n                let dia_fin = (this.evaluaciones[0].fecha_fin).split('-')\r\n                let dia_fin1 = dia_fin[2].split(' ')\r\n                let dia_fin_1 = dia_fin1[0]\r\n\r\n                if( dia_actual_1 === dia_fin_1 ){\r\n                    let tiempo_fin1 = this.evaluaciones[0].fecha_fin.split(' ');\r\n                    let tiempo_fin2 = (tiempo_fin1[1]).split(':');\r\n\r\n                    let tiempo_actual1 = this.evaluaciones[0].fecha_actual.split(' ');\r\n                    let tiempo_actual2 = (tiempo_actual1[1]).split(':');\r\n\r\n                    let tiempo = ((parseInt(tiempo_fin2[0]+''+tiempo_fin2[1]+''+tiempo_fin2[2]) - parseInt(tiempo_actual2[0]+''+tiempo_actual2[1]+''+tiempo_actual2[2]))*600)-10000;//600 compensar tiempo\r\n\r\n                    if( tiempo < 0 ){\r\n                        alert('Esta evaluación ha finalizado.');\r\n                        this.volver()\r\n                    }else{\r\n                        setInterval(() => {\r\n                            alert('Esta evaluación ha finalizado.');\r\n                            this.calificarValidado()\r\n                        }, tiempo)\r\n                    }\r\n                }\r\n\r\n            },\r\n            iniciar(){\r\n                this.f_tiempo(this.evaluaciones[0].duracion);\r\n                for( var j=1; j<=this.preguntas.items.length; j++ ){\r\n                    document.getElementById(\"contenPreg\"+j).style.display = \"none\";\r\n                }\r\n                this.verbtniniciar = false;\r\n                ///muestra la primera pregunta\r\n                document.getElementById(\"contenPreg1\").style.display = \"block\";\r\n\r\n                function marcarBoton(index){\r\n                    $('#botonRespuesta'+index).addClass('marcarBotonResp');\r\n                }\r\n\r\n                ///mostrar preguntas metodo 2\r\n                var cantOpciones;\r\n                for( var i=0; i<this.preguntas.items.length; i++ ){\r\n                    cantOpciones = this.preguntas.items[i].opciones.length\r\n                    if( cantOpciones === 0 ){\r\n                        cantOpciones = 1\r\n                    }\r\n\r\n                    for( var j=0; j<cantOpciones; j++ ){\r\n                        switch (parseInt(this.preguntas.items[i].id_tipo_pregunta)) {\r\n                        case 1:\r\n                            try {\r\n                            $(\"#contenOpciones\"+(i+1)).append(`\r\n                                <input type=\"checkbox\" onclick=\"document.getElementById('botonRespuesta`+i+`').style.background='#046AE7'; document.getElementById('botonRespuesta`+i+`').style.color='white'\" id=\"${this.preguntas.items[i].opciones[j].id_opcion_pregunta}\" class=\"${this.preguntas.items[i].id} estiloInput\" name=\"${this.preguntas.items[i].id}\" value=\"${this.preguntas.items[i].opciones[j].id_opcion_pregunta}\">\r\n                                <label for=\"${this.preguntas.items[i].opciones[j].id_opcion_pregunta}\"> ${this.preguntas.items[i].opciones[j].opcion}</label><br>\r\n                            `)\r\n                            if( this.preguntas.items[i].opciones[j].img_opcion === '' || this.preguntas.items[i].opciones[j].img_opcion === 'null' || this.preguntas.items[i].opciones[j].img_opcion === null ){\r\n                            }else{\r\n                                $(\"#contenOpciones\"+(i+1)).append(`\r\n                                    <label for=\"${this.preguntas.items[i].opciones[j].id_opcion_pregunta}\">\r\n                                    <img style=\"border-radius: 5px; cursor: pointer;\" for=\"${this.preguntas.items[i].opciones[j].id_opcion_pregunta}\" src=\"${this.$data_url}archivos/img/img_preguntas/${this.preguntas.items[i].opciones[j].img_opcion}\" class=\"img-responsive mt-2 altura\" min-width=\"350px\" width=\"450px\">\r\n                                    </label><br>\r\n                                `)\r\n                            }\r\n                            } catch (error){\r\n\r\n                            }\r\n                        break;\r\n                        case 3:\r\n                            try {\r\n                            $(\"#contenOpciones\"+(i+1)).append(`\r\n                                <input type=\"radio\" onclick=\"document.getElementById('botonRespuesta`+i+`').style.background='#046AE7'; document.getElementById('botonRespuesta`+i+`').style.color='white'\" id=\"${this.preguntas.items[i].opciones[j].id_opcion_pregunta}\" class=\"${this.preguntas.items[i].id} estiloInput\" name=\"${this.preguntas.items[i].id}\" value=\"${this.preguntas.items[i].opciones[j].id_opcion_pregunta}\">\r\n                                <label for=\"${this.preguntas.items[i].opciones[j].id_opcion_pregunta}\"> ${this.preguntas.items[i].opciones[j].opcion}</label><br>\r\n                            `)\r\n                            } catch (error){\r\n\r\n                            }\r\n                        break;\r\n                        case 5:\r\n                            try {\r\n                            $(\"#contenOpciones\"+(i+1)).append(`\r\n                                <input type=\"radio\" onclick=\"document.getElementById('botonRespuesta`+i+`').style.background='#046AE7'; document.getElementById('botonRespuesta`+i+`').style.color='white'\" id=\"${this.preguntas.items[i].opciones[j].id_opcion_pregunta}\" class=\"${this.preguntas.items[i].id} estiloInput\" name=\"${this.preguntas.items[i].id}\" value=\"${this.preguntas.items[i].opciones[j].id_opcion_pregunta}\">\r\n                                <label for=\"${this.preguntas.items[i].opciones[j].id_opcion_pregunta}\"> ${this.preguntas.items[i].opciones[j].opcion}</label><br>\r\n                            `)\r\n                            if( this.preguntas.items[i].opciones[j].img_opcion === '' || this.preguntas.items[i].opciones[j].img_opcion === 'null' || this.preguntas.items[i].opciones[j].img_opcion === null ){\r\n                            }else{\r\n                                $(\"#contenOpciones\"+(i+1)).append(`\r\n                                    <label for=\"${this.preguntas.items[i].opciones[j].id_opcion_pregunta}\">\r\n                                    <img style=\"border-radius: 5px; cursor: pointer;\" for=\"${this.preguntas.items[i].opciones[j].id_opcion_pregunta}\" src=\"${this.$data_url}archivos/img/img_preguntas/${this.preguntas.items[i].opciones[j].img_opcion}\" class=\"img-responsive mt-2 altura\" min-width=\"350px\" width=\"450px\">\r\n                                    </label><br>\r\n                                `)\r\n                            }\r\n                            } catch (error){\r\n\r\n                            }\r\n                        break;\r\n                        case 2:\r\n                            try {\r\n                                $(\"#contenOpciones\"+(i+1)).append(`\r\n                                    <textarea oninput=\"document.getElementById('botonRespuesta`+i+`').style.background='#046AE7'; document.getElementById('botonRespuesta`+i+`').style.color='white'\" id=\"${this.preguntas.items[i].id}\" class=\"inputRespuesta\" rows=\"5\" placeholder=\"Escribe tu respuesta...\"></textarea>\r\n                                `)\r\n                            } catch (error) {\r\n\r\n                            }\r\n                        break;\r\n                        case 6:\r\n                            try {\r\n                                $(\"#contenOpciones\"+(i+1)).append(`\r\n                                    <textarea oninput=\"document.getElementById('botonRespuesta`+i+`').style.background='#046AE7'; document.getElementById('botonRespuesta`+i+`').style.color='white'\" id=\"${this.preguntas.items[i].id}\" class=\"inputRespuesta\" rows=\"5\" placeholder=\"Escribe tu respuesta...\"></textarea>\r\n                                `)\r\n                            } catch (error) {\r\n\r\n                            }\r\n                        break;\r\n                        default:\r\n                        break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n            },\r\n            verPreguntaSelec(index){\r\n                for( var j=1; j<=this.preguntas.items.length; j++ ){\r\n                    document.getElementById(\"contenPreg\"+j).style.display = \"none\";\r\n                }\r\n                document.getElementById(\"contenPreg\"+(index+1)).style.display = \"block\";\r\n            },\r\n            openConfirm() {\r\n                this.$vs.dialog({\r\n                    type: 'confirm',\r\n                    color: 'primary',\r\n                    title: `Confirmar`,\r\n                    text: '¿Está seguro de finalizar la evaluación?',\r\n                    accept: this.calificarValidado\r\n                })\r\n            },\r\n            calificarValidado(){\r\n                var pregsRecorrer = this.preguntas.items\r\n                var opcionesSeleccionadas = []\r\n                var opcionesSeleccionadasV = []\r\n                var califPregFinal = 0;\r\n                for( var j=0; j<pregsRecorrer.length; j++ ){\r\n                    var index = this.respuestasAcum.map(function(e) { return e.id_pregunta; }).indexOf(pregsRecorrer[j].id);\r\n\r\n                    if( pregsRecorrer[j].id_tipo_pregunta === 1 || pregsRecorrer[j].id_tipo_pregunta === 3 || pregsRecorrer[j].id_tipo_pregunta === 5  ){\r\n\r\n                        if( pregsRecorrer[j].id_tipo_pregunta === 3 || pregsRecorrer[j].id_tipo_pregunta === 5 ){\r\n                            opcionesSeleccionadas = $('input:radio[name='+pregsRecorrer[j].id+']:checked').val()\r\n                        }else{\r\n                            $('.'+pregsRecorrer[j].id+':checked').each(function() {\r\n                                opcionesSeleccionadas += $(this).val()+','\r\n                            })\r\n                        }\r\n\r\n                        try {\r\n                            var tamselecV = 0;\r\n                            opcionesSeleccionadasV = opcionesSeleccionadas.split(',')\r\n                            if(opcionesSeleccionadasV===undefined){\r\n                                opcionesSeleccionadasV=''\r\n                                tamselecV = 1\r\n                            }else{\r\n                                tamselecV = opcionesSeleccionadasV.length-1\r\n                                if(opcionesSeleccionadasV.length-1<=0){\r\n                                    tamselecV = 1\r\n                                }\r\n                            }\r\n\r\n                            var opcionRespuesta = (this.respuestasAcum[index].id_opcion_pregunta).split(',')\r\n                            var califPreg = 0;\r\n                            for( var i=0; i<tamselecV; i++ ){\r\n                                for( var k=0; k<opcionRespuesta.length; k++ ){\r\n\r\n                                    if( opcionesSeleccionadasV[i] === opcionRespuesta[k] ){\r\n                                        //alert(opcionesSeleccionadasV[i] +'==='+ opcionRespuesta[k]);\r\n                                        califPreg++\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            if( tamselecV > opcionRespuesta.length ){\r\n                                califPreg = califPreg - (tamselecV - opcionRespuesta.length)\r\n                            }\r\n                            califPregFinal = ((califPreg * this.respuestasAcum[index].puntaje_pregunta)/opcionRespuesta.length).toFixed(2);\r\n\r\n                            //alert(califPregFinal+'----califPreg: ' + califPreg+'----puntaje_pregunta: '+this.respuestasAcum[index].puntaje_pregunta+'----opcionRespuesta.length: '+opcionRespuesta.length);\r\n                        } catch (error) {\r\n\r\n                        }\r\n\r\n                    }else{//calificar preguntas tipo 2 o 6\r\n                        try {\r\n                            opcionesSeleccionadasV = (($('#'+pregsRecorrer[j].id).val()).toLowerCase().replace(/,|\\.|\\(|\\)|!|\\?|¿|\\$|/g, '')).split(' ')\r\n\r\n                            var opcionRespuesta = (this.respuestasAcum[index].opcion).split(',')\r\n                            var califPreg = 0;\r\n                            for( var i=0; i<opcionesSeleccionadasV.length; i++ ){\r\n                                for( var k=0; k<opcionRespuesta.length; k++ ){\r\n                                    if( opcionesSeleccionadasV[i] === (opcionRespuesta[k].toLowerCase()).replace(/ /gi, '') ){\r\n                                        //alert('**BIEN: '+( opcionesSeleccionadasV[i] +'==='+ (opcionRespuesta[k].toLowerCase()).replace(/ /g, '') ));\r\n                                        califPreg++\r\n                                        break\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            let cant_coincidencias = parseInt(this.respuestasAcum[index].cant_coincidencias)\r\n                            if( cant_coincidencias <= 0 ){\r\n                                cant_coincidencias = 1\r\n                            }\r\n                            let califPregEscr = ((califPreg * this.respuestasAcum[index].puntaje_pregunta)/parseInt(cant_coincidencias)).toFixed(2);\r\n\r\n                            if( califPregEscr > this.respuestasAcum[index].puntaje_pregunta ){\r\n                                califPregEscr = this.respuestasAcum[index].puntaje_pregunta\r\n                            }\r\n\r\n                            califPregFinal = califPregEscr;\r\n\r\n                            //alert(califPregFinal+'----califPreg ab: ' + califPregEscr+'----puntaje_pregunta: '+this.respuestasAcum[index].puntaje_pregunta);\r\n\r\n                        }catch (error){\r\n                        }\r\n                    }\r\n\r\n                    this.guardarRespuesta(this.id_evalRevisar, pregsRecorrer[j].id, this.usuario.idusuario, opcionesSeleccionadasV, califPregFinal)\r\n\r\n                    this.calificacion += parseFloat(califPregFinal);\r\n\r\n                    califPreg = 0\r\n                    califPregFinal = 0\r\n                    opcionesSeleccionadas = []\r\n                    opcionesSeleccionadasV= []\r\n                }\r\n\r\n                this.enviarEvaluacion();\r\n            },\r\n            guardarRespuesta(evaluacion, pregunta, estudiante, respuestas, puntaje){\r\n                let formData = new FormData();\r\n                    formData.append('evaluacion', evaluacion);\r\n                    formData.append('pregunta',  pregunta);\r\n                    formData.append('estudiante', estudiante);\r\n                    formData.append('respuesta', respuestas);\r\n                    formData.append('puntaje', puntaje);\r\n\r\n                this.$http.post(this.$server_url+'guardarRespuesta', formData)\r\n                .then(res => {\r\n                })\r\n                .catch(function (error) {\r\n                })\r\n            },\r\n            enviarEvaluacion(){\r\n                let me = this\r\n                var urlBack = window.location.href\r\n                var urlV = urlBack.split('/')\r\n                me.$vs.loading()\r\n                let formData = new FormData();\r\n                    formData.append('estudiante', me.estudiante);\r\n                    formData.append('evaluacion',  me.id_evalRevisar);\r\n                    formData.append('calificacion', me.calificacion.toFixed(2));\r\n                    formData.append('grupo', me.grupo_estudiante);\r\n\r\n                this.$http.post(this.$server_url+'respEvaluacion', formData)\r\n                .then(res => {\r\n                    me.$vs.loading.close()\r\n                    localStorage.setItem('previsualizar_eval', 0);\r\n                    window.location.href = urlV[0]+'/'+urlV[1]+'/'+urlV[2]+'/revisarevaluacion';\r\n                })\r\n                .catch(function (error) {\r\n                    //window.location.href = me.urlOrigen;\r\n                })\r\n            },\r\n            volver(){\r\n                window.location.href = this.urlOrigen;\r\n            },\r\n            f_tiempo(numero) {\r\n                let me = this;\r\n                var n = numero * 60;\r\n                x = setInterval(function() {\r\n                    n--;\r\n                    var now = n * 1000;\r\n                    var distance = n + now;\r\n                    var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n                    var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n                    var seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n                    $(\".reloj\").html(hours + \" : \" + minutes + \" : \" + seconds + \"\");\r\n                    if (distance < 60000) {\r\n                        $(\".reloj\").css('color', '#FB2452');\r\n                    }\r\n                    if (distance < 0) {\r\n                        $(\".reloj\").html(\"Fin del tiempo\");\r\n                        me.calificarValidado()\r\n                    }\r\n                }, 1000);\r\n            },\r\n            preguntasEvaluacionGrupo(){\r\n                var grupoRand = Math.floor(Math.random() * ( (parseInt(this.evaluaciones[0].grupos_evaluacion)+1) - 1)) + 1;\r\n                localStorage.setItem('grupo_estudiante', grupoRand);\r\n                this.grupo_estudiante = grupoRand;\r\n                this.verRespuestasGrupo();\r\n                let formData = new FormData();\r\n                formData.append('grupo', this.grupo_estudiante);\r\n                formData.append('evaluacion',  this.id_evalRevisar);\r\n                this.$http.post(this.$server_url+`pregEvaluacionGrupo`, formData).then(res => {\r\n                    if(res.data.length===0){\r\n                        this.contadorIntentosgrupo++\r\n                        if( this.contadorIntentosgrupo < 2 ){\r\n                            grupoRand = Math.floor(Math.random() * ( (parseInt(this.evaluaciones[0].grupos_evaluacion)+1) - 1)) + 1;\r\n                            localStorage.setItem('grupo_estudiante', grupoRand);\r\n                            this.grupo_estudiante = grupoRand;\r\n                            this.preguntasEvaluacionGrupo()\r\n                            this.verRespuestasGrupo();\r\n                        }else{\r\n                            alert('No existen preguntas para esta evaluación.');\r\n                            window.location.href = this.urlOrigen;\r\n                        }\r\n                    }else{\r\n                        this.preguntas = res.data;\r\n                        for( var i=0; i<this.preguntas.items.length; i++ ){\r\n                            if( this.preguntas.items[i].id_tipo_pregunta===2 || this.preguntas.items[i].id_tipo_pregunta===6 ){\r\n                                this.preguntas_escritas.push(this.preguntas.items[i].descripcion)\r\n                                this.tipo_preguntas_escritas.push(this.preguntas.items[i].id_tipo_pregunta)\r\n                            }\r\n                        }\r\n\r\n                        this.getEvaluacion(this.id_evalRevisar);\r\n                    }\r\n                })\r\n            },\r\n            verRespuestasGrupo(){\r\n                let formData = new FormData();\r\n                formData.append('grupo', this.grupo_estudiante);\r\n                formData.append('evaluacion',  this.id_evalRevisar);\r\n\r\n                this.$http.post(this.$server_url+'getRespuestasAcum', formData).then(res => {\r\n                    this.respuestasAcum = res.data\r\n                })\r\n            },\r\n            verificarCurso(){\r\n                let me = this\r\n                let formData = new FormData();\r\n                    formData.append(\"codigo\", me.vectorLink[1]);\r\n                    formData.append(\"idusuario\", me.usuario.idusuario);\r\n                this.$http.post(this.$server_url+'verificarCursoEstudiante', formData)\r\n                .then(function (res) {\r\n                    if( res.data != '' ){\r\n                    }else{\r\n                        me.addClase()\r\n                    }\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n\r\n            },\r\n            addClase(){\r\n                let me = this\r\n                let formData = new FormData();\r\n                    formData.append(\"codigo\", me.vectorLink[1]);\r\n                    formData.append(\"idusuario\", me.usuario.idusuario);\r\n\r\n                this.$http.post(this.$server_url+'addClase', formData)\r\n                .then(function (res) {\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n            }\r\n\r\n        }\r\n    }\r\n</script>\r\n\r\n<style>\r\n.inputRespuesta{\r\n    height: 80px;\r\n    width: 100%;\r\n    border-radius: 5px;\r\n    border: 1px solid #d5d5d5;\r\n    font-size: 18px;\r\n    padding: 5px 10px 5px 10px;\r\n    resize: vertical;\r\n}\r\n\r\n.marcarBotonResp{\r\n    background-color: #046AE7 !important;\r\n    color: white !important;\r\n}\r\n\r\n.botonPaginacion:hover{\r\n    background-color: #C8DFFA !important;\r\n    color: #046AE7 !important;\r\n}\r\n\r\n.estiloInput{\r\n    margin-bottom: 15px;\r\n    -ms-transform: scale(1.5); /* IE 9 */\r\n    -webkit-transform: scale(1.5); /* Chrome, Safari, Opera */\r\n    transform: scale(1.5);\r\n    margin-right: 10px;\r\n}\r\n\r\n.altura{\r\n    max-height: 350px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]}]}