{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\evaluaciones\\revisarEvaluacion.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\evaluaciones\\revisarEvaluacion.vue","mtime":1712682815874},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\babel.config.js","mtime":1712682813877},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\.babelrc","mtime":1712682813750},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport flatPickr from 'vue-flatpickr-component';\nimport 'flatpickr/dist/flatpickr.css';\nimport Vue from 'vue';\nimport axios from 'axios';\nimport vSelect from 'vue-select';\nimport moment from 'moment';\nimport $ from 'jquery';\nimport VueRouter from 'vue-router';\nvar respondidas = [];\nvar x = null;\nexport default {\n  data: function data() {\n    return {\n      preguntas: [],\n      pregunta: {\n        descripcion: '',\n        id_tema: '',\n        respuesta: '',\n        opcion1: '',\n        opcion2: '',\n        opcion3: '',\n        img_pregunta: '',\n        img_respuesta: '',\n        img_opcion1: '',\n        img_opcion2: '',\n        img_opcion3: ''\n      },\n      evaluaciones: [],\n      evaluacion: {\n        nombre: '',\n        asignatura: '',\n        descripcion: '',\n        fecha_inicio: '',\n        fecha_fin: '',\n        estado: '',\n        duracion: '',\n        nombre_evaluacion: ''\n      },\n      usuario: [],\n      estudiante: null,\n      nombre_estudiante: null,\n      apellido_estudiante: null,\n      opcionesSelec: [],\n      activeConfirm: false,\n      urlOrigen: '',\n      iniciarActivo: true,\n      currentx: 1,\n      volverActivo: false,\n      verbtniniciar: true,\n      calificacion: 0,\n      id_evalRevisar: '',\n      estudianteSelected: '',\n      estudiantes: [],\n      puntaje: '',\n      previsualizar_eval: 1,\n      grupo_selected: '',\n      radios1: 1,\n      respuestasEstudiante: [],\n      calificacionObtenida: '',\n      respuestasEscritas: [],\n      interarResEscr: 0,\n      grupo: '',\n      vertodo: false,\n      calificacionManual: 0,\n      grupoSelectedVal: 1,\n      preguntasPendientesRevision: []\n    };\n  },\n  components: {\n    'v-select': vSelect,\n    flatPickr: flatPickr\n  },\n  created: function created() {\n    this.id_evalRevisar = localStorage.getItem(\"id_evalRevisar\");\n    this.previsualizar_eval = localStorage.getItem(\"previsualizar_eval\");\n    this.$vs.loading();\n    this.usuario = JSON.parse(localStorage.getItem('usuario'));\n    var url = location.pathname.split('/');\n    var urlBack = window.location.href;\n    var urlV = urlBack.split('/');\n    this.urlOrigen = urlV[0] + '/' + urlV[1] + '/' + urlV[2] + '/estudiante/evaluaciones';\n  },\n  mounted: function mounted() {\n    this.datosInicio(this.id_evalRevisar, this.previsualizar_eval);\n  },\n  methods: {\n    datosInicio: function datosInicio(id_evalRevisar, previsualizar_eval) {\n      var me = this;\n      var formData = new FormData();\n      formData.append('codigo', localStorage.codigo);\n      formData.append('evaluacion', id_evalRevisar);\n      me.$http.post(this.$server_url + 'estudiantesEvalCurso', formData).then(function (response) {\n        if (response.data[0] === undefined) {\n          if (me.previsualizar_eval != 1) {\n            me.$vs.notify({\n              text: 'Ningun estudiante ha realizado esta evaluación.',\n              color: 'warning',\n              iconPack: 'feather'\n            });\n          }\n          me.$vs.loading.close();\n        } else {\n          me.estudiantes = response.data;\n          me.estudianteSelected = {\n            id: response.data[0].id,\n            label: response.data[0].label,\n            grupo: response.data[0].grupo\n          };\n          me.grupoSelectedVal = response.data[0].grupo;\n          me.nombre_estudiante = response.data[0].label;\n        }\n        me.$http.get(me.$server_url + 'evaluacionEstudiante/' + id_evalRevisar).then(function (response) {\n          if (response.data.length > 0) {\n            me.evaluaciones = response.data;\n            me.$http.get(me.$server_url + 'getRespuestas/' + id_evalRevisar).then(function (response) {\n              var pregOpcion = response.data.items;\n              if (pregOpcion === undefined) {\n                me.$vs.notify({\n                  text: 'Esta evaluación aun no tiene preguntas asignadas',\n                  color: 'warning',\n                  iconPack: 'feather'\n                });\n                me.$vs.loading.close();\n                return;\n              }\n              if (previsualizar_eval == 1) {\n                me.verPreguntasEvaluacionGrupos();\n                me.iniciar();\n              } else {\n                me.verEvalEstudiante();\n                me.iniciar();\n              }\n            }).catch(function (error) {\n              console.log(error);\n            });\n          } else {\n            alert('No existen preguntas para esta evaluación');\n            //window.location.href = this.urlOrigen;\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    getEvaluacion: function getEvaluacion(item) {\n      var me = this;\n      var formData = new FormData();\n      if (me.usuario.id_group === 4) {\n        formData.append('estudiante', me.usuario.idusuario);\n      } else {\n        formData.append('estudiante', me.estudianteSelected.id);\n      }\n      formData.append('evaluacion', me.id_evalRevisar);\n      me.$http.post(this.$server_url + \"verifRespEvaluacion\", formData).then(function (res) {\n        if (res.data === 0) {\n          me.volverActivo = true;\n        } else {\n          me.volverActivo = false;\n          me.calificacionObtenida = res.data[0].calificacion.toFixed(2);\n          localStorage.calificacionImprimir = me.calificacionObtenida + '/' + me.evaluaciones[0].puntos;\n        }\n        me.$vs.loading.close();\n      });\n    },\n    iniciar: function iniciar() {\n      var me = this;\n      if (me.preguntas.items === undefined) {\n        console.log();\n      } else {\n        me.iniciarActivo = true;\n        for (var j = 1; j <= me.preguntas.items.length; j++) {\n          document.getElementById(\"contenPreg\" + j).style.display = \"none\";\n        }\n        me.verbtniniciar = false;\n        document.getElementById(\"contenPreg1\").style.display = \"block\"; ///muestra la primera pregunta\n      }\n      me.$vs.loading.close();\n    },\n    verPreguntaSelec: function verPreguntaSelec(index) {\n      var me = this;\n      for (var i = me.preguntas.items.length + 1; i <= me.respuestasEscritas.length + me.preguntas.items.length; i++) {\n        document.getElementById(\"contenPregEscr\" + i).style.display = \"none\";\n      }\n      for (var j = 1; j <= me.preguntas.items.length; j++) {\n        document.getElementById(\"contenPreg\" + j).style.display = \"none\";\n      }\n      try {\n        document.getElementById(\"contenPreg\" + (index + 1)).style.display = \"block\";\n      } catch (error) {}\n    },\n    verEvalEstudiante: function verEvalEstudiante() {\n      var me = this;\n      if (me.estudianteSelected.grupo === undefined) {\n        me.$vs.notify({\n          text: 'Ningún estudiante ha respondido esta evaluación todavía.',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-alert-triangle'\n        });\n        return;\n      }\n      me.grupo = me.estudianteSelected.grupo;\n      var estudiante;\n      if (me.usuario.id_group === 4) {\n        me.grupo = localStorage.getItem(\"grupo_estudiante\");\n        estudiante = me.usuario.idusuario;\n        localStorage.nombresImprimir = me.usuario.nombres + ' ' + me.usuario.apellidos;\n      } else {\n        estudiante = me.estudianteSelected.id;\n        localStorage.nombresImprimir = me.estudianteSelected.label;\n      }\n      if (estudiante === undefined) {\n        console.log('no existen estudiantes');\n      } else {\n        var formData = new FormData();\n        localStorage.grupoevalImprimir = me.grupo;\n        localStorage.estudianteEvalImprimir = estudiante;\n        formData.append('grupo', me.grupo);\n        formData.append('evaluacion', me.id_evalRevisar);\n        formData.append('estudiante', estudiante);\n        me.$vs.loading();\n        me.$http.post(this.$server_url + 'pregEvaluacionEstudiante', formData).then(function (response) {\n          if (response.data.length === 0) {\n            me.preguntasPendientesRevision = [];\n            me.preguntas = [];\n            me.calificacionObtenida = 0;\n            me.$vs.loading.close();\n            me.$vs.notify({\n              text: 'El estudiante seleccionado no ha resuelto la evaluación',\n              color: 'warning',\n              iconPack: 'feather',\n              icon: 'icon-alert-triangle'\n            });\n          } else {\n            me.preguntasPendientesRevision = [];\n            me.calificacionObtenida = '';\n            me.preguntas = response.data;\n            me.getEvaluacion(me.id_evalRevisar);\n            me.currentx = 1;\n            var resps = [];\n            var respString = [];\n            for (var i = 0; i < response.data.items.length; i++) {\n              respString = response.data.items[i].respuesta.split(',');\n              for (var j = 0; j < respString.length; j++) {\n                resps.push(parseInt(respString[j]));\n              }\n              respString = [];\n            }\n            me.opcionesSelec = resps;\n            for (var i = 0; i < response.data.items.length; i++) {\n              if (response.data.items[i].id_tipo_pregunta === 6 || response.data.items[i].id_tipo_pregunta === 2) {\n                me.preguntasPendientesRevision.push(i);\n              }\n            }\n            me.$vs.loading.close();\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      }\n    },\n    verPreguntasEvaluacionGrupos: function verPreguntasEvaluacionGrupos() {\n      var me = this;\n      var formData = new FormData();\n      formData.append('grupo', me.radios1);\n      formData.append('evaluacion', me.id_evalRevisar);\n      me.$http.post(this.$server_url + \"pregEvaluacionGrupo\", formData).then(function (res) {\n        if (res.data.length === 0) {\n          // me.volverActivo=true\n          me.$vs.loading.close();\n        } else {\n          me.preguntas = res.data;\n          me.currentx = 1;\n        }\n      });\n    },\n    mostrarTodo: function mostrarTodo() {\n      var me = this;\n      me.vertodo = true;\n      if (me.preguntas.items === undefined) {\n        console.log();\n      } else {\n        for (var j = 1; j <= me.preguntas.items.length; j++) {\n          document.getElementById(\"contenPreg\" + j).style.display = \"block\";\n        }\n      }\n      for (var _j = me.preguntas.items.length + 1; _j <= me.respuestasEscritas.length + me.preguntas.items.length; _j++) {\n        document.getElementById(\"contenPregEscr\" + _j).style.display = \"block\";\n      }\n    },\n    calificarManual: function calificarManual(puntaje, id_respuesta) {\n      var me = this;\n      me.calificacionObtenida = (parseFloat(me.calificacionManual) + (parseFloat(me.calificacionObtenida) - parseFloat(puntaje))).toFixed(2);\n      me.preguntasPendientesRevision = [];\n      var formData = new FormData();\n      formData.append('estudiante', me.estudianteSelected.id);\n      formData.append('calificacion', me.calificacionObtenida);\n      formData.append('evaluacion', me.id_evalRevisar);\n      formData.append('puntaje', me.calificacionManual);\n      formData.append('id_respuesta', id_respuesta);\n      me.$http.post(this.$server_url + \"modificarEvaluacion\", formData).then(function (res) {\n        me.verEvalEstudiante();\n        me.$vs.notify({\n          text: 'Calificación guardada correctamente',\n          color: 'success',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n      });\n      me.calificacionManual = 0;\n    },\n    imprimirEval: function imprimirEval() {\n      var me = this;\n      me.mostrarTodo();\n      var ficha = document.getElementById('seccionImprimir');\n      window.print();\n      /*var ficha = document.getElementById('seccionImprimir');\r\n      var ventimp = window.open(' ', 'popimpr');\r\n      ventimp.document.write( ficha.innerHTML );\r\n      ventimp.document.close();\r\n      ventimp.print( );\r\n      ventimp.close();*/\n    }\n  }\n};",{"version":3,"names":["flatPickr","Vue","axios","vSelect","moment","$","VueRouter","respondidas","x","data","preguntas","pregunta","descripcion","id_tema","respuesta","opcion1","opcion2","opcion3","img_pregunta","img_respuesta","img_opcion1","img_opcion2","img_opcion3","evaluaciones","evaluacion","nombre","asignatura","fecha_inicio","fecha_fin","estado","duracion","nombre_evaluacion","usuario","estudiante","nombre_estudiante","apellido_estudiante","opcionesSelec","activeConfirm","urlOrigen","iniciarActivo","currentx","volverActivo","verbtniniciar","calificacion","id_evalRevisar","estudianteSelected","estudiantes","puntaje","previsualizar_eval","grupo_selected","radios1","respuestasEstudiante","calificacionObtenida","respuestasEscritas","interarResEscr","grupo","vertodo","calificacionManual","grupoSelectedVal","preguntasPendientesRevision","components","created","localStorage","getItem","$vs","loading","JSON","parse","url","location","pathname","split","urlBack","window","href","urlV","mounted","datosInicio","methods","me","formData","FormData","append","codigo","$http","post","$server_url","then","response","undefined","notify","text","color","iconPack","close","id","label","get","length","pregOpcion","items","verPreguntasEvaluacionGrupos","iniciar","verEvalEstudiante","catch","error","console","log","alert","getEvaluacion","item","id_group","idusuario","res","toFixed","calificacionImprimir","puntos","j","document","getElementById","style","display","verPreguntaSelec","index","i","icon","nombresImprimir","nombres","apellidos","grupoevalImprimir","estudianteEvalImprimir","resps","respString","push","parseInt","id_tipo_pregunta","mostrarTodo","calificarManual","id_respuesta","parseFloat","imprimirEval","ficha","print"],"sources":["src/views/evaluaciones/revisarEvaluacion.vue"],"sourcesContent":["<template>\r\n<div class=\"vx-row\">\r\n    <!------BARRA SUPERIOR-------->\r\n    <div class=\"vx-col sm:w-3/4 w-full\" style=\"font-size: 18px;\">\r\n        <div v-if=\"evaluaciones[0]===undefined\">No existe evaluación</div>\r\n        <vx-card v-else v-bind:title=\"evaluaciones[0].nombreasignatura\" title-color=\"primary\">\r\n            <div class=\"vx-row mt-0\">\r\n                <div class=\"vx-col w-full\" align=\"justify\">\r\n                    <b>Inicia: </b> {{evaluaciones[0].fecha_inicio}} - <b>finaliza: </b> {{evaluaciones[0].fecha_fin}}<br>\r\n                    <b>Duración: </b> <span> {{evaluaciones[0].duracion}} minutos </span><br>\r\n                    <div v-if=\"evaluaciones[0].descripcion==='' || evaluaciones[0].descripcion === null || evaluaciones[0].descripcion === 'null'\"></div>\r\n                    <div v-else><b>Descripción: </b> {{evaluaciones[0].descripcion}}<br></div>\r\n                    <div v-if=\"usuario.id_group===6 && previsualizar_eval!=1\"><b>Grupo: </b> {{estudianteSelected.grupo}} <br></div>\r\n                </div>\r\n            </div>\r\n\r\n            <ul v-if=\"previsualizar_eval==1 && usuario.id_group===6\" align=\"center\" class=\"mt-2 mb-0\" style=\"border: 1px solid #D5D5D5; border-radius: 5px;\">\r\n                <vs-radio v-for=\"(grupos_g, key) in evaluaciones[0].grupos_evaluacion\" :key=\"key\" v-model=\"radios1\" v-bind:vs-value=\"grupos_g\" class=\"m-3\" @input=\"verPreguntasEvaluacionGrupos()\">\r\n                    Grupo {{grupos_g}}\r\n                </vs-radio>\r\n            </ul>\r\n        </vx-card>\r\n\r\n        <!-------INICIO SECCION RESPONDER---------->\r\n        <vx-card class=\"mt-5 mb-6\" id=\"seccionImprimir\">\r\n            <div class=\"w-full\" align=\"center\" v-if=\"volverActivo===true && previsualizar_eval!=1\">\r\n                <div class=\"mb-2\">Esta evaluación aún no ha sido resuelta.</div>\r\n            </div>\r\n\r\n            <div class=\"text-center\" v-else>\r\n                <div cols=\"12\" v-for=\"(item, index) in preguntas.items\" :key=\"index\" v-bind:id=\"'contenPreg'+(index+1)\" style=\"display: none;\" class=\"mb-4\">\r\n\r\n                    <div class=\"mb-5\" style=\"font-size: 20px;\" align=\"center\">\r\n                        <vs-divider v-if=\"index>0 && vertodo===true\" />\r\n                        <div align=\"right\">\r\n                            <b>{{item.puntaje}}</b> / {{item.puntaje_pregunta}} pts<br>\r\n                            {{item.nombre_tipo}}\r\n                        </div>\r\n                        <div align=\"left\">\r\n                            <b>{{ index+1 }}) {{item.descripcion}}</b> <br>\r\n                        </div>\r\n                        <img style=\"border-radius: 5px;\" v-if=\"item.img_pregunta\" v-bind:src=\"$data_url+'archivos/img/img_preguntas/'+item.img_pregunta\" class=\"img-responsive mt-2 altura\" min-width=\"350px\" width=\"450px\">\r\n                    </div>\r\n\r\n                    <ol type=\"a\">\r\n                        <div align=\"left\" style=\"font-size: 18px;\">\r\n                            <!-----PREGUNTAS SELECCION---->\r\n                            <div v-if=\"item.id_tipo_pregunta===1 || item.id_tipo_pregunta===5 || item.id_tipo_pregunta===3\">\r\n                                <div v-for=\"(itemop, index) in item.opciones\" :key=\"index\">\r\n                                    <li>\r\n                                        <vs-checkbox disabled=\"true\" class=\"mb-4\" v-model=\"opcionesSelec\" v-bind:vs-value=\"itemop.id_opcion_pregunta\">\r\n                                            {{ itemop.opcion }}\r\n                                            <img style=\"border-radius: 5px;\" v-if=\"itemop.img_opcion\" v-bind:src=\"$data_url+'archivos/img/img_preguntas/'+itemop.img_opcion\" class=\"img-responsive altura\" width=\"300px\">\r\n                                            <b v-if=\"itemop.tipo===1\" style=\"color: #43D59B; font-size: 20px;\" class=\"ml-2\">✓</b>\r\n                                        </vs-checkbox>\r\n                                    </li>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <!-----PREGUNTAS ESCRITAS---->\r\n                            <div v-if=\"item.id_tipo_pregunta===2 || item.id_tipo_pregunta===6\">\r\n                                <div align=\"right\" class=\"mb-3\" v-if=\"usuario.id_group != 4 && previsualizar_eval!=1\">\r\n                                    <vs-input type=\"number\" v-model=\"calificacionManual\" style=\"display: inline-block; width: 80px;\" />\r\n                                    <vs-button v-if=\"calificacionManual>=0 && calificacionManual<=item.puntaje_pregunta\" style=\"display: inline-block; width: 80px; padding-left: 12px;\" @click=\"calificarManual(item.puntaje, item.id_respuesta_pregunta)\">calificar</vs-button>\r\n                                    <vs-button v-else disabled style=\"display: inline-block; width: 80px; padding-left: 12px;\">calificar</vs-button>\r\n                                </div>\r\n\r\n                                <div v-for=\"(itemop, index1) in item.opciones\" :key=\"index1\">\r\n                                    <textarea disabled=\"true\" v-bind:placeholder=\"item.respuesta\" class=\"w-full respAbierta inputRespuesta\" />\r\n                                    Respuesta correcta: {{itemop.opcion}}\r\n                        </div>\r\n                        <div v-if=\"item.opciones.length <= 0\">\r\n                            <textarea disabled=\"true\" v-bind:placeholder=\"item.respuesta\" class=\"w-full respAbierta inputRespuesta\" />\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                </ol>\r\n            </div>\r\n\r\n        <div v-if=\"preguntas.items===undefined\"></div>\r\n        <div v-else>\r\n            <vs-pagination class=\"mt-6\" color=\"success\" v-if=\"iniciarActivo===true\" :total=\"preguntas.items.length\" v-model=\"currentx\" @input=\"verPreguntaSelec(currentx-1)\"></vs-pagination>\r\n        </div>\r\n        </div>\r\n    </vx-card>\r\n</div>\r\n\r\n<!------BARRA DERECHA-------->\r\n<div class=\"vx-col sm:w-1/4 w-full\">\r\n    <vx-card>\r\n        <div align=\"center\" v-if=\"previsualizar_eval==1 && usuario.id_group===6\">\r\n            <vs-alert color=\"primary\" title=\"Aviso\" active=\"true\">\r\n                Las respuestas no se muestran en el perfil del estudiante.\r\n            </vs-alert>\r\n        </div>\r\n\r\n        <div align=\"center\" v-if=\"previsualizar_eval!=1 && preguntasPendientesRevision.length>0\">\r\n            <vs-alert color=\"warning\" title=\"Aviso\" active=\"true\" class=\"mb-4\">\r\n                Existen preguntas pendientes de revisión por el docente.\r\n            </vs-alert>\r\n            <div class=\"btn-group mb-6\">\r\n                <vs-button v-for=\"(itemrev, indexrev) in preguntasPendientesRevision\" :key=\"indexrev\" @click=\"vertodo=false; currentx=(preguntasPendientesRevision[indexrev]+1); verPreguntaSelec(preguntasPendientesRevision[indexrev]+1)\" color=\"warning\" type=\"border\" class=\"m-1\">\r\n                    {{ preguntasPendientesRevision[indexrev]+1 }}\r\n                </vs-button>\r\n            </div>\r\n        </div>\r\n\r\n        <div v-if=\"evaluaciones[0]===undefined\"></div>\r\n        <div v-else>\r\n        <div v-if=\"previsualizar_eval!=1\" align=\"center\">\r\n            <vs-divider v-if=\"usuario.id_group === 6\" class=\"mt-2\"> Estudiante </vs-divider>\r\n            <v-select v-if=\"usuario.id_group === 6\" class=\"mb-6 w-full\" @input=\"verEvalEstudiante()\" v-model=\"estudianteSelected\" :options=\"estudiantes\" :value=\"estudianteSelected\" :dir=\"$vs.rtl ? 'rtl' : 'ltr'\" />\r\n\r\n            <vs-divider class=\"mt-2\"> Calificación </vs-divider>\r\n            <div v-if=\"volverActivo===true\">\r\n                El estudiante seleccionado aún no ha realizado la evaluación.\r\n                <div style=\"font-size: 50px; color: #2974FE;\" class=\"mb-4\">0<span style=\"font-size: 30px;\"> / {{evaluaciones[0].puntos}}</span></div>\r\n            </div>\r\n            <div v-else>\r\n                <div style=\"font-size: 50px; color: #2974FE;\" class=\"mb-4\">{{calificacionObtenida}}<span style=\"font-size: 30px;\"> / {{evaluaciones[0].puntos}}</span></div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n\r\n        <div align=\"center\" v-if=\"volverActivo===false\">\r\n            <vs-divider> Preguntas </vs-divider>\r\n            <div class=\"btn-group\">\r\n            <vs-button v-for=\"(item, index) in preguntas.items\" :key=\"index\" @click=\"vertodo=false; currentx=(index+1); verPreguntaSelec(index)\" color=\"primary\" type=\"border\" class=\"m-1\">\r\n                {{ index+1 }}\r\n                <!--<div v-if=\"preguntas.items[index].id_tipo_pregunta===2\">pendiente</div>-->\r\n            </vs-button>\r\n            </div>\r\n        </div>\r\n\r\n\r\n        <div align=\"center\">\r\n            <vs-button v-if=\"volverActivo===false\" color=\"dark\" type=\"border\" class=\"mt-6 m-1\" @click=\"mostrarTodo()\">Ver todo</vs-button>\r\n\r\n\r\n            <vs-button v-if=\"volverActivo===false\" color=\"warning\" type=\"border\" class=\"mt-6 m-1\" @click=\"$router.push('/evaluacion_imprimir')\">&nbsp;&nbsp;&nbsp;&nbsp;PDF&nbsp;&nbsp;&nbsp;&nbsp;</vs-button>\r\n\r\n            <!--<div v-if=\"previsualizar_eval==1 && volverActivo===false\" align=\"center\" class=\"w-full\"><vs-button color=\"warning\" type=\"border\" class=\"mt-6 m-1\" @click=\"imprimirEval()\">Imprimir</vs-button></div>-->\r\n\r\n            <vs-button v-if=\"usuario.id_group === 4\" color=\"success\" type=\"border\" class=\"mt-6\" @click=\"$router.push('/estudiante/evaluaciones')\"><b>← Volver</b></vs-button>\r\n\r\n            <vs-button v-else color=\"success\" type=\"border\" class=\"mt-6 m-1\" @click=\"$router.push('/evaluaciones')\"><b>← Volver</b></vs-button>\r\n        </div>\r\n\r\n    </vx-card>\r\n    </div>\r\n\r\n</div>\r\n</template>\r\n<script>\r\nimport flatPickr from 'vue-flatpickr-component';\r\nimport 'flatpickr/dist/flatpickr.css';\r\nimport Vue from 'vue'\r\nimport axios from 'axios'\r\nimport vSelect from 'vue-select'\r\nimport moment from 'moment'\r\nimport $ from 'jquery'\r\nimport VueRouter from 'vue-router'\r\nvar respondidas = [];\r\nvar x = null;\r\nexport default {\r\n    data() {\r\n        return {\r\n            preguntas: [],\r\n            pregunta: {\r\n                descripcion: '',\r\n                id_tema: '',\r\n                respuesta: '',\r\n                opcion1: '',\r\n                opcion2: '',\r\n                opcion3: '',\r\n                img_pregunta: '',\r\n                img_respuesta: '',\r\n                img_opcion1: '',\r\n                img_opcion2: '',\r\n                img_opcion3: ''\r\n            },\r\n            evaluaciones: [],\r\n            evaluacion: {\r\n                nombre: '',\r\n                asignatura: '',\r\n                descripcion: '',\r\n                fecha_inicio: '',\r\n                fecha_fin: '',\r\n                estado: '',\r\n                duracion: '',\r\n                nombre_evaluacion: ''\r\n            },\r\n            usuario: [],\r\n            estudiante: null,\r\n            nombre_estudiante: null,\r\n            apellido_estudiante: null,\r\n            opcionesSelec: [],\r\n            activeConfirm: false,\r\n            urlOrigen: '',\r\n            iniciarActivo: true,\r\n            currentx: 1,\r\n            volverActivo: false,\r\n            verbtniniciar: true,\r\n            calificacion: 0,\r\n            id_evalRevisar: '',\r\n            estudianteSelected: '',\r\n            estudiantes: [],\r\n            puntaje: '',\r\n            previsualizar_eval: 1,\r\n            grupo_selected: '',\r\n            radios1: 1,\r\n            respuestasEstudiante: [],\r\n            calificacionObtenida: '',\r\n            respuestasEscritas: [],\r\n            interarResEscr: 0,\r\n            grupo: '',\r\n            vertodo: false,\r\n            calificacionManual: 0,\r\n            grupoSelectedVal: 1,\r\n            preguntasPendientesRevision: [],\r\n        }\r\n    },\r\n    components: {\r\n        'v-select': vSelect,\r\n        flatPickr\r\n    },\r\n    created() {\r\n        this.id_evalRevisar = localStorage.getItem(\"id_evalRevisar\");\r\n        this.previsualizar_eval = localStorage.getItem(\"previsualizar_eval\");\r\n        this.$vs.loading()\r\n        this.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n        var url = location.pathname.split('/');\r\n        var urlBack = window.location.href\r\n        var urlV = urlBack.split('/')\r\n        this.urlOrigen = urlV[0] + '/' + urlV[1] + '/' + urlV[2] + '/estudiante/evaluaciones'\r\n    },\r\n    mounted() {\r\n        this.datosInicio(this.id_evalRevisar, this.previsualizar_eval)\r\n    },\r\n    methods: {\r\n        datosInicio(id_evalRevisar, previsualizar_eval) {\r\n            let me = this;\r\n            let formData = new FormData();\r\n            formData.append('codigo', localStorage.codigo);\r\n            formData.append('evaluacion', id_evalRevisar);\r\n\r\n            me.$http.post(this.$server_url+'estudiantesEvalCurso', formData)\r\n                .then(function (response) {\r\n                    if (response.data[0] === undefined) {\r\n                        if( me.previsualizar_eval!=1 ){\r\n                            me.$vs.notify({\r\n                                text: 'Ningun estudiante ha realizado esta evaluación.',\r\n                                color: 'warning',\r\n                                iconPack: 'feather'\r\n                            })\r\n                        }\r\n                        me.$vs.loading.close()\r\n                    } else {\r\n                        me.estudiantes = response.data;\r\n                        me.estudianteSelected = {\r\n                            id: response.data[0].id,\r\n                            label: response.data[0].label,\r\n                            grupo: response.data[0].grupo\r\n                        }\r\n                        me.grupoSelectedVal = response.data[0].grupo\r\n                        me.nombre_estudiante = response.data[0].label;\r\n                    }\r\n\r\n                    me.$http.get(me.$server_url+'evaluacionEstudiante/' + id_evalRevisar)\r\n                        .then(function (response) {\r\n                            if (response.data.length > 0) {\r\n                                me.evaluaciones = response.data\r\n\r\n                                me.$http.get(me.$server_url+'getRespuestas/' + id_evalRevisar)\r\n                                .then(function (response) {\r\n                                    var pregOpcion = response.data.items;\r\n                                    if (pregOpcion === undefined) {\r\n                                        me.$vs.notify({\r\n                                            text: 'Esta evaluación aun no tiene preguntas asignadas',\r\n                                            color: 'warning',\r\n                                            iconPack: 'feather'\r\n                                        })\r\n                                        me.$vs.loading.close()\r\n                                        return\r\n                                    }\r\n\r\n                                    if (previsualizar_eval == 1) {\r\n                                        me.verPreguntasEvaluacionGrupos();\r\n                                        me.iniciar();\r\n                                    } else {\r\n\r\n                                        me.verEvalEstudiante();\r\n                                        me.iniciar();\r\n                                    }\r\n                                })\r\n                                .catch(function (error) {\r\n                                    console.log(error);\r\n                                })\r\n                            } else {\r\n                                alert('No existen preguntas para esta evaluación');\r\n                                //window.location.href = this.urlOrigen;\r\n                            }\r\n                        })\r\n                        .catch(function (error) {\r\n                            console.log(error);\r\n                        })\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n\r\n\r\n\r\n        },\r\n        getEvaluacion(item) {\r\n            let me = this\r\n            var formData = new FormData();\r\n            if (me.usuario.id_group === 4) {\r\n                formData.append('estudiante', me.usuario.idusuario);\r\n            } else {\r\n                formData.append('estudiante', me.estudianteSelected.id);\r\n            }\r\n            formData.append('evaluacion', me.id_evalRevisar);\r\n            me.$http.post(this.$server_url+`verifRespEvaluacion`, formData).then(res => {\r\n                if (res.data === 0) {\r\n                    me.volverActivo = true\r\n                } else {\r\n                    me.volverActivo = false\r\n                    me.calificacionObtenida = (res.data[0].calificacion).toFixed(2)\r\n                    localStorage.calificacionImprimir = me.calificacionObtenida +'/'+ me.evaluaciones[0].puntos\r\n                }\r\n                me.$vs.loading.close()\r\n            })\r\n        },\r\n        iniciar() {\r\n            let me = this\r\n            if (me.preguntas.items === undefined) {\r\n                console.log();\r\n            } else {\r\n                me.iniciarActivo = true;\r\n                for (let j = 1; j <= me.preguntas.items.length; j++) {\r\n                    document.getElementById(\"contenPreg\" + j).style.display = \"none\";\r\n                }\r\n                me.verbtniniciar = false;\r\n                document.getElementById(\"contenPreg1\").style.display = \"block\"; ///muestra la primera pregunta\r\n            }\r\n            me.$vs.loading.close()\r\n        },\r\n        verPreguntaSelec(index) {\r\n            let me = this\r\n            for (let i = (me.preguntas.items.length + 1); i <= (me.respuestasEscritas.length + me.preguntas.items.length); i++) {\r\n                document.getElementById(\"contenPregEscr\" + i).style.display = \"none\";\r\n            }\r\n\r\n            for (let j = 1; j <= me.preguntas.items.length; j++) {\r\n                document.getElementById(\"contenPreg\" + j).style.display = \"none\";\r\n            }\r\n            try{\r\n                document.getElementById(\"contenPreg\" + (index + 1)).style.display = \"block\";\r\n            }catch (error){\r\n\r\n            }\r\n\r\n        },\r\n        verEvalEstudiante() {\r\n            let me = this;\r\n            if (me.estudianteSelected.grupo === undefined) {\r\n                me.$vs.notify({\r\n                    text: 'Ningún estudiante ha respondido esta evaluación todavía.',\r\n                    color: 'warning',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-alert-triangle'\r\n                })\r\n                return;\r\n            }\r\n            me.grupo = me.estudianteSelected.grupo;\r\n            var estudiante;\r\n            if (me.usuario.id_group === 4) {\r\n                me.grupo = localStorage.getItem(\"grupo_estudiante\")\r\n                estudiante = me.usuario.idusuario\r\n                localStorage.nombresImprimir = me.usuario.nombres + ' ' + me.usuario.apellidos\r\n            } else {\r\n                estudiante = me.estudianteSelected.id\r\n                localStorage.nombresImprimir = me.estudianteSelected.label\r\n            }\r\n\r\n            if( estudiante===undefined ){\r\n                console.log('no existen estudiantes');\r\n            }else{\r\n                let formData = new FormData();\r\n                localStorage.grupoevalImprimir = me.grupo\r\n                localStorage.estudianteEvalImprimir = estudiante\r\n                formData.append('grupo', me.grupo);\r\n                formData.append('evaluacion', me.id_evalRevisar);\r\n                formData.append('estudiante', estudiante);\r\n                me.$vs.loading()\r\n                me.$http.post(this.$server_url+'pregEvaluacionEstudiante', formData)\r\n                .then(function (response) {\r\n                    if (response.data.length === 0) {\r\n                        me.preguntasPendientesRevision=[];\r\n                        me.preguntas=[];\r\n                        me.calificacionObtenida=0;\r\n                        me.$vs.loading.close()\r\n                        me.$vs.notify({\r\n                            text: 'El estudiante seleccionado no ha resuelto la evaluación',\r\n                            color: 'warning',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-alert-triangle'\r\n                        })\r\n                    } else {\r\n                        me.preguntasPendientesRevision=[];\r\n                        me.calificacionObtenida = '';\r\n                        me.preguntas = response.data;\r\n                        me.getEvaluacion(me.id_evalRevisar);\r\n                        me.currentx = 1;\r\n\r\n                        var resps = []\r\n                        var respString = []\r\n                        for (var i = 0; i < response.data.items.length; i++) {\r\n                            respString = (response.data.items[i].respuesta).split(',')\r\n                            for (var j = 0; j < respString.length; j++) {\r\n                                resps.push(parseInt(respString[j]))\r\n                            }\r\n                            respString = []\r\n                        }\r\n                        me.opcionesSelec = resps;\r\n\r\n\r\n                        for (var i = 0; i < response.data.items.length; i++) {\r\n                            if( response.data.items[i].id_tipo_pregunta === 6 || response.data.items[i].id_tipo_pregunta === 2 ){\r\n                                me.preguntasPendientesRevision.push(i)\r\n                            }\r\n                        }\r\n\r\n                        me.$vs.loading.close()\r\n                    }\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error)\r\n                })\r\n            }\r\n\r\n        },\r\n        verPreguntasEvaluacionGrupos() {\r\n            let me = this\r\n            let formData = new FormData();\r\n            formData.append('grupo', me.radios1);\r\n            formData.append('evaluacion', me.id_evalRevisar);\r\n            me.$http.post(this.$server_url+`pregEvaluacionGrupo`, formData).then(res => {\r\n                if (res.data.length === 0) {\r\n                    // me.volverActivo=true\r\n                    me.$vs.loading.close()\r\n                } else {\r\n                    me.preguntas = res.data;\r\n                    me.currentx = 1;\r\n                }\r\n            })\r\n        },\r\n        mostrarTodo() {\r\n            let me = this\r\n            me.vertodo = true;\r\n            if (me.preguntas.items === undefined) {\r\n                console.log();\r\n            } else {\r\n                for (let j = 1; j <= me.preguntas.items.length; j++) {\r\n                    document.getElementById(\"contenPreg\" + j).style.display = \"block\";\r\n                }\r\n            }\r\n\r\n            for (let j = (me.preguntas.items.length + 1); j <= (me.respuestasEscritas.length + me.preguntas.items.length); j++) {\r\n                document.getElementById(\"contenPregEscr\" + j).style.display = \"block\";\r\n            }\r\n\r\n        },\r\n        calificarManual(puntaje, id_respuesta) {\r\n            let me = this\r\n            me.calificacionObtenida = (parseFloat(me.calificacionManual) + (parseFloat(me.calificacionObtenida) - parseFloat(puntaje))).toFixed(2);\r\n            me.preguntasPendientesRevision=[]\r\n            let formData = new FormData();\r\n            formData.append('estudiante', me.estudianteSelected.id);\r\n            formData.append('calificacion', me.calificacionObtenida);\r\n            formData.append('evaluacion', me.id_evalRevisar);\r\n            formData.append('puntaje', me.calificacionManual);\r\n            formData.append('id_respuesta', id_respuesta);\r\n\r\n            me.$http.post(this.$server_url+`modificarEvaluacion`, formData).then(res => {\r\n                me.verEvalEstudiante()\r\n                me.$vs.notify({\r\n                    text: 'Calificación guardada correctamente',\r\n                    color: 'success',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-check'\r\n                })\r\n            })\r\n            me.calificacionManual = 0;\r\n        },\r\n        imprimirEval(){\r\n            let me = this\r\n            me.mostrarTodo()\r\n            var ficha = document.getElementById('seccionImprimir');\r\n            window.print();\r\n            /*var ficha = document.getElementById('seccionImprimir');\r\n            var ventimp = window.open(' ', 'popimpr');\r\n            ventimp.document.write( ficha.innerHTML );\r\n            ventimp.document.close();\r\n            ventimp.print( );\r\n            ventimp.close();*/\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n.inputRespuesta {\r\n    height: 80px;\r\n    border-radius: 5px;\r\n    border: 1px solid #d5d5d5;\r\n    font-size: 18px;\r\n    padding: 5px 10px 5px 10px;\r\n    resize: vertical;\r\n}\r\n\r\n.altura{\r\n    max-height: 350px;\r\n}\r\n</style>\r\n"],"mappings":";AA2JA,OAAAA,SAAA;AACA;AACA,OAAAC,GAAA;AACA,OAAAC,KAAA;AACA,OAAAC,OAAA;AACA,OAAAC,MAAA;AACA,OAAAC,CAAA;AACA,OAAAC,SAAA;AACA,IAAAC,WAAA;AACA,IAAAC,CAAA;AACA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,SAAA;MACAC,QAAA;QACAC,WAAA;QACAC,OAAA;QACAC,SAAA;QACAC,OAAA;QACAC,OAAA;QACAC,OAAA;QACAC,YAAA;QACAC,aAAA;QACAC,WAAA;QACAC,WAAA;QACAC,WAAA;MACA;MACAC,YAAA;MACAC,UAAA;QACAC,MAAA;QACAC,UAAA;QACAd,WAAA;QACAe,YAAA;QACAC,SAAA;QACAC,MAAA;QACAC,QAAA;QACAC,iBAAA;MACA;MACAC,OAAA;MACAC,UAAA;MACAC,iBAAA;MACAC,mBAAA;MACAC,aAAA;MACAC,aAAA;MACAC,SAAA;MACAC,aAAA;MACAC,QAAA;MACAC,YAAA;MACAC,aAAA;MACAC,YAAA;MACAC,cAAA;MACAC,kBAAA;MACAC,WAAA;MACAC,OAAA;MACAC,kBAAA;MACAC,cAAA;MACAC,OAAA;MACAC,oBAAA;MACAC,oBAAA;MACAC,kBAAA;MACAC,cAAA;MACAC,KAAA;MACAC,OAAA;MACAC,kBAAA;MACAC,gBAAA;MACAC,2BAAA;IACA;EACA;EACAC,UAAA;IACA,YAAAzD,OAAA;IACAH,SAAA,EAAAA;EACA;EACA6D,OAAA,WAAAA,QAAA;IACA,KAAAjB,cAAA,GAAAkB,YAAA,CAAAC,OAAA;IACA,KAAAf,kBAAA,GAAAc,YAAA,CAAAC,OAAA;IACA,KAAAC,GAAA,CAAAC,OAAA;IACA,KAAAjC,OAAA,GAAAkC,IAAA,CAAAC,KAAA,CAAAL,YAAA,CAAAC,OAAA;IACA,IAAAK,GAAA,GAAAC,QAAA,CAAAC,QAAA,CAAAC,KAAA;IACA,IAAAC,OAAA,GAAAC,MAAA,CAAAJ,QAAA,CAAAK,IAAA;IACA,IAAAC,IAAA,GAAAH,OAAA,CAAAD,KAAA;IACA,KAAAjC,SAAA,GAAAqC,IAAA,YAAAA,IAAA,YAAAA,IAAA;EACA;EACAC,OAAA,WAAAA,QAAA;IACA,KAAAC,WAAA,MAAAjC,cAAA,OAAAI,kBAAA;EACA;EACA8B,OAAA;IACAD,WAAA,WAAAA,YAAAjC,cAAA,EAAAI,kBAAA;MACA,IAAA+B,EAAA;MACA,IAAAC,QAAA,OAAAC,QAAA;MACAD,QAAA,CAAAE,MAAA,WAAApB,YAAA,CAAAqB,MAAA;MACAH,QAAA,CAAAE,MAAA,eAAAtC,cAAA;MAEAmC,EAAA,CAAAK,KAAA,CAAAC,IAAA,MAAAC,WAAA,2BAAAN,QAAA,EACAO,IAAA,WAAAC,QAAA;QACA,IAAAA,QAAA,CAAA/E,IAAA,QAAAgF,SAAA;UACA,IAAAV,EAAA,CAAA/B,kBAAA;YACA+B,EAAA,CAAAf,GAAA,CAAA0B,MAAA;cACAC,IAAA;cACAC,KAAA;cACAC,QAAA;YACA;UACA;UACAd,EAAA,CAAAf,GAAA,CAAAC,OAAA,CAAA6B,KAAA;QACA;UACAf,EAAA,CAAAjC,WAAA,GAAA0C,QAAA,CAAA/E,IAAA;UACAsE,EAAA,CAAAlC,kBAAA;YACAkD,EAAA,EAAAP,QAAA,CAAA/E,IAAA,IAAAsF,EAAA;YACAC,KAAA,EAAAR,QAAA,CAAA/E,IAAA,IAAAuF,KAAA;YACAzC,KAAA,EAAAiC,QAAA,CAAA/E,IAAA,IAAA8C;UACA;UACAwB,EAAA,CAAArB,gBAAA,GAAA8B,QAAA,CAAA/E,IAAA,IAAA8C,KAAA;UACAwB,EAAA,CAAA7C,iBAAA,GAAAsD,QAAA,CAAA/E,IAAA,IAAAuF,KAAA;QACA;QAEAjB,EAAA,CAAAK,KAAA,CAAAa,GAAA,CAAAlB,EAAA,CAAAO,WAAA,6BAAA1C,cAAA,EACA2C,IAAA,WAAAC,QAAA;UACA,IAAAA,QAAA,CAAA/E,IAAA,CAAAyF,MAAA;YACAnB,EAAA,CAAAxD,YAAA,GAAAiE,QAAA,CAAA/E,IAAA;YAEAsE,EAAA,CAAAK,KAAA,CAAAa,GAAA,CAAAlB,EAAA,CAAAO,WAAA,sBAAA1C,cAAA,EACA2C,IAAA,WAAAC,QAAA;cACA,IAAAW,UAAA,GAAAX,QAAA,CAAA/E,IAAA,CAAA2F,KAAA;cACA,IAAAD,UAAA,KAAAV,SAAA;gBACAV,EAAA,CAAAf,GAAA,CAAA0B,MAAA;kBACAC,IAAA;kBACAC,KAAA;kBACAC,QAAA;gBACA;gBACAd,EAAA,CAAAf,GAAA,CAAAC,OAAA,CAAA6B,KAAA;gBACA;cACA;cAEA,IAAA9C,kBAAA;gBACA+B,EAAA,CAAAsB,4BAAA;gBACAtB,EAAA,CAAAuB,OAAA;cACA;gBAEAvB,EAAA,CAAAwB,iBAAA;gBACAxB,EAAA,CAAAuB,OAAA;cACA;YACA,GACAE,KAAA,WAAAC,KAAA;cACAC,OAAA,CAAAC,GAAA,CAAAF,KAAA;YACA;UACA;YACAG,KAAA;YACA;UACA;QACA,GACAJ,KAAA,WAAAC,KAAA;UACAC,OAAA,CAAAC,GAAA,CAAAF,KAAA;QACA;MACA,GACAD,KAAA,WAAAC,KAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,KAAA;MACA;IAIA;IACAI,aAAA,WAAAA,cAAAC,IAAA;MACA,IAAA/B,EAAA;MACA,IAAAC,QAAA,OAAAC,QAAA;MACA,IAAAF,EAAA,CAAA/C,OAAA,CAAA+E,QAAA;QACA/B,QAAA,CAAAE,MAAA,eAAAH,EAAA,CAAA/C,OAAA,CAAAgF,SAAA;MACA;QACAhC,QAAA,CAAAE,MAAA,eAAAH,EAAA,CAAAlC,kBAAA,CAAAkD,EAAA;MACA;MACAf,QAAA,CAAAE,MAAA,eAAAH,EAAA,CAAAnC,cAAA;MACAmC,EAAA,CAAAK,KAAA,CAAAC,IAAA,MAAAC,WAAA,0BAAAN,QAAA,EAAAO,IAAA,WAAA0B,GAAA;QACA,IAAAA,GAAA,CAAAxG,IAAA;UACAsE,EAAA,CAAAtC,YAAA;QACA;UACAsC,EAAA,CAAAtC,YAAA;UACAsC,EAAA,CAAA3B,oBAAA,GAAA6D,GAAA,CAAAxG,IAAA,IAAAkC,YAAA,CAAAuE,OAAA;UACApD,YAAA,CAAAqD,oBAAA,GAAApC,EAAA,CAAA3B,oBAAA,SAAA2B,EAAA,CAAAxD,YAAA,IAAA6F,MAAA;QACA;QACArC,EAAA,CAAAf,GAAA,CAAAC,OAAA,CAAA6B,KAAA;MACA;IACA;IACAQ,OAAA,WAAAA,QAAA;MACA,IAAAvB,EAAA;MACA,IAAAA,EAAA,CAAArE,SAAA,CAAA0F,KAAA,KAAAX,SAAA;QACAiB,OAAA,CAAAC,GAAA;MACA;QACA5B,EAAA,CAAAxC,aAAA;QACA,SAAA8E,CAAA,MAAAA,CAAA,IAAAtC,EAAA,CAAArE,SAAA,CAAA0F,KAAA,CAAAF,MAAA,EAAAmB,CAAA;UACAC,QAAA,CAAAC,cAAA,gBAAAF,CAAA,EAAAG,KAAA,CAAAC,OAAA;QACA;QACA1C,EAAA,CAAArC,aAAA;QACA4E,QAAA,CAAAC,cAAA,gBAAAC,KAAA,CAAAC,OAAA;MACA;MACA1C,EAAA,CAAAf,GAAA,CAAAC,OAAA,CAAA6B,KAAA;IACA;IACA4B,gBAAA,WAAAA,iBAAAC,KAAA;MACA,IAAA5C,EAAA;MACA,SAAA6C,CAAA,GAAA7C,EAAA,CAAArE,SAAA,CAAA0F,KAAA,CAAAF,MAAA,MAAA0B,CAAA,IAAA7C,EAAA,CAAA1B,kBAAA,CAAA6C,MAAA,GAAAnB,EAAA,CAAArE,SAAA,CAAA0F,KAAA,CAAAF,MAAA,EAAA0B,CAAA;QACAN,QAAA,CAAAC,cAAA,oBAAAK,CAAA,EAAAJ,KAAA,CAAAC,OAAA;MACA;MAEA,SAAAJ,CAAA,MAAAA,CAAA,IAAAtC,EAAA,CAAArE,SAAA,CAAA0F,KAAA,CAAAF,MAAA,EAAAmB,CAAA;QACAC,QAAA,CAAAC,cAAA,gBAAAF,CAAA,EAAAG,KAAA,CAAAC,OAAA;MACA;MACA;QACAH,QAAA,CAAAC,cAAA,iBAAAI,KAAA,OAAAH,KAAA,CAAAC,OAAA;MACA,SAAAhB,KAAA,GAEA;IAEA;IACAF,iBAAA,WAAAA,kBAAA;MACA,IAAAxB,EAAA;MACA,IAAAA,EAAA,CAAAlC,kBAAA,CAAAU,KAAA,KAAAkC,SAAA;QACAV,EAAA,CAAAf,GAAA,CAAA0B,MAAA;UACAC,IAAA;UACAC,KAAA;UACAC,QAAA;UACAgC,IAAA;QACA;QACA;MACA;MACA9C,EAAA,CAAAxB,KAAA,GAAAwB,EAAA,CAAAlC,kBAAA,CAAAU,KAAA;MACA,IAAAtB,UAAA;MACA,IAAA8C,EAAA,CAAA/C,OAAA,CAAA+E,QAAA;QACAhC,EAAA,CAAAxB,KAAA,GAAAO,YAAA,CAAAC,OAAA;QACA9B,UAAA,GAAA8C,EAAA,CAAA/C,OAAA,CAAAgF,SAAA;QACAlD,YAAA,CAAAgE,eAAA,GAAA/C,EAAA,CAAA/C,OAAA,CAAA+F,OAAA,SAAAhD,EAAA,CAAA/C,OAAA,CAAAgG,SAAA;MACA;QACA/F,UAAA,GAAA8C,EAAA,CAAAlC,kBAAA,CAAAkD,EAAA;QACAjC,YAAA,CAAAgE,eAAA,GAAA/C,EAAA,CAAAlC,kBAAA,CAAAmD,KAAA;MACA;MAEA,IAAA/D,UAAA,KAAAwD,SAAA;QACAiB,OAAA,CAAAC,GAAA;MACA;QACA,IAAA3B,QAAA,OAAAC,QAAA;QACAnB,YAAA,CAAAmE,iBAAA,GAAAlD,EAAA,CAAAxB,KAAA;QACAO,YAAA,CAAAoE,sBAAA,GAAAjG,UAAA;QACA+C,QAAA,CAAAE,MAAA,UAAAH,EAAA,CAAAxB,KAAA;QACAyB,QAAA,CAAAE,MAAA,eAAAH,EAAA,CAAAnC,cAAA;QACAoC,QAAA,CAAAE,MAAA,eAAAjD,UAAA;QACA8C,EAAA,CAAAf,GAAA,CAAAC,OAAA;QACAc,EAAA,CAAAK,KAAA,CAAAC,IAAA,MAAAC,WAAA,+BAAAN,QAAA,EACAO,IAAA,WAAAC,QAAA;UACA,IAAAA,QAAA,CAAA/E,IAAA,CAAAyF,MAAA;YACAnB,EAAA,CAAApB,2BAAA;YACAoB,EAAA,CAAArE,SAAA;YACAqE,EAAA,CAAA3B,oBAAA;YACA2B,EAAA,CAAAf,GAAA,CAAAC,OAAA,CAAA6B,KAAA;YACAf,EAAA,CAAAf,GAAA,CAAA0B,MAAA;cACAC,IAAA;cACAC,KAAA;cACAC,QAAA;cACAgC,IAAA;YACA;UACA;YACA9C,EAAA,CAAApB,2BAAA;YACAoB,EAAA,CAAA3B,oBAAA;YACA2B,EAAA,CAAArE,SAAA,GAAA8E,QAAA,CAAA/E,IAAA;YACAsE,EAAA,CAAA8B,aAAA,CAAA9B,EAAA,CAAAnC,cAAA;YACAmC,EAAA,CAAAvC,QAAA;YAEA,IAAA2F,KAAA;YACA,IAAAC,UAAA;YACA,SAAAR,CAAA,MAAAA,CAAA,GAAApC,QAAA,CAAA/E,IAAA,CAAA2F,KAAA,CAAAF,MAAA,EAAA0B,CAAA;cACAQ,UAAA,GAAA5C,QAAA,CAAA/E,IAAA,CAAA2F,KAAA,CAAAwB,CAAA,EAAA9G,SAAA,CAAAyD,KAAA;cACA,SAAA8C,CAAA,MAAAA,CAAA,GAAAe,UAAA,CAAAlC,MAAA,EAAAmB,CAAA;gBACAc,KAAA,CAAAE,IAAA,CAAAC,QAAA,CAAAF,UAAA,CAAAf,CAAA;cACA;cACAe,UAAA;YACA;YACArD,EAAA,CAAA3C,aAAA,GAAA+F,KAAA;YAGA,SAAAP,CAAA,MAAAA,CAAA,GAAApC,QAAA,CAAA/E,IAAA,CAAA2F,KAAA,CAAAF,MAAA,EAAA0B,CAAA;cACA,IAAApC,QAAA,CAAA/E,IAAA,CAAA2F,KAAA,CAAAwB,CAAA,EAAAW,gBAAA,UAAA/C,QAAA,CAAA/E,IAAA,CAAA2F,KAAA,CAAAwB,CAAA,EAAAW,gBAAA;gBACAxD,EAAA,CAAApB,2BAAA,CAAA0E,IAAA,CAAAT,CAAA;cACA;YACA;YAEA7C,EAAA,CAAAf,GAAA,CAAAC,OAAA,CAAA6B,KAAA;UACA;QACA,GACAU,KAAA,WAAAC,KAAA;UACAC,OAAA,CAAAC,GAAA,CAAAF,KAAA;QACA;MACA;IAEA;IACAJ,4BAAA,WAAAA,6BAAA;MACA,IAAAtB,EAAA;MACA,IAAAC,QAAA,OAAAC,QAAA;MACAD,QAAA,CAAAE,MAAA,UAAAH,EAAA,CAAA7B,OAAA;MACA8B,QAAA,CAAAE,MAAA,eAAAH,EAAA,CAAAnC,cAAA;MACAmC,EAAA,CAAAK,KAAA,CAAAC,IAAA,MAAAC,WAAA,0BAAAN,QAAA,EAAAO,IAAA,WAAA0B,GAAA;QACA,IAAAA,GAAA,CAAAxG,IAAA,CAAAyF,MAAA;UACA;UACAnB,EAAA,CAAAf,GAAA,CAAAC,OAAA,CAAA6B,KAAA;QACA;UACAf,EAAA,CAAArE,SAAA,GAAAuG,GAAA,CAAAxG,IAAA;UACAsE,EAAA,CAAAvC,QAAA;QACA;MACA;IACA;IACAgG,WAAA,WAAAA,YAAA;MACA,IAAAzD,EAAA;MACAA,EAAA,CAAAvB,OAAA;MACA,IAAAuB,EAAA,CAAArE,SAAA,CAAA0F,KAAA,KAAAX,SAAA;QACAiB,OAAA,CAAAC,GAAA;MACA;QACA,SAAAU,CAAA,MAAAA,CAAA,IAAAtC,EAAA,CAAArE,SAAA,CAAA0F,KAAA,CAAAF,MAAA,EAAAmB,CAAA;UACAC,QAAA,CAAAC,cAAA,gBAAAF,CAAA,EAAAG,KAAA,CAAAC,OAAA;QACA;MACA;MAEA,SAAAJ,EAAA,GAAAtC,EAAA,CAAArE,SAAA,CAAA0F,KAAA,CAAAF,MAAA,MAAAmB,EAAA,IAAAtC,EAAA,CAAA1B,kBAAA,CAAA6C,MAAA,GAAAnB,EAAA,CAAArE,SAAA,CAAA0F,KAAA,CAAAF,MAAA,EAAAmB,EAAA;QACAC,QAAA,CAAAC,cAAA,oBAAAF,EAAA,EAAAG,KAAA,CAAAC,OAAA;MACA;IAEA;IACAgB,eAAA,WAAAA,gBAAA1F,OAAA,EAAA2F,YAAA;MACA,IAAA3D,EAAA;MACAA,EAAA,CAAA3B,oBAAA,IAAAuF,UAAA,CAAA5D,EAAA,CAAAtB,kBAAA,KAAAkF,UAAA,CAAA5D,EAAA,CAAA3B,oBAAA,IAAAuF,UAAA,CAAA5F,OAAA,IAAAmE,OAAA;MACAnC,EAAA,CAAApB,2BAAA;MACA,IAAAqB,QAAA,OAAAC,QAAA;MACAD,QAAA,CAAAE,MAAA,eAAAH,EAAA,CAAAlC,kBAAA,CAAAkD,EAAA;MACAf,QAAA,CAAAE,MAAA,iBAAAH,EAAA,CAAA3B,oBAAA;MACA4B,QAAA,CAAAE,MAAA,eAAAH,EAAA,CAAAnC,cAAA;MACAoC,QAAA,CAAAE,MAAA,YAAAH,EAAA,CAAAtB,kBAAA;MACAuB,QAAA,CAAAE,MAAA,iBAAAwD,YAAA;MAEA3D,EAAA,CAAAK,KAAA,CAAAC,IAAA,MAAAC,WAAA,0BAAAN,QAAA,EAAAO,IAAA,WAAA0B,GAAA;QACAlC,EAAA,CAAAwB,iBAAA;QACAxB,EAAA,CAAAf,GAAA,CAAA0B,MAAA;UACAC,IAAA;UACAC,KAAA;UACAC,QAAA;UACAgC,IAAA;QACA;MACA;MACA9C,EAAA,CAAAtB,kBAAA;IACA;IACAmF,YAAA,WAAAA,aAAA;MACA,IAAA7D,EAAA;MACAA,EAAA,CAAAyD,WAAA;MACA,IAAAK,KAAA,GAAAvB,QAAA,CAAAC,cAAA;MACA9C,MAAA,CAAAqE,KAAA;MACA;AACA;AACA;AACA;AACA;AACA;IACA;EACA;AACA","ignoreList":[]}]}