{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\codigos\\components\\utils\\TableCodigosStorage.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\codigos\\components\\utils\\TableCodigosStorage.vue","mtime":1712682815651},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\babel.config.js","mtime":1712682813877},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\.babelrc","mtime":1712682813750},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["export default {\n  data: function data() {\n    return {\n      fileName: null,\n      formats: ['xls', 'xlsx', 'csv', 'txt'],\n      cellAutoWidth: true,\n      selectedFormat: 'xlsx'\n    };\n  },\n  props: {\n    arregloStorage: {\n      type: Array,\n      default: []\n    }\n  },\n  methods: {\n    //para limipiar los campos del excel\n    clearFields: function clearFields() {\n      this.fileName = '';\n      this.cellAutoWidth = true;\n      this.selectedFormat = 'xls';\n    },\n    //metodo par descargar el excel\n    exportToExcel: function exportToExcel() {\n      var _this = this;\n      var headerTitle = ['Código', 'Libro'];\n      var headerVal = ['codigo', 'libro'];\n      var codigoSelectedMayus = this.arregloStorage;\n      for (var i = 0; i < codigoSelectedMayus.length; i++) {\n        for (var key in codigoSelectedMayus[i]) {\n          if (typeof codigoSelectedMayus[i][key] == \"string\") {\n            codigoSelectedMayus[i][key] = codigoSelectedMayus[i][key].toUpperCase();\n          }\n        }\n      }\n      import('@/vendor/Export2Excel').then(function (excel) {\n        var list = codigoSelectedMayus;\n        var data = _this.formatJson(headerVal, list);\n        excel.export_json_to_excel({\n          header: headerTitle,\n          data: data,\n          filename: 'ArchivoCodigos',\n          autoWidth: _this.cellAutoWidth,\n          bookType: _this.selectedFormat\n        });\n        _this.clearFields();\n      });\n    },\n    formatJson: function formatJson(filterVal, jsonData) {\n      return jsonData.map(function (v) {\n        return filterVal.map(function (j) {\n          return v[j];\n        });\n      });\n    }\n  }\n};",{"version":3,"names":["data","fileName","formats","cellAutoWidth","selectedFormat","props","arregloStorage","type","Array","default","methods","clearFields","exportToExcel","_this","headerTitle","headerVal","codigoSelectedMayus","i","length","key","toUpperCase","then","excel","list","formatJson","export_json_to_excel","header","filename","autoWidth","bookType","filterVal","jsonData","map","v","j"],"sources":["src/views/codigos/components/utils/TableCodigosStorage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <vs-table max-items=\"10\" search pagination :data=\"arregloStorage\">\r\n      <template slot=\"header\">\r\n          <vs-chip  color=\"primary\">Cantidad: <b> {{ arregloStorage.length }}</b></vs-chip>\r\n          <p @click=\"exportToExcel()\" class=\"ml-2 cursor-pointer\"><vs-chip color=\"success\" transparent><ion-icon name=\"download-outline\" style=\"font-size: 20px;position: relative;top:-3px;\"></ion-icon> Exportar</vs-chip></p>\r\n      </template>\r\n      <template slot=\"thead\">\r\n        <vs-th>Libro</vs-th>\r\n        <vs-th>Código</vs-th>\r\n        <vs-th>Acciones</vs-th>\r\n      </template>\r\n      <template slot-scope=\"{data}\">\r\n        <vs-tr :data=\"tr\" :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n          <vs-td>\r\n            {{data[indextr].codigo}}<br>\r\n          </vs-td>\r\n          <vs-td>\r\n            {{data[indextr].libro}}<br>\r\n          </vs-td>\r\n          <vs-td>\r\n            <vx-tooltip style=\"display:inline-block\" color=\"warning\" text=\"Eliminar del storage\">\r\n              <vs-button color=\"warning\" type=\"line\" radius icon-pack=\"feather\" icon=\"icon-x\" @click=\"$emit('changeDeleteStorage',tr)\" size=\"large\"></vs-button>\r\n            </vx-tooltip>\r\n          </vs-td>\r\n        </vs-tr>\r\n      </template>\r\n    </vs-table>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default{\r\n  data(){\r\n    return{\r\n      fileName: null,\r\n      formats: ['xls', 'xlsx', 'csv', 'txt'],\r\n      cellAutoWidth: true,\r\n      selectedFormat: 'xlsx',\r\n    }\r\n  },\r\n  props:{\r\n    arregloStorage:{\r\n      type:Array,\r\n      default:[]\r\n    }\r\n  },\r\n  methods:{\r\n    //para limipiar los campos del excel\r\n    clearFields() {\r\n      this.fileName = ''\r\n      this.cellAutoWidth = true\r\n      this.selectedFormat = 'xls'\r\n    },\r\n    //metodo par descargar el excel\r\n    exportToExcel() {\r\n      let headerTitle = ['Código','Libro'];\r\n      let headerVal = ['codigo','libro'];\r\n      let codigoSelectedMayus = this.arregloStorage\r\n      for (var i = 0; i < codigoSelectedMayus.length; i++) {\r\n        for (var key in codigoSelectedMayus[i]) {\r\n          if (typeof codigoSelectedMayus[i][key] == \"string\") {\r\n              codigoSelectedMayus[i][key] = codigoSelectedMayus[i][key].toUpperCase();\r\n          }\r\n        }\r\n      }\r\n      import('@/vendor/Export2Excel').then(excel => {\r\n        const list = codigoSelectedMayus\r\n        const data = this.formatJson(headerVal, list)\r\n        excel.export_json_to_excel({\r\n          header: headerTitle,\r\n          data,\r\n          filename: 'ArchivoCodigos',\r\n          autoWidth: this.cellAutoWidth,\r\n          bookType: this.selectedFormat\r\n        })\r\n        this.clearFields()\r\n      })\r\n    },\r\n    formatJson(filterVal, jsonData) {\r\n      return jsonData.map(v => filterVal.map(j => {\r\n          return v[j]\r\n      }))\r\n    },\r\n  }\r\n}\r\n</script>\r\n"],"mappings":"AA+BA;EACAA,IAAA,WAAAA,KAAA;IACA;MACAC,QAAA;MACAC,OAAA;MACAC,aAAA;MACAC,cAAA;IACA;EACA;EACAC,KAAA;IACAC,cAAA;MACAC,IAAA,EAAAC,KAAA;MACAC,OAAA;IACA;EACA;EACAC,OAAA;IACA;IACAC,WAAA,WAAAA,YAAA;MACA,KAAAV,QAAA;MACA,KAAAE,aAAA;MACA,KAAAC,cAAA;IACA;IACA;IACAQ,aAAA,WAAAA,cAAA;MAAA,IAAAC,KAAA;MACA,IAAAC,WAAA;MACA,IAAAC,SAAA;MACA,IAAAC,mBAAA,QAAAV,cAAA;MACA,SAAAW,CAAA,MAAAA,CAAA,GAAAD,mBAAA,CAAAE,MAAA,EAAAD,CAAA;QACA,SAAAE,GAAA,IAAAH,mBAAA,CAAAC,CAAA;UACA,WAAAD,mBAAA,CAAAC,CAAA,EAAAE,GAAA;YACAH,mBAAA,CAAAC,CAAA,EAAAE,GAAA,IAAAH,mBAAA,CAAAC,CAAA,EAAAE,GAAA,EAAAC,WAAA;UACA;QACA;MACA;MACA,gCAAAC,IAAA,WAAAC,KAAA;QACA,IAAAC,IAAA,GAAAP,mBAAA;QACA,IAAAhB,IAAA,GAAAa,KAAA,CAAAW,UAAA,CAAAT,SAAA,EAAAQ,IAAA;QACAD,KAAA,CAAAG,oBAAA;UACAC,MAAA,EAAAZ,WAAA;UACAd,IAAA,EAAAA,IAAA;UACA2B,QAAA;UACAC,SAAA,EAAAf,KAAA,CAAAV,aAAA;UACA0B,QAAA,EAAAhB,KAAA,CAAAT;QACA;QACAS,KAAA,CAAAF,WAAA;MACA;IACA;IACAa,UAAA,WAAAA,WAAAM,SAAA,EAAAC,QAAA;MACA,OAAAA,QAAA,CAAAC,GAAA,WAAAC,CAAA;QAAA,OAAAH,SAAA,CAAAE,GAAA,WAAAE,CAAA;UACA,OAAAD,CAAA,CAAAC,CAAA;QACA;MAAA;IACA;EACA;AACA","ignoreList":[]}]}