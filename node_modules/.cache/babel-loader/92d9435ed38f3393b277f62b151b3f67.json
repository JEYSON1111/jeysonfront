{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\usuarios\\GestionEstudiantes\\components\\TableUsuarios.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\usuarios\\GestionEstudiantes\\components\\TableUsuarios.vue","mtime":1712682816638},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\babel.config.js","mtime":1712682813877},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\.babelrc","mtime":1712682813750},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["export default {\n  props: {\n    arregloEstudiantes: {\n      type: Array,\n      defaul: []\n    }\n  },\n  data: function data() {\n    return {\n      //variables para el export a excel\n      activePrompt: false,\n      codigoSelected: [],\n      reportesActivo: 0,\n      fileName: null,\n      formats: ['xls', 'xlsx', 'csv', 'txt'],\n      cellAutoWidth: true,\n      selectedFormat: 'xls'\n    };\n  },\n  methods: {\n    //METODOS PARA EXCEL\n    //para limipiar los campos del excel\n    clearFields: function clearFields() {\n      this.fileName = '';\n      this.cellAutoWidth = true;\n      this.selectedFormat = 'xls';\n    },\n    //metodo par descargar el excel\n    exportToExcel: function exportToExcel() {\n      var _this = this;\n      var headerTitle = ['Estudiante', 'Cédula', 'Institución', 'Email', 'Estado', 'Período asignado'];\n      var headerVal = ['estudiante', 'cedula', 'nombreInstitucion', 'email', 'estado', 'periodo'];\n      var codigoSelectedMayus = this.arregloEstudiantes;\n      for (var i = 0; i < codigoSelectedMayus.length; i++) {\n        for (var key in codigoSelectedMayus[i]) {\n          if (typeof codigoSelectedMayus[i][key] == \"string\") {\n            codigoSelectedMayus[i][key] = codigoSelectedMayus[i][key].toUpperCase();\n          }\n        }\n      }\n      import('@/vendor/Export2Excel').then(function (excel) {\n        var list = codigoSelectedMayus;\n        var data = _this.formatJson(headerVal, list);\n        excel.export_json_to_excel({\n          header: headerTitle,\n          data: data,\n          filename: 'ResultadoEstudiantes',\n          autoWidth: _this.cellAutoWidth,\n          bookType: _this.selectedFormat\n        });\n        _this.clearFields();\n        _this.guardarActivo = '';\n        _this.generarActivo = ' ';\n        _this.textAlertCant = '';\n        _this.cantidad = '';\n        _this.codigoSelected = [];\n      });\n    },\n    formatJson: function formatJson(filterVal, jsonData) {\n      return jsonData.map(function (v) {\n        return filterVal.map(function (j) {\n          return v[j];\n        });\n      });\n    }\n  }\n};",{"version":3,"names":["props","arregloEstudiantes","type","Array","defaul","data","activePrompt","codigoSelected","reportesActivo","fileName","formats","cellAutoWidth","selectedFormat","methods","clearFields","exportToExcel","_this","headerTitle","headerVal","codigoSelectedMayus","i","length","key","toUpperCase","then","excel","list","formatJson","export_json_to_excel","header","filename","autoWidth","bookType","guardarActivo","generarActivo","textAlertCant","cantidad","filterVal","jsonData","map","v","j"],"sources":["src/views/usuarios/GestionEstudiantes/components/TableUsuarios.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <vs-table max-items=\"5\"  pagination :data=\"arregloEstudiantes\" search>\r\n            <template slot=\"header\">\r\n                <div class=\"flex\">\r\n                    <vs-chip transparent class=\"py-3\" color=\"success\">Cantidad: {{ arregloEstudiantes.length }}</vs-chip>\r\n                    <span @click=\"exportToExcel()\" class=\"cursor-pointer\">\r\n                        <vs-chip transparent class=\"py-3\" style=\"font-weight: bold;\" color=\"warning\"><i class=\"fa-solid fa-download\"></i><span class=\"ml-2\">Exportar</span> </vs-chip>\r\n                    </span>\r\n                </div>\r\n            </template>\r\n            <template slot=\"thead\">\r\n                <vs-th style=\"width:60%;\">Datos Personales</vs-th>\r\n                <vs-th style=\"width:20%;\">Institución</vs-th>       \r\n                <vs-th style=\"width:10%;\">Estado</vs-th>  \r\n                <vs-th style=\"width: 10%;\">Período asignado</vs-th>             \r\n            </template>\r\n            <template slot-scope=\"{data}\">\r\n                <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\" >                  \r\n                    <vs-td>\r\n                        <br/>\r\n                        Nombres:\r\n                        <br>        \r\n                        <span style=\"font-weight:600;  \" >\r\n                        {{ tr.estudiante }}<br>\r\n                        </span>\r\n                        Cédula:\r\n                        <br>  \r\n                        <span style=\" font-weight:600; \" >\r\n                        {{ tr.cedula }}<br>\r\n                        </span>\r\n                        Email:\r\n                        <br>  \r\n                        <span style=\" font-weight:600; \" >\r\n                        {{ tr.email }}<br>\r\n                        </span>\r\n                    </vs-td>\r\n                    <vs-td>\r\n                        {{ tr.nombreInstitucion }}\r\n                    </vs-td>\r\n                    <vs-td>\r\n                        <template>\r\n                            <div v-if=\"tr.estado_idEstado == 1\">\r\n                                <vs-chip color=\"primary\">\r\n                                    <p>Activo</p>\r\n                                </vs-chip>\r\n                            </div>\r\n                            <div v-else>\r\n                                <vs-chip color=\"danger\">\r\n                                    <p>Desactivado</p>\r\n                                </vs-chip>\r\n                            </div>\r\n                        </template>               \r\n                    </vs-td>  \r\n                    <vs-td>\r\n                        <div v-if=\"tr.periodo == '' || tr.periodo == null\">\r\n                            No asignado\r\n                        </div>\r\n                        <div v-else>\r\n                            {{ tr.periodo }}\r\n                        </div>\r\n                    </vs-td>           \r\n                </vs-tr>\r\n            </template>\r\n        </vs-table>\r\n    </div>\r\n</template>\r\n<script>\r\nexport default{\r\n    props:{\r\n        arregloEstudiantes:{\r\n            type:Array,\r\n            defaul:[]\r\n        }\r\n    },\r\n    data(){\r\n        return{\r\n            //variables para el export a excel\r\n            activePrompt:false,\r\n            codigoSelected: [],\r\n            reportesActivo: 0,\r\n            fileName: null,\r\n            formats: ['xls', 'xlsx', 'csv', 'txt'],\r\n            cellAutoWidth: true,\r\n            selectedFormat: 'xls',\r\n        }\r\n    },\r\n    methods:{\r\n        //METODOS PARA EXCEL\r\n       //para limipiar los campos del excel\r\n       clearFields() {\r\n            this.fileName = ''\r\n            this.cellAutoWidth = true\r\n            this.selectedFormat = 'xls'\r\n        },\r\n        //metodo par descargar el excel\r\n        exportToExcel() {\r\n            let headerTitle = ['Estudiante','Cédula','Institución',  'Email','Estado','Período asignado'];\r\n            let headerVal = ['estudiante', 'cedula','nombreInstitucion','email','estado','periodo'];  \r\n            let codigoSelectedMayus = this.arregloEstudiantes\r\n            for (var i = 0; i < codigoSelectedMayus.length; i++) {\r\n                for (var key in codigoSelectedMayus[i]) {\r\n                    if (typeof codigoSelectedMayus[i][key] == \"string\") {\r\n                        codigoSelectedMayus[i][key] = codigoSelectedMayus[i][key].toUpperCase();\r\n                    }\r\n                }\r\n            }\r\n            import('@/vendor/Export2Excel').then(excel => {\r\n                const list = codigoSelectedMayus\r\n                const data = this.formatJson(headerVal, list)\r\n                excel.export_json_to_excel({\r\n                    header: headerTitle,\r\n                    data,\r\n                    filename: 'ResultadoEstudiantes',\r\n                    autoWidth: this.cellAutoWidth,\r\n                    bookType: this.selectedFormat\r\n                })\r\n                this.clearFields()\r\n                this.guardarActivo = '';\r\n                this.generarActivo = ' ';\r\n                this.textAlertCant = '';\r\n                this.cantidad = '';\r\n                this.codigoSelected = [];\r\n            })\r\n        },\r\n        formatJson(filterVal, jsonData) {\r\n            return jsonData.map(v => filterVal.map(j => {\r\n                return v[j]\r\n            }))\r\n        },\r\n    }\r\n}\r\n</script>\r\n"],"mappings":"AAoEA;EACAA,KAAA;IACAC,kBAAA;MACAC,IAAA,EAAAC,KAAA;MACAC,MAAA;IACA;EACA;EACAC,IAAA,WAAAA,KAAA;IACA;MACA;MACAC,YAAA;MACAC,cAAA;MACAC,cAAA;MACAC,QAAA;MACAC,OAAA;MACAC,aAAA;MACAC,cAAA;IACA;EACA;EACAC,OAAA;IACA;IACA;IACAC,WAAA,WAAAA,YAAA;MACA,KAAAL,QAAA;MACA,KAAAE,aAAA;MACA,KAAAC,cAAA;IACA;IACA;IACAG,aAAA,WAAAA,cAAA;MAAA,IAAAC,KAAA;MACA,IAAAC,WAAA;MACA,IAAAC,SAAA;MACA,IAAAC,mBAAA,QAAAlB,kBAAA;MACA,SAAAmB,CAAA,MAAAA,CAAA,GAAAD,mBAAA,CAAAE,MAAA,EAAAD,CAAA;QACA,SAAAE,GAAA,IAAAH,mBAAA,CAAAC,CAAA;UACA,WAAAD,mBAAA,CAAAC,CAAA,EAAAE,GAAA;YACAH,mBAAA,CAAAC,CAAA,EAAAE,GAAA,IAAAH,mBAAA,CAAAC,CAAA,EAAAE,GAAA,EAAAC,WAAA;UACA;QACA;MACA;MACA,gCAAAC,IAAA,WAAAC,KAAA;QACA,IAAAC,IAAA,GAAAP,mBAAA;QACA,IAAAd,IAAA,GAAAW,KAAA,CAAAW,UAAA,CAAAT,SAAA,EAAAQ,IAAA;QACAD,KAAA,CAAAG,oBAAA;UACAC,MAAA,EAAAZ,WAAA;UACAZ,IAAA,EAAAA,IAAA;UACAyB,QAAA;UACAC,SAAA,EAAAf,KAAA,CAAAL,aAAA;UACAqB,QAAA,EAAAhB,KAAA,CAAAJ;QACA;QACAI,KAAA,CAAAF,WAAA;QACAE,KAAA,CAAAiB,aAAA;QACAjB,KAAA,CAAAkB,aAAA;QACAlB,KAAA,CAAAmB,aAAA;QACAnB,KAAA,CAAAoB,QAAA;QACApB,KAAA,CAAAT,cAAA;MACA;IACA;IACAoB,UAAA,WAAAA,WAAAU,SAAA,EAAAC,QAAA;MACA,OAAAA,QAAA,CAAAC,GAAA,WAAAC,CAAA;QAAA,OAAAH,SAAA,CAAAE,GAAA,WAAAE,CAAA;UACA,OAAAD,CAAA,CAAAC,CAAA;QACA;MAAA;IACA;EACA;AACA","ignoreList":[]}]}