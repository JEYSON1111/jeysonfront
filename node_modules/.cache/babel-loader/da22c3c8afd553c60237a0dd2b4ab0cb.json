{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\bodega\\devolucionBodega.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\bodega\\devolucionBodega.vue","mtime":1712682815571},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\babel.config.js","mtime":1712682813877},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\.babelrc","mtime":1712682813750},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _defineProperty from \"C:/laragon/www/PRY_NEW_JEYSON/LOCAL/plataformaprolipa_vue/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport ImportExcel from \"./import_excel.vue\";\nimport gestionCodigosListaVue from \"../codigos/components/utils/gestionCodigosLista.vue\";\nexport default {\n  components: {\n    ImportExcel: ImportExcel,\n    gestionCodigosListaVue: gestionCodigosListaVue\n  },\n  data: function data() {\n    return _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({\n      codigosPerdidos: false,\n      modalLiquidacion: false,\n      tableData: [],\n      header: [],\n      sheetName: '',\n      usuario: [],\n      modalConfirm: false,\n      modalErrores: false,\n      errores: [],\n      tipo_selected: '',\n      cedulas_no_encontradas: [],\n      modalCedulas: false,\n      codigosNoCambiados: [],\n      codigoNoExiste: [],\n      codigosConLibro: [],\n      porcentaje: 0,\n      region: '2',\n      busquedaInstitucion: '',\n      nombreInstitucion: '',\n      institucion_id: 0,\n      periodo_id: 0,\n      instituciones: [],\n      cliente: '',\n      observacion: '',\n      codigosConLiquidacion: [],\n      codigoSelected: [],\n      tipo: false,\n      codigo: '',\n      //variables para el export a excel\n      activePrompt: false\n    }, \"codigoSelected\", []), \"reportesActivo\", 0), \"fileName\", null), \"formats\", ['xls', 'xlsx', 'csv', 'txt']), \"cellAutoWidth\", true), \"selectedFormat\", 'xls'), \"codigosSinCodigoUnion\", []), \"popupProblemasCodigosUnion\", false);\n  },\n  created: function created() {\n    this.usuario = JSON.parse(localStorage.getItem('usuario'));\n    this.codigosPerdidos = false;\n  },\n  mounted: function mounted() {\n    var me = this;\n    me.getPeriodo();\n    me.focusInput();\n  },\n  methods: {\n    focusInput: function focusInput() {\n      this.$refs.ingreso.$el.focus();\n    },\n    getPeriodo: function getPeriodo() {\n      var me = this;\n      this.$http.get(this.$server_url + 'getPeriodoInvidivual?region=' + me.region).then(function (res) {\n        me.periodo_id = res.data;\n      }).catch(function (error) {\n        console.log(error + ' error');\n      });\n    },\n    loadDataInTable: function loadDataInTable(_ref2) {\n      var results = _ref2.results,\n        header = _ref2.header,\n        meta = _ref2.meta;\n      this.codigosPerdidos = false;\n      this.header = header;\n      this.tableData = results;\n      this.sheetName = meta.sheetName;\n    },\n    //PARA ASIGNAR UNA INSTITUCION\n    getInstitucion: function getInstitucion() {\n      var me = this;\n      me.instituciones = [];\n      me.nombreInstitucion = \"\";\n      me.institucion_id = \"\";\n      if (me.busquedaInstitucion.length < 5) {\n        me.$vs.notify({\n          text: 'Minimo 5 caracteres de busqueda',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        return false;\n      }\n      me.$vs.loading();\n      this.$http.get(this.$server_url + 'listaInsitucion?busqueda=' + me.busquedaInstitucion).then(function (res) {\n        me.instituciones = res.data;\n        me.$vs.loading.close();\n        if (res.data.message) {\n          me.$vs.notify({\n            text: res.data.message,\n            color: 'success',\n            iconPack: 'feather',\n            icon: 'icon-user'\n          });\n        }\n      }).catch(function (error) {\n        console.log(error + ' error');\n        me.$vs.loading.close();\n      });\n    },\n    asignarInstitucion: function asignarInstitucion(tr) {\n      var me = this;\n      me.nombreInstitucion = tr.nombreInstitucion;\n      me.cliente = tr.nombreInstitucion;\n      me.institucion_id = tr.idInstitucion;\n      me.instituciones = [];\n      me.getPeriodo();\n    },\n    procesarPagos: function procesarPagos() {\n      var me = this;\n      if (me.institucion_id <= 0) {\n        me.$vs.notify({\n          text: 'Seleccione una institución por favor',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        return false;\n      }\n      if (me.cliente.trim() == \"\") {\n        me.$vs.notify({\n          text: 'Debe ingresar un cliente por favor',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        return;\n      }\n      if (me.tipo == false) {\n        if (me.codigo.trim() == \"\") {\n          me.$vs.notify({\n            text: 'Debe ingresar un codigo',\n            color: 'warning',\n            iconPack: 'feather',\n            icon: 'icon-check'\n          });\n          return;\n        }\n      }\n      if (me.observacion == \"\") {\n        me.$vs.notify({\n          text: 'Debe ingresar una observación',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        return;\n      }\n      if (me.observacion.length < 5) {\n        me.$vs.notify({\n          text: 'La observación debe tener al menos 5 caracteres',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        return;\n      }\n      me.$vs.loading();\n      var json_pagos = JSON.stringify(me.tableData);\n      var formData = new FormData();\n      if (me.tipo) {\n        formData.append('data_codigos', json_pagos);\n      } else {\n        formData.append('codigo', me.codigo);\n      }\n      formData.append('id_usuario', me.usuario.idusuario);\n      formData.append('usuario_editor', me.usuario.idusuario);\n      formData.append('cliente', me.cliente);\n      formData.append('observacion', me.observacion);\n      formData.append('institucion_id', me.institucion_id);\n      formData.append('periodo_id', me.periodo_id);\n      this.$http.post(this.$server_url + 'codigos/bodega/devolver', formData).then(function (res) {\n        me.$vs.loading.close();\n        me.$vs.notify({\n          text: 'Códigos procesados exitosamente',\n          color: 'success',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        me.codigo = \"\";\n        me.modalConfirm = false;\n        me.tableData = [];\n        me.codigosPerdidos = true;\n        me.codigosConLiquidacion = res.data.codigosConLiquidacion;\n        if (me.codigosConLiquidacion.length > 0) {\n          me.modalLiquidacion = true;\n        }\n        me.codigosSinCodigoUnion = res.data.codigosSinCodigoUnion;\n        if (me.codigosSinCodigoUnion.length > 0) {\n          me.popupProblemasCodigosUnion = true;\n        }\n        me.codigosNoCambiados = res.data.codigosNoCambiados;\n        me.codigoNoExiste = res.data.codigoNoExiste;\n        me.porcentaje = res.data.cambiados;\n      });\n      me.focusInput().catch(function (error) {\n        me.$vs.notify({\n          text: 'Verifique que la información se haya guardado correctamente.',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-alert-triangle'\n        });\n        me.$vs.loading.close();\n        // setTimeout(function() {location.reload()}, 1000);\n      });\n    },\n    openConfirm: function openConfirm(tipo) {\n      var me = this;\n      me.tipo_selected = tipo;\n      if (!me.tableData[0].codigo) {\n        me.$vs.loading.close();\n        me.$vs.notify({\n          text: 'Corrija el formato del excel y vuelva a intentar.',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-alert-triangle'\n        });\n        return;\n      }\n      me.errores = [];\n      $.each(me.tableData, function (key, value) {\n        if (!value.codigo) {\n          me.errores.push(value);\n        }\n      });\n      if (me.errores.length > 0) {\n        me.modalErrores = true;\n      } else {\n        me.modalConfirm = true;\n      }\n    },\n    recargar: function recargar() {\n      location.reload();\n    },\n    //METODOS PARA EXCEL\n    //para limipiar los campos del excel\n    clearFields: function clearFields() {\n      this.fileName = '';\n      this.cellAutoWidth = true;\n      this.selectedFormat = 'xls';\n    },\n    //metodo par descargar el excel\n    exportToExcel: function exportToExcel() {\n      var _this = this;\n      var headerTitle = ['codigo', 'liquidacion', 'institucion barras', 'periodo barras', 'Mensaje'];\n      var headerVal = ['codigo', 'liquidacion', 'institucionBarra', 'periodo_barras', 'mensaje'];\n      var codigoSelectedMayus = this.codigoSelected;\n      for (var i = 0; i < codigoSelectedMayus.length; i++) {\n        for (var key in codigoSelectedMayus[i]) {\n          if (typeof codigoSelectedMayus[i][key] == \"string\") {\n            codigoSelectedMayus[i][key] = codigoSelectedMayus[i][key].toUpperCase();\n          }\n        }\n      }\n      import('@/vendor/Export2Excel').then(function (excel) {\n        var list = codigoSelectedMayus;\n        var data = _this.formatJson(headerVal, list);\n        excel.export_json_to_excel({\n          header: headerTitle,\n          data: data,\n          filename: _this.fileName,\n          autoWidth: _this.cellAutoWidth,\n          bookType: _this.selectedFormat\n        });\n        _this.clearFields();\n        _this.guardarActivo = '';\n        _this.generarActivo = ' ';\n        _this.textAlertCant = '';\n        _this.cantidad = '';\n        _this.codigoSelected = [];\n      });\n    },\n    formatJson: function formatJson(filterVal, jsonData) {\n      return jsonData.map(function (v) {\n        return filterVal.map(function (j) {\n          return v[j];\n        });\n      });\n    }\n  }\n};",{"version":3,"names":["ImportExcel","gestionCodigosListaVue","components","data","_defineProperty","codigosPerdidos","modalLiquidacion","tableData","header","sheetName","usuario","modalConfirm","modalErrores","errores","tipo_selected","cedulas_no_encontradas","modalCedulas","codigosNoCambiados","codigoNoExiste","codigosConLibro","porcentaje","region","busquedaInstitucion","nombreInstitucion","institucion_id","periodo_id","instituciones","cliente","observacion","codigosConLiquidacion","codigoSelected","tipo","codigo","activePrompt","created","JSON","parse","localStorage","getItem","mounted","me","getPeriodo","focusInput","methods","$refs","ingreso","$el","focus","$http","get","$server_url","then","res","catch","error","console","log","loadDataInTable","_ref2","results","meta","getInstitucion","length","$vs","notify","text","color","iconPack","icon","loading","close","message","asignarInstitucion","tr","idInstitucion","procesarPagos","trim","json_pagos","stringify","formData","FormData","append","idusuario","post","codigosSinCodigoUnion","popupProblemasCodigosUnion","cambiados","openConfirm","$","each","key","value","push","recargar","location","reload","clearFields","fileName","cellAutoWidth","selectedFormat","exportToExcel","_this","headerTitle","headerVal","codigoSelectedMayus","i","toUpperCase","excel","list","formatJson","export_json_to_excel","filename","autoWidth","bookType","guardarActivo","generarActivo","textAlertCant","cantidad","filterVal","jsonData","map","v","j"],"sources":["src/views/bodega/devolucionBodega.vue"],"sourcesContent":["\r\n<template>\r\n    <vs-card>\r\n        <vs-popup title=\"Códigos no encontrados\" :active.sync=\"modalCedulas\" @accept=\"recargar()\" @close=\"recargar()\" @cancel=\"recargar()\"  style=\"padding: 0% !important;\">\r\n            <div class=\"w-full\" style=\"background: rgb(235,147,25); background: linear-gradient(90deg, rgba(235,147,25,1) 28%, rgba(255,166,0,1) 100%); color: white; border-radius: 5px; padding: 10px;\">\r\n            <div class=\"vx-row\">\r\n                <div class=\"vx-col w-full\" align=\"center\">\r\n                <b>Codigos a las que no se aplicaron correctamente</b>\r\n                </div>\r\n            </div>\r\n            <vs-divider></vs-divider>\r\n            <div :key=\"index\" v-for=\"(item, index) in cedulas_no_encontradas\">\r\n                <div class=\"vx-row\">\r\n                    <div class=\"vx-col w-full\" align=\"center\"> <span> {{item}} </span> </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </vs-popup>\r\n        <vs-popup small title=\"Confirmación\" :active.sync=\"modalConfirm\">\r\n            <div class=\"w-full mb-base\" align=\"center\">\r\n            <h4>Está seguro de aplicar estas códigos?</h4>\r\n            </div>\r\n            <div class=\"w-full\" align=\"center\">\r\n            <vs-button class=\"mb-2\" color=\"danger\" type=\"gradient\" @click=\"procesarPagos()\"> Confirmar </vs-button>\r\n            </div>\r\n        </vs-popup>\r\n        <div class=\"mb-6\" align=\"center\">\r\n            <div class=\"vx-col w-full\">\r\n                <p style=\"color:#535DD2;\">\r\n                    <i class=\"fa fa-file\" aria-hidden=\"true\"></i> Devolucion de codigos <span style=\"font-weight: bold;\">(no ingrese más de 1500 registros en una sola carga.)</span>\r\n                </p>\r\n                <div v-if=\"nombreInstitucion.length > 1\">\r\n                    <p style=\"color:red;font-weight:bold;\">Institucion asignada <span>{{nombreInstitucion}}</span></p>\r\n                </div>\r\n            </div>\r\n            <!--FORMULARIO-->\r\n            <div class=\"vx-row mt-5\">\r\n                <div class=\"vx-col sm:w-1/2 w-full mb-2 flex\">\r\n                    <vs-input class=\"w-full\" icon-pack=\"feather\" icon=\"icon-info\" @keyup.enter=\"getInstitucion()\"  v-model=\"busquedaInstitucion\" icon-no-border label=\"Busqueda de la institución\" />\r\n                    <vs-button radius size=\"small\" color=\"warning\" class=\"mt-5 ml-5\" @click=\"getInstitucion()\" type=\"filled\" icon=\"search\"></vs-button>\r\n                </div>\r\n                <div class=\"vx-col sm:w-1/2 w-full mb-2\">\r\n                    <p class=\"font-bold\">Seleccion la region:</p>\r\n                    <ul class=\"leftx mt-3\" style=\"display:flex;flex-direction: row;justify-content: center;\">\r\n                        <li class=\"ml-2\">\r\n                        <vs-radio v-model=\"region\" vs-name=\"radiosRegion\" @input=\"getPeriodo()\" vs-value=\"1\">Sierra</vs-radio>\r\n                        </li>\r\n                        <li class=\"ml-2\">\r\n                        <vs-radio v-model=\"region\" vs-name=\"radiosRegion\" @input=\"getPeriodo()\" vs-value=\"2\">Costa</vs-radio>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <div class=\"vx-row mt-4\">\r\n                <div class=\"vx-col sm:w-1/2 w-full mb-2\">\r\n                    <vs-input class=\"w-full\" icon-pack=\"feather\" icon=\"icon-user\" icon-no-border label=\"Cliente (Obligatorio)\" v-model=\"cliente\" />\r\n                </div>\r\n                <div class=\"vx-col sm:w-1/2 w-full mb-2\">\r\n                    <vs-input class=\"w-full\" icon-pack=\"feather\" icon=\"icon-edit\" icon-no-border label=\"Observación (Obligatorio)\" v-model=\"observacion\" />\r\n                </div>\r\n            </div>\r\n            <!--FIN FORMULARIO-->\r\n            <!--TABLA DE INSTITUCIONES-->\r\n            <vs-row>\r\n                <vs-col vs-type=\"flex\" vs-justify=\"center\"  vs-align=\"center\" vs-w=\"12\">\r\n                    <vs-table stripe max-items=\"50\" v-if=\"instituciones.length > 0\" style=\"width: 100%;\" search pagination :data=\"instituciones\">\r\n                        <template slot=\"header\">\r\n                            <div class=\"vx-row\">\r\n                                <div class=\"vx-col w-full m-3\">\r\n                                    Cantidad: {{instituciones.length}}\r\n                                </div>\r\n                            </div>\r\n                        </template>\r\n                        <template slot=\"thead\">\r\n                            <vs-th sort-key=\"idInstitucion\">#</vs-th>\r\n                            <vs-th sort-key=\"nombreInstitucion\">Institución (asesor)</vs-th>\r\n                            <vs-th sort-key=\"nombre\">Localidad</vs-th>\r\n                            <!-- <vs-th sort-key=\"nombre\">Estado Periodo</vs-th> -->\r\n                            <vs-th sort-key=\"nombre\">Accion</vs-th>\r\n                        </template>\r\n                        <template slot-scope=\"{data}\">\r\n                            <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                                    <vs-td :data=\"data[indextr].idInstitucion \">\r\n                                    {{data[indextr].idInstitucion }}\r\n                                </vs-td>\r\n                                <vs-td :data=\"data[indextr].nombreInstitucion\">\r\n                                    {{data[indextr].nombreInstitucion}}<br>\r\n                                    <div v-if=\"data[indextr].nombre_asesor == null &&  data[indextr].apellido_asesor == null\">\r\n                                        <small> <i style=\"color:red;\">No existe asesor </i></small><br>\r\n                                    </div>\r\n                                    <div v-else>\r\n                                        <small> <i>{{data[indextr].nombre_asesor}} {{data[indextr].apellido_asesor}} </i></small><br>\r\n                                    </div>\r\n                                    <small>{{data[indextr].fecha_registro}} </small>\r\n                                </vs-td>\r\n                                <vs-td :data=\"data[indextr].nombreregion\">\r\n                                    {{data[indextr].nombreregion}} <br>\r\n                                    <small>{{data[indextr].ciudad}}</small>\r\n                                </vs-td>\r\n                                <!-- <vs-td>\r\n                                    <small class=\"\" >{{ tr.periodo }}</small><br>\r\n                                    <vs-chip v-if=\"tr.statusPeriodo == '1'\" color=\"success\" style=\"margin-left:-5px;\">{{ tr.estadoPeriodo }}</vs-chip>\r\n                                    <vs-chip v-else color=\"danger\" style=\"margin-left:-5px;\">{{ tr.estadoPeriodo }}</vs-chip>\r\n                                </vs-td> -->\r\n                                <vs-td>\r\n                                    <vs-button type=\"relief\" @click=\"asignarInstitucion(tr)\">Asignar Institucion</vs-button>\r\n                                </vs-td>\r\n                            </vs-tr>\r\n                        </template>\r\n                    </vs-table>\r\n                </vs-col>\r\n            </vs-row>\r\n            <!--FIN TABLA DE INSTITUCIONES-->\r\n            <vs-switch color=\"success\" v-model=\"tipo\" @input=\"codigosPerdidos = false;\" style=\"width:100px;\" class=\"mt-2\">\r\n                <span slot=\"on\">Por importación</span>\r\n                <span slot=\"off\">Por código</span>\r\n            </vs-switch>\r\n            <div v-if=\"tipo\">\r\n                <vs-divider>Seleccione el archivo</vs-divider>\r\n                <div class=\"flex mb-4\">\r\n                    <div class=\"w-full p-2 bg-gray-400 text-center\">\r\n                        <import-excel :onSuccess=\"loadDataInTable\" class=\"mb-4\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div v-else>\r\n                <div class=\"vx-row mb-6 mt-4\">\r\n                    <div class=\"vx-col sm:w-1/3 w-full\">\r\n                    <span>Ingrese el código</span>\r\n                    </div>\r\n                    <div class=\"vx-col sm:w-2/3 w-full\">\r\n                    <vs-input class=\"w-full\" icon-pack=\"feather\" @keyup.enter=\"procesarPagos()\" active icon=\"icon-code\" ref=\"ingreso\" autofocus icon-no-border v-model=\"codigo\" />\r\n                    </div>\r\n                </div>\r\n                <div class=\"flex\" style=\"justify-content:center;\">\r\n                    <vs-button @click=\"procesarPagos()\" class=\"mr-3 mb-2\">Devolver código</vs-button>\r\n                </div>\r\n            </div>\r\n            <vs-alert v-if=\"tableData.length > 0\" color=\"danger\" class=\"mb-3 mt-2\"  icon-pack=\"feather\" icon=\"icon-alert-triangle\">\r\n                <span style=\"font-size: 20px;\">Excel cargado exitosamente. ¿Está seguro de devolver estos códigos?</span><br>\r\n            </vs-alert>\r\n            <vs-row v-if=\"tableData.length > 0 && tableData.length <= 2000 \" class=\"mt-2\">\r\n                <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\">\r\n                    <vs-button class=\"mb-2\" color=\"danger\"  type=\"relief\" @click=\"openConfirm(0)\"> Devolver códigos </vs-button>\r\n                </vs-col>\r\n            </vs-row>\r\n            <vs-row v-if=\"codigosPerdidos == true\">\r\n              <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\">\r\n                  <vs-alert active=\"true\">\r\n                      Se devolvio  {{ porcentaje }} códigos correctamente\r\n                      <vs-button v-if=\"codigosSinCodigoUnion.length > 0\" @click=\"popupProblemasCodigosUnion = true;\" color=\"primary\" type=\"border\">Mostrar códigos sin código unión</vs-button>\r\n                  </vs-alert>\r\n              </vs-col>\r\n            </vs-row>\r\n            <vs-row v-if=\"codigosPerdidos == true\">\r\n                <vs-card>\r\n                <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"6\">\r\n                    <vs-list>\r\n                        <p>Cantidad <span>{{ codigosNoCambiados.length }}</span></p>\r\n                        <vs-list-header icon=\"supervisor_account\" title=\"Códigos que no se pudieron cambiar\"></vs-list-header>\r\n                        <vs-list-item :key=\"indextr\" v-for=\"(tr, indextr) in codigosNoCambiados\" icon=\"check\" :title=\"tr.codigo\" >\r\n                          <p v-if=\"tr.mensaje !='0'\"> {{ tr.mensaje }}</p>\r\n                        </vs-list-item>\r\n                    </vs-list>\r\n                </vs-col>\r\n                <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"6\">\r\n                    <vs-list>\r\n                        <p>Cantidad <span>{{ codigoNoExiste.length }}</span></p>\r\n                        <vs-list-header icon=\"supervisor_account\" title=\"Códigos que no existen\"></vs-list-header>\r\n                        <vs-list-item :key=\"s\" v-for=\"(tr, s) in codigoNoExiste\" icon=\"check\" :title=\"tr.codigo\" >\r\n                        </vs-list-item>\r\n                    </vs-list>\r\n                </vs-col>\r\n                </vs-card>\r\n            </vs-row>\r\n            <vs-row v-if=\"codigosPerdidos == true\">\r\n                <vs-card v-if=\"codigosConLiquidacion.length > 0\">\r\n                  <div class=\"header\">\r\n                      <span style=\"font-weight:bold;font-size: 20px;color:red;\">Codigos que no se pudieron devolver</span>\r\n                  </div>\r\n                  <vs-table multiple v-model=\"codigoSelected\" stripe pagination max-items=\"25\" search :data=\"codigosConLiquidacion\">\r\n                      <template slot=\"header\" class=\"flex\">\r\n                          <p>Cantidad: {{codigosConLiquidacion.length }}</p>\r\n                          <vs-button color=\"warning\" size=\"small\" class=\"mt-3 ml-3\" style=\"font-size: 16px;\" @click=\"activePrompt=true;\">Exportar</vs-button>\r\n                      </template>\r\n                      <template slot=\"thead\">\r\n                          <vs-th sort-key=\"codigo\">Código</vs-th>\r\n                          <vs-th sort-key=\"estudiante\">Informacion</vs-th>\r\n                          <vs-th sort-key=\"estudiante\">Mensaje</vs-th>\r\n                      </template>\r\n                      <template slot-scope=\"{data}\">\r\n                          <vs-tr :data=\"tr\" :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                              <vs-td :data=\"data[indextr].codigo\">\r\n                                  {{ tr.codigo }}\r\n                              </vs-td>\r\n                              <vs-td :data=\"data[indextr].barrasEstado\">\r\n                                  <p style=\"font-weight:bold;\">institucion:</p>\r\n                                  <span>{{tr.institucionBarra}}</span>\r\n                                  <p style=\"font-weight:bold;\">periodo:</p>\r\n                                  <span>{{tr.periodo_barras}}</span>\r\n                                  <p>\r\n                                      <vs-chip color=\"success\" v-if=\"tr.estado_liquidacion == '1'\">\r\n                                          Por liquidarse\r\n                                      </vs-chip>\r\n                                      <vs-chip color=\"warning\" v-else-if=\"tr.estado_liquidacion == '2'\">\r\n                                          Regalado\r\n                                      </vs-chip>\r\n                                      <vs-chip color=\"danger\" v-else-if=\"tr.estado_liquidacion == '0'\">\r\n                                          Liquidado\r\n                                      </vs-chip>\r\n                                      <vs-chip color=\"danger\" v-else-if=\"tr.estado_liquidacion == '3'\">\r\n                                          DEVUELTO\r\n                                      </vs-chip>\r\n                                  </p>\r\n                              </vs-td>\r\n                              <vs-td>\r\n                                  {{ tr.mensaje }}\r\n                              </vs-td>\r\n                          </vs-tr>\r\n                      </template>\r\n                  </vs-table>\r\n                </vs-card>\r\n            </vs-row>\r\n        </div>\r\n        <vs-popup fullscreen title=\"Códigos con problemas\" :active.sync=\"modalLiquidacion\" >\r\n          <vs-card>\r\n                <div class=\"header\">\r\n                    <span style=\"font-weight:bold;color: red;font-size: 20px;\">Codigos que no se pudieron devolver</span>\r\n                </div>\r\n                <vs-table  stripe pagination max-items=\"25\" search :data=\"codigosConLiquidacion\">\r\n                    <template slot=\"header\" class=\"flex\">\r\n                        <p style=\"font-size: 15px;font-weight: bold;\">Cantidad: {{codigosConLiquidacion.length }}</p>\r\n                    </template>\r\n                    <template slot=\"thead\">\r\n                        <vs-th sort-key=\"codigo\">Código</vs-th>\r\n                        <vs-th sort-key=\"estudiante\">Informacion</vs-th>\r\n                        <vs-th sort-key=\"estudiante\">Mensaje</vs-th>\r\n                    </template>\r\n                    <template slot-scope=\"{data}\">\r\n                        <vs-tr :data=\"tr\" :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                            <vs-td :data=\"data[indextr].codigo\">\r\n                                {{ tr.codigo }}\r\n                            </vs-td>\r\n                            <vs-td :data=\"data[indextr].barrasEstado\">\r\n                                <p style=\"font-weight:bold;\">institucion:</p>\r\n                                <span>{{tr.institucionBarra}}</span>\r\n                                <p style=\"font-weight:bold;\">periodo:</p>\r\n                                <span>{{tr.periodo_barras}}</span>\r\n                                <p>\r\n                                    <vs-chip color=\"success\" v-if=\"tr.estado_liquidacion == '1'\">\r\n                                        Por liquidarse\r\n                                    </vs-chip>\r\n                                    <vs-chip color=\"warning\" v-else-if=\"tr.estado_liquidacion == '2'\">\r\n                                        Regalado\r\n                                    </vs-chip>\r\n                                    <vs-chip color=\"danger\" v-else-if=\"tr.estado_liquidacion == '0'\">\r\n                                        Liquidado\r\n                                    </vs-chip>\r\n                                    <vs-chip color=\"danger\" v-else-if=\"tr.estado_liquidacion == '3'\">\r\n                                        DEVUELTO\r\n                                    </vs-chip>\r\n                                </p>\r\n                            </vs-td>\r\n                            <vs-td>\r\n                                {{ tr.mensaje }}\r\n                            </vs-td>\r\n                        </vs-tr>\r\n                    </template>\r\n                </vs-table>\r\n                </vs-card>\r\n        </vs-popup>\r\n        <vx-card v-if=\"tableData.length && header.length\">\r\n        <vs-table stripe pagination :max-items=\"10\" search :data=\"tableData\">\r\n            <template slot=\"header\">\r\n            <h4>Códigos a Devolver {{tableData.length}}</h4>\r\n            </template>\r\n\r\n            <template slot=\"thead\">\r\n            <vs-th :sort-key=\"heading\" v-for=\"heading in header\" :key=\"heading\">{{ heading }}</vs-th>\r\n            </template>\r\n\r\n            <template slot-scope=\"{data}\">\r\n            <vs-tr :data=\"tr\" :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                <vs-td :data=\"col\" v-for=\"(col, indexcol) in data[indextr]\" :key=\"indexcol + col\">\r\n                {{ col }}\r\n                </vs-td>\r\n            </vs-tr>\r\n            </template>\r\n        </vs-table>\r\n        </vx-card>\r\n         <!--MODAL PARA EXPORTAR A EXCEL-->\r\n    <vs-prompt title=\"Exportar a Excel\" class=\"export-options\" @cancle=\"clearFields\" @accept=\"exportToExcel\" accept-text=\"Exportar\" @close=\"clearFields\" :active.sync=\"activePrompt\">\r\n      <vs-alert class=\"mb-3\" color=\"danger\" icon-pack=\"feather\" icon=\"icon-info\">\r\n          <span>Recuerde <b>seleccionar</b> los códigos que desea exportar.</span>\r\n      </vs-alert>\r\n      <vs-input v-model=\"fileName\" placeholder=\"Ingrese el nombre del archivo\" class=\"w-full\" />\r\n      <v-select v-model=\"selectedFormat\" :options=\"formats\" class=\"my-4\" />\r\n      <div class=\"flex\">\r\n      </div>\r\n    </vs-prompt>\r\n    <!--MODAL PARA MOSTRAR CODIGOS SIN CODIGO UNION-->\r\n    <vs-popup classContent=\"popup-example\" title=\"Códigos sin código Unión\" fullscreen :active.sync=\"popupProblemasCodigosUnion\">\r\n      <gestionCodigosListaVue :arregloCodigos=\"codigosSinCodigoUnion\" openModal=\"0\"/>\r\n    </vs-popup>\r\n    </vs-card>\r\n  </template>\r\n\r\n  <script>\r\n  import ImportExcel from './import_excel.vue'\r\n  import gestionCodigosListaVue from '../codigos/components/utils/gestionCodigosLista.vue';\r\n  export default {\r\n    components: {\r\n      ImportExcel,\r\n      gestionCodigosListaVue,\r\n    },\r\n    data () {\r\n      return {\r\n        codigosPerdidos:false,\r\n        modalLiquidacion:false,\r\n        tableData: [],\r\n        header: [],\r\n        sheetName: '',\r\n        usuario: [],\r\n        modalConfirm: false,\r\n        modalErrores: false,\r\n        errores: [],\r\n        tipo_selected: '',\r\n        cedulas_no_encontradas: [],\r\n        modalCedulas: false,\r\n        codigosNoCambiados:[],\r\n        codigoNoExiste:[],\r\n        codigosConLibro:[],\r\n        porcentaje:0,\r\n        region:'2',\r\n        busquedaInstitucion:'',\r\n        nombreInstitucion:'',\r\n        institucion_id:0,\r\n        periodo_id:0,\r\n        instituciones:[],\r\n        cliente:'',\r\n        observacion:'',\r\n        codigosConLiquidacion:[],\r\n        codigoSelected:[],\r\n        tipo:false,\r\n        codigo:'',\r\n        //variables para el export a excel\r\n        activePrompt:false,\r\n        codigoSelected: [],\r\n        reportesActivo: 0,\r\n        fileName: null,\r\n        formats: ['xls', 'xlsx', 'csv', 'txt'],\r\n        cellAutoWidth: true,\r\n        selectedFormat: 'xls',\r\n        //variables para codigos union\r\n        codigosSinCodigoUnion:[],\r\n        popupProblemasCodigosUnion:false,\r\n        //fin variables para codigos union\r\n      }\r\n    },\r\n    created(){\r\n      this.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n      this.codigosPerdidos = false\r\n    },\r\n    mounted(){\r\n        let me = this;\r\n        me.getPeriodo()\r\n        me.focusInput()\r\n    },\r\n    methods: {\r\n        focusInput() {\r\n            this.$refs.ingreso.$el.focus()\r\n        },\r\n        getPeriodo() {\r\n            let me = this;\r\n            this.$http.get(this.$server_url+'getPeriodoInvidivual?region='+me.region)\r\n                .then(function (res) {\r\n                    me.periodo_id = res.data\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                })\r\n        },\r\n      loadDataInTable ({ results, header, meta }) {\r\n        this.codigosPerdidos = false;\r\n        this.header = header\r\n        this.tableData = results\r\n        this.sheetName = meta.sheetName\r\n      },\r\n       //PARA ASIGNAR UNA INSTITUCION\r\n    getInstitucion() {\r\n      let me = this;\r\n      me.instituciones = [];\r\n      me.nombreInstitucion = \"\";\r\n      me.institucion_id = \"\";\r\n      if(me.busquedaInstitucion.length < 5){\r\n          me.$vs.notify({\r\n          text:'Minimo 5 caracteres de busqueda',\r\n          color:'warning',\r\n          iconPack: 'feather',\r\n          icon:'icon-check'})\r\n\r\n          return false;\r\n      }\r\n      me.$vs.loading()\r\n      this.$http.get(this.$server_url + 'listaInsitucion?busqueda='+me.busquedaInstitucion)\r\n        .then(function (res) {\r\n            me.instituciones = res.data;\r\n            me.$vs.loading.close()\r\n            if(res.data.message){\r\n                me.$vs.notify({\r\n                text: res.data.message,\r\n                color: 'success',\r\n                iconPack: 'feather',\r\n                icon: 'icon-user'\r\n                })\r\n            }\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error + ' error');\r\n            me.$vs.loading.close()\r\n        })\r\n    },\r\n     asignarInstitucion(tr){\r\n       let me = this;\r\n       me.nombreInstitucion = tr.nombreInstitucion\r\n       me.cliente           = tr.nombreInstitucion\r\n       me.institucion_id    = tr.idInstitucion\r\n       me.instituciones     = []\r\n       me.getPeriodo()\r\n     },\r\n      procesarPagos(){\r\n        let me = this\r\n        if(me.institucion_id <= 0){\r\n            me.$vs.notify({\r\n            text:'Seleccione una institución por favor',\r\n            color:'warning',\r\n            iconPack: 'feather',\r\n            icon:'icon-check'})\r\n            return false\r\n        }\r\n        if(me.cliente.trim() == \"\"){\r\n            me.$vs.notify({\r\n            text:'Debe ingresar un cliente por favor',\r\n            color:'warning',\r\n            iconPack: 'feather',\r\n            icon:'icon-check'})\r\n            return\r\n        }\r\n        if(me.tipo == false){\r\n            if(me.codigo.trim() == \"\"){\r\n                me.$vs.notify({\r\n                text:'Debe ingresar un codigo',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n                return\r\n            }\r\n        }\r\n        if(me.observacion == \"\"){\r\n          me.$vs.notify({\r\n          text:'Debe ingresar una observación',\r\n          color:'warning',\r\n          iconPack: 'feather',\r\n          icon:'icon-check'})\r\n          return\r\n        }\r\n        if(me.observacion.length < 5){\r\n          me.$vs.notify({\r\n          text:'La observación debe tener al menos 5 caracteres',\r\n          color:'warning',\r\n          iconPack: 'feather',\r\n          icon:'icon-check'})\r\n          return\r\n        }\r\n        me.$vs.loading()\r\n        let json_pagos = JSON.stringify(me.tableData)\r\n        let formData = new FormData();\r\n        if(me.tipo){\r\n            formData.append('data_codigos', json_pagos);\r\n        }else{\r\n            formData.append('codigo',me.codigo)\r\n        }\r\n        formData.append('id_usuario', me.usuario.idusuario);\r\n        formData.append('usuario_editor', me.usuario.idusuario);\r\n        formData.append('cliente', me.cliente);\r\n        formData.append('observacion', me.observacion);\r\n        formData.append('institucion_id', me.institucion_id);\r\n        formData.append('periodo_id', me.periodo_id)\r\n        this.$http.post(this.$server_url+'codigos/bodega/devolver', formData)\r\n        .then(res => {\r\n            me.$vs.loading.close()\r\n            me.$vs.notify({\r\n            text:'Códigos procesados exitosamente',\r\n            color:'success',\r\n            iconPack: 'feather',\r\n            icon:'icon-check'})\r\n            me.codigo = \"\"\r\n            me.modalConfirm = false\r\n            me.tableData = []\r\n            me.codigosPerdidos = true\r\n            me.codigosConLiquidacion = res.data.codigosConLiquidacion\r\n            if(me.codigosConLiquidacion.length > 0){\r\n            me.modalLiquidacion = true\r\n            }\r\n            me.codigosSinCodigoUnion  = res.data.codigosSinCodigoUnion\r\n            if(me.codigosSinCodigoUnion.length > 0){\r\n              me.popupProblemasCodigosUnion = true\r\n            }\r\n            me.codigosNoCambiados = res.data.codigosNoCambiados\r\n            me.codigoNoExiste = res.data.codigoNoExiste\r\n            me.porcentaje = res.data.cambiados\r\n        })\r\n            me.focusInput()\r\n\r\n        .catch(function (error) {\r\n            me.$vs.notify({\r\n            text:'Verifique que la información se haya guardado correctamente.',\r\n            color:'warning',\r\n            iconPack: 'feather',\r\n            icon:'icon-alert-triangle'})\r\n            me.$vs.loading.close()\r\n            // setTimeout(function() {location.reload()}, 1000);\r\n        })\r\n      },\r\n      openConfirm(tipo) {\r\n        let me = this\r\n        me.tipo_selected = tipo\r\n        if( !me.tableData[0].codigo){\r\n              me.$vs.loading.close()\r\n              me.$vs.notify({ text:'Corrija el formato del excel y vuelva a intentar.', color:'warning', iconPack: 'feather', icon:'icon-alert-triangle'})\r\n              return\r\n          }\r\n        me.errores = []\r\n        $.each(me.tableData,function(key, value){\r\n          if( !value.codigo){\r\n            me.errores.push(value)\r\n          }\r\n        })\r\n        if( me.errores.length > 0 ){\r\n          me.modalErrores = true\r\n        }else{\r\n          me.modalConfirm = true\r\n        }\r\n      },\r\n      recargar(){\r\n        location.reload()\r\n      },\r\n      //METODOS PARA EXCEL\r\n       //para limipiar los campos del excel\r\n       clearFields() {\r\n            this.fileName = ''\r\n            this.cellAutoWidth = true\r\n            this.selectedFormat = 'xls'\r\n        },\r\n        //metodo par descargar el excel\r\n           exportToExcel() {\r\n            let headerTitle = ['codigo','liquidacion','institucion barras','periodo barras','Mensaje'];\r\n            let headerVal = ['codigo','liquidacion','institucionBarra','periodo_barras','mensaje'];\r\n            let codigoSelectedMayus = this.codigoSelected\r\n            for (var i = 0; i < codigoSelectedMayus.length; i++) {\r\n                for (var key in codigoSelectedMayus[i]) {\r\n                    if (typeof codigoSelectedMayus[i][key] == \"string\") {\r\n                        codigoSelectedMayus[i][key] = codigoSelectedMayus[i][key].toUpperCase();\r\n                    }\r\n                }\r\n            }\r\n            import('@/vendor/Export2Excel').then(excel => {\r\n                const list = codigoSelectedMayus\r\n                const data = this.formatJson(headerVal, list)\r\n                excel.export_json_to_excel({\r\n                    header: headerTitle,\r\n                    data,\r\n                    filename: this.fileName,\r\n                    autoWidth: this.cellAutoWidth,\r\n                    bookType: this.selectedFormat\r\n                })\r\n                this.clearFields()\r\n                this.guardarActivo = '';\r\n                this.generarActivo = ' ';\r\n                this.textAlertCant = '';\r\n                this.cantidad = '';\r\n                this.codigoSelected = [];\r\n            })\r\n        },\r\n        formatJson(filterVal, jsonData) {\r\n            return jsonData.map(v => filterVal.map(j => {\r\n                return v[j]\r\n            }))\r\n        },\r\n\r\n\r\n\r\n    }\r\n  }\r\n  </script>\r\n\r\n  <style scoped>\r\n  .tabla{\r\n    width: 100%;\r\n    margin-top: 10px;\r\n  }\r\n   .tabla {\r\n\r\n    border: 1px solid #D1E5F1;\r\n    padding: 2px;\r\n    border-radius: 5px;\r\n  }\r\n  .th1{\r\n    background-color: #F17F76;\r\n    border-radius: 5px;\r\n    color:white;\r\n  }\r\n  .td1, .th1{\r\n   padding: 10px;\r\n   text-align: center;\r\n   border:none;\r\n  }\r\n  </style>\r\n"],"mappings":"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","ignoreList":[]}]}