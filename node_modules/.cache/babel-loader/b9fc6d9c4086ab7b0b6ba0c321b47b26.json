{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\docentes\\components\\estudianteCurso.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\docentes\\components\\estudianteCurso.vue","mtime":1712682815760},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\babel.config.js","mtime":1712682813877},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\.babelrc","mtime":1712682813750},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["export default {\n  data: function data() {\n    return {\n      idusuario: 0,\n      estudiantes: [],\n      //variables para el export a excel\n      activePrompt: false,\n      codigoSelected: [],\n      reportesActivo: 0,\n      fileName: null,\n      formats: ['xls', 'xlsx', 'csv', 'txt'],\n      cellAutoWidth: true,\n      selectedFormat: 'xls'\n      //fin variables para el export a excel\n    };\n  },\n  props: {\n    setCurso: {\n      type: String,\n      default: \"\"\n    },\n    setNombreAsignatura: {\n      type: String,\n      default: \"\"\n    },\n    setAula: {\n      type: String,\n      default: \"\"\n    }\n  },\n  mounted: function mounted() {\n    var me = this;\n    me.getCursos();\n  },\n  methods: {\n    //para obtener el listado de los estudiantes\n    getCursos: function getCursos() {\n      var me = this;\n      me.$vs.loading();\n      this.$http.get(this.$server_url + 'cursosEstudiante?curso=' + me.setCurso).then(function (res) {\n        me.estudiantes = res.data;\n        me.$vs.loading.close();\n      }).catch(function (error) {\n        console.log(error + ' error');\n        me.$vs.loading.close();\n      });\n    },\n    openConfirm: function openConfirm(tr) {\n      var me = this;\n      me.idusuario = tr.idusuario;\n      console.log(me.setCurso);\n      localStorage.codigo = me.setCurso;\n      this.$vs.dialog({\n        type: 'confirm',\n        color: 'danger',\n        title: \"Confirmar\",\n        text: 'Esta seguro/a de quitar el estudiante del curso',\n        accept: this.quitarEstudiante\n      });\n    },\n    //para bloquear el estudiante\n    //eliminar a un estudiante de un curso\n    quitarEstudiante: function quitarEstudiante() {\n      var me = this;\n      me.$vs.loading();\n      var formData = new FormData();\n      formData.append('idusuario', me.idusuario);\n      formData.append('codigo', localStorage.codigo);\n      this.$http.post(this.$server_url + \"quitarEstudianteDeCurso\", formData).then(function (response) {\n        console.log(response.data);\n        me.$vs.notify({\n          color: 'success',\n          title: 'Correcto',\n          text: 'Estudiante eliminado del curso actual',\n          time: 5000\n        });\n        me.$vs.loading.close();\n        me.getCursos();\n      }).catch(function (error) {\n        me.$vs.notify({\n          color: 'danger',\n          title: 'Error',\n          text: error\n        });\n        me.$vs.loading.close();\n      });\n\n      // this.$http.get(this.$server_url+'cursosEstudiante?bloquear=yes&idusuario='+me.idusuario)\n      //     .then(function (res) {\n      //         me.$vs.loading.close()\n      //         me.getCursos();\n      //     })\n      //     .catch(function (error) {\n      //         console.log(error + ' error');\n      //         me.$vs.loading.close()\n\n      //     })\n    },\n    //METODOS PARA EXCEL\n    //para limipiar los campos del excel\n    clearFields: function clearFields() {\n      this.fileName = '';\n      this.cellAutoWidth = true;\n      this.selectedFormat = 'xls';\n    },\n    //metodo par descargar el excel\n    exportToExcel: function exportToExcel() {\n      var _this = this;\n      var headerTitle = ['Estudiante', 'Cedula', 'institucion', 'ciudad'];\n      var headerVal = ['student', 'cedula', 'nombreInstitucion', 'ciudad'];\n      var codigoSelectedMayus = this.codigoSelected;\n      for (var i = 0; i < codigoSelectedMayus.length; i++) {\n        for (var key in codigoSelectedMayus[i]) {\n          if (typeof codigoSelectedMayus[i][key] == \"string\") {\n            codigoSelectedMayus[i][key] = codigoSelectedMayus[i][key].toUpperCase();\n          }\n        }\n      }\n      import('@/vendor/Export2Excel').then(function (excel) {\n        var list = codigoSelectedMayus;\n        var data = _this.formatJson(headerVal, list);\n        excel.export_json_to_excel({\n          header: headerTitle,\n          data: data,\n          filename: _this.fileName,\n          autoWidth: _this.cellAutoWidth,\n          bookType: _this.selectedFormat\n        });\n        _this.clearFields();\n        _this.guardarActivo = '';\n        _this.generarActivo = ' ';\n        _this.textAlertCant = '';\n        _this.cantidad = '';\n        _this.codigoSelected = [];\n      });\n    },\n    formatJson: function formatJson(filterVal, jsonData) {\n      return jsonData.map(function (v) {\n        return filterVal.map(function (j) {\n          return v[j];\n        });\n      });\n    }\n  }\n};",{"version":3,"names":["data","idusuario","estudiantes","activePrompt","codigoSelected","reportesActivo","fileName","formats","cellAutoWidth","selectedFormat","props","setCurso","type","String","default","setNombreAsignatura","setAula","mounted","me","getCursos","methods","$vs","loading","$http","get","$server_url","then","res","close","catch","error","console","log","openConfirm","tr","localStorage","codigo","dialog","color","title","text","accept","quitarEstudiante","formData","FormData","append","post","response","notify","time","clearFields","exportToExcel","_this","headerTitle","headerVal","codigoSelectedMayus","i","length","key","toUpperCase","excel","list","formatJson","export_json_to_excel","header","filename","autoWidth","bookType","guardarActivo","generarActivo","textAlertCant","cantidad","filterVal","jsonData","map","v","j"],"sources":["src/views/docentes/components/estudianteCurso.vue"],"sourcesContent":["<template>\r\n<div>\r\n    <div class=\"w-full p-2 bg-gray-400 text-left mt-4\">\r\n        <vs-alert active=\"true\" :title=\"'Asignatura '+setNombreAsignatura\">\r\n            <p>Paralelo: <span>{{ setAula  }}</span></p><br>\r\n            <p>Código: <span>{{ setCurso  }}</span></p>\r\n        </vs-alert>\r\n    </div>\r\n    <vs-table multiple v-model=\"codigoSelected\" stripe pagination max-items=\"25\" search :data=\"estudiantes\">\r\n        <template slot=\"header\">\r\n            <div style=\"display:flex;\">\r\n                <vs-button color=\"warning\" size=\"small\" class=\"mr-5\" style=\"font-size: 14px;\" @click=\"activePrompt=true;\">\r\n                    Exportar\r\n                </vs-button>\r\n                <vs-chip color=\"success\" style=\"font-size:12px;\">\r\n                    Total estudiantes: {{estudiantes.length}}\r\n                </vs-chip>\r\n            </div>\r\n        </template>\r\n        <template slot=\"thead\">\r\n            <vs-th sort-key=\"student\">Estudiante</vs-th>\r\n            <vs-th sort-key=\"nombres\">Institución</vs-th>\r\n            <vs-th sort-key=\"contrato\">Acciones</vs-th>\r\n        </template>\r\n        <template slot-scope=\"{data}\">\r\n            <vs-tr :data=\"tr\" :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                <vs-td :data=\"data[indextr].student\">\r\n                    <p style=\"font-weight:bold;\">Estudiante:</p>\r\n                    {{ data[indextr].student }}\r\n                    <p style=\"font-weight:bold;\">Cédula:</p>\r\n                    <span>{{ data[indextr].cedula }}</span><br />\r\n                </vs-td>\r\n                <vs-td :data=\"data[indextr].nombreInstitucion\">\r\n                    <p style=\"font-weight:bold;\">Institución:</p>\r\n                    <p style=\"font-size:12px;letter-spacing:1px;\">{{ data[indextr].nombreInstitucion }}</p>\r\n                    <p style=\"font-weight:bold;\">Ciudad:</p>\r\n                    <span>\r\n                        {{ data[indextr].ciudad }}<br />\r\n                    </span>\r\n                </vs-td>\r\n                <vs-td>\r\n                    <div class=\"flex\">\r\n                        <vs-button color=\"warning\" icon=\"info\" @click=\"openConfirm(tr);\" type=\"border\">No es mi estudiante</vs-button>\r\n                    </div>\r\n                </vs-td>\r\n            </vs-tr>\r\n        </template>\r\n    </vs-table>\r\n    <!--MODAL PARA EXPORTAR A EXCEL-->\r\n    <vs-prompt title=\"Exportar a Excel\" class=\"export-options\" @cancle=\"clearFields\" @accept=\"exportToExcel\" accept-text=\"Exportar\" @close=\"clearFields\" :active.sync=\"activePrompt\">\r\n        <vs-alert class=\"mb-3\" color=\"danger\" icon-pack=\"feather\" icon=\"icon-info\">\r\n            <span>Recuerde <b>seleccionar</b> los códigos que desea exportar.</span>\r\n        </vs-alert>\r\n        <vs-input v-model=\"fileName\" placeholder=\"Ingrese el nombre del archivo\" class=\"w-full\" />\r\n        <v-select v-model=\"selectedFormat\" :options=\"formats\" class=\"my-4\" />\r\n    </vs-prompt>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data() {\r\n        return {\r\n            idusuario: 0,\r\n            estudiantes: [],\r\n            //variables para el export a excel\r\n            activePrompt: false,\r\n            codigoSelected: [],\r\n            reportesActivo: 0,\r\n            fileName: null,\r\n            formats: ['xls', 'xlsx', 'csv', 'txt'],\r\n            cellAutoWidth: true,\r\n            selectedFormat: 'xls',\r\n            //fin variables para el export a excel\r\n\r\n        }\r\n    },\r\n    props: {\r\n        setCurso: {\r\n            type: String,\r\n            default: \"\"\r\n        },\r\n        setNombreAsignatura: {\r\n            type: String,\r\n            default: \"\"\r\n        },\r\n        setAula: {\r\n            type: String,\r\n            default: \"\"\r\n        }\r\n    },\r\n    mounted() {\r\n        let me = this;\r\n        me.getCursos()\r\n    },\r\n    methods: {\r\n        //para obtener el listado de los estudiantes\r\n        getCursos() {\r\n            let me = this;\r\n            me.$vs.loading();\r\n            this.$http.get(this.$server_url + 'cursosEstudiante?curso=' + me.setCurso)\r\n                .then(function (res) {\r\n                    me.estudiantes = res.data\r\n                    me.$vs.loading.close()\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                    me.$vs.loading.close()\r\n\r\n                })\r\n        },\r\n        openConfirm(tr) {\r\n            let me = this;\r\n            me.idusuario = tr.idusuario\r\n            console.log(me.setCurso)\r\n            localStorage.codigo = me.setCurso\r\n            this.$vs.dialog({\r\n                type: 'confirm',\r\n                color: 'danger',\r\n                title: `Confirmar`,\r\n                text: 'Esta seguro/a de quitar el estudiante del curso',\r\n                accept: this.quitarEstudiante\r\n            })\r\n        },\r\n        //para bloquear el estudiante\r\n        //eliminar a un estudiante de un curso\r\n        quitarEstudiante() {\r\n            let me = this;\r\n            me.$vs.loading();\r\n            let formData = new FormData();\r\n            formData.append('idusuario', me.idusuario);\r\n            formData.append('codigo', localStorage.codigo);\r\n            this.$http.post(this.$server_url + \"quitarEstudianteDeCurso\", formData)\r\n                .then(function (response) {\r\n                  console.log(response.data )\r\n                    me.$vs.notify({\r\n                        color: 'success',\r\n                        title: 'Correcto',\r\n                        text: 'Estudiante eliminado del curso actual',\r\n                        time: 5000\r\n                    })\r\n                    me.$vs.loading.close()\r\n                    me.getCursos();\r\n                })\r\n                .catch(function (error) {\r\n                    me.$vs.notify({\r\n                        color: 'danger',\r\n                        title: 'Error',\r\n                        text: error\r\n                    });\r\n                    me.$vs.loading.close()\r\n                })\r\n\r\n            // this.$http.get(this.$server_url+'cursosEstudiante?bloquear=yes&idusuario='+me.idusuario)\r\n            //     .then(function (res) {\r\n            //         me.$vs.loading.close()\r\n            //         me.getCursos();\r\n            //     })\r\n            //     .catch(function (error) {\r\n            //         console.log(error + ' error');\r\n            //         me.$vs.loading.close()\r\n\r\n            //     })\r\n        },\r\n        //METODOS PARA EXCEL\r\n        //para limipiar los campos del excel\r\n        clearFields() {\r\n            this.fileName = ''\r\n            this.cellAutoWidth = true\r\n            this.selectedFormat = 'xls'\r\n        },\r\n        //metodo par descargar el excel\r\n        exportToExcel() {\r\n            let headerTitle = ['Estudiante', 'Cedula', 'institucion', 'ciudad'];\r\n            let headerVal = ['student', 'cedula', 'nombreInstitucion', 'ciudad'];\r\n            let codigoSelectedMayus = this.codigoSelected\r\n            for (var i = 0; i < codigoSelectedMayus.length; i++) {\r\n                for (var key in codigoSelectedMayus[i]) {\r\n                    if (typeof codigoSelectedMayus[i][key] == \"string\") {\r\n                        codigoSelectedMayus[i][key] = codigoSelectedMayus[i][key].toUpperCase();\r\n                    }\r\n                }\r\n            }\r\n            import('@/vendor/Export2Excel').then(excel => {\r\n                const list = codigoSelectedMayus\r\n                const data = this.formatJson(headerVal, list)\r\n                excel.export_json_to_excel({\r\n                    header: headerTitle,\r\n                    data,\r\n                    filename: this.fileName,\r\n                    autoWidth: this.cellAutoWidth,\r\n                    bookType: this.selectedFormat\r\n                })\r\n                this.clearFields()\r\n                this.guardarActivo = '';\r\n                this.generarActivo = ' ';\r\n                this.textAlertCant = '';\r\n                this.cantidad = '';\r\n                this.codigoSelected = [];\r\n            })\r\n        },\r\n        formatJson(filterVal, jsonData) {\r\n            return jsonData.map(v => filterVal.map(j => {\r\n                return v[j]\r\n            }))\r\n        },\r\n    }\r\n}\r\n</script>\r\n"],"mappings":"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","ignoreList":[]}]}