{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\evaluaciones\\TemasComponent.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\evaluaciones\\TemasComponent.vue","mtime":1712682815871},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\babel.config.js","mtime":1712682813877},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\.babelrc","mtime":1712682813750},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find-index\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/laragon/www/PRY_NEW_JEYSON/LOCAL/plataformaprolipa_vue/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport flatPickr from 'vue-flatpickr-component';\nimport 'flatpickr/dist/flatpickr.css';\nimport Vue from 'vue';\nimport axios from 'axios';\nimport vSelect from 'vue-select';\nimport moment from 'moment';\nexport default {\n  data: function data() {\n    return {\n      temas: [],\n      tema: {\n        nombre: '',\n        asignatura: '',\n        unidad: '',\n        clasificacion: ''\n      },\n      temaBuscar: null,\n      asignaturas: [],\n      asignatura: {\n        id: '',\n        label: ''\n      },\n      editarActivo: false,\n      temaSelected: [],\n      asignaturaSelected: {\n        id: '',\n        label: ''\n      },\n      popupAddTema: false,\n      popupEditTema: false,\n      usuario: [],\n      docente: null,\n      unidades: [{\n        id: \"1\",\n        label: \"Unidad 1\"\n      }, {\n        id: \"2\",\n        label: \"Unidad 2\"\n      }, {\n        id: \"3\",\n        label: \"Unidad 3\"\n      }, {\n        id: \"4\",\n        label: \"Unidad 4\"\n      }, {\n        id: \"5\",\n        label: \"Unidad 5\"\n      }, {\n        id: \"6\",\n        label: \"Unidad 6\"\n      }, {\n        id: \"7\",\n        label: \"Unidad 7\"\n      }, {\n        id: \"8\",\n        label: \"Unidad 8\"\n      }, {\n        id: \"9\",\n        label: \"Unidad 9\"\n      }, {\n        id: \"10\",\n        label: \"Unidad 10\"\n      }],\n      unidades_asignatura: [],\n      id_tema: '',\n      itemTemas: [],\n      Filtroasignatura: ''\n    };\n  },\n  components: {\n    'v-select': vSelect,\n    flatPickr: flatPickr\n  },\n  created: function () {\n    var _created = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            this.usuario = JSON.parse(localStorage.getItem('usuario'));\n            this.docente = this.usuario.idusuario;\n            this.verTemas();\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, this);\n    }));\n    function created() {\n      return _created.apply(this, arguments);\n    }\n    return created;\n  }(),\n  methods: {\n    onResize: function onResize() {\n      if (window.innerWidth < 769) this.isMobile = true;else this.isMobile = false;\n    },\n    limpiar: function limpiar() {\n      this.tema.nombre = '';\n      // this.tema.asignatura = '';\n      this.tema.unidad = '';\n    },\n    verTemas: function verTemas() {\n      var _this = this;\n      var me = this;\n      if (localStorage.idasignatura) {\n        this.tema.asignatura = {\n          id: localStorage.idasignatura,\n          label: localStorage.nombreasignatura\n        };\n      }\n      // me.$vs.loading()\n      switch (this.usuario.id_group) {\n        case 1 || 5:\n          // this.$http.get(this.$server_url+'tema').then(res => {\n          //     this.temas = res.data;\n          // }).then(res => {\n          //     this.$vs.loading.close()\n          // }),\n          this.$http.get(this.$server_url + 'asignaturasDoc/0').then(function (res) {\n            _this.asignaturas = res.data;\n          });\n          break;\n        default:\n          this.$http.get(this.$server_url + 'tema/' + this.usuario.idusuario).then(function (res) {\n            _this.temas = res.data;\n          }).then(function (res) {\n            _this.$vs.loading.close();\n          }), this.$http.get(this.$server_url + 'asignaturasCreaDoc/' + this.usuario.idusuario).then(function (res) {\n            _this.asignaturas = res.data;\n          });\n          break;\n      }\n    },\n    filtroTemas: function filtroTemas() {\n      var _this2 = this;\n      var me = this;\n      me.temas = [];\n      if (me.Filtroasignatura == null || me.Filtroasignatura == undefined || me.Filtroasignatura == \"\") {\n        this.$vs.notify({\n          text: 'Debe seleccionar una asignatura para filtrar por favor',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        return;\n      }\n      me.$vs.loading();\n      this.$http.get(this.$server_url + 'tema?byAsignatura=yes&asignatura=' + me.Filtroasignatura.idasignatura).then(function (res) {\n        me.$vs.loading.close();\n        _this2.temas = res.data;\n      }).then(function (res) {\n        _this2.$vs.loading.close();\n      });\n    },\n    agregar: function agregar() {\n      var _this3 = this;\n      //datos que se obtienen de los inputs\n      if (this.tema.nombre.trim() === '' || this.tema.unidad === '') {\n        this.$vs.notify({\n          text: 'Debe completar todos los campos antes de guardar',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        return;\n      }\n      var id_unidad = this.tema.unidad.id;\n      if (this.tema.unidad.id === null) {\n        id_unidad = '';\n      }\n      var num_unidad = this.tema.unidad.unidad;\n      if (this.tema.unidad.unidad === undefined || this.tema.unidad.unidad === null) {\n        // es una unidad no registrada para un tema sin asignatura\n        id_unidad = '';\n        num_unidad = this.tema.unidad.id;\n      }\n      var formData = new FormData();\n      formData.append('nombre', this.tema.nombre);\n      formData.append('asignatura', this.tema.asignatura.id);\n      formData.append('unidad', num_unidad);\n      formData.append('id_unidad', id_unidad);\n      formData.append('clasificacion', this.tema.clasificacion);\n      formData.append('idusuario', this.docente);\n      formData.append('estado', 1);\n      this.$vs.loading();\n      this.$http.post(this.$server_url + 'tema', formData).then(function (res) {\n        _this3.verTemas();\n        _this3.popupAddTema = false;\n        _this3.$vs.loading.close();\n        _this3.$vs.notify({\n          text: 'Tema guardado exitosamente',\n          color: 'success',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n      });\n    },\n    openConfirm: function openConfirm() {\n      this.$vs.dialog({\n        type: 'confirm',\n        color: 'danger',\n        title: \"Confirmar\",\n        text: '¿Está seguro de eliminar este tema y todas las preguntas que contenga?',\n        accept: this.eliminarTema\n      });\n    },\n    getUnidadesAsignatura: function getUnidadesAsignatura() {\n      var me = this;\n      me.unidades_asignatura = [];\n      this.$http.get(this.$server_url + 'unidades_asignatura/' + me.tema.asignatura.id).then(function (res) {\n        if (res.data.length > 0) {\n          me.unidades_asignatura = res.data;\n        } else {\n          me.unidades_asignatura = me.unidades;\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    eliminarTema: function eliminarTema() {\n      var me = this;\n      var formData = new FormData();\n      formData.append('id_tema', me.id_tema);\n      formData.append('idusuario', me.usuario.idusuario);\n      this.$http.post(this.$server_url + 'eliminar_tema', formData).then(function () {\n        me.removeItemFromArr(me.temas, me.itemTemas);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    removeItemFromArr: function removeItemFromArr(arr, item) {\n      var i = arr.indexOf(item);\n      arr.splice(i, 1);\n    },\n    editarFormulario: function editarFormulario(item) {\n      this.asignaturaSelected = {\n        id: item.id_asignatura,\n        label: item.nombreasignatura\n      };\n      this.tema.nombre = item.label; //nombre_tema=label\n      this.tema.asignatura = {\n        id: item.id_asignatura,\n        label: item.nombreasignatura\n      };\n      this.tema.unidad = {\n        id: item.id_unidad,\n        label: 'Unidad ' + item.unidad,\n        unidad: item.unidad\n      };\n      this.tema.id = item.id;\n      this.tema.clasificacion = item.clasificacion;\n      this.editarActivo = true; //activa el form editar\n      this.getUnidadesAsignatura();\n    },\n    editarTema: function editarTema(item) {\n      var _this4 = this;\n      var id_unidad = this.tema.unidad.id;\n      if (this.tema.unidad.id === null) {\n        id_unidad = '';\n      }\n      var num_unidad = this.tema.unidad.unidad;\n      if (this.tema.unidad.unidad === undefined || this.tema.unidad.unidad === null) {\n        // es una unidad no registrada para un tema sin asignatura\n        id_unidad = '';\n        num_unidad = this.tema.unidad.id;\n      }\n      var formData = new FormData();\n      formData.append('id', item.id);\n      formData.append('nombre', this.tema.nombre);\n      formData.append('asignatura', this.tema.asignatura.id);\n      formData.append('unidad', num_unidad);\n      formData.append('id_unidad', id_unidad);\n      formData.append('clasificacion', this.tema.clasificacion);\n      formData.append('idusuario', this.docente);\n      formData.append('estado', 1);\n      this.$vs.loading();\n      this.$http.post(this.$server_url + \"tema\", formData).then(function (res) {\n        var index = _this4.temas.findIndex(function (temaBuscar) {\n          return temaBuscar.id === res.data.id;\n        });\n        _this4.tema[index] = res.data;\n        _this4.verTemas();\n        _this4.editarActivo = false;\n        _this4.popupEditTema = false;\n        _this4.$vs.loading.close();\n        _this4.$vs.notify({\n          text: 'Tema editado exitosamente',\n          color: 'success',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n      });\n    }\n  }\n};",{"version":3,"names":["flatPickr","Vue","axios","vSelect","moment","data","temas","tema","nombre","asignatura","unidad","clasificacion","temaBuscar","asignaturas","id","label","editarActivo","temaSelected","asignaturaSelected","popupAddTema","popupEditTema","usuario","docente","unidades","unidades_asignatura","id_tema","itemTemas","Filtroasignatura","components","created","_created","_asyncToGenerator","regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","JSON","parse","localStorage","getItem","idusuario","verTemas","stop","apply","arguments","methods","onResize","window","innerWidth","isMobile","limpiar","_this","me","idasignatura","nombreasignatura","id_group","$http","get","$server_url","then","res","$vs","loading","close","filtroTemas","_this2","undefined","notify","text","color","iconPack","icon","agregar","_this3","trim","id_unidad","num_unidad","formData","FormData","append","post","openConfirm","dialog","type","title","accept","eliminarTema","getUnidadesAsignatura","length","catch","error","console","log","removeItemFromArr","arr","item","i","indexOf","splice","editarFormulario","id_asignatura","editarTema","_this4","index","findIndex"],"sources":["src/views/evaluaciones/TemasComponent.vue"],"sourcesContent":["<template>\r\n    <div>\r\n\r\n        <!-- Modal Agregar-->\r\n        <div class=\"demo-alignment\">\r\n            <vs-popup classContent=\"popup-example\" title=\"Agregar Tema\" :active.sync=\"popupAddTema\">\r\n                <vs-input class=\"inputx mb-3 w-full\" label=\"Nombre Tema\" v-model=\"tema.nombre\"/>\r\n                Asignatura:\r\n                <v-select class=\"mb-3\" v-model=\"tema.asignatura\" :options=\"asignaturas\" :value=\"asignaturaSelected\" :dir=\"$vs.rtl ? 'rtl' : 'ltr'\" @input=\"getUnidadesAsignatura()\" />\r\n\r\n                Unidad:\r\n                <v-select class=\"mb-3\" v-model=\"tema.unidad\" :options=\"unidades_asignatura\" :dir=\"$vs.rtl ? 'rtl' : 'ltr'\" />\r\n\r\n                <vs-input class=\"inputx mb-6 w-full\" label=\"Destreza/indicador (opcional)\" v-model=\"tema.clasificacion\"/>\r\n\r\n                <vs-button color=\"success\" class=\"w-full mb-3\" type=\"gradient\" @click=\"agregar()\">Guardar</vs-button>\r\n            </vs-popup>\r\n        </div>\r\n        <!----FIN MODAL AGREGAR-->\r\n        <!-- Modal Editar Temas-->\r\n        <div class=\"demo-alignment\">\r\n            <vs-popup classContent=\"popup-example\" title=\"Editar Tema\" :active.sync=\"popupEditTema\">\r\n                <vs-input class=\"inputx mb-3 w-full\" label=\"Nombre Tema\" v-model=\"tema.nombre\"/>\r\n                Asignatura:\r\n                <v-select class=\"mb-3\" v-model=\"tema.asignatura\" :options=\"asignaturas\" :dir=\"$vs.rtl ? 'rtl' : 'ltr'\" @input=\"getUnidadesAsignatura()\" />\r\n                Unidad:\r\n                <v-select class=\"mb-3\" v-model=\"tema.unidad\" :options=\"unidades_asignatura\" :dir=\"$vs.rtl ? 'rtl' : 'ltr'\" />\r\n                <vs-input class=\"inputx mb-6 w-full\" label=\"Clasificación (opcional)\" v-model=\"tema.clasificacion\"/>\r\n                <vs-button color=\"success\" class=\"w-full mb-3\" type=\"gradient\" @click=\"editarTema(tema)\">Editar</vs-button>\r\n            </vs-popup>\r\n        </div>\r\n        <!----FIN MODAL EDITAR---->\r\n        <!--LISTADO DE TEMA-->\r\n        <div align=\"center\" class=\"mt-5\">\r\n            <p >Filtro de temas por asignatura</p>\r\n            <v-select class=\"mb-3\" v-model=\"Filtroasignatura\" :options=\"asignaturas\" :value=\"asignaturaSelected\" :dir=\"$vs.rtl ? 'rtl' : 'ltr'\" @input=\"filtroTemas()\" />\r\n            <vs-divider></vs-divider>\r\n            <vs-table v-model=\"temaSelected\" pagination max-items=\"25\" search :data=\"temas\">\r\n                <template slot=\"header\">\r\n                    Cantidad {{temas.length}}\r\n                    <vs-button  @click=\"limpiar(); popupAddTema=true\" color=\"dark\" size=\"small\" style=\"font-size: 14px;\" type=\"filled\" class=\"ml-2\">Crear tema</vs-button>\r\n                    <vs-button @click=\"$router.push('/bancopreguntas')\" color=\"primary\" size=\"small\" class=\"ml-2\" style=\"font-size: 14px;\" type=\"filled\">Crear preguntas</vs-button>\r\n                </template>\r\n                <template slot=\"thead\">\r\n                    <vs-th sort-key=\"clasificacion\">Destreza</vs-th>\r\n                    <vs-th sort-key=\"pregunta\">Tema</vs-th>\r\n                    <vs-th>Acciones</vs-th>\r\n                </template>\r\n                <template slot-scope=\"{data}\">\r\n                <vs-tr :data=\"tr\" :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                    <vs-td :data=\"data[indextr].clasificacion\">\r\n                        {{ data[indextr].clasificacion }}\r\n                    </vs-td>\r\n                    <vs-td :data=\"data[indextr].nombre_tema\">\r\n                        {{ 'Tema: ' + data[indextr].label }}<br><!--label=nombre_tema-->\r\n                        {{ 'Asignatura: ' + data[indextr].nombreasignatura }}<br>\r\n                        {{ 'Unidad: ' + data[indextr].unidad }}<br>\r\n                    </vs-td>\r\n                    <vs-td :data=\"data[indextr].id\">\r\n                        <vs-button @click=\"editarFormulario(data[indextr]); popupEditTema=true\" color=\"success\" type=\"gradient\" style=\"font-size: 12px; padding: 7px 7px 7px 7px; width: 80px; display: inline-block;\" size=\"small\" v-if=\"usuario.idusuario===data[indextr].idusuario || usuario.id_group===1 || usuario.id_group===5\">editar</vs-button>\r\n                        <vs-button @click=\"id_tema=data[indextr].id; itemTemas=data[indextr]; openConfirm();\" color=\"danger\" type=\"gradient\" style=\"font-size: 12px; padding: 7px 7px 7px 7px; width: 80px; display: inline-block;\" size=\"small\" v-if=\"usuario.idusuario===data[indextr].idusuario || usuario.id_group===1 || usuario.id_group===5\">eliminar</vs-button>\r\n                    </vs-td>\r\n                </vs-tr>\r\n                </template>\r\n            </vs-table>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n    import flatPickr from 'vue-flatpickr-component';\r\n    import 'flatpickr/dist/flatpickr.css';\r\n    import Vue from 'vue'\r\n    import axios from 'axios'\r\n    import vSelect from 'vue-select'\r\n    import moment from 'moment'\r\n    export default {\r\n        data(){\r\n            return {\r\n                temas: [],\r\n                tema: {nombre: '', asignatura: '', unidad: '', clasificacion: ''},\r\n                temaBuscar: null,\r\n                asignaturas: [],\r\n                asignatura: {id: '', label: ''},\r\n                editarActivo: false,\r\n                temaSelected: [],\r\n                asignaturaSelected: {id: '', label: ''},\r\n                popupAddTema: false,\r\n                popupEditTema: false,\r\n                usuario: [],\r\n                docente: null,\r\n                unidades: [\r\n                    {\r\n                    id: \"1\", label: \"Unidad 1\", }, { id: \"2\", label: \"Unidad 2\", }, { id: \"3\", label: \"Unidad 3\", }, { id: \"4\", label: \"Unidad 4\", }, { id: \"5\", label: \"Unidad 5\", }, { id: \"6\", label: \"Unidad 6\", }, { id: \"7\", label: \"Unidad 7\", }, { id: \"8\", label: \"Unidad 8\", }, { id: \"9\", label: \"Unidad 9\", }, { id: \"10\", label: \"Unidad 10\",\r\n                    },\r\n                ],\r\n                unidades_asignatura: [],\r\n                id_tema: '',\r\n                itemTemas: [],\r\n                Filtroasignatura:'',\r\n            }\r\n        },\r\n        components: {\r\n            'v-select': vSelect,\r\n            flatPickr\r\n        },\r\n        async created(){\r\n            this.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n            this.docente = this.usuario.idusuario\r\n            this.verTemas();\r\n        },\r\n        methods: {\r\n            onResize() {\r\n            if (window.innerWidth < 769)\r\n                this.isMobile = true;\r\n            else\r\n                this.isMobile = false;\r\n            },\r\n            limpiar(){\r\n                this.tema.nombre = '';\r\n                // this.tema.asignatura = '';\r\n                this.tema.unidad = '';\r\n            },\r\n            verTemas(){\r\n                let me = this\r\n                if( localStorage.idasignatura ){\r\n                    this.tema.asignatura = {id: localStorage.idasignatura, label: localStorage.nombreasignatura}\r\n                }\r\n                // me.$vs.loading()\r\n                switch (this.usuario.id_group) {\r\n                    case 1 || 5:\r\n                        // this.$http.get(this.$server_url+'tema').then(res => {\r\n                        //     this.temas = res.data;\r\n                        // }).then(res => {\r\n                        //     this.$vs.loading.close()\r\n                        // }),\r\n                        this.$http.get(this.$server_url+'asignaturasDoc/0').then(res => {\r\n                            this.asignaturas = res.data;\r\n                        })\r\n                        break;\r\n                    default:\r\n                        this.$http.get(this.$server_url+'tema/'+this.usuario.idusuario).then(res => {\r\n                            this.temas = res.data;\r\n                        }).then(res => {\r\n                            this.$vs.loading.close()\r\n                        }),\r\n                        this.$http.get(this.$server_url+'asignaturasCreaDoc/'+this.usuario.idusuario).then(res => {\r\n                            this.asignaturas = res.data;\r\n                        })\r\n                        break;\r\n                }\r\n\r\n            },\r\n            filtroTemas(){\r\n                let me = this;\r\n                me.temas = []\r\n                if(me.Filtroasignatura == null || me.Filtroasignatura == undefined || me.Filtroasignatura == \"\"){\r\n                    this.$vs.notify({\r\n                        text:'Debe seleccionar una asignatura para filtrar por favor',\r\n                        color:'warning',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check'})\r\n                    return;\r\n                }\r\n                me.$vs.loading();\r\n                this.$http.get(this.$server_url+'tema?byAsignatura=yes&asignatura='+me.Filtroasignatura.idasignatura).then(res => {\r\n                    me.$vs.loading.close();\r\n                    this.temas = res.data;\r\n                }).then(res => {\r\n                    this.$vs.loading.close()\r\n                });\r\n            },\r\n            agregar(){//datos que se obtienen de los inputs\r\n                if(this.tema.nombre.trim() === '' || this.tema.unidad === ''){\r\n                    this.$vs.notify({\r\n                        text:'Debe completar todos los campos antes de guardar',\r\n                        color:'warning',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check'})\r\n                    return;\r\n                }\r\n                let id_unidad = this.tema.unidad.id\r\n                if( this.tema.unidad.id === null ){\r\n                    id_unidad = ''\r\n                }\r\n                let num_unidad = this.tema.unidad.unidad\r\n                if( this.tema.unidad.unidad === undefined || this.tema.unidad.unidad === null ){\r\n                    // es una unidad no registrada para un tema sin asignatura\r\n                    id_unidad = ''\r\n                    num_unidad = this.tema.unidad.id\r\n                }\r\n                let formData = new FormData();\r\n                    formData.append('nombre', this.tema.nombre);\r\n                    formData.append('asignatura', this.tema.asignatura.id);\r\n                    formData.append('unidad', num_unidad);\r\n                    formData.append('id_unidad', id_unidad);\r\n                    formData.append('clasificacion', this.tema.clasificacion);\r\n                    formData.append('idusuario', this.docente);\r\n                    formData.append('estado', 1);\r\n                this.$vs.loading()\r\n                this.$http.post(this.$server_url+'tema', formData)\r\n                .then(res => {\r\n\r\n                    this.verTemas()\r\n                    this.popupAddTema = false\r\n                    this.$vs.loading.close()\r\n                    this.$vs.notify({\r\n                    text:'Tema guardado exitosamente',\r\n                    color:'success',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check'})\r\n                })\r\n            },\r\n            openConfirm() {\r\n                this.$vs.dialog({\r\n                    type: 'confirm',\r\n                    color: 'danger',\r\n                    title: `Confirmar`,\r\n                    text: '¿Está seguro de eliminar este tema y todas las preguntas que contenga?',\r\n                    accept: this.eliminarTema\r\n                })\r\n            },\r\n            getUnidadesAsignatura(){\r\n                let me = this;\r\n                me.unidades_asignatura = []\r\n                this.$http.get(this.$server_url+'unidades_asignatura/' + me.tema.asignatura.id)\r\n                .then(res => {\r\n                    if( res.data.length > 0 ){\r\n                        me.unidades_asignatura = res.data\r\n                    }else{\r\n                        me.unidades_asignatura = me.unidades\r\n                    }\r\n\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n            },\r\n            eliminarTema(){\r\n                let me = this;\r\n                let formData = new FormData();\r\n                    formData.append('id_tema', me.id_tema);\r\n                    formData.append('idusuario', me.usuario.idusuario);\r\n                this.$http.post(this.$server_url+'eliminar_tema', formData).then(() => {\r\n                    me.removeItemFromArr(me.temas, me.itemTemas)\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n            },\r\n            removeItemFromArr (arr, item) {\r\n                const i = arr.indexOf(item)\r\n                arr.splice(i, 1)\r\n            },\r\n            editarFormulario(item){\r\n                this.asignaturaSelected = {id: item.id_asignatura, label: item.nombreasignatura};\r\n                this.tema.nombre = item.label;//nombre_tema=label\r\n                this.tema.asignatura = {id: item.id_asignatura, label: item.nombreasignatura};\r\n                this.tema.unidad = {id: item.id_unidad, label: 'Unidad '+item.unidad, unidad: item.unidad};\r\n                this.tema.id = item.id;\r\n                this.tema.clasificacion = item.clasificacion;\r\n                this.editarActivo = true;//activa el form editar\r\n                this.getUnidadesAsignatura();\r\n            },\r\n            editarTema(item){\r\n                let id_unidad = this.tema.unidad.id\r\n                if( this.tema.unidad.id === null ){\r\n                    id_unidad = ''\r\n                }\r\n                let num_unidad = this.tema.unidad.unidad\r\n                if( this.tema.unidad.unidad === undefined || this.tema.unidad.unidad === null ){// es una unidad no registrada para un tema sin asignatura\r\n                    id_unidad = ''\r\n                    num_unidad = this.tema.unidad.id\r\n                }\r\n                let formData = new FormData();\r\n                    formData.append('id', item.id);\r\n                    formData.append('nombre', this.tema.nombre);\r\n                    formData.append('asignatura', this.tema.asignatura.id);\r\n                    formData.append('unidad', num_unidad);\r\n                    formData.append('id_unidad', id_unidad);\r\n                    formData.append('clasificacion', this.tema.clasificacion);\r\n                    formData.append('idusuario', this.docente);\r\n                    formData.append('estado', 1);\r\n                this.$vs.loading()\r\n                this.$http.post(this.$server_url+`tema`, formData).then(res => {\r\n                    const index = this.temas.findIndex(\r\n                        temaBuscar => temaBuscar.id === res.data.id)\r\n                    this.tema[index] = res.data;\r\n                    this.verTemas()\r\n                    this.editarActivo = false;\r\n                    this.popupEditTema = false\r\n                    this.$vs.loading.close()\r\n                    this.$vs.notify({\r\n                    text:'Tema editado exitosamente',\r\n                    color:'success',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check'})\r\n\r\n                });\r\n            },\r\n        },\r\n    }\r\n</script>\r\n"],"mappings":"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","ignoreList":[]}]}