{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\codigos\\components\\utils\\RevisionVenta.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\codigos\\components\\utils\\RevisionVenta.vue","mtime":1712682815649},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\babel.config.js","mtime":1712682813877},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\.babelrc","mtime":1712682813750},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"C:/laragon/www/PRY_NEW_JEYSON/LOCAL/plataformaprolipa_vue/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"core-js/modules/es6.number.constructor\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { mapState } from \"vuex\";\nimport gestionCodigosListaVue from \"./gestionCodigosLista.vue\";\nimport RevisionVentaAgrupadoVue from \"./RevisionVentaAgrupado.vue\";\nexport default {\n  data: function data() {\n    return {\n      menu: 0,\n      informacion: [],\n      tmpinformacion: [],\n      codigosNoCambiados: [],\n      arreglocodigosALeidos: [],\n      codigosPerdidos: false,\n      porcentaje: 0,\n      rtipoVenta: 0,\n      periodo_id: 0,\n      periodoDescripcion: '',\n      nombreInstitucion: \"\",\n      institucion_id: 0,\n      totalAleer: 0,\n      groupedData: []\n    };\n  },\n  created: function created() {\n    var me = this;\n    me.usuario = JSON.parse(localStorage.getItem(\"usuario\"));\n  },\n  mounted: function mounted() {\n    var me = this;\n    me.getTipoVenta();\n  },\n  components: {\n    gestionCodigosListaVue: gestionCodigosListaVue,\n    RevisionVentaAgrupadoVue: RevisionVentaAgrupadoVue\n  },\n  props: {\n    pedido: {\n      type: Object,\n      default: {}\n    },\n    showAgrupado: {\n      type: Number,\n      default: 0\n    }\n  },\n  computed: _objectSpread(_objectSpread({}, mapState([\"auth\", 'userRoot', 'susuario', 'userAsesor'])), {}, {\n    sumaTotal: function sumaTotal() {\n      var me = this;\n      var total = me.informacion.length;\n      return total;\n    },\n    SumaVentaDirecta: function SumaVentaDirecta() {\n      var me = this;\n      var datos = me.informacion.filter(function (p) {\n        return p.venta_estado == '1';\n      });\n      var resultado = datos.length;\n      return resultado;\n    },\n    SumaVentaLista: function SumaVentaLista() {\n      var me = this;\n      var datos = me.informacion.filter(function (p) {\n        return p.venta_estado == '2';\n      });\n      var resultado = datos.length;\n      return resultado;\n    },\n    SumaEnviados: function SumaEnviados() {\n      var me = this;\n      //venta directa\n      var datos = me.informacion.filter(function (p) {\n        return p.venta_estado == '1';\n      });\n      var totalVD = datos.length;\n      var datos2 = me.informacion.filter(function (p) {\n        return p.venta_estado == '2';\n      });\n      //venta lista\n      var totalVL = datos2.length;\n      var resultado = totalVD + totalVL;\n      return resultado;\n    },\n    SumaCodigosDevolucion: function SumaCodigosDevolucion() {\n      var me = this;\n      var datos = me.informacion.filter(function (p) {\n        return p.estado_liquidacion == '3';\n      });\n      var resultado = datos.length;\n      return resultado;\n    },\n    sumaCodigosRegalados: function sumaCodigosRegalados() {\n      var me = this;\n      var primerFiltro = me.informacion.filter(function (p) {\n        return p.estado == '1' || p.estado == '0' || p.estado == '' || p.estado == null;\n      });\n      var datos = primerFiltro.filter(function (p) {\n        return p.estado_liquidacion == '2';\n      });\n      var resultado = datos.length;\n      return resultado;\n    },\n    sumaCodigosBloqueados: function sumaCodigosBloqueados() {\n      var me = this;\n      var primerFiltro = me.informacion.filter(function (p) {\n        return p.estado_liquidacion != '3';\n      });\n      var datos = primerFiltro.filter(function (p) {\n        return p.estado == '2';\n      });\n      var resultado = datos.length;\n      return resultado;\n    },\n    sumarCodigosLiquidados: function sumarCodigosLiquidados() {\n      var me = this;\n      var primerFiltro = me.informacion.filter(function (p) {\n        return p.estado == '1' || p.estado == '0' || p.estado == '' || p.estado == null;\n      });\n      var datos = primerFiltro.filter(function (p) {\n        return p.estado_liquidacion == '0';\n      });\n      var resultado = datos.length;\n      return resultado;\n    },\n    sumarCodigosLeidos: function sumarCodigosLeidos() {\n      var me = this;\n      var primerFiltro = me.informacion.filter(function (p) {\n        return (p.estado == '1' || p.estado == '0' || p.estado == '' || p.estado == null) && p.estado_liquidacion == 1;\n      });\n      var datos = primerFiltro.filter(function (p) {\n        return p.bc_estado == '2';\n      });\n      var resultado = datos.length;\n      return resultado;\n    },\n    sumarCodigosNoleidos: function sumarCodigosNoleidos() {\n      var me = this;\n      var primerFiltro = me.informacion.filter(function (p) {\n        return (p.estado == '1' || p.estado == '0' || p.estado == '' || p.estado == null) && p.estado_liquidacion == 1;\n      });\n      var datos = primerFiltro.filter(function (p) {\n        return p.bc_estado == '1';\n      });\n      var resultado = datos.length;\n      return resultado;\n    }\n  }),\n  methods: {\n    getTipoVenta: function getTipoVenta() {\n      var me = this;\n      me.informacion = [];\n      me.tmpinformacion = [];\n      me.nombreInstitucion = me.pedido.nombreInstitucion;\n      me.institucion_id = me.pedido.idInstitucion;\n      me.periodoDescripcion = me.pedido.periodo;\n      me.periodo_id = me.pedido.periodo_id;\n      me.titulo = 'Detalle de venta de ' + me.pedido.nombreInstitucion;\n      me.$vs.loading();\n      this.$http.get(this.$server_url + 'getTipoVenta?institucion_id=' + me.pedido.idInstitucion + '&periodo_id=' + me.pedido.periodo_id).then(function (res) {\n        me.informacion = res.data;\n        var datos = res.data.filter(function (p) {\n          return p.estado_liquidacion != '3' && p.estado_liquidacion != '4' && p.estado != '2';\n        });\n        // Objeto para almacenar los grupos\n        me.groupedData = [];\n        // Itera a través de los elementos del array\n        datos.forEach(function (item) {\n          var libro = item.libro;\n          // Busca si ya existe un objeto con el mismo libro en groupedData\n          var existingGroup = me.groupedData.find(function (group) {\n            return group.libro === libro;\n          });\n          // Si no existe, crea un nuevo objeto y agrégalo a groupedData\n          if (!existingGroup) {\n            me.groupedData.push({\n              libro: libro,\n              cantidad: 1\n            });\n          } else {\n            // Si existe, incrementa la cantidad en el objeto existente\n            existingGroup.cantidad++;\n          }\n        });\n        me.verTipoVenta();\n        me.$vs.loading.close();\n      }).catch(function (error) {\n        console.log(error + ' error');\n        me.$vs.loading.close();\n      });\n    },\n    verTipoVenta: function verTipoVenta() {\n      var me = this;\n      me.tmpinformacion = [];\n      var datos = me.informacion;\n      if (me.rtipoVenta == 0) {\n        me.tmpinformacion = datos;\n        return;\n      }\n      me.tmpinformacion = datos.filter(function (p) {\n        return p.venta_estado == me.rtipoVenta;\n      });\n      me.totalAleer = me.tmpinformacion.filter(function (p) {\n        return (p.estado == '1' || p.estado == '0' || p.estado == '' || p.estado == null) && p.estado_liquidacion == 1 && p.bc_estado == 1;\n      });\n    },\n    cambiarALeidos: function cambiarALeidos() {\n      var me = this;\n      if (me.institucion_id < 1) {\n        me.$vs.notify({\n          text: 'Seleccione una institucion',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        return false;\n      }\n      if (me.periodo_id == null || me.periodo_id == 0 || me.periodo_id == undefined || me.periodoDescripcion == \"\") {\n        me.$vs.notify({\n          text: 'Seleccione una período',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        return false;\n      }\n      if (me.tmpinformacion.length == 0) {\n        me.$vs.notify({\n          text: 'No hay códigos por leer ',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        return false;\n      }\n      //setear valores\n      var datoFilter = me.tmpinformacion.filter(function (p) {\n        return (p.estado == '1' || p.estado == '0' || p.estado == '' || p.estado == null) && p.estado_liquidacion == 1 && p.bc_estado == 1;\n      });\n      if (datoFilter.length == 0) {\n        me.$vs.notify({\n          text: 'No hay códigos por leer ',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        return false;\n      }\n      var sendEnviar = [];\n      me.tmpinformacion.forEach(function (element) {\n        var cal = new Object();\n        cal.codigo = element.codigo;\n        sendEnviar.push(cal);\n      });\n      me.$vs.loading();\n      var json_codigos = JSON.stringify(sendEnviar);\n      var formData = new FormData();\n      formData.append('data_codigos', json_codigos);\n      formData.append('id_usuario', me.usuario.idusuario);\n      formData.append('periodo_id', me.periodo_id);\n      formData.append('institucion_id', me.institucion_id);\n      formData.append('nombreInstitucion', me.nombreInstitucion);\n      formData.append('nombrePeriodo', me.periodoDescripcion);\n      formData.append('venta_estado', me.rtipoVenta);\n      // this.$http.post(this.$server_url+'codigos/leidos/venta_directa', formData)\n      this.$http.post(this.$server_url + 'codigos/importar', formData).then(function (res) {\n        me.$vs.loading.close();\n        if (res.data.status == 0) {\n          me.$vs.notify({\n            text: res.data.message,\n            color: 'success',\n            iconPack: 'feather',\n            icon: 'icon-check'\n          });\n          return false;\n        }\n        me.$vs.notify({\n          text: 'Códigos procesados exitosamente',\n          color: 'success',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        me.codigosPerdidos = true;\n        me.codigosLeidos = res.data.codigosLeidos;\n        me.codigosNoCambiados = res.data.codigosNoCambiados;\n        me.codigoNoExiste = res.data.codigoNoExiste;\n        me.porcentaje = res.data.cambiados;\n        me.getTipoVenta();\n      }).catch(function (error) {\n        me.$vs.notify({\n          text: 'Verifique que la información se haya guardado correctamente.',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-alert-triangle'\n        });\n        me.$vs.loading.close();\n      });\n    }\n  }\n};",{"version":3,"names":["mapState","gestionCodigosListaVue","RevisionVentaAgrupadoVue","data","menu","informacion","tmpinformacion","codigosNoCambiados","arreglocodigosALeidos","codigosPerdidos","porcentaje","rtipoVenta","periodo_id","periodoDescripcion","nombreInstitucion","institucion_id","totalAleer","groupedData","created","me","usuario","JSON","parse","localStorage","getItem","mounted","getTipoVenta","components","props","pedido","type","Object","default","showAgrupado","Number","computed","_objectSpread","sumaTotal","total","length","SumaVentaDirecta","datos","filter","p","venta_estado","resultado","SumaVentaLista","SumaEnviados","totalVD","datos2","totalVL","SumaCodigosDevolucion","estado_liquidacion","sumaCodigosRegalados","primerFiltro","estado","sumaCodigosBloqueados","sumarCodigosLiquidados","sumarCodigosLeidos","bc_estado","sumarCodigosNoleidos","methods","idInstitucion","periodo","titulo","$vs","loading","$http","get","$server_url","then","res","forEach","item","libro","existingGroup","find","group","push","cantidad","verTipoVenta","close","catch","error","console","log","cambiarALeidos","notify","text","color","iconPack","icon","undefined","datoFilter","sendEnviar","element","cal","codigo","json_codigos","stringify","formData","FormData","append","idusuario","post","status","message","codigosLeidos","codigoNoExiste","cambiados"],"sources":["src/views/codigos/components/utils/RevisionVenta.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <vs-tabs :color=\"'#F5B041'\">\r\n      <vs-tab label=\"Detalle de venta\" icon-pack=\"feather\" icon=\"icon-shopping-bag\" @click=\"menu = 0;\">\r\n      </vs-tab>\r\n      <vs-tab v-if=\"showAgrupado == '1'\" label=\"Agrupado de venta\" icon-pack=\"feather\" icon=\"icon-aperture\" @click=\"menu = 1;\">\r\n      </vs-tab>\r\n    </vs-tabs>\r\n    <div v-if=\"menu == 0\">\r\n      <vs-card>\r\n        <ul class=\"flex\">\r\n          <li>\r\n            <vs-radio v-model=\"rtipoVenta\" @input=\"verTipoVenta()\" vs-name=\"rradios1\" vs-value=\"0\">Todo: <b>{{ sumaTotal }}</b></vs-radio>\r\n          </li>\r\n          <li>\r\n            <vs-radio v-model=\"rtipoVenta\" @input=\"verTipoVenta()\" class=\"ml-2\" vs-name=\"rradios1\" vs-value=\"1\">Venta directa: <b>{{ SumaVentaDirecta }}</b></vs-radio>\r\n          </li>\r\n          <li>\r\n            <vs-radio v-model=\"rtipoVenta\" @input=\"verTipoVenta()\" class=\"ml-2\" vs-name=\"rradios1\" vs-value=\"2\">Venta lista: <b>{{ SumaVentaLista }}</b></vs-radio>\r\n          </li>\r\n        </ul>\r\n        <vs-button v-if=\"rtipoVenta == 1\" @click=\"cambiarALeidos()\" class=\"mt-1\" color=\"primary\" type=\"border\">Pasar a liquidar {{ totalAleer.length }} códigos</vs-button>\r\n        <vs-button v-if=\"rtipoVenta == 2 && userRoot\" @click=\"cambiarALeidos()\" class=\"mt-1\" color=\"primary\" type=\"border\">Pasar a liquidar {{ totalAleer.length }} códigos</vs-button>\r\n      </vs-card>\r\n      <vx-card>\r\n        <vs-list-header :title=\"'Total enviados: '    + SumaEnviados \"></vs-list-header>\r\n        <vs-list-header :title=\"'Total devueltos: '   + SumaCodigosDevolucion \"></vs-list-header>\r\n        <vs-list-header :title=\"'Total regalados: '   + sumaCodigosRegalados \"></vs-list-header>\r\n        <vs-list-header :title=\"'Total Bloqueados: '  + sumaCodigosBloqueados \"></vs-list-header>\r\n        <vs-list-header :title=\"'Total Liquidados: '  + sumarCodigosLiquidados \"></vs-list-header>\r\n        <vs-list-header :title=\"'Total: '             + (SumaEnviados - SumaCodigosDevolucion) \"></vs-list-header>\r\n        <vs-list-header :title=\"'Total leídos: '      + sumarCodigosLeidos \"></vs-list-header>\r\n        <vs-list-header :title=\"'Total no leídos: '   + sumarCodigosNoleidos \"></vs-list-header>\r\n      </vx-card>\r\n      <div class=\"header mt-3\">\r\n        <vs-row v-if=\"codigosPerdidos\">\r\n          <vs-col vs-type=\"flex\" vs-justify=\"center\" class=\"mt-3\" vs-align=\"center\" vs-w=\"12\">\r\n            <vs-alert active=\"true\">\r\n              Se cambio {{ porcentaje }} códigos a leído\r\n            </vs-alert>\r\n          </vs-col>\r\n          <vs-col vs-type=\"flex\" v-if=\"codigosNoCambiados.length > 0\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\">\r\n            <vs-list>\r\n              <vs-list-header icon=\"supervisor_account\" title=\"Códigos que no se pudieron cambiar\"></vs-list-header>\r\n              <vs-list-item :key=\"indextr\" v-for=\"(tr, indextr) in codigosNoCambiados\" icon=\"check\" :title=\"tr.codigo\" >\r\n              </vs-list-item>\r\n            </vs-list>\r\n          </vs-col>\r\n        </vs-row>\r\n        <vs-row v-if=\"codigosPerdidos == true\">\r\n          <vs-card v-if=\"codigosLeidos.length > 0\">\r\n            <vs-collapse accordion >\r\n              <vs-collapse-item class=\"mt-2\">\r\n                <div slot=\"header\">\r\n                  Códigos que no se leyeron <ion-icon style=\"font-size:18px;position: relative;top:5px;\" name=\"arrow-down-circle-outline\"></ion-icon>\r\n                </div>\r\n              <gestionCodigosListaVue :arregloCodigos=\"codigosLeidos\"/>\r\n              </vs-collapse-item>\r\n            </vs-collapse>\r\n          </vs-card>\r\n        </vs-row>\r\n        <vs-divider></vs-divider>\r\n      </div>\r\n      <gestionCodigosListaVue :arregloCodigos=\"tmpinformacion\"/>\r\n    </div>\r\n    <div v-if=\"menu == 1\">\r\n      <vs-alert color=\"primary\">\r\n        <p>! Códigos activos cargados por bodega, no se incluyen los códigos devueltos y/o bloqueados.</p>\r\n      </vs-alert>\r\n      <RevisionVentaAgrupadoVue :groupedData=\"groupedData\"/>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\n  import {\r\n    mapState\r\n} from \"vuex\";\r\nimport gestionCodigosListaVue from './gestionCodigosLista.vue';\r\nimport RevisionVentaAgrupadoVue from './RevisionVentaAgrupado.vue';\r\nexport default{\r\n  data(){\r\n    return{\r\n      menu:0,\r\n      informacion:[],\r\n      tmpinformacion:[],\r\n      codigosNoCambiados:[],\r\n      arreglocodigosALeidos:[],\r\n      codigosPerdidos:false,\r\n      porcentaje:0,\r\n      rtipoVenta:0,\r\n      periodo_id:0,\r\n      periodoDescripcion:'',\r\n      nombreInstitucion: \"\",\r\n      institucion_id:0,\r\n      totalAleer:0,\r\n      groupedData:[],\r\n    }\r\n  },\r\n  created(){\r\n    let me = this\r\n    me.usuario = JSON.parse(localStorage.getItem(\"usuario\"))\r\n  },\r\n  mounted(){\r\n    let me = this;\r\n    me.getTipoVenta()\r\n  },\r\n  components:{\r\n    gestionCodigosListaVue,\r\n    RevisionVentaAgrupadoVue,\r\n  },\r\n  props:{\r\n    pedido:{\r\n      type:Object,\r\n      default:{}\r\n    },\r\n    showAgrupado:{\r\n      type:Number,\r\n      default:0\r\n    }\r\n  },\r\n  computed:{\r\n    ...mapState([\"auth\",'userRoot','susuario','userAsesor']),\r\n    sumaTotal(){\r\n      let me = this;\r\n      let total = me.informacion.length\r\n      return total\r\n    },\r\n    SumaVentaDirecta(){\r\n      let me = this;\r\n      let datos       = me.informacion.filter(p => p.venta_estado == '1')\r\n      let resultado   = datos.length\r\n      return resultado\r\n    },\r\n    SumaVentaLista(){\r\n      let me = this;\r\n      let datos       = me.informacion.filter(p => p.venta_estado == '2')\r\n      let resultado   = datos.length\r\n      return resultado\r\n    },\r\n    SumaEnviados(){\r\n      let me = this;\r\n      //venta directa\r\n      let datos       = me.informacion.filter(p => p.venta_estado == '1')\r\n      let totalVD   = datos.length\r\n      let datos2       = me.informacion.filter(p => p.venta_estado == '2')\r\n      //venta lista\r\n      let totalVL   = datos2.length\r\n      let resultado = totalVD + totalVL\r\n      return resultado\r\n    },\r\n    SumaCodigosDevolucion(){\r\n      let me = this;\r\n      let datos       = me.informacion.filter(p => p.estado_liquidacion == '3');\r\n      let resultado   = datos.length\r\n      return resultado\r\n    },\r\n    sumaCodigosRegalados(){\r\n      let me = this;\r\n      let primerFiltro = me.informacion.filter(p => p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null);\r\n      let datos        = primerFiltro.filter(p => p.estado_liquidacion =='2')\r\n      let resultado    = datos.length\r\n      return resultado\r\n    },\r\n    sumaCodigosBloqueados(){\r\n      let me = this;\r\n      let primerFiltro = me.informacion.filter(p => p.estado_liquidacion != '3');\r\n      let datos         = primerFiltro.filter(p => p.estado == '2')\r\n      let resultado     = datos.length\r\n      return resultado\r\n    },\r\n    sumarCodigosLiquidados(){\r\n      let me = this;\r\n      let primerFiltro = me.informacion.filter(p => p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null);\r\n      let datos        = primerFiltro.filter(p => p.estado_liquidacion =='0')\r\n      let resultado    = datos.length\r\n      return resultado\r\n    },\r\n    sumarCodigosLeidos(){\r\n      let me = this;\r\n      let primerFiltro = me.informacion.filter(p => (p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null) && (p.estado_liquidacion == 1));\r\n      let datos        = primerFiltro.filter(p => p.bc_estado =='2')\r\n      let resultado    = datos.length\r\n      return resultado\r\n    },\r\n    sumarCodigosNoleidos(){\r\n      let me = this;\r\n      let primerFiltro          = me.informacion.filter(p => (p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null) && (p.estado_liquidacion == 1));\r\n      let datos                 = primerFiltro.filter(p => p.bc_estado =='1')\r\n      let resultado             = datos.length\r\n      return resultado\r\n    }\r\n  },\r\n  methods:{\r\n    getTipoVenta() {\r\n      let me = this;\r\n      me.informacion = []\r\n      me.tmpinformacion = []\r\n      me.nombreInstitucion    = me.pedido.nombreInstitucion\r\n      me.institucion_id       = me.pedido.idInstitucion\r\n      me.periodoDescripcion   = me.pedido.periodo\r\n      me.periodo_id           = me.pedido.periodo_id\r\n      me.titulo = 'Detalle de venta de ' + me.pedido.nombreInstitucion\r\n      me.$vs.loading();\r\n      this.$http.get(this.$server_url+'getTipoVenta?institucion_id='+me.pedido.idInstitucion+'&periodo_id='+me.pedido.periodo_id)\r\n        .then(function (res) {\r\n          me.informacion = res.data\r\n          let datos      = res.data.filter(p => p.estado_liquidacion != '3' && p.estado_liquidacion != '4' && p.estado != '2')\r\n          // Objeto para almacenar los grupos\r\n          me.groupedData = [];\r\n          // Itera a través de los elementos del array\r\n          datos.forEach(item => {\r\n            const libro = item.libro;\r\n            // Busca si ya existe un objeto con el mismo libro en groupedData\r\n            const existingGroup = me.groupedData.find(group => group.libro === libro);\r\n            // Si no existe, crea un nuevo objeto y agrégalo a groupedData\r\n            if (!existingGroup) {\r\n              me.groupedData.push({ libro, cantidad: 1 });\r\n            } else {\r\n              // Si existe, incrementa la cantidad en el objeto existente\r\n              existingGroup.cantidad++;\r\n            }\r\n          });\r\n          me.verTipoVenta()\r\n          me.$vs.loading.close()\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error + ' error');\r\n          me.$vs.loading.close()\r\n        })\r\n    },\r\n    verTipoVenta(){\r\n      let me = this;\r\n      me.tmpinformacion   = []\r\n      let datos           = me.informacion\r\n      if(me.rtipoVenta == 0){\r\n        me.tmpinformacion = datos\r\n        return\r\n      }\r\n      me.tmpinformacion = datos.filter(p => p.venta_estado == me.rtipoVenta)\r\n      me.totalAleer     = me.tmpinformacion.filter(p => (p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null) && (p.estado_liquidacion == 1) && (p.bc_estado == 1));\r\n    },\r\n    cambiarALeidos(){\r\n      let me = this\r\n      if(me.institucion_id  <  1){\r\n        me.$vs.notify({\r\n        text:'Seleccione una institucion',\r\n        color:'warning',\r\n        iconPack: 'feather',\r\n        icon:'icon-check'})\r\n        return false;\r\n      }\r\n      if(me.periodo_id == null || me.periodo_id == 0 || me.periodo_id == undefined || me.periodoDescripcion == \"\"){\r\n        me.$vs.notify({\r\n        text:'Seleccione una período',\r\n        color:'warning',\r\n        iconPack: 'feather',\r\n        icon:'icon-check'})\r\n        return false;\r\n      }\r\n      if(me.tmpinformacion.length == 0){\r\n        me.$vs.notify({\r\n        text:'No hay códigos por leer ',\r\n        color:'warning',\r\n        iconPack: 'feather',\r\n        icon:'icon-check'})\r\n        return false;\r\n      }\r\n      //setear valores\r\n      let datoFilter = me.tmpinformacion.filter(p => (p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null) && (p.estado_liquidacion == 1) && (p.bc_estado == 1));\r\n      if(datoFilter.length == 0){\r\n        me.$vs.notify({\r\n        text:'No hay códigos por leer ',\r\n        color:'warning',\r\n        iconPack: 'feather',\r\n        icon:'icon-check'})\r\n        return false;\r\n      }\r\n      var sendEnviar = []\r\n      me.tmpinformacion.forEach(element => {\r\n        var cal = new Object();\r\n        cal.codigo = element.codigo\r\n        sendEnviar.push(cal)\r\n      });\r\n      me.$vs.loading()\r\n      let json_codigos = JSON.stringify(sendEnviar)\r\n      let formData = new FormData();\r\n      formData.append('data_codigos',     json_codigos);\r\n      formData.append('id_usuario',       me.usuario.idusuario);\r\n      formData.append('periodo_id',       me.periodo_id);\r\n      formData.append('institucion_id',   me.institucion_id)\r\n      formData.append('nombreInstitucion',me.nombreInstitucion)\r\n      formData.append('nombrePeriodo',    me.periodoDescripcion)\r\n      formData.append('venta_estado',     me.rtipoVenta)\r\n      // this.$http.post(this.$server_url+'codigos/leidos/venta_directa', formData)\r\n      this.$http.post(this.$server_url+'codigos/importar', formData)\r\n      .then(res => {\r\n          me.$vs.loading.close()\r\n          if(res.data.status == 0){\r\n            me.$vs.notify({\r\n            text:res.data.message,\r\n            color:'success',\r\n            iconPack: 'feather',\r\n            icon:'icon-check'})\r\n            return false\r\n          }\r\n          me.$vs.notify({\r\n          text:'Códigos procesados exitosamente',\r\n          color:'success',\r\n          iconPack: 'feather',\r\n          icon:'icon-check'})\r\n          me.codigosPerdidos    = true\r\n          me.codigosLeidos      = res.data.codigosLeidos\r\n          me.codigosNoCambiados = res.data.codigosNoCambiados\r\n          me.codigoNoExiste     = res.data.codigoNoExiste\r\n          me.porcentaje         = res.data.cambiados\r\n          me.getTipoVenta()\r\n      })\r\n      .catch(function (error) {\r\n          me.$vs.notify({\r\n          text:'Verifique que la información se haya guardado correctamente.',\r\n          color:'warning',\r\n          iconPack: 'feather',\r\n          icon:'icon-alert-triangle'})\r\n          me.$vs.loading.close()\r\n      })\r\n    },\r\n  }\r\n}\r\n</script>\r\n"],"mappings":"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","ignoreList":[]}]}