{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\capacitaciones\\reporte.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\capacitaciones\\reporte.vue","mtime":1712682815581},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\babel.config.js","mtime":1712682813877},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\.babelrc","mtime":1712682813750},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.find\";\nimport _toConsumableArray from \"C:/laragon/www/PRY_NEW_JEYSON/LOCAL/plataformaprolipa_vue/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport vSelect from 'vue-select';\nimport ListTile from \"./components/ListTileComponent.vue\";\nimport editarCapacitacionVue from \"../certificados/components/editarCapacitacion.vue\";\nimport moment from 'moment';\nimport * as XLSX from 'xlsx';\nexport default {\n  components: {\n    vSelect: vSelect,\n    ListTile: ListTile,\n    editarCapacitacionVue: editarCapacitacionVue\n  },\n  data: function data() {\n    return {\n      title: 'Reporte de capacitaciones',\n      periodo: null,\n      prevPeriodo: '',\n      periodos: ['todo'],\n      tiempo: 'todo',\n      tiempos: ['todo', 'hoy', 'ésta semana', 'éste mes', 'por fechas'],\n      capacitador: 'todos',\n      capacitadores: [],\n      tipo: {\n        id: null,\n        label: 'todo'\n      },\n      tipos: [{\n        id: null,\n        label: 'todo'\n      }, {\n        id: 0,\n        label: 'Presencial'\n      }, {\n        id: 1,\n        label: 'Virtual'\n      }],\n      capacitaciones: [],\n      filtro_fecha_ini: '',\n      filtro_fecha_fin: '',\n      currentUser: null,\n      search: '',\n      isOpen: false,\n      capacitacion: {},\n      agenda_editar: {\n        'id': '',\n        'estado': '',\n        'observacion': '',\n        'personas': '',\n        'startDate': '',\n        'endDate': '',\n        'link_reunion': '',\n        'asistencia_activa': '',\n        'hora_inicio': '',\n        'hora_fin': ''\n      },\n      periodoSelect: null,\n      tableData: [],\n      meses: [{\n        nombre: 'Enero',\n        numero: 1\n      }, {\n        nombre: 'Febrero',\n        numero: 2\n      }, {\n        nombre: 'Marzo',\n        numero: 3\n      }, {\n        nombre: 'Abril',\n        numero: 4\n      }, {\n        nombre: 'Mayo',\n        numero: 5\n      }, {\n        nombre: 'Junio',\n        numero: 6\n      }, {\n        nombre: 'Julio',\n        numero: 7\n      }, {\n        nombre: 'Agosto',\n        numero: 8\n      }, {\n        nombre: 'Septiembre',\n        numero: 9\n      }, {\n        nombre: 'Octubre',\n        numero: 10\n      }, {\n        nombre: 'Noviembre',\n        numero: 11\n      }, {\n        nombre: 'Diciembre',\n        numero: 12\n      }],\n      arraryStatus: [{\n        nombre: 'Pendiente',\n        estado: 1\n      }, {\n        nombre: 'Realizada',\n        estado: 2\n      }, {\n        nombre: 'Cancelada',\n        estado: 0\n      }],\n      mesSelect: '',\n      estadoSelect: ''\n    };\n  },\n  created: function created() {\n    this.getPeriodos();\n    this.getCapacitadores();\n    this.getCapacitaciones();\n    this.periodo = this.periodos[0];\n    this.prevPeriodo = this.periodos[0];\n    this.tipo = this.tipos[0];\n    this.currentUser = JSON.parse(localStorage.getItem('usuario'));\n    this.periodoSelect = JSON.parse(localStorage.getItem('periodo'));\n  },\n  methods: {\n    getPeriodos: function getPeriodos() {\n      var _this = this;\n      var me = this;\n      me.$http.get(\"\".concat(me.$server_url, \"get_periodos_seminarios\")).then(function (res) {\n        me.periodos = res.data.filter(function (p) {\n          return p.idperiodoescolar != 20 && p.idperiodoescolar != 17 && p.idperiodoescolar != 15 && p.idperiodoescolar != 14 && p.idperiodoescolar > 11 && p.estado == 1;\n        });\n        me.periodo = me.periodos[0];\n      }).catch(function (err) {\n        return _this.showError(\"Error al obtener los periodos\");\n      });\n    },\n    getCapacitadores: function getCapacitadores() {\n      var _this2 = this;\n      var me = this;\n      me.$http.get(\"\".concat(me.$server_url, \"getCapacitadores\")).then(function (res) {\n        me.capacitadores = res.data;\n      }).catch(function (err) {\n        return _this2.showError(\"Error al obtener los capacitadores\");\n      });\n    },\n    getCapacitaciones: function getCapacitaciones() {\n      var _this3 = this;\n      var me = this;\n      me.$vs.loading();\n      // Inicializa 'capacitaciones' como un array vacío\n      me.capacitaciones = [];\n      // Realiza una petición GET al servidor para obtener las capacitaciones\n      me.$http.get(\"\".concat(me.$server_url, \"reporte/capacitaciones\")).then(function (res) {\n        var _me$capacitaciones;\n        // Añade los datos de respuesta al array 'capacitaciones'\n        (_me$capacitaciones = me.capacitaciones).push.apply(_me$capacitaciones, _toConsumableArray(res.data));\n        me.capacitaciones = me.capacitaciones.map(function (cap) {\n          // Utiliza una nueva propiedad para almacenar el número del mes\n          cap.formatMes = moment(cap.fecha_inicio).format('M');\n          return cap;\n        });\n        // Almacena las capacitaciones en el almacenamiento local del navegador\n        localStorage.setItem('capacitaciones', JSON.stringify(me.capacitaciones));\n        // Llama a la función 'queryData'\n        _this3.queryData();\n      }).catch(function (err) {\n        // Muestra un mensaje de error\n        _this3.showError(\"Error: \".concat(err));\n      }).finally(function () {\n        return me.$vs.loading.close();\n      });\n    },\n    queryData: function queryData() {\n      var _this4 = this;\n      var _capacitaciones = JSON.parse(localStorage.getItem('capacitaciones'));\n      //mes - periodo - estado\n      if (this.mesSelect && this.periodo && this.estadoSelect) {\n        _capacitaciones = _capacitaciones.filter(function (c) {\n          return c.periodo.idperiodoescolar == _this4.periodo.idperiodoescolar && c.formatMes == _this4.mesSelect && c.estado_capacitacion == _this4.estadoSelect;\n        });\n        this.buildDataTable(_capacitaciones);\n        return;\n      }\n      //periodo - estado\n      if (this.periodo && this.estadoSelect) {\n        _capacitaciones = _capacitaciones.filter(function (c) {\n          return c.periodo.idperiodoescolar == _this4.periodo.idperiodoescolar && c.estado_capacitacion == _this4.estadoSelect;\n        });\n        this.buildDataTable(_capacitaciones);\n        return;\n      }\n      if (this.mesSelect && this.periodo) {\n        _capacitaciones = _capacitaciones.filter(function (c) {\n          return c.periodo.idperiodoescolar == _this4.periodo.idperiodoescolar && c.formatMes == _this4.mesSelect;\n        });\n        this.buildDataTable(_capacitaciones);\n        return;\n      }\n      if (this.periodo) {\n        _capacitaciones = _capacitaciones.filter(function (c) {\n          return c.periodo.idperiodoescolar == _this4.periodo.idperiodoescolar;\n        });\n        this.buildDataTable(_capacitaciones);\n        return;\n      }\n    },\n    exportData: function exportData() {\n      var ws = XLSX.utils.json_to_sheet(this.tableData);\n      var wb = XLSX.utils.book_new();\n      XLSX.utils.book_append_sheet(wb, ws, 'Capacitaciones');\n      XLSX.writeFile(wb, 'capacitaciones.xlsx');\n    },\n    showError: function showError(msg) {\n      this.$vs.notify({\n        title: 'Error',\n        text: msg,\n        color: 'danger'\n      });\n    },\n    setVal: function setVal(param, val) {\n      this[param] = val;\n      this.queryData();\n    },\n    editCapacitacion: function editCapacitacion(capId) {\n      this.capacitacion = this.capacitaciones.find(function (c) {\n        return c.id_seminario == capId;\n      });\n      console.log('capacitacion', this.capacitacion);\n      this.agenda_editar = {};\n      this.capacitacion = null;\n      this.capacitacion = this.capacitaciones.find(function (c) {\n        return c.id_seminario == capId;\n      });\n      this.capacitacion.nombreInstitucion = this.capacitacion.institucion ? this.capacitacion.institucion.nombreInstitucion : this.capacitacion.nombre_institucion_temporal;\n      this.agenda_editar.id = this.capacitacion.id_seminario;\n      this.agenda_editar.titulo = this.capacitacion.nombre;\n      this.agenda_editar.personas = this.capacitacion.cant_asistentes;\n      this.agenda_editar.estado = this.capacitacion.estado_capacitacion;\n      this.agenda_editar.observacion = this.capacitacion.observacion_admin;\n      this.agenda_editar.startDate = this.capacitacion.fecha_inicio;\n      this.agenda_editar.endDate = this.capacitacion.fecha_fin;\n      this.agenda_editar.link_reunion = this.capacitacion.link_reunion;\n      this.agenda_editar.asistencia_activa = this.capacitacion.asistencia_activa;\n      this.agenda_editar.hora_inicio = this.capacitacion.hora_inicio;\n      this.agenda_editar.hora_fin = this.capacitacion.hora_fin;\n      this.periodoSelect = this.capacitacion.periodo;\n      this.isOpen = true;\n    },\n    buildDataTable: function buildDataTable(_capacitaciones) {\n      var _this5 = this,\n        _this$tableData;\n      // Inicializa la tabla de datos como un array vacío\n      this.tableData = [];\n\n      // Inicializa un array vacío para almacenar los datos de las capacitaciones\n      var data = [];\n\n      // Itera sobre cada capacitación en el conjunto de capacitaciones\n      _capacitaciones.forEach(function (cap) {\n        // Crea un objeto para almacenar los datos de la capacitación\n        var capacitacion = {\n          'id': cap.id_seminario,\n          'periodo': cap.periodo.periodoescolar,\n          'institucion': cap.institucion ? cap.institucion.nombreInstitucion : cap.nombre_institucion_temporal,\n          'ciudad': cap.institucion ? cap.institucion.ciudad.nombre : '-',\n          'asesor': \"\".concat(cap.asesor.nombres, \" \").concat(cap.asesor.apellidos),\n          'modalidad': cap.tipo == 0 ? 'Presencial' : 'Virtual',\n          'programa': cap.nombre,\n          'n_asistentes': cap.cant_asistentes === null ? '-' : cap.cant_asistentes,\n          'estado_capacitacion': cap.estado_capacitacion,\n          'fecha': moment(cap.fecha_inicio).format('ddd DD [de] MMM, YYYY'),\n          'fecha_inicio': cap.fecha_inicio,\n          'horario': \"\".concat(cap.hora_inicio, \" - \").concat(cap.hora_fin, \" (\").concat(_this5.getDuration(cap.hora_inicio, cap.hora_fin), \" horas)\"),\n          'tipo': cap.tipo\n        };\n        // Itera sobre cada capacitador en la lista de capacitadores\n        _this5.capacitadores.forEach(function (capacitador) {\n          // Inicializa un array vacío para almacenar los capacitadores de la capacitación\n          var _capacitadores = [];\n\n          // Si la capacitación tiene capacitadores, los divide en un array\n          if (cap.capacitador != null && cap.capacitador != '') {\n            _capacitadores = cap.capacitador.split(',');\n          }\n\n          // Añade una propiedad al objeto de la capacitación para cada capacitador\n          // Si el capacitador está en la lista de capacitadores de la capacitación, asigna 'Asignado'\n          // Si no, asigna 'Libre'\n          capacitacion[capacitador.capacitador] = _capacitadores.includes(capacitador.capacitador.toString()) ? 'Asignado' : 'Libre';\n        });\n\n        // Añade el objeto de la capacitación al array de datos\n        data.push(capacitacion);\n      });\n\n      // Añade todos los elementos del array de datos a la tabla de datos\n      (_this$tableData = this.tableData).push.apply(_this$tableData, data);\n    },\n    getDuration: function getDuration(horaInicio, horaFin) {\n      var inicio = moment(horaInicio, 'HH:mm:ss');\n      var fin = moment(horaFin, 'HH:mm:ss');\n      var duration = moment.duration(fin.diff(inicio));\n      return duration.asHours().toFixed(2);\n    }\n  },\n  watch: {\n    // Esta función se llama cuando el valor de 'periodo' cambia\n    periodo: function periodo(val) {\n      this.prevPeriodo = val;\n      // Llama a la función 'queryData' para obtener nuevos datos basados en el nuevo periodo\n      this.queryData();\n      // Comprueba si el nuevo valor es diferente del valor anterior\n      // if (val !== this.prevPeriodo) {\n      //   // Si es diferente, actualiza el valor anterior con el nuevo valor\n      //   this.prevPeriodo = val;\n      //   // Llama a la función 'queryData' para obtener nuevos datos basados en el nuevo periodo\n      //   this.queryData();\n      // }\n      // Si el nuevo valor es igual al valor anterior, no hace nada\n    },\n    mesSelect: function mesSelect() {\n      this.queryData();\n    },\n    estadoSelect: function estadoSelect() {\n      this.queryData();\n    }\n  }\n};",{"version":3,"names":["vSelect","ListTile","editarCapacitacionVue","moment","XLSX","components","data","title","periodo","prevPeriodo","periodos","tiempo","tiempos","capacitador","capacitadores","tipo","id","label","tipos","capacitaciones","filtro_fecha_ini","filtro_fecha_fin","currentUser","search","isOpen","capacitacion","agenda_editar","periodoSelect","tableData","meses","nombre","numero","arraryStatus","estado","mesSelect","estadoSelect","created","getPeriodos","getCapacitadores","getCapacitaciones","JSON","parse","localStorage","getItem","methods","_this","me","$http","get","concat","$server_url","then","res","filter","p","idperiodoescolar","catch","err","showError","_this2","_this3","$vs","loading","_me$capacitaciones","push","apply","_toConsumableArray","map","cap","formatMes","fecha_inicio","format","setItem","stringify","queryData","finally","close","_this4","_capacitaciones","c","estado_capacitacion","buildDataTable","exportData","ws","utils","json_to_sheet","wb","book_new","book_append_sheet","writeFile","msg","notify","text","color","setVal","param","val","editCapacitacion","capId","find","id_seminario","console","log","nombreInstitucion","institucion","nombre_institucion_temporal","titulo","personas","cant_asistentes","observacion","observacion_admin","startDate","endDate","fecha_fin","link_reunion","asistencia_activa","hora_inicio","hora_fin","_this5","_this$tableData","forEach","periodoescolar","ciudad","asesor","nombres","apellidos","getDuration","_capacitadores","split","includes","toString","horaInicio","horaFin","inicio","fin","duration","diff","asHours","toFixed","watch"],"sources":["src/views/capacitaciones/reporte.vue"],"sourcesContent":["<script>\r\nimport vSelect from 'vue-select';\r\nimport ListTile from './components/ListTileComponent.vue';\r\nimport editarCapacitacionVue from '../certificados/components/editarCapacitacion.vue';\r\nimport moment from 'moment';\r\nimport * as XLSX from 'xlsx';\r\n\r\nexport default ({\r\n  components: {\r\n    vSelect,\r\n    ListTile,\r\n    editarCapacitacionVue,\r\n  },\r\n  data: () => ({\r\n    title: 'Reporte de capacitaciones',\r\n    periodo: null,\r\n    prevPeriodo: '',\r\n    periodos: [\r\n      'todo',\r\n    ],\r\n    tiempo: 'todo',\r\n    tiempos: [\r\n      'todo',\r\n      'hoy',\r\n      'ésta semana',\r\n      'éste mes',\r\n      'por fechas'\r\n    ],\r\n    capacitador: 'todos',\r\n    capacitadores: [],\r\n    tipo: {\r\n      id: null,\r\n      label: 'todo',\r\n    },\r\n    tipos: [\r\n      {\r\n        id: null,\r\n        label: 'todo',\r\n      },\r\n      {\r\n        id: 0,\r\n        label: 'Presencial',\r\n      },\r\n      {\r\n        id: 1,\r\n        label: 'Virtual',\r\n      },\r\n    ],\r\n    capacitaciones: [],\r\n    filtro_fecha_ini: '',\r\n    filtro_fecha_fin: '',\r\n    currentUser: null,\r\n    search: '',\r\n    isOpen: false,\r\n    capacitacion: {},\r\n    agenda_editar: {\r\n      'id': '',\r\n      'estado': '',\r\n      'observacion': '',\r\n      'personas': '',\r\n      'startDate': '',\r\n      'endDate': '',\r\n      'link_reunion': '',\r\n      'asistencia_activa': '',\r\n      'hora_inicio': '',\r\n      'hora_fin': '',\r\n    },\r\n    periodoSelect: null,\r\n    tableData: [],\r\n    meses:[\r\n      { nombre: 'Enero', numero: 1 },\r\n      { nombre: 'Febrero', numero: 2 },\r\n      { nombre: 'Marzo', numero: 3 },\r\n      { nombre: 'Abril', numero: 4 },\r\n      { nombre: 'Mayo', numero: 5 },\r\n      { nombre: 'Junio', numero: 6 },\r\n      { nombre: 'Julio', numero: 7 },\r\n      { nombre: 'Agosto', numero: 8 },\r\n      { nombre: 'Septiembre', numero: 9 },\r\n      { nombre: 'Octubre', numero: 10 },\r\n      { nombre: 'Noviembre', numero: 11 },\r\n      { nombre: 'Diciembre', numero: 12 }\r\n    ],\r\n    arraryStatus:[\r\n     { nombre:'Pendiente', estado:1 },\r\n     { nombre:'Realizada', estado:2 },\r\n     { nombre:'Cancelada', estado:0 },\r\n    ],\r\n    mesSelect:'',\r\n    estadoSelect:'',\r\n  }),\r\n  created() {\r\n    this.getPeriodos();\r\n    this.getCapacitadores();\r\n    this.getCapacitaciones();\r\n    this.periodo = this.periodos[0];\r\n    this.prevPeriodo = this.periodos[0];\r\n    this.tipo = this.tipos[0];\r\n    this.currentUser = JSON.parse(localStorage.getItem('usuario'));\r\n    this.periodoSelect = JSON.parse(localStorage.getItem('periodo'));\r\n  },\r\n  methods: {\r\n    getPeriodos() {\r\n      const me = this;\r\n      me.$http.get(`${me.$server_url}get_periodos_seminarios`)\r\n        .then((res) => {\r\n          me.periodos = res.data.filter(p => p.idperiodoescolar != 20 && p.idperiodoescolar != 17 && p.idperiodoescolar != 15 && p.idperiodoescolar != 14 && p.idperiodoescolar > 11 && p.estado == 1)\r\n          me.periodo = me.periodos[0];\r\n        })\r\n        .catch((err) => this.showError(\"Error al obtener los periodos\"));\r\n    },\r\n    getCapacitadores() {\r\n      const me = this;\r\n      me.$http.get(`${me.$server_url}getCapacitadores`)\r\n        .then((res) => {\r\n          me.capacitadores = res.data;\r\n        })\r\n        .catch((err) => this.showError(\"Error al obtener los capacitadores\"));\r\n    },\r\n    getCapacitaciones() {\r\n      const me = this;\r\n      me.$vs.loading();\r\n      // Inicializa 'capacitaciones' como un array vacío\r\n      me.capacitaciones = [];\r\n      // Realiza una petición GET al servidor para obtener las capacitaciones\r\n      me.$http.get(`${me.$server_url}reporte/capacitaciones`).then((res) => {\r\n        // Añade los datos de respuesta al array 'capacitaciones'\r\n        me.capacitaciones.push(...res.data);\r\n        me.capacitaciones = me.capacitaciones.map((cap) => {\r\n          // Utiliza una nueva propiedad para almacenar el número del mes\r\n          cap.formatMes = moment(cap.fecha_inicio).format('M');\r\n          return cap;\r\n        });\r\n        // Almacena las capacitaciones en el almacenamiento local del navegador\r\n        localStorage.setItem('capacitaciones', JSON.stringify(me.capacitaciones));\r\n        // Llama a la función 'queryData'\r\n        this.queryData();\r\n      }).catch((err) => {\r\n        // Muestra un mensaje de error\r\n        this.showError(`Error: ${err}`)\r\n      })\r\n        .finally(() => me.$vs.loading.close());\r\n    },\r\n    queryData() {\r\n      let _capacitaciones = JSON.parse(localStorage.getItem('capacitaciones'));\r\n      //mes - periodo - estado\r\n      if(this.mesSelect && this.periodo && this.estadoSelect){\r\n        _capacitaciones = _capacitaciones.filter(c => (c.periodo.idperiodoescolar == this.periodo.idperiodoescolar) && (c.formatMes == this.mesSelect) && (c.estado_capacitacion == this.estadoSelect));\r\n        this.buildDataTable(_capacitaciones);\r\n        return\r\n      }\r\n      //periodo - estado\r\n      if(this.periodo && this.estadoSelect){\r\n        _capacitaciones = _capacitaciones.filter(c => (c.periodo.idperiodoescolar == this.periodo.idperiodoescolar) && (c.estado_capacitacion == this.estadoSelect));\r\n        this.buildDataTable(_capacitaciones);\r\n        return\r\n      }\r\n      if(this.mesSelect && this.periodo){\r\n        _capacitaciones = _capacitaciones.filter(c => (c.periodo.idperiodoescolar == this.periodo.idperiodoescolar) && (c.formatMes == this.mesSelect) );\r\n        this.buildDataTable(_capacitaciones);\r\n        return\r\n      }\r\n      if (this.periodo) {\r\n        _capacitaciones = _capacitaciones.filter(c => c.periodo.idperiodoescolar == this.periodo.idperiodoescolar);\r\n        this.buildDataTable(_capacitaciones);\r\n        return\r\n      }\r\n    },\r\n    exportData() {\r\n      const ws = XLSX.utils.json_to_sheet(this.tableData);\r\n      const wb = XLSX.utils.book_new();\r\n      XLSX.utils.book_append_sheet(wb, ws, 'Capacitaciones');\r\n      XLSX.writeFile(wb, 'capacitaciones.xlsx');\r\n    },\r\n    showError(msg) {\r\n      this.$vs.notify({\r\n        title: 'Error',\r\n        text: msg,\r\n        color: 'danger',\r\n      });\r\n    },\r\n    setVal(param, val) {\r\n      this[param] = val;\r\n      this.queryData();\r\n    },\r\n    editCapacitacion(capId) {\r\n\r\n      this.capacitacion = this.capacitaciones.find(c => c.id_seminario == capId);\r\n\r\n      console.log('capacitacion', this.capacitacion);\r\n\r\n      this.agenda_editar                  = {};\r\n      this.capacitacion                   = null;\r\n      this.capacitacion                   = this.capacitaciones.find(c => c.id_seminario == capId);\r\n      this.capacitacion.nombreInstitucion = this.capacitacion.institucion ? this.capacitacion.institucion.nombreInstitucion : this.capacitacion.nombre_institucion_temporal;\r\n      this.agenda_editar.id               = this.capacitacion.id_seminario;\r\n      this.agenda_editar.titulo           = this.capacitacion.nombre;\r\n      this.agenda_editar.personas         = this.capacitacion.cant_asistentes;\r\n      this.agenda_editar.estado           = this.capacitacion.estado_capacitacion;\r\n      this.agenda_editar.observacion      = this.capacitacion.observacion_admin;\r\n      this.agenda_editar.startDate        = this.capacitacion.fecha_inicio;\r\n      this.agenda_editar.endDate          = this.capacitacion.fecha_fin;\r\n      this.agenda_editar.link_reunion     = this.capacitacion.link_reunion;\r\n      this.agenda_editar.asistencia_activa = this.capacitacion.asistencia_activa;\r\n      this.agenda_editar.hora_inicio      = this.capacitacion.hora_inicio;\r\n      this.agenda_editar.hora_fin         = this.capacitacion.hora_fin;\r\n      this.periodoSelect                  = this.capacitacion.periodo;\r\n      this.isOpen                         = true;\r\n    },\r\n    buildDataTable(_capacitaciones) {\r\n      // Inicializa la tabla de datos como un array vacío\r\n      this.tableData = [];\r\n\r\n      // Inicializa un array vacío para almacenar los datos de las capacitaciones\r\n      const data = [];\r\n\r\n      // Itera sobre cada capacitación en el conjunto de capacitaciones\r\n      _capacitaciones.forEach((cap) => {\r\n        // Crea un objeto para almacenar los datos de la capacitación\r\n        let capacitacion = {\r\n          'id': cap.id_seminario,\r\n          'periodo': cap.periodo.periodoescolar,\r\n          'institucion': cap.institucion ? cap.institucion.nombreInstitucion : cap.nombre_institucion_temporal,\r\n          'ciudad': cap.institucion ? cap.institucion.ciudad.nombre : '-',\r\n          'asesor': `${cap.asesor.nombres} ${cap.asesor.apellidos}`,\r\n          'modalidad': cap.tipo == 0 ? 'Presencial' : 'Virtual',\r\n          'programa': cap.nombre,\r\n          'n_asistentes': cap.cant_asistentes === null ? '-' : cap.cant_asistentes,\r\n          'estado_capacitacion':cap.estado_capacitacion,\r\n          'fecha': moment(cap.fecha_inicio).format('ddd DD [de] MMM, YYYY'),\r\n          'fecha_inicio':cap.fecha_inicio,\r\n          'horario': `${cap.hora_inicio} - ${cap.hora_fin} (${this.getDuration(cap.hora_inicio, cap.hora_fin)} horas)`,\r\n          'tipo':cap.tipo\r\n        };\r\n        // Itera sobre cada capacitador en la lista de capacitadores\r\n        this.capacitadores.forEach((capacitador) => {\r\n          // Inicializa un array vacío para almacenar los capacitadores de la capacitación\r\n          let _capacitadores = [];\r\n\r\n          // Si la capacitación tiene capacitadores, los divide en un array\r\n          if (cap.capacitador != null && cap.capacitador != '') {\r\n            _capacitadores = cap.capacitador.split(',');\r\n          }\r\n\r\n          // Añade una propiedad al objeto de la capacitación para cada capacitador\r\n          // Si el capacitador está en la lista de capacitadores de la capacitación, asigna 'Asignado'\r\n          // Si no, asigna 'Libre'\r\n          capacitacion[capacitador.capacitador] = _capacitadores.includes(capacitador.capacitador.toString()) ? 'Asignado' : 'Libre';\r\n        });\r\n\r\n        // Añade el objeto de la capacitación al array de datos\r\n        data.push(capacitacion)\r\n      });\r\n\r\n      // Añade todos los elementos del array de datos a la tabla de datos\r\n      this.tableData.push(...data);\r\n    },\r\n    getDuration(horaInicio, horaFin) {\r\n      const inicio = moment(horaInicio, 'HH:mm:ss');\r\n      const fin = moment(horaFin, 'HH:mm:ss');\r\n      const duration = moment.duration(fin.diff(inicio));\r\n      return duration.asHours().toFixed(2);\r\n    },\r\n  },\r\n  watch: {\r\n    // Esta función se llama cuando el valor de 'periodo' cambia\r\n    periodo(val) {\r\n      this.prevPeriodo = val;\r\n      // Llama a la función 'queryData' para obtener nuevos datos basados en el nuevo periodo\r\n      this.queryData();\r\n      // Comprueba si el nuevo valor es diferente del valor anterior\r\n      // if (val !== this.prevPeriodo) {\r\n      //   // Si es diferente, actualiza el valor anterior con el nuevo valor\r\n      //   this.prevPeriodo = val;\r\n      //   // Llama a la función 'queryData' para obtener nuevos datos basados en el nuevo periodo\r\n      //   this.queryData();\r\n      // }\r\n      // Si el nuevo valor es igual al valor anterior, no hace nada\r\n    },\r\n    mesSelect(){\r\n      this.queryData();\r\n    },\r\n    estadoSelect(){\r\n      this.queryData();\r\n    }\r\n  }\r\n})\r\n</script>\r\n\r\n<style>\r\n.fixed-column {\r\n  position: sticky;\r\n  left: 0;\r\n  background-color: white;\r\n}\r\n</style>\r\n\r\n<template>\r\n  <div class=\"w-full flex flex-col space-y-2\">\r\n    <div class=\"vx-row\">\r\n      <div class=\"sm:w-full md:w-full lg:w-1/3 xl:w-1/3 ml-3\">\r\n        <small>Período</small>\r\n        <v-select :options=\"periodos\" :reduce=\"periodos => periodos\" label=\"periodoescolar\" class=\"w-full\" v-model=\"periodo\" />\r\n        <!-- <vs-select v-model=\"periodo\" label=\"Periodo\" :search=\"false\" :options=\"periodos\">\r\n          <vs-select-item v-for=\"(item, index) in periodos\" :key=\"index\" :value=\"item\"\r\n            :text=\"item.periodoescolar\"></vs-select-item>\r\n        </vs-select> -->\r\n      </div>\r\n      <div class=\"sm:w-full md:w-full lg:w-1/3 xl:w-1/3 ml-3\">\r\n        <small>Meses</small>\r\n        <v-select :options=\"meses\" :reduce=\"meses => meses.numero\" label=\"nombre\" class=\"w-full\" v-model=\"mesSelect\" />\r\n      </div>\r\n      <div class=\"sm:w-full md:w-full lg:w-1/4 xl:w-1/4 ml-3\">\r\n        <small>Estado</small>\r\n        <v-select :options=\"arraryStatus\" :reduce=\"arraryStatus => arraryStatus.estado\" label=\"nombre\" class=\"w-full\" v-model=\"estadoSelect\" />\r\n      </div>\r\n    </div>\r\n    <br>\r\n    <vs-button @click=\"exportData\" color=\"primary\" class=\"btn btn-sm mt-5\">\r\n      Exportar\r\n    </vs-button>\r\n    <vs-table max-items=\"10\" search stripe pagination :data=\"tableData\">\r\n      <template slot=\"header\">\r\n        <vs-chip>Cantidad {{tableData.length}}</vs-chip>\r\n      </template>\r\n      <template slot=\"thead\">\r\n        <vs-th></vs-th>\r\n        <vs-th class=\"fixed-column\">Capacitación</vs-th>\r\n        <vs-th class=\"fixed-column\" sort-key=\"fecha_inicio\">Programa</vs-th>\r\n        <vs-th v-for=\"(value, key) in tableData[0]\" :key=\"key\"\r\n          v-if=\"key !== 'id' && key !== 'estado_capacitacion' && key !== 'fecha_inicio' && key !== 'tipo' && key !== 'periodo' && key !== 'institucion' && key !== 'ciudad' && key !== 'asesor' && key !== 'modalidad' && key !== 'programa' && key !== 'n_asistentes' && key !== 'fecha' && key !== 'horario'\">\r\n          {{ key.toUpperCase().replace('_', ' ') }}\r\n        </vs-th>\r\n      </template>\r\n      <template slot-scope=\"{data}\">\r\n        <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n          <vs-td>\r\n            <vs-button @click=\"editCapacitacion(tr.id)\" color=\"dark\" type=\"line\" icon=\"edit\" size=\"small\">\r\n              Editar\r\n            </vs-button>\r\n          </vs-td>\r\n          <vs-td class=\"fixed-column\">\r\n            <div>\r\n              <div style=\"width: 200px;\" class=\"flex flex-col gap-2\">\r\n                <span v-if=\"currentUser.name_usuario == 'sguacan'\"> # {{ tr.id }}</span>\r\n                <span class=\"flex font-bold\">{{ tr.institucion }}</span>\r\n                <span class=\"text-xs\">{{ tr.ciudad }}</span>\r\n                <span class=\"text-xs\">{{ tr.asesor }}</span>\r\n              </div>\r\n            </div>\r\n          </vs-td>\r\n          <vs-td class=\"fixed-column\">\r\n            <div>\r\n              <div style=\"width: 200px;\" class=\"flex flex-col gap-2\">\r\n                <span class=\"flex font-bold\">{{ tr.programa }}</span>\r\n                <span class=\"text-xs font-bold\">Asistentes: <span class=\"font-normal\">{{ tr.n_asistentes }}</span></span>\r\n                <span class=\"text-xs\">{{ tr.fecha }}</span>\r\n                <span class=\"text-xs\">{{ tr.horario}}</span>\r\n              </div>\r\n            </div>\r\n            <br>\r\n            <!--ESTADO CAPACITACION-->\r\n            <p v-if=\"tr.estado_capacitacion == 0\"><vs-chip color=\"danger\"   transparent>Cancelada</vs-chip></p>\r\n            <p v-if=\"tr.estado_capacitacion == 1\"><vs-chip color=\"warning\"  transparent>Pendiente</vs-chip></p>\r\n            <p v-if=\"tr.estado_capacitacion == 2\"><vs-chip color=\"success\"   transparent>Realizada</vs-chip></p>\r\n            <!--TIPO CAPACITACION-->\r\n            <p v-if=\"tr.tipo == 0\"><vs-chip color=\"dark\"   transparent>Presencial</vs-chip></p>\r\n            <p v-if=\"tr.tipo == 1\"><vs-chip color=\"dark\"  transparent>Virtual</vs-chip></p>\r\n          </vs-td>\r\n          <vs-td v-for=\"(value, key) in tr\" :key=\"key\"\r\n            v-if=\"key !== 'id' && key !== 'fecha_inicio' &&  key !== 'estado_capacitacion' && key !== 'tipo' && key !== 'periodo' && key !== 'institucion' && key !== 'ciudad' && key !== 'asesor' && key !== 'modalidad' && key !== 'programa' && key !== 'n_asistentes' && key !== 'fecha' && key !== 'horario'\">\r\n            <span v-if=\"value === 'Asignado'\"\r\n              style=\"padding: 0.5rem 1rem; background-color: #173F5F; border-radius: 10px;color: #fff; font-weight: bold;\">\r\n              {{ value }}\r\n            </span>\r\n            <span v-else-if=\"value === 'Libre'\"\r\n              style=\"padding: 0.5rem 1rem; background-color: #3CAEA3; border-radius: 10px;color: #fff; font-weight: bold;\">\r\n              {{ value }}\r\n            </span>\r\n            <span v-else>\r\n              {{ value }}\r\n            </span>\r\n          </vs-td>\r\n        </vs-tr>\r\n      </template>\r\n    </vs-table>\r\n    <vs-popup title=\"Detalles capacitación:\" :active.sync=\"isOpen\">\r\n      <editarCapacitacionVue v-if=\"isOpen\" :agenda_editar=\"agenda_editar\" :periodoSelect=\"periodoSelect\"\r\n        :capacitacion=\"capacitacion\" :arreglo-capacitadores=\"capacitadores\" @changeRegresar=\"regresar()\"\r\n        @rechargeSeminarios=\"getCapacitaciones(), isOpen = !isOpen\" />\r\n    </vs-popup>\r\n  </div>\r\n</template>\r\n"],"mappings":"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","ignoreList":[]}]}