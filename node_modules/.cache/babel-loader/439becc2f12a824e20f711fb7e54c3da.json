{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\pedidos\\components\\seriesBasicas.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\pedidos\\components\\seriesBasicas.vue","mtime":1712682816309},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\babel.config.js","mtime":1712682813877},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\.babelrc","mtime":1712682813750},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport Vue from 'vue';\nimport axios from 'axios';\nimport vSelect from 'vue-select';\nexport default {\n  data: function data() {\n    return {\n      series: [],\n      activeConfirm: false,\n      id: 0,\n      popupAddTema: false,\n      serie: {\n        serie_basica: ''\n      },\n      estado: '',\n      permisoRoot: false,\n      usuario: [],\n      title: ''\n    };\n  },\n  components: {\n    'v-select': vSelect\n  },\n  props: {\n    id_periodo: {\n      type: Number,\n      default: 0\n    }\n  },\n  methods: {\n    //para obtener el listado de las series\n    getSeries: function getSeries() {\n      var me = this;\n      this.$http.get(this.$server_url + 'getSeriesBasicas/' + me.id_periodo).then(function (res) {\n        me.series = res.data;\n      }).catch(function (error) {\n        console.log(error + ' error');\n      });\n    },\n    //para eliminar la serie\n    eliminarSerie: function eliminarSerie() {\n      var me = this;\n      me.$vs.loading();\n      this.$http.delete(this.$server_url + 'series/' + me.id).then(function (res) {\n        me.getSeries();\n        me.$vs.loading.close();\n        me.$vs.notify({\n          text: 'Serie eliminada con exito',\n          color: 'success',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n      });\n    },\n    //para abrir el popup de confimacion para eliminar\n    openConfirm: function openConfirm(id, estado) {\n      this.id = id;\n      this.$vs.dialog({\n        type: 'confirm',\n        color: 'danger',\n        title: \"Confirmacion\",\n        text: 'Estas seguro de eliminar esta serie?.',\n        accept: this.eliminarSerie\n      });\n    },\n    //para guardar las series\n    guardarSerie: function guardarSerie() {\n      var me = this;\n      //datos que se obtienen de los inputs\n      var formData = new FormData();\n      formData.append('id', me.id);\n      var estado = 0;\n      if (me.serie.serie_basica == 0) estado = 1;\n      if (me.serie.serie_basica == 1) estado = 0;\n      formData.append('estado', estado);\n      me.$vs.loading();\n      this.$http.post(this.$server_url + 'cambiarSerieBasica', formData).then(function (res) {\n        me.$vs.loading.close();\n        me.$vs.notify({\n          text: res.data.message,\n          color: 'primary',\n          iconPack: 'feather',\n          icon: 'icon-alert-triangle'\n        });\n        me.getSeries();\n        limpiar();\n      }).catch(function (error) {\n        me.$vs.loading.close();\n      });\n    },\n    //para limpiar los campos\n    limpiar: function limpiar() {\n      var me = this;\n      me.id = 0;\n      me.serie.serie_basica = \"0\";\n    }\n  },\n  created: function created() {\n    this.usuario = JSON.parse(localStorage.getItem(\"usuario\"));\n  },\n  mounted: function mounted() {\n    this.getSeries();\n  }\n};",{"version":3,"names":["Vue","axios","vSelect","data","series","activeConfirm","id","popupAddTema","serie","serie_basica","estado","permisoRoot","usuario","title","components","props","id_periodo","type","Number","default","methods","getSeries","me","$http","get","$server_url","then","res","catch","error","console","log","eliminarSerie","$vs","loading","delete","close","notify","text","color","iconPack","icon","openConfirm","dialog","accept","guardarSerie","formData","FormData","append","post","message","limpiar","created","JSON","parse","localStorage","getItem","mounted"],"sources":["src/views/pedidos/components/seriesBasicas.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"con-tab-ejemplo\">\r\n            <div>\r\n                <vs-table max-items=\"10\" search pagination :data=\"series\">\r\n                    <template slot=\"header\">\r\n                    <div style=\"display:flex;\">\r\n                        <vs-chip color=\"primary\" style=\"font-size:12px;\">\r\n                          Cantidad: {{series.length}}\r\n                        </vs-chip>\r\n                    </div>    \r\n                </template>\r\n                    <template slot=\"thead\">\r\n                        <vs-th>Nombre serie</vs-th>\r\n                        <vs-th>Serie BÃ¡sica</vs-th>\r\n                        <vs-th>Acciones</vs-th>\r\n                    </template>\r\n                    <template slot-scope=\"{data}\">\r\n                        <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                            <vs-td>\r\n                                {{data[indextr].nombre_serie}}<br>\r\n                            </vs-td>\r\n                            <vs-td width=\"15%\" style=\"text-align: center;\">\r\n                                <vs-alert color=\"success\" v-if=\"tr.serie_basica == 1\"><i class=\"fa-solid fa-check\"></i> Si</vs-alert>\r\n                                <vs-alert color=\"warning\" v-if=\"tr.serie_basica == 0\">No</vs-alert>\r\n                            </vs-td>\r\n                            <vs-td>\r\n                                <div style=\"display: flex;\">\r\n                                    <vx-tooltip style=\"display: inline-block;\" text=\"Editar serie\" position=\"top\" color=\"primary\">\r\n                                        <vs-button class=\"modal-default-button\" size=\"small\" color=\"primary\" @click=\"serie.serie_basica = tr.serie_basica;id = tr.id;guardarSerie()\" type=\"filled\" icon-pack=\"feather\" icon=\"icon-edit\"> Cambiar estado</vs-button>\r\n                                    </vx-tooltip> &nbsp;\r\n                                </div>\r\n                            </vs-td> \r\n                        </vs-tr>\r\n                    </template>\r\n                </vs-table>   \r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport Vue from 'vue'\r\nimport axios from 'axios'\r\nimport vSelect from 'vue-select'\r\nexport default {\r\n    data() {\r\n        return{\r\n            series:[],\r\n            activeConfirm:false,\r\n            id:0,\r\n            popupAddTema:false,\r\n            serie:{\r\n                serie_basica:'',\r\n            },\r\n            estado:'',\r\n            permisoRoot:false,\r\n            usuario:[],\r\n            title:'',\r\n        }\r\n    },\r\n    components: {\r\n        'v-select': vSelect,\r\n    },\r\n    props:{\r\n        id_periodo:{\r\n            type:Number,\r\n            default:0,\r\n        },\r\n    },  \r\n    methods:{\r\n        //para obtener el listado de las series\r\n        getSeries() {\r\n            let me = this;\r\n            this.$http.get(this.$server_url+'getSeriesBasicas/'+me.id_periodo)\r\n                .then(function (res) {\r\n                    me.series = res.data\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                })\r\n        },\r\n        //para eliminar la serie\r\n         eliminarSerie() {\r\n              let me = this;      \r\n              me.$vs.loading()\r\n              this.$http.delete(this.$server_url+'series/'+me.id)\r\n              .then(res => {\r\n                 me.getSeries();\r\n                  me.$vs.loading.close()\r\n                  me.$vs.notify({\r\n                  text:'Serie eliminada con exito',\r\n                  color:'success',\r\n                  iconPack: 'feather',\r\n                  icon:'icon-check'})\r\n              })\r\n        },\r\n        //para abrir el popup de confimacion para eliminar\r\n        openConfirm(id,estado){\r\n            this.id = id;\r\n            this.$vs.dialog({\r\n                type:'confirm',\r\n                color: 'danger',\r\n                title: `Confirmacion`,\r\n                text: 'Estas seguro de eliminar esta serie?.',\r\n                accept:this.eliminarSerie\r\n            })\r\n        },\r\n        //para guardar las series\r\n         guardarSerie(){\r\n            let me = this;\r\n            //datos que se obtienen de los inputs\r\n            let formData = new FormData();\r\n            formData.append('id',      me.id)\r\n            let estado = 0\r\n            if(me.serie.serie_basica == 0 )  estado = 1\r\n            if(me.serie.serie_basica == 1 )  estado = 0\r\n            formData.append('estado', estado)\r\n            me.$vs.loading();\r\n            this.$http.post(this.$server_url+'cambiarSerieBasica', formData)\r\n                .then(function (res) {\r\n                    me.$vs.loading.close();\r\n                    me.$vs.notify({\r\n                        text: res.data.message,\r\n                        color: 'primary',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-alert-triangle'\r\n                    })\r\n                    me.getSeries()\r\n                    limpiar()\r\n                })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close();\r\n                })\r\n        },\r\n        //para limpiar los campos\r\n        limpiar(){\r\n           let me = this;\r\n           me.id = 0;\r\n           me.serie.serie_basica = \"0\";\r\n        },\r\n    },\r\n    created(){\r\n        this.usuario = JSON.parse(localStorage.getItem(\"usuario\"))\r\n       \r\n \r\n    },\r\n    mounted(){\r\n        this.getSeries() \r\n    },\r\n}\r\n</script>"],"mappings":";AAyCA,OAAAA,GAAA;AACA,OAAAC,KAAA;AACA,OAAAC,OAAA;AACA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,MAAA;MACAC,aAAA;MACAC,EAAA;MACAC,YAAA;MACAC,KAAA;QACAC,YAAA;MACA;MACAC,MAAA;MACAC,WAAA;MACAC,OAAA;MACAC,KAAA;IACA;EACA;EACAC,UAAA;IACA,YAAAZ;EACA;EACAa,KAAA;IACAC,UAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;EACA;EACAC,OAAA;IACA;IACAC,SAAA,WAAAA,UAAA;MACA,IAAAC,EAAA;MACA,KAAAC,KAAA,CAAAC,GAAA,MAAAC,WAAA,yBAAAH,EAAA,CAAAN,UAAA,EACAU,IAAA,WAAAC,GAAA;QACAL,EAAA,CAAAlB,MAAA,GAAAuB,GAAA,CAAAxB,IAAA;MACA,GACAyB,KAAA,WAAAC,KAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,KAAA;MACA;IACA;IACA;IACAG,aAAA,WAAAA,cAAA;MACA,IAAAV,EAAA;MACAA,EAAA,CAAAW,GAAA,CAAAC,OAAA;MACA,KAAAX,KAAA,CAAAY,MAAA,MAAAV,WAAA,eAAAH,EAAA,CAAAhB,EAAA,EACAoB,IAAA,WAAAC,GAAA;QACAL,EAAA,CAAAD,SAAA;QACAC,EAAA,CAAAW,GAAA,CAAAC,OAAA,CAAAE,KAAA;QACAd,EAAA,CAAAW,GAAA,CAAAI,MAAA;UACAC,IAAA;UACAC,KAAA;UACAC,QAAA;UACAC,IAAA;QAAA;MACA;IACA;IACA;IACAC,WAAA,WAAAA,YAAApC,EAAA,EAAAI,MAAA;MACA,KAAAJ,EAAA,GAAAA,EAAA;MACA,KAAA2B,GAAA,CAAAU,MAAA;QACA1B,IAAA;QACAsB,KAAA;QACA1B,KAAA;QACAyB,IAAA;QACAM,MAAA,OAAAZ;MACA;IACA;IACA;IACAa,YAAA,WAAAA,aAAA;MACA,IAAAvB,EAAA;MACA;MACA,IAAAwB,QAAA,OAAAC,QAAA;MACAD,QAAA,CAAAE,MAAA,OAAA1B,EAAA,CAAAhB,EAAA;MACA,IAAAI,MAAA;MACA,IAAAY,EAAA,CAAAd,KAAA,CAAAC,YAAA,OAAAC,MAAA;MACA,IAAAY,EAAA,CAAAd,KAAA,CAAAC,YAAA,OAAAC,MAAA;MACAoC,QAAA,CAAAE,MAAA,WAAAtC,MAAA;MACAY,EAAA,CAAAW,GAAA,CAAAC,OAAA;MACA,KAAAX,KAAA,CAAA0B,IAAA,MAAAxB,WAAA,yBAAAqB,QAAA,EACApB,IAAA,WAAAC,GAAA;QACAL,EAAA,CAAAW,GAAA,CAAAC,OAAA,CAAAE,KAAA;QACAd,EAAA,CAAAW,GAAA,CAAAI,MAAA;UACAC,IAAA,EAAAX,GAAA,CAAAxB,IAAA,CAAA+C,OAAA;UACAX,KAAA;UACAC,QAAA;UACAC,IAAA;QACA;QACAnB,EAAA,CAAAD,SAAA;QACA8B,OAAA;MACA,GACAvB,KAAA,WAAAC,KAAA;QACAP,EAAA,CAAAW,GAAA,CAAAC,OAAA,CAAAE,KAAA;MACA;IACA;IACA;IACAe,OAAA,WAAAA,QAAA;MACA,IAAA7B,EAAA;MACAA,EAAA,CAAAhB,EAAA;MACAgB,EAAA,CAAAd,KAAA,CAAAC,YAAA;IACA;EACA;EACA2C,OAAA,WAAAA,QAAA;IACA,KAAAxC,OAAA,GAAAyC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;EAGA;EACAC,OAAA,WAAAA,QAAA;IACA,KAAApC,SAAA;EACA;AACA","ignoreList":[]}]}