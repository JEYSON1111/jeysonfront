{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\home\\padres\\encuesta\\verEstadisticas.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\home\\padres\\encuesta\\verEstadisticas.vue","mtime":1712682816011},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\babel.config.js","mtime":1712682813877},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\.babelrc","mtime":1712682813750},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nexport default {\n  data: function data() {\n    return {\n      arregloResultados: [],\n      //variables para el export a excel\n      activePrompt: false,\n      codigoSelected: [],\n      reportesActivo: 0,\n      fileName: null,\n      formats: ['xls', 'xlsx', 'csv', 'txt'],\n      cellAutoWidth: true,\n      selectedFormat: 'xls'\n      //fin variables para el export a excel\n    };\n  },\n  props: {\n    encuestas_escuela_id: {\n      type: Number,\n      default: 0\n    },\n    encuesta_id: {\n      type: Number,\n      default: 0\n    },\n    total_encuestados: {\n      type: Number,\n      default: 0\n    },\n    nombre_encuesta: {\n      type: String,\n      default: ''\n    }\n  },\n  methods: {\n    getResultados: function getResultados() {\n      var me = this;\n      this.$http.get(this.$server_url + 'getResultadoEncuestas?encuestas_escuela_id=' + me.encuestas_escuela_id + '&encuesta_id=' + me.encuesta_id).then(function (res) {\n        me.arregloResultados = res.data;\n      }).catch(function (error) {\n        console.log(error + ' error');\n      });\n    },\n    //METODOS PARA EXCEL\n    //para limipiar los campos del excel\n    clearFields: function clearFields() {\n      this.fileName = '';\n      this.cellAutoWidth = true;\n      this.selectedFormat = 'xls';\n    },\n    //metodo par descargar el excel\n    exportToExcel: function exportToExcel() {\n      var _this = this;\n      var headerTitle = ['Pregunta', 'Si', 'No'];\n      var headerVal = ['pregunta', 'siR', 'noR'];\n      var codigoSelectedMayus = this.arregloResultados;\n      for (var i = 0; i < codigoSelectedMayus.length; i++) {\n        for (var key in codigoSelectedMayus[i]) {\n          if (typeof codigoSelectedMayus[i][key] == \"string\") {\n            codigoSelectedMayus[i][key] = codigoSelectedMayus[i][key].toUpperCase();\n          }\n        }\n      }\n      import('@/vendor/Export2Excel').then(function (excel) {\n        var list = codigoSelectedMayus;\n        var data = _this.formatJson(headerVal, list);\n        excel.export_json_to_excel({\n          header: headerTitle,\n          data: data,\n          filename: 'ReportePreguntas',\n          autoWidth: _this.cellAutoWidth,\n          bookType: _this.selectedFormat\n        });\n        _this.clearFields();\n        _this.guardarActivo = '';\n        _this.generarActivo = ' ';\n        _this.textAlertCant = '';\n        _this.cantidad = '';\n        _this.codigoSelected = [];\n      });\n    },\n    formatJson: function formatJson(filterVal, jsonData) {\n      return jsonData.map(function (v) {\n        return filterVal.map(function (j) {\n          return v[j];\n        });\n      });\n    }\n  },\n  created: function created() {\n    var me = this;\n    me.getResultados();\n  }\n};",{"version":3,"names":["data","arregloResultados","activePrompt","codigoSelected","reportesActivo","fileName","formats","cellAutoWidth","selectedFormat","props","encuestas_escuela_id","type","Number","default","encuesta_id","total_encuestados","nombre_encuesta","String","methods","getResultados","me","$http","get","$server_url","then","res","catch","error","console","log","clearFields","exportToExcel","_this","headerTitle","headerVal","codigoSelectedMayus","i","length","key","toUpperCase","excel","list","formatJson","export_json_to_excel","header","filename","autoWidth","bookType","guardarActivo","generarActivo","textAlertCant","cantidad","filterVal","jsonData","map","v","j","created"],"sources":["src/views/home/padres/encuesta/verEstadisticas.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <vs-table max-items=\"20\" search pagination :data=\"arregloResultados\">\r\n            <template slot=\"header\">\r\n                <vs-list>\r\n                    <vs-list-item title=\"Nombre encuesta: \" :subtitle=\"nombre_encuesta\"></vs-list-item>\r\n                    <vs-list-item title=\"Total Encuestados: \" :subtitle=\"total_encuestados\"></vs-list-item>\r\n                    <vs-list-item title=\"Cantidad preguntas: \" :subtitle=\"arregloResultados.length\">\r\n                        <vs-button color=\"warning\" size=\"small\" class=\"ml-3\" @click=\"exportToExcel\">Exportar</vs-button>\r\n                    </vs-list-item>\r\n                </vs-list>\r\n            </template>\r\n            <template slot=\"thead\">\r\n                <vs-th>Pregunta</vs-th>\r\n                <vs-th>total si</vs-th>\r\n                <vs-th>total no</vs-th>\r\n            </template>\r\n            <template slot-scope=\"{data}\">\r\n                <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                    <vs-td>\r\n                        {{data[indextr].pregunta}}<br>\r\n                    </vs-td>\r\n                    <vs-td>\r\n                        {{data[indextr].siR}}<br>\r\n                    </vs-td>\r\n                    <vs-td>\r\n                        {{data[indextr].noR}}<br>\r\n                    </vs-td>\r\n                </vs-tr>\r\n            </template>\r\n        </vs-table>\r\n         <!--MODAL PARA EXPORTAR A EXCEL-->\r\n         <vs-prompt title=\"Exportar a Excel\" class=\"export-options\" @cancle=\"clearFields\" @accept=\"exportToExcel\" accept-text=\"Exportar\" @close=\"clearFields\" :active.sync=\"activePrompt\">\r\n            <vs-alert class=\"mb-3\" color=\"danger\" icon-pack=\"feather\" icon=\"icon-info\">\r\n                <span>Recuerde <b>seleccionar</b> los c√≥digos que desea exportar.</span>\r\n            </vs-alert>\r\n            <vs-input v-model=\"fileName\" placeholder=\"Ingrese el nombre del archivo\" class=\"w-full\" />\r\n            <v-select v-model=\"selectedFormat\" :options=\"formats\" class=\"my-4\" />\r\n        </vs-prompt>\r\n    </div>\r\n</template>\r\n<script>\r\nexport default{\r\n    data(){\r\n        return{\r\n            arregloResultados:[],\r\n            //variables para el export a excel\r\n            activePrompt:false,\r\n            codigoSelected: [],\r\n            reportesActivo: 0,\r\n            fileName: null,\r\n            formats: ['xls', 'xlsx', 'csv', 'txt'],\r\n            cellAutoWidth: true,\r\n            selectedFormat: 'xls',\r\n            //fin variables para el export a excel\r\n        }\r\n    },\r\n    props:{\r\n        encuestas_escuela_id:{\r\n            type:Number,\r\n            default:0\r\n        },\r\n        encuesta_id:{\r\n            type:Number,\r\n            default:0\r\n        },\r\n        total_encuestados:{\r\n            type:Number,\r\n            default:0\r\n        },\r\n        nombre_encuesta:{\r\n            type:String,\r\n            default:'',\r\n        }\r\n    },\r\n    methods:{\r\n        getResultados() {\r\n            let me = this;\r\n            this.$http.get(this.$server_url+'getResultadoEncuestas?encuestas_escuela_id='+me.encuestas_escuela_id+'&encuesta_id='+me.encuesta_id)\r\n                .then(function (res) {\r\n                   me.arregloResultados = res.data\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                })\r\n        },\r\n        //METODOS PARA EXCEL\r\n        //para limipiar los campos del excel\r\n        clearFields() {\r\n            this.fileName = ''\r\n            this.cellAutoWidth = true\r\n            this.selectedFormat = 'xls'\r\n        },\r\n        //metodo par descargar el excel\r\n        exportToExcel() {\r\n            let headerTitle = ['Pregunta','Si','No'];\r\n            let headerVal = ['pregunta', 'siR','noR'];  \r\n            let codigoSelectedMayus = this.arregloResultados\r\n            for (var i = 0; i < codigoSelectedMayus.length; i++) {\r\n                for (var key in codigoSelectedMayus[i]) {\r\n                    if (typeof codigoSelectedMayus[i][key] == \"string\") {\r\n                        codigoSelectedMayus[i][key] = codigoSelectedMayus[i][key].toUpperCase();\r\n                    }\r\n                }\r\n            }\r\n            import('@/vendor/Export2Excel').then(excel => {\r\n                const list = codigoSelectedMayus\r\n                const data = this.formatJson(headerVal, list)\r\n                excel.export_json_to_excel({\r\n                    header: headerTitle,\r\n                    data,\r\n                    filename: 'ReportePreguntas',\r\n                    autoWidth: this.cellAutoWidth,\r\n                    bookType: this.selectedFormat\r\n                })\r\n                this.clearFields()\r\n                this.guardarActivo = '';\r\n                this.generarActivo = ' ';\r\n                this.textAlertCant = '';\r\n                this.cantidad = '';\r\n                this.codigoSelected = [];\r\n            })\r\n        },\r\n        formatJson(filterVal, jsonData) {\r\n            return jsonData.map(v => filterVal.map(j => {\r\n                return v[j]\r\n            }))\r\n        },\r\n    },\r\n    created(){\r\n        let me = this;\r\n        me.getResultados()\r\n    },\r\n}\r\n</script>"],"mappings":";AA0CA;EACAA,IAAA,WAAAA,KAAA;IACA;MACAC,iBAAA;MACA;MACAC,YAAA;MACAC,cAAA;MACAC,cAAA;MACAC,QAAA;MACAC,OAAA;MACAC,aAAA;MACAC,cAAA;MACA;IACA;EACA;EACAC,KAAA;IACAC,oBAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;IACAC,WAAA;MACAH,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;IACAE,iBAAA;MACAJ,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;IACAG,eAAA;MACAL,IAAA,EAAAM,MAAA;MACAJ,OAAA;IACA;EACA;EACAK,OAAA;IACAC,aAAA,WAAAA,cAAA;MACA,IAAAC,EAAA;MACA,KAAAC,KAAA,CAAAC,GAAA,MAAAC,WAAA,mDAAAH,EAAA,CAAAV,oBAAA,qBAAAU,EAAA,CAAAN,WAAA,EACAU,IAAA,WAAAC,GAAA;QACAL,EAAA,CAAAnB,iBAAA,GAAAwB,GAAA,CAAAzB,IAAA;MACA,GACA0B,KAAA,WAAAC,KAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,KAAA;MACA;IACA;IACA;IACA;IACAG,WAAA,WAAAA,YAAA;MACA,KAAAzB,QAAA;MACA,KAAAE,aAAA;MACA,KAAAC,cAAA;IACA;IACA;IACAuB,aAAA,WAAAA,cAAA;MAAA,IAAAC,KAAA;MACA,IAAAC,WAAA;MACA,IAAAC,SAAA;MACA,IAAAC,mBAAA,QAAAlC,iBAAA;MACA,SAAAmC,CAAA,MAAAA,CAAA,GAAAD,mBAAA,CAAAE,MAAA,EAAAD,CAAA;QACA,SAAAE,GAAA,IAAAH,mBAAA,CAAAC,CAAA;UACA,WAAAD,mBAAA,CAAAC,CAAA,EAAAE,GAAA;YACAH,mBAAA,CAAAC,CAAA,EAAAE,GAAA,IAAAH,mBAAA,CAAAC,CAAA,EAAAE,GAAA,EAAAC,WAAA;UACA;QACA;MACA;MACA,gCAAAf,IAAA,WAAAgB,KAAA;QACA,IAAAC,IAAA,GAAAN,mBAAA;QACA,IAAAnC,IAAA,GAAAgC,KAAA,CAAAU,UAAA,CAAAR,SAAA,EAAAO,IAAA;QACAD,KAAA,CAAAG,oBAAA;UACAC,MAAA,EAAAX,WAAA;UACAjC,IAAA,EAAAA,IAAA;UACA6C,QAAA;UACAC,SAAA,EAAAd,KAAA,CAAAzB,aAAA;UACAwC,QAAA,EAAAf,KAAA,CAAAxB;QACA;QACAwB,KAAA,CAAAF,WAAA;QACAE,KAAA,CAAAgB,aAAA;QACAhB,KAAA,CAAAiB,aAAA;QACAjB,KAAA,CAAAkB,aAAA;QACAlB,KAAA,CAAAmB,QAAA;QACAnB,KAAA,CAAA7B,cAAA;MACA;IACA;IACAuC,UAAA,WAAAA,WAAAU,SAAA,EAAAC,QAAA;MACA,OAAAA,QAAA,CAAAC,GAAA,WAAAC,CAAA;QAAA,OAAAH,SAAA,CAAAE,GAAA,WAAAE,CAAA;UACA,OAAAD,CAAA,CAAAC,CAAA;QACA;MAAA;IACA;EACA;EACAC,OAAA,WAAAA,QAAA;IACA,IAAArC,EAAA;IACAA,EAAA,CAAAD,aAAA;EACA;AACA","ignoreList":[]}]}