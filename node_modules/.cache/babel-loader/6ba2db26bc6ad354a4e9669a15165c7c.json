{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\salle\\administrador\\evaluaciones\\components\\reporte\\ReporteCompartivaAreasDocente.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\salle\\administrador\\evaluaciones\\components\\reporte\\ReporteCompartivaAreasDocente.vue","mtime":1712682816518},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\babel.config.js","mtime":1712682813877},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\.babelrc","mtime":1712682813750},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.sort\";\nimport ReporteAsignaturaSalleVue from '@/views/salle/administrador/evaluaciones/components/reporte/detalle/ReporteAsignaturaSalle';\nimport flatPickr from 'vue-flatpickr-component';\nimport 'flatpickr/dist/flatpickr.css';\nimport vSelect from 'vue-select';\nimport ECharts from 'vue-echarts/components/ECharts';\nimport 'echarts/lib/component/tooltip';\nimport 'echarts/lib/component/legend';\nimport 'echarts/lib/chart/bar';\nimport 'echarts/lib/chart/radar';\nimport 'echarts/lib/chart/pie';\nimport theme from \"../../theme.json\";\nimport VueApexCharts from 'vue-apexcharts';\nECharts.registerTheme('ovilia-green', theme);\nexport default {\n  data: function data() {\n    return {\n      //variables areas\n      data_docentes_areas: [],\n      columnChart: {},\n      key_areas: [],\n      //fin variables areas\n      //variables mejores docentes\n      barChartTopDoc: {},\n      //fin variables mejores docentes\n      //variables para exportar a excel\n      activePromptExcel: false,\n      fileName: null,\n      formats: ['xls', 'xlsx', 'csv', 'txt'],\n      selectedFormat: 'xls',\n      fileNameAs: ''\n      //fin variables para exportar a excel\n    };\n  },\n  components: {\n    'v-select': vSelect,\n    flatPickr: flatPickr,\n    ECharts: ECharts,\n    VueApexCharts: VueApexCharts,\n    ReporteAsignaturaSalleVue: ReporteAsignaturaSalleVue\n  },\n  props: {\n    institucion_selected: {\n      type: String,\n      default: ''\n    },\n    periodoSelect: {\n      type: String,\n      default: ''\n    },\n    searchReporte: {\n      type: Boolean,\n      default: false\n    }\n  },\n  watch: {\n    institucion_selected: function institucion_selected(results) {\n      var me = this;\n      me.data_docentes_areas = [];\n      me.columnChart = {};\n      me.key_areas = [];\n      me.barChartTopDoc = {};\n      if (results && me.periodoSelect) {\n        me.getPromedioAreas();\n      }\n    },\n    periodoSelect: function periodoSelect(results) {\n      var me = this;\n      me.data_docentes_areas = [];\n      me.columnChart = {};\n      me.key_areas = [];\n      me.barChartTopDoc = {};\n      if (results && me.institucion_selected) {\n        me.getPromedioAreas();\n      }\n    },\n    searchReporte: function searchReporte(results) {\n      var me = this;\n      me.data_docentes_areas = [];\n      me.columnChart = {};\n      me.key_areas = [];\n      me.barChartTopDoc = {};\n      if (me.periodoSelect && me.institucion_selected) {\n        me.getPromedioAreas();\n      }\n    }\n  },\n  mounted: function mounted() {\n    var me = this;\n  },\n  methods: {\n    getPromedioAreas: function getPromedioAreas() {\n      var _this = this;\n      var me = this;\n      me.data_docentes_areas = [];\n      me.columnChart = [];\n      me.$vs.loading();\n      this.$http.get(this.$server_url + 'salle_promedio_areas/' + me.periodoSelect + '/' + me.institucion_selected.idInstitucion).then(function (res) {\n        if (res.data.length == 0) {\n          me.$vs.loading.close();\n          _this.$vs.notify({\n            text: 'No se encontro datos',\n            color: 'warning',\n            iconPack: 'feather',\n            icon: 'icon-check'\n          });\n          return;\n        }\n        me.data_docentes_areas = res.data.items;\n        me.data_docentes_areas.sort(function (a, b) {\n          return b.puntaje_evaluacion - a.puntaje_evaluacion;\n        });\n        //grafico mejores docentes por areas\n        me.graficoTopDocAreas();\n        var areas = [];\n        //obtener los puntajes de todas las evaluaciones por area de los docentes\n        $.each(res.data.items, function (key, value) {\n          $.each(value.areas, function (keyA, valueA) {\n            areas.push({\n              nombre_area: valueA.nombre_area,\n              puntaje: valueA.puntaje,\n              id_area: valueA.id_area\n            });\n          });\n        });\n        // console.log(\"ar\",areas)\n        var areas_agrupadas = [];\n        areas_agrupadas = me.groupArrayOfObjects(areas, \"nombre_area\");\n        // console.log(\"or\",areas_agrupadas)\n        me.key_areas = [];\n        var key_areas_1 = [];\n        $.each(areas_agrupadas, function (key, value) {\n          key_areas_1.push(key);\n          me.key_areas.push(value[0]);\n        });\n        // console.log(\"uno\",key_areas_1)\n        // console.log(\"dos\",me.key_areas)\n        var puntajes_areas = [];\n        var nombre_areas = [];\n        var _loop = function _loop() {\n          var acum_puntaje = 0;\n          $.each(areas_agrupadas[key_areas_1[i]], function (key, value) {\n            acum_puntaje += value.puntaje;\n          });\n          var porcentaje_area = (acum_puntaje * 100 / (areas_agrupadas[key_areas_1[i]].length * 100)).toFixed(2);\n          puntajes_areas.push(porcentaje_area);\n          nombre_areas.push(key_areas_1[i]);\n        };\n        for (var i = 0; i < key_areas_1.length; i++) {\n          _loop();\n        }\n        console.log(\"fi1\", puntajes_areas);\n        console.log(\"fi2\", nombre_areas);\n        me.columnChart = {\n          series: [{\n            name: 'Promedio',\n            data: puntajes_areas\n          }],\n          chartOptions: {\n            colors: ['#E6AD4A', '#28C76F', '#EA5455', '#87ceeb', '#7367F0', '#28C76F', '#EA5455', '#87ceeb', '#7367F0', '#28C76F', '#EA5455', '#87ceeb', '#7367F0', '#28C76F', '#EA5455', '#87ceeb', '#7367F0'],\n            plotOptions: {\n              bar: {\n                horizontal: false,\n                endingShape: 'rounded',\n                columnWidth: '55%'\n              }\n            },\n            dataLabels: {\n              enabled: false\n            },\n            stroke: {\n              show: true,\n              width: 2,\n              colors: ['transparent']\n            },\n            xaxis: {\n              categories: nombre_areas\n            },\n            yaxis: {\n              title: {\n                text: '(Promedio)'\n              }\n            },\n            fill: {\n              opacity: 1\n            },\n            tooltip: {\n              y: {\n                formatter: function formatter(val) {\n                  return val + \"%\";\n                }\n              }\n            }\n          }\n        };\n        me.$vs.loading.close();\n      }).catch(function (error) {\n        console.log(error);\n        me.$vs.loading.close();\n      });\n    },\n    groupArrayOfObjects: function groupArrayOfObjects(list, key) {\n      return list.reduce(function (rv, x) {\n        (rv[x[key]] = rv[x[key]] || []).push(x);\n        return rv;\n      }, {});\n    },\n    graficoTopDocAreas: function graficoTopDocAreas() {\n      var me = this;\n      var puntaje_evaluaciones = [];\n      var nombre_docentes = [];\n      $.each(me.data_docentes_areas, function (key, value) {\n        puntaje_evaluaciones.push(value.puntaje_evaluacion);\n        nombre_docentes.push(value.nombre_docente);\n      });\n      me.barChartTopDoc = {};\n      me.barChartTopDoc = {\n        series: [{\n          data: puntaje_evaluaciones\n        }],\n        chartOptions: {\n          colors: ['#7367F0', '#28C76F', '#EA5455', '#FF9F43', '#1E1E1E', '#7367F0', '#28C76F', '#EA5455', '#FF9F43', '#1E1E1E', '#7367F0', '#28C76F', '#EA5455', '#FF9F43', '#1E1E1E'],\n          plotOptions: {\n            bar: {\n              horizontal: true\n            }\n          },\n          dataLabels: {\n            enabled: true\n          },\n          xaxis: {\n            categories: nombre_docentes\n          }\n        }\n      };\n    },\n    //METODOS PARA EXPORTAR A EXCEL\n    exportToExcel: function exportToExcel() {\n      var _this2 = this;\n      var me = this;\n      var excel_areas = [];\n      $.each(me.data_docentes_areas, function (key, value) {\n        $.each(value.areas, function (keyA, valueA) {\n          excel_areas.push({\n            nombre_docente: value.nombre_docente,\n            nombre_area: valueA.nombre_area,\n            puntaje: valueA.puntaje\n          });\n        });\n      });\n      var headerTitle = ['Docente', 'Area', 'Puntaje'];\n      var headerVal = ['nombre_docente', 'nombre_area', 'puntaje'];\n      import('@/vendor/Export2Excel').then(function (excel) {\n        var list = excel_areas;\n        var data = _this2.formatJson(headerVal, list);\n        excel.export_json_to_excel({\n          header: headerTitle,\n          data: data,\n          filename: _this2.fileName,\n          autoWidth: _this2.cellAutoWidth,\n          bookType: _this2.selectedFormat\n        });\n      });\n    },\n    clearFields: function clearFields() {\n      this.fileName = '';\n      this.cellAutoWidth = true;\n      this.selectedFormat = 'xls';\n    },\n    formatJson: function formatJson(filterVal, jsonData) {\n      return jsonData.map(function (v) {\n        return filterVal.map(function (j) {\n          return v[j];\n        });\n      });\n    }\n  }\n};",{"version":3,"names":["ReporteAsignaturaSalleVue","flatPickr","vSelect","ECharts","theme","VueApexCharts","registerTheme","data","data_docentes_areas","columnChart","key_areas","barChartTopDoc","activePromptExcel","fileName","formats","selectedFormat","fileNameAs","components","props","institucion_selected","type","String","default","periodoSelect","searchReporte","Boolean","watch","results","me","getPromedioAreas","mounted","methods","_this","$vs","loading","$http","get","$server_url","idInstitucion","then","res","length","close","notify","text","color","iconPack","icon","items","sort","a","b","puntaje_evaluacion","graficoTopDocAreas","areas","$","each","key","value","keyA","valueA","push","nombre_area","puntaje","id_area","areas_agrupadas","groupArrayOfObjects","key_areas_1","puntajes_areas","nombre_areas","_loop","acum_puntaje","i","porcentaje_area","toFixed","console","log","series","name","chartOptions","colors","plotOptions","bar","horizontal","endingShape","columnWidth","dataLabels","enabled","stroke","show","width","xaxis","categories","yaxis","title","fill","opacity","tooltip","y","formatter","val","catch","error","list","reduce","rv","x","puntaje_evaluaciones","nombre_docentes","nombre_docente","exportToExcel","_this2","excel_areas","headerTitle","headerVal","excel","formatJson","export_json_to_excel","header","filename","autoWidth","cellAutoWidth","bookType","clearFields","filterVal","jsonData","map","v","j"],"sources":["src/views/salle/administrador/evaluaciones/components/reporte/ReporteCompartivaAreasDocente.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"vx-row\">\r\n      <div class=\"vx-col sm:w-full mb-base\">\r\n        <!-- <vx-card title=\"Promedios por áreas\"  v-if=\"data_docentes_areas.length > 0\" subtitle=\"Comparación de promedios de todas las áreas de la institución seleccionada\">\r\n          <vue-apex-charts type=\"bar\" height=\"350\" :options=\"columnChart.chartOptions\" :series=\"columnChart.series\"></vue-apex-charts>\r\n          <br>\r\n        </vx-card> -->\r\n        <div class=\"vx-row mb-6\" v-if=\"data_docentes_areas.length > 0\">\r\n          <!--TOP DOCENTES POR AREAS-->\r\n          <div style=\"min-width: 400px;\" class=\"vx-col sm:w-full w-full md:w-full mb-3\">\r\n            <vx-card title=\"Top docentes áreas\" subtitle=\"Docentes mejor puntuados por area\">\r\n                <div  style=\"overflow-y: scroll; overflow-x: hidden; height:450px;\" id=\"div_top_area\">\r\n                  <vs-button size=\"small\" style=\"padding: 7px; font-size: 12px; float: right; margin-right: 10px;\" icon-pack=\"feather\" icon=\"icon-download\" color=\"#0CBFBD\" @click=\"fileName='reporte_docentes_areas'; activePromptExcel=true\">Exportar</vs-button>\r\n                  <br><br>\r\n                  <div :key=\"index\" v-for=\"(evaluacion, index) in data_docentes_areas\" class=\"mb-base\">\r\n                    <b style=\"color: #0CBFBD;\">{{evaluacion.nombre_docente.toUpperCase()}} </b> <b>{{evaluacion.puntaje_evaluacion}}%</b> <br>\r\n                    <div :key=\"indexA\" v-for=\"(area, indexA) in evaluacion.areas\">\r\n                        <div style=\"width: 60%; display: inline-block;\"><b>Área: </b> <span style=\"color: #3477E7;\"> {{area.nombre_area}} </span></div>\r\n                        <div style=\"width: 40%; display: inline-block;\"><b>Puntaje: </b> <span style=\"color: #8B34E7;\"> {{area.puntaje}}% </span> </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n            </vx-card>\r\n          </div>\r\n          <!--REPORTE MEJORES DOCENTES-->\r\n          <div style=\"min-width: 400px;\" class=\"vx-col sm:w-full w-full md:w-full mb-3\">\r\n            <vx-card title=\"Top docentes\" subtitle=\"Docentes mejor puntuados en calificacion final\">\r\n              <div  style=\"overflow-y: scroll; overflow-x: hidden; height:450px;\" id=\"div_top_1\">\r\n              <vue-apex-charts type=\"bar\" height=\"3000\" :options=\"barChartTopDoc.chartOptions\" :series=\"barChartTopDoc.series\"></vue-apex-charts>\r\n              </div>\r\n            </vx-card>\r\n          </div>\r\n        </div>\r\n        <!--SELECCIONAR AREA PARA REPORTE POR ASIGNATURAS-->\r\n        <!-- <div v-if=\"key_areas.length > 0\">\r\n          <ReporteAsignaturaSalleVue :key_areas=\"key_areas\" :institucion_selected=\"institucion_selected\" :periodoSelect=\"periodoSelect\"/>\r\n        </div> -->\r\n      </div>\r\n    </div>\r\n    <!--MODALES-->\r\n    <!----modal exportar--------->\r\n    <vs-prompt title=\"Exportar a Excel\" class=\"export-options\" @cancle=\"clearFields\" @accept=\"exportToExcel\" accept-text=\"Exportar\" :active.sync=\"activePromptExcel\">\r\n      <vs-input v-model=\"fileName\" placeholder=\"Ingrese el nombre del archivo\" class=\"w-full\" />\r\n      <v-select v-model=\"selectedFormat\" :options=\"formats\" class=\"my-4\" />\r\n      <div class=\"flex\">\r\n      </div>\r\n    </vs-prompt>\r\n    <!----fin modal exportar--------->\r\n  </div>\r\n</template>\r\n<script>\r\n  import ReporteAsignaturaSalleVue from '@/views/salle/administrador/evaluaciones/components/reporte/detalle/ReporteAsignaturaSalle'\r\n  import flatPickr from 'vue-flatpickr-component';\r\n  import 'flatpickr/dist/flatpickr.css';\r\n  import vSelect from 'vue-select'\r\n  import ECharts from 'vue-echarts/components/ECharts'\r\n  import 'echarts/lib/component/tooltip'\r\n  import 'echarts/lib/component/legend'\r\n  import 'echarts/lib/chart/bar'\r\n  import 'echarts/lib/chart/radar'\r\n  import 'echarts/lib/chart/pie'\r\n  import theme from '../../theme.json'\r\n  import VueApexCharts from 'vue-apexcharts'\r\n  ECharts.registerTheme('ovilia-green', theme)\r\nexport default{\r\n  data(){\r\n    return{\r\n      //variables areas\r\n      data_docentes_areas:[],\r\n      columnChart: {},\r\n      key_areas:[],\r\n      //fin variables areas\r\n      //variables mejores docentes\r\n      barChartTopDoc: {},\r\n      //fin variables mejores docentes\r\n      //variables para exportar a excel\r\n      activePromptExcel: false,\r\n      fileName: null,\r\n      formats: ['xls', 'xlsx', 'csv', 'txt'],\r\n      selectedFormat: 'xls',\r\n      fileNameAs: '',\r\n      //fin variables para exportar a excel\r\n    }\r\n  },\r\n  components:{\r\n    'v-select': vSelect,\r\n    flatPickr,\r\n    ECharts,\r\n    VueApexCharts,\r\n    ReporteAsignaturaSalleVue,\r\n  },\r\n  props:{\r\n    institucion_selected:{\r\n      type:String,\r\n      default:''\r\n    },\r\n    periodoSelect:{\r\n      type:String,\r\n      default:''\r\n    },\r\n    searchReporte:{\r\n      type:Boolean,\r\n      default:false,\r\n    }\r\n  },\r\n  watch:{\r\n    institucion_selected(results){\r\n      let me = this;\r\n      me.data_docentes_areas = []\r\n      me.columnChart         = {}\r\n      me.key_areas           = []\r\n      me.barChartTopDoc      = {}\r\n      if(results && me.periodoSelect){\r\n        me.getPromedioAreas()\r\n      }\r\n    },\r\n    periodoSelect(results){\r\n      let me = this;\r\n      me.data_docentes_areas = []\r\n      me.columnChart         = {}\r\n      me.key_areas           = []\r\n      me.barChartTopDoc      = {}\r\n      if(results && me.institucion_selected){\r\n        me.getPromedioAreas()\r\n      }\r\n    },\r\n    searchReporte(results){\r\n      let me = this\r\n      me.data_docentes_areas = []\r\n      me.columnChart         = {}\r\n      me.key_areas           = []\r\n      me.barChartTopDoc      = {}\r\n      if(me.periodoSelect && me.institucion_selected){\r\n        me.getPromedioAreas()\r\n      }\r\n    }\r\n  },\r\n  mounted(){\r\n    let me = this;\r\n  },\r\n  methods: {\r\n    getPromedioAreas(){\r\n      let me = this\r\n      me.data_docentes_areas = []\r\n      me.columnChart         = []\r\n      me.$vs.loading()\r\n      this.$http.get(this.$server_url+'salle_promedio_areas/'+me.periodoSelect+'/'+me.institucion_selected.idInstitucion)\r\n      .then(res => {\r\n        if(res.data.length == 0){\r\n          me.$vs.loading.close()\r\n          this.$vs.notify({\r\n          text:'No se encontro datos',\r\n          color:'warning',\r\n          iconPack: 'feather',\r\n          icon:'icon-check'})\r\n          return\r\n        }\r\n        me.data_docentes_areas = res.data.items\r\n        me.data_docentes_areas.sort((a, b) => {\r\n          return b.puntaje_evaluacion - a.puntaje_evaluacion;\r\n        });\r\n        //grafico mejores docentes por areas\r\n        me.graficoTopDocAreas()\r\n        let areas = []\r\n        //obtener los puntajes de todas las evaluaciones por area de los docentes\r\n        $.each(res.data.items,function(key, value){\r\n          $.each(value.areas,function(keyA, valueA){\r\n            areas.push({ nombre_area: valueA.nombre_area, puntaje: valueA.puntaje, id_area: valueA.id_area })\r\n          });\r\n        });\r\n        // console.log(\"ar\",areas)\r\n        let areas_agrupadas = []\r\n        areas_agrupadas = me.groupArrayOfObjects(areas, \"nombre_area\")\r\n        // console.log(\"or\",areas_agrupadas)\r\n        me.key_areas = []\r\n        let key_areas_1 = []\r\n        $.each(areas_agrupadas,function(key, value){\r\n          key_areas_1.push(key)\r\n          me.key_areas.push(value[0])\r\n        });\r\n        // console.log(\"uno\",key_areas_1)\r\n        // console.log(\"dos\",me.key_areas)\r\n        let puntajes_areas = []\r\n        let nombre_areas = []\r\n        for( let i=0; i<key_areas_1.length; i++){\r\n          let acum_puntaje = 0\r\n          $.each(areas_agrupadas[key_areas_1[i]],function(key, value){\r\n            acum_puntaje += value.puntaje\r\n          });\r\n          let porcentaje_area = ((acum_puntaje * 100) / ((areas_agrupadas[key_areas_1[i]].length) * 100) ).toFixed(2)\r\n          puntajes_areas.push(porcentaje_area)\r\n          nombre_areas.push(key_areas_1[i])\r\n        }\r\n        console.log(\"fi1\",puntajes_areas)\r\n        console.log(\"fi2\",nombre_areas)\r\n        me.columnChart = {\r\n          series: [{\r\n            name: 'Promedio',\r\n            data: puntajes_areas\r\n          }],\r\n          chartOptions: {\r\n            colors: ['#E6AD4A','#28C76F','#EA5455','#87ceeb','#7367F0','#28C76F','#EA5455','#87ceeb','#7367F0','#28C76F','#EA5455','#87ceeb','#7367F0','#28C76F','#EA5455','#87ceeb','#7367F0'],\r\n            plotOptions: { bar: { horizontal: false, endingShape: 'rounded', columnWidth: '55%', }, },\r\n            dataLabels: { enabled: false },\r\n            stroke: { show: true, width: 2, colors: ['transparent'] },\r\n            xaxis: { categories: nombre_areas },\r\n            yaxis: { title: { text: '(Promedio)' } },\r\n            fill: { opacity: 1 },\r\n          tooltip: { y: { formatter: function(val) { return val + \"%\" } } }\r\n          }\r\n        }\r\n        me.$vs.loading.close()\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n        me.$vs.loading.close()\r\n      })\r\n    },\r\n    groupArrayOfObjects(list, key) {\r\n      return list.reduce(function(rv, x) {\r\n        (rv[x[key]] = rv[x[key]] || []).push(x);\r\n        return rv;\r\n      }, {});\r\n    },\r\n    graficoTopDocAreas(){\r\n      let me = this\r\n      let puntaje_evaluaciones  = []\r\n      let nombre_docentes       = []\r\n      $.each(me.data_docentes_areas,function(key, value){\r\n        puntaje_evaluaciones.push(value.puntaje_evaluacion)\r\n        nombre_docentes.push(value.nombre_docente)\r\n      });\r\n      me.barChartTopDoc = {}\r\n      me.barChartTopDoc = {\r\n        series: [{\r\n          data: puntaje_evaluaciones\r\n        }],\r\n        chartOptions: {\r\n          colors: ['#7367F0', '#28C76F', '#EA5455', '#FF9F43', '#1E1E1E','#7367F0', '#28C76F', '#EA5455', '#FF9F43', '#1E1E1E','#7367F0', '#28C76F', '#EA5455', '#FF9F43', '#1E1E1E'],\r\n          plotOptions: { bar: { horizontal: true, } },\r\n          dataLabels: { enabled: true },\r\n          xaxis: { categories: nombre_docentes, }\r\n        }\r\n      }\r\n    },\r\n    //METODOS PARA EXPORTAR A EXCEL\r\n    exportToExcel() {\r\n      let me = this\r\n      let excel_areas = []\r\n      $.each(me.data_docentes_areas,function(key, value){\r\n        $.each(value.areas,function(keyA, valueA){\r\n            excel_areas.push({ nombre_docente: value.nombre_docente, nombre_area: valueA.nombre_area, puntaje: valueA.puntaje})\r\n        });\r\n      });\r\n      let headerTitle = ['Docente', 'Area', 'Puntaje'];\r\n      let headerVal = ['nombre_docente', 'nombre_area', 'puntaje'];\r\n      import('@/vendor/Export2Excel').then(excel => {\r\n        const list = excel_areas\r\n        const data = this.formatJson(headerVal, list)\r\n        excel.export_json_to_excel({\r\n            header: headerTitle,\r\n            data,\r\n            filename: this.fileName,\r\n            autoWidth: this.cellAutoWidth,\r\n            bookType: this.selectedFormat\r\n        })\r\n      })\r\n    },\r\n    clearFields() {\r\n      this.fileName = ''\r\n      this.cellAutoWidth = true\r\n      this.selectedFormat = 'xls'\r\n    },\r\n    formatJson(filterVal, jsonData) {\r\n      return jsonData.map(v => filterVal.map(j => {\r\n          return v[j]\r\n      }))\r\n    },\r\n  },\r\n}\r\n</script>\r\n<style scoped>\r\n.chips_selects:hover{\r\n    background-color: black !important;\r\n}\r\n#div_top_1::-webkit-scrollbar {\r\n  width: 10px;\r\n}\r\n\r\n/* Track */\r\n#div_top_1::-webkit-scrollbar-track {\r\n  box-shadow: inset 0 0 5px rgb(211, 207, 241);\r\n  border-radius: 10px;\r\n}\r\n\r\n/* Handle */\r\n#div_top_1::-webkit-scrollbar-thumb {\r\n  background: #ff2aa6;\r\n  border-radius: 10px;\r\n}\r\n\r\n/* Handle on hover */\r\n#div_top_1::-webkit-scrollbar-thumb:hover {\r\n  background: #ff2da8;\r\n}\r\n#div_top_area::-webkit-scrollbar {\r\n  width: 10px;\r\n}\r\n\r\n/* Track */\r\n#div_top_area::-webkit-scrollbar-track {\r\n  box-shadow: inset 0 0 5px rgb(211, 207, 241);\r\n  border-radius: 10px;\r\n}\r\n\r\n/* Handle */\r\n#div_top_area::-webkit-scrollbar-thumb {\r\n  background: #2ee982;\r\n  border-radius: 10px;\r\n}\r\n\r\n/* Handle on hover */\r\n#div_top_area::-webkit-scrollbar-thumb:hover {\r\n  background: #2ee982;\r\n}\r\n\r\n#div_top_asignatura::-webkit-scrollbar {\r\n  width: 10px;\r\n}\r\n/* Track */\r\n#div_top_asignatura::-webkit-scrollbar-track {\r\n  box-shadow: inset 0 0 5px rgb(211, 207, 241);\r\n  border-radius: 10px;\r\n}\r\n\r\n/* Handle */\r\n#div_top_asignatura::-webkit-scrollbar-thumb {\r\n  background: #773BF7;\r\n  border-radius: 10px;\r\n}\r\n\r\n/* Handle on hover */\r\n#div_top_asignatura::-webkit-scrollbar-thumb:hover {\r\n  background: #773BF7;\r\n}\r\n</style>\r\n\r\n"],"mappings":"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","ignoreList":[]}]}