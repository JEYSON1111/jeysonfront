{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\pedidos\\gerencia\\reportes\\ReporteVentaVendedor2.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\pedidos\\gerencia\\reportes\\ReporteVentaVendedor2.vue","mtime":1712682816346},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\babel.config.js","mtime":1712682813877},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\.babelrc","mtime":1712682813750},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport vSelect from 'vue-select';\nimport moment from \"moment\";\nimport * as XLSX from 'xlsx';\nexport default {\n  data: function data() {\n    return {\n      TmparregloVenta: [],\n      arregloVenta: [],\n      arregloPeriodos: [],\n      periodoSelectAnterior: '',\n      periodoSelectDespues: '',\n      checkList: false,\n      year: '',\n      tipo: 0,\n      region: 2\n    };\n  },\n  components: {\n    vSelect: vSelect\n  },\n  mounted: function mounted() {\n    var me = this;\n    me.year = moment().format('YYYY');\n    // me.getValoresVenta()\n    me.getPeriodos();\n  },\n  computed: {\n    sumaVentaBrutaAnterior: function sumaVentaBrutaAnterior() {\n      var me = this;\n      if (me.TmparregloVenta.length > 0) {\n        var datos = me.TmparregloVenta.filter(function (p) {\n          return p.VentaBAnterior;\n        });\n        var total = datos.reduce(function (a, b) {\n          return a + (b[\"VentaBAnterior\"] || 0);\n        }, 0);\n        var transformar = 0;\n        if (total == 0 || total == \"0\") {} else {\n          transformar = total.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\n        }\n        return transformar;\n      }\n    },\n    sumaNetaAnterior: function sumaNetaAnterior() {\n      var me = this;\n      if (me.TmparregloVenta.length > 0) {\n        var datos = me.TmparregloVenta.filter(function (p) {\n          return p.ventaNAnterior;\n        });\n        var total = datos.reduce(function (a, b) {\n          return a + (b[\"ventaNAnterior\"] || 0);\n        }, 0);\n        var transformar = 0;\n        if (total == 0 || total == \"0\") {} else {\n          transformar = total.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\n        }\n        return transformar;\n      }\n    },\n    sumaVentaBrutaActual: function sumaVentaBrutaActual() {\n      var me = this;\n      if (me.TmparregloVenta.length > 0) {\n        var datos = me.TmparregloVenta.filter(function (p) {\n          return p.ventaBrutaActual;\n        });\n        var total = datos.reduce(function (a, b) {\n          return a + (b[\"ventaBrutaActual\"] || 0);\n        }, 0);\n        var transformar = 0;\n        if (total == 0 || total == \"0\") {} else {\n          transformar = total.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\n        }\n        return transformar;\n      }\n    },\n    sumaVentaNetaActual: function sumaVentaNetaActual() {\n      var me = this;\n      if (me.TmparregloVenta.length > 0) {\n        var datos = me.TmparregloVenta.filter(function (p) {\n          return p.ven_neta_actual;\n        });\n        var total = datos.reduce(function (a, b) {\n          return a + (b[\"ven_neta_actual\"] || 0);\n        }, 0);\n        var transformar = 0;\n        if (total == 0 || total == \"0\") {} else {\n          transformar = total.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\n        }\n        return transformar;\n      }\n    },\n    sumaVariacionVentaBruta: function sumaVariacionVentaBruta() {\n      var me = this;\n      if (me.TmparregloVenta.length > 0) {\n        var datos = me.TmparregloVenta.filter(function (p) {\n          return p.VariacionVentaBruta;\n        });\n        var total = datos.reduce(function (a, b) {\n          return a + (b[\"VariacionVentaBruta\"] || 0);\n        }, 0);\n        var transformar = 0;\n        if (total == 0 || total == \"0\") {} else {\n          transformar = total.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\n        }\n        return transformar;\n      }\n    }\n  },\n  methods: {\n    getPeriodos: function getPeriodos() {\n      var me = this;\n      this.$http.get(this.$server_url + 'get_periodos_pedidos').then(function (res) {\n        var datos = res.data;\n        me.arregloPeriodos = datos.filter(function (p) {\n          return p.region_idregion == me.region;\n        });\n      }).catch(function (error) {});\n    },\n    filtrarDecimal: function filtrarDecimal(numero) {\n      var me = this;\n      var transformar = numero.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\n      return transformar;\n    },\n    getValoresVenta: function getValoresVenta() {\n      var me = this;\n      me.arregloVenta = [];\n      me.TmparregloVenta = [];\n      var msj = \"\";\n      if (me.periodoSelectAnterior == \"\" || me.periodoSelectAnterior == null || me.periodoSelectAnterior == undefined) {\n        msj = 'Seleccione un período anterior por favor';\n        me.f_notificaciones(msj, 'warning', 'icon-alert-triangle');\n        return;\n      }\n      if (me.periodoSelectDespues == \"\" || me.periodoSelectDespues == null || me.periodoSelectDespues == undefined) {\n        msj = 'Seleccione un período despues por favor';\n        me.f_notificaciones(msj, 'warning', 'icon-alert-triangle');\n        return;\n      }\n      me.$vs.loading();\n      var url = 'pruebatest?periodo_idUno=' + me.periodoSelectAnterior.idperiodoescolar + '&periodo_idDos=' + me.periodoSelectDespues.idperiodoescolar + '&codigoC=' + me.periodoSelectAnterior.codigo_contrato + '&codigoC2=' + me.periodoSelectDespues.codigo_contrato;\n      this.$http.get(this.$server_url + url).then(function (res) {\n        me.$vs.loading.close();\n        if (res.data.status == 0) {\n          var _msj = res.data.message;\n          me.f_notificaciones(_msj, 'warning', 'icon-alert-triangle');\n          return;\n        }\n        var arregloPredatos = [];\n        var datos = [];\n        datos = res.data;\n        datos.forEach(function (element) {\n          var cal = new Object();\n          cal.id_asesor = element.id_asesor;\n          cal.asesor = element.asesor;\n          cal.iniciales = element.iniciales;\n          cal.cedula = element.cedula;\n          var arrayContratos = element.ContratosDespues.contratos;\n          var arraySinContratos = element.ContratosDespues.sin_contratos[0];\n          var arrayAnterior = element.ContratosAnterior;\n          //venta actual contratos\n          cal.ConCVentaBruta = arrayContratos.reduce(function (a, b) {\n            return parseFloat(a) + parseFloat(b[\"VEN_VALOR\"] || 0);\n          }, 0);\n          cal.ConCVentaNeta = arrayContratos.reduce(function (a, b) {\n            return parseFloat(a) + parseFloat(b[\"ven_neta\"] || 0);\n          }, 0);\n          //venta actual sin contratos\n          cal.SinCVentaBruta = parseFloat(arraySinContratos.ventaBrutaActual);\n          cal.SinCVentaNeta = parseFloat(arraySinContratos.ven_neta_actual);\n          //venta anterior\n          cal.VentaBAnterior = arrayAnterior.reduce(function (a, b) {\n            return parseFloat(a) + parseFloat(b[\"VEN_VALOR\"] || 0);\n          }, 0);\n          cal.ventaNAnterior = arrayAnterior.reduce(function (a, b) {\n            return parseFloat(a) + parseFloat(b[\"ven_neta\"] || 0);\n          }, 0);\n          arregloPredatos.push(cal);\n        });\n        me.arregloVenta = arregloPredatos;\n        console.log(\"uno\", me.arregloVenta);\n        me.renderType();\n      }).catch(function (error) {\n        me.$vs.loading.close();\n        console.log(error + ' error');\n      });\n    },\n    renderType: function renderType() {\n      var me = this;\n      me.TmparregloVenta = [];\n      var preDatos = [];\n      preDatos = me.arregloVenta;\n      var arregloPreFinal = [];\n      //segundos calculos\n      preDatos.forEach(function (element) {\n        var cal = new Object();\n        cal.id_asesor = element.id_asesor;\n        cal.asesor = element.asesor;\n        cal.iniciales = element.iniciales;\n        cal.cedula = element.cedula;\n        //venta actual contratos\n        cal.ConCVentaBruta = element.ConCVentaBruta;\n        cal.ConCVentaNeta = element.ConCVentaNeta;\n        //venta actual sin contratos\n        cal.SinCVentaBruta = element.SinCVentaBruta;\n        cal.SinCVentaNeta = element.SinCVentaNeta;\n        //venta anterior\n        cal.VentaBAnterior = element.VentaBAnterior;\n        cal.ventaNAnterior = element.ventaNAnterior;\n        //VENTA QUE SE MOSTRARA EN EL FRONT\n        //con contratos\n        var preVentaBActual = 0;\n        if (me.tipo == 0) {\n          cal.ventaBrutaActual = element.ConCVentaBruta;\n          cal.ven_neta_actual = element.ConCVentaNeta;\n          preVentaBActual = element.ConCVentaBruta;\n        }\n        //sin contratos\n        if (me.tipo == 1) {\n          cal.ventaBrutaActual = element.SinCVentaBruta;\n          cal.ven_neta_actual = element.SinCVentaNeta;\n          preVentaBActual = element.SinCVentaBruta;\n        }\n        //todos(bruta con contrato y sin contrato)\n        if (me.tipo == 2) {\n          cal.ventaBrutaActual = parseFloat(element.ConCVentaBruta) + parseFloat(element.SinCVentaBruta);\n          cal.ven_neta_actual = parseFloat(element.ConCVentaNeta) + parseFloat(element.SinCVentaNeta);\n          preVentaBActual = parseFloat(element.ConCVentaBruta) + parseFloat(element.SinCVentaBruta);\n        }\n        //VARIACION VENTAS BRUTAS => venta actual bruta - venta bruta anterior\n        cal.VariacionVentaBruta = preVentaBActual - element.VentaBAnterior;\n        var restaVentasBrutas = preVentaBActual - element.VentaBAnterior;\n        //validar division para cero\n        var prePorcentajeVariaciacionPresupuesto = 0;\n        if (element.VentaBAnterior == 0) {\n          prePorcentajeVariaciacionPresupuesto = 0;\n        } else {\n          prePorcentajeVariaciacionPresupuesto = restaVentasBrutas / element.VentaBAnterior;\n        }\n        //PORCENTAJE EN RELACION AL PRESUPUESTO => ( (venta actual bruta - venta bruta anterior)/venta actual bruta ) *100\n        cal.PorcentajeVariacionPresupuesto = (prePorcentajeVariaciacionPresupuesto * 100).toFixed(0);\n        arregloPreFinal.push(cal);\n      });\n      console.log(\"dos\", arregloPreFinal);\n      //me.TmparregloVenta = arregloPreFinal\n      //FILTRO\n      //si checkList es true se mostrara todo los asesores\n      if (me.checkList) {\n        console.log(\"entro1\");\n        me.TmparregloVenta = arregloPreFinal;\n      } else {\n        // si checkList es false se mostrara solo los asesores que tengan ventas\n        console.log(\"entro2\", arregloPreFinal);\n        console.table(arregloPreFinal);\n        me.TmparregloVenta = arregloPreFinal.filter(function (p) {\n          return p.preVentaBActual > 0 || p.VentaBAnterior > 0;\n        });\n      }\n    },\n    f_notificaciones: function f_notificaciones(msj, color, icono) {\n      var me = this;\n      me.$vs.notify({\n        text: msj,\n        color: color,\n        iconPack: 'feather',\n        icon: icono\n      });\n      return;\n    },\n    //metodo par descargar el excel\n    ExportToExcel: function ExportToExcel(type, fn, dl) {\n      var elt = document.getElementById('miTabla');\n      var wb = XLSX.utils.table_to_book(elt, {\n        sheet: \"sheet1\"\n      });\n      return dl ? XLSX.write(wb, {\n        bookType: type,\n        bookSST: true,\n        type: 'base64'\n      }) : XLSX.writeFile(wb, fn || 'ReporteVendedores.' + (type || 'xlsx'));\n    }\n  }\n};",{"version":3,"names":["vSelect","moment","XLSX","data","TmparregloVenta","arregloVenta","arregloPeriodos","periodoSelectAnterior","periodoSelectDespues","checkList","year","tipo","region","components","mounted","me","format","getPeriodos","computed","sumaVentaBrutaAnterior","length","datos","filter","p","VentaBAnterior","total","reduce","a","b","transformar","toFixed","replace","sumaNetaAnterior","ventaNAnterior","sumaVentaBrutaActual","ventaBrutaActual","sumaVentaNetaActual","ven_neta_actual","sumaVariacionVentaBruta","VariacionVentaBruta","methods","$http","get","$server_url","then","res","region_idregion","catch","error","filtrarDecimal","numero","getValoresVenta","msj","undefined","f_notificaciones","$vs","loading","url","idperiodoescolar","codigo_contrato","close","status","message","arregloPredatos","forEach","element","cal","Object","id_asesor","asesor","iniciales","cedula","arrayContratos","ContratosDespues","contratos","arraySinContratos","sin_contratos","arrayAnterior","ContratosAnterior","ConCVentaBruta","parseFloat","ConCVentaNeta","SinCVentaBruta","SinCVentaNeta","push","console","log","renderType","preDatos","arregloPreFinal","preVentaBActual","restaVentasBrutas","prePorcentajeVariaciacionPresupuesto","PorcentajeVariacionPresupuesto","table","color","icono","notify","text","iconPack","icon","ExportToExcel","type","fn","dl","elt","document","getElementById","wb","utils","table_to_book","sheet","write","bookType","bookSST","writeFile"],"sources":["src/views/pedidos/gerencia/reportes/ReporteVentaVendedor2.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <div>\r\n          <b>Filtro:</b>\r\n          <ul class=\"flex mt-2\">\r\n              <li class=\"modelx\">\r\n                  <vs-radio v-model=\"tipo\" @input=\"renderType()\" vs-name=\"radios1tipo\" vs-value=\"0\">Con contratos</vs-radio>\r\n              </li>\r\n              <li class=\"ml-2\">\r\n              <vs-radio v-model=\"tipo\" @input=\"renderType()\" vs-name=\"radios1tipo\" vs-value=\"1\">Sin contrato</vs-radio>\r\n              </li>\r\n              <li class=\"ml-2\">\r\n              <vs-radio v-model=\"tipo\" @input=\"renderType()\" vs-name=\"radios1tipo\" vs-value=\"2\">Todos</vs-radio>\r\n              </li>\r\n              <li style=\"list-style: none;\">\r\n                  <vs-checkbox v-model=\"checkList\" style=\"margin-left: 10px;\" @input=\"renderType()\">Mostrar todo los asesores</vs-checkbox>\r\n              </li>\r\n          </ul>\r\n          <vs-divider>Region</vs-divider>\r\n          <div class=\"flex justify-center\">\r\n            <ul class=\"flex\">\r\n              <li>\r\n                <vs-radio v-model=\"region\" @input=\"getPeriodos();TmparregloVenta=[];\" vs-name=\"radios1region\" vs-value=\"2\" class=\"mr-3\">Costa</vs-radio>\r\n              </li>\r\n              <li>\r\n                <vs-radio v-model=\"region\" @input=\"getPeriodos();TmparregloVenta=[];\" vs-name=\"radios1region\" vs-value=\"1\">Sierra</vs-radio>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <br>\r\n          <div class=\"vx-row\">\r\n            <div class=\"vx-col w-full sm:w-full md:w-1/2 lg:w-1/2 xl:w-1/2 mb-6\">\r\n              <p> <ion-icon name=\"contract-outline\"></ion-icon>Período anterior</p>\r\n              <v-select :options=\"arregloPeriodos\" @input=\"TmparregloVenta=[];\" :reduce=\"arregloPeriodos => arregloPeriodos\" label=\"periodoescolar\" class=\"w-full\" v-model=\"periodoSelectAnterior\" />\r\n            </div>\r\n            <div class=\"vx-col w-full sm:w-full md:w-1/2 lg:w-1/2 xl:w-1/2 mb-6\">\r\n              <p> <ion-icon name=\"contract-outline\"></ion-icon>Período despues</p>\r\n              <v-select :options=\"arregloPeriodos\" @input=\"TmparregloVenta=[];\" :reduce=\"arregloPeriodos => arregloPeriodos\" label=\"periodoescolar\" class=\"w-full\" v-model=\"periodoSelectDespues\" />\r\n            </div>\r\n          </div>\r\n          <div class=\"flex justify-center\">\r\n            <vs-button color=\"primary\" @click=\"getValoresVenta()\" type=\"border\" icon=\"save\">Generar reporte</vs-button>\r\n          </div>\r\n        </div>\r\n        <div v-if=\"TmparregloVenta.length > 0 && periodoSelectAnterior && periodoSelectDespues\">\r\n            <div class=\"mt-2 flex\">\r\n                <vs-button color=\"success\" @click=\"ExportToExcel('xlsx')\" type=\"border\"><i class=\"fa-solid fa-file-excel\"></i>  Exportar</vs-button>\r\n            </div>\r\n            <p class=\"mt-2\">Cantidad :{{ TmparregloVenta.length }}</p>\r\n            <table width=\"100%\" border=\"1\"  cellspacing=\"0\" cellpadding=\"0\" id=\"miTabla\" class=\"mt-4\">\r\n                <vs-tr>\r\n                  <vs-th colspan=\"1\" rowspan=\"2\" style=\"width: 150px;\" class=\"rotar\"><b>VENDEDOR</b></vs-th>\r\n                  <vs-th colspan=\"1\" rowspan=\"2\" style=\"width: 150px;\" class=\"rotar\"><b>PERIODO ANTERIOR</b></vs-th>\r\n                  <vs-th colspan=\"2\" class=\"rotar\"><b>VENTAS REALES  {{ periodoSelectAnterior.periodoescolar }} </b></vs-th>\r\n                  <vs-th colspan=\"1\" rowspan=\"2\" style=\"width: 150px;\" class=\"rotar\"><b>PERIODO DESPUES</b></vs-th>\r\n                  <vs-th colspan=\"2\" class=\"rotar\"><b>VENTA SEGUN PROMOCION   {{ periodoSelectDespues.periodoescolar }} </b></vs-th>\r\n                  <vs-th rowspan=\"2\">VARIACION VENTAS BRUTAS POR TEMPORADA</vs-th>\r\n                  <vs-th rowspan=\"2\">% DE VARIACION EN  RELACION AL PRESUPUESTO</vs-th>\r\n                </vs-tr>\r\n                <vs-tr>\r\n                  <vs-th>VENTA BRUTA</vs-th>\r\n                  <vs-th>VENTA NETA</vs-th>\r\n                  <vs-th>VENTA BRUTA</vs-th>\r\n                  <vs-th>VENTA NETA</vs-th>\r\n                </vs-tr>\r\n                <tr v-for=\"(tr,key) in TmparregloVenta\" :key=\"key\">\r\n                    <td>\r\n                        <vs-button color=\"success\" @click=\"removeItemFromArr(TmparregloVenta,tr)\"  type=\"flat\" icon-pack=\"feather\" icon=\"icon-x\"></vs-button>\r\n                        <p>{{ tr.asesor.toUpperCase() }}</p>\r\n                        <p>{{ tr.iniciales}}</p>\r\n                    </td>\r\n                    <td>\r\n                      {{ periodoSelectAnterior.periodoescolar }}\r\n                    </td>\r\n                    <td>\r\n                        ${{ filtrarDecimal(tr.VentaBAnterior) }}\r\n                    </td>\r\n                    <td>\r\n                        ${{ filtrarDecimal(tr.ventaNAnterior) }}\r\n                    </td>\r\n                    <vs-td>\r\n                      {{ periodoSelectDespues.periodoescolar }}\r\n                    </vs-td>\r\n                    <td>\r\n                        <p v-if=\"tr.ventaBrutaActual == 0\">$0</p>\r\n                        <p v-else>${{ filtrarDecimal(tr.ventaBrutaActual) }}</p>\r\n                    </td>\r\n                    <td>\r\n                        <p v-if=\"tr.ven_neta_actual == 0\">$0</p>\r\n                        <p v-else>${{ filtrarDecimal(tr.ven_neta_actual) }}</p>\r\n                    </td>\r\n                    <td>${{ filtrarDecimal(tr.VariacionVentaBruta) }}</td>\r\n                    <td>{{ tr.PorcentajeVariacionPresupuesto }} <b style=\"display: none;\">.</b>%</td>\r\n                </tr>\r\n                <tr>\r\n                    <td><b>TOTAL</b></td>\r\n                    <td><b>${{ sumaVentaBrutaAnterior }}</b></td>\r\n                    <td><b>${{ sumaNetaAnterior }}</b></td>\r\n                    <td><b>${{ sumaVentaBrutaActual }}</b></td>\r\n                    <td><b>${{ sumaVentaNetaActual }}</b></td>\r\n                    <td><b>${{ sumaVariacionVentaBruta }}</b></td>\r\n                </tr>\r\n            </table>\r\n        </div>\r\n        <br><br><br><br>\r\n    </div>\r\n</template>\r\n<script>\r\nimport vSelect from 'vue-select'\r\nimport moment from \"moment\";\r\nimport * as XLSX from 'xlsx';\r\nexport default{\r\n    data(){\r\n        return{\r\n            TmparregloVenta:[],\r\n            arregloVenta:[],\r\n            arregloPeriodos:[],\r\n            periodoSelectAnterior:'',\r\n            periodoSelectDespues:'',\r\n            checkList:false,\r\n            year:'',\r\n            tipo:0,\r\n            region:2,\r\n        }\r\n    },\r\n    components:{\r\n        vSelect,\r\n    },\r\n    mounted(){\r\n        let me = this;\r\n        me.year = moment().format('YYYY')\r\n        // me.getValoresVenta()\r\n        me.getPeriodos()\r\n    },\r\n    computed:{\r\n        sumaVentaBrutaAnterior(){\r\n            let me = this;\r\n            if(me.TmparregloVenta.length > 0){\r\n                let datos = me.TmparregloVenta.filter(p => p.VentaBAnterior)\r\n                let total = datos.reduce((a, b) => a + (b[\"VentaBAnterior\"] || 0), 0);\r\n                var transformar = 0\r\n                if(total == 0 || total == \"0\"){\r\n                }else{\r\n                    transformar = (total).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\r\n                }\r\n                return transformar\r\n            }\r\n        },\r\n        sumaNetaAnterior(){\r\n            let me = this;\r\n            if(me.TmparregloVenta.length > 0){\r\n                let datos = me.TmparregloVenta.filter(p => p.ventaNAnterior)\r\n                let total = datos.reduce((a, b) => a + (b[\"ventaNAnterior\"] || 0), 0);\r\n                var transformar = 0\r\n                if(total == 0 || total == \"0\"){\r\n                }else{\r\n                    transformar = (total).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\r\n                }\r\n                return transformar\r\n            }\r\n        },\r\n        sumaVentaBrutaActual(){\r\n            let me = this;\r\n            if(me.TmparregloVenta.length > 0){\r\n                let datos = me.TmparregloVenta.filter(p => p.ventaBrutaActual)\r\n                let total = datos.reduce((a, b) => a + (b[\"ventaBrutaActual\"] || 0), 0);\r\n                var transformar = 0\r\n                if(total == 0 || total == \"0\"){\r\n\r\n                }else{\r\n                    transformar = (total).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\r\n                }\r\n                return transformar\r\n            }\r\n        },\r\n        sumaVentaNetaActual(){\r\n            let me = this;\r\n            if(me.TmparregloVenta.length > 0){\r\n                let datos = me.TmparregloVenta.filter(p => p.ven_neta_actual)\r\n                let total = datos.reduce((a, b) => a + (b[\"ven_neta_actual\"] || 0), 0);\r\n                var transformar = 0\r\n                if(total == 0 || total == \"0\"){\r\n                }else{\r\n                    transformar = (total).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\r\n                }\r\n                return transformar\r\n            }\r\n        },\r\n        sumaVariacionVentaBruta(){\r\n            let me = this;\r\n            if(me.TmparregloVenta.length > 0){\r\n                let datos = me.TmparregloVenta.filter(p => p.VariacionVentaBruta)\r\n                let total = datos.reduce((a, b) => a + (b[\"VariacionVentaBruta\"] || 0), 0);\r\n                var transformar = 0\r\n                if(total == 0 || total == \"0\"){\r\n                }else{\r\n                    transformar = (total).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\r\n                }\r\n                return transformar\r\n            }\r\n        },\r\n    },\r\n    methods:{\r\n        getPeriodos(){\r\n            let me = this\r\n            this.$http.get(this.$server_url+'get_periodos_pedidos')\r\n            .then(res => {\r\n                let datos = res.data\r\n                me.arregloPeriodos = datos.filter(p => p.region_idregion == me.region)\r\n            })\r\n            .catch(function (error) {\r\n            })\r\n        },\r\n        filtrarDecimal(numero){\r\n            let me = this\r\n            const transformar = (numero).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\r\n            return transformar\r\n        },\r\n        getValoresVenta() {\r\n            let me = this;\r\n            me.arregloVenta = []\r\n            me.TmparregloVenta = []\r\n            let msj = \"\"\r\n            if(me.periodoSelectAnterior == \"\" || me.periodoSelectAnterior == null || me.periodoSelectAnterior == undefined){\r\n                msj = 'Seleccione un período anterior por favor'\r\n                me.f_notificaciones(msj, 'warning', 'icon-alert-triangle')\r\n                return\r\n            }\r\n            if(me.periodoSelectDespues == \"\" || me.periodoSelectDespues == null || me.periodoSelectDespues == undefined){\r\n                msj = 'Seleccione un período despues por favor'\r\n                me.f_notificaciones(msj, 'warning', 'icon-alert-triangle')\r\n                return\r\n            }\r\n            me.$vs.loading()\r\n            var url = 'pruebatest?periodo_idUno='+me.periodoSelectAnterior.idperiodoescolar+'&periodo_idDos='+me.periodoSelectDespues.idperiodoescolar+'&codigoC='+me.periodoSelectAnterior.codigo_contrato+'&codigoC2='+me.periodoSelectDespues.codigo_contrato\r\n            this.$http.get(this.$server_url+url)\r\n                .then(function (res) {\r\n                    me.$vs.loading.close()\r\n                    if(res.data.status == 0){\r\n                        let msj = res.data.message\r\n                        me.f_notificaciones(msj, 'warning', 'icon-alert-triangle')\r\n                        return\r\n                    }\r\n                    var arregloPredatos = []\r\n                    var datos = []\r\n                    datos = res.data\r\n                    datos.forEach(element => {\r\n                        var cal = new Object();\r\n                        cal.id_asesor          = element.id_asesor\r\n                        cal.asesor             = element.asesor\r\n                        cal.iniciales          = element.iniciales\r\n                        cal.cedula             = element.cedula\r\n                        let arrayContratos     = element.ContratosDespues.contratos\r\n                        let arraySinContratos  = element.ContratosDespues.sin_contratos[0]\r\n                        let arrayAnterior      = element.ContratosAnterior\r\n                        //venta actual contratos\r\n                        cal.ConCVentaBruta     = arrayContratos.reduce((a, b) => parseFloat(a) + parseFloat((b[\"VEN_VALOR\"] || 0)), 0);\r\n                        cal.ConCVentaNeta      = arrayContratos.reduce((a, b) => parseFloat(a) + parseFloat((b[\"ven_neta\"] || 0)), 0);\r\n                        //venta actual sin contratos\r\n                        cal.SinCVentaBruta     = parseFloat(arraySinContratos.ventaBrutaActual)\r\n                        cal.SinCVentaNeta      = parseFloat(arraySinContratos.ven_neta_actual)\r\n                        //venta anterior\r\n                        cal.VentaBAnterior     = arrayAnterior.reduce((a, b) => parseFloat(a) + parseFloat((b[\"VEN_VALOR\"] || 0)), 0);\r\n                        cal.ventaNAnterior     = arrayAnterior.reduce((a, b) => parseFloat(a) + parseFloat((b[\"ven_neta\"] || 0)), 0);\r\n                        arregloPredatos.push(cal)\r\n                    });\r\n                    me.arregloVenta = arregloPredatos\r\n                    console.log(\"uno\",me.arregloVenta)\r\n                    me.renderType()\r\n                })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close()\r\n                    console.log(error + ' error');\r\n                })\r\n        },\r\n        renderType(){\r\n            let me = this;\r\n            me.TmparregloVenta = []\r\n            let preDatos = []\r\n            preDatos     = me.arregloVenta\r\n            var arregloPreFinal = []\r\n            //segundos calculos\r\n            preDatos.forEach(element => {\r\n                var cal = new Object();\r\n                cal.id_asesor               = element.id_asesor\r\n                cal.asesor                  = element.asesor\r\n                cal.iniciales               = element.iniciales\r\n                cal.cedula                  = element.cedula\r\n                //venta actual contratos\r\n                cal.ConCVentaBruta          = element.ConCVentaBruta\r\n                cal.ConCVentaNeta           = element.ConCVentaNeta\r\n                //venta actual sin contratos\r\n                cal.SinCVentaBruta          = element.SinCVentaBruta\r\n                cal.SinCVentaNeta           = element.SinCVentaNeta\r\n                //venta anterior\r\n                cal.VentaBAnterior          = element.VentaBAnterior\r\n                cal.ventaNAnterior          = element.ventaNAnterior\r\n                //VENTA QUE SE MOSTRARA EN EL FRONT\r\n                //con contratos\r\n                var preVentaBActual         = 0\r\n                if(me.tipo == 0){\r\n                    cal.ventaBrutaActual    = element.ConCVentaBruta\r\n                    cal.ven_neta_actual     = element.ConCVentaNeta\r\n                    preVentaBActual         = element.ConCVentaBruta\r\n                }\r\n                //sin contratos\r\n                if(me.tipo == 1){\r\n                    cal.ventaBrutaActual    = element.SinCVentaBruta\r\n                    cal.ven_neta_actual     = element.SinCVentaNeta\r\n                    preVentaBActual         = element.SinCVentaBruta\r\n                }\r\n                //todos(bruta con contrato y sin contrato)\r\n                if(me.tipo == 2){\r\n                    cal.ventaBrutaActual    = parseFloat(element.ConCVentaBruta) + parseFloat(element.SinCVentaBruta )\r\n                    cal.ven_neta_actual     = parseFloat(element.ConCVentaNeta)  + parseFloat(element.SinCVentaNeta )\r\n                    preVentaBActual         = parseFloat(element.ConCVentaBruta) + parseFloat(element.SinCVentaBruta )\r\n                }\r\n                //VARIACION VENTAS BRUTAS => venta actual bruta - venta bruta anterior\r\n                cal.VariacionVentaBruta     = preVentaBActual - element.VentaBAnterior\r\n                let restaVentasBrutas       = preVentaBActual - element.VentaBAnterior\r\n                //validar division para cero\r\n                var prePorcentajeVariaciacionPresupuesto = 0;\r\n                if((element.VentaBAnterior == 0)){\r\n                    prePorcentajeVariaciacionPresupuesto = 0\r\n                }else{\r\n                    prePorcentajeVariaciacionPresupuesto = restaVentasBrutas / element.VentaBAnterior\r\n                }\r\n                //PORCENTAJE EN RELACION AL PRESUPUESTO => ( (venta actual bruta - venta bruta anterior)/venta actual bruta ) *100\r\n                cal.PorcentajeVariacionPresupuesto = ((prePorcentajeVariaciacionPresupuesto) * 100).toFixed(0)\r\n                arregloPreFinal.push(cal)\r\n            });\r\n            console.log(\"dos\",arregloPreFinal)\r\n            //me.TmparregloVenta = arregloPreFinal\r\n             //FILTRO\r\n             //si checkList es true se mostrara todo los asesores\r\n             if(me.checkList){\r\n              console.log(\"entro1\")\r\n                me.TmparregloVenta = arregloPreFinal\r\n            }else{\r\n              // si checkList es false se mostrara solo los asesores que tengan ventas\r\n              console.log(\"entro2\",arregloPreFinal)\r\n              console.table(arregloPreFinal)\r\n                me.TmparregloVenta = arregloPreFinal.filter(p => (p.preVentaBActual > 0 || p.VentaBAnterior > 0))\r\n            }\r\n        },\r\n        f_notificaciones(msj, color, icono) {\r\n            let me = this;\r\n            me.$vs.notify({\r\n                text: msj,\r\n                color: color,\r\n                iconPack: 'feather',\r\n                icon: icono\r\n            })\r\n            return;\r\n        },\r\n        //metodo par descargar el excel\r\n        ExportToExcel(type, fn, dl) {\r\n          var elt = document.getElementById('miTabla');\r\n          var wb = XLSX.utils.table_to_book(elt, { sheet: \"sheet1\" });\r\n          return dl ?\r\n              XLSX.write(wb, { bookType: type, bookSST: true, type: 'base64' }):\r\n              XLSX.writeFile(wb, fn || ('ReporteVendedores.' + (type || 'xlsx')));\r\n        },\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n.tabla1 {\r\n  table-layout: fixed;\r\n  width: 95%;\r\n  border-collapse: collapse;\r\n  border: none;\r\n  margin-left: 15px;\r\n}\r\n.encabezado ,td,th {\r\n    border: 1px solid rgb(227, 227, 227);\r\n    text-align: center;\r\n    border-spacing: 0;\r\n}\r\n</style>\r\n"],"mappings":";;AA4GA,OAAAA,OAAA;AACA,OAAAC,MAAA;AACA,YAAAC,IAAA;AACA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,eAAA;MACAC,YAAA;MACAC,eAAA;MACAC,qBAAA;MACAC,oBAAA;MACAC,SAAA;MACAC,IAAA;MACAC,IAAA;MACAC,MAAA;IACA;EACA;EACAC,UAAA;IACAb,OAAA,EAAAA;EACA;EACAc,OAAA,WAAAA,QAAA;IACA,IAAAC,EAAA;IACAA,EAAA,CAAAL,IAAA,GAAAT,MAAA,GAAAe,MAAA;IACA;IACAD,EAAA,CAAAE,WAAA;EACA;EACAC,QAAA;IACAC,sBAAA,WAAAA,uBAAA;MACA,IAAAJ,EAAA;MACA,IAAAA,EAAA,CAAAX,eAAA,CAAAgB,MAAA;QACA,IAAAC,KAAA,GAAAN,EAAA,CAAAX,eAAA,CAAAkB,MAAA,WAAAC,CAAA;UAAA,OAAAA,CAAA,CAAAC,cAAA;QAAA;QACA,IAAAC,KAAA,GAAAJ,KAAA,CAAAK,MAAA,WAAAC,CAAA,EAAAC,CAAA;UAAA,OAAAD,CAAA,IAAAC,CAAA;QAAA;QACA,IAAAC,WAAA;QACA,IAAAJ,KAAA,SAAAA,KAAA,UACA;UACAI,WAAA,GAAAJ,KAAA,CAAAK,OAAA,IAAAC,OAAA;QACA;QACA,OAAAF,WAAA;MACA;IACA;IACAG,gBAAA,WAAAA,iBAAA;MACA,IAAAjB,EAAA;MACA,IAAAA,EAAA,CAAAX,eAAA,CAAAgB,MAAA;QACA,IAAAC,KAAA,GAAAN,EAAA,CAAAX,eAAA,CAAAkB,MAAA,WAAAC,CAAA;UAAA,OAAAA,CAAA,CAAAU,cAAA;QAAA;QACA,IAAAR,KAAA,GAAAJ,KAAA,CAAAK,MAAA,WAAAC,CAAA,EAAAC,CAAA;UAAA,OAAAD,CAAA,IAAAC,CAAA;QAAA;QACA,IAAAC,WAAA;QACA,IAAAJ,KAAA,SAAAA,KAAA,UACA;UACAI,WAAA,GAAAJ,KAAA,CAAAK,OAAA,IAAAC,OAAA;QACA;QACA,OAAAF,WAAA;MACA;IACA;IACAK,oBAAA,WAAAA,qBAAA;MACA,IAAAnB,EAAA;MACA,IAAAA,EAAA,CAAAX,eAAA,CAAAgB,MAAA;QACA,IAAAC,KAAA,GAAAN,EAAA,CAAAX,eAAA,CAAAkB,MAAA,WAAAC,CAAA;UAAA,OAAAA,CAAA,CAAAY,gBAAA;QAAA;QACA,IAAAV,KAAA,GAAAJ,KAAA,CAAAK,MAAA,WAAAC,CAAA,EAAAC,CAAA;UAAA,OAAAD,CAAA,IAAAC,CAAA;QAAA;QACA,IAAAC,WAAA;QACA,IAAAJ,KAAA,SAAAA,KAAA,UAEA;UACAI,WAAA,GAAAJ,KAAA,CAAAK,OAAA,IAAAC,OAAA;QACA;QACA,OAAAF,WAAA;MACA;IACA;IACAO,mBAAA,WAAAA,oBAAA;MACA,IAAArB,EAAA;MACA,IAAAA,EAAA,CAAAX,eAAA,CAAAgB,MAAA;QACA,IAAAC,KAAA,GAAAN,EAAA,CAAAX,eAAA,CAAAkB,MAAA,WAAAC,CAAA;UAAA,OAAAA,CAAA,CAAAc,eAAA;QAAA;QACA,IAAAZ,KAAA,GAAAJ,KAAA,CAAAK,MAAA,WAAAC,CAAA,EAAAC,CAAA;UAAA,OAAAD,CAAA,IAAAC,CAAA;QAAA;QACA,IAAAC,WAAA;QACA,IAAAJ,KAAA,SAAAA,KAAA,UACA;UACAI,WAAA,GAAAJ,KAAA,CAAAK,OAAA,IAAAC,OAAA;QACA;QACA,OAAAF,WAAA;MACA;IACA;IACAS,uBAAA,WAAAA,wBAAA;MACA,IAAAvB,EAAA;MACA,IAAAA,EAAA,CAAAX,eAAA,CAAAgB,MAAA;QACA,IAAAC,KAAA,GAAAN,EAAA,CAAAX,eAAA,CAAAkB,MAAA,WAAAC,CAAA;UAAA,OAAAA,CAAA,CAAAgB,mBAAA;QAAA;QACA,IAAAd,KAAA,GAAAJ,KAAA,CAAAK,MAAA,WAAAC,CAAA,EAAAC,CAAA;UAAA,OAAAD,CAAA,IAAAC,CAAA;QAAA;QACA,IAAAC,WAAA;QACA,IAAAJ,KAAA,SAAAA,KAAA,UACA;UACAI,WAAA,GAAAJ,KAAA,CAAAK,OAAA,IAAAC,OAAA;QACA;QACA,OAAAF,WAAA;MACA;IACA;EACA;EACAW,OAAA;IACAvB,WAAA,WAAAA,YAAA;MACA,IAAAF,EAAA;MACA,KAAA0B,KAAA,CAAAC,GAAA,MAAAC,WAAA,2BACAC,IAAA,WAAAC,GAAA;QACA,IAAAxB,KAAA,GAAAwB,GAAA,CAAA1C,IAAA;QACAY,EAAA,CAAAT,eAAA,GAAAe,KAAA,CAAAC,MAAA,WAAAC,CAAA;UAAA,OAAAA,CAAA,CAAAuB,eAAA,IAAA/B,EAAA,CAAAH,MAAA;QAAA;MACA,GACAmC,KAAA,WAAAC,KAAA,GACA;IACA;IACAC,cAAA,WAAAA,eAAAC,MAAA;MACA,IAAAnC,EAAA;MACA,IAAAc,WAAA,GAAAqB,MAAA,CAAApB,OAAA,IAAAC,OAAA;MACA,OAAAF,WAAA;IACA;IACAsB,eAAA,WAAAA,gBAAA;MACA,IAAApC,EAAA;MACAA,EAAA,CAAAV,YAAA;MACAU,EAAA,CAAAX,eAAA;MACA,IAAAgD,GAAA;MACA,IAAArC,EAAA,CAAAR,qBAAA,UAAAQ,EAAA,CAAAR,qBAAA,YAAAQ,EAAA,CAAAR,qBAAA,IAAA8C,SAAA;QACAD,GAAA;QACArC,EAAA,CAAAuC,gBAAA,CAAAF,GAAA;QACA;MACA;MACA,IAAArC,EAAA,CAAAP,oBAAA,UAAAO,EAAA,CAAAP,oBAAA,YAAAO,EAAA,CAAAP,oBAAA,IAAA6C,SAAA;QACAD,GAAA;QACArC,EAAA,CAAAuC,gBAAA,CAAAF,GAAA;QACA;MACA;MACArC,EAAA,CAAAwC,GAAA,CAAAC,OAAA;MACA,IAAAC,GAAA,iCAAA1C,EAAA,CAAAR,qBAAA,CAAAmD,gBAAA,uBAAA3C,EAAA,CAAAP,oBAAA,CAAAkD,gBAAA,iBAAA3C,EAAA,CAAAR,qBAAA,CAAAoD,eAAA,kBAAA5C,EAAA,CAAAP,oBAAA,CAAAmD,eAAA;MACA,KAAAlB,KAAA,CAAAC,GAAA,MAAAC,WAAA,GAAAc,GAAA,EACAb,IAAA,WAAAC,GAAA;QACA9B,EAAA,CAAAwC,GAAA,CAAAC,OAAA,CAAAI,KAAA;QACA,IAAAf,GAAA,CAAA1C,IAAA,CAAA0D,MAAA;UACA,IAAAT,IAAA,GAAAP,GAAA,CAAA1C,IAAA,CAAA2D,OAAA;UACA/C,EAAA,CAAAuC,gBAAA,CAAAF,IAAA;UACA;QACA;QACA,IAAAW,eAAA;QACA,IAAA1C,KAAA;QACAA,KAAA,GAAAwB,GAAA,CAAA1C,IAAA;QACAkB,KAAA,CAAA2C,OAAA,WAAAC,OAAA;UACA,IAAAC,GAAA,OAAAC,MAAA;UACAD,GAAA,CAAAE,SAAA,GAAAH,OAAA,CAAAG,SAAA;UACAF,GAAA,CAAAG,MAAA,GAAAJ,OAAA,CAAAI,MAAA;UACAH,GAAA,CAAAI,SAAA,GAAAL,OAAA,CAAAK,SAAA;UACAJ,GAAA,CAAAK,MAAA,GAAAN,OAAA,CAAAM,MAAA;UACA,IAAAC,cAAA,GAAAP,OAAA,CAAAQ,gBAAA,CAAAC,SAAA;UACA,IAAAC,iBAAA,GAAAV,OAAA,CAAAQ,gBAAA,CAAAG,aAAA;UACA,IAAAC,aAAA,GAAAZ,OAAA,CAAAa,iBAAA;UACA;UACAZ,GAAA,CAAAa,cAAA,GAAAP,cAAA,CAAA9C,MAAA,WAAAC,CAAA,EAAAC,CAAA;YAAA,OAAAoD,UAAA,CAAArD,CAAA,IAAAqD,UAAA,CAAApD,CAAA;UAAA;UACAsC,GAAA,CAAAe,aAAA,GAAAT,cAAA,CAAA9C,MAAA,WAAAC,CAAA,EAAAC,CAAA;YAAA,OAAAoD,UAAA,CAAArD,CAAA,IAAAqD,UAAA,CAAApD,CAAA;UAAA;UACA;UACAsC,GAAA,CAAAgB,cAAA,GAAAF,UAAA,CAAAL,iBAAA,CAAAxC,gBAAA;UACA+B,GAAA,CAAAiB,aAAA,GAAAH,UAAA,CAAAL,iBAAA,CAAAtC,eAAA;UACA;UACA6B,GAAA,CAAA1C,cAAA,GAAAqD,aAAA,CAAAnD,MAAA,WAAAC,CAAA,EAAAC,CAAA;YAAA,OAAAoD,UAAA,CAAArD,CAAA,IAAAqD,UAAA,CAAApD,CAAA;UAAA;UACAsC,GAAA,CAAAjC,cAAA,GAAA4C,aAAA,CAAAnD,MAAA,WAAAC,CAAA,EAAAC,CAAA;YAAA,OAAAoD,UAAA,CAAArD,CAAA,IAAAqD,UAAA,CAAApD,CAAA;UAAA;UACAmC,eAAA,CAAAqB,IAAA,CAAAlB,GAAA;QACA;QACAnD,EAAA,CAAAV,YAAA,GAAA0D,eAAA;QACAsB,OAAA,CAAAC,GAAA,QAAAvE,EAAA,CAAAV,YAAA;QACAU,EAAA,CAAAwE,UAAA;MACA,GACAxC,KAAA,WAAAC,KAAA;QACAjC,EAAA,CAAAwC,GAAA,CAAAC,OAAA,CAAAI,KAAA;QACAyB,OAAA,CAAAC,GAAA,CAAAtC,KAAA;MACA;IACA;IACAuC,UAAA,WAAAA,WAAA;MACA,IAAAxE,EAAA;MACAA,EAAA,CAAAX,eAAA;MACA,IAAAoF,QAAA;MACAA,QAAA,GAAAzE,EAAA,CAAAV,YAAA;MACA,IAAAoF,eAAA;MACA;MACAD,QAAA,CAAAxB,OAAA,WAAAC,OAAA;QACA,IAAAC,GAAA,OAAAC,MAAA;QACAD,GAAA,CAAAE,SAAA,GAAAH,OAAA,CAAAG,SAAA;QACAF,GAAA,CAAAG,MAAA,GAAAJ,OAAA,CAAAI,MAAA;QACAH,GAAA,CAAAI,SAAA,GAAAL,OAAA,CAAAK,SAAA;QACAJ,GAAA,CAAAK,MAAA,GAAAN,OAAA,CAAAM,MAAA;QACA;QACAL,GAAA,CAAAa,cAAA,GAAAd,OAAA,CAAAc,cAAA;QACAb,GAAA,CAAAe,aAAA,GAAAhB,OAAA,CAAAgB,aAAA;QACA;QACAf,GAAA,CAAAgB,cAAA,GAAAjB,OAAA,CAAAiB,cAAA;QACAhB,GAAA,CAAAiB,aAAA,GAAAlB,OAAA,CAAAkB,aAAA;QACA;QACAjB,GAAA,CAAA1C,cAAA,GAAAyC,OAAA,CAAAzC,cAAA;QACA0C,GAAA,CAAAjC,cAAA,GAAAgC,OAAA,CAAAhC,cAAA;QACA;QACA;QACA,IAAAyD,eAAA;QACA,IAAA3E,EAAA,CAAAJ,IAAA;UACAuD,GAAA,CAAA/B,gBAAA,GAAA8B,OAAA,CAAAc,cAAA;UACAb,GAAA,CAAA7B,eAAA,GAAA4B,OAAA,CAAAgB,aAAA;UACAS,eAAA,GAAAzB,OAAA,CAAAc,cAAA;QACA;QACA;QACA,IAAAhE,EAAA,CAAAJ,IAAA;UACAuD,GAAA,CAAA/B,gBAAA,GAAA8B,OAAA,CAAAiB,cAAA;UACAhB,GAAA,CAAA7B,eAAA,GAAA4B,OAAA,CAAAkB,aAAA;UACAO,eAAA,GAAAzB,OAAA,CAAAiB,cAAA;QACA;QACA;QACA,IAAAnE,EAAA,CAAAJ,IAAA;UACAuD,GAAA,CAAA/B,gBAAA,GAAA6C,UAAA,CAAAf,OAAA,CAAAc,cAAA,IAAAC,UAAA,CAAAf,OAAA,CAAAiB,cAAA;UACAhB,GAAA,CAAA7B,eAAA,GAAA2C,UAAA,CAAAf,OAAA,CAAAgB,aAAA,IAAAD,UAAA,CAAAf,OAAA,CAAAkB,aAAA;UACAO,eAAA,GAAAV,UAAA,CAAAf,OAAA,CAAAc,cAAA,IAAAC,UAAA,CAAAf,OAAA,CAAAiB,cAAA;QACA;QACA;QACAhB,GAAA,CAAA3B,mBAAA,GAAAmD,eAAA,GAAAzB,OAAA,CAAAzC,cAAA;QACA,IAAAmE,iBAAA,GAAAD,eAAA,GAAAzB,OAAA,CAAAzC,cAAA;QACA;QACA,IAAAoE,oCAAA;QACA,IAAA3B,OAAA,CAAAzC,cAAA;UACAoE,oCAAA;QACA;UACAA,oCAAA,GAAAD,iBAAA,GAAA1B,OAAA,CAAAzC,cAAA;QACA;QACA;QACA0C,GAAA,CAAA2B,8BAAA,IAAAD,oCAAA,QAAA9D,OAAA;QACA2D,eAAA,CAAAL,IAAA,CAAAlB,GAAA;MACA;MACAmB,OAAA,CAAAC,GAAA,QAAAG,eAAA;MACA;MACA;MACA;MACA,IAAA1E,EAAA,CAAAN,SAAA;QACA4E,OAAA,CAAAC,GAAA;QACAvE,EAAA,CAAAX,eAAA,GAAAqF,eAAA;MACA;QACA;QACAJ,OAAA,CAAAC,GAAA,WAAAG,eAAA;QACAJ,OAAA,CAAAS,KAAA,CAAAL,eAAA;QACA1E,EAAA,CAAAX,eAAA,GAAAqF,eAAA,CAAAnE,MAAA,WAAAC,CAAA;UAAA,OAAAA,CAAA,CAAAmE,eAAA,QAAAnE,CAAA,CAAAC,cAAA;QAAA;MACA;IACA;IACA8B,gBAAA,WAAAA,iBAAAF,GAAA,EAAA2C,KAAA,EAAAC,KAAA;MACA,IAAAjF,EAAA;MACAA,EAAA,CAAAwC,GAAA,CAAA0C,MAAA;QACAC,IAAA,EAAA9C,GAAA;QACA2C,KAAA,EAAAA,KAAA;QACAI,QAAA;QACAC,IAAA,EAAAJ;MACA;MACA;IACA;IACA;IACAK,aAAA,WAAAA,cAAAC,IAAA,EAAAC,EAAA,EAAAC,EAAA;MACA,IAAAC,GAAA,GAAAC,QAAA,CAAAC,cAAA;MACA,IAAAC,EAAA,GAAA1G,IAAA,CAAA2G,KAAA,CAAAC,aAAA,CAAAL,GAAA;QAAAM,KAAA;MAAA;MACA,OAAAP,EAAA,GACAtG,IAAA,CAAA8G,KAAA,CAAAJ,EAAA;QAAAK,QAAA,EAAAX,IAAA;QAAAY,OAAA;QAAAZ,IAAA;MAAA,KACApG,IAAA,CAAAiH,SAAA,CAAAP,EAAA,EAAAL,EAAA,4BAAAD,IAAA;IACA;EACA;AACA","ignoreList":[]}]}