{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\admin\\preguntasFaq.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\admin\\preguntasFaq.vue","mtime":1712682815456},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\babel.config.js","mtime":1712682813877},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\.babelrc","mtime":1712682813750},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/laragon/www/PRY_NEW_JEYSON/LOCAL/plataformaprolipa_vue/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nexport default {\n  data: function data() {\n    return {\n      counterDanger: false,\n      update: false,\n      popupAddPregunta: false,\n      popupEditPregunta: false,\n      preguntasFaq: [],\n      itemEstado: [],\n      estadoPregunta: '',\n      pregunta: {\n        descripcion: '',\n        respuesta: '',\n        archivo: '',\n        url: '',\n        video: ''\n      },\n      preguntasfaq_id: 0,\n      //para subir archivos,\n      attachments: [],\n      form: new FormData(),\n      errorImage: 'no',\n      tamanioError: \"no\"\n    };\n  },\n  created: function created() {\n    var me = this;\n    me.preguntasfaq();\n  },\n  methods: {\n    //para subir archivos\n    fieldChange: function fieldChange(e) {\n      var me = this;\n      me.errorImage = 'no';\n      me.tamanioError = \"no\";\n      this.attachments = [];\n      var selectedFiles = e.target.files;\n      var validar = e.target.files[0].type;\n      var tamanio = e.target.files[0].size;\n      if (tamanio > 1000000) {\n        me.tamanioError = \"yes\";\n        me.$vs.notify({\n          text: 'El tamaño de la imagen excede 1MB',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        return false;\n      }\n      if (validar == 'image/png' || validar == 'image/jpg' || validar == 'image/jpeg') {\n        for (var i = 0; i < selectedFiles.length; i++) {\n          this.attachments.push(selectedFiles[i]);\n        }\n        me.errorImage = 'no';\n      } else {\n        me.errorImage = 'yes';\n        me.$vs.notify({\n          text: 'Formato de imagen no aceptada solo se acepta png/jpg/jpeg',\n          color: 'success',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        return false;\n      }\n    },\n    //traer las preguntas frecuentes\n    preguntasfaq: function () {\n      var _preguntasfaq = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var me;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              me = this;\n              _context.next = 3;\n              return this.$http.get(this.$server_url + \"preguntasfaq?todo=yes\").then(function (response) {\n                me.preguntasFaq = response.data;\n              }).catch(function (error) {\n                console.log(error);\n              });\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function preguntasfaq() {\n        return _preguntasfaq.apply(this, arguments);\n      }\n      return preguntasfaq;\n    }(),\n    ConfirmCambiadoEstadoCodigo: function ConfirmCambiadoEstadoCodigo(item, estado) {\n      var me = this;\n      me.itemEstado = item;\n      me.estadoPregunta = estado;\n      this.$vs.dialog({\n        type: 'confirm',\n        color: 'danger',\n        title: \"Confirm\",\n        text: 'Esta seguro de cambiar el estado de la Pregunta?',\n        accept: this.ActivarModalEstadoPregunta\n      });\n    },\n    ActivarModalEstadoPregunta: function ActivarModalEstadoPregunta() {\n      var me = this;\n      var formData = new FormData();\n      formData.append(\"preguntasfaq_id\", me.itemEstado.preguntasfaq_id);\n      formData.append(\"estado\", me.estadoPregunta);\n      me.$vs.loading();\n      this.$http.post(this.$server_url + 'cambioEstadoPregunta', formData).then(function (res) {\n        // console.log(res.data)\n\n        if (res.data.message) {\n          me.$vs.notify({\n            text: res.data.message,\n            color: 'primary',\n            iconPack: 'feather',\n            icon: 'icon-check'\n          });\n          return false;\n        }\n        me.preguntasfaq();\n        me.$vs.loading.close();\n        me.$vs.notify({\n          text: \"Se cambio de estado correctamente\",\n          color: 'primary',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n      }).catch(function (error) {\n        me.$vs.loading.close();\n        console.log(error);\n      });\n    },\n    //para guardar las preguntas\n    guardarPregunta: function guardarPregunta() {\n      var me = this;\n      if (me.tamanioError == 'yes') {\n        me.$vs.notify({\n          text: 'El tamaño de la imagen excede 1MB',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        return false;\n      }\n      if (me.errorImage == 'yes') {\n        me.$vs.notify({\n          text: 'El formato de la imagen solo se acepta jpg/png/jpeg',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        return false;\n      }\n      if (me.pregunta.descripcion.length < 5 || me.pregunta.respuesta.length < 5) {\n        me.$vs.notify({\n          text: 'Minimo 5 caracteres un campo se encuentra',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        return false;\n      }\n      if (me.pregunta.descripcion.length >= 300) {\n        me.$vs.notify({\n          text: 'Maximo 300 caracteres para la Pregunta',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        return false;\n      }\n      if (me.pregunta.respuesta.length >= 300) {\n        me.$vs.notify({\n          text: 'Maximo 300 caracteres para la descripcion',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        return false;\n      }\n      var formData = new FormData();\n      //Si no se envia imagenes\n      if (me.attachments.length == 0) {\n        //Si no envia imagenes y se quiere editar\n        if (me.update) {\n          formData.append('sinimagen', \"yes\");\n          formData.append('preguntasfaq_id', me.preguntasfaq_id);\n          formData.append('pregunta', me.pregunta.descripcion);\n          if (me.pregunta.video == null) {} else {\n            if (me.pregunta.video.length > 10) {\n              formData.append('video', me.pregunta.video);\n            } else {\n              formData.append('video', me.pregunta.video);\n            }\n          }\n          formData.append('respuesta', me.pregunta.respuesta);\n        }\n        //Si  no envia imagenes y se quiere guardar\n        else {\n          formData.append('sinimagen', \"yes\");\n          formData.append('pregunta', me.pregunta.descripcion);\n          if (me.pregunta.video == null) {} else {\n            if (me.pregunta.video.length > 10) {\n              // var obtenerFrame = me.pregunta.video.replace('watch?v=','embed/');\n\n              formData.append('video', me.pregunta.video);\n            } else {\n              formData.append('video', me.pregunta.video);\n            }\n          }\n          formData.append('respuesta', me.pregunta.respuesta);\n        }\n      } else {\n        //Si se envia imagenes\n        for (var i = 0; i < this.attachments.length; i++) {\n          //Si se envia imagenes y se quiere editar\n          if (me.update) {\n            formData.append('preguntasfaq_id', me.preguntasfaq_id);\n            formData.append('pregunta', me.pregunta.descripcion);\n            formData.append('respuesta', me.pregunta.respuesta);\n            if (me.pregunta.video == null) {} else {\n              if (me.pregunta.video.length > 10) {\n                formData.append('video', me.pregunta.video);\n              } else {\n                formData.append('video', me.pregunta.video);\n              }\n            }\n            formData.append('archivo[]', this.attachments[i]);\n          }\n          //Si se envia imagenes y se quiere guardar\n          else {\n            formData.append('pregunta', me.pregunta.descripcion);\n            formData.append('respuesta', me.pregunta.respuesta);\n            if (me.pregunta.video.length > 10) {\n              formData.append('video', me.pregunta.video);\n            } else {\n              formData.append('video', me.pregunta.video);\n            }\n            formData.append('archivo[]', this.attachments[i]);\n          }\n        }\n      }\n      var config = {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      };\n      document.querySelectorAll('.upload-file').value = [];\n      me.$vs.loading();\n      this.$http.post(this.$server_url + 'preguntasfaq', formData, config).then(function (res) {\n        me.$vs.loading.close();\n        me.$vs.notify({\n          text: res.data,\n          color: 'primary',\n          iconPack: 'feather',\n          icon: 'icon-alert-triangle'\n        });\n        me.preguntasfaq();\n        me.popupAddPregunta = false, me.popupEditPregunta = false,\n        // me.update = false;\n        limpiar();\n      }).catch(function (error) {\n        me.$vs.loading.close();\n      });\n    },\n    //para editar los campos\n    openModalEditar: function openModalEditar() {\n      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var me = this;\n      me.attachments = [];\n      document.querySelectorAll('.upload-file').value = [];\n      me.popupEditPregunta = true;\n      //llenar la data en los campos\n      me.preguntasfaq_id = data.preguntasfaq_id;\n      me.pregunta.descripcion = data.pregunta;\n      me.pregunta.respuesta = data.descripcion;\n      me.pregunta.archivo = data.archivo;\n      me.pregunta.url = data.url;\n      me.pregunta.video = data.video;\n    },\n    limpiar: function limpiar() {\n      var me = this;\n      me.pregunta.descripcion = \"\";\n      me.pregunta.respuesta = \"\";\n      me.pregunta.archivo = \"\";\n      me.pregunta.url = \"\";\n      me.pregunta.video = \"\";\n      me.attachments = [];\n    }\n  }\n};",{"version":3,"names":["data","counterDanger","update","popupAddPregunta","popupEditPregunta","preguntasFaq","itemEstado","estadoPregunta","pregunta","descripcion","respuesta","archivo","url","video","preguntasfaq_id","attachments","form","FormData","errorImage","tamanioError","created","me","preguntasfaq","methods","fieldChange","e","selectedFiles","target","files","validar","type","tamanio","size","$vs","notify","text","color","iconPack","icon","i","length","push","_preguntasfaq","_asyncToGenerator","regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","$http","get","$server_url","then","response","catch","error","console","log","stop","apply","arguments","ConfirmCambiadoEstadoCodigo","item","estado","dialog","title","accept","ActivarModalEstadoPregunta","formData","append","loading","post","res","message","close","guardarPregunta","config","headers","document","querySelectorAll","value","limpiar","openModalEditar","undefined"],"sources":["src/views/admin/preguntasFaq.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <vs-card>\r\n        \r\n          <vs-button color=\"dark\" style=\"margin:10px;\" @click=\"update=false;popupAddPregunta=true;limpiar();\" type=\"filled\">Crear Pregunta</vs-button>\r\n\r\n           <div v-if=\"preguntasFaq.length >0 \">\r\n              <br>\r\n                <vs-table max-items=\"10\" search pagination :data=\"preguntasFaq\" style=\"margin-top:-40px\">\r\n                    <template slot=\"thead\">\r\n                        \r\n                        <vs-th>Pregunta</vs-th>\r\n                        <vs-th>Descripcion</vs-th>\r\n                        <vs-th>Video</vs-th>\r\n                        <vs-th>Imagen</vs-th>\r\n                        <vs-th>Accion</vs-th>\r\n                       \r\n                    </template>\r\n                    <template slot-scope=\"{data}\">\r\n                        <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                            \r\n                            <vs-td>\r\n                               \r\n                                {{data[indextr].pregunta}}<br>\r\n                                \r\n                            </vs-td>\r\n                            <vs-td>\r\n                                {{data[indextr].descripcion}}<br>\r\n                            </vs-td>\r\n                            <vs-td>\r\n                                <a :href=\"data[indextr].video\" target=\"_blank\">{{data[indextr].video}}</a><br>\r\n                            </vs-td>\r\n\r\n                            <vs-td>\r\n                                <div v-if=\"tr.url == null\"> \r\n                                    \r\n                                </div>\r\n                                <div v-else> \r\n                                    <img width=\"100\" :src=\"$server_url+'preguntas_frecuentes/'+tr.url\"/>\r\n                                </div>\r\n                                \r\n                                <br>\r\n                            </vs-td>\r\n\r\n\r\n                            <vs-td>\r\n                                <div style=\"display:flex;\">\r\n                                  \r\n                                    <vx-tooltip style=\"display: inline-block;\" text=\"Editar Faq\" position=\"top\" color=\"primary\">\r\n                                        <vs-button size=\"small\" class=\"modal-default-button\" color=\"warning\" @click=\"update=true;openModalEditar(data[indextr])\"  type=\"filled\" icon-pack=\"feather\" icon=\"icon-edit\">\r\n                                        </vs-button>\r\n                                    </vx-tooltip> &nbsp;\r\n\r\n                                    <vx-tooltip style=\"display:inline-block\" color=\"danger\" text=\"Desactivar Pregunta\">\r\n                                        <vs-button style=\"display:inline-block\" v-if=\"data[indextr].estado_pregunta == '1'\" color=\"danger\" type=\"filled\" icon-pack=\"feather\" icon=\"icon-x-circle\" @click=\"ConfirmCambiadoEstadoCodigo(data[indextr], 0)\" size=\"small\"></vs-button>\r\n                                    </vx-tooltip>\r\n                                \r\n                                    <vx-tooltip style=\"display:inline-block\" color=\"primary\" text=\"Activar Pregunta\">\r\n                                        <vs-button style=\"display:inline-block\" v-if=\"data[indextr].estado_pregunta == '0'\" color=\"success\" type=\"filled\" icon-pack=\"feather\" icon=\"icon-check\" @click=\"ConfirmCambiadoEstadoCodigo(data[indextr], 1)\" size=\"small\"></vs-button>\r\n                                    </vx-tooltip> \r\n\r\n                                </div>\r\n                            </vs-td>\r\n                           \r\n                            \r\n                        </vs-tr>\r\n                    </template>\r\n                </vs-table>   \r\n            </div>\r\n            <div v-else class=\"p-3\">\r\n                <p> No existe preguntas frecuentes aun. </p>\r\n            </div>\r\n        </vs-card>\r\n        <!--PARA LOS MODALES -->\r\n        <!-- Modal Agregar-->\r\n        <div class=\"demo-alignment\">\r\n            <vs-popup classContent=\"popup-example\" title=\"Agregar Pregunta\" :active.sync=\"popupAddPregunta\">\r\n                \r\n                <vs-input class=\"inputx mb-3 w-full\" label=\"Pregunta\" v-model=\"pregunta.descripcion\" />\r\n     \r\n                <vs-input class=\"inputx mb-3 w-full\" label=\"Link video\" v-model=\"pregunta.video\" />\r\n    \r\n                    <!-- <p v-html=\"image\" class=\"foro-detalle p-5\"></p> -->\r\n                <vs-divider color=\"warning\">Respuesta</vs-divider>\r\n                 <vs-textarea counter=\"300\" :counter-danger.sync=\"counterDanger\" style=\"width:100%;\" label=\"Descripcion\" v-model=\"pregunta.respuesta\" />\r\n\r\n                <!-- <vs-input class=\"inputx mb-3 w-full\" label=\"Descripcion\" v-model=\"pregunta.respuesta\" /> -->\r\n                 Imagen:                    \r\n                <input type=\"file\" class=\"upload-file\" style=\"margin-top:20px;\"  @change=\"fieldChange\" />\r\n                 \r\n                 <br><br>       \r\n                <vs-button color=\"success\" class=\"w-full mb-3\" @click=\"guardarPregunta()\" type=\"gradient\" >Guardar</vs-button>\r\n            </vs-popup>\r\n        </div>\r\n\r\n          <!-- Modal Editar-->\r\n        <div class=\"demo-alignment\">\r\n            <vs-popup classContent=\"popup-example\" title=\"Editar Pregunta\" :active.sync=\"popupEditPregunta\">\r\n\r\n                <vs-input class=\"inputx mb-3 w-full\" label=\"Pregunta\" v-model=\"pregunta.descripcion\" />\r\n                <!-- <vs-input class=\"inputx mb-3 w-full\" label=\"Descripcion\" v-model=\"pregunta.respuesta\" /> -->\r\n                <vs-textarea counter=\"300\" :counter-danger.sync=\"counterDanger\" style=\"width:100%;\" label=\"Descripcion\" v-model=\"pregunta.respuesta\" />\r\n                <vs-input class=\"inputx mb-3 w-full\" label=\"Link video\" v-model=\"pregunta.video\" />\r\n                <div v-if=\"pregunta.url == null\"> \r\n                                \r\n                </div>\r\n                <div v-else> \r\n                    <p style=\"font-size:12px;\">Imagen actual</p>\r\n                    <img width=\"100\" style=\"margin-top:10px;\" :src=\"$server_url+'preguntas_frecuentes/'+pregunta.url\"/>\r\n                </div>\r\n\r\n                 <vs-input class=\"inputx mb-3 w-full\" disabled label=\"Nombre imagen actual\" v-model=\"pregunta.archivo\" />\r\n                Cambiar imagen:                    \r\n                <input type=\"file\" class=\"upload-file\" style=\"margin-top:20px;\"  @change=\"fieldChange\" />\r\n                <br><br>       \r\n                <vs-button color=\"success\" class=\"w-full mb-3\" @click=\"guardarPregunta()\" type=\"gradient\" >Actualizar</vs-button>\r\n            </vs-popup>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n    data() {\r\n        return{\r\n            counterDanger: false,\r\n            update:false,\r\n            popupAddPregunta:false,\r\n            popupEditPregunta:false,\r\n            preguntasFaq:[],\r\n            itemEstado:[],\r\n            estadoPregunta:'',\r\n            pregunta:{\r\n                descripcion:'',\r\n                respuesta:'',\r\n                archivo:'',\r\n                url:'',\r\n                video:'',\r\n            },\r\n            preguntasfaq_id:0,\r\n            //para subir archivos,\r\n            attachments:[],\r\n            form: new FormData,\r\n            errorImage:'no',\r\n            tamanioError:\"no\",\r\n        }\r\n    },\r\n    created(){\r\n        let me = this;\r\n        me.preguntasfaq();\r\n    },\r\n    methods:{\r\n        //para subir archivos\r\n        fieldChange(e){\r\n            let me = this;\r\n                me.errorImage = 'no'\r\n                me.tamanioError=\"no\"\r\n                this.attachments = [];\r\n                let selectedFiles=e.target.files;\r\n                let validar = e.target.files[0].type;\r\n\r\n                let tamanio = e.target.files[0].size;\r\n                \r\n                if(tamanio > 1000000){\r\n                    me.tamanioError=\"yes\"\r\n                    me.$vs.notify({\r\n                        text:'El tamaño de la imagen excede 1MB',\r\n                        color:'warning',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check'})  \r\n                        return false;  \r\n                }\r\n                \r\n            \r\n                if(validar == 'image/png' || validar == 'image/jpg' || validar == 'image/jpeg'){\r\n                    for(let i=0;i<selectedFiles.length;i++){\r\n\r\n                      this.attachments.push(selectedFiles[i]);\r\n                     }\r\n                     me.errorImage = 'no'\r\n                }else{\r\n                  me.errorImage = 'yes'\r\n                  me.$vs.notify({\r\n                    text:'Formato de imagen no aceptada solo se acepta png/jpg/jpeg',\r\n                    color:'success',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check'})\r\n                    return false;\r\n                  \r\n                \r\n                }\r\n            \r\n               \r\n        },\r\n\r\n         //traer las preguntas frecuentes\r\n        async preguntasfaq(){\r\n            let me = this;\r\n            await this.$http.get(this.$server_url+\"preguntasfaq?todo=yes\")\r\n            .then(function (response) {\r\n                me.preguntasFaq = response.data\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error)\r\n            });\r\n\r\n            \r\n        },\r\n        ConfirmCambiadoEstadoCodigo(item,estado){\r\n                let me = this;\r\n                me.itemEstado = item;\r\n                me.estadoPregunta = estado;\r\n               \r\n                this.$vs.dialog({\r\n                    type:'confirm',\r\n                    color: 'danger',\r\n                    title: `Confirm`,\r\n                    text:  'Esta seguro de cambiar el estado de la Pregunta?',\r\n                    accept:this.ActivarModalEstadoPregunta\r\n                })\r\n        },\r\n        ActivarModalEstadoPregunta(){\r\n            let me = this;\r\n            let formData = new FormData();\r\n            formData.append(\"preguntasfaq_id\", me.itemEstado.preguntasfaq_id);\r\n            formData.append(\"estado\", me.estadoPregunta);\r\n\r\n                me.$vs.loading()\r\n                this.$http.post(this.$server_url+'cambioEstadoPregunta', formData)\r\n                .then(res => {\r\n                    // console.log(res.data)\r\n\r\n                    if(res.data.message){\r\n                         me.$vs.notify({\r\n                            text: res.data.message,\r\n                            color: 'primary',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-check'\r\n                        })\r\n                        return false;\r\n                    }\r\n                    me.preguntasfaq();\r\n                    me.$vs.loading.close()\r\n                    me.$vs.notify({\r\n                            text: \"Se cambio de estado correctamente\",\r\n                            color: 'primary',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-check'\r\n                    })\r\n                    \r\n                })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close();\r\n                    console.log(error)\r\n                });\r\n        },\r\n\r\n         //para guardar las preguntas\r\n\r\n         guardarPregunta(){\r\n        \r\n            let me = this;\r\n         \r\n            if(me.tamanioError == 'yes'){\r\n                me.$vs.notify({\r\n                    text:'El tamaño de la imagen excede 1MB',\r\n                    color:'warning',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check'})  \r\n                    return false;  \r\n            }\r\n           \r\n            if(me.errorImage == 'yes'){\r\n                me.$vs.notify({\r\n                    text:'El formato de la imagen solo se acepta jpg/png/jpeg',\r\n                    color:'warning',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check'})  \r\n                    return false;      \r\n            }     \r\n            \r\n\r\n        \r\n            if(me.pregunta.descripcion.length < 5 || me.pregunta.respuesta.length < 5){\r\n                me.$vs.notify({\r\n                text:'Minimo 5 caracteres un campo se encuentra',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})  \r\n                return false;      \r\n            }\r\n\r\n              if(me.pregunta.descripcion.length >= 300){\r\n                me.$vs.notify({\r\n                text:'Maximo 300 caracteres para la Pregunta',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})  \r\n                return false;      \r\n            }\r\n\r\n              if(me.pregunta.respuesta.length >= 300){\r\n                me.$vs.notify({\r\n                text:'Maximo 300 caracteres para la descripcion',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})  \r\n                return false;      \r\n            }\r\n\r\n                let formData = new FormData();\r\n                //Si no se envia imagenes\r\n                if(me.attachments.length == 0){\r\n                      //Si no envia imagenes y se quiere editar\r\n                    if(me.update){\r\n                        formData.append('sinimagen', \"yes\");\r\n                        formData.append('preguntasfaq_id', me.preguntasfaq_id);\r\n                        formData.append('pregunta', me.pregunta.descripcion);\r\n\r\n                        if(me.pregunta.video == null){\r\n                           \r\n                        }else{\r\n                                if(me.pregunta.video.length > 10){\r\n\r\n                                    formData.append('video', me.pregunta.video);  \r\n                                }\r\n                                else{\r\n                                    formData.append('video', me.pregunta.video);\r\n                                }\r\n\r\n                        }\r\n                            \r\n                        \r\n                        formData.append('respuesta', me.pregunta.respuesta);\r\n                    }\r\n                      //Si  no envia imagenes y se quiere guardar\r\n                    else{\r\n                        formData.append('sinimagen', \"yes\");\r\n                        formData.append('pregunta', me.pregunta.descripcion);\r\n\r\n                        if(me.pregunta.video == null){\r\n                           \r\n                        }else{\r\n                         \r\n                                if(me.pregunta.video.length > 10){\r\n\r\n                                    // var obtenerFrame = me.pregunta.video.replace('watch?v=','embed/');\r\n                                  \r\n                                    formData.append('video', me.pregunta.video);  \r\n\r\n                                }\r\n                                else{\r\n                                    formData.append('video', me.pregunta.video);\r\n                                }\r\n\r\n                        }\r\n                      \r\n                        formData.append('respuesta', me.pregunta.respuesta); \r\n                    }\r\n                }else{\r\n                    //Si se envia imagenes\r\n                    for(let i=0; i<this.attachments.length;i++){\r\n                        \r\n                        //Si se envia imagenes y se quiere editar\r\n                        if(me.update){\r\n                            formData.append('preguntasfaq_id', me.preguntasfaq_id);\r\n                            formData.append('pregunta', me.pregunta.descripcion);\r\n                            formData.append('respuesta', me.pregunta.respuesta);\r\n\r\n                            \r\n                                if(me.pregunta.video == null){\r\n                           \r\n                                }else{\r\n                                        if(me.pregunta.video.length > 10){\r\n\r\n                                            formData.append('video', me.pregunta.video);  \r\n\r\n                                        }\r\n                                        else{\r\n                                            formData.append('video', me.pregunta.video);\r\n                                        }\r\n\r\n                                }\r\n                            formData.append('archivo[]',this.attachments[i]);\r\n                        }\r\n                          //Si se envia imagenes y se quiere guardar\r\n                        else{\r\n                            formData.append('pregunta', me.pregunta.descripcion);\r\n                            formData.append('respuesta', me.pregunta.respuesta); \r\n\r\n                            if(me.pregunta.video.length > 10){\r\n                         \r\n                            formData.append('video', me.pregunta.video);  \r\n\r\n                            }else{\r\n\r\n                                formData.append('video', me.pregunta.video);\r\n                            }\r\n                            formData.append('archivo[]',this.attachments[i]);\r\n                        \r\n                        }\r\n                     }\r\n                }\r\n\r\n          \r\n           \r\n         \r\n            const config = { headers: { 'Content-Type': 'multipart/form-data' } };\r\n            document.querySelectorAll('.upload-file').value=[];\r\n            me.$vs.loading()\r\n            this.$http.post(this.$server_url+'preguntasfaq', formData,config)\r\n                .then(function (res) {\r\n                    me.$vs.loading.close();\r\n                    me.$vs.notify({\r\n                        text: res.data,\r\n                        color: 'primary',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-alert-triangle'\r\n                    })\r\n                    me.preguntasfaq()\r\n                    me.popupAddPregunta=false,\r\n                    me.popupEditPregunta=false,\r\n                    // me.update = false;\r\n                    limpiar()\r\n                  \r\n                })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close();\r\n                })\r\n        },\r\n        //para editar los campos\r\n        openModalEditar(data={}){\r\n            let me = this;\r\n            me.attachments = [];\r\n            document.querySelectorAll('.upload-file').value=[];\r\n            me.popupEditPregunta = true;\r\n            //llenar la data en los campos\r\n            me.preguntasfaq_id = data.preguntasfaq_id;\r\n            me.pregunta.descripcion = data.pregunta;  \r\n            me.pregunta.respuesta = data.descripcion;\r\n            me.pregunta.archivo = data.archivo;\r\n            me.pregunta.url = data.url;\r\n            me.pregunta.video = data.video\r\n \r\n        },\r\n        limpiar(){\r\n            let me = this;\r\n            me.pregunta.descripcion = \"\";\r\n            me.pregunta.respuesta = \"\";\r\n            me.pregunta.archivo = \"\";\r\n            me.pregunta.url = \"\";\r\n            me.pregunta.video = \"\";\r\n            me.attachments = [];\r\n        }\r\n\r\n    }\r\n}\r\n</script>"],"mappings":"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","ignoreList":[]}]}