{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\usuarios\\tipos\\InstitucionesAsesor.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\usuarios\\tipos\\InstitucionesAsesor.vue","mtime":1712682816660},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\babel.config.js","mtime":1712682813877},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\.babelrc","mtime":1712682813750},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/laragon/www/PRY_NEW_JEYSON/LOCAL/plataformaprolipa_vue/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es6.number.constructor\";\nimport _defineProperty from \"C:/laragon/www/PRY_NEW_JEYSON/LOCAL/plataformaprolipa_vue/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nexport default {\n  data: function data() {\n    return _defineProperty(_defineProperty(_defineProperty(_defineProperty({\n      tmparregloAsesores: [],\n      arregloAsesores: [],\n      usuario: [],\n      escuelas: [],\n      region: '2',\n      //para el reporte excel\n      fileName: null,\n      activePrompt: false,\n      codigoSelected: [],\n      reportesActivo: 0\n    }, \"fileName\", null), \"formats\", ['xls', 'xlsx', 'csv', 'txt']), \"cellAutoWidth\", true), \"selectedFormat\", 'xls');\n  },\n  props: {\n    periodo_idSierra: {\n      type: Number,\n      default: 0\n    },\n    periodo_idCosta: {\n      type: Number,\n      default: 0\n    },\n    cedula: {\n      type: String,\n      default: '0'\n    }\n  },\n  created: function created() {\n    var me = this;\n    me.usuario = JSON.parse(localStorage.getItem(\"usuario\"));\n    me.getEscuelas();\n  },\n  methods: {\n    //cantidad de escuelas del asesor\n    getEscuelas: function () {\n      var _getEscuelas = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var me;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              me = this;\n              this.$http.get(this.$server_url + 'getInstitucionesxAsesor?cedula=' + me.cedula).then(function (res) {\n                me.tmparregloAsesores = res.data;\n                me.filtroInstituciones();\n              }).catch(function (error) {\n                console.log(error + ' error');\n              });\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function getEscuelas() {\n        return _getEscuelas.apply(this, arguments);\n      }\n      return getEscuelas;\n    }(),\n    filtroInstituciones: function filtroInstituciones() {\n      var me = this;\n      me.arregloAsesores = [];\n      var datos = me.tmparregloAsesores;\n      me.arregloAsesores = datos.filter(function (p) {\n        return p.region == me.region;\n      });\n    },\n    //para limipiar los campos del excel\n    clearFields: function clearFields() {\n      this.fileName = '';\n      this.cellAutoWidth = true;\n      this.selectedFormat = 'xls';\n    },\n    //metodo par descargar el excel\n    exportToExcel: function exportToExcel() {\n      var _this = this;\n      var headerTitle = ['Institucion', 'Ciudad', 'Periodo'];\n      var headerVal = ['nombreInstitucion', 'ciudad', 'periodo'];\n      var codigoSelectedMayus = this.codigoSelected;\n      for (var i = 0; i < codigoSelectedMayus.length; i++) {\n        for (var key in codigoSelectedMayus[i]) {\n          if (typeof codigoSelectedMayus[i][key] == \"string\") {\n            codigoSelectedMayus[i][key] = codigoSelectedMayus[i][key].toUpperCase();\n          }\n        }\n      }\n      import('@/vendor/Export2Excel').then(function (excel) {\n        var list = codigoSelectedMayus;\n        var data = _this.formatJson(headerVal, list);\n        excel.export_json_to_excel({\n          header: headerTitle,\n          data: data,\n          filename: _this.fileName,\n          autoWidth: _this.cellAutoWidth,\n          bookType: _this.selectedFormat\n        });\n        _this.clearFields();\n        _this.guardarActivo = '';\n        _this.generarActivo = ' ';\n        _this.textAlertCant = '';\n        _this.cantidad = '';\n        _this.codigoSelected = [];\n      });\n    },\n    formatJson: function formatJson(filterVal, jsonData) {\n      return jsonData.map(function (v) {\n        return filterVal.map(function (j) {\n          return v[j];\n        });\n      });\n    }\n  }\n};",{"version":3,"names":["data","_defineProperty","tmparregloAsesores","arregloAsesores","usuario","escuelas","region","fileName","activePrompt","codigoSelected","reportesActivo","props","periodo_idSierra","type","Number","default","periodo_idCosta","cedula","String","created","me","JSON","parse","localStorage","getItem","getEscuelas","methods","_getEscuelas","_asyncToGenerator","regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","$http","get","$server_url","then","res","filtroInstituciones","catch","error","console","log","stop","apply","arguments","datos","filter","p","clearFields","cellAutoWidth","selectedFormat","exportToExcel","_this","headerTitle","headerVal","codigoSelectedMayus","i","length","key","toUpperCase","excel","list","formatJson","export_json_to_excel","header","filename","autoWidth","bookType","guardarActivo","generarActivo","textAlertCant","cantidad","filterVal","jsonData","map","v","j"],"sources":["src/views/usuarios/tipos/InstitucionesAsesor.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <div v-if=\"usuario.id_group == 11 || usuario.id_group == 1\">\r\n            <div>\r\n             <br/><br/>\r\n                <vs-table   multiple stripe v-model=\"codigoSelected\"  max-items=\"25\" search pagination :data=\"arregloAsesores\" style=\"margin-top:-40px\">\r\n                    <template slot=\"header\">\r\n                        <ul class=\"leftx\" style=\"display:flex;flex-direction: row;\">\r\n                            <li class=\"ml-2\">\r\n                            <vs-radio v-model=\"region\" vs-name=\"radios1\" @input=\"filtroInstituciones()\" vs-value=\"1\">Sierra</vs-radio>\r\n                            </li>\r\n                            <li class=\"ml-2\">\r\n                            <vs-radio v-model=\"region\" vs-name=\"radios1\" @input=\"filtroInstituciones()\" vs-value=\"2\">Costa</vs-radio>\r\n                            </li>\r\n                            <li>\r\n                                <vs-chip class=\"ml-3\" transparent color=\"danger\" style=\"margin-top:-3px;\">\r\n                                   Cantidad {{ arregloAsesores.length }}\r\n                                </vs-chip>\r\n                            </li>\r\n                            <vs-button color=\"warning\" type=\"line\" icon=\"description\"  size=\"small\" class=\"mr-5 ml-3\" style=\"font-size: 14px;margin-top: -10px;\" @click=\"activePrompt=true;\">Exportar</vs-button>\r\n                        </ul>\r\n                    </template>\r\n                    <template slot=\"thead\">\r\n                        <vs-th sort-key=\"nombreInstitucion\">Institución</vs-th>\r\n                        <vs-th sort-key=\"ciudad\">Ciudad</vs-th>\r\n                        <vs-th sort-key=\"periodo\">Período</vs-th>\r\n                    </template>\r\n                    <template slot-scope=\"{data}\">\r\n                        <vs-tr :data=\"tr\"  :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                            <vs-td>\r\n                                {{tr.nombreInstitucion}}\r\n                            </vs-td>\r\n                            <vs-td>\r\n                                {{data[indextr].ciudad}}<br>\r\n                            </vs-td>\r\n                            <vs-td>\r\n                               <p> {{ tr.periodo }}</p>\r\n                                 <vs-chip :color=\"tr.estado == 1?'primary':'danger'\">\r\n                                   {{tr.estado == 1 ?'Activo':'No activo'}}\r\n                                </vs-chip>\r\n                            </vs-td>\r\n                        </vs-tr>\r\n                    </template>\r\n                </vs-table>\r\n            </div>\r\n        </div>\r\n        <!--MODAL PARA EXPORTAR A EXCEL-->\r\n        <vs-prompt title=\"Exportar a Excel\" class=\"export-options\" @cancle=\"clearFields\" @accept=\"exportToExcel\" accept-text=\"Exportar\" @close=\"clearFields\" :active.sync=\"activePrompt\">\r\n            <vs-alert class=\"mb-3\" color=\"danger\" icon-pack=\"feather\" icon=\"icon-info\">\r\n                <span>Recuerde <b>seleccionar</b> los registros que desea exportar.</span>\r\n            </vs-alert>\r\n            <vs-input v-model=\"fileName\" placeholder=\"Ingrese el nombre del archivo\" class=\"w-full\" />\r\n            <v-select v-model=\"selectedFormat\" :options=\"formats\" class=\"my-4\" />\r\n            <div class=\"flex\">\r\n            </div>\r\n        </vs-prompt>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data() {\r\n        return{\r\n            tmparregloAsesores:[],\r\n            arregloAsesores:[],\r\n            usuario:[],\r\n            escuelas:[],\r\n            region:'2',\r\n            //para el reporte excel\r\n            fileName: null,\r\n            activePrompt: false,\r\n            codigoSelected: [],\r\n            reportesActivo: 0,\r\n            fileName: null,\r\n            formats: ['xls', 'xlsx', 'csv', 'txt'],\r\n            cellAutoWidth: true,\r\n            selectedFormat: 'xls',\r\n            //fin variables para exportar\r\n        }\r\n    },\r\n    props:{\r\n        periodo_idSierra:{\r\n            type:Number,\r\n            default:0,\r\n        },\r\n        periodo_idCosta:{\r\n            type:Number,\r\n            default:0,\r\n        },\r\n        cedula:{\r\n            type:String,\r\n            default:'0',\r\n        },\r\n    },\r\n    created() {\r\n        let me = this;\r\n        me.usuario = JSON.parse(localStorage.getItem(\"usuario\"))\r\n        me.getEscuelas();\r\n    },\r\n    methods:{\r\n         //cantidad de escuelas del asesor\r\n        async getEscuelas() {\r\n            let me = this;\r\n            this.$http.get(this.$server_url+'getInstitucionesxAsesor?cedula='+me.cedula)\r\n                .then(function (res) {\r\n                    me.tmparregloAsesores = res.data\r\n                    me.filtroInstituciones()\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                })\r\n        },\r\n        filtroInstituciones(){\r\n            let me = this;\r\n            me.arregloAsesores = []\r\n            let datos = me.tmparregloAsesores;\r\n            me.arregloAsesores = datos.filter(p => p.region == me.region)\r\n        },\r\n         //para limipiar los campos del excel\r\n         clearFields() {\r\n            this.fileName = ''\r\n            this.cellAutoWidth = true\r\n            this.selectedFormat = 'xls'\r\n        },\r\n        //metodo par descargar el excel\r\n           exportToExcel() {\r\n            let headerTitle = ['Institucion' ,'Ciudad', 'Periodo'];\r\n            let headerVal = [ 'nombreInstitucion','ciudad','periodo'];\r\n            let codigoSelectedMayus = this.codigoSelected\r\n            for (var i = 0; i < codigoSelectedMayus.length; i++) {\r\n                for (var key in codigoSelectedMayus[i]) {\r\n                    if (typeof codigoSelectedMayus[i][key] == \"string\") {\r\n                        codigoSelectedMayus[i][key] = codigoSelectedMayus[i][key].toUpperCase();\r\n                    }\r\n                }\r\n            }\r\n            import('@/vendor/Export2Excel').then(excel => {\r\n                const list = codigoSelectedMayus\r\n                const data = this.formatJson(headerVal, list)\r\n                excel.export_json_to_excel({\r\n                    header: headerTitle,\r\n                    data,\r\n                    filename: this.fileName,\r\n                    autoWidth: this.cellAutoWidth,\r\n                    bookType: this.selectedFormat\r\n                })\r\n                this.clearFields()\r\n                this.guardarActivo = '';\r\n                this.generarActivo = ' ';\r\n                this.textAlertCant = '';\r\n                this.cantidad = '';\r\n                this.codigoSelected = [];\r\n            })\r\n        },\r\n        formatJson(filterVal, jsonData) {\r\n            return jsonData.map(v => filterVal.map(j => {\r\n                return v[j]\r\n            }))\r\n        },\r\n    }\r\n}\r\n</script>\r\n"],"mappings":";;;;AA4DA;EACAA,IAAA,WAAAA,KAAA;IACA,OAAAC,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA;MACAC,kBAAA;MACAC,eAAA;MACAC,OAAA;MACAC,QAAA;MACAC,MAAA;MACA;MACAC,QAAA;MACAC,YAAA;MACAC,cAAA;MACAC,cAAA;IAAA,eACA,kBACA,iDACA,yBACA;EAGA;EACAC,KAAA;IACAC,gBAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;IACAC,eAAA;MACAH,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;IACAE,MAAA;MACAJ,IAAA,EAAAK,MAAA;MACAH,OAAA;IACA;EACA;EACAI,OAAA,WAAAA,QAAA;IACA,IAAAC,EAAA;IACAA,EAAA,CAAAhB,OAAA,GAAAiB,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;IACAJ,EAAA,CAAAK,WAAA;EACA;EACAC,OAAA;IACA;IACAD,WAAA;MAAA,IAAAE,YAAA,GAAAC,iBAAA,eAAAC,kBAAA,CAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAX,EAAA;QAAA,OAAAS,kBAAA,CAAAG,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cACAhB,EAAA;cACA,KAAAiB,KAAA,CAAAC,GAAA,MAAAC,WAAA,uCAAAnB,EAAA,CAAAH,MAAA,EACAuB,IAAA,WAAAC,GAAA;gBACArB,EAAA,CAAAlB,kBAAA,GAAAuC,GAAA,CAAAzC,IAAA;gBACAoB,EAAA,CAAAsB,mBAAA;cACA,GACAC,KAAA,WAAAC,KAAA;gBACAC,OAAA,CAAAC,GAAA,CAAAF,KAAA;cACA;YAAA;YAAA;cAAA,OAAAV,QAAA,CAAAa,IAAA;UAAA;QAAA,GAAAhB,OAAA;MAAA;MAAA,SAAAN,YAAA;QAAA,OAAAE,YAAA,CAAAqB,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAxB,WAAA;IAAA;IAEAiB,mBAAA,WAAAA,oBAAA;MACA,IAAAtB,EAAA;MACAA,EAAA,CAAAjB,eAAA;MACA,IAAA+C,KAAA,GAAA9B,EAAA,CAAAlB,kBAAA;MACAkB,EAAA,CAAAjB,eAAA,GAAA+C,KAAA,CAAAC,MAAA,WAAAC,CAAA;QAAA,OAAAA,CAAA,CAAA9C,MAAA,IAAAc,EAAA,CAAAd,MAAA;MAAA;IACA;IACA;IACA+C,WAAA,WAAAA,YAAA;MACA,KAAA9C,QAAA;MACA,KAAA+C,aAAA;MACA,KAAAC,cAAA;IACA;IACA;IACAC,aAAA,WAAAA,cAAA;MAAA,IAAAC,KAAA;MACA,IAAAC,WAAA;MACA,IAAAC,SAAA;MACA,IAAAC,mBAAA,QAAAnD,cAAA;MACA,SAAAoD,CAAA,MAAAA,CAAA,GAAAD,mBAAA,CAAAE,MAAA,EAAAD,CAAA;QACA,SAAAE,GAAA,IAAAH,mBAAA,CAAAC,CAAA;UACA,WAAAD,mBAAA,CAAAC,CAAA,EAAAE,GAAA;YACAH,mBAAA,CAAAC,CAAA,EAAAE,GAAA,IAAAH,mBAAA,CAAAC,CAAA,EAAAE,GAAA,EAAAC,WAAA;UACA;QACA;MACA;MACA,gCAAAxB,IAAA,WAAAyB,KAAA;QACA,IAAAC,IAAA,GAAAN,mBAAA;QACA,IAAA5D,IAAA,GAAAyD,KAAA,CAAAU,UAAA,CAAAR,SAAA,EAAAO,IAAA;QACAD,KAAA,CAAAG,oBAAA;UACAC,MAAA,EAAAX,WAAA;UACA1D,IAAA,EAAAA,IAAA;UACAsE,QAAA,EAAAb,KAAA,CAAAlD,QAAA;UACAgE,SAAA,EAAAd,KAAA,CAAAH,aAAA;UACAkB,QAAA,EAAAf,KAAA,CAAAF;QACA;QACAE,KAAA,CAAAJ,WAAA;QACAI,KAAA,CAAAgB,aAAA;QACAhB,KAAA,CAAAiB,aAAA;QACAjB,KAAA,CAAAkB,aAAA;QACAlB,KAAA,CAAAmB,QAAA;QACAnB,KAAA,CAAAhD,cAAA;MACA;IACA;IACA0D,UAAA,WAAAA,WAAAU,SAAA,EAAAC,QAAA;MACA,OAAAA,QAAA,CAAAC,GAAA,WAAAC,CAAA;QAAA,OAAAH,SAAA,CAAAE,GAAA,WAAAE,CAAA;UACA,OAAAD,CAAA,CAAAC,CAAA;QACA;MAAA;IACA;EACA;AACA","ignoreList":[]}]}