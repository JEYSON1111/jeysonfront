{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\diagnostico\\admin\\ListadoPreguntas.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\diagnostico\\admin\\ListadoPreguntas.vue","mtime":1712682815721},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\babel.config.js","mtime":1712682813877},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\.babelrc","mtime":1712682813750},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import vSelect from 'vue-select';\nimport flatPickr from 'vue-flatpickr-component';\nimport 'flatpickr/dist/flatpickr.css';\nimport axios from 'axios';\nimport $ from 'jquery';\nvar img_opcion_old = '';\nexport default {\n  data: function data() {\n    return {\n      libros: [],\n      arregloLibros: [],\n      usuario: [],\n      id: 0,\n      popupAgregar: false,\n      editarOpcionActiva: false,\n      verSolicitud: false,\n      opcion: {\n        id_opcion_pregunta: 0,\n        id_pregunta: '',\n        descripcion: '',\n        img_opcion: '',\n        tipo: ''\n      },\n      opciones: [],\n      formulario: {\n        libro: '',\n        descripcion: '',\n        institucion: '',\n        periodo: '',\n        estado: '1'\n      },\n      src_imagen_opcion: '',\n      title: '',\n      colorx: 'success',\n      books: false,\n      pregunta_delete: ''\n    };\n  },\n  components: {\n    flatPickr: flatPickr,\n    vSelect: vSelect\n  },\n  created: function created() {\n    var me = this;\n    me.usuario = JSON.parse(localStorage.getItem(\"usuario\"));\n    me.getLibros();\n    me.getarregloLibros();\n  },\n  mounted: function mounted() {\n    var me = this;\n    me.title = \"Preguntas para la prueba diagnóstica\";\n  },\n  methods: {\n    getarregloLibros: function getarregloLibros() {\n      var me = this;\n      this.$http.get(this.$server_url + 'diagnostico?getBooks=yes').then(function (res) {\n        me.arregloLibros = res.data;\n      }).catch(function (error) {\n        console.log(error + ' error');\n      });\n    },\n    openEditar: function openEditar(tr) {\n      var me = this;\n      me.formulario.libro = tr.libro_id;\n      me.getPreguntas();\n      me.popupAgregar = true;\n      me.books = true;\n    },\n    addForm: function addForm() {\n      var me = this;\n      me.popupAgregar = true;\n      me.books = false;\n    },\n    getPreguntas: function getPreguntas() {\n      var me = this;\n      me.opciones = [];\n      if (me.formulario.libro == '' || me.formulario.libro == null || me.formulario.libro == undefined) {\n        me.$vs.notify({\n          text: 'Debe seleccionar un libro.',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        return;\n      }\n      this.$http.get(this.$server_url + 'diagnostico?getPreguntas=yes&libro_id=' + me.formulario.libro).then(function (res) {\n        me.opciones = res.data;\n      }).catch(function (error) {\n        console.log(error + ' error');\n      });\n    },\n    getLibros: function getLibros() {\n      var me = this;\n      me.$vs.loading();\n      this.$http.get(this.$server_url + 'listaLibro').then(function (res) {\n        me.libros = res.data.libros;\n        me.$vs.loading.close();\n      }).catch(function (error) {\n        console.log(error + ' error');\n        me.$vs.loading.close();\n      });\n    },\n    mostrarImg: function mostrarImg(file, img) {\n      var me = this;\n      me.src_imagen_opcion = ' ';\n      me.src_imagen_pregunta = ' ';\n      var archivo = document.getElementById(\"file\" + file).files[0];\n      var reader = new FileReader();\n      if (me) {\n        reader.readAsDataURL(archivo);\n        reader.onloadend = function () {\n          //document.getElementById(\"img\"+img).style.display = \"block\";\n          document.getElementById(\"img\" + img).src = reader.result;\n        };\n      }\n    },\n    cargarOpcion: function cargarOpcion() {\n      var me = this;\n      if (me.opcion.descripcion.trim() == \"\") {\n        me.$vs.notify({\n          text: 'Debe ingresar la descripción de la pregunta.',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        return;\n      }\n      if (me.formulario.libro == '' || me.formulario.libro == null || me.formulario.libro == undefined) {\n        me.$vs.notify({\n          text: 'Debe seleccionar un libro.',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n      } else {\n        me.$vs.loading();\n        var formData = new FormData();\n        var fileImgPreg = document.getElementById(\"file2\").files[0];\n        var tipo = 0;\n        if (me.opcion.tipo === true) {\n          tipo = 1;\n        }\n        formData.append('pregunta', me.opcion.descripcion);\n        formData.append('imagen', fileImgPreg);\n        formData.append('opcion', tipo);\n        formData.append('libro_id', me.formulario.libro);\n        axios.post(this.$data_url + 'api/cargarOpcionDiagnostico', formData).then(function (res) {\n          me.$vs.loading.close();\n          me.opciones = res.data;\n          me.opcion.descripcion = '';\n          me.opcion.tipo = '';\n          me.src_imagen_opcion = '';\n          me.opcion.id_opcion_pregunta = 0;\n          document.getElementById(\"file2\").value = '';\n          me.$vs.notify({\n            text: 'Se guardo correctamente',\n            color: 'success',\n            iconPack: 'feather',\n            icon: 'icon-check'\n          });\n          me.getarregloLibros();\n        }).catch(function (error) {\n          me.$vs.loading.close();\n          console.log(error);\n        });\n      }\n    },\n    editarOpcion: function editarOpcion(item) {\n      var me = this;\n      me.opcion.pregunta = '';\n      document.getElementById(\"file2\").value = '';\n      me.opcion.descripcion = item.pregunta;\n      me.opcion.tipo = item.opcion;\n      me.opcion.id_opcion_pregunta = item.id;\n      img_opcion_old = item.imagen;\n      me.src_imagen_opcion = this.$data_url + 'archivos/diagnostico/img/img_preguntas/' + item.imagen;\n    },\n    confirmEditarOpcion: function confirmEditarOpcion(item) {\n      var me = this;\n      me.editarOpcionActiva = false;\n      var fileImgOpcion;\n      fileImgOpcion = document.getElementById(\"file2\").files[0];\n      if (fileImgOpcion === undefined) {\n        fileImgOpcion = item.img_opcion;\n      }\n      var tipo = 0;\n      if (me.opcion.tipo === true || me.opcion.tipo === 1) {\n        tipo = 1;\n      }\n      var formData = new FormData();\n      formData.append('pregunta', me.opcion.descripcion);\n      formData.append('opcion', tipo);\n      formData.append('img_opcion', fileImgOpcion);\n      formData.append('img_opcion_old', img_opcion_old);\n      formData.append('id', item.id_opcion_pregunta);\n      formData.append('libro_id', me.formulario.libro);\n      axios.post(this.$data_url + 'api/editarOpcionDiagnostico', formData).then(function (res) {\n        me.opciones = res.data;\n        me.editarOpcionActiva = false;\n        me.opcion.descripcion = '';\n        me.opcion.tipo = '';\n        me.src_imagen_opcion = '';\n        me.opcion.id_opcion_pregunta = 0;\n        me.$vs.notify({\n          text: 'Se guardo correctamente',\n          color: 'success',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    quitarOpcion: function quitarOpcion(item) {\n      var me = this;\n      me.pregunta_delete = item;\n      this.$http.get(this.$server_url + 'diagnostico/' + item.id).then(function (res) {\n        if (res.data.status == 0) {\n          me.$vs.notify({\n            text: res.data.message,\n            color: 'danger',\n            iconPack: 'feather',\n            icon: 'icon-check'\n          });\n          return;\n        }\n        me.removePregunta();\n      }).catch(function (error) {\n        console.log(error + ' error');\n      });\n    },\n    removePregunta: function removePregunta() {\n      var me = this;\n      var formData = new FormData();\n      formData.append('id', me.pregunta_delete.id);\n      me.$vs.loading();\n      axios.post(this.$data_url + 'api/eliminarOpcionDiagnostica', formData).then(function (res) {\n        me.removeItemFromArr(me.opciones, me.pregunta_delete);\n        me.pregunta_delete = '';\n        me.$vs.notify({\n          text: \"Se elimino correctamente\",\n          color: 'success',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        me.$vs.loading.close();\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    removeItemFromArr: function removeItemFromArr(arr, item) {\n      var i = arr.indexOf(item);\n      arr.splice(i, 1);\n    },\n    openConfirm: function openConfirm(tr) {\n      var me = this;\n      me.id = tr.id;\n      this.$vs.dialog({\n        type: 'confirm',\n        color: 'danger',\n        title: \"Confirmar\",\n        text: 'Estas seguro de eliminar?',\n        accept: this.eliminarLink\n      });\n    },\n    eliminarLink: function eliminarLink() {\n      var me = this;\n      me.$vs.loading();\n      this.$http.delete(this.$server_url + 'formularioDocente/' + me.id).then(function (res) {\n        me.$vs.loading.close();\n        if (res.data.status == 0) {\n          me.$vs.notify({\n            text: res.data.message,\n            color: 'danger',\n            iconPack: 'feather',\n            icon: 'icon-alert-triangle',\n            time: 3000\n          });\n          return;\n        }\n        me.$vs.notify({\n          text: 'Se elimino correctamente el formulario',\n          color: 'success',\n          iconPack: 'feather',\n          icon: 'icon-alert-triangle'\n        });\n        me.getForms();\n      }).catch(function (error) {\n        me.$vs.loading.close();\n        console.log(error);\n      });\n    },\n    limpiar: function limpiar() {\n      var me = this;\n      me.formulario.id = 0;\n      me.formulario.toDate = null;\n      me.formulario.descripcion = \"\";\n      me.formulario.institucion = \"\";\n      me.formulario.periodo = \"\";\n      me.formulario.estado = 1;\n      me.formulario.libro = \"\";\n      me.opcion.descripcion = '';\n      me.opcion.tipo = '';\n      me.src_imagen_opcion = '';\n      me.opcion.tipo = false;\n      me.opcion.id_opcion_pregunta = 0;\n      me.opciones = [];\n      me.editarOpcionActiva = false;\n    }\n  }\n};",{"version":3,"names":["vSelect","flatPickr","axios","$","img_opcion_old","data","libros","arregloLibros","usuario","id","popupAgregar","editarOpcionActiva","verSolicitud","opcion","id_opcion_pregunta","id_pregunta","descripcion","img_opcion","tipo","opciones","formulario","libro","institucion","periodo","estado","src_imagen_opcion","title","colorx","books","pregunta_delete","components","created","me","JSON","parse","localStorage","getItem","getLibros","getarregloLibros","mounted","methods","$http","get","$server_url","then","res","catch","error","console","log","openEditar","tr","libro_id","getPreguntas","addForm","undefined","$vs","notify","text","color","iconPack","icon","loading","close","mostrarImg","file","img","src_imagen_pregunta","archivo","document","getElementById","files","reader","FileReader","readAsDataURL","onloadend","src","result","cargarOpcion","trim","formData","FormData","fileImgPreg","append","post","$data_url","value","editarOpcion","item","pregunta","imagen","confirmEditarOpcion","fileImgOpcion","quitarOpcion","status","message","removePregunta","removeItemFromArr","arr","i","indexOf","splice","openConfirm","dialog","type","accept","eliminarLink","delete","time","getForms","limpiar","toDate"],"sources":["src/views/diagnostico/admin/ListadoPreguntas.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <vx-card\r\n            v-if=\"usuario.id_group == 1\"\r\n            :title=\"title\"\r\n            title-color=\"primary\"\r\n            subtitle=\"Estas preguntas estarán reflejadas en la prueba diagnóstica del estudiante.\">\r\n            <small  v-if=\"usuario.id_group == 1\">Ruta: /diagnostico/preguntas</small>\r\n            <vs-alert class=\"mt-2\" color=\"success\" style=\"min-height: 60px;\">\r\n                <p class=\"font-bold\">!Estas preguntas serán usadas para la validación del ingreso de códigos de libros por parte de los estudiantes</p>\r\n            </vs-alert>\r\n            <vs-table style=\"margin-top:-20px;\" class=\"mt-3\" search :data=\"arregloLibros\" stripe pagination max-items=\"10\">\r\n                <template>\r\n                <div slot=\"header\" class=\"flex\">\r\n                  <vs-button color=\"rgb(62, 201, 214)\" @click=\"limpiar();addForm();\" icon=\"add\" type=\"filled\">Generar preguntas al libro</vs-button>\r\n                </div>\r\n                </template>\r\n                <template slot=\"thead\">\r\n                <vs-th sort-key=\"nombrelibro\">Libro</vs-th>\r\n                <vs-th sort-key=\"nombrelibro\">Cantidad de preguntas</vs-th>\r\n                <vs-th sort-key=\"nombreInstitucion\">Acciones</vs-th>\r\n                </template>\r\n                <template slot-scope=\"{data}\">\r\n                <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                    <vs-td :data=\"data[indextr].nombrelibro\">\r\n                        {{  tr.nombrelibro}}\r\n                    </vs-td>\r\n                    <vs-td :data=\"data[indextr].nombrelibro\">\r\n                        {{  tr.contador}}\r\n                    </vs-td>\r\n                    <vs-td>\r\n                    <div class=\"flex\">\r\n                        <vx-tooltip class=\"ml-3\" style=\"display: inline-block;\" text=\"Editar\" position=\"top\" color=\"success\">\r\n                            <vs-button size=\"small\" class=\"modal-default-button\" color=\"warning\" @click=\"openEditar(data[indextr]);\" type=\"line\" icon-pack=\"feather\" icon=\"icon-edit\">\r\n                            </vs-button>\r\n                        </vx-tooltip>\r\n                    </div>\r\n                    </vs-td>\r\n                </vs-tr>\r\n                </template>\r\n            </vs-table>\r\n        </vx-card>\r\n         <!--MODAL PARA AGREGAR-->\r\n      <vs-popup classContent=\"popup-example\" @close=\"getarregloLibros()\" fullscreen  title=\"Generar Preguntas\" :active.sync=\"popupAgregar\">\r\n        <vs-tabs :color=\"colorx\">\r\n          <vs-tab @click=\"colorx = 'success'\" label=\"Información\">\r\n            <div class=\"vx-row mb-6\">\r\n              <div class=\"vx-col sm:w-1/3 w-full\">\r\n                <span>Libro</span>\r\n              </div>\r\n              <div class=\"vx-col sm:w-2/3 w-full\">\r\n                <v-select :options=\"libros\" :disabled=\"books\" id=\"books\" @input=\"getPreguntas()\" :reduce=\"libros => libros.idlibro\" label=\"nombrelibro\" class=\"w-full\" v-model=\"formulario.libro\" />\r\n              </div>\r\n            </div>\r\n            <div class=\"vx-col w-full mb-2\" style=\"padding: 10px;\">\r\n                <vs-divider position=\"left\" color=\"success\">Crear opciones</vs-divider>\r\n                <div class=\"vx-row mb-2\" id=\"editar\">\r\n                    <div class=\"vx-col w-full mb-1\">\r\n                        <div style=\"border: 1px solid #d5d5d5; border-radius: 5px; padding: 5px 5px 5px 5px;\" align=\"center\">\r\n                            <input type=\"file\" name=\"file2\" id=\"file2\" class=\"inputfile\" style=\"display: none;\" v-on:change=\"mostrarImg(2,2)\">\r\n                            <label for=\"file2\" style=\"margin-bottom: -10px; cursor: pointer; font-weight: bold; width: 100%; font-size: 11px;\">\r\n                                <i class=\"fa-solid fa-cloud\"></i> Click aquí para subir imagen\r\n                            </label>\r\n                            <div v-if=\"src_imagen_opcion==='' || src_imagen_opcion===null || src_imagen_opcion==='null'\"></div>\r\n                            <img id=\"img2\" style=\"border-radius: 5px;\" class=\"img-responsive mb-2\" v-bind:src=\"src_imagen_opcion\" v-else>\r\n                        </div>\r\n                        <vs-textarea class=\"mt-2\" label=\"Nombre Pregunta\" v-model=\"opcion.descripcion\" height=\"60px\"/>\r\n                    </div>\r\n                    <div class=\"vx-row w-full\">\r\n                        <div class=\"vx-col sm:w-1/2 w-full\" align=\"center\">\r\n                            <vs-switch style=\"width: 100px;\" color=\"success\" class=\"mt-3 mb-5\" v-model=\"opcion.tipo\">\r\n                                <span slot=\"on\">Verdadero</span>\r\n                                <span slot=\"off\">Falso</span>\r\n                            </vs-switch>\r\n                        </div>\r\n                        <div class=\"vx-col sm:w-1/2 w-full mb-1\" align=\"center\">\r\n                            <vs-button  v-if=\"editarOpcionActiva===false\"  class=\"mr-3 mb-2\" icon=\"save\" @click=\"cargarOpcion()\">Agregar Pregunta</vs-button>\r\n                            <vs-button  v-else class=\"mr-3 mb-2\" color=\"warning\" icon-pack=\"feather\" icon=\"icon-edit-1\" @click=\"confirmEditarOpcion(opcion)\">Editar Pregunta</vs-button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"vx-col w-full\">\r\n                <vs-divider position=\"center\" color=\"primary\">Opciones agregadas</vs-divider>\r\n                <div class=\"vx-row mb-3\" :key=\"indexitem\" v-for=\"(item, indexitem) in opciones\">\r\n                    <div class=\"vx-col sm:w-1/5 w-full\" align=\"center\">\r\n                        <img v-if=\"item.imagen\" style=\"border-radius: 5px;\" v-bind:src=\"$data_url+'archivos/diagnostico/img/img_preguntas/'+item.imagen\" width=\"100\">\r\n                    </div>\r\n                    <div class=\"vx-col sm:w-4/5 w-full\">\r\n                        <vs-input class=\"w-full\" v-model=\"item.pregunta\"/>\r\n                        <div class=\"vx-row\" align=\"center\">\r\n                        <div class=\"vx-col sm:w-1/3 w-full\">\r\n                            <vs-switch style=\"width: 100px;\" disabled=\"true\" color=\"success\" class=\"mt-3 mb-5\" v-model=\"item.opcion\">\r\n                                <span slot=\"on\">Verdadero</span>\r\n                                <span slot=\"off\">Falso</span>\r\n                            </vs-switch>\r\n                        </div>\r\n                        <div class=\"vx-col sm:w-1/3 w-full\">\r\n                            <vs-button color=\"primary\" type=\"line\" icon-pack=\"feather\" icon=\"icon-edit-1\" size=\"small\" @click=\"src_imagen_opcion=''; editarOpcionActiva=true; editarOpcion(item)\">Editar</vs-button>\r\n                        </div>\r\n                        <div class=\"vx-col sm:w-1/3 w-full\">\r\n                            <vs-button color=\"danger\" type=\"line\" icon-pack=\"feather\" icon=\"icon-trash\" size=\"small\" @click=\"quitarOpcion(item)\">Eliminar</vs-button>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n          </vs-tab>\r\n        </vs-tabs>\r\n      </vs-popup>\r\n    </div>\r\n</template>\r\n<script>\r\nimport vSelect from 'vue-select'\r\nimport flatPickr from 'vue-flatpickr-component';\r\nimport 'flatpickr/dist/flatpickr.css';\r\nimport axios from 'axios';\r\nimport $ from 'jquery'\r\nvar img_opcion_old = '';\r\nexport default {\r\n    data() {\r\n        return{\r\n            libros:[],\r\n            arregloLibros:[],\r\n            usuario:[],\r\n            id:0,\r\n            popupAgregar:false,\r\n            editarOpcionActiva: false,\r\n            verSolicitud:false,\r\n            opcion: {id_opcion_pregunta: 0, id_pregunta: '', descripcion: '', img_opcion: '', tipo: ''},\r\n            opciones:[],\r\n            formulario:{\r\n              libro:'',\r\n              descripcion:'',\r\n              institucion:'',\r\n              periodo:'',\r\n              estado:'1',\r\n            },\r\n            src_imagen_opcion: '',\r\n            title:'',\r\n            colorx:'success',\r\n            books:false,\r\n            pregunta_delete:'',\r\n        }\r\n    },\r\n    components:{\r\n        flatPickr,\r\n        vSelect,\r\n    },\r\n    created(){\r\n        let me = this;\r\n        me.usuario = JSON.parse(localStorage.getItem(\"usuario\"))\r\n        me.getLibros();\r\n        me.getarregloLibros();\r\n    },\r\n    mounted(){\r\n        let me = this;\r\n        me.title = \"Preguntas para la prueba diagnóstica\"\r\n    },\r\n    methods:{\r\n        getarregloLibros(){\r\n            let me = this;\r\n            this.$http.get(this.$server_url + 'diagnostico?getBooks=yes')\r\n                .then(function (res) {\r\n                    me.arregloLibros = res.data\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                })\r\n        },\r\n        openEditar(tr){\r\n            let me = this;\r\n            me.formulario.libro = tr.libro_id\r\n            me.getPreguntas()\r\n            me.popupAgregar = true;\r\n            me.books = true\r\n        },\r\n        addForm(){\r\n            let me = this;\r\n            me.popupAgregar = true;\r\n            me.books = false\r\n        },\r\n        getPreguntas(){\r\n            let me = this;\r\n            me.opciones = []\r\n            if(me.formulario.libro == '' || me.formulario.libro == null || me.formulario.libro == undefined){\r\n                me.$vs.notify({\r\n                    text:'Debe seleccionar un libro.',\r\n                    color:'warning',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check'})\r\n                return;\r\n            }\r\n            this.$http.get(this.$server_url + 'diagnostico?getPreguntas=yes&libro_id='+me.formulario.libro)\r\n                .then(function (res) {\r\n                    me.opciones = res.data\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                })\r\n\r\n        },\r\n        getLibros() {\r\n            let me = this;\r\n            me.$vs.loading();\r\n            this.$http.get(this.$server_url + 'listaLibro')\r\n                .then(function (res) {\r\n                    me.libros = res.data.libros\r\n                    me.$vs.loading.close()\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                    me.$vs.loading.close()\r\n                })\r\n        },\r\n        mostrarImg(file, img){\r\n            let me = this;\r\n            me.src_imagen_opcion = ' ';\r\n            me.src_imagen_pregunta = ' ';\r\n            var archivo = document.getElementById(\"file\"+file).files[0];\r\n            var reader = new FileReader();\r\n            if (me) {\r\n                reader.readAsDataURL(archivo );\r\n                reader.onloadend = function () {\r\n                    //document.getElementById(\"img\"+img).style.display = \"block\";\r\n                    document.getElementById(\"img\"+img).src = reader.result;\r\n                }\r\n            }\r\n        },\r\n        cargarOpcion(){\r\n            let me = this;\r\n            if(me.opcion.descripcion.trim() == \"\"){\r\n                me.$vs.notify({\r\n                text:'Debe ingresar la descripción de la pregunta.',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n                return\r\n            }\r\n            if(me.formulario.libro == '' || me.formulario.libro == null || me.formulario.libro == undefined){\r\n                me.$vs.notify({\r\n                    text:'Debe seleccionar un libro.',\r\n                    color:'warning',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check'})\r\n            }else{\r\n                me.$vs.loading()\r\n                const formData = new FormData();\r\n                let fileImgPreg = document.getElementById(\"file2\").files[0];\r\n                let tipo = 0;\r\n                if( me.opcion.tipo === true ){\r\n                    tipo = 1;\r\n                }\r\n                formData.append('pregunta',     me.opcion.descripcion);\r\n                formData.append('imagen',       fileImgPreg);\r\n                formData.append('opcion',       tipo);\r\n                formData.append('libro_id',     me.formulario.libro);\r\n                axios.post(this.$data_url+'api/cargarOpcionDiagnostico', formData)\r\n                .then(res => {\r\n                    me.$vs.loading.close()\r\n                    me.opciones = res.data;\r\n                    me.opcion.descripcion = '';\r\n                    me.opcion.tipo = '';\r\n                    me.src_imagen_opcion = '';\r\n                    me.opcion.id_opcion_pregunta = 0;\r\n                    document.getElementById(\"file2\").value = '';\r\n                    me.$vs.notify({\r\n                    text:'Se guardo correctamente',\r\n                    color:'success',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check'})\r\n                    me.getarregloLibros()\r\n                })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close()\r\n                    console.log(error);\r\n                })\r\n            }\r\n        },\r\n        editarOpcion(item){\r\n            let me = this;\r\n            me.opcion.pregunta = '';\r\n            document.getElementById(\"file2\").value = '';\r\n            me.opcion.descripcion        = item.pregunta;\r\n            me.opcion.tipo               = item.opcion;\r\n            me.opcion.id_opcion_pregunta = item.id;\r\n            img_opcion_old = item.imagen;\r\n            me.src_imagen_opcion = this.$data_url+'archivos/diagnostico/img/img_preguntas/'+item.imagen;\r\n        },\r\n        confirmEditarOpcion(item){\r\n            let me = this;\r\n            me.editarOpcionActiva= false;\r\n            let fileImgOpcion;\r\n            fileImgOpcion = document.getElementById(\"file2\").files[0];\r\n            if(fileImgOpcion === undefined ){\r\n                fileImgOpcion = item.img_opcion;\r\n            }\r\n            let tipo = 0;\r\n            if( me.opcion.tipo === true || me.opcion.tipo === 1 ){\r\n                tipo = 1;\r\n            }\r\n            const formData = new FormData();\r\n            formData.append('pregunta', me.opcion.descripcion);\r\n            formData.append('opcion', tipo);\r\n            formData.append('img_opcion', fileImgOpcion);\r\n            formData.append('img_opcion_old', img_opcion_old);\r\n            formData.append('id', item.id_opcion_pregunta);\r\n            formData.append('libro_id',     me.formulario.libro);\r\n            axios.post(this.$data_url+'api/editarOpcionDiagnostico', formData).\r\n            then(res => {\r\n                me.opciones = res.data;\r\n                me.editarOpcionActiva = false;\r\n                me.opcion.descripcion = '';\r\n                me.opcion.tipo = '';\r\n                me.src_imagen_opcion = '';\r\n                me.opcion.id_opcion_pregunta = 0;\r\n                me.$vs.notify({\r\n                text:'Se guardo correctamente',\r\n                color:'success',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n        },\r\n        quitarOpcion(item){\r\n            let me = this;\r\n            me.pregunta_delete  = item\r\n            this.$http.get(this.$server_url+'diagnostico/'+item.id)\r\n                .then(function (res) {\r\n                    if(res.data.status == 0){\r\n                        me.$vs.notify({\r\n                        text:res.data.message,\r\n                        color:'danger',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check'})\r\n                        return\r\n                    }\r\n                    me.removePregunta()\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                })\r\n        },\r\n        removePregunta(){\r\n            let me = this;\r\n            let formData = new FormData();\r\n            formData.append('id',me.pregunta_delete.id)\r\n            me.$vs.loading()\r\n            axios.post(this.$data_url+'api/eliminarOpcionDiagnostica', formData)\r\n            .then(res => {\r\n                me.removeItemFromArr(me.opciones, me.pregunta_delete)\r\n                me.pregunta_delete = ''\r\n                me.$vs.notify({\r\n                text:\"Se elimino correctamente\",\r\n                color:'success',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n                me.$vs.loading.close()\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n        },\r\n        removeItemFromArr (arr, item) {\r\n            const i = arr.indexOf(item)\r\n            arr.splice(i, 1)\r\n        },\r\n         openConfirm(tr){\r\n            let me = this;\r\n            me.id = tr.id\r\n            this.$vs.dialog({\r\n                type:'confirm',\r\n                color: 'danger',\r\n                title: `Confirmar`,\r\n                text: 'Estas seguro de eliminar?',\r\n                accept:this.eliminarLink\r\n            })\r\n        },\r\n        eliminarLink(){\r\n        let me = this\r\n        me.$vs.loading()\r\n        this.$http.delete(this.$server_url+'formularioDocente/'+me.id)\r\n            .then(res => {\r\n                me.$vs.loading.close()\r\n                if(res.data.status == 0){\r\n                    me.$vs.notify({\r\n                        text: res.data.message,\r\n                        color: 'danger',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-alert-triangle',\r\n                        time:3000,\r\n                    })\r\n                    return\r\n                }\r\n                me.$vs.notify({\r\n                    text: 'Se elimino correctamente el formulario',\r\n                    color: 'success',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-alert-triangle'\r\n                })\r\n                me.getForms()\r\n            })\r\n            .catch(function (error) {\r\n            me.$vs.loading.close()\r\n            console.log(error)\r\n            })\r\n        },\r\n        limpiar(){\r\n          let me                        = this;\r\n          me.formulario.id              = 0\r\n          me.formulario.toDate          = null\r\n          me.formulario.descripcion     = \"\"\r\n          me.formulario.institucion     = \"\"\r\n          me.formulario.periodo         = \"\"\r\n          me.formulario.estado          = 1\r\n          me.formulario.libro           = \"\"\r\n          me.opcion.descripcion         = '';\r\n          me.opcion.tipo                = '';\r\n          me.src_imagen_opcion          = '';\r\n          me.opcion.tipo                = false\r\n          me.opcion.id_opcion_pregunta  = 0;\r\n          me.opciones                   = []\r\n          me.editarOpcionActiva         = false\r\n        },\r\n    }\r\n}\r\n</script>\r\n"],"mappings":"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","ignoreList":[]}]}