{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\juegos\\ponchado.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\juegos\\ponchado.vue","mtime":1712682816084},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\babel.config.js","mtime":1712682813877},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\.babelrc","mtime":1712682813750},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _defineProperty from \"C:/laragon/www/PRY_NEW_JEYSON/LOCAL/plataformaprolipa_vue/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport Vue from 'vue';\nimport axios from 'axios';\nimport vSelect from 'vue-select';\nimport $ from \"jquery\";\nVue.filter('upper', function (value) {\n  return value.toUpperCase();\n});\nexport default {\n  components: {\n    'v-select': vSelect\n  },\n  data: function data() {\n    var _ref;\n    return _ref = {\n      popUpFicha: false,\n      infoJuego: [],\n      total_jugar: 0,\n      a_jugar: 5,\n      letras: [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"Ñ\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"Á\", \"É\", \"Í\", \"Ó\", \"Ú\", '1', '2', '3', '4', '5', '6', '7', '8', '9', '0'],\n      presionado: 'gradient',\n      estado: true,\n      tmp: '',\n      palabra_buscar: '',\n      presionada: '',\n      reloj: '',\n      x: null,\n      game: true,\n      win: false,\n      lost: false,\n      contador_aciertos: 0,\n      errores: 7,\n      //maximo de errores permitidos en cada palabra -  imagenes para el ahorcado\n      contador_errores: 0,\n      aleatorio: 0,\n      palabra_escrita: [],\n      botones: [],\n      color_botones: [],\n      grupo_palabras_total: [],\n      grupo_descripcion: [],\n      grupo_palabras: [],\n      grupo_george: [],\n      contadorFlag: 0,\n      palabra_descripcion: '',\n      palabra_longitud: 0,\n      encontradas_total: [],\n      inicio_fin: true,\n      boton_siguiente: false,\n      rel: null,\n      segundos: 0,\n      minutos: 0\n    }, _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_ref, \"x\", null), \"porcentaje_aciertos\", 0), \"porcentaje_errores\", 0), \"calificacion_tmp\", 0), \"total_calificacion\", 0), \"colorTexto\", 'negro'), \"usuario\", []), \"calificaciones\", []), \"imgUrl\", 'ah1'), \"imgExtension\", '.png'), _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_ref, \"id_juego\", ''), \"juego_realizado\", false), \"modalCalificacion\", false), \"codigo_curso\", ''), \"previsualizar\", '');\n  },\n  mounted: function mounted() {\n    this.getDatos();\n  },\n  created: function created() {\n    var me = this;\n    me.id_juego = me.$route.params.id;\n    me.previsualizar = me.$route.params.codigo;\n    me.codigo_curso = JSON.parse(localStorage.getItem('curso_juego'));\n    // console.log( me.codigo_curso.codigo )\n    me.usuario = JSON.parse(localStorage.getItem('usuario'));\n    //if (me.usuario.id_group === 4) {\n    var formData = new FormData();\n    formData.append('id_juego', me.id_juego);\n    formData.append('idusuario', me.usuario.idusuario);\n    this.$http.post(this.$server_url + 'calificacion_estudiante', formData).then(function (res) {\n      me.calificaciones = res.data;\n      if (me.calificaciones.length > 0) {\n        me.juego_realizado = true;\n        me.$vs.notify({\n          text: 'Nuevo intento',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        //me.$router.go(-1);\n      }\n    }).catch(function (error) {\n      console.log(error);\n    });\n    //}\n  },\n  methods: {\n    getDatos: function getDatos() {\n      var _this = this;\n      var me = this;\n      me.inicio_fin = true;\n      me.imgUrl = 'ah1';\n      me.porcentaje_aciertos = 0;\n      me.porcentaje_errores = 0;\n      me.boton_siguiente = false;\n      me.game = true;\n      me.win = false;\n      me.lost = false;\n      me.palabra_escrita = [];\n      me.botones = [];\n      me.color_botones = [];\n      me.contador_aciertos = 0;\n      me.contador_errores = 0;\n      me.palabra_longitud = 0;\n      window.$(\".imagen-ponchado-ganar\").hide();\n      me.$vs.loading();\n      this.$http.get(this.$server_url + 'juego_y_contenido/' + me.id_juego).then(function (res) {\n        me.infoJuego = res.data.items;\n        // console.log(me.infoJuego[0])\n        me.grupo_palabras_total = me.infoJuego[0].preguntas;\n        me.calificacion_tmp = me.infoJuego[0].puntos;\n        for (var i = 0; i < me.grupo_palabras_total.length; i++) {\n          me.grupo_palabras.push(me.grupo_palabras_total[i].respuesta);\n          me.grupo_descripcion.push(me.grupo_palabras_total[i].pregunta);\n        }\n        me.$vs.loading.close();\n        if (_this.a_jugar > _this.grupo_palabras_total.length) {\n          _this.a_jugar = _this.grupo_palabras_total.length;\n        }\n        _this.total_jugar = _this.a_jugar;\n        _this.f_tiempo(_this.infoJuego[0].duracion);\n        _this.generarAleatorio();\n      }).catch(function (error) {\n        console.log(error);\n        me.$vs.loading.close();\n      });\n    },\n    generarAleatorio: function generarAleatorio() {\n      if (this.a_jugar == 0) {\n        clearInterval(this.x);\n        this.modalCalificacion = true;\n        return this.inicio_fin = false;\n      }\n      window.$(\".imagen-ponchado\").show('slow');\n      window.$(\".imagen-ponchado\").removeClass('gana-palabra-ponchado');\n      this.imgUrl = 'ah1';\n      this.porcentaje_aciertos = 0;\n      this.porcentaje_errores = 0;\n      this.boton_siguiente = false;\n      this.game = true;\n      this.win = false;\n      this.lost = false;\n      this.palabra_escrita = [];\n      this.botones = [];\n      this.color_botones = [];\n      this.contador_aciertos = 0;\n      this.contador_errores = 0;\n      this.palabra_longitud = 0;\n      this.aleatorio = Math.floor(Math.random() * this.grupo_palabras.length);\n      // console.log(this.grupo_palabras)\n      for (var i = 0; i < this.grupo_palabras[this.aleatorio].length; i++) {\n        if (this.grupo_palabras[this.aleatorio][i] != \" \") {\n          this.palabra_longitud++;\n          //calcular la longitud de la palabra sin espacios en blanco, para los aciertos\n        }\n        if (this.grupo_palabras[this.aleatorio][i] == \" \") {\n          this.palabra_escrita.push('*');\n        } else {\n          this.palabra_escrita.push('');\n        }\n      }\n      this.palabra_buscar = this.mayusculas(this.grupo_palabras[this.aleatorio]);\n      this.palabra_descripcion = this.grupo_descripcion[this.aleatorio];\n      console.log(this.palabra_buscar, this.grupo_palabras);\n    },\n    comparar: function comparar(caracter, posicion) {\n      if (this.game) {\n        this.contadorFlag = 0;\n        this.botones[posicion] = true;\n        for (var i = 0; i < this.palabra_buscar.length; i++) {\n          if (caracter == this.palabra_buscar[i]) {\n            this.palabra_escrita[i] = caracter;\n            this.contador_aciertos++;\n            this.porcentaje_aciertos = this.contador_aciertos * 100 / this.palabra_longitud;\n            this.contadorFlag++;\n          }\n        }\n        // console.log( this.palabra_escrita )\n        if (this.contadorFlag == 0) {\n          window.$(\".imagen-ponchado\").hide();\n          this.contador_errores++;\n          this.imgUrl = 'ah' + (this.contador_errores + 1);\n          this.porcentaje_errores = this.contador_errores * 100 / this.errores;\n          window.$(\".imagen-ponchado\").animate({\n            height: 'toggle',\n            opacity: 'toggle'\n          }, 'slow');\n        }\n        if (this.contador_aciertos == this.palabra_longitud) {\n          window.$(\".imagen-ponchado\").hide();\n          this.imgUrl = 'ganar';\n          window.$(\".imagen-ponchado\").addClass('gana-palabra-ponchado');\n          this.win = true;\n          this.game = false;\n          this.$vs.notify({\n            text: 'Lo conseguiste, continua así',\n            color: 'success',\n            iconPack: 'feather',\n            icon: 'icon-check'\n          });\n          window.$(\".imagen-ponchado\").animate({\n            height: 'toggle',\n            opacity: 'toggle'\n          }, 'slow');\n        }\n        if (this.contador_errores == this.errores) {\n          this.lost = true;\n          this.game = false;\n          this.$vs.notify({\n            text: 'ohhh, más suerte la próxima',\n            color: 'danger',\n            iconPack: 'feather',\n            icon: 'icon-check'\n          });\n        }\n        if (!this.game) {\n          this.encontradas_total.push({\n            palabra: this.palabra_buscar,\n            presionadas: this.palabra_escrita.join(\"\"),\n            calificacion: (this.contador_aciertos * this.calificacion_tmp / this.palabra_longitud).toFixed(2)\n          });\n          this.grupo_palabras.splice(this.aleatorio, 1);\n          this.grupo_descripcion.splice(this.aleatorio, 1);\n          this.boton_siguiente = true;\n          this.total_calificacion = 0;\n          for (var index = 0; index < this.encontradas_total.length; index++) {\n            this.total_calificacion += parseFloat(this.encontradas_total[index].calificacion);\n            console.log(this.encontradas_total[index].calificacion);\n          }\n          this.total_calificacion = (this.total_calificacion / this.encontradas_total.length).toFixed(2);\n          console.log(this.total_calificacion, this.encontradas_total.length);\n        }\n      }\n    },\n    f_siguiente: function f_siguiente() {\n      this.a_jugar--;\n      this.generarAleatorio();\n    },\n    mayusculas: function mayusculas(value) {\n      if (value >= 0 && value <= 9) {\n        console.log('son numeritos');\n        return value;\n      } else {\n        return value.toUpperCase();\n      }\n    },\n    f_tiempo: function f_tiempo(numero) {\n      var me = this;\n      var n = numero * 60,\n        now,\n        distance,\n        hours,\n        minutes,\n        seconds,\n        conteoSegundos = 1000;\n      me.x = setInterval(function () {\n        n--;\n        now = n * 1000;\n        // Find the distance between now and the count down date\n        distance = n + now;\n\n        // Time calculations for days, hours, minutes and seconds\n        // var days = Math.floor(distance / (1000 * 60 * 60 * 24));\n        hours = Math.floor(distance % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n        minutes = Math.floor(distance % (1000 * 60 * 60) / (1000 * 60));\n        seconds = Math.floor(distance % (1000 * 60) / 1000);\n\n        // Output the result in an element with id=\"demo\"\n        me.reloj = hours + \"h \" + minutes + \"m \" + seconds + \"s \";\n        // If the count down is over, write some text \n        if (distance < 1) {\n          clearInterval(me.x);\n          me.colorTexto = 'rojo';\n          me.modalCalificacion = true;\n          me.boton_siguiente = false;\n          me.$vs.notify({\n            text: 'Se agotó el tiempo.',\n            color: 'warning',\n            iconPack: 'feather',\n            icon: 'icon-check'\n          });\n          me.inicio_fin = false;\n        }\n      }, conteoSegundos);\n    },\n    guardarCalificacion: function guardarCalificacion() {\n      var me = this;\n      me.modalCalificacion = false;\n      me.boton_siguiente = false;\n      // console.log(me.id_juego,\n      //     me.codigo_curso.codigo,\n      //     me.usuario.idusuario,\n      //     me.total_calificacion)\n      me.$vs.loading();\n      var formData1 = new FormData();\n      formData1.append('id_juego', me.id_juego);\n      formData1.append('codigo_curso', me.codigo_curso.codigo);\n      formData1.append('id_usuario', me.usuario.idusuario);\n      formData1.append('calificacion', me.total_calificacion);\n      this.$http.post(this.$server_url + 'j_guardar_calificacion', formData1).then(function (res) {\n        me.$vs.notify({\n          text: 'Calificación enviada a su docente, correctamente',\n          color: 'success',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        me.$vs.loading.close();\n      }).catch(function (error) {\n        me.$vs.loading.close();\n        console.log(error);\n      });\n    },\n    recargar: function recargar() {\n      window.location.reload();\n    }\n  }\n};",{"version":3,"names":["Vue","axios","vSelect","$","filter","value","toUpperCase","components","data","_ref","popUpFicha","infoJuego","total_jugar","a_jugar","letras","presionado","estado","tmp","palabra_buscar","presionada","reloj","x","game","win","lost","contador_aciertos","errores","contador_errores","aleatorio","palabra_escrita","botones","color_botones","grupo_palabras_total","grupo_descripcion","grupo_palabras","grupo_george","contadorFlag","palabra_descripcion","palabra_longitud","encontradas_total","inicio_fin","boton_siguiente","rel","segundos","minutos","_defineProperty","mounted","getDatos","created","me","id_juego","$route","params","id","previsualizar","codigo","codigo_curso","JSON","parse","localStorage","getItem","usuario","formData","FormData","append","idusuario","$http","post","$server_url","then","res","calificaciones","length","juego_realizado","$vs","notify","text","color","iconPack","icon","catch","error","console","log","methods","_this","imgUrl","porcentaje_aciertos","porcentaje_errores","window","hide","loading","get","items","preguntas","calificacion_tmp","puntos","i","push","respuesta","pregunta","close","f_tiempo","duracion","generarAleatorio","clearInterval","modalCalificacion","show","removeClass","Math","floor","random","mayusculas","comparar","caracter","posicion","animate","height","opacity","addClass","palabra","presionadas","join","calificacion","toFixed","splice","total_calificacion","index","parseFloat","f_siguiente","numero","n","now","distance","hours","minutes","seconds","conteoSegundos","setInterval","colorTexto","guardarCalificacion","formData1","recargar","location","reload"],"sources":["src/views/juegos/ponchado.vue"],"sourcesContent":["<template>\r\n<div class=\"vx-col md:w-full w-full mb-base\">\r\n    <vs-popup title=\"Guardar calificación\" :active.sync=\"modalCalificacion\">\r\n        <div v-if=\"previsualizar === 'previsualizar'\">\r\n            <h5>Este juego esta en modo de previsualización, no se permite calificar.</h5>\r\n        </div>\r\n        <div v-else>\r\n            <h5 class=\"mb-base p-5\">¿Desea enviar esta calificación, para que registre su docente?</h5>\r\n            <vs-button size=\"small\" style=\"display: inline-block;font-size: 13px;\" class=\"m-1\" type=\"relief\" color=\"primary\" @click=\"guardarCalificacion()\">Si, enviar calificación</vs-button>\r\n            <vs-button size=\"small\" style=\"display: inline-block;font-size: 13px;\" class=\"m-1\" type=\"relief\" color=\"danger\" @click=\"recargar()\">No, intentar nuevamente </vs-button>\r\n        </div>\r\n    </vs-popup>\r\n    <vs-popup title=\"Ficha técnica\" :active.sync=\"popUpFicha\">\r\n        <div v-for=\"(itemF,$indexF) in infoJuego\" :key=\"$indexF\">\r\n            <div class=\"vx-row w-full mb-base\">\r\n                <div class=\"vx-col sm:w-1/3 w-full\" align=\"right\">\r\n                    <b>Nombre del juego:</b>\r\n                </div>\r\n                <div class=\"vx-col sm:w-2/3 w-full\" align=\"left\">\r\n                    {{itemF.nombre_juego}}\r\n                </div>\r\n            </div>\r\n            <div class=\"vx-row w-full mb-base\">\r\n                <div class=\"vx-col sm:w-1/3 w-full\" align=\"right\">\r\n                    <b>Asignatura:</b>\r\n                </div>\r\n                <div class=\"vx-col sm:w-2/3 w-full\" align=\"left\">\r\n                    {{itemF.temas[0].nombreasignatura}}\r\n                </div>\r\n            </div>\r\n            <div class=\"vx-row w-full mb-base\">\r\n                <div class=\"vx-col sm:w-1/3 w-full\" align=\"right\">\r\n                    <b>Bloque curricular:</b>\r\n                </div>\r\n                <div class=\"vx-col sm:w-2/3 w-full\" align=\"left\">\r\n                    {{itemF.bloque_curricular}}\r\n                </div>\r\n            </div>\r\n            <div class=\"vx-row w-full mb-base\">\r\n                <div class=\"vx-col sm:w-1/3 w-full\" align=\"right\">\r\n                    <b>Grado:</b>\r\n                </div>\r\n                <div class=\"vx-col sm:w-2/3 w-full\" align=\"left\">\r\n                    {{itemF.grado}}\r\n                </div>\r\n            </div>\r\n            <!--<div class=\"vx-row w-full mb-base\">\r\n                <div class=\"vx-col sm:w-1/3 w-full\" align=\"right\">\r\n                    <b>Unidad:</b>\r\n                </div>\r\n                <div v-for=\"(itemU,$indexU) in itemF.temas\" :key=\"$indexU\">\r\n                    {{itemU.unidad}}\r\n                </div>\r\n            </div>-->\r\n            <div class=\"vx-row w-full mb-base\">\r\n                <div class=\"vx-col sm:w-1/3 w-full\" align=\"right\">\r\n                    <b>Tema:</b>\r\n                </div>\r\n                <div class=\"vx-col sm:w-2/3 w-full\" align=\"left\">\r\n                    <div v-for=\"(itemT,$indexT) in itemF.temas\" :key=\"$indexT\">\r\n                        Unidad {{itemT.unidad}}<br>\r\n                        {{itemT.nombre_tema}}<br><br>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"vx-row w-full mb-base\">\r\n                <div class=\"vx-col sm:w-1/3 w-full\" align=\"right\">\r\n                    <b>Destreza(s) que apoya:</b>\r\n                </div>\r\n                <div class=\"vx-col sm:w-2/3 w-full\" align=\"left\">\r\n                    {{itemF.destrezas}}\r\n                </div>\r\n            </div>\r\n            <div class=\"vx-row w-full mb-base\">\r\n                <div class=\"vx-col sm:w-1/3 w-full\" align=\"right\">\r\n                    <b>Habilidades que desarrolla:</b>\r\n                </div>\r\n                <div class=\"vx-col sm:w-2/3 w-full\" align=\"left\">\r\n                    {{itemF.habilidades}}\r\n                </div>\r\n            </div>\r\n            <div class=\"vx-row w-full mb-base\">\r\n                <div class=\"vx-col sm:w-1/3 w-full\" align=\"right\">\r\n                    <b>Intencion didáctica:</b>\r\n                </div>\r\n                <div class=\"vx-col sm:w-2/3 w-full\" align=\"left\">\r\n                    {{itemF.intencion_didactica}}\r\n                </div>\r\n            </div>\r\n            <div class=\"vx-row w-full mb-base\">\r\n                <div class=\"vx-col sm:w-1/3 w-full\" align=\"right\">\r\n                    <b>Consigna o sugerencia metodológica:</b>\r\n                </div>\r\n                <div class=\"vx-col sm:w-2/3 w-full\" align=\"left\">\r\n                    {{itemF.consigna}}\r\n                </div>\r\n            </div>\r\n            <div class=\"vx-row w-full mb-base\">\r\n                <div class=\"vx-col sm:w-1/3 w-full\" align=\"right\">\r\n                    <b>Consideraciones previas:</b>\r\n                </div>\r\n                <div class=\"vx-col sm:w-2/3 w-full\" align=\"left\">\r\n                    {{itemF.consideraciones}}\r\n                </div>\r\n            </div>\r\n            <div class=\"vx-row w-full mb-base\">\r\n                <div class=\"vx-col sm:w-1/3 w-full\" align=\"right\">\r\n                    <b>Elaborado por:</b>\r\n                </div>\r\n                <div class=\"vx-col sm:w-2/3 w-full\" align=\"left\">\r\n                    {{itemF.elaborado_por}}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </vs-popup>\r\n    <!-- <div v-if=\"juego_realizado===false\"> -->\r\n    <div>\r\n        <div v-for=\"(item,$index) in infoJuego\" :key=\"$index\" class=\"mt-4\">\r\n            <vx-card>\r\n                <h3>{{item.nombre_juego}}</h3>\r\n                <div class=\"vx-row text-left\">\r\n                    <div class=\"vx-col sm:w-1/2\">\r\n                        <h5 class=\"text-left\">\r\n                            <small>Tiempo restante:</small> <b :class=\"colorTexto\"> {{reloj}}</b>\r\n                        </h5>\r\n                    </div>\r\n                    <div class=\"vx-col sm:w-1/2 text-right\">\r\n                        <vs-button class=\"text-right\" size=\"small\" color=\"primary\" type=\"border\" @click=\"popUpFicha=true\" style=\"padding: 5px 10px 5px 10px; font-size: 14px;\">Ficha</vs-button>\r\n                    </div>\r\n                </div>\r\n            </vx-card>\r\n            <section v-if=\"inicio_fin\">\r\n                <div class=\"vx-row mismo-alto\">\r\n                    <div class=\"vx-col sm:w-2/3\">\r\n                        <vx-card class=\"mt-4\">\r\n                            <div class=\"text-left\">Palabras restantes: <b> {{a_jugar}}</b> </div>\r\n                            <div class=\"v-row text-left\">\r\n                                <vs-progress :percent=\"porcentaje_aciertos\" color=\"success\"> {{porcentaje_aciertos}}% </vs-progress>\r\n                                <vs-progress :percent=\"porcentaje_errores\" color=\"danger\"> {{porcentaje_errores}}% </vs-progress>\r\n                            </div>\r\n                            <div class=\"text-center mt-4 mb-base\">\r\n                                <h4 class=\"\">{{palabra_descripcion}}</h4>\r\n                            </div>\r\n                            <div class=\"row ponchado\">\r\n                                <div class=\"col-lg-8 col-md-8 col-sm-12 col-xs-12\">\r\n                                    <div class=\"cadena-escritura animate__animated\"></div>\r\n                                    <h2 class=\"text-center m-3\">\r\n                                        <span v-for=\"(p,index) in palabra_escrita\" :key=\"index\">\r\n                                            <vs-button v-if=\"p != '*'\" type=\"border\" class=\"letra pt-2 pb-2 pr-4 pl-4 m-1\">{{p}}</vs-button>\r\n                                            <span v-else> - </span>\r\n                                        </span>\r\n                                    </h2>\r\n                                    <div class=\"vx-row text-center\">\r\n                                        <div class=\"vx-col md:w-1/1 ml-6 mr-6 mb-base\">\r\n                                            <span v-for=\"(itemL, indexL) in letras\" :key=\"indexL\">\r\n                                                <vs-button size=\"small\" style=\"display: inline-block;font-size: 13px;\" class=\"m-1\" type=\"gradient\" color=\"primary\" @click=\"comparar(itemL, indexL)\" :class=\"{success:color_botones[indexL] == true }\" :disabled=\"botones[indexL]\">\r\n                                                    {{itemL}}\r\n                                                </vs-button>\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </vx-card>\r\n                    </div>\r\n                    <div class=\"vx-col sm:w-1/3 text-center\">\r\n                        <vx-card class=\"p-5 mt-4\">\r\n                            <div class=\"text-right\">\r\n                                <vs-button type=\"border\" v-if=\"boton_siguiente\" @click=\"f_siguiente\">Siguiente Palabra</vs-button>\r\n                            </div>\r\n                            <div class=\"w-full container-ponchado\" align=\"center\">\r\n                                <img class=\"medida-imagen imagen-ponchado\" v-bind:src=\"$data_url+'archivos/images/imagenes_juegos/ponchado/'+imgUrl+'.png'\">\r\n                            </div>\r\n                        </vx-card>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <section v-else>\r\n                <vx-card class=\"mt-3\">\r\n\r\n                    <div align=\"center\" class=\"mt-4\">\r\n                        <vs-table stripe pagination max-items=\"25\" search :data=\"encontradas_total\">\r\n                            <template slot=\"header\">\r\n                                <h3>Resultados</h3>\r\n                            </template>\r\n                            <template slot=\"thead\">\r\n                                <vs-th sort-key=\"nombre_evaluacion\">Palabra</vs-th>\r\n                                <vs-th sort-key=\"fecha\">Encontrada</vs-th>\r\n                                <vs-th sort-key=\"fecha\">Puntaje</vs-th>\r\n                            </template>\r\n\r\n                            <template slot-scope=\"{data}\">\r\n                                <vs-tr :data=\"tr\" :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                                    <vs-td :data=\"data[indextr].palabra\">\r\n                                        {{ data[indextr].palabra }}\r\n                                    </vs-td>\r\n                                    <vs-td :data=\"data[indextr].presionadas\">\r\n                                        {{ data[indextr].presionadas }}\r\n                                    </vs-td>\r\n                                    <vs-td :data=\"data[indextr].presionadas\">\r\n                                        {{ data[indextr].calificacion }}\r\n                                    </vs-td>\r\n                                </vs-tr>\r\n                                <vs-tr>\r\n                                    <vs-td> </vs-td>\r\n                                    <vs-td><b>Promedio</b></vs-td>\r\n                                    <vs-td><b>{{total_calificacion}} </b></vs-td>\r\n                                </vs-tr>\r\n                            </template>\r\n                        </vs-table>\r\n                    </div>\r\n                    <p>Palabras a responder: <b>{{total_jugar}} </b></p>\r\n                    <p>Palabras completadas: <b>{{encontradas_total.length}} </b></p>\r\n                </vx-card>\r\n\r\n            </section>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- <div v-else class=\"text-center\">\r\n        <vx-card>\r\n            Este juego ya fue realizado.\r\n        </vx-card>\r\n    </div> -->\r\n</div>\r\n</template>\r\n\r\n<script src=\"https://code.jquery.com/jquery-3.5.0.js\"></script><script>\r\nimport Vue from 'vue'\r\nimport axios from 'axios'\r\nimport vSelect from 'vue-select'\r\nimport $ from \"jquery\"\r\nVue.filter('upper', function (value) {\r\n    return value.toUpperCase()\r\n})\r\nexport default {\r\n    components: {\r\n        'v-select': vSelect,\r\n    },\r\n    data() {\r\n        return {\r\n            popUpFicha: false,\r\n            infoJuego: [],\r\n            total_jugar: 0,\r\n            a_jugar: 5,\r\n            letras: [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"Ñ\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"Á\", \"É\", \"Í\", \"Ó\", \"Ú\", '1', '2', '3', '4', '5', '6', '7', '8', '9', '0'],\r\n            presionado: 'gradient',\r\n            estado: true,\r\n            tmp: '',\r\n            palabra_buscar: '',\r\n            presionada: '',\r\n            reloj: '',\r\n            x: null,\r\n            game: true,\r\n            win: false,\r\n            lost: false,\r\n            contador_aciertos: 0,\r\n            errores: 7, //maximo de errores permitidos en cada palabra -  imagenes para el ahorcado\r\n            contador_errores: 0,\r\n            aleatorio: 0,\r\n            palabra_escrita: [],\r\n            botones: [],\r\n            color_botones: [],\r\n            grupo_palabras_total: [],\r\n            grupo_descripcion: [],\r\n            grupo_palabras: [],\r\n            grupo_george: [],\r\n            contadorFlag: 0,\r\n            palabra_descripcion: '',\r\n            palabra_longitud: 0,\r\n            encontradas_total: [],\r\n            inicio_fin: true,\r\n            boton_siguiente: false,\r\n            rel: null,\r\n            segundos: 0,\r\n            minutos: 0,\r\n            x: null,\r\n            porcentaje_aciertos: 0,\r\n            porcentaje_errores: 0,\r\n            calificacion_tmp: 0,\r\n            total_calificacion: 0,\r\n            colorTexto: 'negro',\r\n            usuario: [],\r\n            calificaciones: [],\r\n            imgUrl: 'ah1',\r\n            imgExtension: '.png',\r\n            id_juego: '',\r\n            juego_realizado: false,\r\n            modalCalificacion: false,\r\n            codigo_curso: '',\r\n            previsualizar: '',\r\n        }\r\n    },\r\n    mounted() {\r\n        this.getDatos();\r\n    },\r\n    created() {\r\n        let me = this;\r\n        me.id_juego = me.$route.params.id\r\n        me.previsualizar = me.$route.params.codigo\r\n        me.codigo_curso = JSON.parse(localStorage.getItem('curso_juego'));\r\n        // console.log( me.codigo_curso.codigo )\r\n        me.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n        //if (me.usuario.id_group === 4) {\r\n        let formData = new FormData();\r\n        formData.append('id_juego', me.id_juego);\r\n        formData.append('idusuario', me.usuario.idusuario);\r\n        this.$http.post(this.$server_url+'calificacion_estudiante', formData)\r\n            .then(res => {\r\n                me.calificaciones = res.data;\r\n                if (me.calificaciones.length > 0) {\r\n                    me.juego_realizado = true\r\n                    me.$vs.notify({\r\n                        text: 'Nuevo intento',\r\n                        color: 'warning',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check'\r\n                    })\r\n                    //me.$router.go(-1);\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n        //}\r\n    },\r\n    methods: {\r\n        getDatos() {\r\n            let me = this;\r\n            me.inicio_fin = true;\r\n            me.imgUrl = 'ah1';\r\n            me.porcentaje_aciertos = 0;\r\n            me.porcentaje_errores = 0;\r\n            me.boton_siguiente = false;\r\n            me.game = true;\r\n            me.win = false;\r\n            me.lost = false;\r\n            me.palabra_escrita = [];\r\n            me.botones = [];\r\n            me.color_botones = [];\r\n            me.contador_aciertos = 0;\r\n            me.contador_errores = 0;\r\n            me.palabra_longitud = 0;\r\n            window.$(\".imagen-ponchado-ganar\").hide();\r\n            me.$vs.loading()\r\n\r\n            this.$http.get(this.$server_url+'juego_y_contenido/' + me.id_juego)\r\n                .then(res => {\r\n                    me.infoJuego = res.data.items;\r\n                    // console.log(me.infoJuego[0])\r\n                    me.grupo_palabras_total = me.infoJuego[0].preguntas\r\n                    me.calificacion_tmp = me.infoJuego[0].puntos\r\n                    for (let i = 0; i < me.grupo_palabras_total.length; i++) {\r\n                        me.grupo_palabras.push(me.grupo_palabras_total[i].respuesta)\r\n                        me.grupo_descripcion.push(me.grupo_palabras_total[i].pregunta)\r\n                    }\r\n                    me.$vs.loading.close()\r\n                    if (this.a_jugar > this.grupo_palabras_total.length) {\r\n                        this.a_jugar = this.grupo_palabras_total.length\r\n                    }\r\n                    this.total_jugar = this.a_jugar\r\n                    this.f_tiempo(this.infoJuego[0].duracion);\r\n                    this.generarAleatorio();\r\n                })\r\n                .catch(error => {\r\n                    console.log(error)\r\n                    me.$vs.loading.close()\r\n\r\n                })\r\n        },\r\n        generarAleatorio() {\r\n            if (this.a_jugar == 0) {\r\n                clearInterval(this.x);\r\n                this.modalCalificacion = true;\r\n                return this.inicio_fin = false\r\n            }\r\n\r\n            window.$(\".imagen-ponchado\").show('slow');\r\n            window.$(\".imagen-ponchado\").removeClass('gana-palabra-ponchado')\r\n            this.imgUrl = 'ah1';\r\n            this.porcentaje_aciertos = 0;\r\n            this.porcentaje_errores = 0;\r\n            this.boton_siguiente = false;\r\n            this.game = true;\r\n            this.win = false;\r\n            this.lost = false;\r\n            this.palabra_escrita = [];\r\n            this.botones = [];\r\n            this.color_botones = [];\r\n            this.contador_aciertos = 0;\r\n            this.contador_errores = 0;\r\n            this.palabra_longitud = 0;\r\n            this.aleatorio = Math.floor(Math.random() * this.grupo_palabras.length)\r\n            // console.log(this.grupo_palabras)\r\n            for (let i = 0; i < this.grupo_palabras[this.aleatorio].length; i++) {\r\n                if (this.grupo_palabras[this.aleatorio][i] != \" \") {\r\n                    this.palabra_longitud++;\r\n                    //calcular la longitud de la palabra sin espacios en blanco, para los aciertos\r\n                }\r\n                if (this.grupo_palabras[this.aleatorio][i] == \" \") {\r\n                    this.palabra_escrita.push('*')\r\n                } else {\r\n                    this.palabra_escrita.push('')\r\n                }\r\n            }\r\n\r\n            this.palabra_buscar = this.mayusculas(this.grupo_palabras[this.aleatorio])\r\n            this.palabra_descripcion = this.grupo_descripcion[this.aleatorio]\r\n            console.log(this.palabra_buscar, this.grupo_palabras)\r\n        },\r\n        comparar(caracter, posicion) {\r\n\r\n            if (this.game) {\r\n                this.contadorFlag = 0;\r\n                this.botones[posicion] = true;\r\n                for (let i = 0; i < this.palabra_buscar.length; i++) {\r\n                    if (caracter == this.palabra_buscar[i]) {\r\n                        this.palabra_escrita[i] = caracter\r\n                        this.contador_aciertos++;\r\n                        this.porcentaje_aciertos = (this.contador_aciertos * 100) / this.palabra_longitud\r\n                        this.contadorFlag++\r\n                    }\r\n                }\r\n                // console.log( this.palabra_escrita )\r\n                if (this.contadorFlag == 0) {\r\n                    window.$(\".imagen-ponchado\").hide()\r\n                    this.contador_errores++;\r\n                    this.imgUrl = 'ah' + (this.contador_errores + 1);\r\n                    this.porcentaje_errores = (this.contador_errores * 100) / this.errores\r\n                    window.$(\".imagen-ponchado\").animate({\r\n                        height: 'toggle',\r\n                        opacity: 'toggle'\r\n                    }, 'slow');\r\n                }\r\n                if (this.contador_aciertos == this.palabra_longitud) {\r\n                    window.$(\".imagen-ponchado\").hide()\r\n                    this.imgUrl = 'ganar';\r\n                    window.$(\".imagen-ponchado\").addClass('gana-palabra-ponchado')\r\n                    this.win = true\r\n                    this.game = false;\r\n                    this.$vs.notify({\r\n                        text: 'Lo conseguiste, continua así',\r\n                        color: 'success',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check'\r\n                    })\r\n                    window.$(\".imagen-ponchado\").animate({\r\n                        height: 'toggle',\r\n                        opacity: 'toggle'\r\n                    }, 'slow');\r\n                }\r\n                if (this.contador_errores == this.errores) {\r\n                    this.lost = true;\r\n                    this.game = false;\r\n                    this.$vs.notify({\r\n                        text: 'ohhh, más suerte la próxima',\r\n                        color: 'danger',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check'\r\n                    })\r\n                }\r\n                if (!this.game) {\r\n                    this.encontradas_total.push({\r\n                        palabra: this.palabra_buscar,\r\n                        presionadas: this.palabra_escrita.join(\"\"),\r\n                        calificacion: ((this.contador_aciertos * this.calificacion_tmp) / this.palabra_longitud).toFixed(2)\r\n                    })\r\n                    this.grupo_palabras.splice(this.aleatorio, 1)\r\n                    this.grupo_descripcion.splice(this.aleatorio, 1)\r\n                    this.boton_siguiente = true;\r\n                    this.total_calificacion = 0;\r\n                    for (let index = 0; index < this.encontradas_total.length; index++) {\r\n                        this.total_calificacion += parseFloat(this.encontradas_total[index].calificacion);\r\n                        console.log(this.encontradas_total[index].calificacion)\r\n                    }\r\n                    this.total_calificacion = (this.total_calificacion / this.encontradas_total.length).toFixed(2);\r\n                    console.log(this.total_calificacion, this.encontradas_total.length)\r\n                }\r\n\r\n            }\r\n        },\r\n        f_siguiente() {\r\n            this.a_jugar--;\r\n            this.generarAleatorio();\r\n        },\r\n        mayusculas(value) {\r\n            if (value >= 0 && value <= 9) {\r\n                console.log('son numeritos')\r\n                return value;\r\n            } else {\r\n                return value.toUpperCase()\r\n            }\r\n        },\r\n        f_tiempo(numero) {\r\n            let me = this;\r\n            let n = numero * 60,\r\n                now, distance,\r\n                hours,\r\n                minutes,\r\n                seconds,\r\n                conteoSegundos = 1000;\r\n            me.x = setInterval(function () {\r\n                n--;\r\n                now = n * 1000;\r\n                // Find the distance between now and the count down date\r\n                distance = n + now;\r\n\r\n                // Time calculations for days, hours, minutes and seconds\r\n                // var days = Math.floor(distance / (1000 * 60 * 60 * 24));\r\n                hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n                minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n                seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n\r\n                // Output the result in an element with id=\"demo\"\r\n                me.reloj = (hours + \"h \" + minutes + \"m \" + seconds + \"s \");\r\n                // If the count down is over, write some text \r\n                if (distance < 1) {\r\n                    clearInterval(me.x);\r\n                    me.colorTexto = 'rojo';\r\n                    me.modalCalificacion = true;\r\n                    me.boton_siguiente = false;\r\n                    me.$vs.notify({\r\n                        text: 'Se agotó el tiempo.',\r\n                        color: 'warning',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check'\r\n                    })\r\n                    me.inicio_fin = false\r\n                }\r\n            }, conteoSegundos);\r\n        },\r\n        guardarCalificacion() {\r\n            let me = this;\r\n            me.modalCalificacion = false;\r\n            me.boton_siguiente = false;\r\n            // console.log(me.id_juego,\r\n            //     me.codigo_curso.codigo,\r\n            //     me.usuario.idusuario,\r\n            //     me.total_calificacion)\r\n            me.$vs.loading();\r\n\r\n            let formData1 = new FormData();\r\n            formData1.append('id_juego', me.id_juego);\r\n            formData1.append('codigo_curso', me.codigo_curso.codigo);\r\n            formData1.append('id_usuario', me.usuario.idusuario);\r\n            formData1.append('calificacion', me.total_calificacion);\r\n            this.$http.post(this.$server_url+'j_guardar_calificacion', formData1).then(res => {\r\n                    me.$vs.notify({\r\n                        text: 'Calificación enviada a su docente, correctamente',\r\n                        color: 'success',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check'\r\n                    })\r\n                    me.$vs.loading.close()\r\n                })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close()\r\n                    console.log(error);\r\n                })\r\n        },\r\n        recargar() {\r\n            window.location.reload()\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n.stars {\r\n    display: inline-block;\r\n    /* text-shadow: 2px 2px 0 #AAA; */\r\n    font-size: 4em;\r\n}\r\n\r\n.alfabeto,\r\n.estrellas {\r\n    /*max-width: 500px;*/\r\n    height: auto;\r\n    /*margin: 0 auto;*/\r\n    padding: 20px;\r\n    line-height: 30px;\r\n    text-align: center;\r\n}\r\n\r\n.estrellas {\r\n    color: #444;\r\n}\r\n\r\n.rojo {\r\n    color: red;\r\n}\r\n\r\n.negro {\r\n    color: #444;\r\n}\r\n\r\n.container-ponchado {\r\n    height: 310px;\r\n    ;\r\n}\r\n\r\n.medida-imagen {\r\n    width: 175px;\r\n    height: 300px;\r\n}\r\n\r\n.gana-palabra-ponchado {\r\n    animation: rotating 2s linear infinite alternate;\r\n    mix-blend-mode: multiply;\r\n}\r\n\r\n@-webkit-keyframes rotating {\r\n    0% {\r\n        -webkit-transform: rotate(0deg);\r\n    }\r\n\r\n    25% {\r\n        -webkit-transform: rotate(3deg);\r\n    }\r\n\r\n    50% {\r\n        -webkit-transform: rotate(0deg);\r\n    }\r\n\r\n    75% {\r\n        -webkit-transform: rotate(-3deg);\r\n    }\r\n\r\n    100% {\r\n        -webkit-transform: rotate(0deg);\r\n    }\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]}]}