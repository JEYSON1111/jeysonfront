{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\codigos\\components\\RevisionCodigos.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\codigos\\components\\RevisionCodigos.vue","mtime":1712682815631},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\babel.config.js","mtime":1712682813877},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\.babelrc","mtime":1712682813750},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport _typeof from \"C:/laragon/www/PRY_NEW_JEYSON/LOCAL/plataformaprolipa_vue/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport _defineProperty from \"C:/laragon/www/PRY_NEW_JEYSON/LOCAL/plataformaprolipa_vue/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectWithoutProperties from \"C:/laragon/www/PRY_NEW_JEYSON/LOCAL/plataformaprolipa_vue/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.string.starts-with\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nimport gestionCodigosLista from \"./utils/gestionCodigosLista.vue\";\nimport ImportExcel from \"./importExcel.vue\";\nimport vSelect from 'vue-select';\nimport TableProblemasDiagnosticoVue from \"./utils/TableProblemasDiagnostico.vue\";\nvar TablaErroresPaqueteVue = function TablaErroresPaqueteVue() {\n  return import('@/views/codigos/paquetes/components/TablaErroresPaquete');\n};\nvar TableResumenPaqueteVue = function TableResumenPaqueteVue() {\n  return import('@/views/codigos/components/utils/components/GestionLiquidacion/TableResumenPaquete');\n};\nexport default {\n  components: {\n    ImportExcel: ImportExcel,\n    vSelect: vSelect,\n    gestionCodigosLista: gestionCodigosLista,\n    TableProblemasDiagnosticoVue: TableProblemasDiagnosticoVue,\n    TablaErroresPaqueteVue: TablaErroresPaqueteVue,\n    TableResumenPaqueteVue: TableResumenPaqueteVue\n  },\n  data: function data() {\n    return {\n      codigosPerdidos: false,\n      tableData: [],\n      header: [],\n      sheetName: '',\n      usuario: [],\n      modalConfirm: false,\n      modalErrores: false,\n      errores: [],\n      tipo_selected: '',\n      cedulas_no_encontradas: [],\n      modalCedulas: false,\n      informacion: [],\n      tmparregloCodigos: [],\n      codigosNoExisten: [],\n      cantidadNoExisten: 0,\n      duplicados: 0,\n      contadorCodigos: 0,\n      mostrarDuplicados: [],\n      popupMostrarDuplicados: false,\n      conDevolucion: '0',\n      userRoot: false,\n      //variables para filtros\n      codigoTipo: '0',\n      //fin variables para filtros\n      //VARIABLES PARA TIPO DE ACTIVACION O DIAGNOSTICO\n      tipoBodega: 0,\n      popupProblemasDiagnostico: false,\n      popupConfirmTipoImportado: false,\n      arregloProblemasDiagnostico: [],\n      titleImportacion: '',\n      //variables para paquetes\n      arregloFormatoSend: [],\n      arregloProblemasPaquete: [],\n      arregloResumen: [],\n      arregloErroresPaquetes: []\n      //fin variables para paquetes\n    };\n  },\n  created: function created() {\n    this.usuario = JSON.parse(localStorage.getItem('usuario'));\n    this.codigosPerdidos = false;\n  },\n  mounted: function mounted() {\n    var me = this;\n    me.getUserRoot(me.usuario);\n  },\n  computed: {\n    sumaTotal: function sumaTotal() {\n      var me = this;\n      var total = me.informacion.length;\n      return total;\n    },\n    SumaCodigosDevolucion: function SumaCodigosDevolucion() {\n      var me = this;\n      var datos = me.informacion.filter(function (p) {\n        return p.estado_liquidacion == '3';\n      });\n      var resultado = datos.length;\n      return resultado;\n    },\n    sumaCodigosRegalados: function sumaCodigosRegalados() {\n      var me = this;\n      var primerFiltro = me.informacion.filter(function (p) {\n        return p.estado == '1' || p.estado == '0' || p.estado == '' || p.estado == null;\n      });\n      var datos = primerFiltro.filter(function (p) {\n        return p.estado_liquidacion == '2' && p.liquidado_regalado == '0';\n      });\n      var resultado = datos.length;\n      return resultado;\n    },\n    sumaCodigosRegaladosLiquidados: function sumaCodigosRegaladosLiquidados() {\n      var me = this;\n      var datos = me.informacion.filter(function (p) {\n        return p.estado_liquidacion == '2' && p.liquidado_regalado == '1';\n      });\n      var resultado = datos.length;\n      return resultado;\n    },\n    sumaCodigosBloqueados: function sumaCodigosBloqueados() {\n      var me = this;\n      var primerFiltro = me.informacion.filter(function (p) {\n        return p.estado_liquidacion != '3';\n      });\n      var datos = primerFiltro.filter(function (p) {\n        return p.estado == '2';\n      });\n      var resultado = datos.length;\n      return resultado;\n    },\n    sumarCodigosActivos: function sumarCodigosActivos() {\n      var me = this;\n      var primerFiltro = me.informacion.filter(function (p) {\n        return p.estado == '1' || p.estado == '0' || p.estado == '' || p.estado == null;\n      });\n      var datos = primerFiltro.filter(function (p) {\n        return p.estado_liquidacion == '0' || p.estado_liquidacion == '1';\n      });\n      var resultado = datos.length;\n      return resultado;\n    },\n    sumarCodigosLiquidados: function sumarCodigosLiquidados() {\n      var me = this;\n      var primerFiltro = me.informacion.filter(function (p) {\n        return p.estado == '1' || p.estado == '0' || p.estado == '' || p.estado == null;\n      });\n      var datos = primerFiltro.filter(function (p) {\n        return p.estado_liquidacion == '0';\n      });\n      var resultado = datos.length;\n      return resultado;\n    },\n    sumarCodigosporLiquidarse: function sumarCodigosporLiquidarse() {\n      var me = this;\n      var primerFiltro = me.informacion.filter(function (p) {\n        return (p.estado == '1' || p.estado == '0' || p.estado == '' || p.estado == null) && p.estado_liquidacion == 1 && p.bc_estado == '2';\n      });\n      var datos = primerFiltro;\n      var resultado = datos.length;\n      return resultado;\n    },\n    sumarCodigosLeidos: function sumarCodigosLeidos() {\n      var me = this;\n      var primerFiltro = me.informacion.filter(function (p) {\n        return (p.estado == '1' || p.estado == '0' || p.estado == '' || p.estado == null) && p.estado_liquidacion == 1;\n      });\n      var datos = primerFiltro.filter(function (p) {\n        return p.bc_estado == '2';\n      });\n      var resultado = datos.length;\n      return resultado;\n    },\n    sumarCodigosNoleidos: function sumarCodigosNoleidos() {\n      var me = this;\n      var primerFiltro = me.informacion.filter(function (p) {\n        return (p.estado == '1' || p.estado == '0' || p.estado == '' || p.estado == null) && p.estado_liquidacion == 1;\n      });\n      var datos = primerFiltro.filter(function (p) {\n        return p.bc_estado == '1';\n      });\n      var resultado = datos.length;\n      return resultado;\n    },\n    sumarCodigosVentaDirecta: function sumarCodigosVentaDirecta() {\n      var me = this;\n      var primerFiltro = me.informacion.filter(function (p) {\n        return (p.estado == '1' || p.estado == '0' || p.estado == '' || p.estado == null) && p.venta_estado == 1;\n      });\n      var resultado = primerFiltro.length;\n      return resultado;\n    },\n    sumarCodigosVentaLista: function sumarCodigosVentaLista() {\n      var me = this;\n      var primerFiltro = me.informacion.filter(function (p) {\n        return (p.estado == '1' || p.estado == '0' || p.estado == '' || p.estado == null) && p.venta_estado == 2;\n      });\n      var resultado = primerFiltro.length;\n      return resultado;\n    }\n  },\n  methods: {\n    ejecutarValidacion: function ejecutarValidacion() {\n      var me = this;\n      if (me.tipoBodega == 1 || me.tipoBodega == 2) {\n        me.validateCodigos();\n      }\n      if (me.tipoBodega == 3) {\n        me.validateCodigosPaquete();\n      }\n    },\n    validateCodigos: function validateCodigos() {\n      var me = this;\n      try {\n        var datos = [];\n        me.arregloProblemasDiagnostico = [];\n        datos = me.tableData.filter(function (p) {\n          return !p.codigo.startsWith(\"PAQ-\") && !p.codigo.startsWith(\"paq-\");\n        });\n        var preValores = [];\n        //quitar types NumRow\n        datos.forEach(function (element) {\n          var obj = new Object();\n          obj.codigo = element.codigo;\n          preValores.push(obj);\n        });\n        var getLongitud = datos.length;\n        var longitud = getLongitud / 2;\n        for (var i = 0; i < longitud; i++) {\n          // Creamos un nuevo array para almacenar los objetos quitados\n          var nuevoArray = [];\n          var codigoActivacion = \"\";\n          var codigoDiagnostico = \"\";\n          // Quitamos los dos primeros objetos del array original y los agregamos al nuevo array\n          nuevoArray.push(preValores.splice(0, 2));\n          var setear = nuevoArray.flat();\n          console.log(\"tipo\", me.tipoBodega);\n          //====VALIDACION SI SOLO HAY UN CODIGO====\n          if (setear.length == 1) {\n            var cal = new Object();\n            //ACTIVACION - DIAGNOSTICO)\n            if (me.tipoBodega == 1) {\n              cal.codigoActivacion = setear[0].codigo;\n              cal.codigoDiagnostico = \"\";\n            }\n            //DIAGNOSTICO - ACTIVACION)\n            if (me.tipoBodega == 2) {\n              cal.codigoDiagnostico = setear[0].codigo;\n              cal.codigoActivacion = \"\";\n            }\n            cal.problema = 'formato';\n            me.arregloProblemasDiagnostico.push(cal);\n          }\n          //==SI TODO ESTA NORMAL===\n          else {\n            //ACTIVACION - DIAGNOSTICO)\n            if (me.tipoBodega == 1) {\n              codigoActivacion = setear[0].codigo;\n              codigoDiagnostico = setear[1].codigo;\n            }\n            //DIAGNOSTICO - ACTIVACION)\n            if (me.tipoBodega == 2) {\n              codigoDiagnostico = setear[0].codigo;\n              codigoActivacion = setear[1].codigo;\n            }\n            //============ACTIVACION==================================\n            //VALIDACION SI NO SON STRING\n            if (typeof codigoActivacion !== 'string' || typeof codigoDiagnostico !== 'string') {\n              var cal = new Object();\n              cal.codigoActivacion = codigoActivacion;\n              cal.codigoDiagnostico = codigoDiagnostico;\n              cal.problema = 'formato';\n              me.arregloProblemasDiagnostico.push(cal);\n            } else {\n              var activacionMinuscula = codigoActivacion.toLowerCase();\n              //validar que el codigo de activacion no tenga una P\n              if (activacionMinuscula.startsWith(\"p\")) {\n                //validar meñique que el codigo de activacion se permita empezar por p DONDE SEA PLM no hago nada\n                if (activacionMinuscula.startsWith(\"plm\")) {} else {\n                  var cal = new Object();\n                  cal.codigoActivacion = codigoActivacion;\n                  cal.codigoDiagnostico = codigoDiagnostico;\n                  cal.problema = 'activacion';\n                  me.arregloProblemasDiagnostico.push(cal);\n                }\n              }\n              //=============DIAGNOSTICO===================================\n              //validar que el codigo de activacion tenga una P\n              var diagnosticoMinuscula = codigoDiagnostico.toLowerCase();\n              //validar si es meñique debe tener 2 pp\n              if (activacionMinuscula.startsWith(\"plm\")) {\n                //si no inicia por 2 pp\n                if (!diagnosticoMinuscula.startsWith(\"pp\")) {\n                  var cal = new Object();\n                  cal.codigoActivacion = codigoActivacion;\n                  cal.codigoDiagnostico = codigoDiagnostico;\n                  cal.problema = 'diagnostico';\n                  me.arregloProblemasDiagnostico.push(cal);\n                }\n              }\n              //diferente a meñique\n              else {\n                if (!diagnosticoMinuscula.startsWith(\"p\")) {\n                  var cal = new Object();\n                  cal.codigoActivacion = codigoActivacion;\n                  cal.codigoDiagnostico = codigoDiagnostico;\n                  cal.problema = 'diagnostico';\n                  me.arregloProblemasDiagnostico.push(cal);\n                }\n              }\n            }\n          }\n        } //Fin FOR\n        //si hay errores en el archivo mostramos un modal\n        if (me.arregloProblemasDiagnostico.length > 0) {\n          me.popupProblemasDiagnostico = true;\n        }\n      } catch (err) {\n        console.log(\"err\", err);\n        alert(\"Hubo problemas con tu archivo excel\");\n      }\n    },\n    //==================================METODOS PAQUETES===================\n    validateCodigosPaquete: function validateCodigosPaquete() {\n      var me = this;\n      try {\n        me.arregloFormatoSend = [];\n        var problema = \"Problema con el paquete\";\n        me.arregloProblemasPaquete = [];\n        var datos = JSON.parse(JSON.stringify(me.tableData));\n        //validar si son mas de 200 paquetes\n        if (datos.length > 200) {\n          me.$vs.notify({\n            text: 'No puedes subir mas de 200 paquetes',\n            color: 'warning',\n            iconPack: 'feather',\n            icon: 'icon-check'\n          });\n          return false;\n        }\n        datos.forEach(function (element) {\n          var ifErrsPaquete = false;\n          var codigoPaquete = element.codigo;\n          //validar que el codigo sea string\n          if (typeof codigoPaquete !== 'string') {\n            ifErrsPaquete = true;\n          } else {\n            var paqueteMinuscula = codigoPaquete.toLowerCase();\n            if (!paqueteMinuscula.startsWith(\"paq-\")) {\n              ifErrsPaquete = true;\n            }\n          }\n          //si existe un errores\n          if (ifErrsPaquete) {\n            var cal = new Object();\n            cal.codigoPaquete = codigoPaquete;\n            cal.problema = problema;\n            cal.codigosHijos = [];\n            me.arregloProblemasPaquete.push(cal);\n          } else {\n            me.arregloFormatoSend.push({\n              codigoPaquete: codigoPaquete\n            });\n          }\n        });\n        //si hay errores en el archivo mostramos un modal\n        if (me.arregloProblemasPaquete.length > 0) {\n          me.popupProblemasDiagnostico = true;\n        }\n      } catch (err) {\n        console.log(\"err\", err);\n        alert(\"Hubo problemas con tu archivo excel\");\n      }\n    },\n    //===================================FIN METODOS PAQUETES===============\n    filtroTipo: function filtroTipo() {\n      var me = this;\n      me.tmparregloCodigos = [];\n      var datos = me.informacion;\n      //para ver los codigos activos\n      // if(me.codigoTipo == 1){\n      //     let primerFiltro = datos.filter(p => p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null);\n      //     me.tmparregloCodigos = primerFiltro.filter(p => p.estado_liquidacion =='0' ||  p.estado_liquidacion =='1')\n      //     return\n      // }\n      //para ver los codigos bloqueados\n      if (me.codigoTipo == 2) {\n        var primerFiltro = datos.filter(function (p) {\n          return p.estado_liquidacion != '3';\n        });\n        me.tmparregloCodigos = primerFiltro.filter(function (p) {\n          return p.estado == '2';\n        });\n        return;\n      }\n      //para ver lso codigos sin ler\n      if (me.codigoTipo == 3) {\n        var _primerFiltro = datos.filter(function (p) {\n          return (p.estado == '1' || p.estado == '0' || p.estado == '' || p.estado == null) && p.estado_liquidacion == 1;\n        });\n        me.tmparregloCodigos = _primerFiltro.filter(function (p) {\n          return p.bc_estado == '1';\n        });\n        return;\n      }\n      //para ver los codigos regalados\n      if (me.codigoTipo == 4) {\n        var _primerFiltro2 = datos.filter(function (p) {\n          return p.estado == '1' || p.estado == '0' || p.estado == '' || p.estado == null;\n        });\n        me.tmparregloCodigos = _primerFiltro2.filter(function (p) {\n          return p.estado_liquidacion == '2' && p.liquidado_regalado == '0';\n        });\n        return;\n      }\n      //para ver los codigos liquidados\n      if (me.codigoTipo == 5) {\n        var _primerFiltro3 = datos.filter(function (p) {\n          return p.estado == '1' || p.estado == '0' || p.estado == '' || p.estado == null;\n        });\n        me.tmparregloCodigos = _primerFiltro3.filter(function (p) {\n          return p.estado_liquidacion == '0';\n        });\n        return;\n      }\n      //para ver los codigos regalados liquidados\n      if (me.codigoTipo == 6) {\n        me.tmparregloCodigos = datos.filter(function (p) {\n          return p.estado_liquidacion == '2' && p.liquidado_regalado == '1';\n        });\n        return;\n      }\n      //para ver los codigos por liquidarse\n      if (me.codigoTipo == 7) {\n        var _primerFiltro4 = datos.filter(function (p) {\n          return (p.estado == '1' || p.estado == '0' || p.estado == '' || p.estado == null) && p.estado_liquidacion == 1 && p.bc_estado == 2;\n        });\n        me.tmparregloCodigos = _primerFiltro4;\n        return;\n      }\n      //para ver los codigos devueltos\n      if (me.codigoTipo == 8) {\n        var _primerFiltro5 = datos.filter(function (p) {\n          return p.estado_liquidacion == '3';\n        });\n        me.tmparregloCodigos = _primerFiltro5;\n        return;\n      }\n      //para ver los codigos venta directa\n      if (me.codigoTipo == 9) {\n        var _primerFiltro6 = datos.filter(function (p) {\n          return (p.estado == '1' || p.estado == '0' || p.estado == '' || p.estado == null) && p.venta_estado == 1;\n        });\n        me.tmparregloCodigos = _primerFiltro6;\n        return;\n      }\n      //para ver los codigos venta lista\n      if (me.codigoTipo == 10) {\n        var _primerFiltro7 = datos.filter(function (p) {\n          return (p.estado == '1' || p.estado == '0' || p.estado == '' || p.estado == null) && p.venta_estado == 2;\n        });\n        me.tmparregloCodigos = _primerFiltro7;\n        return;\n      }\n      //para ver todos los codigos\n      else {\n        me.tmparregloCodigos = datos;\n      }\n    },\n    loadDataInTable: function loadDataInTable(_ref) {\n      var results = _ref.results,\n        header = _ref.header,\n        meta = _ref.meta;\n      this.codigosPerdidos = false;\n      this.header = header;\n      //   const arrayOfObj = [{\n      //     key1: 'value1',\n      //     key2: 'value2'\n      //   }, {\n      //     key1: 'value1',\n      //     key2: 'value2'\n      //   }];\n      //   const newArrayOfObj = arrayOfObj.map(({ key1: stroke, ...remainingProps }) => ({\n      //   stroke,\n      //   ...remainingProps\n      // }));\n      var newArrayOfObj = results.map(function (obj) {\n        // Obtenemos todas las claves del objeto\n        var keys = Object.keys(obj);\n        // Seleccionamos la primera clave dinámicamente\n        var firstKey = keys[0];\n        // Eliminamos la primera propiedad del objeto y obtener los valores restantes\n        var deletedKey = obj[firstKey],\n          rest = _objectWithoutProperties(obj, [firstKey].map(_toPropertyKey));\n        // Retornamos un nuevo objeto con la primera propiedad reemplazada por \"codigo\" y las restantes\n        return _objectSpread({\n          codigo: deletedKey\n        }, rest);\n      });\n      this.tableData = newArrayOfObj;\n      this.sheetName = meta.sheetName;\n      this.popupConfirmTipoImportado = true;\n      this.arregloFormatoSend = [];\n      this.arregloProblemasPaquete = [];\n      this.arregloResumen = [];\n      this.arregloErroresPaquetes = [];\n    },\n    getUserRoot: function getUserRoot(dato) {\n      var me = this;\n      this.$http.get(this.$server_url + 'permisos/' + dato.idusuario).then(function (res) {\n        if (res.data.length > 0) {\n          me.userRoot = true;\n        }\n      }).catch(function (err) {\n        console.log(err);\n      });\n    },\n    procesarPagos: function procesarPagos() {\n      var _this = this;\n      var me = this;\n      me.duplicados = 0;\n      me.contadorCodigos = 0;\n      me.mostrarDuplicados = [];\n      if (me.conDevolucion == null || me.conDevolucion == \"\" || me.conDevolucion == undefined) {\n        me.$vs.notify({\n          text: 'Seleccione si la revisión es con devolución o no',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        return;\n      }\n      //si escogio tipo de importacion Diagnostico\n      if (me.tipoBodega == 1 || me.tipoBodega == 2) {\n        if (me.arregloProblemasDiagnostico.length > 0) {\n          me.$vs.notify({\n            text: 'Existe codigos de activación con problemas corriga por favor',\n            color: 'warning',\n            iconPack: 'feather',\n            icon: 'icon-check'\n          });\n          return false;\n        }\n      }\n      //si escogio tipo de paquete\n      if (me.tipoBodega == 3) {\n        if (me.arregloProblemasPaquete.length > 0) {\n          me.$vs.notify({\n            text: 'Existe codigos del paquete con problemas corriga por favor',\n            color: 'warning',\n            iconPack: 'feather',\n            icon: 'icon-check'\n          });\n          return false;\n        }\n        if (me.arregloFormatoSend.length > 200) {\n          me.$vs.notify({\n            text: 'No puedes subir mas de 200 paquetes',\n            color: 'warning',\n            iconPack: 'feather',\n            icon: 'icon-check'\n          });\n          return false;\n        }\n        if (me.arregloFormatoSend.length == 0) {\n          me.$vs.notify({\n            text: 'Hubo problemas para subir los paquetes',\n            color: 'warning',\n            iconPack: 'feather',\n            icon: 'icon-check'\n          });\n          return false;\n        }\n      }\n      var json_pagos = \"\";\n      if (me.tipoBodega == 3) {\n        json_pagos = JSON.stringify(me.arregloFormatoSend);\n      } else {\n        json_pagos = JSON.stringify(me.tableData.filter(function (p) {\n          return !p.codigo.startsWith(\"PAQ-\") && !p.codigo.startsWith(\"paq-\");\n        }));\n      }\n      var formData = new FormData();\n      formData.append('data_codigos', json_pagos);\n      formData.append('conDevolucion', me.conDevolucion);\n      //tipo paquete\n      var url = \"\";\n      if (me.tipoBodega == '3') {\n        url = this.$server_url + 'paquetes/revision';\n      } else {\n        url = this.$server_url + 'codigos/revision';\n      }\n      me.$vs.loading();\n      this.$http.post(url, formData).then(function (res) {\n        me.$vs.loading.close();\n        me.$vs.notify({\n          text: 'Códigos procesados exitosamente',\n          color: 'success',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        me.modalConfirm = false;\n        me.tableData = [];\n        me.codigosPerdidos = true;\n        me.informacion = res.data.informacion;\n        me.tmparregloCodigos = res.data.informacion;\n        //paquetes\n        if (_this.tipoBodega == 3) {\n          me.arregloResumen = res.data.arregloResumen;\n          me.arregloErroresPaquetes = res.data.arregloErroresPaquetes;\n        } else {\n          var original = res.data.informacion;\n          //quitar arrays duplicados\n          me.contadorCodigos = res.data.informacion.length;\n          var datos = res.data.informacion;\n          var hash = {};\n          datos = datos.filter(function (o) {\n            return hash[o.codigo] ? false : hash[o.codigo] = true;\n          });\n          //verificar duplicados\n          var conteoTotal = me.informacion.length;\n          if (me.contadorCodigos != conteoTotal) {\n            me.duplicados = 1;\n            //mostrar duplicados\n            var valores = original.map(function (persona) {\n              return persona.codigo;\n            });\n            me.mostrarDuplicados = valores.filter(function (edad, index) {\n              return valores.indexOf(edad) !== index;\n            });\n            me.popupMostrarDuplicados = true;\n          }\n          //fin mostrar duplicados\n          me.codigosNoExisten = res.data.codigosNoExisten;\n        }\n      }).catch(function (error) {\n        me.$vs.notify({\n          text: 'Verifique que la información se haya guardado correctamente.',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-alert-triangle'\n        });\n        me.$vs.loading.close();\n        // setTimeout(function() {location.reload()}, 1000);\n      });\n    },\n    openConfirm: function openConfirm(tipo) {\n      var me = this;\n      //volver a revisar que este bien el formato del excel\n      me.ejecutarValidacion();\n      me.tipo_selected = tipo;\n      if (!me.tableData[0].codigo) {\n        me.$vs.loading.close();\n        me.$vs.notify({\n          text: 'Corrija el formato del excel y vuelva a intentar.',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-alert-triangle'\n        });\n        return;\n      }\n      if (me.arregloProblemasDiagnostico.length > 0) {\n        me.$vs.notify({\n          text: 'Corrija el formato del excel y vuelva a intentar.',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-alert-triangle'\n        });\n        return;\n      }\n      if (me.arregloProblemasPaquete.length > 0) {\n        me.$vs.notify({\n          text: 'Corrija el formato del excel y vuelva a intentar.',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-alert-triangle'\n        });\n        return;\n      }\n      me.errores = [];\n      $.each(me.tableData, function (key, value) {\n        if (!value.codigo) {\n          me.errores.push(value);\n        }\n      });\n      if (me.errores.length > 0) {\n        me.modalErrores = true;\n      } else {\n        me.modalConfirm = true;\n      }\n    }\n  }\n};",{"version":3,"names":["gestionCodigosLista","ImportExcel","vSelect","TableProblemasDiagnosticoVue","TablaErroresPaqueteVue","TableResumenPaqueteVue","components","data","codigosPerdidos","tableData","header","sheetName","usuario","modalConfirm","modalErrores","errores","tipo_selected","cedulas_no_encontradas","modalCedulas","informacion","tmparregloCodigos","codigosNoExisten","cantidadNoExisten","duplicados","contadorCodigos","mostrarDuplicados","popupMostrarDuplicados","conDevolucion","userRoot","codigoTipo","tipoBodega","popupProblemasDiagnostico","popupConfirmTipoImportado","arregloProblemasDiagnostico","titleImportacion","arregloFormatoSend","arregloProblemasPaquete","arregloResumen","arregloErroresPaquetes","created","JSON","parse","localStorage","getItem","mounted","me","getUserRoot","computed","sumaTotal","total","length","SumaCodigosDevolucion","datos","filter","p","estado_liquidacion","resultado","sumaCodigosRegalados","primerFiltro","estado","liquidado_regalado","sumaCodigosRegaladosLiquidados","sumaCodigosBloqueados","sumarCodigosActivos","sumarCodigosLiquidados","sumarCodigosporLiquidarse","bc_estado","sumarCodigosLeidos","sumarCodigosNoleidos","sumarCodigosVentaDirecta","venta_estado","sumarCodigosVentaLista","methods","ejecutarValidacion","validateCodigos","validateCodigosPaquete","codigo","startsWith","preValores","forEach","element","obj","Object","push","getLongitud","longitud","i","nuevoArray","codigoActivacion","codigoDiagnostico","splice","setear","flat","console","log","cal","problema","activacionMinuscula","toLowerCase","diagnosticoMinuscula","err","alert","stringify","$vs","notify","text","color","iconPack","icon","ifErrsPaquete","codigoPaquete","paqueteMinuscula","codigosHijos","filtroTipo","loadDataInTable","_ref","results","meta","newArrayOfObj","map","keys","firstKey","deletedKey","rest","_objectWithoutProperties","_toPropertyKey","_objectSpread","dato","$http","get","$server_url","idusuario","then","res","catch","procesarPagos","_this","undefined","json_pagos","formData","FormData","append","url","loading","post","close","original","hash","o","conteoTotal","valores","persona","edad","index","indexOf","error","openConfirm","tipo","$","each","key","value"],"sources":["src/views/codigos/components/RevisionCodigos.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <vs-popup title=\"Errores en excel de los codigos\" :active.sync=\"modalErrores\" style=\"padding: 0% !important;\">\r\n       <div class=\"w-full\" style=\"background: rgb(121,9,9); padding: 20px; border-radius: 5px; background: linear-gradient(90deg, rgba(121,9,9,1) 28%, rgba(255,0,48,1) 100%); color: white;\">\r\n         <div class=\"vx-row\">\r\n            <div class=\"vx-col sm:w-1/2 w-full\">\r\n                <b>Código</b>\r\n            </div>\r\n            <div class=\"vx-col sm:w-1/2 w-full\">\r\n                <b>Institución</b>\r\n            </div>\r\n        </div>\r\n        <vs-divider></vs-divider>\r\n        <div :key=\"index\" v-for=\"(item, index) in errores\">\r\n          <div class=\"vx-row\">\r\n              <div class=\"vx-col sm:w-1/2 w-full\">\r\n                  <span v-if=\"item.codigo\"> {{item.codigo}} </span>\r\n              </div>\r\n          </div>\r\n        </div>\r\n       </div>\r\n    </vs-popup>\r\n    <vs-popup title=\"Códigos no encontrados\" :active.sync=\"modalCedulas\" @accept=\"recargar()\" @close=\"recargar()\" @cancel=\"recargar()\"  style=\"padding: 0% !important;\">\r\n       <div class=\"w-full\" style=\"background: rgb(235,147,25); background: linear-gradient(90deg, rgba(235,147,25,1) 28%, rgba(255,166,0,1) 100%); color: white; border-radius: 5px; padding: 10px;\">\r\n        <div class=\"vx-row\">\r\n          <div class=\"vx-col w-full\" align=\"center\">\r\n           <b>Codigos a las que no se aplicaron correctamente</b>\r\n          </div>\r\n        </div>\r\n        <vs-divider></vs-divider>\r\n        <div :key=\"index\" v-for=\"(item, index) in cedulas_no_encontradas\">\r\n          <div class=\"vx-row\">\r\n              <div class=\"vx-col w-full\" align=\"center\"> <span> {{item}} </span> </div>\r\n          </div>\r\n        </div>\r\n       </div>\r\n    </vs-popup>\r\n    <vs-popup small title=\"Confirmación\" :active.sync=\"modalConfirm\">\r\n      <div class=\"w-full mb-base\" align=\"center\">\r\n        <h4>Está seguro de aplicar estas códigos?</h4>\r\n      </div>\r\n      <div class=\"w-full\" align=\"center\">\r\n        <vs-button class=\"mb-2\" color=\"danger\" type=\"gradient\" @click=\"procesarPagos()\"> Confirmar </vs-button>\r\n      </div>\r\n    </vs-popup>\r\n    <div class=\"mb-6\" align=\"center\">\r\n      <div class=\"vx-col w-full\">\r\n        <p style=\"color:#60E029;\">\r\n          <i class=\"fa fa-file\" aria-hidden=\"true\"></i>  Revisión de codigos  <span style=\"font-weight: bold;\">(no ingrese más de 2000 registros en una sola carga.)</span>\r\n        </p>\r\n        <div v-if=\"userRoot\">\r\n          <ul class=\"flex justify-center mt-2\">\r\n            <li>\r\n              <b>Seleccione:</b>\r\n            </li>\r\n            <li>\r\n              <vs-radio v-model=\"conDevolucion\" class=\"ml-2\" vs-name=\"radios1conDevolucion\" vs-value=\"1\">Con devolución</vs-radio>\r\n            </li>\r\n            <li>\r\n              <vs-radio v-model=\"conDevolucion\" class=\"ml-2\" vs-name=\"radios1conDevolucion\" vs-value=\"0\">Sin devolución</vs-radio>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div class=\"flex\">\r\n        <div v-if=\"(tipoBodega == '1' || tipoBodega == '2')&& arregloProblemasDiagnostico.length > 0\" class=\"ml-5\" style=\"width:50%;\">\r\n          <vs-alert title=\"Archivo con inconvenientes\" color=\"danger\" active=\"true\">\r\n            <p>Existe codigos de <b>diágnostico</b> con problemas <b class=\"cursor-pointer\" style=\"background:black;color:white;padding:5px;border-radius:5px;\" @click=\"popupProblemasDiagnostico = true;\"><ion-icon name=\"code-outline\"></ion-icon> Mostrar códigos</b>\r\n            </p>\r\n          </vs-alert>\r\n        </div>\r\n      </div>\r\n      <!--RESUMEN PAQUETES-->\r\n      <div v-if=\"codigosPerdidos == true && (tipoBodega == '3')\">\r\n        <vs-card v-if=\"arregloErroresPaquetes.length > 0\">\r\n          <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"6\">\r\n            <vs-list>\r\n              <p>Cantidad <span>{{ arregloErroresPaquetes.length }}</span></p>\r\n                <vs-list-header icon=\"supervisor_account\" title=\"Hubo problemas con algunos paquetes\"></vs-list-header>\r\n                <vs-list-item :key=\"indextr\" v-for=\"(tr, indextr) in arregloErroresPaquetes\" icon=\"check\" :title=\"tr.paquete\" >\r\n                  <p> {{ tr.problema }}</p>\r\n                </vs-list-item>\r\n            </vs-list>\r\n          </vs-col>\r\n        </vs-card>\r\n        <TableResumenPaqueteVue class='mt-2' :arregloResumen=\"arregloResumen\" :arregloFormatoSend=\"arregloFormatoSend\" :desdeRevision=\"1\"/>\r\n      </div>\r\n      <br/>\r\n      <import-excel :onSuccess=\"loadDataInTable\"  class=\"mb-4\" />\r\n      <div>\r\n        <vs-row>\r\n          <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\" vs-sm = \"12\" vs-xs=\"12\" >\r\n            <vs-card>\r\n              <div class=\"header\">\r\n                <p style=\"font-weight: bold;\">Formato del archivo excel</p>\r\n                <table class=\"tabla\">\r\n                    <tr>\r\n                      <th class=\"th1\">codigo</th>\r\n                    </tr>\r\n                    <tr>\r\n                      <td class=\"td1\">xxx</td>\r\n                    </tr>\r\n                </table>\r\n              </div>\r\n            </vs-card>\r\n          </vs-col>\r\n        </vs-row>\r\n      </div>\r\n      <!-- {{tableData}} -->\r\n      <vs-alert v-if=\"tableData.length > 0\" class=\"mb-3\" color=\"success\" icon-pack=\"feather\" icon=\"icon-alert-triangle\">\r\n          <span>Excel cargado exitosamente. ¿Está seguro de procesar estos códigos?</span><br>\r\n      </vs-alert>\r\n      <vs-row v-if=\"tableData.length > 0 && tableData.length <= 2500 \">\r\n          <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\">\r\n              <vs-button class=\"mb-2\" color=\"primary\"  type=\"relief\" @click=\"openConfirm(0)\"> Revisar códigos </vs-button>\r\n          </vs-col>\r\n      </vs-row>\r\n      <vs-row v-if=\"codigosPerdidos == true\">\r\n        <vs-card>\r\n            <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"4\">\r\n                <vs-list>\r\n                    <vs-list-header icon=\"supervisor_account\" :title=\"'Códigos que no existen | Cantidad: '+codigosNoExisten.length\"></vs-list-header>\r\n                    <vs-list-item :key=\"indextr\" v-for=\"(tr, indextr) in codigosNoExisten\"  :title=\"tr.codigo\" >\r\n                    </vs-list-item>\r\n                </vs-list>\r\n            </vs-col>\r\n        </vs-card>\r\n      </vs-row>\r\n      <vs-row v-if=\"codigosPerdidos == true\">\r\n        <vs-card>\r\n          <div v-if=\"duplicados == 1\">\r\n            <p class=\"text-3xl text-danger font-bold\">EXISTE CODIGOS DUPLICADOS VERIFIQUE SU ARCHIVO</p>\r\n            <p style=\"text-align: left;font-size: 18px;font-weight: bold;\">Total Códigos: {{ contadorCodigos }}</p>\r\n            <p style=\"text-align: left;font-size: 18px;font-weight: bold;\">Códigos válidos: {{ informacion.length }}</p>\r\n            <vs-button color=\"danger\" type=\"gradient\" icon-pack=\"feather\" icon=\"icon-x-circle\" @click=\"popupMostrarDuplicados = true;\" style=\"font-size: 18px;\">Mostrar codigos duplicados</vs-button>\r\n          </div>\r\n          <!--FILTROS-->\r\n          <vs-card>\r\n            <div class=\"title\">\r\n              Filtro de codigos\r\n            </div>\r\n            <div class=\"mt-5\">\r\n              <ul style=\"display:flex;flex-wrap: wrap;\">\r\n                <li>\r\n                <vs-radio v-model=\"codigoTipo\" vs-name=\"radios1codigoTipo\" @input=\"filtroTipo();\" vs-value=\"0\"><span class=\"font-bold\">{{sumaTotal}}</span> Todos</vs-radio>\r\n                </li>\r\n                <li class=\"ml-2\">\r\n                <vs-radio v-model=\"codigoTipo\" vs-name=\"radios1codigoTipo\"  @input=\"filtroTipo();\" vs-value=\"2\"><span style=\"font-weight:bold;\">{{sumaCodigosBloqueados}}</span> Códigos bloqueados</vs-radio>\r\n                </li>\r\n                <li class=\"ml-2\">\r\n                <vs-radio v-model=\"codigoTipo\" vs-name=\"radios1codigoTipo\"  @input=\"filtroTipo();\" vs-value=\"4\"><span style=\"font-weight:bold;\">{{sumaCodigosRegalados}}</span> Regalados sin liquidar</vs-radio>\r\n                </li>\r\n                <li class=\"ml-2\">\r\n                  <vs-radio v-model=\"codigoTipo\" vs-name=\"radios1codigoTipo\" @input=\"filtroTipo();\" vs-value=\"3\"><span style=\"font-weight:bold;\">{{sumarCodigosNoleidos}}</span> Códigos sin leer </vs-radio>\r\n                </li>\r\n                <li class=\"ml-2\">\r\n                <vs-radio v-model=\"codigoTipo\" vs-name=\"radios1codigoTipo\"  @input=\"filtroTipo();\" vs-value=\"5\"><span style=\"font-weight:bold;\">{{sumarCodigosLiquidados}}</span><span :style=\"sumarCodigosLiquidados > 0 ? 'color:red':''\"> Códigos Liquidados </span> </vs-radio>\r\n                </li>\r\n                <li class=\"ml-2\">\r\n                  <vs-radio v-model=\"codigoTipo\" vs-name=\"radios1codigoTipo\"  @input=\"filtroTipo();\" vs-value=\"6\"><span style=\"font-weight:bold;\">{{sumaCodigosRegaladosLiquidados}}</span><span :style=\"sumaCodigosRegaladosLiquidados > 0 ? 'color:red':''\"> Regalados Liquidados </span> </vs-radio>\r\n                </li>\r\n                <li class=\"ml-2\">\r\n                  <vs-radio v-model=\"codigoTipo\" vs-name=\"radios1codigoTipo\"  @input=\"filtroTipo();\" vs-value=\"8\"><span style=\"font-weight:bold;\">{{SumaCodigosDevolucion}}</span> Códigos devueltos</vs-radio>\r\n                </li>\r\n                <li class=\"ml-2\">\r\n                <vs-radio v-model=\"codigoTipo\" vs-name=\"radios1codigoTipo\"  @input=\"filtroTipo();\" vs-value=\"7\"><span style=\"font-weight:bold;\">{{sumarCodigosporLiquidarse}}</span><span :style=\"sumarCodigosporLiquidarse > 0 ? 'color:red':''\"> Códigos a liquidarse (leidos) </span> </vs-radio>\r\n                </li>\r\n                <li class=\"ml-2\">\r\n                  <vs-radio v-model=\"codigoTipo\" vs-name=\"radios1codigoTipo\"  @input=\"filtroTipo();\" vs-value=\"9\"><span style=\"font-weight:bold;\">{{sumarCodigosVentaDirecta}}</span> Venta directa</vs-radio>\r\n                </li>\r\n                <li class=\"ml-2\">\r\n                  <vs-radio v-model=\"codigoTipo\" vs-name=\"radios1codigoTipo\"  @input=\"filtroTipo();\" vs-value=\"10\"><span style=\"font-weight:bold;\">{{sumarCodigosVentaLista}}</span> Venta lista</vs-radio>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </vs-card>\r\n          <gestionCodigosLista :arregloCodigos=\"tmparregloCodigos\" openModal=\"1\"/>\r\n        </vs-card>\r\n      </vs-row>\r\n    </div>\r\n    <vx-card v-if=\"tableData.length && header.length\">\r\n      <vs-table stripe pagination :max-items=\"20\" search :data=\"tableData\">\r\n        <template slot=\"header\">\r\n          <h4>Códigos a subir {{ tableData.length }}</h4>\r\n        </template>\r\n        <template slot=\"thead\">\r\n          <vs-th :sort-key=\"heading\" v-for=\"heading in header\" :key=\"heading\">{{ heading }}</vs-th>\r\n        </template>\r\n        <template slot-scope=\"{data}\">\r\n          <vs-tr :data=\"tr\" :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n            <vs-td :data=\"col\" v-for=\"(col, indexcol) in data[indextr]\" :key=\"indexcol + col\">\r\n              {{ col }}\r\n            </vs-td>\r\n          </vs-tr>\r\n        </template>\r\n      </vs-table>\r\n    </vx-card>\r\n    <vs-popup classContent=\"popup-example\" title=\"Mostrar codigos duplicados\" :active.sync=\"popupMostrarDuplicados\">\r\n      <vs-table max-items=\"10\" search pagination :data=\"mostrarDuplicados\">\r\n        <template slot=\"header\">\r\n            <vs-chip  color=\"primary\">Cantidad: <b> {{ mostrarDuplicados.length }}</b></vs-chip>\r\n        </template>\r\n        <template slot=\"thead\">\r\n            <vs-th>Codigo</vs-th>\r\n        </template>\r\n        <template slot-scope=\"{data}\">\r\n          <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n            <vs-td>\r\n                {{data[indextr]}}<br>\r\n            </vs-td>\r\n          </vs-tr>\r\n        </template>\r\n      </vs-table>\r\n    </vs-popup>\r\n    <!--MODAL CONFIRMAR TIPO DE IMPORTADO-->\r\n    <vs-popup small title=\"Tipo de Importación\" :active.sync=\"popupConfirmTipoImportado\">\r\n      <p class=\"text-2xl text-warning font-bold text-center\">Que tipo de importación va a realizar?</p>\r\n      <p class=\"text-danger mt-2 text-center\">!Los paquetes máximo 200 paquetes</p>\r\n      <vs-divider></vs-divider>\r\n      <div class=\"flex justify-center mt-2\" style=\"flex-wrap: wrap;\">\r\n        <vs-button class=\"mr-3\" color=\"primary\"   @click=\"tipoBodega= 0;popupConfirmTipoImportado=false;titleImportacion = 'Importacion Normal (Activación)';\">Activación</vs-button>\r\n        <vs-button class=\"mr-3\" color=\"success\"   @click=\"tipoBodega= 0;popupConfirmTipoImportado=false;titleImportacion = 'Importacion Normal (Diágnostica)';\">Diágnostica</vs-button>\r\n      </div>\r\n      <div class=\"flex justify-center mt-5\">\r\n        <vs-button class=\"mr-3\" color=\"warning\"   @click=\"tipoBodega= 1;popupConfirmTipoImportado=false;titleImportacion = 'Importacion Activación - Diágnostico';ejecutarValidacion();\" type=\"border\"> Activación -Diágnostica</vs-button>\r\n        <vs-button class=\"mr-3\" color=\"dark\"      @click=\"tipoBodega= 2;popupConfirmTipoImportado=false;titleImportacion = 'Importacion Diágnostico - Activación)';ejecutarValidacion();\" type=\"border\"> Diágnostica -Activación</vs-button>\r\n      </div>\r\n      <div class=\"flex justify-center\">\r\n        <vs-button class=\"m-3\" color=\"#29BCC6\"  @click=\"tipoBodega= 3;popupConfirmTipoImportado=false;titleImportacion = 'Importacion Paquetes';ejecutarValidacion();\" type=\"border\" icon-pack=\"feather\" icon=\"icon-package\"> Paquetes</vs-button>\r\n      </div>\r\n    </vs-popup>\r\n    <!--MODAL PROBLEMAS DIAGNOSTICO O PAQUETES-->\r\n    <vs-popup fullscreen small title=\"Problemas con los códigos de su archivo\" :active.sync=\"popupProblemasDiagnostico\">\r\n      <div v-if=\"tipoBodega == 1 || tipoBodega == 2\">\r\n        <TableProblemasDiagnosticoVue v-if=\"popupProblemasDiagnostico\" :items=\"10\" :arregloProblemasDiagnostico=\"arregloProblemasDiagnostico\"/>\r\n      </div>\r\n      <div v-if=\"tipoBodega == 3\">\r\n        <TablaErroresPaqueteVue v-if=\"popupProblemasDiagnostico\" :items=\"10\" :arregloProblemasPaquete=\"arregloProblemasPaquete\"/>\r\n      </div>\r\n    </vs-popup>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport gestionCodigosLista from './utils/gestionCodigosLista.vue'\r\nimport ImportExcel from './importExcel.vue'\r\nimport vSelect from 'vue-select'\r\nimport TableProblemasDiagnosticoVue from './utils/TableProblemasDiagnostico.vue'\r\nconst TablaErroresPaqueteVue = () => import('@/views/codigos/paquetes/components/TablaErroresPaquete')\r\nconst TableResumenPaqueteVue = () => import('@/views/codigos/components/utils/components/GestionLiquidacion/TableResumenPaquete')\r\nexport default {\r\n  components: {\r\n    ImportExcel,\r\n    vSelect,\r\n    gestionCodigosLista,\r\n    TableProblemasDiagnosticoVue,\r\n    TablaErroresPaqueteVue,\r\n    TableResumenPaqueteVue,\r\n  },\r\n  data () {\r\n    return {\r\n      codigosPerdidos:false,\r\n      tableData: [],\r\n      header: [],\r\n      sheetName: '',\r\n      usuario: [],\r\n      modalConfirm: false,\r\n      modalErrores: false,\r\n      errores: [],\r\n      tipo_selected: '',\r\n      cedulas_no_encontradas: [],\r\n      modalCedulas: false,\r\n      informacion:[],\r\n      tmparregloCodigos:[],\r\n      codigosNoExisten:[],\r\n      cantidadNoExisten:0,\r\n      duplicados:0,\r\n      contadorCodigos:0,\r\n      mostrarDuplicados:[],\r\n      popupMostrarDuplicados:false,\r\n      conDevolucion:'0',\r\n      userRoot:false,\r\n      //variables para filtros\r\n      codigoTipo:'0',\r\n      //fin variables para filtros\r\n      //VARIABLES PARA TIPO DE ACTIVACION O DIAGNOSTICO\r\n      tipoBodega:0,\r\n      popupProblemasDiagnostico:false,\r\n      popupConfirmTipoImportado:false,\r\n      arregloProblemasDiagnostico:[],\r\n      titleImportacion:'',\r\n      //variables para paquetes\r\n      arregloFormatoSend:[],\r\n      arregloProblemasPaquete:[],\r\n      arregloResumen:[],\r\n      arregloErroresPaquetes:[],\r\n      //fin variables para paquetes\r\n    }\r\n  },\r\n  created(){\r\n    this.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n    this.codigosPerdidos = false\r\n  },\r\n  mounted(){\r\n    let me = this;\r\n    me.getUserRoot(me.usuario);\r\n  },\r\n  computed:{\r\n    sumaTotal(){\r\n      let me = this;\r\n      let total = me.informacion.length\r\n      return total\r\n    },\r\n    SumaCodigosDevolucion(){\r\n      let me = this;\r\n      let datos       = me.informacion.filter(p => p.estado_liquidacion == '3');\r\n      let resultado   = datos.length\r\n      return resultado\r\n    },\r\n    sumaCodigosRegalados(){\r\n      let me = this;\r\n      let primerFiltro = me.informacion.filter(p => p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null);\r\n      let datos        = primerFiltro.filter(p => p.estado_liquidacion =='2' && p.liquidado_regalado == '0')\r\n      let resultado    = datos.length\r\n      return resultado\r\n    },\r\n    sumaCodigosRegaladosLiquidados(){\r\n      let me = this;\r\n      let datos        = me.informacion.filter(p => p.estado_liquidacion =='2' && p.liquidado_regalado == '1')\r\n      let resultado    = datos.length\r\n      return resultado\r\n    },\r\n    sumaCodigosBloqueados(){\r\n      let me = this;\r\n      let primerFiltro = me.informacion.filter(p => p.estado_liquidacion != '3');\r\n      let datos         = primerFiltro.filter(p => p.estado == '2')\r\n      let resultado     = datos.length\r\n      return resultado\r\n    },\r\n    sumarCodigosActivos(){\r\n      let me = this;\r\n      let primerFiltro = me.informacion.filter(p => p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null);\r\n      let datos        = primerFiltro.filter(p => p.estado_liquidacion =='0' ||  p.estado_liquidacion =='1')\r\n      let resultado    = datos.length\r\n      return resultado\r\n    },\r\n    sumarCodigosLiquidados(){\r\n      let me = this;\r\n      let primerFiltro = me.informacion.filter(p => p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null);\r\n      let datos        = primerFiltro.filter(p => p.estado_liquidacion =='0')\r\n      let resultado    = datos.length\r\n      return resultado\r\n    },\r\n    sumarCodigosporLiquidarse(){\r\n      let me = this;\r\n      let primerFiltro = me.informacion.filter(p => (p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null) && (p.estado_liquidacion == 1) && (p.bc_estado =='2'));\r\n      let datos        = primerFiltro\r\n      let resultado    = datos.length\r\n      return resultado\r\n    },\r\n    sumarCodigosLeidos(){\r\n      let me = this;\r\n      let primerFiltro = me.informacion.filter(p => (p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null) && (p.estado_liquidacion == 1));\r\n      let datos        = primerFiltro.filter(p => p.bc_estado =='2')\r\n      let resultado    = datos.length\r\n      return resultado\r\n    },\r\n    sumarCodigosNoleidos(){\r\n      let me = this;\r\n      let primerFiltro = me.informacion.filter(p => (p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null) && (p.estado_liquidacion == 1));\r\n      let datos        = primerFiltro.filter(p => p.bc_estado =='1')\r\n      let resultado    = datos.length\r\n      return resultado\r\n    },\r\n    sumarCodigosVentaDirecta(){\r\n      let me = this;\r\n      let primerFiltro = me.informacion.filter(p => (p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null) && (p.venta_estado == 1));\r\n      let resultado    = primerFiltro.length\r\n      return resultado\r\n    },\r\n    sumarCodigosVentaLista(){\r\n      let me = this;\r\n      let primerFiltro = me.informacion.filter(p => (p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null) && (p.venta_estado == 2));\r\n      let resultado    = primerFiltro.length\r\n      return resultado\r\n    }\r\n  },\r\n  methods: {\r\n    ejecutarValidacion(){\r\n      let me = this;\r\n      if(me.tipoBodega == 1 || me.tipoBodega == 2) { me.validateCodigos() }\r\n      if(me.tipoBodega == 3) { me.validateCodigosPaquete() }\r\n    },\r\n    validateCodigos(){\r\n      let me                            = this;\r\n      try{\r\n        let datos                       = []\r\n        me.arregloProblemasDiagnostico  = []\r\n        datos = me.tableData.filter(p => !p.codigo.startsWith(\"PAQ-\") && !p.codigo.startsWith(\"paq-\"))\r\n        var preValores                  = []\r\n        //quitar types NumRow\r\n        datos.forEach(element => {\r\n          var obj = new Object();\r\n          obj.codigo = element.codigo\r\n          preValores.push(obj)\r\n        });\r\n        var getLongitud = datos.length\r\n        var longitud    = getLongitud/2\r\n        for(var i = 0; i<longitud;i++){\r\n          // Creamos un nuevo array para almacenar los objetos quitados\r\n          const nuevoArray        = [];\r\n          let   codigoActivacion  = \"\";\r\n          let   codigoDiagnostico = \"\";\r\n          // Quitamos los dos primeros objetos del array original y los agregamos al nuevo array\r\n          nuevoArray.push(preValores.splice(0, 2));\r\n          var setear = nuevoArray.flat()\r\n          console.log(\"tipo\",me.tipoBodega)\r\n          //====VALIDACION SI SOLO HAY UN CODIGO====\r\n          if(setear.length == 1){\r\n            var cal = new Object\r\n            //ACTIVACION - DIAGNOSTICO)\r\n            if(me.tipoBodega == 1){\r\n              cal.codigoActivacion =  setear[0].codigo\r\n              cal.codigoDiagnostico  =  \"\"\r\n            }\r\n            //DIAGNOSTICO - ACTIVACION)\r\n            if(me.tipoBodega == 2){\r\n              cal.codigoDiagnostico =  setear[0].codigo\r\n              cal.codigoActivacion  =  \"\"\r\n            }\r\n            cal.problema          =  'formato'\r\n            me.arregloProblemasDiagnostico.push(cal)\r\n          }\r\n          //==SI TODO ESTA NORMAL===\r\n          else{\r\n            //ACTIVACION - DIAGNOSTICO)\r\n            if(me.tipoBodega == 1){\r\n              codigoActivacion      = setear[0].codigo;\r\n              codigoDiagnostico     = setear[1].codigo\r\n            }\r\n            //DIAGNOSTICO - ACTIVACION)\r\n            if(me.tipoBodega == 2){\r\n              codigoDiagnostico     = setear[0].codigo\r\n              codigoActivacion      = setear[1].codigo;\r\n            }\r\n            //============ACTIVACION==================================\r\n            //VALIDACION SI NO SON STRING\r\n            if (typeof codigoActivacion !== 'string' || typeof codigoDiagnostico !== 'string' ) {\r\n              var cal = new Object\r\n              cal.codigoActivacion  =  codigoActivacion\r\n              cal.codigoDiagnostico =  codigoDiagnostico\r\n              cal.problema          =  'formato'\r\n              me.arregloProblemasDiagnostico.push(cal)\r\n            }\r\n            else{\r\n              const activacionMinuscula = codigoActivacion.toLowerCase();\r\n              //validar que el codigo de activacion no tenga una P\r\n              if(activacionMinuscula.startsWith(\"p\")){\r\n                //validar meñique que el codigo de activacion se permita empezar por p DONDE SEA PLM no hago nada\r\n                if(activacionMinuscula.startsWith(\"plm\")){\r\n                }else{\r\n                  var cal = new Object\r\n                  cal.codigoActivacion  =  codigoActivacion\r\n                  cal.codigoDiagnostico =  codigoDiagnostico\r\n                  cal.problema          =  'activacion'\r\n                  me.arregloProblemasDiagnostico.push(cal)\r\n                }\r\n              }\r\n              //=============DIAGNOSTICO===================================\r\n              //validar que el codigo de activacion tenga una P\r\n              const diagnosticoMinuscula = codigoDiagnostico.toLowerCase();\r\n              //validar si es meñique debe tener 2 pp\r\n              if(activacionMinuscula.startsWith(\"plm\")){\r\n                //si no inicia por 2 pp\r\n                if(!diagnosticoMinuscula.startsWith(\"pp\")){\r\n                  var cal = new Object\r\n                  cal.codigoActivacion  =  codigoActivacion\r\n                  cal.codigoDiagnostico =  codigoDiagnostico\r\n                  cal.problema          =  'diagnostico'\r\n                  me.arregloProblemasDiagnostico.push(cal)\r\n                }\r\n              }\r\n              //diferente a meñique\r\n              else{\r\n                if(!diagnosticoMinuscula.startsWith(\"p\")){\r\n                  var cal = new Object\r\n                  cal.codigoActivacion  =  codigoActivacion\r\n                  cal.codigoDiagnostico =  codigoDiagnostico\r\n                  cal.problema          =  'diagnostico'\r\n                  me.arregloProblemasDiagnostico.push(cal)\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }//Fin FOR\r\n        //si hay errores en el archivo mostramos un modal\r\n        if(me.arregloProblemasDiagnostico.length > 0){\r\n          me.popupProblemasDiagnostico = true\r\n        }\r\n      }\r\n      catch (err) {\r\n        console.log(\"err\",err)\r\n        alert(\"Hubo problemas con tu archivo excel\")\r\n      }\r\n    },\r\n    //==================================METODOS PAQUETES===================\r\n    validateCodigosPaquete(){\r\n      let me                                = this;\r\n      try{\r\n        me.arregloFormatoSend               = []\r\n        const problema                      = \"Problema con el paquete\"\r\n        me.arregloProblemasPaquete          = []\r\n        let datos                           = JSON.parse(JSON.stringify(me.tableData));\r\n        //validar si son mas de 200 paquetes\r\n        if(datos.length > 200){\r\n          me.$vs.notify({\r\n          text:'No puedes subir mas de 200 paquetes',\r\n          color:'warning',\r\n          iconPack: 'feather',\r\n          icon:'icon-check'})\r\n          return false;\r\n        }\r\n        datos.forEach(element => {\r\n          let ifErrsPaquete                 = false\r\n          let codigoPaquete                 = element.codigo\r\n          //validar que el codigo sea string\r\n          if (typeof codigoPaquete !== 'string' )   { ifErrsPaquete        = true }\r\n          else{\r\n            const paqueteMinuscula = codigoPaquete.toLowerCase();\r\n            if(!paqueteMinuscula.startsWith(\"paq-\")) { ifErrsPaquete        = true }\r\n          }\r\n          //si existe un errores\r\n          if(ifErrsPaquete){\r\n            var cal               = new Object\r\n            cal.codigoPaquete     =  codigoPaquete\r\n            cal.problema          =  problema\r\n            cal.codigosHijos      =  []\r\n            me.arregloProblemasPaquete.push(cal)\r\n          }else{\r\n            me.arregloFormatoSend.push({codigoPaquete:codigoPaquete})\r\n          }\r\n        });\r\n        //si hay errores en el archivo mostramos un modal\r\n        if(me.arregloProblemasPaquete.length > 0){ me.popupProblemasDiagnostico = true }\r\n      }\r\n      catch (err) {\r\n        console.log(\"err\",err)\r\n        alert(\"Hubo problemas con tu archivo excel\")\r\n      }\r\n    },\r\n    //===================================FIN METODOS PAQUETES===============\r\n    filtroTipo(){\r\n      let me = this;\r\n      me.tmparregloCodigos = []\r\n      let datos = me.informacion\r\n      //para ver los codigos activos\r\n      // if(me.codigoTipo == 1){\r\n      //     let primerFiltro = datos.filter(p => p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null);\r\n      //     me.tmparregloCodigos = primerFiltro.filter(p => p.estado_liquidacion =='0' ||  p.estado_liquidacion =='1')\r\n      //     return\r\n      // }\r\n      //para ver los codigos bloqueados\r\n      if(me.codigoTipo == 2){\r\n          let primerFiltro = datos.filter(p => p.estado_liquidacion != '3');\r\n          me.tmparregloCodigos = primerFiltro.filter(p => p.estado =='2')\r\n          return\r\n      }\r\n      //para ver lso codigos sin ler\r\n      if(me.codigoTipo == 3){\r\n          let primerFiltro = datos.filter(p => (p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null) && (p.estado_liquidacion == 1));\r\n          me.tmparregloCodigos = primerFiltro.filter(p => p.bc_estado =='1')\r\n          return\r\n      }\r\n      //para ver los codigos regalados\r\n      if(me.codigoTipo == 4){\r\n          let primerFiltro = datos.filter(p => p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null);\r\n          me.tmparregloCodigos = primerFiltro.filter(p => p.estado_liquidacion =='2' && p.liquidado_regalado == '0')\r\n          return\r\n      }\r\n      //para ver los codigos liquidados\r\n      if(me.codigoTipo == 5){\r\n          let primerFiltro = datos.filter(p => p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null);\r\n          me.tmparregloCodigos = primerFiltro.filter(p => p.estado_liquidacion =='0')\r\n          return\r\n      }\r\n      //para ver los codigos regalados liquidados\r\n      if(me.codigoTipo == 6){\r\n          me.tmparregloCodigos = datos.filter(p => p.estado_liquidacion =='2' && p.liquidado_regalado == '1')\r\n          return\r\n      }\r\n      //para ver los codigos por liquidarse\r\n      if(me.codigoTipo == 7){\r\n          let primerFiltro = datos.filter(p => (p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null) && (p.estado_liquidacion == 1) && (p.bc_estado ==2));\r\n          me.tmparregloCodigos = primerFiltro\r\n          return\r\n      }\r\n      //para ver los codigos devueltos\r\n      if(me.codigoTipo == 8){\r\n        let primerFiltro = datos.filter(p => p.estado_liquidacion == '3');\r\n        me.tmparregloCodigos = primerFiltro\r\n        return\r\n      }\r\n      //para ver los codigos venta directa\r\n      if(me.codigoTipo == 9){\r\n        let primerFiltro = datos.filter(p => (p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null) && (p.venta_estado == 1));\r\n        me.tmparregloCodigos = primerFiltro\r\n        return\r\n      }\r\n      //para ver los codigos venta lista\r\n      if(me.codigoTipo == 10){\r\n        let primerFiltro = datos.filter(p => (p.estado == '1' ||  p.estado == '0' ||  p.estado == '' || p.estado == null) && (p.venta_estado == 2));\r\n        me.tmparregloCodigos = primerFiltro\r\n        return\r\n      }\r\n      //para ver todos los codigos\r\n      else{\r\n        me.tmparregloCodigos = datos\r\n      }\r\n    },\r\n    loadDataInTable ({ results, header, meta }) {\r\n      this.codigosPerdidos            = false\r\n      this.header                     = header\r\n    //   const arrayOfObj = [{\r\n    //     key1: 'value1',\r\n    //     key2: 'value2'\r\n    //   }, {\r\n    //     key1: 'value1',\r\n    //     key2: 'value2'\r\n    //   }];\r\n    //   const newArrayOfObj = arrayOfObj.map(({ key1: stroke, ...remainingProps }) => ({\r\n    //   stroke,\r\n    //   ...remainingProps\r\n    // }));\r\n     const newArrayOfObj = results.map(obj => {\r\n        // Obtenemos todas las claves del objeto\r\n        const keys = Object.keys(obj);\r\n        // Seleccionamos la primera clave dinámicamente\r\n        const firstKey = keys[0];\r\n        // Eliminamos la primera propiedad del objeto y obtener los valores restantes\r\n        const { [firstKey]: deletedKey, ...rest } = obj;\r\n        // Retornamos un nuevo objeto con la primera propiedad reemplazada por \"codigo\" y las restantes\r\n        return {\r\n          codigo: deletedKey,\r\n          ...rest\r\n        };\r\n      });\r\n      this.tableData                  = newArrayOfObj\r\n      this.sheetName                  = meta.sheetName\r\n      this.popupConfirmTipoImportado  = true;\r\n      this.arregloFormatoSend         = []\r\n      this.arregloProblemasPaquete    = []\r\n      this.arregloResumen             = []\r\n      this.arregloErroresPaquetes     = []\r\n    },\r\n    getUserRoot(dato) {\r\n      let me = this;\r\n      this.$http.get(this.$server_url + 'permisos/' + dato.idusuario)\r\n        .then((res) => {\r\n          if (res.data.length > 0) {\r\n            me.userRoot = true;\r\n          }\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        })\r\n      },\r\n    procesarPagos(){\r\n      let me = this\r\n      me.duplicados = 0\r\n      me.contadorCodigos = 0\r\n      me.mostrarDuplicados = []\r\n      if(me.conDevolucion == null || me.conDevolucion == \"\" || me.conDevolucion == undefined){\r\n        me.$vs.notify({\r\n        text:'Seleccione si la revisión es con devolución o no',\r\n        color:'warning',\r\n        iconPack: 'feather',\r\n        icon:'icon-check'})\r\n        return\r\n      }\r\n      //si escogio tipo de importacion Diagnostico\r\n      if(me.tipoBodega == 1 || me.tipoBodega == 2){\r\n        if(me.arregloProblemasDiagnostico.length > 0){\r\n          me.$vs.notify({\r\n          text:'Existe codigos de activación con problemas corriga por favor',\r\n          color:'warning',\r\n          iconPack: 'feather',\r\n          icon:'icon-check'})\r\n          return false\r\n        }\r\n      }\r\n      //si escogio tipo de paquete\r\n      if(me.tipoBodega == 3){\r\n        if(me.arregloProblemasPaquete.length > 0){\r\n          me.$vs.notify({\r\n          text:'Existe codigos del paquete con problemas corriga por favor',\r\n          color:'warning',\r\n          iconPack: 'feather',\r\n          icon:'icon-check'})\r\n          return false\r\n        }\r\n        if(me.arregloFormatoSend.length > 200){\r\n          me.$vs.notify({\r\n          text:'No puedes subir mas de 200 paquetes',\r\n          color:'warning',\r\n          iconPack: 'feather',\r\n          icon:'icon-check'})\r\n          return false;\r\n        }\r\n        if(me.arregloFormatoSend.length == 0){\r\n          me.$vs.notify({\r\n          text:'Hubo problemas para subir los paquetes',\r\n          color:'warning',\r\n          iconPack: 'feather',\r\n          icon:'icon-check'})\r\n          return false\r\n        }\r\n      }\r\n      var json_pagos = \"\"\r\n      if(me.tipoBodega == 3 ) {  json_pagos = JSON.stringify(me.arregloFormatoSend) }\r\n      else                    {  json_pagos = JSON.stringify(me.tableData.filter(p => !p.codigo.startsWith(\"PAQ-\") && !p.codigo.startsWith(\"paq-\")) ) }\r\n      let formData = new FormData();\r\n      formData.append('data_codigos',   json_pagos);\r\n      formData.append('conDevolucion',  me.conDevolucion);\r\n      //tipo paquete\r\n      var url = \"\"\r\n      if(me.tipoBodega == '3' ){\r\n        url = this.$server_url+'paquetes/revision'\r\n      }else{\r\n        url = this.$server_url+'codigos/revision'\r\n      }\r\n      me.$vs.loading()\r\n      this.$http.post(url, formData)\r\n      .then(res => {\r\n          me.$vs.loading.close()\r\n          me.$vs.notify({\r\n          text:'Códigos procesados exitosamente',\r\n          color:'success',\r\n          iconPack: 'feather',\r\n          icon:'icon-check'})\r\n          me.modalConfirm     = false\r\n          me.tableData        = []\r\n          me.codigosPerdidos  = true\r\n          me.informacion      = res.data.informacion\r\n          me.tmparregloCodigos = res.data.informacion\r\n          //paquetes\r\n          if( this.tipoBodega == 3 ){\r\n            me.arregloResumen                         = res.data.arregloResumen\r\n            me.arregloErroresPaquetes                 = res.data.arregloErroresPaquetes\r\n          }else{\r\n            let original = res.data.informacion\r\n            //quitar arrays duplicados\r\n            me.contadorCodigos = res.data.informacion.length\r\n            let datos = res.data.informacion\r\n            let hash = {};\r\n            datos = datos.filter(o => hash[o.codigo] ? false : hash[o.codigo] = true);\r\n            //verificar duplicados\r\n            let conteoTotal    =  me.informacion.length\r\n            if(me.contadorCodigos != conteoTotal){\r\n              me.duplicados = 1\r\n              //mostrar duplicados\r\n              const valores = original.map(persona => persona.codigo);\r\n              me.mostrarDuplicados = valores.filter((edad, index) => valores.indexOf(edad) !== index);\r\n              me.popupMostrarDuplicados = true;\r\n            }\r\n            //fin mostrar duplicados\r\n            me.codigosNoExisten = res.data.codigosNoExisten\r\n          }\r\n      })\r\n      .catch(function (error) {\r\n          me.$vs.notify({\r\n          text:'Verifique que la información se haya guardado correctamente.',\r\n          color:'warning',\r\n          iconPack: 'feather',\r\n          icon:'icon-alert-triangle'})\r\n          me.$vs.loading.close()\r\n          // setTimeout(function() {location.reload()}, 1000);\r\n      })\r\n    },\r\n    openConfirm(tipo) {\r\n      let me = this\r\n      //volver a revisar que este bien el formato del excel\r\n      me.ejecutarValidacion()\r\n      me.tipo_selected = tipo\r\n      if( !me.tableData[0].codigo){\r\n        me.$vs.loading.close()\r\n        me.$vs.notify({ text:'Corrija el formato del excel y vuelva a intentar.', color:'warning', iconPack: 'feather', icon:'icon-alert-triangle'})\r\n        return\r\n      }\r\n      if(me.arregloProblemasDiagnostico.length > 0){\r\n        me.$vs.notify({ text:'Corrija el formato del excel y vuelva a intentar.', color:'warning', iconPack: 'feather', icon:'icon-alert-triangle'})\r\n        return\r\n      }\r\n      if(me.arregloProblemasPaquete.length > 0){\r\n        me.$vs.notify({ text:'Corrija el formato del excel y vuelva a intentar.', color:'warning', iconPack: 'feather', icon:'icon-alert-triangle'})\r\n        return\r\n      }\r\n      me.errores = []\r\n      $.each(me.tableData,function(key, value){\r\n        if( !value.codigo ){\r\n          me.errores.push(value)\r\n        }\r\n      })\r\n      if( me.errores.length > 0 ){\r\n        me.modalErrores = true\r\n      }else{\r\n        me.modalConfirm = true\r\n      }\r\n    },\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.tabla{\r\n  width: 100%;\r\n  margin-top: 10px;\r\n}\r\n .tabla {\r\n\r\n  border: 1px solid #D1E5F1;\r\n  padding: 2px;\r\n  border-radius: 5px;\r\n}\r\n.th1{\r\n  background-color: #60E029;\r\n  border-radius: 5px;\r\n  color:white;\r\n}\r\n.td1, .th1{\r\n padding: 10px;\r\n text-align: center;\r\n border:none;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]}]}