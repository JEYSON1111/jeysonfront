{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\diagnostico\\admin\\components\\TableUsuario.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\diagnostico\\admin\\components\\TableUsuario.vue","mtime":1712682815728},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\babel.config.js","mtime":1712682813877},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\.babelrc","mtime":1712682813750},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport verCodigos from \"./verCodigos.vue\";\nexport default {\n  props: {\n    arregloEstudiantes: {\n      type: Array,\n      defaul: []\n    },\n    datosExportar: {\n      type: Array,\n      defaul: []\n    },\n    institucion_id: {\n      type: Number,\n      default: 0\n    },\n    periodo_id: {\n      type: Number,\n      default: 0\n    }\n  },\n  components: {\n    verCodigos: verCodigos\n  },\n  watch: {\n    arregloEstudiantes: function arregloEstudiantes(results) {\n      var me = this;\n      me.menu = 0;\n    }\n  },\n  data: function data() {\n    return {\n      //variables para el export a excel\n      activePrompt: false,\n      codigoSelected: [],\n      arregloCodigos: [],\n      reportesActivo: 0,\n      fileName: null,\n      formats: ['xls', 'xlsx', 'csv', 'txt'],\n      cellAutoWidth: true,\n      selectedFormat: 'xls',\n      //fin variables de excel\n      menu: 0,\n      informacionUser: {}\n    };\n  },\n  methods: {\n    getverCodigos: function getverCodigos(tr) {\n      var me = this;\n      me.informacionUser = tr;\n      if (tr.contador == 0) {\n        me.$vs.notify({\n          text: 'No existe códigos para mostrar',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-code'\n        });\n        return;\n      }\n      me.$vs.loading();\n      this.$http.get(this.$server_url + 'gestionEstudiante?getCodigosxEstudiante=yes&estudiante_id=' + tr.idusuario + '&institucion_id=' + me.institucion_id + '&periodo_id=' + me.periodo_id).then(function (res) {\n        me.arregloCodigos = res.data;\n        me.menu = 1;\n        me.$vs.loading.close();\n      }).catch(function (error) {\n        console.log(error + ' error');\n        me.$vs.loading.close();\n      });\n      me.menu = 1;\n    },\n    //METODOS PARA EXCEL\n    //para limipiar los campos del excel\n    clearFields: function clearFields() {\n      this.fileName = '';\n      this.cellAutoWidth = true;\n      this.selectedFormat = 'xls';\n    },\n    //metodo par descargar el excel\n    exportToExcel: function exportToExcel() {\n      var _this = this;\n      var headerTitle = ['Estudiante', 'Cédula', 'Institución', 'Email', 'Cod. Ingresados'];\n      var headerVal = ['estudiante', 'cedula', 'nombreInstitucion', 'email', 'contador'];\n      for (var index = 1; index < 11; index++) {\n        headerTitle.push(\"Codigo\" + index);\n        headerVal.push(\"codigo\" + index);\n      }\n      var codigoSelectedMayus = this.datosExportar;\n      for (var i = 0; i < codigoSelectedMayus.length; i++) {\n        for (var key in codigoSelectedMayus[i]) {\n          if (typeof codigoSelectedMayus[i][key] == \"string\") {\n            codigoSelectedMayus[i][key] = codigoSelectedMayus[i][key].toUpperCase();\n          }\n        }\n      }\n      import('@/vendor/Export2Excel').then(function (excel) {\n        var list = codigoSelectedMayus;\n        var data = _this.formatJson(headerVal, list);\n        excel.export_json_to_excel({\n          header: headerTitle,\n          data: data,\n          filename: 'ResultadoEstudiantes',\n          autoWidth: _this.cellAutoWidth,\n          bookType: _this.selectedFormat\n        });\n        _this.clearFields();\n        _this.guardarActivo = '';\n        _this.generarActivo = ' ';\n        _this.textAlertCant = '';\n        _this.cantidad = '';\n        _this.codigoSelected = [];\n      });\n    },\n    formatJson: function formatJson(filterVal, jsonData) {\n      return jsonData.map(function (v) {\n        return filterVal.map(function (j) {\n          return v[j];\n        });\n      });\n    }\n  }\n};",{"version":3,"names":["verCodigos","props","arregloEstudiantes","type","Array","defaul","datosExportar","institucion_id","Number","default","periodo_id","components","watch","results","me","menu","data","activePrompt","codigoSelected","arregloCodigos","reportesActivo","fileName","formats","cellAutoWidth","selectedFormat","informacionUser","methods","getverCodigos","tr","contador","$vs","notify","text","color","iconPack","icon","loading","$http","get","$server_url","idusuario","then","res","close","catch","error","console","log","clearFields","exportToExcel","_this","headerTitle","headerVal","index","push","codigoSelectedMayus","i","length","key","toUpperCase","excel","list","formatJson","export_json_to_excel","header","filename","autoWidth","bookType","guardarActivo","generarActivo","textAlertCant","cantidad","filterVal","jsonData","map","v","j"],"sources":["src/views/diagnostico/admin/components/TableUsuario.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <vs-table v-if=\"menu == 0\" max-items=\"5\"  pagination :data=\"arregloEstudiantes\" search>\r\n            <template slot=\"header\">\r\n                <div class=\"flex\">\r\n                    <vs-chip transparent class=\"py-3\" color=\"success\">Cantidad: {{ arregloEstudiantes.length }}</vs-chip>\r\n                    <span @click=\"exportToExcel()\" class=\"cursor-pointer\">\r\n                        <vs-chip transparent class=\"py-3 ml-2\" style=\"font-weight: bold;\" color=\"warning\"><i class=\"fa-solid fa-download\"></i><span class=\"ml-2\">Exportar</span> </vs-chip>\r\n                    </span>\r\n                </div>\r\n            </template>\r\n            <template slot=\"thead\">\r\n                <vs-th style=\"width:50%;\">Datos Personales</vs-th>\r\n                <vs-th style=\"width:20%;\">Institución</vs-th>       \r\n                <vs-th style=\"width:10%;\">Estado</vs-th>  \r\n                <vs-th style=\"width:10%;\">Cod. ingresados</vs-th>  \r\n                <vs-th style=\"width: 10%;\">Período asignado</vs-th>             \r\n            </template>\r\n            <template slot-scope=\"{data}\">\r\n                <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\" >                  \r\n                    <vs-td>\r\n                        <br/>\r\n                        Nombres:\r\n                        <br>        \r\n                        <span style=\"font-weight:600;  \" >\r\n                        {{ tr.estudiante }}<br>\r\n                        </span>\r\n                        Cédula:\r\n                        <br>  \r\n                        <span style=\" font-weight:600; \" >\r\n                        {{ tr.cedula }}<br>\r\n                        </span>\r\n                        Email:\r\n                        <br>  \r\n                        <span style=\" font-weight:600; \" >\r\n                        {{ tr.email }}<br>\r\n                        </span>\r\n                    </vs-td>\r\n                    <vs-td>\r\n                        {{ tr.nombreInstitucion }}\r\n                    </vs-td>\r\n                    <vs-td>\r\n                        <template>\r\n                            <div v-if=\"tr.estado_idEstado == 1\">\r\n                                <vs-chip color=\"primary\">\r\n                                    <p>Activo</p>\r\n                                </vs-chip>\r\n                            </div>\r\n                            <div v-else>\r\n                                <vs-chip color=\"danger\">\r\n                                    <p>Desactivado</p>\r\n                                </vs-chip>\r\n                            </div>\r\n                        </template>               \r\n                    </vs-td> \r\n                    <vs-td>\r\n                        <vx-tooltip  style=\"display: inline-block;\" text=\"Ver códigos\" position=\"top\" color=\"primary\">\r\n                            <p class=\"cursor-pointer botonp\" @click=\"getverCodigos(tr)\">\r\n                                <vs-chip transparent class=\"py-2 ml-2\" style=\"font-weight: bold;\" color=\"warning\">{{tr.contador}}</vs-chip>\r\n                            </p>\r\n                        </vx-tooltip>\r\n                    </vs-td> \r\n                    <vs-td>\r\n                        <div v-if=\"tr.periodo == '' || tr.periodo == null\">\r\n                            No asignado\r\n                        </div>\r\n                        <div v-else>\r\n                            {{ tr.periodo }}\r\n                        </div>\r\n                    </vs-td>           \r\n                </vs-tr>\r\n            </template>\r\n        </vs-table>\r\n        <div v-if=\"menu == 1\">\r\n            <vs-button radius color=\"success\" @click=\"menu = 0\" type=\"gradient\" icon=\"reply\"></vs-button>\r\n            <verCodigos class=\"mt-4\" :arregloCodigos = \"arregloCodigos\" :informacionUser=\"informacionUser\"/>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport verCodigos from './verCodigos.vue'\r\nexport default{\r\n    props:{\r\n        arregloEstudiantes:{\r\n            type:Array,\r\n            defaul:[]\r\n        },\r\n        datosExportar:{\r\n            type:Array,\r\n            defaul:[]\r\n        },\r\n        institucion_id:{\r\n            type:Number,\r\n            default:0,\r\n        },\r\n        periodo_id:{\r\n            type:Number,\r\n            default:0,\r\n        },\r\n    },\r\n    components:{\r\n        verCodigos\r\n    },  \r\n    watch:{\r\n        arregloEstudiantes(results){\r\n            let me = this;\r\n            me.menu = 0\r\n        }\r\n    },\r\n    data(){\r\n        return{\r\n            //variables para el export a excel\r\n            activePrompt:false,\r\n            codigoSelected: [],\r\n            arregloCodigos:[],\r\n            reportesActivo: 0,\r\n            fileName: null,\r\n            formats: ['xls', 'xlsx', 'csv', 'txt'],\r\n            cellAutoWidth: true,\r\n            selectedFormat: 'xls',\r\n            //fin variables de excel\r\n            menu:0,\r\n            informacionUser:{},\r\n        }\r\n    },\r\n    methods:{\r\n        getverCodigos(tr){\r\n            let me = this\r\n            me.informacionUser = tr\r\n            if(tr.contador == 0){\r\n                me.$vs.notify({\r\n                text:'No existe códigos para mostrar',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-code'})\r\n                return\r\n            }\r\n            me.$vs.loading()\r\n            this.$http.get(this.$server_url+'gestionEstudiante?getCodigosxEstudiante=yes&estudiante_id='+tr.idusuario+'&institucion_id='+me.institucion_id+'&periodo_id='+me.periodo_id)\r\n            .then(function (res) {\r\n                me.arregloCodigos = res.data\r\n                me.menu = 1\r\n                me.$vs.loading.close()\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error + ' error');\r\n                me.$vs.loading.close()\r\n            })\r\n            me.menu = 1\r\n        },\r\n        //METODOS PARA EXCEL\r\n        //para limipiar los campos del excel\r\n        clearFields() {\r\n            this.fileName = ''\r\n            this.cellAutoWidth = true\r\n            this.selectedFormat = 'xls'\r\n        },\r\n        //metodo par descargar el excel\r\n        exportToExcel() {\r\n            let headerTitle = ['Estudiante','Cédula','Institución',  'Email','Cod. Ingresados'];\r\n            let headerVal = ['estudiante', 'cedula','nombreInstitucion','email','contador'];  \r\n            \r\n            for (let index = 1; index < 11; index++) {\r\n                headerTitle.push(\"Codigo\" + index)\r\n                headerVal.push(\"codigo\" + index)\r\n            }\r\n            let codigoSelectedMayus = this.datosExportar\r\n            for (var i = 0; i < codigoSelectedMayus.length; i++) {\r\n                for (var key in codigoSelectedMayus[i]) {\r\n                    if (typeof codigoSelectedMayus[i][key] == \"string\") {\r\n                        codigoSelectedMayus[i][key] = codigoSelectedMayus[i][key].toUpperCase();\r\n                    }\r\n                }\r\n            }\r\n            import('@/vendor/Export2Excel').then(excel => {\r\n                const list = codigoSelectedMayus\r\n                const data = this.formatJson(headerVal, list)\r\n                excel.export_json_to_excel({\r\n                    header: headerTitle,\r\n                    data,\r\n                    filename: 'ResultadoEstudiantes',\r\n                    autoWidth: this.cellAutoWidth,\r\n                    bookType: this.selectedFormat\r\n                })\r\n                this.clearFields()\r\n                this.guardarActivo = '';\r\n                this.generarActivo = ' ';\r\n                this.textAlertCant = '';\r\n                this.cantidad = '';\r\n                this.codigoSelected = [];\r\n            })\r\n        },\r\n        formatJson(filterVal, jsonData) {\r\n            return jsonData.map(v => filterVal.map(j => {\r\n                return v[j]\r\n            }))\r\n        },\r\n    }\r\n}\r\n</script>\r\n<style>\r\n.botonp{\r\n    transition: 1 ease all;\r\n}\r\n.botonp:hover{\r\n    background-color: blueviolet;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]}]}