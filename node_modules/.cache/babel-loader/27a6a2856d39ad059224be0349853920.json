{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\evaluaciones\\evaluacion_imprimir.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\evaluaciones\\evaluacion_imprimir.vue","mtime":1712682815872},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\babel.config.js","mtime":1712682813877},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\.babelrc","mtime":1712682813750},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport flatPickr from 'vue-flatpickr-component';\nimport 'flatpickr/dist/flatpickr.css';\nimport Vue from 'vue';\nimport axios from 'axios';\nimport vSelect from 'vue-select';\nimport moment from 'moment';\nimport $ from 'jquery';\nimport VueRouter from 'vue-router';\nvar respondidas = [];\nvar x = null;\nexport default {\n  data: function data() {\n    return {\n      preguntas: [],\n      pregunta: {\n        descripcion: '',\n        id_tema: '',\n        respuesta: '',\n        opcion1: '',\n        opcion2: '',\n        opcion3: '',\n        img_pregunta: '',\n        img_respuesta: '',\n        img_opcion1: '',\n        img_opcion2: '',\n        img_opcion3: ''\n      },\n      evaluaciones: [],\n      evaluacion: {\n        nombre: '',\n        asignatura: '',\n        descripcion: '',\n        fecha_inicio: '',\n        fecha_fin: '',\n        estado: '',\n        duracion: '',\n        nombre_evaluacion: ''\n      },\n      usuario: [],\n      estudiante: null,\n      nombre_estudiante: null,\n      apellido_estudiante: null,\n      opcionesSelec: [],\n      activeConfirm: false,\n      urlOrigen: '',\n      iniciarActivo: true,\n      currentx: 1,\n      volverActivo: false,\n      verbtniniciar: true,\n      calificacion: 0,\n      id_evalRevisar: '',\n      estudianteSelected: '',\n      estudiantes: [],\n      puntaje: '',\n      previsualizar_eval: 1,\n      grupo_selected: '',\n      radios1: 1,\n      respuestasEstudiante: [],\n      calificacionObtenida: '',\n      respuestasEscritas: [],\n      interarResEscr: 0,\n      grupo: '',\n      vertodo: false,\n      calificacionManual: 0,\n      grupoSelectedVal: 1,\n      preguntasPendientesRevision: [],\n      inicioImpresion: 0,\n      nombresImprimir: '',\n      calificacionImprimir: 0,\n      nombre_institucion: ''\n    };\n  },\n  components: {\n    'v-select': vSelect,\n    flatPickr: flatPickr\n  },\n  created: function created() {\n    this.id_evalRevisar = localStorage.getItem(\"id_evalRevisar\");\n    this.previsualizar_eval = localStorage.getItem(\"previsualizar_eval\");\n    this.$vs.loading();\n    this.usuario = JSON.parse(localStorage.getItem('usuario'));\n    var url = location.pathname.split('/');\n    var urlBack = window.location.href;\n    var urlV = urlBack.split('/');\n    this.urlOrigen = urlV[0] + '/' + urlV[1] + '/' + urlV[2] + '/estudiante/evaluaciones';\n    this.nombresImprimir = localStorage.getItem(\"nombresImprimir\");\n    this.calificacionImprimir = localStorage.getItem(\"calificacionImprimir\");\n  },\n  mounted: function mounted() {\n    this.datosInicio(this.id_evalRevisar, this.previsualizar_eval);\n    this.getInstitucion();\n  },\n  methods: {\n    getInstitucion: function getInstitucion() {\n      var me = this;\n      me.$http.get(me.$server_url + 'institucion/' + me.usuario.institucion_idInstitucion).then(function (res) {\n        me.nombre_institucion = res.data.nombreInstitucion;\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    datosInicio: function datosInicio(id_evalRevisar, previsualizar_eval) {\n      var me = this;\n      console.log(\"pre\", previsualizar_eval);\n      var formData = new FormData();\n      formData.append('codigo', localStorage.codigo);\n      formData.append('evaluacion', id_evalRevisar);\n      me.$http.post(me.$server_url + 'estudiantesEvalCurso', formData).then(function (response) {\n        if (response.data[0] === undefined) {\n          console.log(\"uno\");\n          if (me.previsualizar_eval != 1) {\n            me.$vs.notify({\n              text: 'Ningun estudiante ha realizado esta evaluación.',\n              color: 'warning',\n              iconPack: 'feather'\n            });\n          }\n          me.$vs.loading.close();\n        } else {\n          me.estudiantes = response.data;\n          me.estudianteSelected = {\n            id: response.data[0].id,\n            label: response.data[0].label,\n            grupo: response.data[0].grupo\n          };\n          me.grupoSelectedVal = response.data[0].grupo;\n          me.nombre_estudiante = response.data[0].label;\n        }\n        me.$http.get(me.$server_url + 'evaluacionEstudiante/' + id_evalRevisar).then(function (response) {\n          if (response.data.length > 0) {\n            me.evaluaciones = response.data;\n            me.$http.get(me.$server_url + 'getRespuestas/' + id_evalRevisar).then(function (response) {\n              var pregOpcion = response.data.items;\n              if (pregOpcion === undefined) {\n                me.$vs.notify({\n                  text: 'Esta evaluación aun no tiene preguntas asignadas',\n                  color: 'warning',\n                  iconPack: 'feather'\n                });\n                me.$vs.loading.close();\n                return;\n              }\n              if (previsualizar_eval == 1) {\n                me.verPreguntasEvaluacionGrupos();\n                me.iniciar();\n              } else {\n                me.verEvalEstudiante();\n                me.iniciar();\n              }\n            }).catch(function (error) {\n              console.log(error);\n            });\n          } else {\n            alert('No existen preguntas para esta evaluación');\n            //window.location.href = this.urlOrigen;\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    getEvaluacion: function getEvaluacion(item) {\n      var me = this;\n      var formData = new FormData();\n      if (me.usuario.id_group === 4) {\n        formData.append('estudiante', me.usuario.idusuario);\n      } else {\n        formData.append('estudiante', me.estudianteSelected.id);\n      }\n      formData.append('evaluacion', me.id_evalRevisar);\n      me.$http.post(me.$server_url + \"verifRespEvaluacion\", formData).then(function (res) {\n        if (res.data === 0) {\n          me.volverActivo = true;\n        } else {\n          me.volverActivo = false;\n          me.calificacionObtenida = res.data[0].calificacion.toFixed(2);\n        }\n        me.$vs.loading.close();\n      });\n    },\n    iniciar: function iniciar() {\n      var me = this;\n      if (me.preguntas.items === undefined) {\n        console.log();\n      } else {\n        me.iniciarActivo = true;\n        me.verbtniniciar = false;\n      }\n      me.$vs.loading.close();\n    },\n    verPreguntaSelec: function verPreguntaSelec(index) {\n      var me = this;\n      for (var i = me.preguntas.items.length + 1; i <= me.respuestasEscritas.length + me.preguntas.items.length; i++) {\n        document.getElementById(\"contenPregEscr\" + i).style.display = \"block\";\n      }\n      for (var j = 1; j <= me.preguntas.items.length; j++) {\n        document.getElementById(\"contenPreg\" + j).style.display = \"block\";\n      }\n      try {\n        document.getElementById(\"contenPreg\" + (index + 1)).style.display = \"block\";\n      } catch (error) {}\n    },\n    verEvalEstudiante: function verEvalEstudiante() {\n      var me = this;\n      if (me.estudianteSelected.grupo === undefined) {\n        me.$vs.notify({\n          text: 'Ningún estudiante ha respondido esta evaluación todavía.',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-alert-triangle'\n        });\n        return;\n      }\n      me.grupo = me.estudianteSelected.grupo;\n      var estudiante;\n      if (me.usuario.id_group === 4) {\n        me.grupo = localStorage.getItem(\"grupo_estudiante\");\n        estudiante = me.usuario.idusuario;\n      } else {\n        estudiante = me.estudianteSelected.id;\n      }\n      if (estudiante === undefined) {\n        console.log('no existen estudiantes');\n      } else {\n        var formData = new FormData();\n        var grupoevalImprimir = localStorage.getItem(\"grupoevalImprimir\");\n        var estudianteEvalImprimir = localStorage.getItem(\"estudianteEvalImprimir\");\n        formData.append('grupo', grupoevalImprimir);\n        formData.append('evaluacion', me.id_evalRevisar);\n        formData.append('estudiante', estudianteEvalImprimir);\n        me.$vs.loading();\n        me.$http.post(me.$server_url + 'pregEvaluacionEstudiante', formData).then(function (response) {\n          if (response.data.length === 0) {\n            me.preguntasPendientesRevision = [];\n            me.preguntas = [];\n            me.calificacionObtenida = 0;\n            me.$vs.loading.close();\n            me.$vs.notify({\n              text: 'El estudiante seleccionado no ha resuelto la evaluación',\n              color: 'warning',\n              iconPack: 'feather',\n              icon: 'icon-alert-triangle'\n            });\n          } else {\n            me.preguntasPendientesRevision = [];\n            me.calificacionObtenida = '';\n            me.preguntas = response.data;\n            me.getEvaluacion(me.id_evalRevisar);\n            me.currentx = 1;\n            var resps = [];\n            var respString = [];\n            for (var i = 0; i < response.data.items.length; i++) {\n              respString = response.data.items[i].respuesta.split(',');\n              for (var j = 0; j < respString.length; j++) {\n                resps.push(parseInt(respString[j]));\n              }\n              respString = [];\n            }\n            me.opcionesSelec = resps;\n            for (var i = 0; i < response.data.items.length; i++) {\n              if (response.data.items[i].id_tipo_pregunta === 6 || response.data.items[i].id_tipo_pregunta === 2) {\n                me.preguntasPendientesRevision.push(i);\n              }\n            }\n            me.$vs.loading.close();\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      }\n    },\n    verPreguntasEvaluacionGrupos: function verPreguntasEvaluacionGrupos() {\n      var me = this;\n      me.preguntas = [];\n      var formData = new FormData();\n      formData.append('grupo', me.radios1);\n      formData.append('evaluacion', me.id_evalRevisar);\n      me.$http.post(me.$server_url + \"pregEvaluacionGrupo\", formData).then(function (res) {\n        if (res.data.length === 0) {\n          me.$vs.loading.close();\n        } else {\n          me.preguntas = res.data;\n          me.currentx = 1;\n        }\n      });\n    },\n    mostrarTodo: function mostrarTodo() {\n      var me = this;\n      me.vertodo = true;\n      if (me.preguntas.items === undefined) {\n        console.log('asdadasdasdasd');\n      } else {\n        for (var j = 1; j <= me.preguntas.items.length; j++) {\n          document.getElementById(\"contenPreg\" + j).style.display = \"block\";\n        }\n      }\n      for (var _j = me.preguntas.items.length + 1; _j <= me.respuestasEscritas.length + me.preguntas.items.length; _j++) {\n        document.getElementById(\"contenPregEscr\" + _j).style.display = \"block\";\n      }\n    },\n    calificarManual: function calificarManual(puntaje, id_respuesta) {\n      var me = this;\n      me.calificacionObtenida = (parseFloat(me.calificacionManual) + (parseFloat(me.calificacionObtenida) - parseFloat(puntaje))).toFixed(2);\n      me.preguntasPendientesRevision = [];\n      var formData = new FormData();\n      formData.append('estudiante', me.estudianteSelected.id);\n      formData.append('calificacion', me.calificacionObtenida);\n      formData.append('evaluacion', me.id_evalRevisar);\n      formData.append('puntaje', me.calificacionManual);\n      formData.append('id_respuesta', id_respuesta);\n      me.$http.post(me.$server_url + \"modificarEvaluacion\", formData).then(function (res) {\n        me.verEvalEstudiante();\n        me.$vs.notify({\n          text: 'Calificación guardada correctamente',\n          color: 'success',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n      });\n      me.calificacionManual = 0;\n    },\n    imprimirEval: function imprimirEval() {\n      var me = this;\n      if (me.nombresImprimir) {} else {\n        document.title = me.evaluaciones[0].nombreasignatura;\n      }\n      //var ficha = document.getElementById('seccionImprimir');\n      window.print();\n      /*var ficha = document.getElementById('seccionImprimir');\r\n      var ventimp = window.open(' ', 'popimpr');\r\n      ventimp.document.write( ficha.innerHTML );\r\n      ventimp.document.close();\r\n      ventimp.print( );\r\n      ventimp.close();*/\n    }\n  }\n};",{"version":3,"names":["flatPickr","Vue","axios","vSelect","moment","$","VueRouter","respondidas","x","data","preguntas","pregunta","descripcion","id_tema","respuesta","opcion1","opcion2","opcion3","img_pregunta","img_respuesta","img_opcion1","img_opcion2","img_opcion3","evaluaciones","evaluacion","nombre","asignatura","fecha_inicio","fecha_fin","estado","duracion","nombre_evaluacion","usuario","estudiante","nombre_estudiante","apellido_estudiante","opcionesSelec","activeConfirm","urlOrigen","iniciarActivo","currentx","volverActivo","verbtniniciar","calificacion","id_evalRevisar","estudianteSelected","estudiantes","puntaje","previsualizar_eval","grupo_selected","radios1","respuestasEstudiante","calificacionObtenida","respuestasEscritas","interarResEscr","grupo","vertodo","calificacionManual","grupoSelectedVal","preguntasPendientesRevision","inicioImpresion","nombresImprimir","calificacionImprimir","nombre_institucion","components","created","localStorage","getItem","$vs","loading","JSON","parse","url","location","pathname","split","urlBack","window","href","urlV","mounted","datosInicio","getInstitucion","methods","me","$http","get","$server_url","institucion_idInstitucion","then","res","nombreInstitucion","catch","error","console","log","formData","FormData","append","codigo","post","response","undefined","notify","text","color","iconPack","close","id","label","length","pregOpcion","items","verPreguntasEvaluacionGrupos","iniciar","verEvalEstudiante","alert","getEvaluacion","item","id_group","idusuario","toFixed","verPreguntaSelec","index","i","document","getElementById","style","display","j","icon","grupoevalImprimir","estudianteEvalImprimir","resps","respString","push","parseInt","id_tipo_pregunta","mostrarTodo","calificarManual","id_respuesta","parseFloat","imprimirEval","title","nombreasignatura","print"],"sources":["src/views/evaluaciones/evaluacion_imprimir.vue"],"sourcesContent":["<template>\r\n    <div class=\"vx-row p-8\">\r\n        <!------BARRA SUPERIOR-------->\r\n        <div class=\"oculto-impresion flex\" style=\"justify-content: end;width: 98%;\">\r\n            <vs-button v-if=\"usuario.id_group === 6\" color=\"primary\" type=\"border\" class=\"ml-4\" @click=\"$router.go(-1)\"><b>← Volver</b></vs-button>\r\n        </div>\r\n        <div class=\"vx-col w-full mt-2\" style=\"font-size: 18px;\">\r\n            <div v-if=\"evaluaciones[0]===undefined\">No existe evaluación</div>\r\n            <div style=\"border-radius: 7px; background-color: white; padding: 25px;\">\r\n                <!--SI HAY CALIFICACION-->\r\n                <div v-if=\"nombresImprimir\">\r\n                    <div class=\"vx-row\" style=\"color: #2160D5; font-size: 22px;\">{{nombre_institucion}}</div>\r\n                    <div class=\"vx-row mt-0\">\r\n                        <div class=\"vx-col w-full\" align=\"justify\">\r\n                            <b>Asignatura: </b>{{evaluaciones[0].nombreasignatura}}<br>\r\n                            <b>Estudiante: </b>{{nombresImprimir}}<br>\r\n                            <b>Calificación: </b>{{calificacionImprimir}}<br>\r\n                            <b>Fecha: </b> {{evaluaciones[0].fecha_fin}}<br>\r\n                            <div v-if=\"evaluaciones[0].descripcion==='' || evaluaciones[0].descripcion === null || evaluaciones[0].descripcion === 'null'\"></div>\r\n                            <div v-else><b>Descripción: </b> {{evaluaciones[0].descripcion}}<br></div>\r\n                            <div v-if=\"usuario.id_group===6 && previsualizar_eval!=1\"><b>Grupo: </b> {{estudianteSelected.grupo}} <br></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <!--IMPRIMIR EVALUACION-->\r\n                <div v-else>\r\n                    <div class=\"vx-row mt-0\">\r\n                        <div class=\"vx-col w-full\" align=\"justify\">\r\n                            <b>Asignatura: </b>{{evaluaciones[0].nombreasignatura}}<br>\r\n                            <b>Nombre: </b><br>\r\n                            <b>Curso: </b><br>\r\n                            <b>Fecha: </b><br>\r\n                        </div>\r\n                    </div>\r\n                </div> \r\n                <div class=\"w-full oculto-impresion\">\r\n                    <ul v-if=\"previsualizar_eval==1 && usuario.id_group===6\" align=\"center\" class=\"mt-2 mb-0\" style=\"border: 1px solid #D5D5D5; border-radius: 5px; height: 50px;\">\r\n                        <vs-radio v-for=\"(grupos_g, key) in evaluaciones[0].grupos_evaluacion\" :key=\"key\" v-model=\"radios1\" v-bind:vs-value=\"grupos_g\" class=\"m-3\" @input=\"verPreguntasEvaluacionGrupos()\">\r\n                            Grupo {{grupos_g}}\r\n                        </vs-radio>\r\n                        <vs-button v-if=\"usuario.id_group === 6\"  color=\"primary\" class=\"ml-6\" style=\"display: inline-block;\" @click=\"verPreguntasEvaluacionGrupos()\"><ion-icon name=\"shuffle-outline\"></ion-icon> Nueva combinación</vs-button>\r\n                        <vs-button color=\"warning\" class=\"ml-6\" style=\"display: inline-block;\" @click=\"imprimirEval()\">Generar reporte</vs-button>\r\n                        <vs-button v-if=\"usuario.id_group === 4\" color=\"primary\" type=\"border\" class=\"ml-4\" @click=\"$router.push('/estudiante/evaluaciones')\"><b>← Volver</b></vs-button>\r\n                        <vs-button v-else color=\"primary\" type=\"border\" class=\"ml-4\" @click=\"$router.go(-1)\"><b>← Volver</b></vs-button>\r\n                    </ul>\r\n                    <ul align=\"center\" class=\"mt-2 mb-0\" v-else>\r\n                        <vs-button color=\"warning\" class=\"ml-6\" style=\"display: inline-block;\" @click=\"imprimirEval()\">Imprimir</vs-button>\r\n                        <vs-button v-if=\"usuario.id_group === 4\" color=\"primary\" type=\"border\" class=\"ml-4\" @click=\"$router.push('/estudiante/evaluaciones')\"><b>← Volver</b></vs-button>\r\n                        <vs-button v-else color=\"primary\" type=\"border\" class=\"ml-4\" @click=\"$router.go(-1)\"><b>← Volver</b></vs-button>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <!-------INICIO SECCION RESPONDER---------->\r\n            <div class=\"mt-5 mb-6\" style=\"border-radius: 7px; background-color: white; padding: 25px;\">\r\n                <div class=\"w-full\" align=\"center\" v-if=\"volverActivo===true && previsualizar_eval!=1\">\r\n                    <div class=\"mb-2\">Esta evaluación aún no ha sido resuelta.</div>\r\n                </div>\r\n                <div class=\"text-center\" v-else>\r\n                    <div cols=\"12\" v-for=\"(item, index) in preguntas.items\" :key=\"index\" v-bind:id=\"'contenPreg'+(index+1)\" style=\"display: block;\" class=\"mb-4\">\r\n                        <div class=\"mb-5\" style=\"font-size: 20px;\" align=\"center\">\r\n                            <vs-divider v-if=\"index>0\" />\r\n                            <div align=\"right\">\r\n                                <b>{{item.puntaje}}</b> / {{item.puntaje_pregunta}} pts<br>\r\n                                {{item.nombre_tipo}}\r\n                            </div>\r\n                            <div align=\"left\">\r\n                                <b>{{ index+1 }}) {{item.descripcion}}</b> <br>\r\n                            </div>\r\n                            <img style=\"border-radius: 5px;\" v-if=\"item.img_pregunta\" v-bind:src=\"$data_url+'archivos/img/img_preguntas/'+item.img_pregunta\" class=\"img-responsive mt-2 altura\" min-width=\"350px\" width=\"450px\">\r\n                        </div>\r\n                        <ol type=\"a\">\r\n                            <div align=\"left\" style=\"font-size: 18px;\">\r\n                                <!-----PREGUNTAS SELECCION---->\r\n                                <div v-if=\"item.id_tipo_pregunta===1 || item.id_tipo_pregunta===5 || item.id_tipo_pregunta===3\">\r\n                                    <div v-for=\"(itemop, index) in item.opciones\" :key=\"index\">\r\n                                        <li>\r\n                                            <vs-checkbox disabled=\"true\" class=\"mb-4\" v-model=\"opcionesSelec\" v-bind:vs-value=\"itemop.id_opcion_pregunta\">\r\n                                                {{ itemop.opcion }}\r\n                                                <img style=\"border-radius: 5px;\" v-if=\"itemop.img_opcion\" v-bind:src=\"$data_url+'archivos/img/img_preguntas/'+itemop.img_opcion\" class=\"img-responsive altura\" width=\"300px\">\r\n                                            </vs-checkbox>\r\n                                        </li>\r\n                                    </div>\r\n                                </div>\r\n                                <!-----PREGUNTAS ESCRITAS---->\r\n                                <div v-if=\"item.id_tipo_pregunta===2 || item.id_tipo_pregunta===6\">\r\n                                    <div v-for=\"(itemop, index1) in item.opciones\" :key=\"index1\">\r\n                                        <textarea disabled=\"true\" v-bind:placeholder=\"item.respuesta\" class=\"w-full respAbierta inputRespuesta\" />\r\n                                    </div>\r\n                                    <div v-if=\"item.opciones.length <= 0\">\r\n                                        <textarea disabled=\"true\" v-bind:placeholder=\"item.respuesta\" class=\"w-full respAbierta inputRespuesta\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </ol>\r\n                    </div>\r\n                    <div v-if=\"preguntas.items===undefined\"></div>\r\n                    <div v-else>\r\n                        <vs-pagination class=\"mt-6 oculto-impresion\" color=\"success\" v-if=\"iniciarActivo===true\" :total=\"preguntas.items.length\" v-model=\"currentx\" @input=\"verPreguntaSelec(currentx-1)\"></vs-pagination>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script><script>\r\nimport flatPickr from 'vue-flatpickr-component';\r\nimport 'flatpickr/dist/flatpickr.css';\r\nimport Vue from 'vue'\r\nimport axios from 'axios'\r\nimport vSelect from 'vue-select'\r\nimport moment from 'moment'\r\nimport $ from 'jquery'\r\nimport VueRouter from 'vue-router'\r\nvar respondidas = [];\r\nvar x = null;\r\nexport default {\r\n    data() {\r\n        return {\r\n            preguntas: [],\r\n            pregunta: {\r\n                descripcion: '',\r\n                id_tema: '',\r\n                respuesta: '',\r\n                opcion1: '',\r\n                opcion2: '',\r\n                opcion3: '',\r\n                img_pregunta: '',\r\n                img_respuesta: '',\r\n                img_opcion1: '',\r\n                img_opcion2: '',\r\n                img_opcion3: ''\r\n            },\r\n            evaluaciones: [],\r\n            evaluacion: {\r\n                nombre: '',\r\n                asignatura: '',\r\n                descripcion: '',\r\n                fecha_inicio: '',\r\n                fecha_fin: '',\r\n                estado: '',\r\n                duracion: '',\r\n                nombre_evaluacion: ''\r\n            },\r\n            usuario: [],\r\n            estudiante: null,\r\n            nombre_estudiante: null,\r\n            apellido_estudiante: null,\r\n            opcionesSelec: [],\r\n            activeConfirm: false,\r\n            urlOrigen: '',\r\n            iniciarActivo: true,\r\n            currentx: 1,\r\n            volverActivo: false,\r\n            verbtniniciar: true,\r\n            calificacion: 0,\r\n            id_evalRevisar: '',\r\n            estudianteSelected: '',\r\n            estudiantes: [],\r\n            puntaje: '',\r\n            previsualizar_eval: 1,\r\n            grupo_selected: '',\r\n            radios1: 1,\r\n            respuestasEstudiante: [],\r\n            calificacionObtenida: '',\r\n            respuestasEscritas: [],\r\n            interarResEscr: 0,\r\n            grupo: '',\r\n            vertodo: false,\r\n            calificacionManual: 0,\r\n            grupoSelectedVal: 1,\r\n            preguntasPendientesRevision: [],\r\n            inicioImpresion: 0,\r\n            nombresImprimir: '',\r\n            calificacionImprimir: 0,\r\n            nombre_institucion: '',\r\n        }\r\n    },\r\n    components: {\r\n        'v-select': vSelect,\r\n        flatPickr\r\n    },\r\n    created() {\r\n        this.id_evalRevisar = localStorage.getItem(\"id_evalRevisar\");\r\n        this.previsualizar_eval = localStorage.getItem(\"previsualizar_eval\");\r\n        this.$vs.loading()\r\n        this.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n        var url = location.pathname.split('/');\r\n        var urlBack = window.location.href\r\n        var urlV = urlBack.split('/')\r\n        this.urlOrigen = urlV[0] + '/' + urlV[1] + '/' + urlV[2] + '/estudiante/evaluaciones'\r\n        this.nombresImprimir = localStorage.getItem(\"nombresImprimir\");\r\n        this.calificacionImprimir = localStorage.getItem(\"calificacionImprimir\");\r\n    },\r\n    mounted() {\r\n        this.datosInicio(this.id_evalRevisar, this.previsualizar_eval)\r\n        this.getInstitucion()\r\n    },\r\n    methods: {\r\n        getInstitucion(){\r\n            let me = this\r\n            me.$http.get(me.$server_url+'institucion/' + me.usuario.institucion_idInstitucion)\r\n            .then(function (res) {\r\n                me.nombre_institucion = res.data.nombreInstitucion\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n        },\r\n        datosInicio(id_evalRevisar, previsualizar_eval) {\r\n            let me = this;\r\n            console.log(\"pre\",previsualizar_eval)\r\n            let formData = new FormData();\r\n            formData.append('codigo', localStorage.codigo);\r\n            formData.append('evaluacion', id_evalRevisar);\r\n            me.$http.post(me.$server_url+'estudiantesEvalCurso', formData)\r\n            .then(function (response) {\r\n                if (response.data[0] === undefined) {\r\n                    console.log(\"uno\")\r\n                    if( me.previsualizar_eval!=1 ){\r\n                        me.$vs.notify({\r\n                            text: 'Ningun estudiante ha realizado esta evaluación.',\r\n                            color: 'warning',\r\n                            iconPack: 'feather'\r\n                        })\r\n                    }\r\n                    me.$vs.loading.close()\r\n                } else {\r\n                    me.estudiantes = response.data;\r\n                    me.estudianteSelected = {\r\n                        id: response.data[0].id,\r\n                        label: response.data[0].label,\r\n                        grupo: response.data[0].grupo\r\n                    }\r\n                    me.grupoSelectedVal = response.data[0].grupo\r\n                    me.nombre_estudiante = response.data[0].label;\r\n                }\r\n\r\n                me.$http.get(me.$server_url+'evaluacionEstudiante/' + id_evalRevisar)\r\n                .then(function (response) {\r\n                    if (response.data.length > 0) {\r\n                        me.evaluaciones = response.data\r\n                        me.$http.get(me.$server_url+'getRespuestas/' + id_evalRevisar)\r\n                        .then(function (response) {\r\n                            var pregOpcion = response.data.items;\r\n                            if (pregOpcion === undefined) {\r\n                                me.$vs.notify({\r\n                                    text: 'Esta evaluación aun no tiene preguntas asignadas',\r\n                                    color: 'warning',\r\n                                    iconPack: 'feather'\r\n                                })\r\n                                me.$vs.loading.close()\r\n                                return\r\n                            }\r\n                            if (previsualizar_eval == 1) {\r\n                                me.verPreguntasEvaluacionGrupos();\r\n                                me.iniciar();\r\n                            } else {\r\n                                me.verEvalEstudiante();\r\n                                me.iniciar();\r\n                            }\r\n                            \r\n                        })\r\n                        .catch(function (error) {\r\n                            console.log(error);\r\n                        })\r\n                    } else {\r\n                        alert('No existen preguntas para esta evaluación');\r\n                        //window.location.href = this.urlOrigen;\r\n                    }\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n        },\r\n        getEvaluacion(item) {\r\n            let me = this\r\n            var formData = new FormData();\r\n            if (me.usuario.id_group === 4) {\r\n                formData.append('estudiante', me.usuario.idusuario);\r\n            } else {\r\n                formData.append('estudiante', me.estudianteSelected.id);\r\n            }\r\n            formData.append('evaluacion', me.id_evalRevisar);\r\n            me.$http.post(me.$server_url+`verifRespEvaluacion`, formData).then(res => {\r\n                if (res.data === 0) {\r\n                    me.volverActivo = true\r\n                } else {\r\n                    me.volverActivo = false\r\n                    me.calificacionObtenida = (res.data[0].calificacion).toFixed(2)\r\n                }\r\n                me.$vs.loading.close()\r\n            })\r\n        },\r\n        iniciar() {\r\n            let me = this\r\n            if (me.preguntas.items === undefined) {\r\n                console.log();\r\n            } else {\r\n                me.iniciarActivo = true;\r\n                me.verbtniniciar = false;\r\n            }\r\n            me.$vs.loading.close()\r\n        },\r\n        verPreguntaSelec(index) {\r\n            let me = this\r\n            for (let i = (me.preguntas.items.length + 1); i <= (me.respuestasEscritas.length + me.preguntas.items.length); i++) {\r\n                document.getElementById(\"contenPregEscr\" + i).style.display = \"block\";\r\n            }\r\n\r\n            for (let j = 1; j <= me.preguntas.items.length; j++) {\r\n                document.getElementById(\"contenPreg\" + j).style.display = \"block\";\r\n            }\r\n            try{\r\n                document.getElementById(\"contenPreg\" + (index + 1)).style.display = \"block\";\r\n            }catch (error){\r\n\r\n            }\r\n\r\n        },\r\n        verEvalEstudiante() {\r\n            let me = this;\r\n            if (me.estudianteSelected.grupo === undefined) {\r\n                me.$vs.notify({\r\n                    text: 'Ningún estudiante ha respondido esta evaluación todavía.',\r\n                    color: 'warning',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-alert-triangle'\r\n                })\r\n                return;\r\n            }\r\n            me.grupo = me.estudianteSelected.grupo;\r\n            var estudiante;\r\n            if (me.usuario.id_group === 4) {\r\n                me.grupo = localStorage.getItem(\"grupo_estudiante\")\r\n                estudiante = me.usuario.idusuario\r\n            } else {\r\n                estudiante = me.estudianteSelected.id\r\n            }\r\n            \r\n            if( estudiante===undefined ){\r\n                console.log('no existen estudiantes');\r\n            }else{\r\n                let formData = new FormData();\r\n                let grupoevalImprimir = localStorage.getItem(\"grupoevalImprimir\");\r\n                let estudianteEvalImprimir = localStorage.getItem(\"estudianteEvalImprimir\");\r\n                formData.append('grupo', grupoevalImprimir);\r\n                formData.append('evaluacion', me.id_evalRevisar);\r\n                formData.append('estudiante', estudianteEvalImprimir);\r\n                me.$vs.loading()\r\n                me.$http.post(me.$server_url+'pregEvaluacionEstudiante', formData)\r\n                .then(function (response) {\r\n                    if (response.data.length === 0) {\r\n                        me.preguntasPendientesRevision=[];\r\n                        me.preguntas=[];\r\n                        me.calificacionObtenida=0;\r\n                        me.$vs.loading.close()\r\n                        me.$vs.notify({\r\n                            text: 'El estudiante seleccionado no ha resuelto la evaluación',\r\n                            color: 'warning',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-alert-triangle'\r\n                        })\r\n                    } else {\r\n                        me.preguntasPendientesRevision=[];\r\n                        me.calificacionObtenida = '';\r\n                        me.preguntas = response.data;\r\n                        me.getEvaluacion(me.id_evalRevisar);\r\n                        me.currentx = 1;\r\n                        var resps = []\r\n                        var respString = []\r\n                        for (var i = 0; i < response.data.items.length; i++) {\r\n                            respString = (response.data.items[i].respuesta).split(',')\r\n                            for (var j = 0; j < respString.length; j++) {\r\n                                resps.push(parseInt(respString[j]))\r\n                            }\r\n                            respString = []\r\n                        }\r\n                        me.opcionesSelec = resps;\r\n                        for (var i = 0; i < response.data.items.length; i++) {\r\n                            if( response.data.items[i].id_tipo_pregunta === 6 || response.data.items[i].id_tipo_pregunta === 2 ){\r\n                                me.preguntasPendientesRevision.push(i)\r\n                            }\r\n                        }\r\n                        me.$vs.loading.close()\r\n                    }\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error)\r\n                })\r\n            }\r\n        },\r\n        verPreguntasEvaluacionGrupos() {\r\n            let me = this\r\n            me.preguntas = []\r\n            let formData = new FormData();\r\n            formData.append('grupo', me.radios1);\r\n            formData.append('evaluacion', me.id_evalRevisar);\r\n            me.$http.post(me.$server_url+`pregEvaluacionGrupo`, formData).then(res => {\r\n                if (res.data.length === 0) {\r\n                    me.$vs.loading.close()\r\n                } else {\r\n                    me.preguntas = res.data;                \r\n                    me.currentx = 1;\r\n                }\r\n            })\r\n        },\r\n        mostrarTodo() {\r\n            let me = this\r\n            me.vertodo = true;\r\n            if (me.preguntas.items === undefined) {\r\n                console.log('asdadasdasdasd');\r\n            } else {\r\n                for (let j = 1; j <= me.preguntas.items.length; j++) {\r\n                    document.getElementById(\"contenPreg\" + j).style.display = \"block\";\r\n                }\r\n            }\r\n            for (let j = (me.preguntas.items.length + 1); j <= (me.respuestasEscritas.length + me.preguntas.items.length); j++) {\r\n                document.getElementById(\"contenPregEscr\" + j).style.display = \"block\";\r\n            }\r\n        },\r\n        calificarManual(puntaje, id_respuesta) {\r\n            let me = this\r\n            me.calificacionObtenida = (parseFloat(me.calificacionManual) + (parseFloat(me.calificacionObtenida) - parseFloat(puntaje))).toFixed(2);\r\n            me.preguntasPendientesRevision=[]\r\n            let formData = new FormData();\r\n            formData.append('estudiante', me.estudianteSelected.id);\r\n            formData.append('calificacion', me.calificacionObtenida);\r\n            formData.append('evaluacion', me.id_evalRevisar);\r\n            formData.append('puntaje', me.calificacionManual);\r\n            formData.append('id_respuesta', id_respuesta);\r\n            me.$http.post(me.$server_url+`modificarEvaluacion`, formData).then(res => {\r\n                me.verEvalEstudiante()\r\n                me.$vs.notify({\r\n                    text: 'Calificación guardada correctamente',\r\n                    color: 'success',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-check'\r\n                })\r\n            })\r\n            me.calificacionManual = 0;\r\n        },\r\n        imprimirEval(){\r\n            let me = this;\r\n            if(me.nombresImprimir){\r\n            }else{\r\n                document.title = me.evaluaciones[0].nombreasignatura\r\n            }\r\n            //var ficha = document.getElementById('seccionImprimir');\r\n            window.print();\r\n            /*var ficha = document.getElementById('seccionImprimir');\r\n            var ventimp = window.open(' ', 'popimpr');\r\n            ventimp.document.write( ficha.innerHTML );\r\n            ventimp.document.close();\r\n            ventimp.print( );\r\n            ventimp.close();*/\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n.inputRespuesta {\r\n    height: 80px;\r\n    border-radius: 5px;\r\n    border: 1px solid #d5d5d5;\r\n    font-size: 18px;\r\n    padding: 5px 10px 5px 10px;\r\n    resize: vertical;\r\n}\r\n\r\n.altura{\r\n    max-height: 350px;\r\n}\r\n\r\n@media print{\r\n    .oculto-impresion *{\r\n        display: none !important;\r\n    }\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]}]}