{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\biblioteca\\biblioteca.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\biblioteca\\biblioteca.vue","mtime":1712682815545},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\babel.config.js","mtime":1712682813877},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\.babelrc","mtime":1712682813750},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/laragon/www/PRY_NEW_JEYSON/LOCAL/plataformaprolipa_vue/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport AreaContent from \"./content/Area/AreaContent.vue\";\nimport Contenidos from \"./content/Contenidos/Contenidos.vue\";\nexport default {\n  components: {\n    AreaContent: AreaContent,\n    Contenidos: Contenidos\n  },\n  created: function created() {\n    this.currentUser = JSON.parse(localStorage.getItem('usuario')); // Obtiene el usuario actual\n  },\n  data: function data() {\n    return {\n      currentUser: null,\n      buscarArea: '',\n      area: null,\n      areas: []\n    };\n  },\n  mounted: function mounted() {\n    var me = this; // Variable para almacenar el contexto actual\n    var settArea = JSON.parse(localStorage.getItem('area')); // Obtiene el área seleccionada\n\n    // Si no hay un área seleccionada, obtiene las áreas\n    if (!settArea) {\n      me.getAreas(); // Obtiene las áreas\n    } else {\n      // Si hay un área seleccionada, la asigna a la variable 'area' y la agrega al arreglo 'areas'\n      this.areas.push(settArea);\n      this.area = settArea;\n    }\n    this.checkRole(); // Verifica los permisos del usuario\n  },\n  methods: {\n    clearArea: function clearArea() {\n      localStorage.removeItem('area'); // Elimina el área seleccionada del almacenamiento local\n      this.area = null; // Asigna 'null' a la variable 'area'\n      this.getAreas(); // Obtiene las áreas\n    },\n    setArea: function setArea(area) {\n      localStorage.setItem('area', JSON.stringify(area)); // Almacena el área seleccionada en el almacenamiento local\n      this.areas = []; // Asigna un arreglo vacío a la variable 'areas'\n      this.area = area; // Asigna el área seleccionada a la variable 'area'\n      this.areas = [area]; // Agrega el área seleccionada al arreglo 'areas'\n    },\n    searchArea: function () {\n      var _searchArea = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(area) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!(area === '')) {\n                _context.next = 3;\n                break;\n              }\n              this.getAreas(); // Obtiene las áreas\n              return _context.abrupt(\"return\");\n            case 3:\n              this.areas = this.areas.filter(function (a) {\n                return a.nombrearea.toLowerCase().includes(area.toLowerCase());\n              }); // Filtra las áreas por el nombre\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function searchArea(_x) {\n        return _searchArea.apply(this, arguments);\n      }\n      return searchArea;\n    }(),\n    getAreas: function () {\n      var _getAreas = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var _this = this;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              this.$vs.loading(); // Muestra el indicador de carga\n\n              // Realiza una petición para obtener las áreas\n              this.$http.get(\"\".concat(this.$server_url, \"biblioteca/areas\")).then(function (res) {\n                _this.areas = res.data.data; // Asigna los datos obtenidos a la variable 'areas'\n\n                // Ordena las áreas por nombre\n                _this.areas.sort(function (a, b) {\n                  if (a.nombrearea < b.nombrearea) {\n                    return -1;\n                  }\n                  if (a.nombrearea > b.nombrearea) {\n                    return 1;\n                  }\n                  return 0;\n                });\n              }).catch(function (err) {\n                _this.$vs.notify({\n                  title: 'Error',\n                  text: err.message,\n                  color: 'danger',\n                  position: 'top-right'\n                });\n              }).finally(function () {\n                _this.$vs.loading.close(); // Cierra el indicador de carga\n              });\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function getAreas() {\n        return _getAreas.apply(this, arguments);\n      }\n      return getAreas;\n    }(),\n    checkRole: function checkRole() {\n      var me = this; // Variable para almacenar el contexto actual\n      me.$vs.loading(); // Muestra el indicador de carga\n\n      // Realiza una petición para obtener los permisos del usuario actual\n      me.$http.get(\"\".concat(this.$server_url, \"permisos/\").concat(this.currentUser.idusuario)).then(function (res) {\n        // Si el usuario no tiene permisos para acceder a esta sección, lo redirecciona a la página principal\n        if (res.data.length === 0) {\n          // Si el usuario no tiene permisos para acceder a esta sección, lo redirecciona a la página principal\n          if (me.currentUser.id_group === 1 || me.currentUser.id_group === 29 || me.currentUser.id_group === 30) {\n            return;\n          } else {\n            me.$vs.notify({\n              title: 'Error',\n              text: 'No tiene permisos para acceder a esta sección',\n              color: 'danger',\n              position: 'top-right'\n            });\n            me.$router.push('/');\n          }\n        } else {\n          return;\n        }\n      }).catch(function (err) {\n        me.$vs.notify({\n          title: 'Error',\n          text: err.message,\n          color: 'danger',\n          position: 'top-right'\n        });\n        me.$router.push('/');\n      }).finally(function () {\n        me.$vs.loading.close();\n      });\n    }\n  }\n};",{"version":3,"names":["AreaContent","Contenidos","components","created","currentUser","JSON","parse","localStorage","getItem","data","buscarArea","area","areas","mounted","me","settArea","getAreas","push","checkRole","methods","clearArea","removeItem","setArea","setItem","stringify","searchArea","_searchArea","_asyncToGenerator","regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","abrupt","filter","a","nombrearea","toLowerCase","includes","stop","_x","apply","arguments","_getAreas","_callee2","_this","_callee2$","_context2","$vs","loading","$http","get","concat","$server_url","then","res","sort","b","catch","err","notify","title","text","message","color","position","finally","close","idusuario","length","id_group","$router"],"sources":["src/views/biblioteca/biblioteca.vue"],"sourcesContent":["<template>\r\n  <div class=\"w-screen h-screen px-6 py-2\">\r\n    <vs-row vs-justify=\"flex-start\">\r\n      <vs-col>\r\n        <AreaContent :areas=\"areas\" :selected-area=\"area\" :searchAreas=\"searchArea\" :clear=\"clearArea\"\r\n          :set-area=\"setArea\" />\r\n      </vs-col>\r\n      <vs-col v-if=\"area\">\r\n        <Contenidos :area=\"area\" />\r\n      </vs-col>\r\n    </vs-row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport AreaContent from \"./content/Area/AreaContent.vue\"\r\nimport Contenidos from \"./content/Contenidos/Contenidos.vue\";\r\n\r\nexport default {\r\n  components: {\r\n    AreaContent,\r\n    Contenidos\r\n  },\r\n  created() {\r\n    this.currentUser = JSON.parse(localStorage.getItem('usuario')); // Obtiene el usuario actual\r\n  },\r\n  data() {\r\n    return {\r\n      currentUser: null,\r\n      buscarArea: '',\r\n      area: null,\r\n      areas: [],\r\n    };\r\n  },\r\n  mounted() {\r\n    const me = this; // Variable para almacenar el contexto actual\r\n    const settArea = JSON.parse(localStorage.getItem('area')); // Obtiene el área seleccionada\r\n\r\n    // Si no hay un área seleccionada, obtiene las áreas\r\n    if (!settArea) {\r\n      me.getAreas(); // Obtiene las áreas\r\n    } else {\r\n      // Si hay un área seleccionada, la asigna a la variable 'area' y la agrega al arreglo 'areas'\r\n      this.areas.push(settArea);\r\n      this.area = settArea;\r\n    }\r\n    this.checkRole(); // Verifica los permisos del usuario\r\n  },\r\n  methods: {\r\n    clearArea() {\r\n      localStorage.removeItem('area'); // Elimina el área seleccionada del almacenamiento local\r\n      this.area = null; // Asigna 'null' a la variable 'area'\r\n      this.getAreas(); // Obtiene las áreas\r\n    },\r\n    setArea(area) {\r\n      localStorage.setItem('area', JSON.stringify(area)); // Almacena el área seleccionada en el almacenamiento local\r\n      this.areas = []; // Asigna un arreglo vacío a la variable 'areas'\r\n      this.area = area; // Asigna el área seleccionada a la variable 'area'\r\n      this.areas = [area]; // Agrega el área seleccionada al arreglo 'areas'\r\n    },\r\n    async searchArea(area) {\r\n      // Si el parámetro 'area' es una cadena vacía, obtiene las áreas\r\n      if (area === '') {\r\n        this.getAreas(); // Obtiene las áreas\r\n        return;\r\n      }\r\n      this.areas = this.areas.filter((a) => a.nombrearea.toLowerCase().includes(area.toLowerCase())); // Filtra las áreas por el nombre\r\n    },\r\n    async getAreas() {\r\n      this.$vs.loading(); // Muestra el indicador de carga\r\n\r\n      // Realiza una petición para obtener las áreas\r\n      this.$http.get(`${this.$server_url}biblioteca/areas`).then((res) => {\r\n        this.areas = res.data.data; // Asigna los datos obtenidos a la variable 'areas'\r\n\r\n        // Ordena las áreas por nombre\r\n        this.areas.sort((a, b) => {\r\n          if (a.nombrearea < b.nombrearea) {\r\n            return -1;\r\n          }\r\n          if (a.nombrearea > b.nombrearea) {\r\n            return 1;\r\n          }\r\n          return 0;\r\n        });\r\n      }).catch((err) => {\r\n        this.$vs.notify({\r\n          title: 'Error',\r\n          text: err.message,\r\n          color: 'danger',\r\n          position: 'top-right',\r\n        });\r\n      }).finally(() => {\r\n        this.$vs.loading.close(); // Cierra el indicador de carga\r\n      });\r\n    },\r\n    checkRole() {\r\n      const me = this; // Variable para almacenar el contexto actual\r\n      me.$vs.loading(); // Muestra el indicador de carga\r\n\r\n      // Realiza una petición para obtener los permisos del usuario actual\r\n      me.$http.get(`${this.$server_url}permisos/${this.currentUser.idusuario}`).then((res) => {\r\n        // Si el usuario no tiene permisos para acceder a esta sección, lo redirecciona a la página principal\r\n        if (res.data.length === 0) {\r\n          // Si el usuario no tiene permisos para acceder a esta sección, lo redirecciona a la página principal\r\n          if (me.currentUser.id_group === 1 || me.currentUser.id_group === 29 || me.currentUser.id_group === 30) {\r\n            return;\r\n          } else {\r\n            me.$vs.notify({\r\n              title: 'Error',\r\n              text: 'No tiene permisos para acceder a esta sección',\r\n              color: 'danger',\r\n              position: 'top-right',\r\n            });\r\n            me.$router.push('/');\r\n          }\r\n        } else {\r\n          return;\r\n        }\r\n      }).catch((err) => {\r\n        me.$vs.notify({\r\n          title: 'Error',\r\n          text: err.message,\r\n          color: 'danger',\r\n          position: 'top-right',\r\n        });\r\n        me.$router.push('/');\r\n      }).finally(() => {\r\n        me.$vs.loading.close();\r\n      });\r\n    }\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"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","ignoreList":[]}]}