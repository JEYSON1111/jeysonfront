{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\evaluaciones\\PreguntasComponent.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\evaluaciones\\PreguntasComponent.vue","mtime":1712682815861},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\babel.config.js","mtime":1712682813877},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\.babelrc","mtime":1712682813750},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.string.starts-with\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.split\";\nimport flatPickr from 'vue-flatpickr-component';\nimport 'flatpickr/dist/flatpickr.css';\nimport Vue from 'vue';\nimport axios from 'axios';\nimport vSelect from 'vue-select';\nimport moment from 'moment';\nimport $ from 'jquery';\nvar img_preg_old = '',\n  img_opcion_old = '';\nexport default {\n  data: function data() {\n    return {\n      asignaturas: [],\n      asignatura: {\n        id: '',\n        label: ''\n      },\n      preguntas: [],\n      pregunta: {\n        descripcion: '',\n        tema: {\n          id: '',\n          label: ''\n        },\n        respuesta: '',\n        opcion1: '',\n        opcion2: '',\n        opcion3: '',\n        img_pregunta: '',\n        img_respuesta: '',\n        img_opcion1: '',\n        img_opcion2: '',\n        img_opcion3: '',\n        puntaje_pregunta: '',\n        estado: 1\n      },\n      temas: [],\n      tema: {\n        id: '',\n        label: '',\n        id_asignatura: '',\n        unidad: ''\n      },\n      temaSelected: {\n        id: '',\n        label: ''\n      },\n      opcion: {\n        id_opcion_pregunta: '',\n        id_pregunta: '',\n        opcion: '',\n        img_opcion: '',\n        tipo: ''\n      },\n      opciones: [],\n      editarActivo: false,\n      popupAddPreg: false,\n      popupEditPreg: false,\n      popupTipoPreg: false,\n      popupAddPregVarOp: false,\n      pregSelected: [],\n      pregTipo: 1,\n      titPregTipo: '',\n      txtPregTipo: '',\n      active1: true,\n      tipo_opcion: '',\n      cargarOpcionActivo: false,\n      guardadoActivo: false,\n      'tableList': ['vs-th: Component', 'vs-tr: Component', 'vs-td: Component', 'thread: Slot', 'tbody: Slot', 'header: Slot'],\n      usuario: [],\n      docente: null,\n      id_preguntaActiva: '',\n      editarOpcionActiva: false,\n      src_imagen_pregunta: '',\n      src_imagen_opcion: '',\n      palabras_clave: '',\n      id_opcion_tipo234: '',\n      urlOrigen: '',\n      url: '',\n      id_pregunta_creada: null,\n      opcionselecradio: '',\n      asignaturaSelected: '',\n      unidadSelected: '',\n      unidades: [{\n        id: \"1\",\n        label: \"Unidad 1\"\n      }, {\n        id: \"2\",\n        label: \"Unidad 2\"\n      }, {\n        id: \"3\",\n        label: \"Unidad 3\"\n      }, {\n        id: \"4\",\n        label: \"Unidad 4\"\n      }, {\n        id: \"5\",\n        label: \"Unidad 5\"\n      }, {\n        id: \"6\",\n        label: \"Unidad 6\"\n      }, {\n        id: \"7\",\n        label: \"Unidad 7\"\n      }, {\n        id: \"8\",\n        label: \"Unidad 8\"\n      }],\n      tipoSelected: '',\n      tipos: [{\n        id: \"1\",\n        label: \"Opción múltiple\"\n      }, {\n        id: \"2\",\n        label: \"Respuesta cerrada\"\n      }, {\n        id: \"3\",\n        label: \"Verdadero/Falso\"\n      }, {\n        id: \"5\",\n        label: \"Selección simple\"\n      }, {\n        id: \"6\",\n        label: \"Respuesta abierta\"\n      }],\n      datosEliminar: [],\n      idPregEliminar: '',\n      bancoSelected: {\n        id: '3',\n        label: 'Ambas'\n      },\n      bancos: [{\n        id: '1',\n        label: 'Preguntas de Prolipa'\n      }, {\n        id: '2',\n        label: 'Solo mis preguntas'\n      }, {\n        id: '3',\n        label: 'Ambas'\n      }],\n      tema_ambito: 'Tema',\n      arrayQuestions: [],\n      srcPreguntaAQuitar: ''\n    };\n  },\n  components: {\n    'v-select': vSelect,\n    flatPickr: flatPickr\n  },\n  created: function created() {\n    var me = this;\n    me.$vs.loading();\n    me.usuario = JSON.parse(localStorage.getItem('usuario'));\n    me.docente = me.usuario.idusuario;\n    me.url = location.pathname.split('/');\n    var urlBack = window.location.href;\n    var urlV = urlBack.split('/');\n    me.urlOrigen = urlV[0] + '/' + urlV[1] + '/' + urlV[2] + '/temas';\n    if (me.url[2] === undefined) {\n      this.$http.get(this.$server_url + 'asignaturasDoc/0').then(function (res) {\n        me.asignaturas = res.data;\n        me.$vs.loading.close();\n      });\n    } else {\n      this.$http.get(this.$server_url + 'asignaturasDoc/' + me.docente).then(function (res) {\n        me.asignaturas = res.data;\n        me.$vs.loading.close();\n      });\n    }\n    me.asignaturaSelected = {\n      id: localStorage.idasignatura,\n      label: localStorage.nombreasignatura\n    };\n  },\n  methods: {\n    onResize: function onResize() {\n      if (window.innerWidth < 769) this.isMobile = true;else this.isMobile = false;\n    },\n    limpiar: function limpiar() {\n      this.guardadoActivo = false;\n      this.opciones = [];\n      this.pregunta.descripcion = '';\n      this.pregunta.puntaje_pregunta = '';\n      //this.pregunta.tema = '';\n      this.pregunta.opcion = '';\n      this.opcion.opcion = '';\n      this.opcion.tipo = '';\n      this.src_imagen_pregunta = '';\n      this.srcPreguntaAQuitar = '';\n      this.src_imagen_opcion = '';\n      this.editarActivo = false;\n      this.palabras_clave = '';\n      this.id_preguntaActiva = '';\n      this.editarOpcionActiva = false;\n      this.pregunta.cant_coincidencias = '';\n      this.pregunta.puntaje_pregunta = 1;\n      this.pregunta.estado = 1;\n      switch (this.pregTipo) {\n        case 1:\n          this.titPregTipo = 'Crear pregunta de opción múltiple.';\n          this.txtPregTipo = 'Esta pregunta puede tener una o varias opciones correctas. Las opciones pueden contener: solo texto, solo imágenes o ambas.';\n          break;\n        case 2:\n          this.titPregTipo = 'Crear pregunta cerrada';\n          this.txtPregTipo = 'Esta pregunta debe ser respondida de forma escrita. La respuesta correcta debe contener palabras clave para poder comparar con la respuesta del estudiante.';\n          break;\n        case 3:\n          this.titPregTipo = 'Crear pregunta de Verdadero o Falso';\n          this.txtPregTipo = 'Esta pregunta debe tener dos opciones, una correcta y otra incorrecta.';\n          break;\n        case 4:\n          this.titPregTipo = 'Crear pregunta de tipo dicotómica (Si o No)';\n          this.txtPregTipo = 'Esta pregunta debe tener dos opciones, una correcta y otra incorrecta.';\n          break;\n        case 5:\n          this.titPregTipo = 'Crear pregunta de selección simple';\n          this.txtPregTipo = 'Esta pregunta puede tener solo una opción correcta. Las opciones pueden contener: solo texto, solo imágenes o ambas.';\n          break;\n        default:\n          this.titPregTipo = 'Crear pregunta abierta';\n          this.txtPregTipo = 'Esta pregunta no tiene una respuesta. Es una pregunta de opinión que se deberá calificar manualmente.';\n          break;\n      }\n    },\n    addTypeQuestion: function addTypeQuestion() {\n      switch (this.pregTipo) {\n        case 1:\n          this.titPregTipo = 'Crear pregunta de opción múltiple.';\n          this.txtPregTipo = 'Esta pregunta puede tener una o varias opciones correctas. Las opciones pueden contener: solo texto, solo imágenes o ambas.';\n          break;\n        case 2:\n          this.titPregTipo = 'Crear pregunta cerrada';\n          this.txtPregTipo = 'Esta pregunta debe ser respondida de forma escrita. La respuesta correcta debe contener palabras clave para poder comparar con la respuesta del estudiante.';\n          break;\n        case 3:\n          this.titPregTipo = 'Crear pregunta de Verdadero o Falso';\n          this.txtPregTipo = 'Esta pregunta debe tener dos opciones, una correcta y otra incorrecta.';\n          break;\n        case 4:\n          this.titPregTipo = 'Crear pregunta de tipo dicotómica (Si o No)';\n          this.txtPregTipo = 'Esta pregunta debe tener dos opciones, una correcta y otra incorrecta.';\n          break;\n        case 5:\n          this.titPregTipo = 'Crear pregunta de selección simple';\n          this.txtPregTipo = 'Esta pregunta puede tener solo una opción correcta. Las opciones pueden contener: solo texto, solo imágenes o ambas.';\n          break;\n        default:\n          this.titPregTipo = 'Crear pregunta abierta';\n          this.txtPregTipo = 'Esta pregunta no tiene una respuesta. Es una pregunta de opinión que se deberá calificar manualmente.';\n          break;\n      }\n    },\n    agregar: function agregar() {\n      var me = this;\n      if (me.pregunta.descripcion.trim() === '' || me.pregunta.tema === '' || me.pregunta.tema === undefined || me.pregunta.tema === null || this.pregunta.puntaje_pregunta === '' || me.pregunta.puntaje_pregunta === undefined) {\n        me.$vs.notify({\n          text: 'Debe completar todos los campos antes de guardar',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        return;\n      }\n      if (me.pregunta.tema.id === '') {\n        me.$vs.notify({\n          text: 'Seleccione un ' + me.tema_ambito + ' antes de guardar',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        return;\n      }\n      me.$vs.loading();\n      var fileImgPreg;\n      fileImgPreg = document.getElementById(\"file1\").files[0];\n      me.pregunta.file1 = fileImgPreg;\n      var formData = new FormData();\n      formData.append('descripcion', me.pregunta.descripcion);\n      formData.append('tema', me.pregunta.tema.id);\n      formData.append('img_pregunta', fileImgPreg);\n      formData.append('id_tipo_pregunta', me.pregTipo);\n      formData.append('puntaje_pregunta', me.pregunta.puntaje_pregunta);\n      formData.append('idusuario', me.usuario.idusuario);\n      formData.append('estado', me.pregunta.estado);\n      axios.post(this.$data_url + 'api/pregunta', formData).then(function (res) {\n        me.guardadoActivo = true;\n        me.id_preguntaActiva = res.data.id;\n        me.filtrarTipos();\n        me.$vs.notify({\n          text: 'Pregunta creada exitosamente',\n          color: 'success',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n      }).catch(function (error) {\n        console.log(error + ': error al crear pregunta');\n      });\n    },\n    cargarOpcion: function cargarOpcion() {\n      var me = this;\n      if (me.id_preguntaActiva === '') {\n        me.$vs.notify({\n          text: 'Debe crear una pregunta antes de cargar las opciones.',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n      } else {\n        me.$vs.loading();\n        var formData = new FormData();\n        var fileImgPreg = document.getElementById(\"file2\").files[0];\n        var tipo = 0;\n        if (me.opcion.tipo === true) {\n          tipo = 1;\n        }\n        formData.append('opcion', me.opcion.opcion);\n        formData.append('id_pregunta', me.id_preguntaActiva);\n        formData.append('img_opcion', fileImgPreg);\n        formData.append('tipo', tipo);\n        formData.append('cant_coincidencias', 0);\n        axios.post(this.$data_url + 'api/cargarOpcion', formData).then(function (res) {\n          me.opciones = res.data;\n          me.opcion.opcion = '';\n          me.opcion.tipo = '';\n          me.src_imagen_opcion = '';\n          document.getElementById(\"file2\").value = '';\n          me.msgExito('cargada');\n        }).catch(function (error) {\n          console.log(error);\n        });\n      }\n    },\n    cargarOpcionAbierta: function cargarOpcionAbierta() {\n      var me = this;\n      if (me.pregunta.cant_coincidencias === '' || me.pregunta.cant_coincidencias === undefined || me.pregunta.cant_coincidencias < 0) {\n        me.$vs.notify({\n          text: 'Ingrese la cantidad de coincidencias de palabras clave.',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        return;\n      }\n      if (me.id_preguntaActiva === '') {\n        me.$vs.notify({\n          text: 'Debe crear una pregunta antes de cargar las opciones.',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n      } else {\n        me.$vs.loading();\n        var tipo = 1;\n        var palabrasV = me.palabras_clave.replace(/ /gi, '');\n        var formData = new FormData();\n        formData.append('opcion', palabrasV);\n        formData.append('id_pregunta', me.id_preguntaActiva);\n        formData.append('img_opcion', null);\n        formData.append('tipo', tipo);\n        formData.append('cant_coincidencias', parseInt(me.pregunta.cant_coincidencias));\n        this.$http.post(this.$server_url + 'cargarOpcion', formData).then(function (res) {\n          me.opciones = res.data;\n          me.opcion.opcion = '';\n          me.opcion.tipo = '';\n          me.src_imagen_opcion = '';\n          me.msgExito('guardada');\n        }).catch(function (error) {\n          console.log(error);\n        });\n      }\n    },\n    cargarOpcionesDico: function cargarOpcionesDico() {\n      var me = this;\n      if (me.id_preguntaActiva === '') {\n        me.$vs.notify({\n          text: 'Debe crear una pregunta antes de cargar las opciones.',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n      } else {\n        me.$vs.loading();\n        var formData = new FormData();\n        formData.append('opcion', me.opcion.opcion);\n        formData.append('id_pregunta', me.id_preguntaActiva);\n        formData.append('img_opcion', null);\n        formData.append('tipo', 1);\n        formData.append('cant_coincidencias', 0);\n        this.$http.post(this.$server_url + 'cargarOpcionDico', formData).then(function (res) {\n          me.opcion.opcion = '';\n          me.opcion.tipo = '';\n          me.src_imagen_opcion = '';\n          me.msgExito('guardada');\n        }).catch(function (error) {\n          console.log(error);\n        });\n      }\n    },\n    confirmEditarOpcion: function confirmEditarOpcion(item) {\n      var me = this;\n      me.editarOpcionActiva = false;\n      var fileImgOpcion;\n      fileImgOpcion = document.getElementById(\"file2\").files[0];\n      if (fileImgOpcion === undefined) {\n        fileImgOpcion = item.img_opcion;\n      }\n      var tipo = 0;\n      if (me.opcion.tipo === true || me.opcion.tipo === 1) {\n        tipo = 1;\n      }\n      var formData = new FormData();\n      formData.append('opcion', me.opcion.opcion);\n      formData.append('tipo', tipo);\n      formData.append('img_opcion', fileImgOpcion);\n      formData.append('img_opcion_old', img_opcion_old);\n      formData.append('id_opcion_pregunta', item.id_opcion_pregunta);\n      formData.append('id_pregunta', item.id_pregunta);\n      formData.append('cant_coincidencias', 0);\n      axios.post(this.$data_url + 'api/editarOpcion', formData).then(function (res) {\n        me.opciones = res.data;\n        me.editarOpcionActiva = false;\n        me.opcion.opcion = '';\n        me.opcion.tipo = '';\n        me.src_imagen_opcion = '';\n        me.msgExito('cargada');\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    editarOpcion: function editarOpcion(item) {\n      var me = this;\n      location.href = '#editar';\n      me.opcion.opcion = '';\n      document.getElementById(\"file2\").value = '';\n      me.opcion.opcion = item.opcion;\n      me.opcion.tipo = item.tipo;\n      me.opcion.id_opcion_pregunta = item.id_opcion_pregunta;\n      me.opcion.id_pregunta = item.id_pregunta;\n      img_opcion_old = item.img_opcion;\n      me.src_imagen_opcion = this.$data_url + 'archivos/img/img_preguntas/' + item.img_opcion;\n    },\n    editarOpcionesDico: function editarOpcionesDico() {\n      var me = this;\n      me.$vs.loading();\n      var formData = new FormData();\n      formData.append('opcion', me.opcion.opcion);\n      formData.append('id_pregunta', me.id_preguntaActiva);\n      formData.append('img_opcion', null);\n      formData.append('tipo', 1);\n      formData.append('id_opcion', 1);\n      formData.append('cant_coincidencias', 0);\n      this.$http.post(this.$server_url + 'cargarOpcionDico', formData).then(function (res) {\n        me.msgExito('editada');\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    confirmarEliminarPreg: function confirmarEliminarPreg() {\n      this.$vs.dialog({\n        type: 'confirm',\n        color: 'danger',\n        title: 'Confirmar',\n        acceptText: 'Si, deseo eliminar',\n        cancelText: 'Cancelar',\n        text: '¿Está seguro de eliminar esta pregunta?',\n        accept: this.eliminarPregunta\n      });\n    },\n    eliminarPregunta: function eliminarPregunta() {\n      var me = this;\n      axios.get(this.$data_url + 'api/eliminarPregunta?id=' + me.datosEliminar.id).then(function (res) {\n        // this.$http.get(this.$server_url+`eliminarPregunta/`+me.datosEliminar.id).then(() => {\n        if (res.data.status == 0) {\n          me.$vs.notify({\n            text: res.data.message,\n            color: 'warning',\n            iconPack: 'feather',\n            icon: 'icon-check',\n            time: 4000\n          });\n          return;\n        }\n        me.filtrarTipos();\n\n        /*this.$http.get(this.$server_url+'preguntasDocente/'+me.usuario.idusuario).then(res => {\r\n            me.preguntas = res.data;\r\n            me.$vs.loading.close()\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error + ': error al eliminar pregunta');\r\n        })*/\n      }).catch(function (error) {\n        alert(error + 'NO SE PUEDE ELIMINAR ESTA PREGUNTA, YA QUE SE ESTÁ UTILIZANDO EN UNA EVALUACIÓN.');\n      });\n    },\n    quitarOpcion: function quitarOpcion(item) {\n      var me = this;\n      me.$vs.loading();\n      this.$http.get(this.$server_url + 'quitarOpcion/' + item.id_opcion_pregunta).then(function (res) {\n        me.removeItemFromArr(me.opciones, item);\n        me.$vs.loading.close();\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    editarFormulario: function editarFormulario(item) {\n      var me = this;\n      me.limpiar();\n      me.pregTipo = item.id_tipo_pregunta;\n      me.addTypeQuestion();\n      me.id_preguntaActiva = item.id;\n      me.temaSelected = {\n        id: item.id_tema,\n        label: item.nombre_tema\n      };\n      me.pregunta.descripcion = item.descripcion;\n      me.pregunta.tema = {\n        id: item.id_tema,\n        label: item.nombre_tema\n      };\n      me.pregunta.id = item.id;\n      me.pregunta.img_pregunta = item.img_pregunta;\n      me.pregunta.puntaje_pregunta = item.puntaje_pregunta;\n      me.pregunta.estado = item.estado;\n      img_preg_old = item.img_pregunta;\n      me.srcPreguntaAQuitar = item.img_pregunta;\n      if (item.img_pregunta != '') {\n        me.src_imagen_pregunta = this.$data_url + 'archivos/img/img_preguntas/' + item.img_pregunta;\n      }\n      me.editarActivo = true;\n      ///mostrar opciones\n      this.$http.get(this.$server_url + 'verOpciones/' + item.id).then(function (res) {\n        if (res.data.length > 0) {\n          me.opciones = res.data;\n          me.palabras_clave = res.data[0].opcion;\n          me.id_opcion_tipo234 = res.data[0].id_opcion_pregunta;\n          me.opcion.opcion = res.data[0].opcion;\n          me.pregunta.cant_coincidencias = res.data[0].cant_coincidencias;\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    quitarImagen: function quitarImagen() {\n      var me = this;\n      me.src_imagen_pregunta = '';\n      document.getElementById(\"file1\").value = '';\n      img_preg_old = '';\n    },\n    editarPregunta: function editarPregunta() {\n      var me = this;\n      if (me.pregunta.estado == \"\" || me.pregunta.estado == null || me.pregunta.estado == undefined) {\n        me.$vs.notify({\n          text: 'Debe seleccionar un estado para la pregunta',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        return;\n      }\n      if (me.pregunta.descripcion.trim() === '' || me.pregunta.tema === '' || me.pregunta.tema === undefined || me.pregunta.tema === null || me.pregunta.puntaje_pregunta === '' || me.pregunta.puntaje_pregunta === undefined) {\n        me.$vs.notify({\n          text: 'Debe completar todos los campos antes de guardar',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        return;\n      }\n      me.$vs.loading();\n      var fileImgPreg;\n      var formData = new FormData();\n      fileImgPreg = document.getElementById(\"file1\").files[0];\n      if (fileImgPreg === undefined) {\n        // fileImgPreg = me.pregunta.img_pregunta;\n        formData.append('img_pregunta', \"\");\n      } else {\n        formData.append('img_pregunta', fileImgPreg);\n      }\n      formData.append('descripcion', me.pregunta.descripcion);\n      formData.append('tema', me.pregunta.tema.id);\n      // formData.append('img_pregunta', fileImgPreg);\n      formData.append('img_pregunta_old', img_preg_old);\n      formData.append('id', me.pregunta.id);\n      formData.append('puntaje_pregunta', me.pregunta.puntaje_pregunta);\n      formData.append('idusuario', me.usuario.idusuario);\n      formData.append('estado', me.pregunta.estado);\n      formData.append('srcPreguntaAQuitar', me.srcPreguntaAQuitar);\n      axios.post(this.$data_url + 'api/pregunta', formData).then(function (res) {\n        document.getElementById(\"file1\").value = '';\n        me.msgExito('editada');\n        me.srcPreguntaAQuitar = '';\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    mostrarImg: function mostrarImg(file, img) {\n      var me = this;\n      me.src_imagen_opcion = ' ';\n      me.src_imagen_pregunta = ' ';\n      var archivo = document.getElementById(\"file\" + file).files[0];\n      var reader = new FileReader();\n      if (me) {\n        reader.readAsDataURL(archivo);\n        reader.onloadend = function () {\n          //document.getElementById(\"img\"+img).style.display = \"block\";\n          document.getElementById(\"img\" + img).src = reader.result;\n        };\n      }\n    },\n    removeItemFromArr: function removeItemFromArr(arr, item) {\n      var i = arr.indexOf(item);\n      arr.splice(i, 1);\n    },\n    editarPalabrasclave: function editarPalabrasclave() {\n      var me = this;\n      if (me.pregunta.cant_coincidencias === '' || me.pregunta.cant_coincidencias === undefined || me.pregunta.cant_coincidencias < 0) {\n        me.$vs.notify({\n          text: 'Ingrese la cantidad de coincidencias de palabras clave.',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        return;\n      }\n      var cantCoin = parseInt(me.pregunta.cant_coincidencias);\n      if (me.id_opcion_tipo234 != '') {\n        me.$vs.loading();\n        var palabrasV = me.palabras_clave.replace(/ /gi, '');\n        var formData = new FormData();\n        formData.append('opcion', palabrasV);\n        formData.append('tipo', 1);\n        formData.append('img_opcion', '');\n        formData.append('img_opcion_old', '');\n        formData.append('id_opcion_pregunta', me.id_opcion_tipo234);\n        formData.append('id_pregunta', me.pregunta.id);\n        formData.append('cant_coincidencias', cantCoin);\n        this.$http.post(this.$server_url + 'editarOpcion', formData).then(function (res) {\n          me.opciones = res.data;\n          me.editarOpcionActiva = false;\n          me.opcion.opcion = '';\n          me.opcion.tipo = '';\n          me.src_imagen_opcion = '';\n          me.msgExito('editada');\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else {\n        me.cargarOpcionAbierta();\n      }\n    },\n    msgExito: function msgExito(tipo_msg) {\n      var me = this;\n      me.preguntas = [];\n      var tipobanco;\n      if (me.bancoSelected === null || me.bancoSelected === '') {\n        tipobanco = 'todos';\n      } else {\n        if (me.bancoSelected.id === '3') {\n          tipobanco = 'todos';\n        }\n        if (me.bancoSelected.id === '1') {\n          tipobanco = 'prolipa';\n        }\n        if (me.bancoSelected.id === '2') {\n          tipobanco = 'docente';\n        }\n      }\n      me.tipoSelected = '';\n      var formData = new FormData();\n      formData.append('id', me.pregunta.tema.id);\n      formData.append('tipobanco', tipobanco);\n      formData.append('usuario', me.usuario.idusuario);\n      formData.append('id_group', me.usuario.id_group);\n      formData.append('institucion_id', me.usuario.institucion_idInstitucion);\n      var url = \"\";\n      if (me.usuario.id_group == 6) {\n        url = 'preguntas_x_tema_Docente';\n      } else {\n        url = 'preguntasxtema';\n      }\n      this.$http.post(this.$server_url + url, formData).then(function (res) {\n        var datos = res.data;\n        if (datos.items) {\n          if (datos.items.length > 0) {\n            if (me.usuario.id_group == 6) {\n              me.preguntas = {\n                items: datos.items.filter(function (item) {\n                  return item.estado == 1;\n                })\n              };\n            } else {\n              me.preguntas = res.data;\n            }\n          }\n        }\n        me.editarActivo = false;\n        if (tipo_msg != 'cargada') {\n          me.popupTipoPreg = false;\n        }\n        me.$vs.loading.close();\n        me.$vs.notify({\n          text: 'Pregunta ' + tipo_msg + ' exitosamente',\n          color: 'success',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    verpreguntasxtema: function verpreguntasxtema() {\n      var me = this;\n      me.preguntas = [];\n      me.arrayQuestions = [];\n      if (me.pregunta.tema.id === undefined || me.pregunta.tema.id === null || me.pregunta.tema.id === '' || me.pregunta.tema === '') {\n        return;\n      }\n      var tipobanco;\n      if (me.bancoSelected === null || me.bancoSelected === '') {\n        tipobanco = 'todos';\n      } else {\n        if (me.bancoSelected.id === '3') {\n          tipobanco = 'todos';\n        }\n        if (me.bancoSelected.id === '1') {\n          tipobanco = 'prolipa';\n        }\n        if (me.bancoSelected.id === '2') {\n          tipobanco = 'docente';\n        }\n      }\n      me.$vs.loading();\n      me.tipoSelected = '';\n      var formData = new FormData();\n      formData.append('id', me.pregunta.tema.id);\n      formData.append('tipobanco', tipobanco);\n      formData.append('usuario', me.usuario.idusuario);\n      formData.append('id_group', me.usuario.id_group);\n      formData.append('institucion_id', me.usuario.institucion_idInstitucion);\n      var url = \"\";\n      if (me.usuario.id_group == 6) {\n        url = 'preguntas_x_tema_Docente';\n      } else {\n        url = 'preguntasxtema';\n      }\n      this.$http.post(this.$server_url + url, formData)\n      // this.$http.post(this.$server_url+'preguntasxtema', formData)\n      .then(function (res) {\n        me.$vs.loading.close();\n        var datos = res.data;\n        me.arrayQuestions = datos;\n        if (datos.items) {\n          if (datos.items.length > 0) {\n            if (me.usuario.id_group == 6) {\n              me.preguntas = {\n                items: datos.items.filter(function (item) {\n                  return item.estado == 1;\n                })\n              };\n            } else {\n              me.preguntas = res.data;\n            }\n          }\n        }\n      }).catch(function (error) {\n        me.$vs.loading.close();\n        console.log(error);\n        me.$vs.notify({\n          text: 'Hubo problemas con preguntas para este tema',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n      });\n    },\n    irTemas: function irTemas() {\n      var me = this;\n      me.popupTipoPreg = false;\n      window.location.href = me.urlOrigen;\n    },\n    filtrarPreguntas: function filtrarPreguntas() {\n      var me = this;\n      me.preguntas = [];\n      me.preguntas.id = '';\n      if (me.asignaturaSelected.id === undefined) {\n        me.$vs.notify({\n          text: 'Seleccione una asignatura antes de filtrar por Unidades',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        return;\n      }\n      if (me.asignaturaSelected.id === 113 || me.asignaturaSelected.id === 114 || me.asignaturaSelected.id === 115) {\n        me.tema_ambito = 'Ámbito';\n      } else {\n        me.tema_ambito = 'Tema';\n      }\n      if (me.unidadSelected.id === undefined) {\n        return;\n      }\n      me.temas = [];\n      me.pregunta.tema.id = '';\n      me.$vs.loading();\n      var formData = new FormData();\n      formData.append('asignatura', me.asignaturaSelected.id);\n      formData.append('unidad', me.unidadSelected.id);\n      this.$http.post(this.$server_url + 'temasignunidad', formData).then(function (res) {\n        var datos = res.data;\n        if (me.usuario.id_group == 6) {\n          me.temas = datos.filter(function (p) {\n            return p.tipo_tema == 0;\n          });\n          me.temas = me.temas.filter(function (p) {\n            return !p.nombre_tema.startsWith(\"0.\");\n          });\n        } else {\n          me.temas = datos;\n        }\n        me.$vs.loading.close();\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    filtrarTipos: function filtrarTipos() {\n      var me = this;\n      if (me.pregunta.tema.id === '') {\n        return;\n      }\n      if (me.tipoSelected === null || me.tipoSelected === undefined || me.tipoSelected === '' || me.tipoSelected === 'null') {\n        me.verpreguntasxtema();\n      } else {\n        me.preguntas = [];\n        me.preguntas = {\n          items: me.arrayQuestions.items.filter(function (item) {\n            return item.id_tipo_pregunta == me.tipoSelected.id;\n          })\n        };\n        // var tipobanco;\n        // if( me.bancoSelected===null || me.bancoSelected==='' ){\n        //     tipobanco ='todos'\n        // }else{\n        //     if( me.bancoSelected.id==='3'){\n        //         tipobanco = 'todos'\n        //     }\n        //     if(me.bancoSelected.id==='1'){\n        //         tipobanco = 'prolipa'\n        //     }\n        //     if(me.bancoSelected.id==='2'){\n        //         tipobanco = 'docente'\n        //     }\n        // }\n        // me.$vs.loading()\n        // const formData = new FormData();\n        // formData.append('tema',             me.pregunta.tema.id);\n        // formData.append('tipo',             me.tipoSelected.id);\n        // formData.append('usuario',          me.usuario.idusuario);\n        // formData.append('tipobanco',        tipobanco);\n        // formData.append('id_group',         me.usuario.id_group)\n        // formData.append('institucion_id',   me.usuario.institucion_idInstitucion)\n        // this.$http.post(this.$server_url+'preguntastipo', formData).then(res => {\n        //     me.preguntas = res.data;\n        //     me.$vs.loading.close()\n        // })\n        // .catch(function (error) {\n        //     console.log(error);\n        // })\n      }\n    },\n    cargarPreguntaEval: function cargarPreguntaEval(item) {\n      var me = this;\n      me.$vs.loading();\n      var formData = new FormData();\n      formData.append('id_evaluacion', localStorage.id_desde_eval);\n      formData.append('id_pregunta', item.id);\n      formData.append('grupo', localStorage.grupo_desde_eval);\n      me.$http.post(this.$server_url + 'pregEvaluacion', formData).then(function (res) {\n        var msg = 'Pregunta cargada correctamente';\n        if (res.data == 0) {\n          msg = 'No puede cargar más de una vez la misma pregunta';\n        }\n        me.$vs.loading.close();\n        me.$vs.notify({\n          text: msg,\n          color: 'success',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n      }).catch(function (error) {\n        me.$vs.loading.close();\n        console.log(error);\n      });\n    }\n  }\n};",{"version":3,"names":["flatPickr","Vue","axios","vSelect","moment","$","img_preg_old","img_opcion_old","data","asignaturas","asignatura","id","label","preguntas","pregunta","descripcion","tema","respuesta","opcion1","opcion2","opcion3","img_pregunta","img_respuesta","img_opcion1","img_opcion2","img_opcion3","puntaje_pregunta","estado","temas","id_asignatura","unidad","temaSelected","opcion","id_opcion_pregunta","id_pregunta","img_opcion","tipo","opciones","editarActivo","popupAddPreg","popupEditPreg","popupTipoPreg","popupAddPregVarOp","pregSelected","pregTipo","titPregTipo","txtPregTipo","active1","tipo_opcion","cargarOpcionActivo","guardadoActivo","usuario","docente","id_preguntaActiva","editarOpcionActiva","src_imagen_pregunta","src_imagen_opcion","palabras_clave","id_opcion_tipo234","urlOrigen","url","id_pregunta_creada","opcionselecradio","asignaturaSelected","unidadSelected","unidades","tipoSelected","tipos","datosEliminar","idPregEliminar","bancoSelected","bancos","tema_ambito","arrayQuestions","srcPreguntaAQuitar","components","created","me","$vs","loading","JSON","parse","localStorage","getItem","idusuario","location","pathname","split","urlBack","window","href","urlV","undefined","$http","get","$server_url","then","res","close","idasignatura","nombreasignatura","methods","onResize","innerWidth","isMobile","limpiar","cant_coincidencias","addTypeQuestion","agregar","trim","notify","text","color","iconPack","icon","fileImgPreg","document","getElementById","files","file1","formData","FormData","append","post","$data_url","filtrarTipos","catch","error","console","log","cargarOpcion","value","msgExito","cargarOpcionAbierta","palabrasV","replace","parseInt","cargarOpcionesDico","confirmEditarOpcion","item","fileImgOpcion","editarOpcion","editarOpcionesDico","confirmarEliminarPreg","dialog","type","title","acceptText","cancelText","accept","eliminarPregunta","status","message","time","alert","quitarOpcion","removeItemFromArr","editarFormulario","id_tipo_pregunta","id_tema","nombre_tema","length","quitarImagen","editarPregunta","mostrarImg","file","img","archivo","reader","FileReader","readAsDataURL","onloadend","src","result","arr","i","indexOf","splice","editarPalabrasclave","cantCoin","tipo_msg","tipobanco","id_group","institucion_idInstitucion","datos","items","filter","verpreguntasxtema","irTemas","filtrarPreguntas","p","tipo_tema","startsWith","cargarPreguntaEval","id_desde_eval","grupo_desde_eval","msg"],"sources":["src/views/evaluaciones/PreguntasComponent.vue"],"sourcesContent":["<template>\r\n<div >\r\n<!------ELEGIR TIPO PREGUNTA--------->\r\n  <vs-popup fullscreen classContent=\"popup-example\" title=\"Crear Preguntas\" :active.sync=\"popupTipoPreg\">\r\n    <div class=\"vx-row\">\r\n      <div class=\"vx-col sm:w-1/4 w-full mb-4\">\r\n          <vx-card v-if=\"usuario.id_group === 1 || usuario.id_group === 5\">\r\n              <div class=\"btn-group\" align=\"center\">\r\n                  <vs-button type=\"flat\" v-if=\"usuario.id_group === 1 || usuario.id_group === 5 || asignaturaSelected.id>619\" color=\"primary\" @click=\"irTemas\">Crear {{tema_ambito}}</vs-button>\r\n              </div>\r\n              <vs-divider v-if=\"editarActivo===false\"/>\r\n              <div class=\"btn-group\" align=\"center\" v-if=\"editarActivo===false\">\r\n                  <vs-button type=\"flat\" class=\"w-full\" @click=\"pregTipo = 5; limpiar(); pregunta.puntaje_pregunta = 1; \">Selección simple</vs-button>\r\n                  <vs-button type=\"flat\" class=\"w-full\" @click=\"pregTipo = 1; limpiar(); pregunta.puntaje_pregunta = 1; \">Opción múltiple</vs-button>\r\n                  <vs-button type=\"flat\" class=\"w-full\" @click=\"pregTipo = 3; limpiar(); pregunta.puntaje_pregunta = 0.5; \">Verdadero/Falso</vs-button>\r\n                  <!--<vs-button type=\"flat\" class=\"w-full\" @click=\"pregTipo = 4; limpiar()\" style=\"min-width: 150px;\">Si/No</vs-button>-->\r\n                  <vs-button type=\"flat\" class=\"w-full\" @click=\"pregTipo = 2; limpiar(); pregunta.puntaje_pregunta = 2; \">Pregunta cerrada</vs-button>\r\n                  <vs-button type=\"flat\" class=\"w-full\" @click=\"pregTipo = 6; limpiar(); pregunta.puntaje_pregunta = 2; \">Pregunta abierta</vs-button>\r\n              </div>\r\n          </vx-card>\r\n          <vx-card v-if=\"usuario.id_group === 6\">\r\n              <div class=\"btn-group\" align=\"center\" v-if=\"editarActivo===false\">\r\n                  <vs-button type=\"flat\" class=\"w-full\" @click=\"pregTipo = 5; limpiar(); pregunta.puntaje_pregunta = 1; \">Selección simple</vs-button>\r\n                  <vs-button type=\"flat\" class=\"w-full\" @click=\"pregTipo = 1; limpiar(); pregunta.puntaje_pregunta = 1; \">Opción múltiple</vs-button>\r\n                  <vs-button type=\"flat\" class=\"w-full\" @click=\"pregTipo = 3; limpiar(); pregunta.puntaje_pregunta = 0.5; \">Verdadero/Falso</vs-button>\r\n                  <!--<vs-button type=\"flat\" class=\"w-full\" @click=\"pregTipo = 4; limpiar()\" style=\"min-width: 150px;\">Si/No</vs-button>-->\r\n                  <vs-button type=\"flat\" class=\"w-full\" @click=\"pregTipo = 2; limpiar(); pregunta.puntaje_pregunta = 2; \">Pregunta cerrada</vs-button>\r\n                  <vs-button type=\"flat\" class=\"w-full\" @click=\"pregTipo = 6; limpiar(); pregunta.puntaje_pregunta = 2; \">Pregunta abierta</vs-button>\r\n              </div>\r\n          </vx-card>\r\n      </div>\r\n      <!-------FIN BOTONES TIPOS PREGUNTA------------>\r\n      <!-------INICIO MODAL CREAR PREGUNTAS--------->\r\n      <div class=\"vx-col sm:w-3/4 w-full\">\r\n      <vx-card v-bind:title=\"titPregTipo\" title-color=\"primary\" v-bind:subtitle=\"txtPregTipo\">\r\n          <vs-tabs alignment=\"fixed\">\r\n          <vs-tab label=\"Pregunta\">\r\n            <div class=\"vx-row mb-5 mt-4\">\r\n                <!------------SELEC TEMA PREGUNTA-------------------->\r\n                <div class=\"vx-col sm:w-1/2 w-full\">\r\n                    Asignatura\r\n                    <v-select class=\"mb-2\" v-model=\"asignaturaSelected\" :options=\"asignaturas\" @input=\"filtrarPreguntas()\" :dir=\"$vs.rtl ? 'rtl' : 'ltr'\" />\r\n                </div>\r\n                <div class=\"vx-col sm:w-1/2 w-full\">\r\n                  Unidad\r\n                    <v-select class=\"mb-2\" v-model=\"unidadSelected\" :options=\"unidades\" @input=\"filtrarPreguntas()\" :dir=\"$vs.rtl ? 'rtl' : 'ltr'\" />\r\n                </div>\r\n                <div class=\"vx-col w-full\">\r\n                    {{tema_ambito}}\r\n                    <vx-input-group class=\"mb-2\">\r\n                        <v-select v-model=\"pregunta.tema\" @input=\"verpreguntasxtema()\" :options=\"temas\" :dir=\"$vs.rtl ? 'rtl' : 'ltr'\" />\r\n                        <template slot=\"append\">\r\n                            <div class=\"append-text btn-addon\">\r\n                            <vs-button color=\"primary\" v-if=\"usuario.id_group === 1 || usuario.id_group === 5 || asignaturaSelected.id>619\" @click=\"$router.push('/temas')\">Crear {{tema_ambito}}</vs-button>\r\n                            </div>\r\n                        </template>\r\n                    </vx-input-group>\r\n                </div>\r\n                <!------------FIN SELEC TEMA PREGUNTA-------------------->\r\n\r\n            </div>\r\n            <div class=\"vx-row mb-5\">\r\n                <div class=\"vx-col w-full\">\r\n                    <div style=\"border: 1px solid #d5d5d5; border-radius: 10px; padding: 5px 5px 5px 5px;\" align=\"center\" class=\"mb-2\">\r\n                        <input type=\"file\" name=\"file1\" id=\"file1\" class=\"inputfile\" style=\"display: none;\" v-on:change=\"mostrarImg(1,1)\">\r\n                        <label for=\"file1\" style=\"margin-bottom: -10px; cursor: pointer; color: gray; width: 100%; font-size: 11px; line-height: 80%;\" class=\"font-bold\">\r\n                            Click aquí para subir imagen de la pregunta\r\n                        </label>\r\n                        <div v-if=\"src_imagen_pregunta==='' || src_imagen_pregunta===null || src_imagen_pregunta==='null'\"></div>\r\n                        <div v-else>\r\n                          <img id=\"img1\" class=\"img-responsive mb-2\" v-bind:src=\"src_imagen_pregunta\" style=\"border-radius: 5px;\">\r\n                          <!--button para quitar-->\r\n                          <vs-button @click=\"quitarImagen()\" class=\"mt-5\" color=\"danger\" icon-pack=\"feather\" icon=\"icon-x\">Quitar</vs-button>\r\n                        </div>\r\n                    </div>\r\n                    <!--<div align=\"center\">\r\n                        <vs-button color=\"danger\" type=\"line\" icon-pack=\"feather\" icon=\"icon-trash\" size=\"small\" @click=\"src_imagen_pregunta = ''\"></vs-button>\r\n                    </div>-->\r\n                </div>\r\n                <div class=\"vx-col w-full\">\r\n                    <vs-textarea class=\"mb-4\" label=\"Nombre Pregunta\" v-model=\"pregunta.descripcion\"  height=\"80px\"/>\r\n                </div>\r\n                <div class=\"vx-col sm:w-full w-full\">\r\n                    <ul class=\"leftx\">\r\n                        <li>\r\n                        <vs-radio v-model=\"pregunta.estado\" vs-name=\"radios1estado\" vs-value=\"1\">Activo</vs-radio>\r\n                        </li>\r\n                        <li>\r\n                        <vs-radio v-model=\"pregunta.estado\" vs-name=\"radios1estado\" vs-value=\"0\">Desactivado</vs-radio>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div class=\"vx-col sm:w-1/2 w-full\">\r\n                    <vs-input disabled v-if=\"usuario.institucion_idInstitucion != 66\" type=\"number\" class=\"mb-4 w-full\" label=\"Puntaje\" placeholder=\"Puntaje\" v-model=\"pregunta.puntaje_pregunta\"/>\r\n                    <vs-input v-else disabled type=\"number\" class=\"mb-4 w-full\" label=\"Puntaje\" placeholder=\"Puntaje\" v-model=\"pregunta.puntaje_pregunta\"/>\r\n                </div>\r\n                <div class=\"vx-col sm:w-1/2 w-full mb-2\" align=\"right\">\r\n                    <div v-if=\"editarActivo===true\">\r\n                        <vs-button class=\"w-full mt-6\" @click=\"editarPregunta\" type=\"filled\">Editar pregunta</vs-button>\r\n                    </div>\r\n\r\n                    <div v-else>\r\n                        <vs-button class=\"w-full mt-6\" v-if=\"guardadoActivo===false\" color=\"success\" type=\"filled\" @click=\"agregar()\">Guardar pregunta</vs-button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n          </vs-tab>\r\n          <!-------INICIO TAB OPCIONES PREG TIPO 1, 5----->\r\n          <vs-tab label=\"Opciones\" v-if=\"pregTipo===1 || pregTipo===5\">\r\n              <div class=\"vx-col w-full mb-2\" style=\"padding: 10px;\">\r\n              <vs-divider position=\"left\" color=\"success\">Crear opciones</vs-divider>\r\n\r\n              <div class=\"vx-row mb-2\" id=\"editar\">\r\n                  <div class=\"vx-col w-full mb-1\">\r\n                      <div style=\"border: 1px solid #d5d5d5; border-radius: 5px; padding: 5px 5px 5px 5px;\" align=\"center\">\r\n                          <input type=\"file\" name=\"file2\" id=\"file2\" class=\"inputfile\" style=\"display: none;\" v-on:change=\"mostrarImg(2,2)\">\r\n                          <label for=\"file2\" style=\"margin-bottom: -10px; cursor: pointer; color: gray; width: 100%; font-size: 11px;\">\r\n                              Click aquí para subir imagen\r\n                          </label>\r\n                          <div v-if=\"src_imagen_opcion==='' || src_imagen_opcion===null || src_imagen_opcion==='null'\"></div>\r\n                          <img id=\"img2\" style=\"border-radius: 5px;\" class=\"img-responsive mb-2\" v-bind:src=\"src_imagen_opcion\" v-else>\r\n                      </div>\r\n                      <!--<div align=\"center\">\r\n                          <vs-button color=\"danger\" type=\"line\" icon-pack=\"feather\" icon=\"icon-trash\" size=\"small\" @click=\"src_imagen_opcion = ''\"></vs-button>\r\n                      </div>-->\r\n\r\n                      <vs-textarea class=\"mt-2\" label=\"Nombre Opción\" v-model=\"opcion.opcion\" height=\"60px\"/>\r\n                  </div>\r\n\r\n                  <div class=\"vx-row w-full\" v-if=\"pregTipo===1 || pregTipo===5\">\r\n\r\n                      <div class=\"vx-col sm:w-1/2 w-full\" align=\"center\">\r\n                          <vs-switch style=\"width: 100px;\" color=\"success\" class=\"mt-3 mb-5\" v-model=\"opcion.tipo\">\r\n                              <span slot=\"on\">Correcta</span>\r\n                              <span slot=\"off\">Incorrecta</span>\r\n                          </vs-switch>\r\n                      </div>\r\n                      <div class=\"vx-col sm:w-1/2 w-full mb-1\" align=\"center\">\r\n                          <vs-button v-if=\"editarOpcionActiva===false\" color=\"success\" type=\"flat\" icon-pack=\"feather\" icon=\"icon-plus\" @click=\"cargarOpcion()\">Agregar</vs-button>\r\n\r\n                          <vs-button v-else color=\"primary\" class=\"w-full\" type=\"flat\" icon-pack=\"feather\" icon=\"icon-edit-1\" @click=\"confirmEditarOpcion(opcion)\">Editar</vs-button>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n              </div>\r\n\r\n              <div class=\"vx-col w-full\">\r\n              <vs-divider position=\"center\" color=\"primary\">Opciones agregadas</vs-divider>\r\n\r\n              <div class=\"vx-row mb-3\" :key=\"indexitem\" v-for=\"(item, indexitem) in opciones\">\r\n\r\n                  <div class=\"vx-col sm:w-1/5 w-full\" align=\"center\">\r\n                      <img v-if=\"item.img_opcion\" style=\"border-radius: 5px;\" v-bind:src=\"$data_url+'archivos/img/img_preguntas/'+item.img_opcion\" width=\"100%\">\r\n                  </div>\r\n                  <div class=\"vx-col sm:w-4/5 w-full\">\r\n                      <vs-input class=\"w-full\" v-model=\"item.opcion\"/>\r\n\r\n                      <div class=\"vx-row\" align=\"center\">\r\n                      <div class=\"vx-col sm:w-1/3 w-full\">\r\n                          <vs-switch style=\"width: 100px;\" disabled=\"true\" color=\"success\" class=\"mt-3 mb-5\" v-model=\"item.tipo\">\r\n                              <span slot=\"on\">Correcta</span>\r\n                              <span slot=\"off\">Incorrecta</span>\r\n                          </vs-switch>\r\n                      </div>\r\n                      <div class=\"vx-col sm:w-1/3 w-full\">\r\n                          <vs-button color=\"primary\" type=\"line\" icon-pack=\"feather\" icon=\"icon-edit-1\" size=\"small\" @click=\"src_imagen_opcion=''; editarOpcionActiva=true; editarOpcion(item)\">Editar</vs-button>\r\n                      </div>\r\n                      <div class=\"vx-col sm:w-1/3 w-full\">\r\n                          <vs-button color=\"danger\" type=\"line\" icon-pack=\"feather\" icon=\"icon-trash\" size=\"small\" @click=\"quitarOpcion(item)\">Eliminar</vs-button>\r\n                      </div>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n              </div>\r\n          </vs-tab>\r\n          <!-------FIN TAB OPCIONES PREG TIPO 1, 5----->\r\n          <!-------INICIO TAB OPCIONES PREG TIPO 3, 4----->\r\n          <vs-tab label=\"Respuesta\" v-if=\"pregTipo===3 || pregTipo===4\">\r\n              <div v-if=\"pregTipo===3\" class=\"mt-6\">\r\n\r\n              <div v-if=\"opciones.length > 0\">\r\n                  <vx-card class=\"mb-3\" :key=\"indexitem\" v-for=\"(item, indexitem) in opciones\">\r\n                      <vs-radio v-model=\"opcion.opcion\" v-bind:vs-value=\"item.opcion\">{{item.opcion}}</vs-radio>\r\n                  </vx-card>\r\n              </div>\r\n              <div v-else>\r\n                  <vx-card class=\"mb-4 mt-6\">\r\n                      <vs-radio v-model=\"opcion.opcion\" vs-value=\"Verdadero\">Verdadero</vs-radio>\r\n                  </vx-card>\r\n\r\n                  <vx-card class=\"mb-4\">\r\n                      <vs-radio v-model=\"opcion.opcion\" vs-value=\"Falso\">Falso</vs-radio>\r\n                  </vx-card>\r\n              </div>\r\n              </div>\r\n\r\n              <div v-if=\"pregTipo===4\" class=\"mt-6\">\r\n              <div v-if=\"opciones.length > 0\">\r\n                  <vx-card class=\"mb-3\" :key=\"indexitem\" v-for=\"(item, indexitem) in opciones\">\r\n                      <vs-radio v-model=\"opcion.opcion\" v-bind:vs-value=\"item.opcion\">{{item.opcion}}</vs-radio>\r\n                  </vx-card>\r\n              </div>\r\n              <div v-else>\r\n                  <vx-card class=\"mb-4 mt-6\">\r\n                      <vs-radio v-model=\"opcion.opcion\" vs-value=\"Si\">Si</vs-radio>\r\n                  </vx-card>\r\n\r\n                  <vx-card class=\"mb-4\">\r\n                      <vs-radio v-model=\"opcion.opcion\" vs-value=\"No\">No</vs-radio>\r\n                  </vx-card>\r\n              </div>\r\n              </div>\r\n\r\n              <div class=\"vx-col w-full mt-6\" align=\"right\">\r\n                  <vs-button v-if=\"editarActivo===true\" color=\"primary\" type=\"filled\" icon-pack=\"feather\" icon=\"icon-edit-1\" @click=\"editarOpcionesDico()\">Editar</vs-button>\r\n\r\n                  <vs-button v-else color=\"success\" type=\"filled\" @click=\"cargarOpcionesDico()\">Guardar</vs-button>\r\n              </div>\r\n          </vs-tab>\r\n          <!-------FIN TAB OPCIONES PREG TIPO 3, 4----->\r\n          <!-------INICIO TAB OPCIONES PREG CERRADA-------->\r\n          <vs-tab label=\"Palabras Clave\" v-if=\"pregTipo===2\">\r\n              <div class=\"vx-row mt-6\">\r\n                  <div class=\"vx-col w-full\">\r\n                      <vs-alert :active.sync=\"active1\" closable icon-pack=\"feather\" close-icon=\"icon-x\" class=\"mb-3\">\r\n                          Ejemplo: Forma correcta: <span style=\"color: green;\">24, mayo, 1822</span> - Forma Incorrecta: <span style=\"color: red;\">24 de mayo, 1822 </span>\r\n                      </vs-alert>\r\n\r\n                      <div style=\"color: #1A76FA;\" class=\"mb-4 w-full\">Evite usar caracteres especiales como: punto, signos de expresión etc...</div>\r\n\r\n                      <vs-textarea class=\"mb-3\" label=\"Palabras clave de la respuesta\" placeholder=\"Escriba las palabras clave de la respuesta separadas por una coma (,).\" v-model=\"palabras_clave\"  height=\"70px\"/>\r\n                  </div>\r\n              </div>\r\n\r\n              <div class=\"vx-row w-full\">\r\n                  <div class=\"vx-col sm:w-1/2 w-full\">\r\n                      <vs-input type=\"number\" class=\"mb-2 w-full\" label=\"Cantidad de coincidencias\" v-model=\"pregunta.cant_coincidencias\"/>\r\n                  </div>\r\n                  <div class=\"vx-col sm:w-1/2 w-full mt-5\">\r\n                      <vs-button class=\"w-full\" v-if=\"editarActivo===true\" @click=\"editarPalabrasclave\" type=\"filled\">Editar</vs-button>\r\n\r\n                      <vs-button class=\"w-full\" v-else @click=\"cargarOpcionAbierta\" color=\"success\" type=\"filled\">Guardar</vs-button>\r\n                  </div>\r\n              </div>\r\n\r\n          </vs-tab>\r\n          <!------FIN TAB OPCION TIPO PREG ABIERTA----->\r\n          <!-------INICIO TAB PREG ABIERTA-------->\r\n          <vs-tab label=\"Información\" v-if=\"pregTipo===6\">\r\n              <div class=\"mt-6\" align=\"center\">\r\n                  <h4 class=\"mt-6\">Esta pregunta no puede tener respuestas. Debe ser calificada manualmente por el docente.</h4>\r\n              </div>\r\n          </vs-tab>\r\n          <!------FIN TAB OPCION TIPO PREG ABIERTA----->\r\n      </vs-tabs>\r\n      </vx-card>\r\n          <!-------FIN MODAL CREAR PREGUNTAS--------->\r\n\r\n      </div>\r\n    </div>\r\n</vs-popup>\r\n<!------FIN ELEGIR TIPO PREGUNTA--------->\r\n<!--LISTADO DE Pregunta-->\r\n  <vx-card>\r\n    <div v-if=\"preguntas.items === undefined\">\r\n      <div class=\"vx-row w-full mb-4\">\r\n          <div class=\"vx-col sm:w-1/2 w-full\">\r\n              Asignatura\r\n              <v-select class=\"mb-2\" v-model=\"asignaturaSelected\" :options=\"asignaturas\" @input=\"filtrarPreguntas()\" :dir=\"$vs.rtl ? 'rtl' : 'ltr'\" />\r\n          </div>\r\n          <div class=\"vx-col sm:w-1/2 w-full\">\r\n            Unidad\r\n              <v-select class=\"mb-2\" v-model=\"unidadSelected\" :options=\"unidades\" @input=\"filtrarPreguntas()\" :dir=\"$vs.rtl ? 'rtl' : 'ltr'\" />\r\n          </div>\r\n          <div class=\"vx-col w-full\">\r\n              {{tema_ambito}}\r\n              <vx-input-group class=\"mb-2\">\r\n                  <v-select v-model=\"pregunta.tema\" @input=\"verpreguntasxtema()\" :options=\"temas\" :dir=\"$vs.rtl ? 'rtl' : 'ltr'\" />\r\n                  <template slot=\"append\">\r\n                      <div class=\"append-text btn-addon\">\r\n                      <vs-button color=\"primary\" v-if=\"usuario.id_group === 1 || usuario.id_group === 5 || asignaturaSelected.id>619\" @click=\"$router.push('/temas')\">Crear {{tema_ambito}}</vs-button>\r\n                      </div>\r\n                  </template>\r\n              </vx-input-group>\r\n          </div>\r\n\r\n\r\n          <div class=\"vx-col sm:w-1/2 w-full\">\r\n              Banco\r\n              <v-select v-model=\"bancoSelected\" class=\"w-full\" :options=\"bancos\" @input=\"verpreguntasxtema()\" :dir=\"$vs.rtl ? 'rtl' : 'ltr'\" />\r\n          </div>\r\n\r\n          <div class=\"vx-col sm:w-1/2 w-full\">\r\n              Tipo\r\n              <v-select class=\"w-full\" v-model=\"tipoSelected\" :options=\"tipos\" @input=\"filtrarTipos()\" :dir=\"$vs.rtl ? 'rtl' : 'ltr'\" />\r\n          </div>\r\n      </div>\r\n      <!-- <vs-button v-if=\"usuario.id_group===6\" @click=\"$router.push('/evaluaciones');\" size=\"small\" style=\"font-size: 14px; display: inline-block;\" class=\"mr-2\" color=\"primary\" type=\"filled\">← Evaluaciones</vs-button> -->\r\n      <vs-button v-if=\"pregunta.tema.id!=''\" @click=\"active1!=active1; popupTipoPreg=true; id_preguntaActiva=''; editarOpcionActiva=false; editarActivo=false; pregTipo = 1; limpiar();\" size=\"small\" style=\"font-size: 14px; display: inline-block;\" color=\"dark\" class=\"mr-3\" type=\"filled\">Crear pregunta</vs-button>\r\n    </div>\r\n    <div v-else title-color=\"primary\">\r\n      <div class=\"vx-row w-full mb-4\">\r\n          <div class=\"vx-col sm:w-1/2 w-full\">\r\n              Asignatura\r\n              <v-select class=\"mb-2\" v-model=\"asignaturaSelected\" :options=\"asignaturas\" @input=\"filtrarPreguntas()\" :dir=\"$vs.rtl ? 'rtl' : 'ltr'\" />\r\n          </div>\r\n          <div class=\"vx-col sm:w-1/2 w-full\">\r\n              Unidad\r\n              <v-select class=\"mb-2\" v-model=\"unidadSelected\" :options=\"unidades\" @input=\"filtrarPreguntas()\" :dir=\"$vs.rtl ? 'rtl' : 'ltr'\" />\r\n          </div>\r\n\r\n\r\n          <div class=\"vx-col w-full\">\r\n              {{tema_ambito}}\r\n              <vx-input-group class=\"mb-2\">\r\n                  <v-select v-model=\"pregunta.tema\" @input=\"verpreguntasxtema()\" :options=\"temas\" :dir=\"$vs.rtl ? 'rtl' : 'ltr'\" />\r\n\r\n                  <template slot=\"append\">\r\n                      <div class=\"append-text btn-addon\">\r\n                      <vs-button color=\"primary\" v-if=\"usuario.id_group === 1 || usuario.id_group === 5 || asignaturaSelected.id>619\" @click=\"$router.push('/temas')\">Crear {{tema_ambito}}</vs-button>\r\n                      </div>\r\n                  </template>\r\n              </vx-input-group>\r\n          </div>\r\n          <div class=\"vx-col sm:w-1/2 w-full\">\r\n              Banco\r\n              <v-select v-model=\"bancoSelected\" class=\"w-full\" :options=\"bancos\" @input=\"verpreguntasxtema()\" :dir=\"$vs.rtl ? 'rtl' : 'ltr'\" />\r\n          </div>\r\n          <div class=\"vx-col sm:w-1/2 w-full\">\r\n              Tipo\r\n              <v-select style=\"width:240px; min-width: 60px;\" v-model=\"tipoSelected\" :options=\"tipos\" @input=\"filtrarTipos()\" :dir=\"$vs.rtl ? 'rtl' : 'ltr'\" />\r\n          </div>\r\n      </div>\r\n      <vs-table stripe v-model=\"pregSelected\" pagination max-items=\"25\" search :data=\"preguntas.items\">\r\n          <template slot=\"header\">\r\n            <small>Cantidad: {{ preguntas.items.length }}</small>\r\n              <vs-button v-if=\"pregunta.tema.id!=''\" @click=\"active1!=active1; popupTipoPreg=true; id_preguntaActiva=''; editarOpcionActiva=false; editarActivo=false; pregTipo=1; limpiar();\" size=\"small\" style=\"font-size: 14px;\" color=\"dark\" class=\"ml-3\" type=\"filled\">Crear pregunta</vs-button>\r\n          </template>\r\n\r\n          <template slot=\"thead\">\r\n              <vs-th sort-key=\"pregunta\">#</vs-th>\r\n              <vs-th sort-key=\"pregunta\">Pregunta</vs-th>\r\n              <vs-th sort-key=\"id_tipo_pregunta\">Tipo</vs-th>\r\n              <vs-th>Acciones</vs-th>\r\n          </template>\r\n\r\n          <template slot-scope=\"{data}\">\r\n          <vs-tr :data=\"tr\" :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n              <vs-td>\r\n                <p>{{ tr.id }}</p>\r\n                <b>Editor:</b>\r\n                <p>{{ tr.editor }} </p>\r\n                <b>Fecha creación:</b>\r\n                <p>{{ tr.created_at }}</p>\r\n                <b>Fechas modificación:</b>\r\n                <p>{{ tr.updated_at }}</p>\r\n                <p><vs-chip color=\"primary\" v-if=\"tr.estado == '1'\">Activo</vs-chip></p>\r\n                <p><vs-chip color=\"danger\" v-if=\"tr.estado == '0'\">Desactivado</vs-chip></p>\r\n              </vs-td>\r\n              <vs-td :data=\"data[indextr].descripcion\">\r\n                  {{ data[indextr].descripcion }}<br>\r\n                  <img v-if=\"data[indextr].img_pregunta!='' && data[indextr].img_pregunta!='null' && data[indextr].img_pregunta!=null\" v-bind:src=\"$data_url+'archivos/img/img_preguntas/'+data[indextr].img_pregunta\" class=\"img-responsive\" width=\"100px\" style=\"border-radius: 5px;\">\r\n\r\n                  <vs-collapse>\r\n                  <vs-collapse-item>\r\n                      <div slot=\"header\">\r\n                          Opciones\r\n                      </div>\r\n                      <div class=\"mb-5\" :key=\"indexitem\" v-for=\"(item, indexitem) in data[indextr].opciones\">\r\n                      <div style=\"width: 100%; font-size: 12px; color: #0DCD88;\" v-if=\"item.tipo===1\">Respuesta correcta<br></div>\r\n                      <div style=\"width: 100%; font-size: 12px; color: #FD5858;\" v-else>Respuesta incorrecta<br></div>\r\n                      <div style=\"width: 100%\"> {{ item.opcion }}<br></div>\r\n                      <div style=\"width: 100%\" ><img v-if=\"item.img_opcion!='' && item.img_opcion!='null' && item.img_opcion!=null\" v-bind:src=\"$data_url+'archivos/img/img_preguntas/'+item.img_opcion\" class=\"img-responsive\" style=\"border-radius: 5px;\" width=\"100px\"></div>\r\n                      </div>\r\n                  </vs-collapse-item>\r\n                  </vs-collapse>\r\n              </vs-td>\r\n\r\n              <vs-td :data=\"data[indextr].nombre_tipo\">\r\n                  {{data[indextr].nombre_tipo}}\r\n              </vs-td>\r\n\r\n              <vs-td :data=\"data[indextr].id\" align=\"center\">\r\n                  <vs-button v-if=\"usuario.idusuario === data[indextr].idusuario || usuario.id_group===1 || usuario.id_group===5\" @click=\"src_imagen_opcion=''; src_imagen_pregunta=''; pregunta.puntaje=1; popupTipoPreg=true; editarFormulario(data[indextr]);\" size=\"small\" style=\"padding: 7px; width: 80px; font-size: 12px;\" color=\"primary\" type=\"gradient\" class=\"m-1\">editar</vs-button>\r\n\r\n                  <vs-button v-if=\"usuario.idusuario === data[indextr].idusuario || usuario.id_group===1 || usuario.id_group===5\" @click=\"datosEliminar = tr; confirmarEliminarPreg()\" size=\"small\" style=\"padding: 7px; width: 80px; font-size: 12px;\" color=\"danger\" type=\"filled\" class=\"m-1\">eliminar</vs-button>\r\n\r\n                  <vs-button v-if=\"usuario.id_group===6\" @click=\"cargarPreguntaEval(data[indextr])\" size=\"small\" style=\"padding: 7px; width: 150px; font-size: 12px;\" color=\"success\" type=\"filled\" class=\"m-1\">cargar a evaluación</vs-button>\r\n              </vs-td>\r\n\r\n          </vs-tr>\r\n          </template>\r\n      </vs-table>\r\n    </div>\r\n    <div v-if=\"preguntas.items === undefined\">\r\n      <vs-table stripe v-model=\"pregSelected\" pagination max-items=\"5\" search :data=\"preguntas\">\r\n        <template slot=\"thead\">\r\n            <vs-th sort-key=\"pregunta\">#</vs-th>\r\n            <vs-th sort-key=\"pregunta\">Pregunta</vs-th>\r\n            <vs-th sort-key=\"id_tipo_pregunta\">Tipo</vs-th>\r\n            <vs-th>Acciones</vs-th>\r\n        </template>\r\n        <template slot-scope=\"{data}\">\r\n        <vs-tr :data=\"tr\" :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n            <vs-td>\r\n            </vs-td>ya\r\n            <vs-td :data=\"data[indextr].descripcion\">\r\n            </vs-td>\r\n            <vs-td :data=\"data[indextr].nombre_tipo\">\r\n            </vs-td>\r\n            <vs-td :data=\"data[indextr].id\" align=\"center\">\r\n            </vs-td>\r\n        </vs-tr>\r\n        </template>\r\n       </vs-table>\r\n       <br><br><br><br><br><br><br><br><br>\r\n    </div>\r\n  </vx-card>\r\n</div>\r\n</template>\r\n\r\n<script>\r\n    import flatPickr from 'vue-flatpickr-component';\r\n    import 'flatpickr/dist/flatpickr.css';\r\n    import Vue from 'vue'\r\n    import axios from 'axios'\r\n    import vSelect from 'vue-select'\r\n    import moment from 'moment'\r\n    import $ from 'jquery'\r\n    var img_preg_old = '', img_opcion_old = '';\r\n\r\n    export default {\r\n        data(){\r\n            return {\r\n                asignaturas: [],\r\n                asignatura: {id: '', label: ''},\r\n                preguntas: [],\r\n                pregunta: {descripcion: '', tema: {id: '', label: ''}, respuesta: '', opcion1: '', opcion2: '', opcion3: '', img_pregunta: '', img_respuesta: '', img_opcion1: '', img_opcion2: '', img_opcion3: '', puntaje_pregunta: '',estado:1},\r\n                temas: [],\r\n                tema: {id: '', label: '', id_asignatura: '', unidad: ''},\r\n                temaSelected: {id: '', label: ''},\r\n                opcion: {id_opcion_pregunta: '', id_pregunta: '', opcion: '', img_opcion: '', tipo: ''},\r\n                opciones: [],\r\n                editarActivo: false,\r\n                popupAddPreg: false,\r\n                popupEditPreg: false,\r\n                popupTipoPreg: false,\r\n                popupAddPregVarOp: false,\r\n                pregSelected: [],\r\n                pregTipo: 1,\r\n                titPregTipo: '',\r\n                txtPregTipo: '',\r\n                active1: true,\r\n                tipo_opcion: '',\r\n                cargarOpcionActivo: false,\r\n                guardadoActivo: false,\r\n                'tableList': [\r\n                    'vs-th: Component',\r\n                    'vs-tr: Component',\r\n                    'vs-td: Component',\r\n                    'thread: Slot',\r\n                    'tbody: Slot',\r\n                    'header: Slot'\r\n                ],\r\n                usuario: [],\r\n                docente: null,\r\n\r\n                id_preguntaActiva: '',\r\n                editarOpcionActiva: false,\r\n                src_imagen_pregunta: '',\r\n                src_imagen_opcion: '',\r\n                palabras_clave: '',\r\n                id_opcion_tipo234: '',\r\n                urlOrigen: '',\r\n                url: '',\r\n                id_pregunta_creada: null,\r\n                opcionselecradio: '',\r\n                asignaturaSelected: '',\r\n                unidadSelected: '',\r\n                unidades: [\r\n                    { id: \"1\", label: \"Unidad 1\", }, { id: \"2\", label: \"Unidad 2\", }, { id: \"3\", label: \"Unidad 3\", }, { id: \"4\", label: \"Unidad 4\", }, { id: \"5\", label: \"Unidad 5\", }, { id: \"6\", label: \"Unidad 6\", }, { id: \"7\", label: \"Unidad 7\", }, { id: \"8\", label: \"Unidad 8\", }\r\n                ],\r\n                tipoSelected: '',\r\n                tipos: [\r\n                    { id: \"1\", label: \"Opción múltiple\", }, { id: \"2\", label: \"Respuesta cerrada\", }, { id: \"3\", label: \"Verdadero/Falso\", }, { id: \"5\", label: \"Selección simple\"}, { id: \"6\", label: \"Respuesta abierta\" }\r\n                ],\r\n                datosEliminar: [],\r\n                idPregEliminar: '',\r\n                bancoSelected: {id:'3',label:'Ambas'},\r\n                bancos: [\r\n                    {id:'1',label:'Preguntas de Prolipa'},\r\n                    {id:'2',label:'Solo mis preguntas'},\r\n                    {id:'3',label:'Ambas'},\r\n                ],\r\n                tema_ambito: 'Tema',\r\n                arrayQuestions: [],\r\n                srcPreguntaAQuitar: '',\r\n            }\r\n        },\r\n        components: {\r\n            'v-select': vSelect,\r\n            flatPickr\r\n        },\r\n        created(){\r\n            let me = this;\r\n            me.$vs.loading()\r\n            me.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n            me.docente = me.usuario.idusuario\r\n            me.url = location.pathname.split('/');\r\n            var urlBack = window.location.href\r\n            var urlV = urlBack.split('/')\r\n            me.urlOrigen = urlV[0]+'/'+urlV[1]+'/'+urlV[2]+'/temas'\r\n            if( me.url[2] === undefined ){\r\n                this.$http.get(this.$server_url+'asignaturasDoc/0').then(res => {\r\n                    me.asignaturas = res.data;\r\n                    me.$vs.loading.close()\r\n                })\r\n            }else{\r\n                this.$http.get(this.$server_url+'asignaturasDoc/'+me.docente).then(res => {\r\n                    me.asignaturas = res.data;\r\n                    me.$vs.loading.close()\r\n                })\r\n            }\r\n\r\n            me.asignaturaSelected = { id: localStorage.idasignatura, label: localStorage.nombreasignatura }\r\n        },\r\n        methods: {\r\n            onResize() {\r\n            if (window.innerWidth < 769)\r\n                this.isMobile = true;\r\n            else\r\n                this.isMobile = false;\r\n            },\r\n            limpiar(){\r\n                this.guardadoActivo = false;\r\n                this.opciones = [];\r\n                this.pregunta.descripcion = '';\r\n                this.pregunta.puntaje_pregunta = '';\r\n                //this.pregunta.tema = '';\r\n                this.pregunta.opcion = '';\r\n                this.opcion.opcion = '';\r\n                this.opcion.tipo = '';\r\n                this.src_imagen_pregunta = '';\r\n                this.srcPreguntaAQuitar = '';\r\n                this.src_imagen_opcion = '';\r\n                this.editarActivo = false;\r\n                this.palabras_clave = '';\r\n                this.id_preguntaActiva='';\r\n                this.editarOpcionActiva=false;\r\n                this.pregunta.cant_coincidencias='';\r\n                this.pregunta.puntaje_pregunta=1;\r\n                this.pregunta.estado=1;\r\n                switch (this.pregTipo) {\r\n                    case 1:\r\n                        this.titPregTipo='Crear pregunta de opción múltiple.';\r\n                        this.txtPregTipo='Esta pregunta puede tener una o varias opciones correctas. Las opciones pueden contener: solo texto, solo imágenes o ambas.';\r\n                        break;\r\n                    case 2:\r\n                        this.titPregTipo='Crear pregunta cerrada';\r\n                        this.txtPregTipo='Esta pregunta debe ser respondida de forma escrita. La respuesta correcta debe contener palabras clave para poder comparar con la respuesta del estudiante.';\r\n                        break;\r\n                    case 3:\r\n                        this.titPregTipo='Crear pregunta de Verdadero o Falso';\r\n                        this.txtPregTipo='Esta pregunta debe tener dos opciones, una correcta y otra incorrecta.';\r\n                        break;\r\n                    case 4:\r\n                        this.titPregTipo='Crear pregunta de tipo dicotómica (Si o No)';\r\n                        this.txtPregTipo='Esta pregunta debe tener dos opciones, una correcta y otra incorrecta.';\r\n                        break;\r\n                    case 5:\r\n                        this.titPregTipo='Crear pregunta de selección simple';\r\n                        this.txtPregTipo='Esta pregunta puede tener solo una opción correcta. Las opciones pueden contener: solo texto, solo imágenes o ambas.';\r\n                        break;\r\n                    default:\r\n                        this.titPregTipo='Crear pregunta abierta';\r\n                        this.txtPregTipo='Esta pregunta no tiene una respuesta. Es una pregunta de opinión que se deberá calificar manualmente.';\r\n                        break;\r\n                }\r\n            },\r\n            addTypeQuestion(){\r\n                switch (this.pregTipo) {\r\n                    case 1:\r\n                        this.titPregTipo='Crear pregunta de opción múltiple.';\r\n                        this.txtPregTipo='Esta pregunta puede tener una o varias opciones correctas. Las opciones pueden contener: solo texto, solo imágenes o ambas.';\r\n                        break;\r\n                    case 2:\r\n                        this.titPregTipo='Crear pregunta cerrada';\r\n                        this.txtPregTipo='Esta pregunta debe ser respondida de forma escrita. La respuesta correcta debe contener palabras clave para poder comparar con la respuesta del estudiante.';\r\n                        break;\r\n                    case 3:\r\n                        this.titPregTipo='Crear pregunta de Verdadero o Falso';\r\n                        this.txtPregTipo='Esta pregunta debe tener dos opciones, una correcta y otra incorrecta.';\r\n                        break;\r\n                    case 4:\r\n                        this.titPregTipo='Crear pregunta de tipo dicotómica (Si o No)';\r\n                        this.txtPregTipo='Esta pregunta debe tener dos opciones, una correcta y otra incorrecta.';\r\n                        break;\r\n                    case 5:\r\n                        this.titPregTipo='Crear pregunta de selección simple';\r\n                        this.txtPregTipo='Esta pregunta puede tener solo una opción correcta. Las opciones pueden contener: solo texto, solo imágenes o ambas.';\r\n                        break;\r\n                    default:\r\n                        this.titPregTipo='Crear pregunta abierta';\r\n                        this.txtPregTipo='Esta pregunta no tiene una respuesta. Es una pregunta de opinión que se deberá calificar manualmente.';\r\n                        break;\r\n                }\r\n            },\r\n            agregar(){\r\n                let me = this;\r\n                if( me.pregunta.descripcion.trim() === '' || me.pregunta.tema === '' || me.pregunta.tema === undefined || me.pregunta.tema === null || this.pregunta.puntaje_pregunta === '' || me.pregunta.puntaje_pregunta === undefined){\r\n                    me.$vs.notify({\r\n                        text:'Debe completar todos los campos antes de guardar',\r\n                        color:'warning',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check'})\r\n                    return;\r\n                }\r\n\r\n                if( me.pregunta.tema.id ==='' ){\r\n                    me.$vs.notify({\r\n                        text:'Seleccione un '+me.tema_ambito+' antes de guardar',\r\n                        color:'warning',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check'})\r\n                    return;\r\n                }\r\n\r\n                me.$vs.loading()\r\n                let fileImgPreg\r\n                fileImgPreg = document.getElementById(\"file1\").files[0];\r\n                me.pregunta.file1 = fileImgPreg;\r\n\r\n                const formData = new FormData();\r\n                formData.append('descripcion', me.pregunta.descripcion);\r\n                formData.append('tema', me.pregunta.tema.id);\r\n                formData.append('img_pregunta', fileImgPreg);\r\n                formData.append('id_tipo_pregunta', me.pregTipo);\r\n                formData.append('puntaje_pregunta', me.pregunta.puntaje_pregunta);\r\n                formData.append('idusuario', me.usuario.idusuario);\r\n                formData.append('estado', me.pregunta.estado);\r\n                axios.post(this.$data_url+'api/pregunta', formData)\r\n                .then(res => {\r\n                    me.guardadoActivo = true;\r\n                    me.id_preguntaActiva = res.data.id;\r\n                    me.filtrarTipos()\r\n                    me.$vs.notify({\r\n                    text:'Pregunta creada exitosamente',\r\n                    color:'success',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check'})\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ': error al crear pregunta');\r\n                })\r\n\r\n\r\n            },\r\n            cargarOpcion(){\r\n                let me = this;\r\n                if( me.id_preguntaActiva === '' ){\r\n                    me.$vs.notify({\r\n                        text:'Debe crear una pregunta antes de cargar las opciones.',\r\n                        color:'warning',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check'})\r\n                }else{\r\n                    me.$vs.loading()\r\n\r\n                    const formData = new FormData();\r\n\r\n                    let fileImgPreg = document.getElementById(\"file2\").files[0];\r\n                    let tipo = 0;\r\n                    if( me.opcion.tipo === true ){\r\n                        tipo = 1;\r\n                    }\r\n                    formData.append('opcion', me.opcion.opcion);\r\n                    formData.append('id_pregunta', me.id_preguntaActiva);\r\n                    formData.append('img_opcion', fileImgPreg);\r\n                    formData.append('tipo', tipo);\r\n                    formData.append('cant_coincidencias', 0);\r\n\r\n                    axios.post(this.$data_url+'api/cargarOpcion', formData)\r\n                    .then(res => {\r\n                        me.opciones = res.data;\r\n                        me.opcion.opcion = '';\r\n                        me.opcion.tipo = '';\r\n                        me.src_imagen_opcion = '';\r\n                        document.getElementById(\"file2\").value = '';\r\n                        me.msgExito('cargada');\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(error);\r\n                    })\r\n                }\r\n            },\r\n            cargarOpcionAbierta(){\r\n                let me = this;\r\n                if( me.pregunta.cant_coincidencias === '' || me.pregunta.cant_coincidencias === undefined || me.pregunta.cant_coincidencias < 0){\r\n                    me.$vs.notify({\r\n                    text:'Ingrese la cantidad de coincidencias de palabras clave.',\r\n                    color:'warning',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check'})\r\n                    return\r\n                }\r\n\r\n                if( me.id_preguntaActiva === '' ){\r\n                    me.$vs.notify({\r\n                        text:'Debe crear una pregunta antes de cargar las opciones.',\r\n                        color:'warning',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check'})\r\n                }else{\r\n                    me.$vs.loading()\r\n                    let tipo = 1;\r\n                    let palabrasV = me.palabras_clave.replace(/ /gi, '')\r\n                    const formData = new FormData();\r\n                    formData.append('opcion', palabrasV);\r\n                    formData.append('id_pregunta', me.id_preguntaActiva);\r\n                    formData.append('img_opcion', null);\r\n                    formData.append('tipo', tipo);\r\n                    formData.append('cant_coincidencias', parseInt(me.pregunta.cant_coincidencias));\r\n                    this.$http.post(this.$server_url+'cargarOpcion', formData)\r\n                    .then(res => {\r\n                        me.opciones = res.data;\r\n                        me.opcion.opcion = '';\r\n                        me.opcion.tipo = '';\r\n                        me.src_imagen_opcion = '';\r\n                        me.msgExito('guardada');\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(error);\r\n                    })\r\n                }\r\n            },\r\n            cargarOpcionesDico(){\r\n                let me = this;\r\n                if( me.id_preguntaActiva === '' ){\r\n                    me.$vs.notify({\r\n                        text:'Debe crear una pregunta antes de cargar las opciones.',\r\n                        color:'warning',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check'})\r\n                }else{\r\n                    me.$vs.loading()\r\n                    const formData = new FormData();\r\n                    formData.append('opcion', me.opcion.opcion);\r\n                    formData.append('id_pregunta', me.id_preguntaActiva);\r\n                    formData.append('img_opcion', null);\r\n                    formData.append('tipo', 1);\r\n                    formData.append('cant_coincidencias', 0);\r\n                    this.$http.post(this.$server_url+'cargarOpcionDico', formData)\r\n                    .then(res => {\r\n                        me.opcion.opcion = '';\r\n                        me.opcion.tipo = '';\r\n                        me.src_imagen_opcion = '';\r\n                        me.msgExito('guardada');\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(error);\r\n                    })\r\n                }\r\n            },\r\n            confirmEditarOpcion(item){\r\n                let me = this;\r\n                me.editarOpcionActiva= false;\r\n\r\n                let fileImgOpcion;\r\n                fileImgOpcion = document.getElementById(\"file2\").files[0];\r\n\r\n                if(fileImgOpcion === undefined ){\r\n                    fileImgOpcion = item.img_opcion;\r\n                }\r\n\r\n                let tipo = 0;\r\n                if( me.opcion.tipo === true || me.opcion.tipo === 1 ){\r\n                    tipo = 1;\r\n                }\r\n\r\n                const formData = new FormData();\r\n                formData.append('opcion', me.opcion.opcion);\r\n                formData.append('tipo', tipo);\r\n                formData.append('img_opcion', fileImgOpcion);\r\n                formData.append('img_opcion_old', img_opcion_old);\r\n                formData.append('id_opcion_pregunta', item.id_opcion_pregunta);\r\n                formData.append('id_pregunta', item.id_pregunta);\r\n                formData.append('cant_coincidencias', 0);\r\n                axios.post(this.$data_url+'api/editarOpcion', formData).\r\n                then(res => {\r\n                    me.opciones = res.data;\r\n                    me.editarOpcionActiva = false;\r\n                    me.opcion.opcion = '';\r\n                    me.opcion.tipo = '';\r\n                    me.src_imagen_opcion = '';\r\n                    me.msgExito('cargada');\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n            },\r\n            editarOpcion(item){\r\n                let me = this;\r\n                location.href = '#editar'\r\n                me.opcion.opcion = '';\r\n                document.getElementById(\"file2\").value = '';\r\n\r\n                me.opcion.opcion = item.opcion;\r\n                me.opcion.tipo = item.tipo;\r\n                me.opcion.id_opcion_pregunta = item.id_opcion_pregunta;\r\n                me.opcion.id_pregunta = item.id_pregunta;\r\n\r\n                img_opcion_old = item.img_opcion;\r\n                me.src_imagen_opcion = this.$data_url+'archivos/img/img_preguntas/'+item.img_opcion;\r\n            },\r\n            editarOpcionesDico(){\r\n                let me = this;\r\n                me.$vs.loading()\r\n                const formData = new FormData();\r\n                    formData.append('opcion', me.opcion.opcion);\r\n                    formData.append('id_pregunta', me.id_preguntaActiva);\r\n                    formData.append('img_opcion', null);\r\n                    formData.append('tipo', 1);\r\n                    formData.append('id_opcion', 1);\r\n                    formData.append('cant_coincidencias', 0);\r\n\r\n                this.$http.post(this.$server_url+'cargarOpcionDico', formData)\r\n                .then(res => {\r\n                    me.msgExito('editada');\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n            },\r\n            confirmarEliminarPreg(){\r\n                this.$vs.dialog({\r\n                    type: 'confirm',\r\n                    color: 'danger',\r\n                    title: 'Confirmar',\r\n                    acceptText:'Si, deseo eliminar',\r\n                    cancelText:'Cancelar',\r\n                    text: '¿Está seguro de eliminar esta pregunta?',\r\n                    accept: this.eliminarPregunta\r\n                })\r\n            },\r\n            eliminarPregunta(){\r\n                let me = this;\r\n                axios.get(this.$data_url+'api/eliminarPregunta?id='+me.datosEliminar.id)\r\n                .then(res => {\r\n                // this.$http.get(this.$server_url+`eliminarPregunta/`+me.datosEliminar.id).then(() => {\r\n                    if(res.data.status == 0){\r\n                        me.$vs.notify({\r\n                        text:res.data.message,\r\n                        color:'warning',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check',\r\n                        time:4000\r\n                        })\r\n                        return;\r\n                    }\r\n                    me.filtrarTipos();\r\n\r\n                    /*this.$http.get(this.$server_url+'preguntasDocente/'+me.usuario.idusuario).then(res => {\r\n                        me.preguntas = res.data;\r\n                        me.$vs.loading.close()\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(error + ': error al eliminar pregunta');\r\n                    })*/\r\n                })\r\n                .catch(function (error) {\r\n                    alert(error+'NO SE PUEDE ELIMINAR ESTA PREGUNTA, YA QUE SE ESTÁ UTILIZANDO EN UNA EVALUACIÓN.');\r\n                })\r\n            },\r\n            quitarOpcion(item){\r\n                let me = this;\r\n                me.$vs.loading()\r\n                this.$http.get(this.$server_url+'quitarOpcion/'+item.id_opcion_pregunta)\r\n                .then(res => {\r\n                    me.removeItemFromArr(me.opciones, item)\r\n                    me.$vs.loading.close()\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n            },\r\n            editarFormulario(item){\r\n                let me = this;\r\n                me.limpiar();\r\n                me.pregTipo                     = item.id_tipo_pregunta;\r\n                me.addTypeQuestion();\r\n                me.id_preguntaActiva            = item.id;\r\n                me.temaSelected                 = {id: item.id_tema, label: item.nombre_tema};\r\n                me.pregunta.descripcion         = item.descripcion;\r\n                me.pregunta.tema                = {id: item.id_tema, label: item.nombre_tema};\r\n                me.pregunta.id                  = item.id;\r\n                me.pregunta.img_pregunta        = item.img_pregunta;\r\n                me.pregunta.puntaje_pregunta    = item.puntaje_pregunta;\r\n                me.pregunta.estado              = item.estado\r\n                img_preg_old                    = item.img_pregunta;\r\n                me.srcPreguntaAQuitar           = item.img_pregunta;\r\n                if(item.img_pregunta!=''){      me.src_imagen_pregunta = this.$data_url+'archivos/img/img_preguntas/'+item.img_pregunta;  }\r\n                me.editarActivo = true;\r\n                ///mostrar opciones\r\n                this.$http.get(this.$server_url+'verOpciones/'+ item.id)\r\n                .then(res => {\r\n                    if(res.data.length > 0){\r\n                        me.opciones = res.data;\r\n                        me.palabras_clave = res.data[0].opcion;\r\n                        me.id_opcion_tipo234 = res.data[0].id_opcion_pregunta;\r\n                        me.opcion.opcion = res.data[0].opcion;\r\n                        me.pregunta.cant_coincidencias = res.data[0].cant_coincidencias;\r\n                    }\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n            },\r\n            quitarImagen(){\r\n              let me = this;\r\n              me.src_imagen_pregunta = '';\r\n              document.getElementById(\"file1\").value = ''\r\n              img_preg_old = '';\r\n            },\r\n            editarPregunta(){\r\n                let me = this;\r\n                if(me.pregunta.estado == \"\" || me.pregunta.estado == null || me.pregunta.estado == undefined){\r\n                   me.$vs.notify({\r\n                    text:'Debe seleccionar un estado para la pregunta',\r\n                    color:'warning',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check'})\r\n                    return;\r\n                }\r\n                if( me.pregunta.descripcion.trim() === '' || me.pregunta.tema === '' || me.pregunta.tema === undefined || me.pregunta.tema === null || me.pregunta.puntaje_pregunta === '' || me.pregunta.puntaje_pregunta === undefined){\r\n                    me.$vs.notify({\r\n                        text:'Debe completar todos los campos antes de guardar',\r\n                        color:'warning',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check'})\r\n                    return;\r\n                }\r\n\r\n                me.$vs.loading()\r\n                let fileImgPreg;\r\n                const formData = new FormData();\r\n                fileImgPreg = document.getElementById(\"file1\").files[0];\r\n                if(fileImgPreg === undefined ){\r\n                    // fileImgPreg = me.pregunta.img_pregunta;\r\n                    formData.append('img_pregunta', \"\");\r\n                }else{\r\n                    formData.append('img_pregunta', fileImgPreg);\r\n                }\r\n                formData.append('descripcion', me.pregunta.descripcion);\r\n                formData.append('tema', me.pregunta.tema.id);\r\n                // formData.append('img_pregunta', fileImgPreg);\r\n                formData.append('img_pregunta_old', img_preg_old);\r\n                formData.append('id', me.pregunta.id);\r\n                formData.append('puntaje_pregunta', me.pregunta.puntaje_pregunta);\r\n                formData.append('idusuario', me.usuario.idusuario);\r\n                formData.append('estado', me.pregunta.estado);\r\n                formData.append('srcPreguntaAQuitar', me.srcPreguntaAQuitar);\r\n                axios.post(this.$data_url+'api/pregunta', formData).then(res => {\r\n                    document.getElementById(\"file1\").value = ''\r\n                    me.msgExito('editada');\r\n                    me.srcPreguntaAQuitar = '';\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n            },\r\n            mostrarImg(file, img){\r\n                let me = this;\r\n                me.src_imagen_opcion = ' ';\r\n                me.src_imagen_pregunta = ' ';\r\n                var archivo = document.getElementById(\"file\"+file).files[0];\r\n                var reader = new FileReader();\r\n                if (me) {\r\n                    reader.readAsDataURL(archivo );\r\n                    reader.onloadend = function () {\r\n                        //document.getElementById(\"img\"+img).style.display = \"block\";\r\n                        document.getElementById(\"img\"+img).src = reader.result;\r\n                    }\r\n                }\r\n            },\r\n            removeItemFromArr (arr, item) {\r\n                const i = arr.indexOf(item)\r\n                arr.splice(i, 1)\r\n            },\r\n            editarPalabrasclave(){\r\n                let me = this;\r\n                if( me.pregunta.cant_coincidencias === '' || me.pregunta.cant_coincidencias === undefined || me.pregunta.cant_coincidencias < 0){\r\n                    me.$vs.notify({\r\n                    text:'Ingrese la cantidad de coincidencias de palabras clave.',\r\n                    color:'warning',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check'})\r\n                    return\r\n                }\r\n                var cantCoin = parseInt(me.pregunta.cant_coincidencias)\r\n                if( me.id_opcion_tipo234 != '' ){\r\n                    me.$vs.loading()\r\n                    let palabrasV = me.palabras_clave.replace(/ /gi, '')\r\n                    const formData = new FormData();\r\n                    formData.append('opcion', palabrasV);\r\n                    formData.append('tipo', 1);\r\n                    formData.append('img_opcion', '');\r\n                    formData.append('img_opcion_old', '');\r\n                    formData.append('id_opcion_pregunta', me.id_opcion_tipo234);\r\n                    formData.append('id_pregunta', me.pregunta.id);\r\n                    formData.append('cant_coincidencias', cantCoin);\r\n\r\n                    this.$http.post(this.$server_url+'editarOpcion', formData).\r\n                    then(res => {\r\n                        me.opciones = res.data;\r\n                        me.editarOpcionActiva = false;\r\n                        me.opcion.opcion = '';\r\n                        me.opcion.tipo = '';\r\n                        me.src_imagen_opcion = '';\r\n                        me.msgExito('editada');\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(error);\r\n                    })\r\n                }else{\r\n                    me.cargarOpcionAbierta()\r\n                }\r\n            },\r\n            msgExito(tipo_msg){\r\n                let me = this;\r\n                me.preguntas = []\r\n                var tipobanco;\r\n                if( me.bancoSelected===null || me.bancoSelected==='' ){\r\n                    tipobanco ='todos'\r\n                }else{\r\n                    if( me.bancoSelected.id==='3'){\r\n                        tipobanco = 'todos'\r\n                    }\r\n                    if(me.bancoSelected.id==='1'){\r\n                        tipobanco = 'prolipa'\r\n                    }\r\n\r\n                    if(me.bancoSelected.id==='2'){\r\n                        tipobanco = 'docente'\r\n                    }\r\n                }\r\n                me.tipoSelected = '';\r\n                const formData = new FormData();\r\n                formData.append('id', me.pregunta.tema.id);\r\n                formData.append('tipobanco', tipobanco);\r\n                formData.append('usuario', me.usuario.idusuario);\r\n                formData.append('id_group',me.usuario.id_group)\r\n                formData.append('institucion_id',   me.usuario.institucion_idInstitucion)\r\n                var url = \"\"\r\n                if(me.usuario.id_group == 6){\r\n                    url = 'preguntas_x_tema_Docente'\r\n                }else{\r\n                    url = 'preguntasxtema'\r\n                }\r\n                this.$http.post(this.$server_url+url, formData).then(res => {\r\n                    let datos = res.data\r\n                    if(datos.items){\r\n                      if(datos.items.length >  0){\r\n                        if(me.usuario.id_group == 6){\r\n                          me.preguntas =  { items: datos.items.filter(item => item.estado == 1) };\r\n                        }\r\n                        else{ me.preguntas = res.data; }\r\n                      }\r\n                    }\r\n                    me.editarActivo = false;\r\n                    if(tipo_msg != 'cargada'){\r\n                        me.popupTipoPreg = false;\r\n                    }\r\n                    me.$vs.loading.close()\r\n                    me.$vs.notify({\r\n                    text:'Pregunta '+ tipo_msg +' exitosamente',\r\n                    color:'success',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check'})\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n\r\n            },\r\n            verpreguntasxtema(){\r\n                let me = this;\r\n                me.preguntas        = []\r\n                me.arrayQuestions   = []\r\n                if(me.pregunta.tema.id===undefined || me.pregunta.tema.id===null || me.pregunta.tema.id==='' || me.pregunta.tema===''){\r\n                    return;\r\n                }\r\n\r\n                var tipobanco;\r\n                if( me.bancoSelected===null || me.bancoSelected==='' ){\r\n                    tipobanco ='todos'\r\n                }else{\r\n                    if( me.bancoSelected.id==='3'){\r\n                        tipobanco = 'todos'\r\n                    }\r\n                    if(me.bancoSelected.id==='1'){\r\n                        tipobanco = 'prolipa'\r\n                    }\r\n\r\n                    if(me.bancoSelected.id==='2'){\r\n                        tipobanco = 'docente'\r\n                    }\r\n                }\r\n                me.$vs.loading()\r\n                me.tipoSelected = '';\r\n                const formData = new FormData();\r\n                formData.append('id',             me.pregunta.tema.id);\r\n                formData.append('tipobanco',      tipobanco);\r\n                formData.append('usuario',        me.usuario.idusuario);\r\n                formData.append('id_group',       me.usuario.id_group)\r\n                formData.append('institucion_id', me.usuario.institucion_idInstitucion)\r\n                var url = \"\"\r\n                if(me.usuario.id_group == 6){\r\n                    url = 'preguntas_x_tema_Docente'\r\n                }else{\r\n                    url = 'preguntasxtema'\r\n                }\r\n                this.$http.post(this.$server_url+url, formData)\r\n                // this.$http.post(this.$server_url+'preguntasxtema', formData)\r\n                .then(res => {\r\n                  me.$vs.loading.close()\r\n                  let datos = res.data\r\n                  me.arrayQuestions = datos\r\n                  if(datos.items){\r\n                    if(datos.items.length >  0){\r\n                      if(me.usuario.id_group == 6){\r\n                        me.preguntas =  { items: datos.items.filter(item => item.estado == 1) };\r\n                      }\r\n                      else{ me.preguntas = res.data; }\r\n                    }\r\n                  }\r\n                })\r\n                .catch(function (error) {\r\n                  me.$vs.loading.close()\r\n                  console.log(error);\r\n                  me.$vs.notify({\r\n                    text:'Hubo problemas con preguntas para este tema',\r\n                    color:'warning',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check'})\r\n                })\r\n            },\r\n            irTemas(){\r\n                let me = this;\r\n                me.popupTipoPreg = false;\r\n                window.location.href = me.urlOrigen;\r\n            },\r\n            filtrarPreguntas(){\r\n                let me = this;\r\n                me.preguntas = []\r\n                me.preguntas.id = ''\r\n                if( me.asignaturaSelected.id === undefined ){\r\n                    me.$vs.notify({\r\n                        text:'Seleccione una asignatura antes de filtrar por Unidades',\r\n                        color:'warning',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check'})\r\n                    return;\r\n                }\r\n\r\n                if( me.asignaturaSelected.id===113 || me.asignaturaSelected.id===114 || me.asignaturaSelected.id===115 ){\r\n                    me.tema_ambito = 'Ámbito'\r\n                }else{\r\n                    me.tema_ambito = 'Tema'\r\n                }\r\n\r\n                if( me.unidadSelected.id === undefined ){\r\n                    return;\r\n                }\r\n                me.temas = []\r\n                me.pregunta.tema.id = ''\r\n                me.$vs.loading()\r\n                const formData = new FormData();\r\n                    formData.append('asignatura', me.asignaturaSelected.id);\r\n                    formData.append('unidad', me.unidadSelected.id);\r\n\r\n                this.$http.post(this.$server_url+'temasignunidad', formData).then(res => {\r\n                  let datos = res.data\r\n                  if(me.usuario.id_group == 6) {\r\n                    me.temas = datos.filter(p => p.tipo_tema == 0);\r\n                    me.temas = me.temas.filter(p => !p.nombre_tema.startsWith(\"0.\"));\r\n                  }\r\n                  else                         { me.temas = datos}\r\n                  me.$vs.loading.close()\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                })\r\n\r\n            },\r\n            filtrarTipos(){\r\n                let me = this;\r\n                if( me.pregunta.tema.id === ''){\r\n                    return;\r\n                }\r\n                if( me.tipoSelected===null || me.tipoSelected===undefined || me.tipoSelected==='' || me.tipoSelected==='null'  ){\r\n                    me.verpreguntasxtema()\r\n                }else{\r\n                    me.preguntas = []\r\n                    me.preguntas =  { items: me.arrayQuestions.items.filter(item => item.id_tipo_pregunta == me.tipoSelected.id) };\r\n                    // var tipobanco;\r\n                    // if( me.bancoSelected===null || me.bancoSelected==='' ){\r\n                    //     tipobanco ='todos'\r\n                    // }else{\r\n                    //     if( me.bancoSelected.id==='3'){\r\n                    //         tipobanco = 'todos'\r\n                    //     }\r\n                    //     if(me.bancoSelected.id==='1'){\r\n                    //         tipobanco = 'prolipa'\r\n                    //     }\r\n                    //     if(me.bancoSelected.id==='2'){\r\n                    //         tipobanco = 'docente'\r\n                    //     }\r\n                    // }\r\n                    // me.$vs.loading()\r\n                    // const formData = new FormData();\r\n                    // formData.append('tema',             me.pregunta.tema.id);\r\n                    // formData.append('tipo',             me.tipoSelected.id);\r\n                    // formData.append('usuario',          me.usuario.idusuario);\r\n                    // formData.append('tipobanco',        tipobanco);\r\n                    // formData.append('id_group',         me.usuario.id_group)\r\n                    // formData.append('institucion_id',   me.usuario.institucion_idInstitucion)\r\n                    // this.$http.post(this.$server_url+'preguntastipo', formData).then(res => {\r\n                    //     me.preguntas = res.data;\r\n                    //     me.$vs.loading.close()\r\n                    // })\r\n                    // .catch(function (error) {\r\n                    //     console.log(error);\r\n                    // })\r\n                }\r\n            },\r\n            cargarPreguntaEval(item) {\r\n                let me = this;\r\n                me.$vs.loading()\r\n                let formData = new FormData();\r\n                    formData.append('id_evaluacion', localStorage.id_desde_eval);\r\n                    formData.append('id_pregunta', item.id);\r\n                    formData.append('grupo', localStorage.grupo_desde_eval);\r\n                me.$http.post(this.$server_url+'pregEvaluacion', formData)\r\n                .then(res => {\r\n                    let msg = 'Pregunta cargada correctamente'\r\n                    if( res.data == 0 ){\r\n                        msg = 'No puede cargar más de una vez la misma pregunta'\r\n                    }\r\n                    me.$vs.loading.close()\r\n                    me.$vs.notify({\r\n                    text: msg,\r\n                    color:'success',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check'})\r\n                })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close()\r\n                    console.log(error);\r\n                })\r\n            },\r\n        },\r\n    }\r\n</script>\r\n"],"mappings":"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","ignoreList":[]}]}