{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\codigos\\components\\ImportLimpiarData.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\codigos\\components\\ImportLimpiarData.vue","mtime":1712682815625},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\babel.config.js","mtime":1712682813877},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\.babelrc","mtime":1712682813750},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _defineProperty from \"C:/laragon/www/PRY_NEW_JEYSON/LOCAL/plataformaprolipa_vue/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport ImportExcel from \"./importExcel.vue\";\nimport vSelect from 'vue-select';\nimport gestionCodigosListaVue from \"./utils/gestionCodigosLista.vue\";\nexport default {\n  components: {\n    ImportExcel: ImportExcel,\n    vSelect: vSelect,\n    gestionCodigosListaVue: gestionCodigosListaVue\n  },\n  data: function data() {\n    return _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({\n      codigosPerdidos: false,\n      tableData: [],\n      header: [],\n      sheetName: '',\n      usuario: [],\n      modalConfirm: false,\n      modalErrores: false,\n      errores: [],\n      tipo_selected: '',\n      cedulas_no_encontradas: [],\n      modalCedulas: false,\n      codigosNoCambiados: [],\n      codigosConLiquidacion: [],\n      codigoNoExiste: [],\n      porcentaje: 0,\n      usuarioSeleccionado: '',\n      razonBusqueda: '',\n      valorBusqueda: 'cedula',\n      estudiantesCursos: [],\n      region: '2',\n      periodos: [],\n      periodo: {\n        getPeriodo: ''\n      },\n      datos: {\n        usuario: '',\n        idusuario: '',\n        periodo: ''\n      },\n      //variables para el export a excel\n      activePrompt: false,\n      codigoSelected: [],\n      reportesActivo: 0,\n      fileName: null,\n      formats: ['xls', 'xlsx', 'csv', 'txt'],\n      cellAutoWidth: true,\n      selectedFormat: 'xlsx',\n      codigosNoExisten: [],\n      cantidadNoExisten: 0,\n      instituciones: [],\n      busquedaInstitucion: '',\n      nombreInstitucion: '',\n      institucion_id: '',\n      cliente: '',\n      observacion: '',\n      counterDanger: false,\n      arregloPeriodos: []\n    }, \"periodo\", ''), \"tipo\", '1'), \"title\", 'Estos códigos van a ser devueltos seran quitados el usuario, venta_estado, etc. Mientras no esten liquidados ni Leidos'), \"codigosSinCodigoUnion\", []), \"popupProblemasCodigosUnion\", false), \"dLiquidado\", 0);\n  },\n  created: function created() {\n    this.usuario = JSON.parse(localStorage.getItem('usuario'));\n    this.codigosPerdidos = false;\n    this.getPeriodos();\n  },\n  methods: {\n    loadDataInTable: function loadDataInTable(_ref2) {\n      var results = _ref2.results,\n        header = _ref2.header,\n        meta = _ref2.meta;\n      this.codigosPerdidos = false;\n      this.header = header;\n      this.tableData = results;\n      this.sheetName = meta.sheetName;\n    },\n    procesarPagos: function procesarPagos() {\n      var me = this;\n      if (me.institucion_id <= 0) {\n        me.$vs.notify({\n          text: 'Seleccione una institución por favor',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        return false;\n      }\n      if (me.tipo == 1) {\n        if (me.cliente.trim() == \"\") {\n          me.$vs.notify({\n            text: 'Debe ingresar un cliente por favor',\n            color: 'warning',\n            iconPack: 'feather',\n            icon: 'icon-check'\n          });\n          return;\n        }\n        if (me.periodo == undefined || me.periodo == null || me.periodo == \"\") {\n          me.$vs.notify({\n            text: 'Seleccione un periodo',\n            color: 'success',\n            iconPack: 'feather',\n            icon: 'icon-check'\n          });\n          return false;\n        }\n      }\n      if (me.observacion == \"\") {\n        me.$vs.notify({\n          text: 'Debe ingresar una observación',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        return;\n      }\n      if (me.observacion.length < 5) {\n        me.$vs.notify({\n          text: 'La observación debe tener al menos 5 caracteres',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        return;\n      }\n      me.$vs.loading();\n      var json_pagos = JSON.stringify(me.tableData);\n      var formData = new FormData();\n      formData.append('data_codigos', json_pagos);\n      formData.append('admin', 'yes');\n      formData.append('id_usuario', me.usuario.idusuario);\n      formData.append('usuario_editor', me.usuario.idusuario);\n      formData.append('cliente', me.cliente);\n      formData.append('observacion', me.observacion);\n      formData.append('institucion_id', me.institucion_id);\n      formData.append('periodo_id', me.periodo.idperiodoescolar);\n      if (me.dLiquidado == 1) formData.append('dLiquidado', me.dLiquidado);\n      this.$http.post(this.$server_url + 'codigos/bodega/devolver', formData).then(function (res) {\n        me.codigosConLiquidacion = res.data.codigosConLiquidacion;\n        me.$vs.loading.close();\n        if (res.data.status == 0) {\n          me.$vs.notify({\n            text: res.data.message,\n            color: 'success',\n            iconPack: 'feather',\n            icon: 'icon-check'\n          });\n          return false;\n        }\n        me.$vs.notify({\n          text: 'Códigos procesados exitosamente',\n          color: 'success',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        me.modalConfirm = false;\n        me.tableData = [];\n        me.codigosPerdidos = true;\n        me.codigosNoCambiados = res.data.codigosNoCambiados;\n        me.codigosSinCodigoUnion = res.data.codigosSinCodigoUnion;\n        if (me.codigosSinCodigoUnion.length > 0) {\n          me.popupProblemasCodigosUnion = true;\n        }\n        me.codigoNoExiste = res.data.codigoNoExiste;\n        me.porcentaje = res.data.cambiados;\n      }).catch(function (error) {\n        me.$vs.notify({\n          text: 'Verifique que la información se haya guardado correctamente.',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-alert-triangle'\n        });\n        me.$vs.loading.close();\n        // setTimeout(function() {location.reload()}, 1000);\n      });\n    },\n    openConfirm: function openConfirm(tipo) {\n      var me = this;\n      me.tipo_selected = tipo;\n      if (!me.tableData[0].codigo) {\n        me.$vs.loading.close();\n        me.$vs.notify({\n          text: 'Corrija el formato del excel y vuelva a intentar.',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-alert-triangle'\n        });\n        return;\n      }\n      me.errores = [];\n      $.each(me.tableData, function (key, value) {\n        if (!value.codigo) {\n          me.errores.push(value);\n        }\n      });\n      if (me.errores.length > 0) {\n        me.modalErrores = true;\n      } else {\n        me.modalConfirm = true;\n      }\n    },\n    recargar: function recargar() {\n      location.reload();\n    },\n    busquedaFiltroEstudiante: function busquedaFiltroEstudiante() {\n      var me = this;\n      me.estudiantesCursos = [];\n      if (me.razonBusqueda.length < 5) {\n        me.$vs.notify({\n          text: 'Minimo 5 caracteres de busqueda',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        return false;\n      }\n      me.$vs.loading();\n      //para los administradores\n      this.$http.get(this.$server_url + 'busquedaFiltroEstudiante?busqueda=' + me.valorBusqueda + '&razonBusqueda=' + me.razonBusqueda).then(function (res) {\n        me.$vs.loading.close();\n        if (res.data.status == '0') {\n          me.$vs.notify({\n            text: res.data.message,\n            color: 'primary',\n            iconPack: 'feather',\n            icon: 'icon-check'\n          });\n          return false;\n        } else {\n          me.estudiantesCursos = res.data;\n        }\n      }).catch(function (error) {\n        console.log(error + ' error');\n        me.$vs.loading.close();\n      });\n    },\n    asignarUsuario: function asignarUsuario(tr) {\n      var me = this;\n      me.datos.usuario = tr.name_usuario;\n      me.datos.idusuario = tr.idusuario;\n      me.estudiantesCursos = [];\n    },\n    //lista de ciudades para usar en el select\n    getPeriodos: function getPeriodos() {\n      var me = this;\n      this.$http.get(this.$server_url + 'periodo?porAllEstados=yes&region=' + me.region).then(function (res) {\n        me.arregloPeriodos = res.data;\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    //PARA ASIGNAR UNA INSTITUCION\n    getInstitucion: function getInstitucion() {\n      var me = this;\n      me.instituciones = [];\n      me.nombreInstitucion = \"\";\n      me.institucion_id = \"\";\n      me.cliente = \"\";\n      if (me.busquedaInstitucion.length < 5) {\n        me.$vs.notify({\n          text: 'Minimo 5 caracteres de busqueda',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        return false;\n      }\n      me.$vs.loading();\n      this.$http.get(this.$server_url + 'listaInsitucion?busqueda=' + me.busquedaInstitucion).then(function (res) {\n        me.instituciones = res.data;\n        me.$vs.loading.close();\n        if (res.data.message) {\n          me.$vs.notify({\n            text: res.data.message,\n            color: 'success',\n            iconPack: 'feather',\n            icon: 'icon-user'\n          });\n        }\n      }).catch(function (error) {\n        console.log(error + ' error');\n        me.$vs.loading.close();\n      });\n    },\n    asignarInstitucion: function asignarInstitucion(tr) {\n      var me = this;\n      me.nombreInstitucion = tr.nombreInstitucion;\n      me.cliente = tr.nombreInstitucion;\n      me.institucion_id = tr.idInstitucion;\n      me.instituciones = [];\n      me.getPeriodo(tr.idInstitucion);\n    },\n    //METODOS PARA EXCEL\n    //para limipiar los campos del excel\n    clearFields: function clearFields() {\n      this.fileName = '';\n      this.cellAutoWidth = true;\n      this.selectedFormat = 'xls';\n    },\n    //metodo par descargar el excel\n    exportToExcel: function exportToExcel() {\n      var _this = this;\n      var headerTitle = ['codigo', 'institucion estudiante', 'periodo estudiante', 'estudiante', 'cedula', 'estado', 'liquidacion', 'código de barras', 'bc_estado', 'venta estado', 'institucion barras', 'periodo barras'];\n      var headerVal = ['codigo', 'nombreInstitucion', 'periodo', 'estudiante', 'cedula', 'codigoEstado', 'liquidacion', 'status', 'barrasEstado', 'ventaEstado', 'institucionBarra', 'periodo_barras'];\n      var codigoSelectedMayus = this.codigoSelected;\n      for (var i = 0; i < codigoSelectedMayus.length; i++) {\n        for (var key in codigoSelectedMayus[i]) {\n          if (typeof codigoSelectedMayus[i][key] == \"string\") {\n            codigoSelectedMayus[i][key] = codigoSelectedMayus[i][key].toUpperCase();\n          }\n        }\n      }\n      import('@/vendor/Export2Excel').then(function (excel) {\n        var list = codigoSelectedMayus;\n        var data = _this.formatJson(headerVal, list);\n        excel.export_json_to_excel({\n          header: headerTitle,\n          data: data,\n          filename: _this.fileName,\n          autoWidth: _this.cellAutoWidth,\n          bookType: _this.selectedFormat\n        });\n        _this.clearFields();\n        _this.guardarActivo = '';\n        _this.generarActivo = ' ';\n        _this.textAlertCant = '';\n        _this.cantidad = '';\n        _this.codigoSelected = [];\n      });\n    },\n    formatJson: function formatJson(filterVal, jsonData) {\n      return jsonData.map(function (v) {\n        return filterVal.map(function (j) {\n          return v[j];\n        });\n      });\n    }\n  }\n};",{"version":3,"names":["ImportExcel","vSelect","gestionCodigosListaVue","components","data","_defineProperty","codigosPerdidos","tableData","header","sheetName","usuario","modalConfirm","modalErrores","errores","tipo_selected","cedulas_no_encontradas","modalCedulas","codigosNoCambiados","codigosConLiquidacion","codigoNoExiste","porcentaje","usuarioSeleccionado","razonBusqueda","valorBusqueda","estudiantesCursos","region","periodos","periodo","getPeriodo","datos","idusuario","activePrompt","codigoSelected","reportesActivo","fileName","formats","cellAutoWidth","selectedFormat","codigosNoExisten","cantidadNoExisten","instituciones","busquedaInstitucion","nombreInstitucion","institucion_id","cliente","observacion","counterDanger","arregloPeriodos","created","JSON","parse","localStorage","getItem","getPeriodos","methods","loadDataInTable","_ref2","results","meta","procesarPagos","me","$vs","notify","text","color","iconPack","icon","tipo","trim","undefined","length","loading","json_pagos","stringify","formData","FormData","append","idperiodoescolar","dLiquidado","$http","post","$server_url","then","res","close","status","message","codigosSinCodigoUnion","popupProblemasCodigosUnion","cambiados","catch","error","openConfirm","codigo","$","each","key","value","push","recargar","location","reload","busquedaFiltroEstudiante","get","console","log","asignarUsuario","tr","name_usuario","getInstitucion","asignarInstitucion","idInstitucion","clearFields","exportToExcel","_this","headerTitle","headerVal","codigoSelectedMayus","i","toUpperCase","excel","list","formatJson","export_json_to_excel","filename","autoWidth","bookType","guardarActivo","generarActivo","textAlertCant","cantidad","filterVal","jsonData","map","v","j"],"sources":["src/views/codigos/components/ImportLimpiarData.vue"],"sourcesContent":["\r\n<template>\r\n  <div>\r\n    <vs-popup title=\"Errores en excel de los codigos\" :active.sync=\"modalErrores\" style=\"padding: 0% !important;\">\r\n       <div class=\"w-full\" style=\"background: rgb(121,9,9); padding: 20px; border-radius: 5px; background: linear-gradient(90deg, rgba(121,9,9,1) 28%, rgba(255,0,48,1) 100%); color: white;\">\r\n         <div class=\"vx-row\">\r\n            <div class=\"vx-col sm:w-1/2 w-full\">\r\n                <b>Código</b>\r\n            </div>\r\n            <div class=\"vx-col sm:w-1/2 w-full\">\r\n                <b>Institución</b>\r\n            </div>\r\n        </div>\r\n        <vs-divider></vs-divider>\r\n        <div :key=\"index\" v-for=\"(item, index) in errores\">\r\n          <div class=\"vx-row\">\r\n              <div class=\"vx-col sm:w-1/2 w-full\">\r\n                  <span v-if=\"item.codigo\"> {{item.codigo}} </span>\r\n              </div>\r\n              <div class=\"vx-col sm:w-1/2 w-full\">\r\n                  <span v-if=\"item.Id_institucion\"> {{item.Id_institucion}} </span>\r\n              </div>\r\n               <div class=\"vx-col sm:w-1/2 w-full\">\r\n                  <span v-if=\"item.comentario\"> {{item.comentario}} </span>\r\n              </div>\r\n              <div class=\"vx-col sm:w-1/2 w-full\">\r\n                  <span v-if=\"item.venta_estado\"> {{item.venta_estado}} </span>\r\n              </div>\r\n          </div>\r\n        </div>\r\n       </div>\r\n    </vs-popup>\r\n    <vs-popup title=\"Códigos no encontrados\" :active.sync=\"modalCedulas\" @accept=\"recargar()\" @close=\"recargar()\" @cancel=\"recargar()\"  style=\"padding: 0% !important;\">\r\n       <div class=\"w-full\" style=\"background: rgb(235,147,25); background: linear-gradient(90deg, rgba(235,147,25,1) 28%, rgba(255,166,0,1) 100%); color: white; border-radius: 5px; padding: 10px;\">\r\n        <div class=\"vx-row\">\r\n          <div class=\"vx-col w-full\" align=\"center\">\r\n           <b>Codigos a las que no se aplicaron correctamente</b>\r\n          </div>\r\n        </div>\r\n        <vs-divider></vs-divider>\r\n        <div :key=\"index\" v-for=\"(item, index) in cedulas_no_encontradas\">\r\n          <div class=\"vx-row\">\r\n              <div class=\"vx-col w-full\" align=\"center\"> <span> {{item}} </span> </div>\r\n          </div>\r\n        </div>\r\n       </div>\r\n    </vs-popup>\r\n    <vs-popup small title=\"Confirmación\" :active.sync=\"modalConfirm\">\r\n      <div class=\"w-full mb-base\" align=\"center\">\r\n        <h4>Está seguro de aplicar estas códigos?</h4>\r\n      </div>\r\n      <div class=\"w-full\" align=\"center\">\r\n        <vs-button class=\"mb-2\" color=\"danger\" type=\"gradient\" @click=\"procesarPagos()\"> Confirmar </vs-button>\r\n      </div>\r\n    </vs-popup>\r\n    <vs-card>\r\n      <div slot=\"header\">\r\n        <p>Generar devolucion</p>\r\n      </div>\r\n      <div v-if=\"tipo == '1'\">\r\n          <vs-row class=\"mt-3\">\r\n            <vs-col vs-type=\"flex\" vs-justify=\"left\" vs-align=\"left\" vs-w=\"12\">\r\n                <div style=\"width:95%;display:flex;\">\r\n                  <div style=\"width:95%;\">\r\n                  <p style=\"margin-left:30px;\">Busqueda de la institución</p>\r\n                    <vs-input icon=\"search\" class=\"mt-2\" style=\"width:95%;margin-left: 30px;\" placeholder=\"Search\" @keyup.enter=\"getInstitucion()\"  v-model=\"busquedaInstitucion\"/>\r\n                  </div>\r\n                  <div style=\"width:10%;margin-left:20px;margin-top:15px;\">\r\n                      <vs-button radius color=\"warning\" class=\"mt-3 ml-5\" @click=\"getInstitucion()\" type=\"filled\" icon=\"search\"></vs-button>\r\n                  </div>\r\n                </div>\r\n            </vs-col>\r\n        </vs-row>\r\n        <vs-row>\r\n          <vs-col vs-type=\"flex\" vs-justify=\"center\"  vs-align=\"center\" vs-w=\"12\">\r\n              <vs-table stripe max-items=\"50\" v-if=\"instituciones.length > 0\" style=\"width: 100%;\" search pagination :data=\"instituciones\">\r\n                  <template slot=\"header\">\r\n                      <div class=\"vx-row\">\r\n                          <div class=\"vx-col w-full m-3\">\r\n                              Cantidad: {{instituciones.length}}\r\n                          </div>\r\n                      </div>\r\n                  </template>\r\n                  <template slot=\"thead\">\r\n                      <vs-th sort-key=\"idInstitucion\">#</vs-th>\r\n                      <vs-th sort-key=\"nombreInstitucion\">Institución (asesor)</vs-th>\r\n                      <vs-th sort-key=\"nombre\">Localidad</vs-th>\r\n                      <!-- <vs-th sort-key=\"nombre\">Estado Periodo</vs-th> -->\r\n                      <vs-th sort-key=\"nombre\">Accion</vs-th>\r\n                  </template>\r\n                  <template slot-scope=\"{data}\">\r\n                      <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                            <vs-td :data=\"data[indextr].idInstitucion \">\r\n                              {{data[indextr].idInstitucion }}\r\n                          </vs-td>\r\n                          <vs-td :data=\"data[indextr].nombreInstitucion\">\r\n                            {{data[indextr].nombreInstitucion}}<br>\r\n                            <div v-if=\"data[indextr].nombre_asesor == null &&  data[indextr].apellido_asesor == null\">\r\n                                <small> <i style=\"color:red;\">No existe asesor </i></small><br>\r\n                            </div>\r\n                            <div v-else>\r\n                                <small> <i>{{data[indextr].nombre_asesor}} {{data[indextr].apellido_asesor}} </i></small><br>\r\n                            </div>\r\n                            <small>{{data[indextr].fecha_registro}} </small>\r\n                          </vs-td>\r\n                          <vs-td :data=\"data[indextr].nombreregion\">\r\n                              {{data[indextr].nombreregion}} <br>\r\n                              <small>{{data[indextr].ciudad}}</small>\r\n                          </vs-td>\r\n                          <!-- <vs-td>\r\n                            <small class=\"\" >{{ tr.periodo }}</small><br>\r\n                            <vs-chip v-if=\"tr.statusPeriodo == '1'\" color=\"success\" style=\"margin-left:-5px;\">{{ tr.estadoPeriodo }}</vs-chip>\r\n                            <vs-chip v-else color=\"danger\" style=\"margin-left:-5px;\">{{ tr.estadoPeriodo }}</vs-chip>\r\n                          </vs-td> -->\r\n                          <vs-td>\r\n                              <vs-button type=\"relief\" @click=\"asignarInstitucion(tr)\">Asignar Institucion</vs-button>\r\n                          </vs-td>\r\n                      </vs-tr>\r\n                  </template>\r\n              </vs-table>\r\n          </vs-col>\r\n        </vs-row>\r\n        <vs-row class=\"mt-2\">\r\n          <vs-col  vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\">\r\n              <vs-input label=\"Cliente\"  v-model=\"cliente\" style=\"width:95%;\" placeholder=\"Nombre\"/>\r\n          </vs-col>\r\n        </vs-row>\r\n        <vs-row class=\"mt-3\">\r\n          <vs-col vs-type=\"flex\" vs-justify=\"start\" vs-align=\"start\" vs-w=\"6\">\r\n            <ul class=\"leftx\" style=\"display:flex;flex-direction: row;\">\r\n              <li class=\"mt-1 ml-10\">Región</li>\r\n              <li class=\"ml-2\">\r\n              <vs-radio v-model=\"region\" vs-name=\"radiosRegion\" @input=\"getPeriodos()\" vs-value=\"1\">Sierra</vs-radio>\r\n              </li>\r\n              <li class=\"ml-2\">\r\n              <vs-radio v-model=\"region\" vs-name=\"radiosRegion\" @input=\"getPeriodos()\" vs-value=\"2\">Costa</vs-radio>\r\n              </li>\r\n            </ul>\r\n          </vs-col>\r\n          <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"6\">\r\n            <ul class=\"leftx\" style=\"display:flex;flex-direction: row;\">\r\n              <li>Devolver liquidados</li>\r\n              <li class=\"ml-2\">\r\n              <vs-radio v-model=\"dLiquidado\" vs-name=\"radiosdLiquidado\" vs-value=\"0\">No</vs-radio>\r\n              </li>\r\n              <li class=\"ml-2\">\r\n              <vs-radio v-model=\"dLiquidado\" vs-name=\"radiosdLiquidado\" vs-value=\"1\">Si</vs-radio>\r\n              </li>\r\n            </ul>\r\n         </vs-col>\r\n        </vs-row>\r\n        <div class=\"vx-col w-full mt-3\">\r\n            <p style=\"margin-left: 30px;\">Seleccione el periodo:</p>\r\n            <v-select  style=\"width:95%;margin-left: 30px;\" :options=\"arregloPeriodos\" :reduce=\"arregloPeriodos => arregloPeriodos\" label=\"periodo\"  v-model=\"periodo\" />\r\n        </div>\r\n        <br>\r\n        <vs-row>\r\n            <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\">\r\n            <vs-textarea counter=\"500\" style=\"width:95%;\" label=\"Observacion\" :counter-danger.sync=\"counterDanger\" v-model=\"observacion\" />\r\n            </vs-col>\r\n        </vs-row>\r\n      </div>\r\n      <div class=\"mb-6 mt-5\" align=\"center\">\r\n          <div class=\"vx-col w-full\">\r\n            <p style=\"color:#B251E3;\">\r\n              <i class=\"fa fa-file\" aria-hidden=\"true\"></i>{{title}}<span style=\"font-weight: bold;\"> (No ingrese más de 1000 registros en una sola carga.)</span>\r\n            </p>\r\n            <div v-if=\"nombreInstitucion.length > 1\">\r\n              <p style=\"color:red;font-weight:bold;\">Institucion asignada <span>{{nombreInstitucion}}</span></p>\r\n            </div>\r\n          </div>\r\n          <br/>\r\n          <import-excel :onSuccess=\"loadDataInTable\"  class=\"mb-4\" />\r\n        <div>\r\n            <vs-row>\r\n              <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\" vs-sm = \"12\" vs-xs=\"12\" >\r\n                <vs-card>\r\n                  <div class=\"header\">\r\n                    <p style=\"font-weight: bold;\">Formato del archivo excel</p>\r\n                    <table class=\"tabla\">\r\n                        <tr>\r\n                          <th class=\"th1\">codigo</th>\r\n                        </tr>\r\n                        <tr>\r\n                          <td class=\"td1\">xxx</td>\r\n                        </tr>\r\n                    </table>\r\n                  </div>\r\n                </vs-card>\r\n              </vs-col>\r\n            </vs-row>\r\n        </div>\r\n          <!-- {{tableData}} -->\r\n          <vs-alert v-if=\"tableData.length > 0\" class=\"mb-3\" color=\"success\" icon-pack=\"feather\" icon=\"icon-alert-triangle\">\r\n              <span>Excel cargado exitosamente. ¿Está seguro de procesar estos códigos?</span><br>\r\n          </vs-alert>\r\n          <vs-row v-if=\"tableData.length > 0 && tableData.length <= 1000 \">\r\n              <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\">\r\n                <vs-button class=\"mb-2\" color=\"primary\"  type=\"relief\" @click=\"openConfirm(0)\">devolver codigos </vs-button>\r\n              </vs-col>\r\n          </vs-row>\r\n          <vs-row v-if=\"codigosPerdidos == true\">\r\n              <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\">\r\n                  <vs-alert active=\"true\" style=\"height: 60px;\">\r\n                      Se devolvio  {{ porcentaje }} códigos\r\n                      <vs-button v-if=\"codigosSinCodigoUnion.length > 0\" @click=\"popupProblemasCodigosUnion = true;\" color=\"primary\" type=\"border\">Mostrar códigos sin código unión</vs-button>\r\n                  </vs-alert>\r\n              </vs-col>\r\n          </vs-row>\r\n          <vs-row v-if=\"codigosPerdidos == true\">\r\n             <vs-card>\r\n              <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"6\">\r\n                  <vs-list>\r\n                    <p>Cantidad <span>{{ codigosNoCambiados.length }}</span></p>\r\n                      <vs-list-header icon=\"supervisor_account\" title=\"Códigos que no se pudieron cambiar\"></vs-list-header>\r\n                      <vs-list-item :key=\"indextr\" v-for=\"(tr, indextr) in codigosNoCambiados\" icon=\"check\" :title=\"tr.codigo\" >\r\n                        <p v-if=\"tr.mensaje !='0'\"> {{ tr.mensaje }}</p>\r\n                      </vs-list-item>\r\n                  </vs-list>\r\n              </vs-col>\r\n              <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"6\">\r\n                  <vs-list>\r\n                    <p>Cantidad <span>{{ codigoNoExiste.length }}</span></p>\r\n                      <vs-list-header icon=\"supervisor_account\" title=\"Códigos que no existen\"></vs-list-header>\r\n                      <vs-list-item :key=\"s\" v-for=\"(tr, s) in codigoNoExiste\" icon=\"check\" :title=\"tr.codigo\" >\r\n                      </vs-list-item>\r\n                  </vs-list>\r\n              </vs-col>\r\n            </vs-card>\r\n          </vs-row>\r\n      </div>\r\n    </vs-card>\r\n    <vs-row v-if=\"codigosPerdidos == true\">\r\n        <vs-card>\r\n          <div class=\"header\">\r\n              <span style=\"font-weight:bold;\">Codigos que ya ha sido liquidados / o estan en otra institución</span>\r\n          </div>\r\n          <gestionCodigosListaVue :arregloCodigos=\"codigosConLiquidacion\" openModal=\"1\"/>\r\n        </vs-card>\r\n    </vs-row>\r\n    <vx-card v-if=\"tableData.length && header.length\">\r\n      <vs-table stripe pagination :max-items=\"10\" search :data=\"tableData\">\r\n        <template slot=\"header\">\r\n          <h4>Códigos a subir {{tableData.length}}</h4>\r\n        </template>\r\n        <template slot=\"thead\">\r\n          <vs-th :sort-key=\"heading\" v-for=\"heading in header\" :key=\"heading\">{{ heading }}</vs-th>\r\n        </template>\r\n        <template slot-scope=\"{data}\">\r\n          <vs-tr :data=\"tr\" :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n            <vs-td :data=\"col\" v-for=\"(col, indexcol) in data[indextr]\" :key=\"indexcol + col\">\r\n              {{ col }}\r\n            </vs-td>\r\n          </vs-tr>\r\n        </template>\r\n      </vs-table>\r\n    </vx-card>\r\n     <!--MODAL PARA EXPORTAR A EXCEL-->\r\n    <vs-prompt title=\"Exportar a Excel\" class=\"export-options\" @cancle=\"clearFields\" @accept=\"exportToExcel\" accept-text=\"Exportar\" @close=\"clearFields\" :active.sync=\"activePrompt\">\r\n      <vs-alert class=\"mb-3\" color=\"danger\" icon-pack=\"feather\" icon=\"icon-info\">\r\n          <span>Recuerde <b>seleccionar</b> los códigos que desea exportar.</span>\r\n      </vs-alert>\r\n      <vs-input v-model=\"fileName\" placeholder=\"Ingrese el nombre del archivo\" class=\"w-full\" />\r\n      <v-select v-model=\"selectedFormat\" :options=\"formats\" class=\"my-4\" />\r\n    </vs-prompt>\r\n    <!--MODAL PARA MOSTRAR CODIGOS SIN CODIGO UNION-->\r\n    <vs-popup classContent=\"popup-example\" title=\"Códigos sin código Unión\" fullscreen :active.sync=\"popupProblemasCodigosUnion\">\r\n      <gestionCodigosListaVue :arregloCodigos=\"codigosSinCodigoUnion\" openModal=\"0\"/>\r\n    </vs-popup>\r\n  </div>\r\n</template>\r\n<script>\r\nimport ImportExcel from './importExcel.vue'\r\nimport vSelect from 'vue-select'\r\nimport gestionCodigosListaVue from './utils/gestionCodigosLista.vue'\r\nexport default {\r\n  components: {\r\n    ImportExcel,\r\n    vSelect,\r\n    gestionCodigosListaVue,\r\n  },\r\n  data () {\r\n    return {\r\n      codigosPerdidos:false,\r\n      tableData: [],\r\n      header: [],\r\n      sheetName: '',\r\n      usuario: [],\r\n      modalConfirm: false,\r\n      modalErrores: false,\r\n      errores: [],\r\n      tipo_selected: '',\r\n      cedulas_no_encontradas: [],\r\n      modalCedulas: false,\r\n      codigosNoCambiados:[],\r\n      codigosConLiquidacion:[],\r\n      codigoNoExiste:[],\r\n      porcentaje:0,\r\n      usuarioSeleccionado:'',\r\n      razonBusqueda:'',\r\n      valorBusqueda:'cedula',\r\n      estudiantesCursos:[],\r\n      region:'2',\r\n      periodos:[],\r\n      periodo:{\r\n        getPeriodo:''\r\n      },\r\n      datos:{\r\n        usuario:'',\r\n        idusuario:'',\r\n        periodo:'',\r\n      },\r\n      //variables para el export a excel\r\n      activePrompt:false,\r\n      codigoSelected: [],\r\n      reportesActivo: 0,\r\n      fileName: null,\r\n      formats: ['xls', 'xlsx', 'csv', 'txt'],\r\n      cellAutoWidth: true,\r\n      selectedFormat: 'xlsx',\r\n      codigosNoExisten:[],\r\n      cantidadNoExisten:0,\r\n      instituciones:[],\r\n      busquedaInstitucion:'',\r\n      nombreInstitucion:'',\r\n      institucion_id:'',\r\n      cliente:'',\r\n      observacion:'',\r\n      counterDanger: false,\r\n      arregloPeriodos:[],\r\n      periodo:'',\r\n      tipo:'1',\r\n      title:'Estos códigos van a ser devueltos seran quitados el usuario, venta_estado, etc. Mientras no esten liquidados ni Leidos',\r\n      //variables para codigos union\r\n      codigosSinCodigoUnion:[],\r\n      popupProblemasCodigosUnion:false,\r\n      //fin variables para codigos union\r\n      dLiquidado:0,\r\n    }\r\n  },\r\n  created(){\r\n        this.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n        this.codigosPerdidos = false\r\n        this.getPeriodos()\r\n    },\r\n  methods: {\r\n    loadDataInTable ({ results, header, meta }) {\r\n      this.codigosPerdidos  = false;\r\n      this.header           = header\r\n      this.tableData        = results\r\n      this.sheetName        = meta.sheetName\r\n    },\r\n    procesarPagos(){\r\n      let me = this\r\n      if(me.institucion_id <= 0){\r\n          me.$vs.notify({\r\n          text:'Seleccione una institución por favor',\r\n          color:'warning',\r\n          iconPack: 'feather',\r\n          icon:'icon-check'})\r\n          return false\r\n      }\r\n      if(me.tipo == 1){\r\n        if(me.cliente.trim() == \"\"){\r\n          me.$vs.notify({\r\n          text:'Debe ingresar un cliente por favor',\r\n          color:'warning',\r\n          iconPack: 'feather',\r\n          icon:'icon-check'})\r\n          return\r\n      }\r\n      if(me.periodo == undefined  || me.periodo == null || me.periodo == \"\"){\r\n        me.$vs.notify({\r\n        text:'Seleccione un periodo',\r\n        color:'success',\r\n        iconPack: 'feather',\r\n        icon:'icon-check'})\r\n        return false\r\n        }\r\n      }\r\n      if(me.observacion == \"\"){\r\n          me.$vs.notify({\r\n          text:'Debe ingresar una observación',\r\n          color:'warning',\r\n          iconPack: 'feather',\r\n          icon:'icon-check'})\r\n          return\r\n        }\r\n        if(me.observacion.length < 5){\r\n          me.$vs.notify({\r\n          text:'La observación debe tener al menos 5 caracteres',\r\n          color:'warning',\r\n          iconPack: 'feather',\r\n          icon:'icon-check'})\r\n          return\r\n        }\r\n\r\n        me.$vs.loading()\r\n        let json_pagos = JSON.stringify(me.tableData)\r\n        let formData = new FormData();\r\n        formData.append('data_codigos',   json_pagos);\r\n        formData.append('admin',          'yes')\r\n        formData.append('id_usuario',     me.usuario.idusuario);\r\n        formData.append('usuario_editor', me.usuario.idusuario);\r\n        formData.append('cliente',        me.cliente);\r\n        formData.append('observacion',    me.observacion);\r\n        formData.append('institucion_id', me.institucion_id);\r\n        formData.append('periodo_id',     me.periodo.idperiodoescolar)\r\n        if(me.dLiquidado == 1)            formData.append('dLiquidado',     me.dLiquidado)\r\n        this.$http.post(this.$server_url+'codigos/bodega/devolver', formData)\r\n        .then(res => {\r\n          me.codigosConLiquidacion = res.data.codigosConLiquidacion\r\n          me.$vs.loading.close()\r\n          if(res.data.status == 0){\r\n            me.$vs.notify({\r\n            text:res.data.message,\r\n            color:'success',\r\n            iconPack: 'feather',\r\n            icon:'icon-check'})\r\n            return false\r\n          }\r\n          me.$vs.notify({\r\n          text:'Códigos procesados exitosamente',\r\n          color:'success',\r\n          iconPack: 'feather',\r\n          icon:'icon-check'})\r\n          me.modalConfirm           = false\r\n          me.tableData              = []\r\n          me.codigosPerdidos        = true\r\n          me.codigosNoCambiados     = res.data.codigosNoCambiados\r\n          me.codigosSinCodigoUnion  = res.data.codigosSinCodigoUnion\r\n          if(me.codigosSinCodigoUnion.length > 0){\r\n            me.popupProblemasCodigosUnion = true\r\n          }\r\n          me.codigoNoExiste         = res.data.codigoNoExiste\r\n          me.porcentaje             = res.data.cambiados\r\n        })\r\n        .catch(function (error) {\r\n            me.$vs.notify({\r\n            text:'Verifique que la información se haya guardado correctamente.',\r\n            color:'warning',\r\n            iconPack: 'feather',\r\n            icon:'icon-alert-triangle'})\r\n            me.$vs.loading.close()\r\n            // setTimeout(function() {location.reload()}, 1000);\r\n        })\r\n    },\r\n    openConfirm(tipo) {\r\n      let me = this\r\n      me.tipo_selected = tipo\r\n      if( !me.tableData[0].codigo){\r\n            me.$vs.loading.close()\r\n            me.$vs.notify({ text:'Corrija el formato del excel y vuelva a intentar.', color:'warning', iconPack: 'feather', icon:'icon-alert-triangle'})\r\n            return\r\n      }\r\n      me.errores = []\r\n      $.each(me.tableData,function(key, value){\r\n        if( !value.codigo){\r\n          me.errores.push(value)\r\n        }\r\n      })\r\n      if( me.errores.length > 0 ){\r\n        me.modalErrores = true\r\n      }else{\r\n        me.modalConfirm = true\r\n      }\r\n    },\r\n    recargar(){\r\n      location.reload()\r\n    },\r\n     busquedaFiltroEstudiante(){\r\n      let me = this;\r\n      me.estudiantesCursos = [];\r\n      if(me.razonBusqueda.length < 5){\r\n        me.$vs.notify({\r\n        text:'Minimo 5 caracteres de busqueda',\r\n        color:'warning',\r\n        iconPack: 'feather',\r\n        icon:'icon-check'})\r\n        return false;\r\n      }\r\n      me.$vs.loading();\r\n        //para los administradores\r\n        this.$http.get(this.$server_url+'busquedaFiltroEstudiante?busqueda='+me.valorBusqueda+'&razonBusqueda='+me.razonBusqueda)\r\n        .then(function (res) {\r\n          me.$vs.loading.close()\r\n          if(res.data.status == '0'){\r\n            me.$vs.notify({\r\n            text: res.data.message,\r\n            color:'primary',\r\n            iconPack: 'feather',\r\n            icon:'icon-check'})\r\n            return false;\r\n          }else{\r\n            me.estudiantesCursos = res.data\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error + ' error');\r\n            me.$vs.loading.close()\r\n        })\r\n    },\r\n\r\n    asignarUsuario(tr){\r\n       let me = this;\r\n       me.datos.usuario = tr.name_usuario\r\n       me.datos.idusuario  = tr.idusuario\r\n       me.estudiantesCursos = []\r\n    },\r\n      //lista de ciudades para usar en el select\r\n    getPeriodos() {\r\n      let me = this\r\n      this.$http.get(this.$server_url + 'periodo?porAllEstados=yes&region='+me.region).then(res => {\r\n              me.arregloPeriodos = res.data;\r\n          })\r\n          .catch(function (error) {\r\n              console.log(error)\r\n          })\r\n    },\r\n\r\n     //PARA ASIGNAR UNA INSTITUCION\r\n    getInstitucion() {\r\n      let me                = this;\r\n      me.instituciones      = [];\r\n      me.nombreInstitucion  = \"\";\r\n      me.institucion_id     = \"\";\r\n      me.cliente            = \"\";\r\n      if(me.busquedaInstitucion.length < 5){\r\n          me.$vs.notify({\r\n          text:'Minimo 5 caracteres de busqueda',\r\n          color:'warning',\r\n          iconPack: 'feather',\r\n          icon:'icon-check'})\r\n\r\n          return false;\r\n      }\r\n      me.$vs.loading()\r\n      this.$http.get(this.$server_url + 'listaInsitucion?busqueda='+me.busquedaInstitucion)\r\n        .then(function (res) {\r\n            me.instituciones = res.data;\r\n            me.$vs.loading.close()\r\n            if(res.data.message){\r\n                me.$vs.notify({\r\n                text: res.data.message,\r\n                color: 'success',\r\n                iconPack: 'feather',\r\n                icon: 'icon-user'\r\n                })\r\n            }\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error + ' error');\r\n            me.$vs.loading.close()\r\n        })\r\n    },\r\n     asignarInstitucion(tr){\r\n       let me = this;\r\n       me.nombreInstitucion = tr.nombreInstitucion\r\n       me.cliente           = tr.nombreInstitucion\r\n       me.institucion_id    = tr.idInstitucion\r\n       me.instituciones     = []\r\n       me.getPeriodo(tr.idInstitucion)\r\n     },\r\n\r\n      //METODOS PARA EXCEL\r\n       //para limipiar los campos del excel\r\n        clearFields() {\r\n            this.fileName = ''\r\n            this.cellAutoWidth = true\r\n            this.selectedFormat = 'xls'\r\n        },\r\n        //metodo par descargar el excel\r\n           exportToExcel() {\r\n            let headerTitle = ['codigo','institucion estudiante','periodo estudiante',  'estudiante','cedula', 'estado','liquidacion','código de barras','bc_estado','venta estado','institucion barras','periodo barras'];\r\n            let headerVal = ['codigo', 'nombreInstitucion','periodo','estudiante','cedula', 'codigoEstado','liquidacion','status','barrasEstado','ventaEstado','institucionBarra','periodo_barras'];\r\n            let codigoSelectedMayus = this.codigoSelected\r\n            for (var i = 0; i < codigoSelectedMayus.length; i++) {\r\n                for (var key in codigoSelectedMayus[i]) {\r\n                    if (typeof codigoSelectedMayus[i][key] == \"string\") {\r\n                        codigoSelectedMayus[i][key] = codigoSelectedMayus[i][key].toUpperCase();\r\n                    }\r\n                }\r\n            }\r\n            import('@/vendor/Export2Excel').then(excel => {\r\n                const list = codigoSelectedMayus\r\n                const data = this.formatJson(headerVal, list)\r\n                excel.export_json_to_excel({\r\n                    header: headerTitle,\r\n                    data,\r\n                    filename: this.fileName,\r\n                    autoWidth: this.cellAutoWidth,\r\n                    bookType: this.selectedFormat\r\n                })\r\n                this.clearFields()\r\n                this.guardarActivo = '';\r\n                this.generarActivo = ' ';\r\n                this.textAlertCant = '';\r\n                this.cantidad = '';\r\n                this.codigoSelected = [];\r\n            })\r\n        },\r\n        formatJson(filterVal, jsonData) {\r\n            return jsonData.map(v => filterVal.map(j => {\r\n                return v[j]\r\n            }))\r\n        },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.tabla{\r\n  width: 100%;\r\n  margin-top: 10px;\r\n}\r\n .tabla {\r\n\r\n  border: 1px solid #D1E5F1;\r\n  padding: 2px;\r\n  border-radius: 5px;\r\n}\r\n.th1{\r\n  background-color: #BE75E3;\r\n  border-radius: 5px;\r\n  color:white;\r\n}\r\n.td1, .th1{\r\n padding: 10px;\r\n text-align: center;\r\n border:none;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]}]}