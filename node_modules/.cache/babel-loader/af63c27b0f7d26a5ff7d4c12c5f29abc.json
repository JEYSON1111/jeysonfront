{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\asesor\\seguimiento\\components\\components\\muestraCrear.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\asesor\\seguimiento\\components\\components\\muestraCrear.vue","mtime":1712682815525},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\babel.config.js","mtime":1712682813877},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\.babelrc","mtime":1712682813750},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport flatPickr from 'vue-flatpickr-component';\nimport 'flatpickr/dist/flatpickr.css';\nimport Vue from 'vue';\nimport axios from 'axios';\nimport vSelect from 'vue-select';\nexport default {\n  data: function data() {\n    return {\n      busquedaInstitucion: '',\n      seleccionadoInsitucion: false,\n      error: false,\n      popupAddNuevaInstitucion: false,\n      popupEditEvidencia: false,\n      institucion: '',\n      institucion_id: '',\n      periodo: '',\n      periodo_id: '',\n      arregloCiudad: [],\n      temporalInstitucion: {\n        ciudad: '',\n        nombreInstitucion: '',\n        region: '2'\n      },\n      institucion_id_temporal: '',\n      estado_institucion_temporal: 0,\n      periodo_id_temporal: 0,\n      nombreInstitucionTemporal: '',\n      estado: '5',\n      usuario: [],\n      seguimiento: {\n        observacion: '',\n        solicitante: '',\n        foto_evidencia: ''\n      },\n      configdateTimePicker: {\n        enableTime: true,\n        dateFormat: 'Y-m-d'\n      },\n      fentregar: null,\n      counterDanger: false,\n      libros: [],\n      //para los inputs\n      inputs: [{\n        cantidad: '',\n        libro: '',\n        evidencia: []\n      }],\n      attachments: [],\n      form: new FormData(),\n      numeroIteM: '0',\n      instituciones: [],\n      errorImage: '',\n      tamanioError: '',\n      archivoName: '',\n      persona_solicita: ''\n    };\n  },\n  props: {\n    tipoMuestra: {\n      type: String,\n      default: \"Crear\"\n    },\n    id: {\n      type: String,\n      default: \"0\"\n    },\n    observacion: {\n      type: String,\n      default: \"\"\n    },\n    solicitante: {\n      type: String,\n      default: \"\"\n    },\n    nombreInstitucion: {\n      type: String,\n      default: \"\"\n    },\n    fecha_entrega: {\n      type: String,\n      default: null\n    },\n    foto_evidencia: {\n      type: String,\n      default: ''\n    }\n  },\n  components: {\n    'v-select': vSelect,\n    flatPickr: flatPickr\n  },\n  created: function created() {\n    var me = this;\n    me.usuario = JSON.parse(localStorage.getItem(\"usuario\"));\n    me.institucion = localStorage.getItem(\"institucion_seguimiento_nombre\");\n    me.institucion_id = localStorage.getItem(\"institucion_seguimiento_id\");\n    me.periodo = localStorage.getItem(\"institucion_seguimiento_periodo\");\n    me.periodo_id = localStorage.getItem(\"institucion_seguimiento_periodo_id\");\n    me.isAdmin = localStorage.getItem(\"adminSeguimiento\");\n    me.getLibros();\n    me.listaCiudades();\n    me.fentregar = me.fecha_entrega;\n    if (me.tipoMuestra == \"Editar\") {\n      me.persona_solicita = me.solicitante;\n      me.seguimiento.observacion = me.observacion;\n      me.seguimiento.foto_evidencia = me.foto_evidencia;\n      me.DetalleMuestras();\n    }\n  },\n  methods: {\n    //lista de ciudades para usar en el select\n    listaCiudades: function listaCiudades() {\n      var me = this;\n      this.$http.get(this.$server_url + \"ciudad\").then(function (res) {\n        me.arregloCiudad = res.data;\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    asginarInstitucion: function asginarInstitucion(tr) {\n      var me = this;\n      me.institucion_id = tr.idInstitucion;\n      me.nombreInstitucion = tr.nombreInstitucion;\n      me.estado_institucion_temporal = 0;\n      me.seleccionadoInsitucion = false;\n      me.instituciones = [];\n    },\n    //para obtener las instituciones de prolipa\n    getInstitucion: function getInstitucion() {\n      var me = this;\n      me.instituciones = [];\n      if (me.busquedaInstitucion.length < 5) {\n        me.$vs.notify({\n          text: 'Minimo 5 caracteres de busqueda',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        return false;\n      }\n      me.$vs.loading();\n      this.$http.get(this.$server_url + 'listaInsitucionAsesor?busqueda=' + me.busquedaInstitucion + '&cedula=' + me.usuario.cedula).then(function (res) {\n        // me.tmpInstituciones = res.data;\n        me.instituciones = res.data;\n        // me.filtroRegion();\n        me.$vs.loading.close();\n        if (res.data.message) {\n          me.$vs.notify({\n            text: res.data.message,\n            color: 'success',\n            iconPack: 'feather',\n            icon: 'icon-user',\n            time: 8000\n          });\n        }\n      }).catch(function (error) {\n        console.log(error + ' error');\n        me.$vs.loading.close();\n      });\n    },\n    agregarInstitucionTemporal: function agregarInstitucionTemporal() {\n      var me = this;\n      if (me.temporalInstitucion.nombre_institucion == \"\" || me.temporalInstitucion.nombre_institucion == null || me.temporalInstitucion.nombre_institucion == undefined) {\n        me.$vs.notify({\n          color: 'primary',\n          title: 'Mensaje',\n          text: 'Debe escribir una institución por favor'\n        });\n        return false;\n      }\n      var formData = new FormData();\n      formData.append('nombre_institucion', me.temporalInstitucion.nombre_institucion);\n      formData.append('ciudad', me.temporalInstitucion.ciudad.nombre);\n      formData.append('region', me.temporalInstitucion.region);\n      formData.append('asesor_id', me.usuario.idusuario);\n      me.$vs.loading();\n      this.$http.post(this.$server_url + 'GuardarInstitucionTemporal', formData).then(function (res) {\n        me.$vs.loading.close();\n        me.popupAddNuevaInstitucion = false;\n        me.seleccionadoInsitucion = false;\n        me.nombreInstitucion = me.temporalInstitucion.nombre_institucion;\n        me.institucion_id_temporal = res.data.institucion_temporal_id;\n        me.instituciones = [];\n        me.periodo_id_temporal = res.data.periodo_id;\n        me.estado_institucion_temporal = 1;\n        me.$vs.notify({\n          text: \"Se creo la institución correctamente\",\n          color: 'success',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n      });\n    },\n    NumeroItem: function NumeroItem(id) {\n      var me = this;\n      localStorage.setItem('NumeroItem', id);\n      me.numeroIteM = localStorage.getItem('NumeroItem', id);\n    },\n    add: function add(k) {\n      var me = this;\n      if (this.inputs[k].libro == \"\") {\n        me.$vs.notify({\n          color: 'primary',\n          title: 'Mensaje',\n          text: 'Debe seleccionar un libro'\n        });\n        return false;\n      }\n      if (this.inputs[k].cantidad.length == \"\") {\n        me.$vs.notify({\n          color: 'primary',\n          title: 'Mensaje',\n          text: 'Debe escribir una cantidad de entrega'\n        });\n        return false;\n      }\n      this.inputs.push({\n        cantidad: '',\n        libro: ''\n      });\n    },\n    remove: function remove(index) {\n      this.attachments.splice(index, 1);\n      this.inputs.splice(index, 1);\n    },\n    //para subir archivos\n    fieldChange: function fieldChange(e) {\n      var me = this;\n      me.errorImage = 'no';\n      me.tamanioError = \"no\";\n      this.attachments = [];\n      var selectedFiles = e.target.files;\n      var validar = e.target.files[0].type;\n      var tamanio = e.target.files[0].size;\n      if (tamanio > 1000000) {\n        me.tamanioError = \"yes\";\n        me.$vs.notify({\n          text: 'El tamaño de la imagen excede 1MB',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        return false;\n      }\n      if (validar == 'image/png' || validar == 'image/jpg' || validar == 'image/jpeg') {\n        for (var i = 0; i < selectedFiles.length; i++) {\n          this.attachments.push(selectedFiles[i]);\n          localStorage.setItem('nameArchivo', this.attachments[0].name);\n          me.archivoName = localStorage.getItem(\"nameArchivo\");\n        }\n        me.errorImage = 'no';\n      } else {\n        me.errorImage = 'yes';\n        me.$vs.notify({\n          text: 'Formato de imagen no aceptada solo se acepta png/jpg/jpeg',\n          color: 'success',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        return false;\n      }\n    },\n    //para guardar\n    uploadFile: function uploadFile() {\n      var _this = this;\n      var me = this;\n      if (me.seguimiento.observacion.length >= 500) {\n        me.$vs.notify({\n          color: 'primary',\n          title: 'Mensaje',\n          text: 'El observación debe tener un maximo de 500 caracteres'\n        });\n        return false;\n      }\n      if (me.fentregar == null) {\n        me.$vs.notify({\n          text: 'Debe escoger una fecha de entrega',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        return false;\n      }\n      if (me.tipoMuestra == \"Editar\") {\n        this.form.append('muestra_id', me.id);\n      }\n      if (me.tipoMuestra == \"Crear\") {\n        if (me.attachments.length == 0) {\n          me.$vs.notify({\n            text: 'Seleccione una imagen antes de enviar',\n            color: 'warning',\n            iconPack: 'feather',\n            icon: 'icon-check'\n          });\n          return false;\n        }\n      }\n\n      //Si se envia imagenes\n      for (var i = 0; i < this.attachments.length; i++) {\n        if (me.attachments.length == 0) {} else {\n          this.form.append('enviarArchivo', 'yes');\n          this.form.append('archivo[]', this.attachments[i]);\n        }\n      }\n      this.form.append('fecha_entrega', me.fentregar);\n      this.form.append('observacion', me.seguimiento.observacion);\n      this.form.append('persona_solicita', me.persona_solicita);\n      this.form.append('institucion_id', me.institucion_id);\n      this.form.append('institucion_id_temporal', me.institucion_id_temporal);\n      this.form.append('estado_institucion_temporal', me.estado_institucion_temporal);\n      this.form.append('periodo_id_temporal', me.periodo_id_temporal);\n      this.form.append('nombreInstitucion', me.nombreInstitucion);\n      this.form.append('tipoMuestra', me.tipoMuestra);\n      if (me.isAdmin == \"yes\") {\n        me.asesorDesdeAdmin = localStorage.getItem(\"institucion_seguimiento_asesor_id\");\n        this.form.append('usuario_editor', me.usuario.idusuario);\n        this.form.append('admin', \"yes\");\n      } else {\n        me.asesorDesdeAdmin = me.usuario.idusuario;\n      }\n      this.form.append('asesor_id', me.asesorDesdeAdmin);\n      this.form.append('periodo_id', me.periodo_id);\n      for (var _i = 0; _i < this.inputs.length; _i++) {\n        // this.form.append('archivo[]', me.inputs[i].evidencia);\n        this.form.append('cantidad[]', me.inputs[_i].cantidad);\n        this.form.append('libro[]', me.inputs[_i].libro.idlibro);\n      }\n      var config = {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      };\n      document.querySelectorAll('.upload-file').value = [];\n      me.$vs.loading();\n      axios.post(this.$data_url + 'api/muestra', this.form, config)\n      // this.$http.post(this.$server_url + 'muestra', this.form, config)\n      .then(function (response) {\n        me.$vs.loading.close();\n        if (response.data.status == \"0\") {\n          me.$vs.notify({\n            text: 'No se pudo ingresar la informacion',\n            color: 'danger',\n            iconPack: 'feather',\n            icon: 'icon-check'\n          });\n          _this.form = \"\";\n          me.libro.libro = \"\";\n          // me.borrartodo()\n          me.inputs.cantidad = \"\";\n          me.inputs.libro = \"\";\n          me.inputs.evidencia = \"\";\n        }\n        if (response.data.status == \"1\") {\n          me.$vs.notify({\n            text: 'Se guardo correctamente',\n            color: 'success',\n            iconPack: 'feather',\n            icon: 'icon-check'\n          });\n          me.$vs.loading.close();\n          location.reload();\n        }\n      }).catch(function (response) {\n        me.$vs.loading.close();\n      });\n    },\n    //para obtener el listado de Tipos de Area\n    getLibros: function getLibros() {\n      var me = this;\n      this.$http.get(this.$server_url + 'listaLibro').then(function (res) {\n        me.libros = res.data.libros;\n      }).catch(function (error) {\n        console.log(error + ' error');\n      });\n    }\n  }\n};",{"version":3,"names":["flatPickr","Vue","axios","vSelect","data","busquedaInstitucion","seleccionadoInsitucion","error","popupAddNuevaInstitucion","popupEditEvidencia","institucion","institucion_id","periodo","periodo_id","arregloCiudad","temporalInstitucion","ciudad","nombreInstitucion","region","institucion_id_temporal","estado_institucion_temporal","periodo_id_temporal","nombreInstitucionTemporal","estado","usuario","seguimiento","observacion","solicitante","foto_evidencia","configdateTimePicker","enableTime","dateFormat","fentregar","counterDanger","libros","inputs","cantidad","libro","evidencia","attachments","form","FormData","numeroIteM","instituciones","errorImage","tamanioError","archivoName","persona_solicita","props","tipoMuestra","type","String","default","id","fecha_entrega","components","created","me","JSON","parse","localStorage","getItem","isAdmin","getLibros","listaCiudades","DetalleMuestras","methods","$http","get","$server_url","then","res","catch","console","log","asginarInstitucion","tr","idInstitucion","getInstitucion","length","$vs","notify","text","color","iconPack","icon","loading","cedula","close","message","time","agregarInstitucionTemporal","nombre_institucion","undefined","title","formData","append","nombre","idusuario","post","institucion_temporal_id","NumeroItem","setItem","add","k","push","remove","index","splice","fieldChange","e","selectedFiles","target","files","validar","tamanio","size","i","name","uploadFile","_this","asesorDesdeAdmin","idlibro","config","headers","document","querySelectorAll","value","$data_url","response","status","location","reload"],"sources":["src/views/asesor/seguimiento/components/components/muestraCrear.vue"],"sourcesContent":["<template>\r\n<div>\r\n    <vs-alert active=\"true\" class=\"mt-2 titulo\">\r\n        <p style=\"text-align: center;\"> <i class=\"fa fa-camera\" aria-hidden=\"true\"></i> {{ tipoMuestra }} muestras <span style=\"font-weight: 400;\">(Debe Ingresar una imagen para la evidencia)</span></p>\r\n\r\n    </vs-alert>\r\n\r\n    <vs-row v-if=\"seleccionadoInsitucion ==  false\" class=\"mt-5\">\r\n        <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\">\r\n            <p style=\"color:red;\" v-if=\"nombreInstitucion == '' || nombreInstitucion == null \">\r\n                <vs-chip color=\"danger\">Sin Institución </vs-chip>\r\n            </p>\r\n            <vs-chip color=\"success\" v-else>\r\n                Institución {{ nombreInstitucion}}\r\n            </vs-chip>\r\n        </vs-col>\r\n    </vs-row>\r\n\r\n    <vs-row v-if=\"seleccionadoInsitucion == false\" class=\"mt-2\">\r\n        <vs-col vs-type=\"flex\" vs-justify=\"left\" vs-align=\"left\" vs-w=\"6\">\r\n            <vs-button size=\"small\" color=\"success\" style=\"border-radius:10px;\" @click=\"seleccionadoInsitucion = true;error = false\" icon=\"control_point\" type=\"line\">\r\n                Asignar Institución de prolipa\r\n            </vs-button>\r\n            <vs-button size=\"small\" style=\"border-radius:10px;\" icon=\"library_add_check\" class=\"ml-1\" @click=\"popupAddNuevaInstitucion = true;\" type=\"line\">Añadir nueva institución</vs-button>\r\n        </vs-col>\r\n    </vs-row>\r\n\r\n    <div style=\"width:100%;display:flex;\" v-if=\"seleccionadoInsitucion ==  true\" class=\"mt-5\">\r\n        <div style=\"width:70%;\">\r\n            <vs-input icon=\"search\" style=\"width:100%;\" placeholder=\"Search\" @keyup.enter=\"getInstitucion()\" v-model=\"busquedaInstitucion\" />\r\n        </div>\r\n\r\n        <div style=\"width:30%;margin-left:15px;display:flex;\">\r\n\r\n            <vs-button radius color=\"warning\" @click=\"getInstitucion()\" type=\"filled\" icon=\"search\"></vs-button>\r\n            <vx-tooltip style=\"display: inline-block;\" text=\"Regresar\" position=\"top\" color=\"primary\">\r\n                <vs-button radius color=\"danger\" class=\"ml-2\" @click=\"seleccionadoInsitucion = false\" type=\"filled\" icon=\"reply\"></vs-button>\r\n            </vx-tooltip> &nbsp;\r\n\r\n        </div>\r\n    </div>\r\n\r\n    <div v-if=\"instituciones.length >0\">\r\n        <vs-table stripe max-items=\"5\" search pagination :data=\"instituciones\">\r\n            <template slot=\"header\">\r\n                <div class=\"vx-row\">\r\n                    <div class=\"vx-col w-full m-3\">\r\n                        Cantidad: {{instituciones.length}}\r\n                    </div>\r\n\r\n                </div>\r\n            </template>\r\n            <template slot=\"thead\">\r\n                <vs-th sort-key=\"nombreInstitucion\">Institución</vs-th>\r\n                <vs-th sort-key=\"nombre\">Localidad</vs-th>\r\n                <vs-th>Acciones</vs-th>\r\n            </template>\r\n            <template slot-scope=\"{data}\">\r\n                <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n\r\n                    <vs-td :data=\"data[indextr].nombreInstitucion\">\r\n                        {{data[indextr].nombreInstitucion}}<br>\r\n\r\n                    </vs-td>\r\n                    <vs-td :data=\"data[indextr].nombreregion\">\r\n                        {{data[indextr].nombreregion}} <br>\r\n                        <small>{{data[indextr].ciudad}}</small>\r\n                    </vs-td>\r\n                    <vs-td>\r\n                        <div class=\"flex\">\r\n                            <vs-button size=\"small\" type=\"relief\" style=\"border-radius: 5px;\" icon-pack=\"feather\" icon=\"icon-bookmark\" class=\"mr-2\" color=\"primary\" @click=\"asginarInstitucion(tr)\">\r\n                                Asignar\r\n                            </vs-button>\r\n                        </div>\r\n                    </vs-td>\r\n                </vs-tr>\r\n            </template>\r\n        </vs-table>\r\n    </div>\r\n\r\n    <div v-if=\"seleccionadoInsitucion == false\">\r\n        <vs-row class=\"mt-2\">\r\n            <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"6\" class=\"mt-4\">\r\n\r\n                <flat-pickr :config=\"configdateTimePicker\" v-model=\"fentregar\" placeholder=\"Seleccione una fecha de entrega\" style=\"display: inline-block;width: 97%;\" />\r\n\r\n            </vs-col>\r\n            <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"6\">\r\n                <vs-input label=\"Persona que solicita\" class=\"w-full\" placeholder=\"Persona que solicita\" v-model=\"persona_solicita\"/>\r\n            </vs-col>\r\n        </vs-row>\r\n\r\n        <vs-row class=\"mt-2\">\r\n            <p class=\"ml-2\">Observación</p>\r\n            <vs-col class=\"mt-1\" vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\">\r\n                <vs-textarea counter=\"500\" style=\"width:100%;\" label=\"Mensaje\" :counter-danger.sync=\"counterDanger\" v-model=\"seguimiento.observacion\" />\r\n            </vs-col>\r\n        </vs-row>\r\n\r\n        <vs-row class=\"mt-2\"> \r\n            <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\">\r\n                <div v-if=\"seguimiento.foto_evidencia == '' || seguimiento.foto_evidencia == null\">\r\n                    <p>Sin foto todavia</p>\r\n                </div>\r\n                <div v-else style=\"box-shadow:5px 4px 20px #ccc;\" class=\"mt-5\">\r\n                    <p>Imagen actual:</p>\r\n                    <img style=\"width: 100%;border-radius:10px; 20px 30px\"  :src=\"$data_url+'archivos/'+'seguimiento/'+'muestra/'+seguimiento.foto_evidencia\">\r\n                </div>\r\n            </vs-col>\r\n            <br/>\r\n            <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\" class=\"mt-5\">\r\n                <label class=\"form-block-input\" style=\"position: relative;right:15px;\">\r\n                    <input type=\"file\" class=\"upload-file form-file-span\"  hidden @change=\"fieldChange\" />\r\n                    <span class=\"form-file-span\"><i class=\"fa fa-cloud-upload\"   aria-hidden=\"true\"></i> Selecciona un archivo</span>\r\n                </label>\r\n                \r\n                <br>\r\n\r\n            </vs-col>\r\n                <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\" class=\"mt-5\">\r\n                <p  class=\"ml-5 mt-5\" style=\"color:#ccc;font-weight:500\">Seleccionado {{archivoName}}</p>    \r\n            </vs-col>\r\n        </vs-row>\r\n\r\n        <vs-row v-if=\"tipoMuestra == 'Crear'\">\r\n            <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\">\r\n               \r\n                <vs-list>\r\n                    <vs-list-header></vs-list-header>\r\n                    <vs-row v-for=\"(input,k) in inputs\" :key=\"k\">\r\n\r\n                        <vs-col vs-type=\"flex\" style=\"flex-direction: column;\" vs-justify=\"center\" vs-align=\"center\" vs-lg=\"5\" vs-w=\"6\" vs-xs=\"6\" vs-sm=\"6\">\r\n                            <vs-list-item title=\"Seleccione el libro\"></vs-list-item>\r\n                            <v-select :options=\"libros\" :reduce=\"libros => libros\" v-model=\"input.libro\" label=\"nombrelibro\" class=\"w-full\" />\r\n\r\n                        </vs-col>\r\n                        <vs-col vs-type=\"flex\" style=\"flex-direction: column;\" vs-justify=\"center\" vs-align=\"center\" vs-lg=\"5\" vs-w=\"6\" vs-xs=\"6\" vs-sm=\"6\">\r\n                            <vs-list-item title=\"Cantidad\"></vs-list-item>\r\n                            <vs-input  type=\"number\"  placeholder=\"Cantidad\" style=\"width: 95%;\" v-model=\"input.cantidad\" />\r\n                        </vs-col>\r\n             \r\n                        <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"2\" class=\"mt-5\">\r\n                            <vx-tooltip style=\"display: inline-block;\" text=\"Eliminar fila\" position=\"top\" color=\"primary\">\r\n                                <vs-button color=\"danger\" size=\"large\" radius icon=\"delete\" type=\"line\" v-if=\"k>0\" @click=\"remove(k)\" v-show=\"k == inputs.length-1\"></vs-button>\r\n                            </vx-tooltip>\r\n                            <vx-tooltip style=\"display: inline-block;\" text=\"Agregar fila\" position=\"top\" color=\"primary\">\r\n                                <vs-button color=\"success\" size=\"large\" radius icon=\"add\" type=\"line\" @click=\"add(k)\" v-show=\"k == inputs.length-1\">\r\n                                </vs-button>\r\n                            </vx-tooltip>\r\n                        </vs-col>\r\n                    </vs-row>\r\n                </vs-list>\r\n            </vs-col>\r\n        </vs-row>\r\n\r\n        <vs-row style=\"margin-top:80px;\">\r\n            <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\">\r\n                <vs-button @click=\"uploadFile()\" color=\"success\" type=\"gradient\">Guardar Muestras</vs-button>\r\n            </vs-col>\r\n        </vs-row>\r\n\r\n    \r\n\r\n    </div>\r\n\r\n    <!--MODAL PARA AGREGAR NUEVA INSTITUCION-->\r\n\r\n    <vs-popup background-color=\"rgba(255,255,255,.6)\"  title=\"Agregar Nueva Institución\" :active.sync=\"popupAddNuevaInstitucion\">\r\n\r\n        <vs-row class=\"mt-2\">\r\n            <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\">\r\n                <ul class=\"leftx\" style=\"display:flex;flex-direction: row;\">\r\n                    <li class=\"ml-2\">\r\n                        <vs-radio v-model=\"temporalInstitucion.region\" vs-name=\"radios1\" vs-value=\"1\">Sierra</vs-radio>\r\n                    </li>\r\n                    <li class=\"ml-2\">\r\n                        <vs-radio v-model=\"temporalInstitucion.region\" vs-name=\"radios1\" vs-value=\"2\">Costa</vs-radio>\r\n                    </li>\r\n                </ul>\r\n            </vs-col>\r\n        </vs-row>\r\n        <vs-row>\r\n            <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\">\r\n                <div class=\"vx-col w-full mt-5\">\r\n                    Seleccione una ciudad:\r\n                    <v-select :options=\"arregloCiudad\" :reduce=\"arregloCiudad => arregloCiudad\" label=\"nombre\" class=\"w-full\" v-model=\"temporalInstitucion.ciudad\" />\r\n                </div>\r\n            </vs-col>\r\n        </vs-row>\r\n        <vs-row class=\"mt-2\">\r\n            <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\">\r\n                <vs-input label=\"Escriba un nombre para la institución\" class=\"w-full\" v-model=\"temporalInstitucion.nombre_institucion\" placeholder=\"Institución\" />\r\n            </vs-col>\r\n        </vs-row>\r\n\r\n        <vs-row class=\"mt-5\">\r\n            <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\">\r\n                <vs-button @click=\"agregarInstitucionTemporal()\" type=\"gradient\">Agregar Institución</vs-button>\r\n            </vs-col>\r\n        </vs-row>\r\n    </vs-popup>\r\n\r\n  \r\n\r\n\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport flatPickr from 'vue-flatpickr-component';\r\nimport 'flatpickr/dist/flatpickr.css';\r\nimport Vue from 'vue'\r\nimport axios from 'axios'\r\nimport vSelect from 'vue-select'\r\nexport default {\r\n    data() {\r\n        return {\r\n            busquedaInstitucion: '',\r\n            seleccionadoInsitucion: false,\r\n            error: false,\r\n            popupAddNuevaInstitucion: false,\r\n            popupEditEvidencia:false,\r\n            institucion: '',\r\n            institucion_id: '',\r\n            periodo: '',\r\n            periodo_id: '',\r\n            arregloCiudad: [],\r\n            temporalInstitucion: {\r\n                ciudad: '',\r\n                nombreInstitucion: '',\r\n                region: '2',\r\n            },\r\n            institucion_id_temporal: '',\r\n            estado_institucion_temporal: 0,\r\n            periodo_id_temporal: 0,\r\n            nombreInstitucionTemporal: '',\r\n            estado: '5',\r\n            usuario: [],\r\n            seguimiento: {\r\n                observacion: '',\r\n                solicitante: '',\r\n                foto_evidencia:''\r\n            },\r\n            configdateTimePicker: {\r\n                enableTime: true,\r\n                dateFormat: 'Y-m-d'\r\n            },\r\n            fentregar: null,\r\n            counterDanger: false,\r\n            libros: [],\r\n            //para los inputs\r\n            inputs: [{\r\n                cantidad: '',\r\n                libro: '',\r\n                evidencia: [],\r\n\r\n            }],\r\n            attachments: [],\r\n            form: new FormData,\r\n            numeroIteM: '0',\r\n            instituciones: [],  \r\n            errorImage:'',\r\n            tamanioError:'',\r\n            archivoName:'',\r\n            persona_solicita:'',\r\n        }\r\n    },\r\n    props: {\r\n        tipoMuestra: {\r\n            type: String,\r\n            default: \"Crear\"\r\n        },\r\n        id: {\r\n            type: String,\r\n            default: \"0\"\r\n        },\r\n        observacion: {\r\n            type: String,\r\n            default: \"\"\r\n        },\r\n        solicitante: {\r\n            type: String,\r\n            default: \"\"\r\n        },\r\n        nombreInstitucion: {\r\n            type: String,\r\n            default: \"\"\r\n        },\r\n        fecha_entrega: {\r\n            type: String,\r\n            default: null\r\n        },\r\n        foto_evidencia:{\r\n            type:String,\r\n            default:''\r\n        },\r\n\r\n    },\r\n    components: {\r\n        'v-select': vSelect,\r\n        flatPickr\r\n\r\n    },\r\n    created() {\r\n        let me = this;\r\n        me.usuario = JSON.parse(localStorage.getItem(\"usuario\"))\r\n        me.institucion = localStorage.getItem(\"institucion_seguimiento_nombre\")\r\n        me.institucion_id = localStorage.getItem(\"institucion_seguimiento_id\")\r\n        me.periodo = localStorage.getItem(\"institucion_seguimiento_periodo\")\r\n        me.periodo_id = localStorage.getItem(\"institucion_seguimiento_periodo_id\")\r\n        me.isAdmin = localStorage.getItem(\"adminSeguimiento\")\r\n        me.getLibros()\r\n        me.listaCiudades()\r\n        me.fentregar = me.fecha_entrega\r\n      \r\n        if(me.tipoMuestra == \"Editar\"){\r\n            me.persona_solicita = me.solicitante\r\n            me.seguimiento.observacion = me.observacion\r\n            me.seguimiento.foto_evidencia = me.foto_evidencia\r\n            me.DetalleMuestras()\r\n        }\r\n    },\r\n    methods: {\r\n\r\n        //lista de ciudades para usar en el select\r\n        listaCiudades() {\r\n            let me = this\r\n            this.$http.get(this.$server_url + `ciudad`).then(res => {\r\n                    me.arregloCiudad = res.data;\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error)\r\n                })\r\n        },\r\n        asginarInstitucion(tr) {\r\n            let me = this;\r\n            me.institucion_id = tr.idInstitucion\r\n            me.nombreInstitucion = tr.nombreInstitucion\r\n            me.estado_institucion_temporal = 0;\r\n            me.seleccionadoInsitucion = false;\r\n            me.instituciones = []\r\n        },\r\n        //para obtener las instituciones de prolipa\r\n        getInstitucion() {\r\n            let me = this;\r\n            me.instituciones = [];\r\n            if (me.busquedaInstitucion.length < 5) {\r\n                me.$vs.notify({\r\n                    text: 'Minimo 5 caracteres de busqueda',\r\n                    color: 'warning',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-check'\r\n                })\r\n                 return false;\r\n            }\r\n\r\n            me.$vs.loading()\r\n            this.$http.get(this.$server_url + 'listaInsitucionAsesor?busqueda=' + me.busquedaInstitucion + '&cedula=' + me.usuario.cedula)\r\n                .then(function (res) {\r\n                    // me.tmpInstituciones = res.data;\r\n                    me.instituciones = res.data;\r\n                    // me.filtroRegion();\r\n                    me.$vs.loading.close()\r\n                    if (res.data.message) {\r\n                        me.$vs.notify({\r\n                            text: res.data.message,\r\n                            color: 'success',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-user',\r\n                            time: 8000\r\n                        })\r\n                    }\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                    me.$vs.loading.close()\r\n\r\n                })\r\n        },\r\n        agregarInstitucionTemporal() {\r\n            let me = this;\r\n            if (me.temporalInstitucion.nombre_institucion == \"\" || me.temporalInstitucion.nombre_institucion == null || me.temporalInstitucion.nombre_institucion == undefined) {\r\n                me.$vs.notify({\r\n                    color: 'primary',\r\n                    title: 'Mensaje',\r\n                    text: 'Debe escribir una institución por favor'\r\n                })\r\n                return false;\r\n            }\r\n            let formData = new FormData();\r\n            formData.append('nombre_institucion', me.temporalInstitucion.nombre_institucion);\r\n            formData.append('ciudad', me.temporalInstitucion.ciudad.nombre);\r\n            formData.append('region', me.temporalInstitucion.region);\r\n            formData.append('asesor_id', me.usuario.idusuario);\r\n            me.$vs.loading()\r\n            this.$http.post(this.$server_url + 'GuardarInstitucionTemporal', formData)\r\n                .then(res => {\r\n                    me.$vs.loading.close()\r\n                    me.popupAddNuevaInstitucion = false;\r\n                    me.seleccionadoInsitucion = false;\r\n                    me.nombreInstitucion = me.temporalInstitucion.nombre_institucion\r\n                    me.institucion_id_temporal = res.data.institucion_temporal_id\r\n                    me.instituciones = []\r\n                    me.periodo_id_temporal = res.data.periodo_id\r\n                    me.estado_institucion_temporal = 1;\r\n                    me.$vs.notify({\r\n                        text: \"Se creo la institución correctamente\",\r\n                        color: 'success',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check'\r\n                    })\r\n                })\r\n        },\r\n        NumeroItem(id) {\r\n            let me = this;\r\n            localStorage.setItem('NumeroItem', id)\r\n            me.numeroIteM = localStorage.getItem('NumeroItem', id)\r\n        },\r\n        add(k) {\r\n            let me = this;\r\n            if (this.inputs[k].libro == \"\") {\r\n                me.$vs.notify({\r\n                    color: 'primary',\r\n                    title: 'Mensaje',\r\n                    text: 'Debe seleccionar un libro'\r\n                })\r\n                return false;\r\n            }\r\n\r\n            if (this.inputs[k].cantidad.length == \"\") {\r\n                me.$vs.notify({\r\n                    color: 'primary',\r\n                    title: 'Mensaje',\r\n                    text: 'Debe escribir una cantidad de entrega'\r\n                })\r\n                return false;\r\n            }\r\n\r\n            this.inputs.push({\r\n                cantidad: '',\r\n                libro: '',\r\n\r\n            })\r\n            \r\n        },\r\n\r\n        remove(index) {\r\n            this.attachments.splice(index, 1)\r\n            this.inputs.splice(index, 1)\r\n        },\r\n    \r\n         //para subir archivos\r\n        fieldChange(e){\r\n            let me = this;\r\n                me.errorImage = 'no'\r\n                me.tamanioError=\"no\"\r\n                this.attachments = [];\r\n                let selectedFiles=e.target.files;\r\n                let validar = e.target.files[0].type;\r\n\r\n                let tamanio = e.target.files[0].size;\r\n                \r\n                if(tamanio > 1000000){\r\n                    me.tamanioError=\"yes\"\r\n                    me.$vs.notify({\r\n                        text:'El tamaño de la imagen excede 1MB',\r\n                        color:'warning',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check'})  \r\n                        return false;  \r\n                }\r\n                \r\n            \r\n                if(validar == 'image/png' || validar == 'image/jpg' || validar == 'image/jpeg'){\r\n                    for(let i=0;i<selectedFiles.length;i++){\r\n\r\n                      this.attachments.push(selectedFiles[i]);\r\n                      localStorage.setItem('nameArchivo',this.attachments[0].name)\r\n                      me.archivoName = localStorage.getItem(\"nameArchivo\")\r\n                     }\r\n                     me.errorImage = 'no'\r\n                }else{\r\n                  me.errorImage = 'yes'\r\n                  me.$vs.notify({\r\n                    text:'Formato de imagen no aceptada solo se acepta png/jpg/jpeg',\r\n                    color:'success',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check'})\r\n                    return false;\r\n                  \r\n                \r\n                }   \r\n        },\r\n\r\n\r\n        //para guardar\r\n        uploadFile() {\r\n            let me = this;\r\n        \r\n            if (me.seguimiento.observacion.length >= 500) {\r\n                me.$vs.notify({\r\n                    color: 'primary',\r\n                    title: 'Mensaje',\r\n                    text: 'El observación debe tener un maximo de 500 caracteres'\r\n                })\r\n                return false;\r\n            }\r\n        \r\n            if (me.fentregar == null) {\r\n                me.$vs.notify({\r\n                    text: 'Debe escoger una fecha de entrega',\r\n                    color: 'warning',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-check'\r\n                })\r\n                return false;\r\n            }\r\n\r\n\r\n            if (me.tipoMuestra == \"Editar\") {\r\n                this.form.append('muestra_id', me.id);\r\n            }\r\n            if(me.tipoMuestra == \"Crear\"){\r\n                if(me.attachments.length == 0){\r\n                    me.$vs.notify({\r\n                    text:'Seleccione una imagen antes de enviar',\r\n                    color:'warning',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check'})  \r\n                    return false; \r\n                }\r\n            }\r\n\r\n            //Si se envia imagenes\r\n            for(let i=0; i<this.attachments.length;i++){\r\n                if(me.attachments.length == 0){\r\n                }else{\r\n                 this.form.append('enviarArchivo','yes');\r\n                 this.form.append('archivo[]',this.attachments[i]);\r\n                }\r\n            }\r\n\r\n            this.form.append('fecha_entrega', me.fentregar);\r\n            this.form.append('observacion', me.seguimiento.observacion);\r\n            this.form.append('persona_solicita', me.persona_solicita);\r\n            this.form.append('institucion_id', me.institucion_id);\r\n            this.form.append('institucion_id_temporal', me.institucion_id_temporal);\r\n            this.form.append('estado_institucion_temporal', me.estado_institucion_temporal);\r\n            this.form.append('periodo_id_temporal', me.periodo_id_temporal);\r\n            this.form.append('nombreInstitucion', me.nombreInstitucion);\r\n            this.form.append('tipoMuestra', me.tipoMuestra);\r\n            if (me.isAdmin == \"yes\") {\r\n                me.asesorDesdeAdmin = localStorage.getItem(\"institucion_seguimiento_asesor_id\")\r\n                this.form.append('usuario_editor', me.usuario.idusuario);\r\n                this.form.append('admin', \"yes\");\r\n            } else {\r\n                me.asesorDesdeAdmin = me.usuario.idusuario\r\n            }\r\n            this.form.append('asesor_id', me.asesorDesdeAdmin);\r\n            this.form.append('periodo_id', me.periodo_id)\r\n\r\n            for (let i = 0; i < this.inputs.length; i++) {\r\n                // this.form.append('archivo[]', me.inputs[i].evidencia);\r\n                this.form.append('cantidad[]', me.inputs[i].cantidad);\r\n                this.form.append('libro[]', me.inputs[i].libro.idlibro);\r\n            }\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            };\r\n            document.querySelectorAll('.upload-file').value = [];\r\n            me.$vs.loading()\r\n            axios.post(this.$data_url+'api/muestra', this.form, config)\r\n            // this.$http.post(this.$server_url + 'muestra', this.form, config)\r\n            .then(response => {\r\n                    me.$vs.loading.close()\r\n                    if (response.data.status == \"0\") {\r\n                        me.$vs.notify({\r\n                            text: 'No se pudo ingresar la informacion',\r\n                            color: 'danger',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-check'\r\n                        })\r\n                        this.form = \"\";\r\n                        me.libro.libro = \"\";\r\n                        // me.borrartodo()\r\n                        me.inputs.cantidad = \"\";\r\n                        me.inputs.libro = \"\";\r\n                        me.inputs.evidencia = \"\";\r\n                       \r\n                       \r\n                    }\r\n                    if (response.data.status == \"1\") {\r\n                        me.$vs.notify({\r\n                            text: 'Se guardo correctamente',\r\n                            color: 'success',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-check'\r\n                        })\r\n                        me.$vs.loading.close()\r\n                        location.reload()\r\n                    }\r\n                })\r\n                .catch(response => {\r\n                    me.$vs.loading.close()\r\n                });\r\n\r\n        },\r\n        //para obtener el listado de Tipos de Area\r\n        getLibros() {\r\n            let me = this;\r\n            this.$http.get(this.$server_url + 'listaLibro')\r\n                .then(function (res) {\r\n                    me.libros = res.data.libros\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error')\r\n                })\r\n        },\r\n\r\n      \r\n\r\n       \r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/* Formato de etiqueta */\r\n.titulo {\r\n    background: #4CB8C4;\r\n    /* fallback for old browsers */\r\n    background: -webkit-linear-gradient(to right, #3CD3AD, #4CB8C4);\r\n    /* Chrome 10-25, Safari 5.1-6 */\r\n    background: linear-gradient(to right, #3CD3AD, #4CB8C4);\r\n    /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\r\n    color: white;\r\n    letter-spacing: 1px;\r\n\r\n}\r\n\r\n.image1 {\r\n    filter: drop-shadow(0 0 5px coral);\r\n    border-radius: 20px;\r\n    cursor: pointer;\r\n    opacity: 0.7;\r\n}\r\n\r\n.image1:hover {\r\n    opacity: 1\r\n}\r\n\r\n.form-block-input {\r\n\r\n    display: flex;\r\n    max-width: 400px;\r\n    overflow: hidden;\r\n    font-size: 0.9em;\r\n    color: #777;\r\n    margin-left: 50px;\r\n    border: 1px #25a solid;\r\n\r\n    padding: 0;\r\n    border-radius: 3px;\r\n    border: none;\r\n}\r\n\r\n/* Ocultar campo tipo file */\r\ninput[type=\"file\"].form-file {\r\n    display: none;\r\n}\r\n\r\n/* Botón para seleccionar archivos */\r\nbutton.form-file-button {\r\n    vertical-align: middle;\r\n    color: #fff;\r\n    background: #24A6F6;\r\n    margin: 0;\r\n    border: 0;\r\n    width: 50px;\r\n    padding: 2px 8px;\r\n    transform: scaleX(-1);\r\n    /* Invertir botón horizontalmente */\r\n}\r\n\r\n/* Lista de archivos */\r\nspan.form-file-span {\r\n    flex: 1;\r\n    display: inline-block;\r\n    text-align: left;\r\n    padding: 4px 10px;\r\n    background: #24A6F6;\r\n    color: #fff;\r\n    padding: 10px;\r\n    border-radius: 5px 15px;\r\n    cursor: pointer;\r\n    font-size: 20px;\r\n\r\n}\r\n\r\n/* Arhchivos en lista */\r\nspan.form-files {\r\n    display: inline-block;\r\n    color: #555;\r\n    background: #ccf;\r\n\r\n    margin: 2px 8px 2px 0;\r\n    padding: 2px 5px;\r\n    white-space: nowrap;\r\n    border-radius: 3px;\r\n}\r\n\r\n/* Quitar margen horizontal al último elemento en la lista */\r\nspan.form-block-span:last-child {\r\n    margin: 2px 0;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]}]}