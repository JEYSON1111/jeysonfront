{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\salle\\administrador\\evaluaciones\\CrearPreguntaSalle.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\salle\\administrador\\evaluaciones\\CrearPreguntaSalle.vue","mtime":1712682816504},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\babel.config.js","mtime":1712682813877},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\.babelrc","mtime":1712682813750},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.number.constructor\";\nimport axios from 'axios';\nimport vSelect from 'vue-select';\nimport \"quill/dist/quill.core.css\";\nimport \"quill/dist/quill.snow.css\";\nimport \"quill/dist/quill.bubble.css\";\nimport { quillEditor } from \"vue-quill-editor\";\nexport default {\n  components: {\n    quillEditor: quillEditor,\n    vSelect: vSelect\n  },\n  data: function data() {\n    return {\n      pregunta: {\n        descripcion: '',\n        tema: {\n          id: '',\n          label: ''\n        },\n        respuesta: '',\n        opcion1: '',\n        opcion2: '',\n        opcion3: '',\n        img_pregunta: '',\n        img_respuesta: '',\n        img_opcion1: '',\n        img_opcion2: '',\n        img_opcion3: '',\n        puntaje_pregunta: '',\n        cant_coincidencias: 0\n      },\n      opcion: {\n        id_opcion_pregunta: '',\n        id_pregunta: '',\n        opcion: '',\n        img_opcion: '',\n        tipo: ''\n      },\n      opciones: [],\n      img_opcion_old: '',\n      src_imagen_opcion: '',\n      src_imagen_pregunta: '',\n      activoPregunta: true,\n      id_opcion_tipo234: '',\n      palabras_clave: '',\n      editarOpcionActiva: false,\n      id_preguntaActiva: ''\n    };\n  },\n  props: {\n    usuario: {\n      type: Object,\n      default: {}\n    },\n    arregloPeriodos: {\n      type: Array,\n      default: []\n    },\n    periodoSelect: {\n      type: String,\n      default: \"\"\n    },\n    editarActivo: {\n      type: Boolean,\n      default: false\n    },\n    guardadoActivo: {\n      type: Boolean,\n      default: false\n    },\n    pregTipo: {\n      type: Number,\n      default: 1\n    },\n    titPregTipo: {\n      type: String,\n      default: \"\"\n    },\n    txtPregTipo: {\n      type: String,\n      default: \"\"\n    },\n    areas: {\n      type: Array,\n      default: []\n    },\n    asignaturas: {\n      type: Array,\n      default: []\n    },\n    active1: {\n      type: Boolean,\n      default: false\n    },\n    area_pregunta: {\n      type: Object,\n      default: {}\n    },\n    asignatura_pregunta: {\n      type: Object,\n      default: {}\n    },\n    preguntaSelect: {\n      type: String,\n      default: \"\"\n    },\n    puntaje_pregunta: {\n      type: Number,\n      default: 1\n    }\n  },\n  watch: {\n    guardadoActivo: function guardadoActivo(results) {\n      if (results == false) {\n        console.log(\"aaaak\");\n        this.limpiar();\n      }\n    }\n  },\n  mounted: function mounted() {\n    var me = this;\n    this.limpiar();\n    if (me.editarActivo) {\n      me.editarFormulario();\n    }\n  },\n  methods: {\n    editarFormulario: function editarFormulario() {\n      var me = this;\n      var dataE = me.preguntaSelect;\n      console.log(\"aaa\", dataE);\n      if (dataE.pregunta.estado == 1) {\n        me.activoPregunta = true;\n      } else {\n        me.activoPregunta = false;\n      }\n      me.pregunta = dataE.pregunta;\n      me.id_preguntaActiva = dataE.pregunta.id_pregunta;\n      me.img_preg_old = dataE.pregunta.img_pregunta;\n      if (dataE.pregunta.img_pregunta != '') {\n        me.src_imagen_pregunta = this.$data_url + 'archivos/img/salle/img_preguntas/' + dataE.pregunta.img_pregunta;\n      }\n      ///mostrar opciones\n      if (me.pregTipo == 3) {\n        if (dataE.opciones.length > 0) {\n          var preOpciones = dataE.opciones.filter(function (p) {\n            return p.tipo == '1';\n          });\n          me.opcion = preOpciones[0];\n        }\n      } else {\n        me.opcion = {};\n      }\n      me.opciones = dataE.opciones;\n      if (dataE.opciones.length > 0) {\n        me.palabras_clave = dataE.opciones[0].opcion;\n        me.pregunta.cant_coincidencias = dataE.opciones[0].cant_coincidencias;\n        me.id_opcion_tipo234 = dataE.opciones[0].id_opcion_pregunta;\n      }\n    },\n    agregar: function agregar() {\n      var me = this;\n      if (me.pregunta.descripcion.trim() === '' || me.puntaje_pregunta === '' || me.puntaje_pregunta === undefined || me.asignatura_pregunta === null || me.asignatura_pregunta === undefined) {\n        me.$vs.notify({\n          text: 'Debe completar todos los campos antes de guardar',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-alert-triangle'\n        });\n        return;\n      }\n      if (me.asignatura_pregunta.id_asignatura === '' || me.asignatura_pregunta.id_asignatura === undefined) {\n        me.$vs.notify({\n          text: 'Seleccione una asignatura antes de guardar',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-alert-triangle'\n        });\n        return;\n      }\n      me.$vs.loading();\n      var fileImgPreg;\n      fileImgPreg = document.getElementById(\"file1\").files[0];\n      me.pregunta.file1 = fileImgPreg;\n      var formData = new FormData();\n      formData.append('descripcion', me.pregunta.descripcion);\n      formData.append('img_pregunta', fileImgPreg);\n      formData.append('id_tipo_pregunta', me.pregTipo);\n      formData.append('id_asignatura', me.asignatura_pregunta.id_asignatura);\n      formData.append('puntaje_pregunta', me.puntaje_pregunta);\n      formData.append('editor', me.usuario.idusuario);\n      formData.append('n_evaluacion', me.periodoSelect);\n      formData.append('estado', 1);\n      axios.post(this.$data_url + 'api/preguntas_salle', formData).then(function (res) {\n        me.id_preguntaActiva = res.data.id_pregunta;\n        me.$vs.loading.close();\n        me.$emit('changeRecharge', 4);\n        me.$vs.notify({\n          text: 'Pregunta creada exitosamente',\n          color: 'success',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n      }).catch(function (error) {\n        me.$vs.loading.close();\n        console.log(error + ': error al crear pregunta');\n      });\n    },\n    editarPregunta: function editarPregunta() {\n      var me = this;\n      if (me.pregunta.descripcion.trim() === '' || me.puntaje_pregunta === '' || me.puntaje_pregunta === undefined || me.asignatura_pregunta === null || me.asignatura_pregunta === undefined) {\n        me.$vs.notify({\n          text: 'Debe completar todos los campos antes de guardar',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-alert-triangle'\n        });\n        return;\n      }\n      if (me.asignatura_pregunta.id_asignatura === '' || me.asignatura_pregunta.id_asignatura === undefined) {\n        me.$vs.notify({\n          text: 'Seleccione una asignatura antes de guardar',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-alert-triangle'\n        });\n        return;\n      }\n      me.$vs.loading();\n      var fileImgPreg = document.getElementById(\"file1\").files[0];\n      if (fileImgPreg === undefined) {\n        fileImgPreg = me.pregunta.img_pregunta;\n      }\n      var formData = new FormData();\n      formData.append('id_pregunta', me.pregunta.id_pregunta);\n      formData.append('id_tipo_pregunta', me.pregTipo);\n      formData.append('id_asignatura', me.asignatura_pregunta.id_asignatura);\n      formData.append('descripcion', me.pregunta.descripcion);\n      formData.append('img_pregunta', fileImgPreg);\n      formData.append('img_pregunta_old', me.img_preg_old);\n      formData.append('puntaje_pregunta', me.puntaje_pregunta);\n      formData.append('editor', me.usuario.idusuario);\n      formData.append('n_evaluacion', me.periodoSelect);\n      formData.append('estado', me.pregunta.estado);\n      axios.post(this.$data_url + 'api/preguntas_salle', formData).then(function (res) {\n        me.$emit('changeRecharge', 2);\n        me.img_preg_old = res.data.img_pregunta;\n        me.$vs.loading.close();\n        me.$vs.notify({\n          text: 'Pregunta editada correctamente',\n          color: 'success',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n      }).catch(function (error) {\n        console.log(error);\n        me.$vs.loading.close();\n      });\n    },\n    limpiar: function limpiar() {\n      var me = this;\n      this.src_imagen_pregunta = '';\n      this.src_imagen_opcion = '';\n      this.opciones = [];\n      this.pregunta.descripcion = '';\n      this.pregunta.cant_coincidencias = '';\n      this.pregunta.opcion = '';\n      this.opcion.opcion = '';\n      this.opcion.tipo = '';\n      this.palabras_clave = '';\n      this.editarOpcionActiva = false;\n      this.id_preguntaActiva = '';\n    },\n    editarOpcion: function editarOpcion(item) {\n      var me = this;\n      //cargar formulario de opciones\n      me.img_opcion_old = \"\";\n      location.href = '#editar';\n      me.img_opcion_old = item.img_opcion;\n      document.getElementById(\"file2\").value = '';\n      me.opcion = item;\n      me.src_imagen_opcion = this.$data_url + 'archivos/img/salle/img_preguntas/' + item.img_opcion;\n    },\n    confirmEditarOpcion: function confirmEditarOpcion(item) {\n      var me = this;\n      me.editarOpcionActiva = false;\n      var fileImgOpcion;\n      fileImgOpcion = document.getElementById(\"file2\").files[0];\n      if (fileImgOpcion === undefined) {\n        fileImgOpcion = item.img_opcion;\n      }\n      var tipo = 0;\n      if (me.opcion.tipo === true || me.opcion.tipo === 1) {\n        tipo = 1;\n      }\n      var formData = new FormData();\n      formData.append('opcion', me.opcion.opcion);\n      formData.append('tipo', tipo);\n      formData.append('img_opcion', fileImgOpcion);\n      formData.append('img_opcion_old', me.img_opcion_old);\n      formData.append('id_opcion_pregunta', item.id_opcion_pregunta);\n      formData.append('id_pregunta', item.id_pregunta);\n      formData.append('cant_coincidencias', 0);\n      formData.append('n_evaluacion', me.periodoSelect);\n      axios.post(this.$data_url + 'api/editar_opcion_salle', formData).then(function (res) {\n        me.opciones = res.data;\n        me.editarOpcionActiva = false;\n        me.opcion.opcion = '';\n        me.opcion.tipo = '';\n        me.src_imagen_opcion = '';\n        me.$emit('changeRecharge', 2);\n        me.$vs.notify({\n          text: 'Opción editada correctamente',\n          color: 'success',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    mostrarImg: function mostrarImg(file, img) {\n      var me = this;\n      me.src_imagen_opcion = ' ';\n      me.src_imagen_pregunta = ' ';\n      var archivo = document.getElementById(\"file\" + file).files[0];\n      var reader = new FileReader();\n      if (me) {\n        reader.readAsDataURL(archivo);\n        reader.onloadend = function () {\n          document.getElementById(\"img\" + img).src = reader.result;\n        };\n      }\n    },\n    quitarOpcion: function quitarOpcion(item) {\n      var me = this;\n      axios.get(this.$data_url + 'api/quitar_opcion_salle/' + item.id_opcion_pregunta).then(function (res) {\n        me.removeItemFromArr(me.opciones, item);\n        me.$emit('changeRecharge', 2);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    removeItemFromArr: function removeItemFromArr(arr, item) {\n      var i = arr.indexOf(item);\n      arr.splice(i, 1);\n    },\n    quitarImagen: function quitarImagen(id) {\n      var me = this;\n      document.getElementById('file' + id).value = null;\n      if (document.getElementById(\"img\" + id)) {\n        document.getElementById(\"img\" + id).src = '';\n      }\n      if (id === 1) {\n        me.img_preg_old = '';\n      } else {\n        me.img_opcion_old = '';\n      }\n    },\n    editarPalabrasclave: function editarPalabrasclave() {\n      var me = this;\n      if (me.pregunta.cant_coincidencias === '' || me.pregunta.cant_coincidencias === undefined || me.pregunta.cant_coincidencias < 0) {\n        me.$vs.notify({\n          text: 'Ingrese la cantidad de coincidencias de palabras clave.',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        return;\n      }\n      var cantCoin = parseInt(me.pregunta.cant_coincidencias);\n      if (me.id_opcion_tipo234 != '') {\n        var palabrasV = me.palabras_clave.replace(/ /gi, '');\n        var formData = new FormData();\n        formData.append('opcion', palabrasV);\n        formData.append('tipo', 1);\n        formData.append('img_opcion', '');\n        formData.append('img_opcion_old', '');\n        formData.append('id_opcion_pregunta', me.id_opcion_tipo234);\n        formData.append('id_pregunta', me.pregunta.id_pregunta);\n        formData.append('cant_coincidencias', cantCoin);\n        formData.append('n_evaluacion', me.periodoSelect);\n        me.$vs.loading();\n        axios.post(this.$data_url + 'api/editar_opcion_salle', formData).then(function (res) {\n          me.$vs.loading.close();\n          me.opciones = res.data;\n          me.editarOpcionActiva = false;\n          me.opcion.opcion = '';\n          me.opcion.tipo = '';\n          me.src_imagen_opcion = '';\n          me.$emit('changeRecharge', 2);\n          me.$vs.loading.close();\n          me.$vs.notify({\n            text: 'Palabras clave guardada correctamente',\n            color: 'success',\n            iconPack: 'feather',\n            icon: 'icon-check'\n          });\n        }).catch(function (error) {\n          me.$vs.loading.close();\n          console.log(error);\n        });\n      } else {\n        me.cargarOpcionAbierta();\n      }\n    },\n    cargarOpcion: function cargarOpcion() {\n      var me = this;\n      if (me.id_preguntaActiva === '') {\n        me.$vs.notify({\n          text: 'Debe crear una pregunta antes de cargar las opciones.',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n      } else {\n        me.$vs.loading();\n        var formData = new FormData();\n        var fileImgPreg = document.getElementById(\"file2\").files[0];\n        var tipo = 0;\n        if (me.opcion.tipo === true) {\n          tipo = 1;\n        }\n        formData.append('opcion', me.opcion.opcion);\n        formData.append('id_pregunta', me.id_preguntaActiva);\n        formData.append('img_opcion', fileImgPreg);\n        formData.append('tipo', tipo);\n        formData.append('cant_coincidencias', 0);\n        formData.append('n_evaluacion', me.periodoSelect);\n        axios.post(this.$data_url + 'api/cargar_opcion_salle', formData).then(function (res) {\n          me.opciones = res.data;\n          me.opcion.opcion = '';\n          me.opcion.tipo = '';\n          me.src_imagen_opcion = '';\n          document.getElementById(\"file2\").value = '';\n          me.$vs.loading.close();\n          me.$emit('changeRecharge', 2);\n          //notify guardado\n        }).catch(function (error) {\n          me.$vs.loading.close();\n          console.log(error);\n        });\n      }\n    },\n    cargarOpcionAbierta: function cargarOpcionAbierta() {\n      var me = this;\n      if (me.pregunta.cant_coincidencias === '' || me.pregunta.cant_coincidencias === undefined || me.pregunta.cant_coincidencias < 0) {\n        me.$vs.notify({\n          text: 'Ingrese la cantidad de coincidencias de palabras clave.',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        return;\n      }\n      if (me.id_preguntaActiva === '') {\n        me.$vs.notify({\n          text: 'Debe crear una pregunta antes de cargar las opciones.',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n      } else {\n        var tipo = 6;\n        var palabrasV = me.palabras_clave.replace(/ /gi, '');\n        var formData = new FormData();\n        formData.append('opcion', palabrasV);\n        formData.append('tipo', tipo);\n        formData.append('img_opcion', null);\n        formData.append('id_pregunta', me.id_preguntaActiva);\n        formData.append('cant_coincidencias', parseInt(me.pregunta.cant_coincidencias));\n        formData.append('n_evaluacion', me.periodoSelect);\n        me.$vs.loading();\n        axios.post(this.$data_url + 'api/cargar_opcion_salle', formData).then(function (res) {\n          me.id_opcion_tipo234 = res.data[0].id_opcion_pregunta;\n          me.opciones = res.data;\n          me.opcion.opcion = '';\n          me.opcion.tipo = '';\n          me.src_imagen_opcion = '';\n          me.$emit('changeRecharge', 2);\n          me.$vs.loading.close();\n          me.$vs.notify({\n            text: 'Palabras clave guardadas correctamente',\n            color: 'success',\n            iconPack: 'feather',\n            icon: 'icon-check'\n          });\n        }).catch(function (error) {\n          me.$vs.loading.close();\n          console.log(error);\n        });\n      }\n    },\n    cargarOpcionesVF: function cargarOpcionesVF() {\n      var me = this;\n      if (me.id_preguntaActiva === '') {\n        me.$vs.notify({\n          text: 'Debe crear una pregunta antes de cargar las opciones.',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n      } else {\n        me.$vs.loading();\n        var formData = new FormData();\n        formData.append('opcion', me.opcion.opcion);\n        formData.append('id_pregunta', me.id_preguntaActiva);\n        formData.append('img_opcion', null);\n        formData.append('tipo', 1);\n        formData.append('cant_coincidencias', 0);\n        this.$http.post(this.$server_url + 'cargar_opcion_vf_salle', formData).then(function (res) {\n          // me.opcion.opcion        = '';\n          // me.opcion.tipo          = '';\n          me.editarActivo = true;\n          me.src_imagen_opcion = '';\n          me.$vs.loading.close();\n          me.$vs.notify({\n            text: 'Opción guardada correctamente',\n            color: 'success',\n            iconPack: 'feather',\n            icon: 'icon-check'\n          });\n          me.$emit('changeRecharge', 3);\n        }).catch(function (error) {\n          me.$vs.loading.close();\n          console.log(error);\n        });\n      }\n    },\n    editarOpcionesVF: function editarOpcionesVF() {\n      var me = this;\n      me.$vs.loading();\n      var formData = new FormData();\n      formData.append('opcion', me.opcion.opcion);\n      formData.append('id_pregunta', me.id_preguntaActiva);\n      formData.append('img_opcion', null);\n      formData.append('tipo', 1);\n      formData.append('id_opcion', 1);\n      formData.append('cant_coincidencias', 0);\n      this.$http.post(this.$server_url + 'cargar_opcion_vf_salle', formData).then(function (res) {\n        me.$vs.loading.close();\n        me.$emit('changeRecharge', 2);\n        me.$vs.notify({\n          text: 'Opción guardada correctamente',\n          color: 'success',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n      }).catch(function (error) {\n        me.$vs.loading.close();\n        console.log(error);\n      });\n    },\n    transformarPregunta: function transformarPregunta() {\n      var me = this;\n      me.$vs.loading();\n      var formData = new FormData();\n      formData.append('id_pregunta', me.pregunta.id_pregunta);\n      formData.append('id_tipo_pregunta', me.pregTipo);\n      this.$http.post(this.$server_url + 'transformar_preguntas_salle', formData).then(function (res) {\n        me.$vs.notify({\n          text: 'Pregunta transformada correctamente.',\n          color: 'primary',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        me.$emit('changeRecharge', 1);\n        me.$vs.loading.close();\n      }).catch(function (error) {\n        me.$vs.loading.close();\n      });\n    },\n    //METODOS PARA CAMBIAR ESTADO PREGUNTA\n    CambiarEstadoPreguntaSalle: function CambiarEstadoPreguntaSalle() {\n      var me = this;\n      var est = 0;\n      if (me.activoPregunta) {\n        est = 1;\n      } else {\n        est = 0;\n      }\n      me.pregunta.estado = est;\n      var formData = new FormData();\n      formData.append('id_pregunta', me.pregunta.id_pregunta);\n      formData.append('estado', est);\n      me.$vs.loading();\n      this.$http.post(this.$server_url + 'CambiarEstadoPreguntaSalle', formData).then(function (res) {\n        me.$vs.loading.close();\n        me.$vs.notify({\n          text: 'Se cambio de estado correctamente',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        me.$emit('changeRecharge', 2);\n      });\n    } //FIN METODOS PARA CAMBIAR ESTADO PREGUNTA\n  }\n};",{"version":3,"names":["axios","vSelect","quillEditor","components","data","pregunta","descripcion","tema","id","label","respuesta","opcion1","opcion2","opcion3","img_pregunta","img_respuesta","img_opcion1","img_opcion2","img_opcion3","puntaje_pregunta","cant_coincidencias","opcion","id_opcion_pregunta","id_pregunta","img_opcion","tipo","opciones","img_opcion_old","src_imagen_opcion","src_imagen_pregunta","activoPregunta","id_opcion_tipo234","palabras_clave","editarOpcionActiva","id_preguntaActiva","props","usuario","type","Object","default","arregloPeriodos","Array","periodoSelect","String","editarActivo","Boolean","guardadoActivo","pregTipo","Number","titPregTipo","txtPregTipo","areas","asignaturas","active1","area_pregunta","asignatura_pregunta","preguntaSelect","watch","results","console","log","limpiar","mounted","me","editarFormulario","methods","dataE","estado","img_preg_old","$data_url","length","preOpciones","filter","p","agregar","trim","undefined","$vs","notify","text","color","iconPack","icon","id_asignatura","loading","fileImgPreg","document","getElementById","files","file1","formData","FormData","append","idusuario","post","then","res","close","$emit","catch","error","editarPregunta","editarOpcion","item","location","href","value","confirmEditarOpcion","fileImgOpcion","mostrarImg","file","img","archivo","reader","FileReader","readAsDataURL","onloadend","src","result","quitarOpcion","get","removeItemFromArr","arr","i","indexOf","splice","quitarImagen","editarPalabrasclave","cantCoin","parseInt","palabrasV","replace","cargarOpcionAbierta","cargarOpcion","cargarOpcionesVF","$http","$server_url","editarOpcionesVF","transformarPregunta","CambiarEstadoPreguntaSalle","est"],"sources":["src/views/salle/administrador/evaluaciones/CrearPreguntaSalle.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <vx-card v-bind:title=\"titPregTipo\" title-color=\"primary\" v-bind:subtitle=\"txtPregTipo\">\r\n            <vs-tabs alignment=\"fixed\">\r\n              <vs-tab label=\"Pregunta\">\r\n                <div class=\"vx-row\">\r\n                  <div class=\"flex justify-center\">\r\n                    <p v-for=\"(item,key) in arregloPeriodos\" :key=\"key\">\r\n                      <vs-chip class=\"ml-2\" v-if=\"item.id == periodoSelect\">Período Evaluación Seleccionada: <b class=\"ml-1\">{{ item.nombre }}</b></vs-chip>\r\n                    </p>\r\n                    <br>\r\n                  </div>\r\n                </div>\r\n                  <div class=\"vx-row mb-5 mt-4\">\r\n                    <!------------SELEC TEMA PREGUNTA-------------------->\r\n                    <div class=\"vx-col sm:w-1/2 w-full\">\r\n                      Área\r\n                      <v-select :options=\"areas\" :reduce=\"areas => areas\" label=\"nombre_area\" v-model=\"area_pregunta\" @input=\"getAsignaturas()\"></v-select>\r\n                    </div>\r\n                    <div class=\"vx-col sm:w-1/2 w-full\">\r\n                        Asignatura\r\n                        <v-select :options=\"asignaturas\" :reduce=\"asignaturas => asignaturas\" label=\"nombre_asignatura\" v-model=\"asignatura_pregunta\"></v-select>\r\n                    </div>\r\n                    <!------------FIN SELEC TEMA PREGUNTA-------------------->\r\n                  </div>\r\n                  <div class=\"vx-row mb-5\">\r\n                      <div class=\"vx-col w-full\">\r\n                          <div style=\"border: 1px solid #d5d5d5; border-radius: 10px; padding: 5px 5px 5px 5px;\" align=\"center\" class=\"mb-2\">\r\n                              <input type=\"file\" name=\"file1\" id=\"file1\" class=\"inputfile\" style=\"display: none;\" v-on:change=\"mostrarImg(1,1)\">\r\n                              <label for=\"file1\" style=\"margin-bottom: -10px; margin-right: 10px; cursor: pointer; color: gray; width: 49%; font-size: 11px; line-height: 80%;\">\r\n                                  Click aquí para subir imagen\r\n                              </label>\r\n                              <label @click=\"quitarImagen(1)\" style=\"margin-bottom: -10px; margin-left: 10px; cursor: pointer; color: red; width: 49%; font-size: 11px;\">\r\n                                  Click aquí para quitar imagen\r\n                              </label>\r\n                              <div v-if=\"src_imagen_pregunta==='' || src_imagen_pregunta===null || src_imagen_pregunta==='null' || src_imagen_pregunta===this.$server_url+'img/salle/img_preguntas/null'\"></div>\r\n                              <img id=\"img1\" class=\"img-responsive mb-2\" v-bind:src=\"src_imagen_pregunta\" style=\"max-width: 400px; border-radius: 5px;\" v-else>\r\n                          </div>\r\n                      </div>\r\n                      <div class=\"vx-col w-full mt-3\">\r\n                        <p>Nombre Pregunta</p>\r\n                        <quill-editor class=\"w-full h-25 alto mt-2\" style=\"height:80px;\" v-model=\"pregunta.descripcion\"></quill-editor>\r\n                      </div>\r\n                      <div class=\"vx-col sm:w-1/4 w-full\" style=\"margin-top: 50px;\">\r\n                          <vs-input disabled type=\"number\" class=\"mb-4 w-full mt-5\" label=\"Puntaje\" placeholder=\"Puntaje\" v-model=\"puntaje_pregunta\"/>\r\n                      </div>\r\n                      <div v-if=\"editarActivo===true\" class=\"vx-col sm:w-1/4 w-full pt-5\" align=\"center\" style=\"margin-top: 50px;\">\r\n                        <vs-switch  color=\"success\" @input=\"CambiarEstadoPreguntaSalle()\" v-model=\"activoPregunta\">\r\n                          <span slot=\"on\">Activado</span>\r\n                          <span slot=\"off\">Desactivado</span>\r\n                        </vs-switch>\r\n                      </div>\r\n                      <div class=\"vx-col sm:w-1/4 w-full pt-5\" align=\"center\" style=\"margin-top: 50px;\">\r\n                          <vs-button class=\"w-full mt-5 p-3\" title=\"Transformar pregunta a respuesta simple o viceversa\" icon-pack=\"feather\" icon=\"icon-loader\" color=\"warning\" @click=\"transformarPregunta()\"> Transformar pregunta </vs-button>\r\n                      </div>\r\n                      <div class=\"vx-col sm:w-1/4 w-full mb-2\" align=\"right\" style=\"margin-top: 50px;\">\r\n                          <div v-if=\"editarActivo\">\r\n                              <vs-button class=\"w-full mt-10\" @click=\"editarPregunta\" type=\"filled\">Editar pregunta</vs-button>\r\n                          </div>\r\n                          <div v-else>\r\n                              <vs-button class=\"w-full mt-10\" v-if=\"guardadoActivo == false\" color=\"success\" type=\"filled\" @click=\"agregar()\">Guardar pregunta</vs-button>\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n              </vs-tab>\r\n              <!-------INICIO TAB OPCIONES PREG TIPO 1, 5----->\r\n              <vs-tab label=\"Opciones\" v-if=\"pregTipo===1 || pregTipo===5\">\r\n                  <div class=\"vx-col w-full mb-2\" style=\"padding: 10px;\">\r\n                    <div class=\"vx-row\">\r\n                      <div class=\"flex justify-center\">\r\n                        <p v-for=\"(item,key) in arregloPeriodos\" :key=\"key\">\r\n                          <vs-chip class=\"ml-2\" v-if=\"item.id == periodoSelect\">Período Evaluación Seleccionada: <b class=\"ml-1\">{{ item.nombre }}</b></vs-chip>\r\n                        </p>\r\n                        <br>\r\n                      </div>\r\n                    </div>\r\n                  <vs-divider position=\"left\" color=\"success\">Crear opciones</vs-divider>\r\n                  <div class=\"vx-row mb-2\" id=\"editar\">\r\n                      <div class=\"vx-col w-full mb-1\">\r\n                          <div style=\"border: 1px solid #d5d5d5; border-radius: 5px; padding: 5px 5px 5px 5px;\" align=\"center\">\r\n                              <input type=\"file\" name=\"file2\" id=\"file2\" class=\"inputfile\" style=\"display: none;\" v-on:change=\"mostrarImg(2,2)\">\r\n                              <label for=\"file2\" style=\"margin-bottom: -10px; margin-right: 10px; cursor: pointer; color: gray; width: 49%; font-size: 11px;\">\r\n                                  Click aquí para subir imagen\r\n                              </label>\r\n                              <label @click=\"quitarImagen(2)\" style=\"margin-bottom: -10px; margin-left: 10px; cursor: pointer; color: red; width: 49%; font-size: 11px;\">\r\n                                  Click aquí para quitar imagen\r\n                              </label>\r\n                              <div v-if=\"src_imagen_opcion==='' || src_imagen_opcion===null || src_imagen_opcion==='null' || src_imagen_opcion===this.$server_url+'archivos/img/salle/img_preguntas/'\"></div>\r\n                              <img id=\"img2\" style=\"max-width: 400px; border-radius: 5px;\" class=\"img-responsive mb-2\" v-bind:src=\"src_imagen_opcion\" v-else>\r\n                          </div>\r\n                          <vs-textarea class=\"mt-2\" label=\"Nombre Opción\" v-model=\"opcion.opcion\" height=\"60px\"/>\r\n                      </div>\r\n                      <div class=\"vx-row w-full\" v-if=\"pregTipo===1 || pregTipo===5\">\r\n                          <div class=\"vx-col sm:w-1/2 w-full\" align=\"center\">\r\n                              <vs-switch style=\"width: 100px;\" color=\"success\" class=\"mt-3 mb-5\" v-model=\"opcion.tipo\">\r\n                                  <span slot=\"on\">Correcta</span>\r\n                                  <span slot=\"off\">Incorrecta</span>\r\n                              </vs-switch>\r\n                          </div>\r\n                          <div class=\"vx-col sm:w-1/2 w-full mb-1\" align=\"center\">\r\n                              <vs-button v-if=\"editarOpcionActiva===false\" color=\"success\" type=\"flat\" icon-pack=\"feather\" icon=\"icon-plus\" @click=\"cargarOpcion()\">Agregar</vs-button>\r\n                              <vs-button v-else color=\"primary\" class=\"w-full\" type=\"flat\" icon-pack=\"feather\" icon=\"icon-save\" @click=\"confirmEditarOpcion(opcion)\">Actualizar Opción</vs-button>\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n                  </div>\r\n                  <div class=\"vx-col w-full\">\r\n                  <vs-divider position=\"center\" color=\"primary\">Opciones agregadas</vs-divider>\r\n                  <div class=\"vx-row mb-3\" :key=\"indexitem\" v-for=\"(item, indexitem) in opciones\">\r\n                      <div class=\"vx-col sm:w-1/5 w-full\" align=\"center\">\r\n                        <img v-if=\"item.img_opcion\" style=\"border-radius: 5px;\" v-bind:src=\"$data_url+'archivos/img/salle/img_preguntas/'+item.img_opcion\" width=\"100%\">\r\n                      </div>\r\n                      <div class=\"vx-col sm:w-4/5 w-full text-center\">\r\n                          {{item.opcion}}\r\n                          <div class=\"vx-row\" align=\"center\">\r\n                          <div class=\"vx-col sm:w-1/3 w-full\">\r\n                              <vs-switch style=\"width: 100px;\" disabled=\"true\" color=\"success\" class=\"mt-3 mb-5\" v-model=\"item.tipo\">\r\n                                  <span slot=\"on\">Correcta</span>\r\n                                  <span slot=\"off\">Incorrecta</span>\r\n                              </vs-switch>\r\n                          </div>\r\n                          <div class=\"vx-col sm:w-1/3 w-full\">\r\n                              <vs-button color=\"primary\" type=\"line\" icon-pack=\"feather\" icon=\"icon-edit-1\" size=\"small\" @click=\"editarOpcionActiva=true; editarOpcion(item)\">Editar</vs-button>\r\n                          </div>\r\n                          <div class=\"vx-col sm:w-1/3 w-full\">\r\n                              <vs-button color=\"danger\" type=\"line\" icon-pack=\"feather\" icon=\"icon-trash\" size=\"small\" @click=\"quitarOpcion(item)\">Eliminar</vs-button>\r\n                          </div>\r\n                          </div>\r\n                          <vs-divider></vs-divider>\r\n                      </div>\r\n                  </div>\r\n                  </div>\r\n              </vs-tab>\r\n              <!-------FIN TAB OPCIONES PREG TIPO 1, 5----->\r\n              <!-------INICIO TAB OPCIONES PREG TIPO 3, 4----->\r\n              <vs-tab label=\"Respuesta\" v-if=\"pregTipo===3 || pregTipo===4\">\r\n                  <div v-if=\"pregTipo===3\" class=\"mt-6\">\r\n                  <div>\r\n                      <vx-card class=\"mb-4 mt-6\">\r\n                          <vs-radio v-model=\"opcion.opcion\" vs-name=\"radios1opcion\" vs-value=\"Verdadero\">Verdadero</vs-radio>\r\n                      </vx-card>\r\n                      <vx-card class=\"mb-4\">\r\n                          <vs-radio v-model=\"opcion.opcion\" vs-name=\"radios1opcion\" vs-value=\"Falso\">Falso</vs-radio>\r\n                      </vx-card>\r\n                  </div>\r\n                  </div>\r\n                  <div class=\"vx-col w-full mt-6\" align=\"right\">\r\n                      <vs-button  color=\"primary\" type=\"filled\" icon-pack=\"feather\" icon=\"icon-edit-1\" @click=\"editarOpcionesVF()\">Guardar opción</vs-button>\r\n                      <!-- <vs-button v-else color=\"success\" type=\"filled\" @click=\"editarActivo=true;cargarOpcionesVF()\">Guardar</vs-button> -->\r\n                  </div>\r\n              </vs-tab>\r\n              <!-------FIN TAB OPCIONES PREG TIPO 3, 4----->\r\n              <!-------INICIO TAB OPCIONES PREG CERRADA-------->\r\n              <vs-tab label=\"Palabras Clave\" v-if=\"pregTipo===2\">\r\n                  <div class=\"vx-row mt-6\">\r\n                      <div class=\"vx-col w-full\">\r\n                          <vs-alert :active.sync=\"active1\" closable icon-pack=\"feather\" close-icon=\"icon-x\" class=\"mb-3\">\r\n                              Ejemplo: Forma correcta: <span style=\"color: green;\">24, mayo, 1822</span> - Forma Incorrecta: <span style=\"color: red;\">24 de mayo, 1822 </span>\r\n                          </vs-alert>\r\n                          <div style=\"color: #1A76FA;\" class=\"mb-4 w-full\">Evite usar caracteres especiales como: punto, signos de expresión etc...</div>\r\n                          <vs-textarea class=\"mb-3\" label=\"Palabras clave de la respuesta\" placeholder=\"Escriba las palabras clave de la respuesta separadas por una coma (,).\" v-model=\"palabras_clave\"  height=\"70px\"/>\r\n                      </div>\r\n                  </div>\r\n                  <div class=\"vx-row w-full\">\r\n                      <div class=\"vx-col sm:w-1/2 w-full\">\r\n                          <vs-input type=\"number\" class=\"mb-2 w-full\" label=\"Cantidad de coincidencias\" v-model=\"pregunta.cant_coincidencias\"/>\r\n                      </div>\r\n                      <div class=\"vx-col sm:w-1/2 w-full mt-5\">\r\n                          <vs-button class=\"w-full\" v-if=\"editarActivo===true\" @click=\"editarPalabrasclave\" type=\"filled\">Editar</vs-button>\r\n                          <vs-button class=\"w-full\" v-else @click=\"cargarOpcionAbierta\" color=\"success\" type=\"filled\">Guardar</vs-button>\r\n                      </div>\r\n                  </div>\r\n              </vs-tab>\r\n              <!------FIN TAB OPCION TIPO PREG ABIERTA----->\r\n            </vs-tabs>\r\n          </vx-card>\r\n    </div>\r\n</template>\r\n<script>\r\n  import axios from 'axios'\r\n  import vSelect from 'vue-select'\r\n  import \"quill/dist/quill.core.css\";\r\n  import \"quill/dist/quill.snow.css\";\r\n  import \"quill/dist/quill.bubble.css\";\r\n  import {\r\n      quillEditor\r\n  } from \"vue-quill-editor\";\r\nexport default{\r\n    components:{\r\n        quillEditor,\r\n        vSelect,\r\n    },\r\n    data(){\r\n        return{\r\n            pregunta: {descripcion: '', tema: {id: '', label: ''}, respuesta: '', opcion1: '', opcion2: '', opcion3: '', img_pregunta: '', img_respuesta: '', img_opcion1: '', img_opcion2: '', img_opcion3: '', puntaje_pregunta: '', cant_coincidencias: 0},\r\n            opcion: {id_opcion_pregunta: '', id_pregunta: '', opcion: '', img_opcion: '', tipo: ''},\r\n            opciones: [],\r\n            img_opcion_old:'',\r\n            src_imagen_opcion:'',\r\n            src_imagen_pregunta:'',\r\n            activoPregunta:true,\r\n            id_opcion_tipo234:'',\r\n            palabras_clave:'',\r\n            editarOpcionActiva:false,\r\n            id_preguntaActiva: '',\r\n        }\r\n    },\r\n    props:{\r\n        usuario:{\r\n            type:Object,\r\n            default:{}\r\n        },\r\n        arregloPeriodos:{\r\n            type:Array,\r\n            default:[]\r\n        },\r\n        periodoSelect:{\r\n            type:String,\r\n            default:\"\"\r\n        },\r\n        editarActivo:{\r\n            type:Boolean,\r\n            default:false,\r\n        },\r\n        guardadoActivo:{\r\n            type:Boolean,\r\n            default:false\r\n        },\r\n        pregTipo:{\r\n            type:Number,\r\n            default:1\r\n        },\r\n        titPregTipo:{\r\n            type:String,\r\n            default:\"\"\r\n        },\r\n        txtPregTipo:{\r\n            type:String,\r\n            default:\"\"\r\n        },\r\n        areas:{\r\n            type:Array,\r\n            default:[]\r\n        },\r\n        asignaturas:{\r\n            type:Array,\r\n            default:[]\r\n        },\r\n        active1:{\r\n            type:Boolean,\r\n            default:false,\r\n        },\r\n        area_pregunta:{\r\n            type:Object,\r\n            default:{}\r\n        },\r\n        asignatura_pregunta:{\r\n            type:Object,\r\n            default:{}\r\n        },\r\n        preguntaSelect:{\r\n            type:String,\r\n            default:\"\"\r\n        },\r\n        puntaje_pregunta:{\r\n            type:Number,\r\n            default:1\r\n        },\r\n    },\r\n    watch:{\r\n        guardadoActivo(results){\r\n            if(results == false){\r\n                console.log(\"aaaak\")\r\n                this.limpiar()\r\n            }\r\n        },\r\n    },\r\n    mounted(){\r\n        let me = this\r\n        this.limpiar()\r\n        if(me.editarActivo){\r\n            me.editarFormulario()\r\n        }\r\n    },\r\n    methods:{\r\n        editarFormulario(){\r\n            let me = this;\r\n            let dataE               = me.preguntaSelect\r\n            console.log(\"aaa\",dataE)\r\n            if(dataE.pregunta.estado == 1){\r\n            me.activoPregunta               = true\r\n            }else{\r\n            me.activoPregunta               = false\r\n            }\r\n            me.pregunta                     = dataE.pregunta\r\n            me.id_preguntaActiva            = dataE.pregunta.id_pregunta;\r\n            me.img_preg_old                 = dataE.pregunta.img_pregunta;\r\n            if(dataE.pregunta.img_pregunta!=''){\r\n                me.src_imagen_pregunta = this.$data_url+'archivos/img/salle/img_preguntas/'+dataE.pregunta.img_pregunta;\r\n            }\r\n            ///mostrar opciones\r\n            if(me.pregTipo == 3){\r\n            if(dataE.opciones.length > 0){\r\n                let preOpciones             = dataE.opciones.filter(p => p.tipo == '1')\r\n                me.opcion                   = preOpciones[0]\r\n            }\r\n            }else{\r\n            me.opcion = {}\r\n            }\r\n            me.opciones                     = dataE.opciones\r\n            if(dataE.opciones.length > 0){\r\n            me.palabras_clave               = dataE.opciones[0].opcion;\r\n            me.pregunta.cant_coincidencias  = dataE.opciones[0].cant_coincidencias;\r\n            me.id_opcion_tipo234            = dataE.opciones[0].id_opcion_pregunta;\r\n            }\r\n        },\r\n        agregar(){\r\n            let me = this;\r\n            if( me.pregunta.descripcion.trim() === '' || me.puntaje_pregunta === '' || me.puntaje_pregunta === undefined || me.asignatura_pregunta === null || me.asignatura_pregunta === undefined){\r\n            me.$vs.notify({\r\n            text:'Debe completar todos los campos antes de guardar',\r\n            color:'warning',\r\n            iconPack: 'feather',\r\n            icon:'icon-alert-triangle'})\r\n            return;\r\n            }\r\n            if( me.asignatura_pregunta.id_asignatura === '' || me.asignatura_pregunta.id_asignatura === undefined ){\r\n            me.$vs.notify({\r\n            text:'Seleccione una asignatura antes de guardar',\r\n            color:'warning',\r\n            iconPack: 'feather',\r\n            icon:'icon-alert-triangle'})\r\n            return;\r\n            }\r\n            me.$vs.loading()\r\n            let fileImgPreg\r\n            fileImgPreg = document.getElementById(\"file1\").files[0];\r\n            me.pregunta.file1 = fileImgPreg;\r\n            const formData = new FormData();\r\n            formData.append('descripcion',      me.pregunta.descripcion);\r\n            formData.append('img_pregunta',     fileImgPreg);\r\n            formData.append('id_tipo_pregunta', me.pregTipo);\r\n            formData.append('id_asignatura',    me.asignatura_pregunta.id_asignatura);\r\n            formData.append('puntaje_pregunta', me.puntaje_pregunta);\r\n            formData.append('editor',           me.usuario.idusuario);\r\n            formData.append('n_evaluacion',     me.periodoSelect)\r\n            formData.append('estado',           1)\r\n            axios.post(this.$data_url+'api/preguntas_salle', formData)\r\n            .then(res => {\r\n                me.id_preguntaActiva    = res.data.id_pregunta;\r\n                me.$vs.loading.close()\r\n                me.$emit('changeRecharge',4)\r\n                me.$vs.notify({\r\n                text:'Pregunta creada exitosamente',\r\n                color:'success',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n            })\r\n            .catch(function (error) {\r\n                me.$vs.loading.close()\r\n                console.log(error + ': error al crear pregunta');\r\n            })\r\n        },\r\n        editarPregunta(){\r\n            let me = this;\r\n            if( me.pregunta.descripcion.trim() === '' || me.puntaje_pregunta === '' || me.puntaje_pregunta === undefined || me.asignatura_pregunta === null || me.asignatura_pregunta === undefined){\r\n            me.$vs.notify({\r\n                text:'Debe completar todos los campos antes de guardar',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-alert-triangle'})\r\n            return;\r\n            }\r\n            if( me.asignatura_pregunta.id_asignatura === '' || me.asignatura_pregunta.id_asignatura === undefined ){\r\n            me.$vs.notify({\r\n                text:'Seleccione una asignatura antes de guardar',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-alert-triangle'})\r\n            return;\r\n            }\r\n            me.$vs.loading()\r\n            let fileImgPreg = document.getElementById(\"file1\").files[0];\r\n            if(fileImgPreg === undefined ){\r\n                fileImgPreg = me.pregunta.img_pregunta;\r\n            }\r\n            const formData = new FormData();\r\n            formData.append('id_pregunta',      me.pregunta.id_pregunta);\r\n            formData.append('id_tipo_pregunta', me.pregTipo);\r\n            formData.append('id_asignatura',    me.asignatura_pregunta.id_asignatura);\r\n            formData.append('descripcion',      me.pregunta.descripcion);\r\n            formData.append('img_pregunta',     fileImgPreg);\r\n            formData.append('img_pregunta_old', me.img_preg_old);\r\n            formData.append('puntaje_pregunta', me.puntaje_pregunta);\r\n            formData.append('editor',           me.usuario.idusuario);\r\n            formData.append('n_evaluacion',     me.periodoSelect);\r\n            formData.append('estado',           me.pregunta.estado)\r\n            axios.post(this.$data_url+'api/preguntas_salle', formData).then(res => {\r\n            me.$emit('changeRecharge',2)\r\n            me.img_preg_old = res.data.img_pregunta\r\n            me.$vs.loading.close()\r\n            me.$vs.notify({\r\n            text:'Pregunta editada correctamente',\r\n            color:'success',\r\n            iconPack: 'feather',\r\n            icon:'icon-check'})\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n                me.$vs.loading.close()\r\n            })\r\n        },\r\n        limpiar(){\r\n            let me = this;\r\n            this.src_imagen_pregunta        = '';\r\n            this.src_imagen_opcion          = '';\r\n            this.opciones                   = [];\r\n            this.pregunta.descripcion       = '';\r\n            this.pregunta.cant_coincidencias='';\r\n            this.pregunta.opcion            = '';\r\n            this.opcion.opcion              = '';\r\n            this.opcion.tipo                = '';\r\n            this.palabras_clave             = '';\r\n            this.editarOpcionActiva         = false\r\n            this.id_preguntaActiva          = '';\r\n        },\r\n        editarOpcion(item){\r\n            let me                          = this;\r\n            //cargar formulario de opciones\r\n            me.img_opcion_old               = \"\"\r\n            location.href                   = '#editar'\r\n            me.img_opcion_old               = item.img_opcion\r\n            document.getElementById(\"file2\").value = '';\r\n            me.opcion                       = item\r\n            me.src_imagen_opcion            = this.$data_url+'archivos/img/salle/img_preguntas/'+item.img_opcion;\r\n        },\r\n        confirmEditarOpcion(item){\r\n            let me                          = this;\r\n            me.editarOpcionActiva           = false;\r\n            let fileImgOpcion;\r\n            fileImgOpcion = document.getElementById(\"file2\").files[0];\r\n            if(fileImgOpcion === undefined ){\r\n                fileImgOpcion = item.img_opcion;\r\n            }\r\n            let tipo = 0;\r\n            if( me.opcion.tipo === true || me.opcion.tipo === 1 ){\r\n                tipo = 1;\r\n            }\r\n            const formData = new FormData();\r\n            formData.append('opcion',               me.opcion.opcion);\r\n            formData.append('tipo',                 tipo);\r\n            formData.append('img_opcion',           fileImgOpcion);\r\n            formData.append('img_opcion_old',       me.img_opcion_old);\r\n            formData.append('id_opcion_pregunta',   item.id_opcion_pregunta);\r\n            formData.append('id_pregunta',          item.id_pregunta);\r\n            formData.append('cant_coincidencias',   0);\r\n            formData.append('n_evaluacion',         me.periodoSelect);\r\n            axios.post(this.$data_url+'api/editar_opcion_salle', formData)\r\n            .then(res => {\r\n                me.opciones             = res.data;\r\n                me.editarOpcionActiva   = false;\r\n                me.opcion.opcion        = '';\r\n                me.opcion.tipo          = '';\r\n                me.src_imagen_opcion    = '';\r\n                me.$emit('changeRecharge',2)\r\n                me.$vs.notify({\r\n                text:'Opción editada correctamente',\r\n                color:'success',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n        },\r\n        mostrarImg(file, img){\r\n            let me                  = this;\r\n            me.src_imagen_opcion    = ' ';\r\n            me.src_imagen_pregunta  = ' ';\r\n            var archivo = document.getElementById(\"file\"+file).files[0];\r\n            var reader = new FileReader();\r\n            if (me) {\r\n                reader.readAsDataURL(archivo );\r\n                reader.onloadend = function () {\r\n                    document.getElementById(\"img\"+img).src = reader.result;\r\n                }\r\n            }\r\n        },\r\n        quitarOpcion(item){\r\n            let me = this;\r\n            axios.get(this.$data_url+'api/quitar_opcion_salle/'+item.id_opcion_pregunta)\r\n            .then(res => {\r\n                me.removeItemFromArr(me.opciones, item)\r\n                me.$emit('changeRecharge',2)\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n        },\r\n        removeItemFromArr (arr, item) {\r\n          const i = arr.indexOf(item)\r\n          arr.splice(i, 1)\r\n        },\r\n        quitarImagen(id){\r\n          let me = this\r\n          document.getElementById('file' + id).value = null;\r\n          if( document.getElementById(\"img\" + id) ){\r\n            document.getElementById(\"img\" + id).src = '';\r\n          }\r\n          if( id === 1 ){\r\n            me.img_preg_old = ''\r\n          }else{\r\n            me.img_opcion_old = ''\r\n          }\r\n        },\r\n        editarPalabrasclave(){\r\n          let me = this;\r\n          if( me.pregunta.cant_coincidencias === '' || me.pregunta.cant_coincidencias === undefined || me.pregunta.cant_coincidencias < 0){\r\n              me.$vs.notify({\r\n              text:'Ingrese la cantidad de coincidencias de palabras clave.',\r\n              color:'warning',\r\n              iconPack: 'feather',\r\n              icon:'icon-check'})\r\n              return\r\n          }\r\n          var cantCoin = parseInt(me.pregunta.cant_coincidencias)\r\n          if( me.id_opcion_tipo234 != '' ){\r\n              let palabrasV = me.palabras_clave.replace(/ /gi, '')\r\n              const formData = new FormData();\r\n              formData.append('opcion', palabrasV);\r\n              formData.append('tipo', 1);\r\n              formData.append('img_opcion', '');\r\n              formData.append('img_opcion_old', '');\r\n              formData.append('id_opcion_pregunta', me.id_opcion_tipo234);\r\n              formData.append('id_pregunta', me.pregunta.id_pregunta);\r\n              formData.append('cant_coincidencias', cantCoin);\r\n              formData.append('n_evaluacion',         me.periodoSelect);\r\n              me.$vs.loading()\r\n              axios.post(this.$data_url+'api/editar_opcion_salle', formData)\r\n              .then(res => {\r\n                me.$vs.loading.close()\r\n                  me.opciones           = res.data;\r\n                  me.editarOpcionActiva = false;\r\n                  me.opcion.opcion      = '';\r\n                  me.opcion.tipo        = '';\r\n                  me.src_imagen_opcion  = '';\r\n                  me.$emit('changeRecharge',2)\r\n                  me.$vs.loading.close()\r\n                  me.$vs.notify({\r\n                  text:'Palabras clave guardada correctamente',\r\n                  color:'success',\r\n                  iconPack: 'feather',\r\n                  icon:'icon-check'})\r\n              })\r\n              .catch(function (error) {\r\n                  me.$vs.loading.close()\r\n                  console.log(error);\r\n              })\r\n          }else{\r\n              me.cargarOpcionAbierta()\r\n          }\r\n        },\r\n        cargarOpcion(){\r\n            let me = this;\r\n            if( me.id_preguntaActiva === '' ){\r\n                me.$vs.notify({\r\n                    text:'Debe crear una pregunta antes de cargar las opciones.',\r\n                    color:'warning',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check'})\r\n            }else{\r\n                me.$vs.loading()\r\n                const formData = new FormData();\r\n                let fileImgPreg = document.getElementById(\"file2\").files[0];\r\n                let tipo = 0;\r\n                if( me.opcion.tipo === true ){\r\n                    tipo = 1;\r\n                }\r\n                formData.append('opcion',               me.opcion.opcion);\r\n                formData.append('id_pregunta',          me.id_preguntaActiva);\r\n                formData.append('img_opcion',           fileImgPreg);\r\n                formData.append('tipo',                 tipo);\r\n                formData.append('cant_coincidencias',   0);\r\n                formData.append('n_evaluacion',         me.periodoSelect);\r\n                axios.post(this.$data_url+'api/cargar_opcion_salle', formData)\r\n                .then(res => {\r\n                    me.opciones             = res.data;\r\n                    me.opcion.opcion        = '';\r\n                    me.opcion.tipo          = '';\r\n                    me.src_imagen_opcion    = '';\r\n                    document.getElementById(\"file2\").value = '';\r\n                    me.$vs.loading.close()\r\n                    me.$emit('changeRecharge',2)\r\n                    //notify guardado\r\n                })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close()\r\n                    console.log(error);\r\n                })\r\n            }\r\n        },\r\n        cargarOpcionAbierta(){\r\n            let me = this;\r\n            if( me.pregunta.cant_coincidencias === '' || me.pregunta.cant_coincidencias === undefined || me.pregunta.cant_coincidencias < 0){\r\n            me.$vs.notify({\r\n            text:'Ingrese la cantidad de coincidencias de palabras clave.',\r\n            color:'warning',\r\n            iconPack: 'feather',\r\n            icon:'icon-check'})\r\n            return\r\n            }\r\n            if( me.id_preguntaActiva === '' ){\r\n            me.$vs.notify({\r\n            text:'Debe crear una pregunta antes de cargar las opciones.',\r\n            color:'warning',\r\n            iconPack: 'feather',\r\n            icon:'icon-check'})\r\n            }else{\r\n            let tipo = 6;\r\n            let palabrasV = me.palabras_clave.replace(/ /gi, '')\r\n            const formData = new FormData();\r\n            formData.append('opcion',               palabrasV);\r\n            formData.append('tipo',                 tipo);\r\n            formData.append('img_opcion',           null);\r\n            formData.append('id_pregunta',          me.id_preguntaActiva);\r\n            formData.append('cant_coincidencias',   parseInt(me.pregunta.cant_coincidencias));\r\n            formData.append('n_evaluacion',         me.periodoSelect);   \r\n            me.$vs.loading()\r\n            axios.post(this.$data_url+'api/cargar_opcion_salle', formData)\r\n            .then(res => {\r\n                me.id_opcion_tipo234       = res.data[0].id_opcion_pregunta\r\n                me.opciones             = res.data;\r\n                me.opcion.opcion        = '';\r\n                me.opcion.tipo          = '';\r\n                me.src_imagen_opcion    = '';\r\n                me.$emit('changeRecharge',2)\r\n                me.$vs.loading.close()\r\n                me.$vs.notify({\r\n                text:'Palabras clave guardadas correctamente',\r\n                color:'success',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n            })\r\n            .catch(function (error) {\r\n                me.$vs.loading.close()\r\n                console.log(error);\r\n            })\r\n            }\r\n        },\r\n        cargarOpcionesVF(){\r\n            let me = this;\r\n            if( me.id_preguntaActiva === '' ){\r\n                me.$vs.notify({\r\n                text:'Debe crear una pregunta antes de cargar las opciones.',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n            }else{\r\n                me.$vs.loading()\r\n                const formData = new FormData();\r\n                formData.append('opcion',       me.opcion.opcion);\r\n                formData.append('id_pregunta',  me.id_preguntaActiva);\r\n                formData.append('img_opcion', null);\r\n                formData.append('tipo', 1);\r\n                formData.append('cant_coincidencias', 0);\r\n                this.$http.post(this.$server_url+'cargar_opcion_vf_salle', formData)\r\n                .then(res => {\r\n                    // me.opcion.opcion        = '';\r\n                    // me.opcion.tipo          = '';\r\n                    me.editarActivo            = true\r\n                    me.src_imagen_opcion       = '';\r\n                    me.$vs.loading.close()\r\n                    me.$vs.notify({\r\n                    text:'Opción guardada correctamente',\r\n                    color:'success',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check'})\r\n                    me.$emit('changeRecharge',3)\r\n                })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close()\r\n                    console.log(error);\r\n                })\r\n            }\r\n        },\r\n        editarOpcionesVF(){\r\n            let me = this;\r\n            me.$vs.loading()\r\n            const formData = new FormData();\r\n                formData.append('opcion',       me.opcion.opcion);\r\n                formData.append('id_pregunta',  me.id_preguntaActiva);\r\n                formData.append('img_opcion', null);\r\n                formData.append('tipo', 1);\r\n                formData.append('id_opcion', 1);\r\n                formData.append('cant_coincidencias', 0);\r\n            this.$http.post(this.$server_url+'cargar_opcion_vf_salle', formData)\r\n            .then(res => {\r\n                me.$vs.loading.close()\r\n                me.$emit('changeRecharge',2)\r\n                me.$vs.notify({\r\n                text:'Opción guardada correctamente',\r\n                color:'success',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n            })\r\n            .catch(function (error) {\r\n                me.$vs.loading.close()\r\n                console.log(error);\r\n            })\r\n        },\r\n        transformarPregunta(){\r\n            let me = this\r\n            me.$vs.loading()\r\n            const formData = new FormData();\r\n            formData.append('id_pregunta', me.pregunta.id_pregunta);\r\n            formData.append('id_tipo_pregunta', me.pregTipo);\r\n            this.$http.post(this.$server_url+'transformar_preguntas_salle', formData).then(res => {\r\n            me.$vs.notify({\r\n            text:'Pregunta transformada correctamente.',\r\n            color:'primary',\r\n            iconPack: 'feather',\r\n            icon:'icon-check'})\r\n            me.$emit('changeRecharge',1)\r\n            me.$vs.loading.close()\r\n            })\r\n            .catch(function (error) {\r\n            me.$vs.loading.close()\r\n            })\r\n        },\r\n        //METODOS PARA CAMBIAR ESTADO PREGUNTA\r\n        CambiarEstadoPreguntaSalle(){\r\n            let me        = this\r\n            let est       = 0\r\n            if(me.activoPregunta){\r\n            est         = 1\r\n            }else{\r\n            est         = 0\r\n            }\r\n            me.pregunta.estado = est\r\n            let formData  = new FormData();\r\n            formData.append('id_pregunta',    me.pregunta.id_pregunta);\r\n            formData.append('estado',         est)\r\n            me.$vs.loading()\r\n            this.$http.post(this.$server_url+'CambiarEstadoPreguntaSalle', formData)\r\n            .then(res => {\r\n            me.$vs.loading.close()\r\n            me.$vs.notify({\r\n            text:'Se cambio de estado correctamente',\r\n            color:'warning',\r\n            iconPack: 'feather',\r\n            icon:'icon-check',\r\n            })\r\n            me.$emit('changeRecharge',2)\r\n            })\r\n        },\r\n       //FIN METODOS PARA CAMBIAR ESTADO PREGUNTA\r\n    }\r\n}       \r\n</script>"],"mappings":"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","ignoreList":[]}]}