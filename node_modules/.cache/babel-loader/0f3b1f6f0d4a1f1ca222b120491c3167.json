{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\pedidos\\asesor\\contratos\\LiquidacionCodigos.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\pedidos\\asesor\\contratos\\LiquidacionCodigos.vue","mtime":1712682816251},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\babel.config.js","mtime":1712682813877},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\.babelrc","mtime":1712682813750},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport flatPickr from 'vue-flatpickr-component';\nimport 'flatpickr/dist/flatpickr.css';\nimport Vue from 'vue';\nimport axios from 'axios';\nimport vSelect from 'vue-select';\nimport moment from 'moment';\nimport $ from 'jquery';\nimport io from \"socket.io-client\";\nexport default {\n  data: function data() {\n    return {\n      usuario: [],\n      status: \"0\",\n      codigosInstitucion: [],\n      arregloTemporada: [],\n      //para la tabla seleccionada\n      codigoSelected: [],\n      //para exportar\n      formats: ['xls', 'xlsx', 'csv', 'txt'],\n      fileName: null,\n      selectedFormat: 'xls',\n      cellAutoWidth: true,\n      activePrompt: false,\n      asesor: \"\",\n      socket: io(process.env.socket)\n    };\n  },\n  props: {\n    contratoLiquidacion: {\n      type: String,\n      default: \"\"\n    },\n    estado_verificacion: {\n      type: Number,\n      default: 0\n    },\n    insNombre: {\n      type: String,\n      default: \"\"\n    },\n    ciuNombre: {\n      type: String,\n      default: \"\"\n    }\n\n    // contratoLiquidacion:{\n    //     type:String,\n    //     default:\"C-C23-0000039-LJ\",\n    // },\n    // estado_verificacion:{\n    //     type:Number,\n    //     default:0\n    // },\n    // insNombre:{\n    //     type:String,\n    //     default:\"Pan de vida\",\n    // },\n    // ciuNombre:{\n    //     type:String,\n    //     default:\"Guayaquil\",\n    // },\n  },\n  computed: {\n    sumaTotal: function sumaTotal() {\n      var me = this;\n      if (me.codigosInstitucion.length > 0) {\n        var datos = me.codigosInstitucion.filter(function (p) {\n          return p.cantidad;\n        });\n        var total = datos.reduce(function (a, b) {\n          return a + (b[\"cantidad\"] || 0);\n        }, 0);\n        return total;\n      }\n    }\n  },\n  methods: {\n    //traer la liquidacion\n    getLiquidacion: function getLiquidacion() {\n      var _this = this;\n      var me = this;\n      me.$vs.loading();\n      this.$http.get(this.$server_url + 'temporadas/liquidacion/' + me.contratoLiquidacion).then(function (res) {\n        me.$vs.loading.close();\n        if (res.data.status == 0) {\n          me.$vs.notify({\n            text: res.data.message,\n            color: 'danger',\n            iconPack: 'feather',\n            icon: 'icon-check'\n          });\n          return;\n        }\n        //llenar el arreglo  de libros\n        _this.arregloTemporada = res.data.temporada;\n        _this.codigosInstitucion = res.data.codigos_libros;\n      }).catch(function (e) {\n        me.$vs.loading.close();\n      });\n    },\n    OpenConfirm: function OpenConfirm() {\n      this.$vs.dialog({\n        type: 'confirm',\n        color: 'danger',\n        title: \"Confirm\",\n        text: 'Estas seguro de solicitar una verificación.',\n        accept: this.solicitarVerificacion\n      });\n    },\n    solicitarVerificacion: function solicitarVerificacion() {\n      var me = this;\n      var formData = new FormData();\n      formData.append('contrato', me.contratoLiquidacion);\n      me.$vs.loading();\n      this.$http.post(this.$server_url + 'solicitarVerificacion', formData).then(function (res) {\n        me.$vs.loading.close();\n        me.$vs.notify({\n          text: 'Se solicito correctamente',\n          color: 'success',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n      });\n      var datos = {\n        id_asesor: me.usuario.idusuario,\n        emisor: me.usuario.idusuario,\n        grupo: me.usuario.id_group,\n        tipo: \"verificaciones\"\n      };\n      me.sendSocket(datos);\n      me.$emit('ChangeRegresar', true);\n    },\n    sendSocket: function sendSocket(datos) {\n      try {\n        this.socket.emit(\"enviar\", datos);\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    exportToExcel: function exportToExcel() {\n      var _this2 = this;\n      var headerTitle = ['serie', 'Libro', 'Cantidad', 'Cod. Liquidacion'];\n      var headerVal = ['serie', 'nombrelibro', 'cantidad', 'codigo'];\n      this.fileName = \"Codigos_a_liquidar\";\n      import('@/vendor/Export2Excel').then(function (excel) {\n        var data = _this2.formatJson(headerVal, _this2.codigosInstitucion);\n        excel.export_json_to_excel({\n          header: headerTitle,\n          data: data,\n          filename: _this2.fileName,\n          autoWidth: _this2.cellAutoWidth,\n          bookType: _this2.selectedFormat\n        });\n        _this2.clearFields();\n        _this2.guardarActivo = '';\n        _this2.generarActivo = ' ';\n        _this2.textAlertCant = '';\n        _this2.cantidad = '';\n      });\n    },\n    formatJson: function formatJson(filterVal, jsonData) {\n      return jsonData.map(function (v) {\n        return filterVal.map(function (j) {\n          return v[j];\n        });\n      });\n    },\n    //limpiar campos para exportar de nuevo\n    clearFields: function clearFields() {\n      this.fileName = '';\n      this.cellAutoWidth = true;\n      this.selectedFormat = 'xls';\n    }\n  },\n  components: {\n    'v-select': vSelect,\n    flatPickr: flatPickr\n  },\n  created: function created() {\n    var me = this;\n    me.usuario = JSON.parse(localStorage.getItem(\"usuario\"));\n    me.getLiquidacion();\n  }\n};",{"version":3,"names":["flatPickr","Vue","axios","vSelect","moment","$","io","data","usuario","status","codigosInstitucion","arregloTemporada","codigoSelected","formats","fileName","selectedFormat","cellAutoWidth","activePrompt","asesor","socket","process","env","props","contratoLiquidacion","type","String","default","estado_verificacion","Number","insNombre","ciuNombre","computed","sumaTotal","me","length","datos","filter","p","cantidad","total","reduce","a","b","methods","getLiquidacion","_this","$vs","loading","$http","get","$server_url","then","res","close","notify","text","message","color","iconPack","icon","temporada","codigos_libros","catch","e","OpenConfirm","dialog","title","accept","solicitarVerificacion","formData","FormData","append","post","id_asesor","idusuario","emisor","grupo","id_group","tipo","sendSocket","$emit","emit","error","console","log","exportToExcel","_this2","headerTitle","headerVal","excel","formatJson","export_json_to_excel","header","filename","autoWidth","bookType","clearFields","guardarActivo","generarActivo","textAlertCant","filterVal","jsonData","map","v","j","components","created","JSON","parse","localStorage","getItem"],"sources":["src/views/pedidos/asesor/contratos/LiquidacionCodigos.vue"],"sourcesContent":["<template>\r\n    <vx-card\r\n    title=\"Códigos para ser liquidados\"\r\n    title-color=\"primary\"\r\n    >\r\n        <div v-if=\"arregloTemporada.length =='0'\">\r\n            <vs-alert title=\"Mensaje\" color=\"rgb(231, 154, 23)\" active=\"true\">\r\n                <p>No hay códigos para liquidar</p>\r\n            </vs-alert>\r\n        </div>\r\n        <div v-if=\"arregloTemporada.length > 0\">\r\n            <ul>\r\n                <vs-list>\r\n                    <vs-list-item icon=\"check\" title=\"Contrato\" :subtitle=\"contratoLiquidacion\">\r\n                    </vs-list-item>\r\n                    <vs-list-item icon=\"check\" title=\"Institución\" :subtitle=\"insNombre + ' ('+ciuNombre+')'\">\r\n                    </vs-list-item>\r\n                    <vs-list-item icon=\"check\" title=\"Periodo\" :subtitle=\"arregloTemporada[0].periodo\">\r\n                    </vs-list-item>\r\n                    <vs-list-item icon=\"check\" title=\"Asesor\" :subtitle=\"arregloTemporada[0].asesor\">\r\n                    </vs-list-item>\r\n                </vs-list>\r\n            </ul>\r\n            <!-- <div>\r\n                <div class=\"vx-row\">\r\n                    <div class=\"vx-col sm:w-2/3 w-full ml-auto\" v-if=\"estado_verificacion == 0\">\r\n                        <vs-button class=\"mr-3 mb-2\" @click=\"solicitarVerificacion()\"><ion-icon name=\"checkmark-outline\"></ion-icon> Solicitar Verificación</vs-button>\r\n                        <vs-button color=\"warning\" type=\"border\" @click=\"$emit('ChangeRegresar',true)\" class=\"mb-2\">Cancelar</vs-button>\r\n                    </div>\r\n                    <div v-else class=\"vx-col sm:w-2/3 w-full ml-auto\">\r\n                        <p class=\"text-warning text-2xl\">Ya existe una solicitud de verificación</p>\r\n                    </div>\r\n                </div>\r\n            </div> -->\r\n            <vs-table pagination max-items=\"15\" search :data=\"codigosInstitucion\">\r\n                <template slot=\"header\">\r\n                    <vs-chip color=\"primary\" class=\"mr-2\" style=\"font-size:12px;\">\r\n                    Total Libros a liquidar: {{sumaTotal}}\r\n                    </vs-chip>\r\n                    <vs-chip color=\"success\" class=\"mr-2\" style=\"font-size:12px;\">\r\n                    Total tabla: {{ codigosInstitucion.length }}\r\n                    </vs-chip>\r\n                    <vs-button color=\"warning\"  size=\"small\" class=\"mr-5\" style=\"font-size: 14px;\" @click=\"exportToExcel()\">Exportar</vs-button>\r\n                </template>\r\n                <template slot=\"thead\">\r\n                    <vs-th sort-key=\"serie\">Serie</vs-th>\r\n                    <vs-th sort-key=\"libro\">Libro</vs-th>\r\n                    <vs-th sort-key=\"cantidad\">Cant Códigos</vs-th>\r\n                    <vs-th sort-key=\"libro\">Cod. Liquidacion</vs-th>\r\n                </template>\r\n                <template slot-scope=\"{data}\">\r\n                    <vs-tr :data=\"tr\" :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                        <vs-td :data=\"data[indextr].serie\">\r\n                            {{ data[indextr].serie }}\r\n                        </vs-td>\r\n                        <vs-td :data=\"data[indextr].nombrelibro\">\r\n                            {{ data[indextr].nombrelibro }}\r\n                        </vs-td>\r\n                        <vs-td :data=\"data[indextr].cantidad\">\r\n                            {{ data[indextr].cantidad }}\r\n                        </vs-td>\r\n                        <vs-td :data=\"data[indextr].codigo\">\r\n                            {{ data[indextr].codigo }}\r\n                        </vs-td>\r\n                    </vs-tr>\r\n                </template>\r\n            </vs-table>\r\n        </div>\r\n    </vx-card>\r\n    </template>\r\n    <script>\r\n\r\n    import flatPickr from 'vue-flatpickr-component';\r\n    import 'flatpickr/dist/flatpickr.css';\r\n    import Vue from 'vue'\r\n    import axios from 'axios'\r\n    import vSelect from 'vue-select'\r\n    import moment from 'moment'\r\n    import $ from 'jquery'\r\n    import io from \"socket.io-client\";\r\n    export default{\r\n     data:()=>({\r\n                usuario:[],\r\n                status:\"0\",\r\n                codigosInstitucion:[],\r\n                arregloTemporada:[],\r\n                //para la tabla seleccionada\r\n                codigoSelected: [],\r\n                //para exportar\r\n                formats: ['xls', 'xlsx', 'csv', 'txt'],\r\n                fileName:null,\r\n                selectedFormat: 'xls',\r\n                cellAutoWidth: true,\r\n                activePrompt: false,\r\n                asesor:\"\",\r\n                socket: io(process.env.socket),\r\n            }\r\n         ),\r\n        props:{\r\n            contratoLiquidacion:{\r\n                type:String,\r\n                default:\"\",\r\n            },\r\n            estado_verificacion:{\r\n                type:Number,\r\n                default:0\r\n            },\r\n            insNombre:{\r\n                type:String,\r\n                default:\"\",\r\n            },\r\n            ciuNombre:{\r\n                type:String,\r\n                default:\"\",\r\n            },\r\n\r\n            // contratoLiquidacion:{\r\n            //     type:String,\r\n            //     default:\"C-C23-0000039-LJ\",\r\n            // },\r\n            // estado_verificacion:{\r\n            //     type:Number,\r\n            //     default:0\r\n            // },\r\n            // insNombre:{\r\n            //     type:String,\r\n            //     default:\"Pan de vida\",\r\n            // },\r\n            // ciuNombre:{\r\n            //     type:String,\r\n            //     default:\"Guayaquil\",\r\n            // },\r\n        },\r\n        computed:{\r\n            sumaTotal(){\r\n                let me = this;\r\n                if(me.codigosInstitucion.length >0){\r\n                    let datos = me.codigosInstitucion.filter(p => p.cantidad)\r\n                    let total = datos.reduce((a, b) => a + (b[\"cantidad\"] || 0), 0);\r\n                    return total\r\n                }\r\n            },\r\n        },\r\n        methods:{\r\n            //traer la liquidacion\r\n            getLiquidacion(){\r\n                let me = this;\r\n                me.$vs.loading()\r\n                this.$http.get(this.$server_url + 'temporadas/liquidacion/' + me.contratoLiquidacion)\r\n                .then(res => {\r\n                    me.$vs.loading.close()\r\n                    if(res.data.status == 0){\r\n                        me.$vs.notify({\r\n                        text:res.data.message,\r\n                        color:'danger',\r\n                        iconPack: 'feather',\r\n                        icon:'icon-check'})\r\n                        return\r\n                    }\r\n                    //llenar el arreglo  de libros\r\n                    this.arregloTemporada   = res.data.temporada\r\n                    this.codigosInstitucion = res.data.codigos_libros;\r\n                })\r\n                .catch(function(e){\r\n                    me.$vs.loading.close()\r\n                })\r\n            },\r\n            OpenConfirm(){\r\n                this.$vs.dialog({\r\n                    type:'confirm',\r\n                    color: 'danger',\r\n                    title: `Confirm`,\r\n                    text: 'Estas seguro de solicitar una verificación.',\r\n                    accept:this.solicitarVerificacion\r\n                })\r\n            },\r\n            solicitarVerificacion(){\r\n                let me = this\r\n                let formData = new FormData();\r\n                formData.append('contrato',me.contratoLiquidacion);\r\n                me.$vs.loading()\r\n                this.$http.post(this.$server_url+'solicitarVerificacion', formData)\r\n                .then(res => {\r\n                me.$vs.loading.close()\r\n                me.$vs.notify({\r\n                    text:'Se solicito correctamente',\r\n                    color:'success',\r\n                    iconPack: 'feather',\r\n                    icon:'icon-check'})\r\n                })\r\n                let datos = {\r\n                    id_asesor:  me.usuario.idusuario,\r\n                    emisor:     me.usuario.idusuario,\r\n                    grupo:      me.usuario.id_group,\r\n                    tipo:       \"verificaciones\"\r\n                }\r\n                me.sendSocket(datos)\r\n                me.$emit('ChangeRegresar',true)\r\n            },\r\n            sendSocket(datos){\r\n                try {\r\n                this.socket.emit(\"enviar\", datos);\r\n                } catch (error) {\r\n                    console.log(error)\r\n                }\r\n            },\r\n            exportToExcel() {\r\n                let headerTitle = [ 'serie','Libro', 'Cantidad', 'Cod. Liquidacion'];\r\n                let headerVal = [ 'serie','nombrelibro', 'cantidad','codigo'];\r\n                this.fileName = \"Codigos_a_liquidar\";\r\n                import('@/vendor/Export2Excel').then(excel => {\r\n                    const data = this.formatJson(headerVal, this.codigosInstitucion)\r\n                    excel.export_json_to_excel({\r\n                        header: headerTitle,\r\n                        data,\r\n                        filename: this.fileName,\r\n                        autoWidth: this.cellAutoWidth,\r\n                        bookType: this.selectedFormat\r\n                    })\r\n                    this.clearFields()\r\n                    this.guardarActivo = '';\r\n                    this.generarActivo = ' ';\r\n                    this.textAlertCant = '';\r\n                    this.cantidad = '';\r\n                })\r\n            },\r\n            formatJson(filterVal, jsonData) {\r\n                return jsonData.map(v => filterVal.map(j => {\r\n                    return v[j]\r\n                }))\r\n            },\r\n            //limpiar campos para exportar de nuevo\r\n            clearFields() {\r\n                this.fileName = ''\r\n                this.cellAutoWidth = true\r\n                this.selectedFormat = 'xls'\r\n            },\r\n        },\r\n        components: {\r\n            'v-select': vSelect,\r\n            flatPickr,\r\n        },\r\n       created() {\r\n           let me =this;\r\n           me.usuario = JSON.parse(localStorage.getItem(\"usuario\"))\r\n           me.getLiquidacion()\r\n        }\r\n    }\r\n    </script>\r\n"],"mappings":"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","ignoreList":[]}]}