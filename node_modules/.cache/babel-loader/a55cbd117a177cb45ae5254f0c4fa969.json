{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\temporadas\\components\\exportTipoVenta.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\temporadas\\components\\exportTipoVenta.vue","mtime":1712682816615},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\babel.config.js","mtime":1712682813877},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\.babelrc","mtime":1712682813750},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.match\";\nimport \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.number.constructor\";\nimport moment from \"moment\";\nimport html2pdf from \"html2pdf.js\";\nexport default {\n  data: function data() {\n    return {\n      arregloLibros: [],\n      arregloVerificacion: [],\n      day: '',\n      dayM: '',\n      mes: '',\n      year: '',\n      anio: '',\n      fecha: '',\n      nombrearchivo: '',\n      valorVenta: 0,\n      totalVenta: 0,\n      comision: 0,\n      valorComision: 0,\n      anticipo: 0,\n      deuda: 0,\n      liquidacion: 0,\n      //VARIABLES PARA EXPORTAR A EXCEL\n      formats: ['xls', 'xlsx', 'csv', 'txt'],\n      fileName: null,\n      selectedFormat: 'xls',\n      cellAutoWidth: true,\n      activePrompt: false,\n      sumaTotalTipo: 0\n    };\n  },\n  props: {\n    VerificacionSelect: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n    datosInstitucion: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n    tipoVenta: {\n      type: Number,\n      default: 1\n    },\n    sendPedido: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    }\n  },\n  created: function created() {\n    var me = this;\n    moment.lang(\"es\");\n    me.day = moment().format('DD');\n    me.dayM = moment().format('dddd');\n    me.mes = moment().format('MMMM');\n    me.year = moment().format('YYYY');\n    me.fecha = me.day + '-' + me.mes.substring(0, 3) + '-' + me.year;\n  },\n  mounted: function mounted() {\n    var me = this;\n    me.nombrearchivo = \"\";\n    me.obtenerVentaRealXVerificacionXTipoVenta();\n    var TypeVenta = me.tipoVenta == 1 ? '_Venta-directa' : 'Venta-Lista';\n    me.nombrearchivo = \"Verificacion \" + me.datosInstitucion.contrato + TypeVenta + \".pdf\";\n  },\n  methods: {\n    filtrarDecimal: function filtrarDecimal(numero) {\n      var me = this;\n      if (numero == 0) {\n        return numero;\n      } else {\n        var transformar = numero.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\n        return transformar;\n      }\n    },\n    obtenerVentaRealXVerificacionXTipoVenta: function obtenerVentaRealXVerificacionXTipoVenta() {\n      var me = this;\n      me.arregloLibros = [];\n      me.sumaTotalTipo = 0;\n      var _me$datosInstitucion = me.datosInstitucion,\n        contrato = _me$datosInstitucion.contrato,\n        idInstitucion = _me$datosInstitucion.idInstitucion,\n        id_periodo = _me$datosInstitucion.id_periodo;\n      me.$vs.loading();\n      this.$http.get(this.$server_url + 'n_verificacion?contrato=' + contrato + '&getVentaRealXVerificacionXTipoVenta=yes&IdVerificacion=' + me.VerificacionSelect.id + '&verificacion_id=' + me.VerificacionSelect.num_verificacion + '&institucion_id=' + idInstitucion + '&periodo_id=' + id_periodo + '&TipoVenta=' + me.tipoVenta).then(function (res) {\n        var datos = res.data;\n        if (datos.length == 0) {\n          me.$vs.loading.close();\n          me.$vs.notify({\n            text: \"No existe codigos en el tipo de venta seleccionado\",\n            color: 'warning',\n            iconPack: 'feather',\n            icon: 'icon-file',\n            time: 3000\n          });\n          return;\n        }\n        me.$vs.notify({\n          text: \"Espere mientras se va generando el archivo...\",\n          color: 'primary',\n          iconPack: 'feather',\n          icon: 'icon-file',\n          time: 4000\n        });\n        me.sumarTotalTipoVenta(datos);\n        me.getLibros(datos);\n        me.$vs.loading.close();\n      }).catch(function (error) {\n        console.log(error + ' error');\n        me.$vs.loading.close();\n      });\n    },\n    sumarTotalTipoVenta: function sumarTotalTipoVenta(data) {\n      var me = this;\n      if (data.length > 0) {\n        var datos = data.filter(function (p) {\n          return p.valor;\n        });\n        var total = datos.reduce(function (a, b) {\n          return a + (b[\"valor\"] || 0);\n        }, 0);\n        me.sumaTotalTipo = total;\n      }\n    },\n    getLibros: function getLibros(datos) {\n      var me = this;\n      me.arregloLibros = [];\n      ///===ORDENAR ARRAY ==\n      me.arregloLibros = datos.sort(function (a, b) {\n        var nombreA = a.nombre_libro.toLowerCase();\n        var nombreB = b.nombre_libro.toLowerCase();\n        var numA = parseInt(nombreA.match(/\\d+$/)); // extraer el número del final (si existe)\n        var numB = parseInt(nombreB.match(/\\d+$/)); // extraer el número del final (si existe)\n        nombreA = nombreA.replace(/\\d+$/, ''); // quitar el número del final\n        nombreB = nombreB.replace(/\\d+$/, ''); // quitar el número del final\n        if (nombreA < nombreB) {\n          return -1;\n        }\n        if (nombreA > nombreB) {\n          return 1;\n        }\n        if (numA && !numB) {\n          // si a tiene número y b no, b va primero\n          return 1;\n        }\n        if (!numA && numB) {\n          // si b tiene número y a no, a va primero\n          return -1;\n        }\n        if (numA && numB) {\n          // si ambos tienen número, compararlos\n          if (numA < 10 && numB >= 10) {\n            // si a es menor que 10 y b es 10 o mayor, a va primero\n            return -1;\n          }\n          if (numA >= 10 && numB < 10) {\n            // si b es menor que 10 y a es 10 o mayor, b va primero\n            return 1;\n          }\n          return numA - numB; // comparar los números directamente\n        }\n        return 0; // si son iguales en todo, no hay diferencia\n      });\n      setTimeout(function () {\n        me.imprimirEval();\n      }, 1000);\n    },\n    formatJson: function formatJson(filterVal, jsonData) {\n      return jsonData.map(function (v) {\n        return filterVal.map(function (j) {\n          return v[j];\n        });\n      });\n    },\n    //limpiar campos para exportar de nuevo\n    clearFields: function clearFields() {\n      this.fileName = '';\n      this.cellAutoWidth = true;\n      this.selectedFormat = 'xls';\n    },\n    imprimirEval: function imprimirEval() {\n      var me = this;\n      var element = document.getElementById('seccionImprimirTipoVenta');\n      var opt = {\n        margin: 0.5,\n        // margin:         [1.5, 0.5, 1, 1],\n        filename: me.nombrearchivo,\n        image: {\n          type: 'jpeg',\n          quality: 0.98\n        },\n        html2canvas: {\n          scale: 2\n        },\n        pagebreak: {\n          mode: 'avoid-all',\n          inside: \"avoid\",\n          before: '#page2el'\n        },\n        // jsPDF:        { unit: 'in', format: 'letter', orientation: 'portrait' }\n        jsPDF: {\n          unit: 'in',\n          format: 'letter',\n          orientation: 'portrait'\n        }\n        //jsPDF: { unit: 'mm', format: 'a4', orientation: 'portrait' }\n      };\n      html2pdf().from(element).set(opt).save();\n      me.arregloLibros = [];\n      me.$vs.notify({\n        text: \"Archivo descargado correctamente\",\n        color: 'success',\n        iconPack: 'feather',\n        icon: 'icon-file',\n        time: 2000\n      });\n      me.limpiar();\n      me.$emit('change', true);\n    },\n    limpiar: function limpiar() {\n      var me = this;\n      me.AnticiposConvenio = 0;\n      me.convenio_origen = 0;\n      me.valorVenta = 0;\n      me.totalVenta = 0;\n      me.comision = 0;\n      me.valorComision = 0;\n      me.anticipo = 0;\n      me.deuda = 0;\n      me.liquidacion = 0;\n      me.aniosConvenio = 0;\n    }\n  }\n};",{"version":3,"names":["moment","html2pdf","data","arregloLibros","arregloVerificacion","day","dayM","mes","year","anio","fecha","nombrearchivo","valorVenta","totalVenta","comision","valorComision","anticipo","deuda","liquidacion","formats","fileName","selectedFormat","cellAutoWidth","activePrompt","sumaTotalTipo","props","VerificacionSelect","type","Object","default","_default","datosInstitucion","tipoVenta","Number","sendPedido","created","me","lang","format","substring","mounted","obtenerVentaRealXVerificacionXTipoVenta","TypeVenta","contrato","methods","filtrarDecimal","numero","transformar","toFixed","replace","_me$datosInstitucion","idInstitucion","id_periodo","$vs","loading","$http","get","$server_url","id","num_verificacion","then","res","datos","length","close","notify","text","color","iconPack","icon","time","sumarTotalTipoVenta","getLibros","catch","error","console","log","filter","p","valor","total","reduce","a","b","sort","nombreA","nombre_libro","toLowerCase","nombreB","numA","parseInt","match","numB","setTimeout","imprimirEval","formatJson","filterVal","jsonData","map","v","j","clearFields","element","document","getElementById","opt","margin","filename","image","quality","html2canvas","scale","pagebreak","mode","inside","before","jsPDF","unit","orientation","from","set","save","limpiar","$emit","AnticiposConvenio","convenio_origen","aniosConvenio"],"sources":["src/views/temporadas/components/exportTipoVenta.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <vx-card id=\"seccionImprimirTipoVenta\">\r\n            <p class=\"letra text-center\"><b>REPORTE DE {{ tipoVenta == 1 ? 'VENTA DIRECTA' :'VENTA LISTA' }} </b></p>\r\n            <p class=\"letra text-left\"><b>INSTITUCIÓN:</b> {{ sendPedido.nombreInstitucion.toUpperCase() }}</p>\r\n            <div style=\"display: flex;justify-content: space-between;\">\r\n                <div>\r\n                    <span class=\"letra\" style=\"position: relative;top:-1px;\"><b>TEMPORADA:</b> {{ sendPedido.periodo.toUpperCase() }}</span>\r\n                </div>\r\n                <div>\r\n                    <span class=\"letra\" style=\"position: relative;top:-1px;\"><b>CONVENIO:</b> {{ datosInstitucion.contrato.toUpperCase() }}</span>\r\n                </div>\r\n            </div>\r\n            <p class=\"letra text-left\"><b>ASESOR:</b> {{ sendPedido.responsable.toUpperCase() }}</p>\r\n            <div style=\"display: flex;justify-content: space-between;\">\r\n                <div>\r\n                    <span class=\"letra\" style=\"position: relative;top:-1px;\"><b>FECHA REPORTE:</b> {{ dayM.charAt(0).toUpperCase() + dayM.slice(1) }}, {{ day }} de {{ mes }} de {{ year }}</span>\r\n                </div>\r\n                <div>\r\n                    <span class=\"letra\" style=\"position: relative;top:-1px;\"><b>% COMISIÓN:</b> {{ sendPedido.descuento }}</span>\r\n                </div>\r\n            </div>\r\n            <table class=\"tabla2\">\r\n                <thead>\r\n                    <tr>\r\n                        <td colspan=\"1\"><b>PRODUCTO</b></td>\r\n                        <td colspan=\"4\"><b>NOMBRE</b></td>\r\n                        <td colspan=\"1\"><b>CANT. VERIF.</b></td>\r\n                        <td colspan=\"2\"><b>VAL. UNIT.</b></td>\r\n                        <td colspan=\"1\"><b>VALOR</b></td>\r\n                        <!--9 COLUMNAS-->\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr v-for=\"(tr,key) in arregloLibros\" :key=\"key\">\r\n                        <td>{{ tr.codigo }}</td>\r\n                        <td colspan=\"4\"><p class=\"letra\">{{ tr.nombre_libro.toUpperCase() }}</p>  </td>\r\n                        <td>{{ tr.cantidad }}</td>\r\n                        <td colspan=\"2\">{{ tr.precio }}</td>\r\n                        <td>{{ filtrarDecimal(tr.valor) }} </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td><p class=\"font-bold text-right\" style=\"font-size:10px;\">TOTAL:</p></td>\r\n                        <td style=\"border-top: 1px solid #000;\"><span>{{ filtrarDecimal(sumaTotalTipo)}}</span></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td><p class=\"font-bold text-right\" style=\"font-size:10px;\">COMISIÓN:</p></td>\r\n                        <td style=\"border-top: 1px solid #000;\"><span>{{ filtrarDecimal((sumaTotalTipo * sendPedido.descuento) / 100)}}</span></td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </vx-card>\r\n        <div class=\"w-full p-2 bg-gray-400 text-center\">\r\n          <vs-button color=\"primary\" @click=\"imprimirEval()\" type=\"border\">Imprimir pdf</vs-button>\r\n          <vs-button color=\"primary\" @click=\"imprimirExcel()\" type=\"border\">Imprimir excel</vs-button>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport moment from \"moment\";\r\nimport html2pdf from \"html2pdf.js\"\r\nexport default{\r\n    data(){\r\n        return{\r\n          arregloLibros:[],\r\n          arregloVerificacion:[],\r\n          day:'',\r\n          dayM:'',\r\n          mes:'',\r\n          year:'',\r\n          anio:'',\r\n          fecha:'',\r\n          nombrearchivo:'',\r\n          valorVenta:0,\r\n          totalVenta:0,\r\n          comision:0,\r\n          valorComision:0,\r\n          anticipo:0,\r\n          deuda:0,\r\n          liquidacion:0,\r\n          //VARIABLES PARA EXPORTAR A EXCEL\r\n          formats: ['xls', 'xlsx', 'csv', 'txt'],\r\n          fileName:null,\r\n          selectedFormat: 'xls',\r\n          cellAutoWidth: true,\r\n          activePrompt: false,\r\n          sumaTotalTipo:0,\r\n        }\r\n    },\r\n    props:{\r\n      VerificacionSelect:{\r\n        type:Object,\r\n        default:function(){\r\n          return {}\r\n        }\r\n      },\r\n      datosInstitucion:{\r\n        type:Object,\r\n        default:function(){\r\n            return{}\r\n        }\r\n      },\r\n      tipoVenta:{\r\n        type:Number,\r\n        default:1,\r\n      },\r\n      sendPedido:{\r\n        type:Object,\r\n        default:function(){\r\n           return{}\r\n        }\r\n      }\r\n    },\r\n    created(){\r\n        let me = this;\r\n        moment.lang(\"es\")\r\n        me.day = moment().format('DD');\r\n        me.dayM  = moment().format('dddd');\r\n        me.mes = moment().format('MMMM');\r\n        me.year = moment().format('YYYY')\r\n        me.fecha = me.day+'-'+me.mes.substring(0,3)+'-'+me.year\r\n    },\r\n    mounted(){\r\n      let me = this\r\n      me.nombrearchivo = \"\"\r\n      me.obtenerVentaRealXVerificacionXTipoVenta()\r\n      let TypeVenta = me.tipoVenta == 1 ? '_Venta-directa' : 'Venta-Lista'\r\n      me.nombrearchivo = \"Verificacion \"+me.datosInstitucion.contrato+TypeVenta+\".pdf\"\r\n    },\r\n    methods:{\r\n      filtrarDecimal(numero){\r\n        let me = this\r\n        if(numero == 0){\r\n          return numero\r\n        }else{\r\n          const transformar = (numero).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\r\n          return transformar\r\n        }\r\n      },\r\n      obtenerVentaRealXVerificacionXTipoVenta(){\r\n        let me = this;\r\n        me.arregloLibros = []\r\n        me.sumaTotalTipo = 0\r\n        const { contrato, idInstitucion ,id_periodo } = me.datosInstitucion\r\n        me.$vs.loading()\r\n        this.$http.get(this.$server_url+'n_verificacion?contrato='+contrato+'&getVentaRealXVerificacionXTipoVenta=yes&IdVerificacion='+me.VerificacionSelect.id+'&verificacion_id='+me.VerificacionSelect.num_verificacion+'&institucion_id='+idInstitucion+'&periodo_id='+id_periodo+'&TipoVenta='+me.tipoVenta)\r\n        .then(function (res) {\r\n          let datos = res.data\r\n          if(datos.length == 0){\r\n            me.$vs.loading.close()\r\n            me.$vs.notify({\r\n            text: \"No existe codigos en el tipo de venta seleccionado\",\r\n            color: 'warning',\r\n            iconPack: 'feather',\r\n            icon: 'icon-file',\r\n            time:3000\r\n            })\r\n            return\r\n          }\r\n          me.$vs.notify({\r\n          text: \"Espere mientras se va generando el archivo...\",\r\n          color: 'primary',\r\n          iconPack: 'feather',\r\n          icon: 'icon-file',\r\n          time:4000\r\n          })\r\n          me.sumarTotalTipoVenta(datos)\r\n          me.getLibros(datos)\r\n          me.$vs.loading.close()\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error + ' error');\r\n            me.$vs.loading.close()\r\n        })\r\n      },\r\n      sumarTotalTipoVenta(data){\r\n        let me = this;\r\n          if(data.length > 0){\r\n            let datos = data.filter(p => p.valor)\r\n            let total = datos.reduce((a, b) => a + (b[\"valor\"] || 0), 0);\r\n            me.sumaTotalTipo = total\r\n          }\r\n      },\r\n      getLibros(datos){\r\n        let me = this\r\n        me.arregloLibros = []\r\n        ///===ORDENAR ARRAY ==\r\n        me.arregloLibros = datos.sort(function(a, b) {\r\n        var nombreA = a.nombre_libro.toLowerCase();\r\n        var nombreB = b.nombre_libro.toLowerCase();\r\n        var numA = parseInt(nombreA.match(/\\d+$/)); // extraer el número del final (si existe)\r\n        var numB = parseInt(nombreB.match(/\\d+$/)); // extraer el número del final (si existe)\r\n        nombreA = nombreA.replace(/\\d+$/, ''); // quitar el número del final\r\n        nombreB = nombreB.replace(/\\d+$/, ''); // quitar el número del final\r\n            if (nombreA < nombreB) {\r\n                return -1;\r\n            }\r\n            if (nombreA > nombreB) {\r\n                return 1;\r\n            }\r\n            if (numA && !numB) { // si a tiene número y b no, b va primero\r\n                return 1;\r\n            }\r\n            if (!numA && numB) { // si b tiene número y a no, a va primero\r\n                return -1;\r\n            }\r\n            if (numA && numB) { // si ambos tienen número, compararlos\r\n                if (numA < 10 && numB >= 10) { // si a es menor que 10 y b es 10 o mayor, a va primero\r\n                return -1;\r\n                }\r\n                if (numA >= 10 && numB < 10) { // si b es menor que 10 y a es 10 o mayor, b va primero\r\n                return 1;\r\n                }\r\n                return numA - numB; // comparar los números directamente\r\n            }\r\n            return 0; // si son iguales en todo, no hay diferencia\r\n        })\r\n        setTimeout(function() {me.imprimirEval()}, 1000)\r\n      },\r\n        formatJson(filterVal, jsonData) {\r\n          return jsonData.map(v => filterVal.map(j => {\r\n              return v[j]\r\n          }))\r\n        },\r\n        //limpiar campos para exportar de nuevo\r\n        clearFields() {\r\n          this.fileName = ''\r\n          this.cellAutoWidth = true\r\n          this.selectedFormat = 'xls'\r\n        },\r\n        imprimirEval(){\r\n            let me = this\r\n            var element = document.getElementById('seccionImprimirTipoVenta');\r\n            var opt = {\r\n                margin:       0.5,\r\n                // margin:         [1.5, 0.5, 1, 1],\r\n                filename:     me.nombrearchivo,\r\n                image:        { type: 'jpeg', quality: 0.98 },\r\n                html2canvas:    {scale: 2},\r\n                pagebreak: { mode: 'avoid-all', inside: \"avoid\", before: '#page2el' }  ,\r\n                // jsPDF:        { unit: 'in', format: 'letter', orientation: 'portrait' }\r\n                jsPDF: {unit: 'in', format: 'letter', orientation: 'portrait'}\r\n                //jsPDF: { unit: 'mm', format: 'a4', orientation: 'portrait' }\r\n            };\r\n            html2pdf().from(element).set(opt).save();\r\n            me.arregloLibros   = []\r\n            me.$vs.notify({\r\n                text: \"Archivo descargado correctamente\",\r\n                color: 'success',\r\n                iconPack: 'feather',\r\n                icon: 'icon-file',\r\n                time:2000\r\n            })\r\n            me.limpiar()\r\n            me.$emit('change',true)\r\n        },\r\n        limpiar(){\r\n          let me = this;\r\n          me.AnticiposConvenio = 0\r\n          me.convenio_origen   = 0\r\n          me.valorVenta        = 0\r\n          me.totalVenta        = 0\r\n          me.comision          = 0\r\n          me.valorComision     = 0\r\n          me.anticipo          = 0\r\n          me.deuda             = 0\r\n          me.liquidacion       = 0\r\n          me.aniosConvenio     = 0\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n.html2canvas-container { width: 3000px !important; height: 3000px !important; }\r\n*{\r\n    font-family: Arial;\r\n}\r\n.letra{\r\n    padding:0px 60px 0px 0px;\r\n    font-size: 10px;\r\n    margin-left: 35px;\r\n    text-align: justify;\r\n}\r\n.letra2{\r\n    margin-top: 15px;\r\n    margin-left: 60px;\r\n    padding-right:60px;\r\n    font-size: 11px;\r\n    text-align: justify;\r\n}\r\n.letra3{\r\n    display: flex;\r\n    font-size: 11px;\r\n    margin-left: 35px;\r\n    padding-right:35px;\r\n    text-align: justify;\r\n}\r\n.letra4{\r\n    margin-top: 15px;\r\n    margin-left: 55px;\r\n    padding-right:55px;\r\n    font-size: 11px;\r\n    text-align: justify;\r\n}\r\n.letra5{\r\n    display: flex;\r\n    justify-content: space-evenly;\r\n    width: 90%;\r\n    margin-left: 35px;\r\n    padding-right:35px;\r\n    font-size: 11px;\r\n    margin-top: 115px;\r\n}\r\n.tabla1 {\r\n  table-layout: fixed;\r\n  width: 95%;\r\n  border-collapse: collapse;\r\n  border: none;\r\n  margin-left: 15px;\r\n}\r\n.tabla2{\r\n    table-layout: fixed;\r\n    width: 90%;\r\n    border-collapse: collapse;\r\n    border: none;\r\n    font-size: 11px;\r\n    margin-top: 15px;\r\n    margin-left: 35px;\r\n}\r\n\r\n@media print {\r\n    td {page-break-before: always;}\r\n    p  {page-break-before: always;}\r\n}\r\n.encabezado ,td,th {\r\n    /* border: 1px solid rgb(227, 227, 227); */\r\n    text-align: center;\r\n    border-spacing: 0;\r\n}\r\n.rotar{\r\n    font-size: 8px;\r\n    /* writing-mode: vertical-lr;\r\n     transform: rotate(180deg); */\r\n}\r\n.font1{\r\n    font-size: 8px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]}]}