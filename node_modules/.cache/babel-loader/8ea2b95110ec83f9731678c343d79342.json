{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\pedidos\\gerencia\\reportes\\ReporteInstitucionVenta.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\pedidos\\gerencia\\reportes\\ReporteInstitucionVenta.vue","mtime":1712682816339},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\babel.config.js","mtime":1712682813877},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\.babelrc","mtime":1712682813750},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/web.dom.iterable\";\nimport vSelect from 'vue-select';\nexport default {\n  data: function data() {\n    return {\n      arregloReporte: [],\n      arregloPeriodos: [{\n        id: \"C22\",\n        label: \"Costa 22\",\n        region: '2'\n      }, {\n        id: \"C21\",\n        label: \"Costa 21\",\n        region: '2'\n      }, {\n        id: \"C20\",\n        label: \"Costa 20\",\n        region: '2'\n      }, {\n        id: \"S22\",\n        label: \"Sierra 22\",\n        region: '2'\n      }, {\n        id: \"S21\",\n        label: \"Sierra 21\",\n        region: '2'\n      }, {\n        id: \"S20\",\n        label: \"Sierra 20\",\n        region: '2'\n      }],\n      periodoSelect: '',\n      //variables para el export a excel\n      activePrompt: false,\n      codigoSelected: [],\n      reportesActivo: 0,\n      fileName: null,\n      formats: ['xls', 'xlsx', 'csv', 'txt'],\n      cellAutoWidth: true,\n      selectedFormat: 'xls'\n    };\n  },\n  components: {\n    vSelect: vSelect\n  },\n  mounted: function mounted() {\n    var me = this;\n  },\n  methods: {\n    getInstitucionesReporte: function getInstitucionesReporte() {\n      var me = this;\n      me.arregloReporte = [];\n      if (me.periodoSelect == \"\" || me.periodoSelect == null || me.periodoSelect == undefined) {\n        me.$vs.notify({\n          text: 'Seleccione un período por favor',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        return;\n      }\n      me.$vs.loading();\n      this.$http.get(this.$server_url + 'reporteVentaInstituciones?periodo_id=' + me.periodoSelect).then(function (res) {\n        me.$vs.loading.close();\n        var datos = res.data;\n        datos.forEach(function (element) {\n          var cal = new Object();\n          cal.VEN_VALOR = parseFloat(element.VEN_VALOR).toFixed(2);\n          cal.PERIODO = element.PERIODO;\n          cal.ven_neta = parseFloat(element.ven_neta).toFixed(2);\n          cal.INSTITUCION = element.INSTITUCION;\n          cal.INS_CIUDAD = element.INS_CIUDAD;\n          cal.CONTRATO = element.CONTRATO;\n          cal.VENDEDOR = element.VENDEDOR;\n          me.arregloReporte.push(cal);\n        });\n      }).catch(function (error) {\n        me.$vs.loading.close();\n        console.log(error + ' error');\n      });\n    },\n    filtrarDecimal: function filtrarDecimal(numero) {\n      var me = this;\n      if (numero == 0) {\n        return numero;\n      } else {\n        var preNumero = parseFloat(numero);\n        var transformar = preNumero.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\n        return transformar;\n      }\n    },\n    //METODOS PARA EXCEL\n    //para limipiar los campos del excel\n    clearFields: function clearFields() {\n      this.fileName = '';\n      this.cellAutoWidth = true;\n      this.selectedFormat = 'xls';\n    },\n    //metodo par descargar el excel\n    exportToExcel: function exportToExcel() {\n      var _this = this;\n      var headerTitle = ['Institución', 'Ciudad', 'Contrato', 'Venta Bruta', 'Venta Neta', 'Vendedor'];\n      var headerVal = ['INSTITUCION', 'INS_CIUDAD', 'CONTRATO', 'VEN_VALOR', 'ven_neta', 'VENDEDOR'];\n      var codigoSelectedMayus = this.codigoSelected;\n      for (var i = 0; i < codigoSelectedMayus.length; i++) {\n        for (var key in codigoSelectedMayus[i]) {\n          if (typeof codigoSelectedMayus[i][key] == \"string\") {\n            codigoSelectedMayus[i][key] = codigoSelectedMayus[i][key].toUpperCase();\n          }\n        }\n      }\n      import('@/vendor/Export2Excel').then(function (excel) {\n        var list = codigoSelectedMayus;\n        var data = _this.formatJson(headerVal, list);\n        excel.export_json_to_excel({\n          header: headerTitle,\n          data: data,\n          filename: _this.fileName,\n          autoWidth: _this.cellAutoWidth,\n          bookType: _this.selectedFormat\n        });\n        _this.clearFields();\n        _this.guardarActivo = '';\n        _this.generarActivo = ' ';\n        _this.textAlertCant = '';\n        _this.cantidad = '';\n        _this.codigoSelected = [];\n      });\n    },\n    formatJson: function formatJson(filterVal, jsonData) {\n      return jsonData.map(function (v) {\n        return filterVal.map(function (j) {\n          return v[j];\n        });\n      });\n    }\n  }\n};",{"version":3,"names":["vSelect","data","arregloReporte","arregloPeriodos","id","label","region","periodoSelect","activePrompt","codigoSelected","reportesActivo","fileName","formats","cellAutoWidth","selectedFormat","components","mounted","me","methods","getInstitucionesReporte","undefined","$vs","notify","text","color","iconPack","icon","loading","$http","get","$server_url","then","res","close","datos","forEach","element","cal","Object","VEN_VALOR","parseFloat","toFixed","PERIODO","ven_neta","INSTITUCION","INS_CIUDAD","CONTRATO","VENDEDOR","push","catch","error","console","log","filtrarDecimal","numero","preNumero","transformar","replace","clearFields","exportToExcel","_this","headerTitle","headerVal","codigoSelectedMayus","i","length","key","toUpperCase","excel","list","formatJson","export_json_to_excel","header","filename","autoWidth","bookType","guardarActivo","generarActivo","textAlertCant","cantidad","filterVal","jsonData","map","v","j"],"sources":["src/views/pedidos/gerencia/reportes/ReporteInstitucionVenta.vue"],"sourcesContent":["<template>\r\n    <vx-card>\r\n        <div class=\"flex mt-5\">\r\n            <div style=\"width: 40%;\">\r\n                <p> <ion-icon name=\"contract-outline\"></ion-icon>  Filtro de instituciones por período</p>\r\n            </div>\r\n            <div style=\"width: 60%;\">\r\n                <v-select @input=\"getInstitucionesReporte()\" :options=\"arregloPeriodos\" :reduce=\"arregloPeriodos => arregloPeriodos.id\" label=\"label\" class=\"w-full\" v-model=\"periodoSelect\" />\r\n            </div>\r\n        </div>\r\n        <vs-divider></vs-divider>\r\n        <div v-if=\"arregloReporte.length > 0\">\r\n            <vs-table multiple v-model=\"codigoSelected\" max-items=\"10\" search pagination :data=\"arregloReporte\">\r\n                <template slot=\"header\">\r\n                    <vs-chip  color=\"primary\">Cantidad: <b> {{ arregloReporte.length }}</b></vs-chip>\r\n                    <span class=\"cursor-pointer\" @click=\"activePrompt=true;\"><vs-chip  color=\"success\" ><b><ion-icon name=\"download-outline\"></ion-icon> Exportar</b></vs-chip></span>\r\n                </template>\r\n                <template slot=\"thead\">\r\n                    <vs-th>Institución</vs-th>\r\n                    <vs-th>Venta bruta</vs-th>\r\n                    <vs-th>Venta neta</vs-th>\r\n                </template>\r\n                <template slot-scope=\"{data}\">\r\n                    <vs-tr :data=\"tr\" :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                        <vs-td>\r\n                            {{data[indextr].INSTITUCION}}<br>\r\n                            <p><b>Ciudad:</b> {{ tr.INS_CIUDAD }}</p>\r\n                            <p><b>Contrato:</b> {{ tr.CONTRATO }}</p>\r\n                            <p><b>Vendedor:</b> {{ tr.VENDEDOR }}</p>\r\n                        </vs-td>\r\n                        <vs-td>\r\n                            {{ filtrarDecimal(tr.VEN_VALOR) }}\r\n                        </vs-td>\r\n                        <vs-td>\r\n                            {{ filtrarDecimal(tr.ven_neta) }}\r\n                        </vs-td>\r\n                    </vs-tr>\r\n                </template>\r\n            </vs-table>    \r\n        </div>\r\n        <!--MODAL PARA EXPORTAR A EXCEL-->\r\n        <vs-prompt title=\"Exportar a Excel\" class=\"export-options\" @cancle=\"clearFields\" @accept=\"exportToExcel\" accept-text=\"Exportar\" @close=\"clearFields\" :active.sync=\"activePrompt\">\r\n        <vs-alert class=\"mb-3\" color=\"danger\" icon-pack=\"feather\" icon=\"icon-info\">\r\n            <span>Recuerde <b>seleccionar</b> los registros que desea exportar.</span>\r\n        </vs-alert>\r\n        <vs-input v-model=\"fileName\" placeholder=\"Ingrese el nombre del archivo\" class=\"w-full\" />\r\n        <v-select v-model=\"selectedFormat\" :options=\"formats\" class=\"my-4\" />\r\n        <div class=\"flex\">\r\n        </div>\r\n        </vs-prompt>\r\n    </vx-card>\r\n</template>\r\n<script>\r\nimport vSelect from 'vue-select'\r\nexport default{\r\n    data(){\r\n        return{\r\n            arregloReporte:[],\r\n            arregloPeriodos:[\r\n                {\r\n                    id:\"C22\",\r\n                    label:\"Costa 22\",\r\n                    region:'2'\r\n                },\r\n                {\r\n                    id:\"C21\",\r\n                    label:\"Costa 21\",\r\n                    region:'2'\r\n                },\r\n                {\r\n                    id:\"C20\",\r\n                    label:\"Costa 20\",\r\n                    region:'2'\r\n                },\r\n                {\r\n                    id:\"S22\",\r\n                    label:\"Sierra 22\",\r\n                    region:'2'\r\n                },\r\n                {\r\n                    id:\"S21\",\r\n                    label:\"Sierra 21\",\r\n                    region:'2'\r\n                },\r\n                {\r\n                    id:\"S20\",\r\n                    label:\"Sierra 20\",\r\n                    region:'2'\r\n                },\r\n            ],\r\n            periodoSelect:'',\r\n            //variables para el export a excel\r\n            activePrompt:false,\r\n            codigoSelected: [],\r\n            reportesActivo: 0,\r\n            fileName: null,\r\n            formats: ['xls', 'xlsx', 'csv', 'txt'],\r\n            cellAutoWidth: true,\r\n            selectedFormat: 'xls',\r\n        }\r\n    },\r\n    components:{\r\n        vSelect,\r\n    },\r\n    mounted(){\r\n        let me = this;\r\n    },\r\n    methods:{\r\n        getInstitucionesReporte(){\r\n            let me = this;\r\n            me.arregloReporte = []\r\n            if( me.periodoSelect == \"\" || me.periodoSelect == null || me.periodoSelect == undefined ){\r\n                me.$vs.notify({\r\n                text:'Seleccione un período por favor',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n                return\r\n            }\r\n            me.$vs.loading()\r\n            this.$http.get(this.$server_url+'reporteVentaInstituciones?periodo_id='+me.periodoSelect)\r\n                .then(function (res) {\r\n                    me.$vs.loading.close()\r\n                    let datos = res.data\r\n                    datos.forEach(element => {\r\n                        var cal = new Object();\r\n                        cal.VEN_VALOR   = parseFloat(element.VEN_VALOR).toFixed(2)\r\n                        cal.PERIODO     = element.PERIODO\r\n                        cal.ven_neta    = parseFloat(element.ven_neta).toFixed(2)\r\n                        cal.INSTITUCION = element.INSTITUCION\r\n                        cal.INS_CIUDAD  = element.INS_CIUDAD \r\n                        cal.CONTRATO    = element.CONTRATO \r\n                        cal.VENDEDOR    = element.VENDEDOR\r\n                        me.arregloReporte.push(cal)\r\n                    });\r\n                })\r\n                .catch(function (error) {\r\n                    me.$vs.loading.close()\r\n                    console.log(error + ' error');\r\n                })\r\n            \r\n        },\r\n        filtrarDecimal(numero){\r\n            let me = this\r\n            if(numero == 0){\r\n                return numero\r\n            }else{\r\n                let preNumero = parseFloat(numero)\r\n                const transformar = (preNumero).toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,');\r\n                return transformar\r\n            }\r\n        },\r\n        //METODOS PARA EXCEL\r\n        //para limipiar los campos del excel\r\n        clearFields() {\r\n            this.fileName = ''\r\n            this.cellAutoWidth = true\r\n            this.selectedFormat = 'xls'\r\n        },\r\n        //metodo par descargar el excel\r\n        exportToExcel() {\r\n            let headerTitle = ['Institución','Ciudad','Contrato',  'Venta Bruta','Venta Neta','Vendedor'];\r\n            let headerVal = ['INSTITUCION', 'INS_CIUDAD','CONTRATO','VEN_VALOR','ven_neta','VENDEDOR'];  \r\n            let codigoSelectedMayus = this.codigoSelected\r\n            for (var i = 0; i < codigoSelectedMayus.length; i++) {\r\n                for (var key in codigoSelectedMayus[i]) {\r\n                    if (typeof codigoSelectedMayus[i][key] == \"string\") {\r\n                        codigoSelectedMayus[i][key] = codigoSelectedMayus[i][key].toUpperCase();\r\n                    }\r\n                }\r\n            }\r\n            import('@/vendor/Export2Excel').then(excel => {\r\n                const list = codigoSelectedMayus\r\n                const data = this.formatJson(headerVal, list)\r\n                excel.export_json_to_excel({\r\n                    header: headerTitle,\r\n                    data,\r\n                    filename: this.fileName,\r\n                    autoWidth: this.cellAutoWidth,\r\n                    bookType: this.selectedFormat\r\n                })\r\n                this.clearFields()\r\n                this.guardarActivo = '';\r\n                this.generarActivo = ' ';\r\n                this.textAlertCant = '';\r\n                this.cantidad = '';\r\n                this.codigoSelected = [];\r\n            })\r\n        },\r\n        formatJson(filterVal, jsonData) {\r\n            return jsonData.map(v => filterVal.map(j => {\r\n                return v[j]\r\n            }))\r\n        },\r\n    }\r\n}\r\n</script>"],"mappings":"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","ignoreList":[]}]}