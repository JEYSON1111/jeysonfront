{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\certificados\\components\\ReporteCapacitacionGrupal.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\certificados\\components\\ReporteCapacitacionGrupal.vue","mtime":1712682815589},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\babel.config.js","mtime":1712682813877},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\.babelrc","mtime":1712682813750},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import vSelect from 'vue-select';\nimport chart from \"vue-apexcharts\";\nexport default {\n  components: {\n    apexchart: chart,\n    vSelect: vSelect\n  },\n  data: function data() {\n    return {\n      valorSelect: '',\n      tipo: 0,\n      series: [{\n        name: 'Reporte Capacitaciones',\n        data: [1, 5, 6, 8, 10, 6, 1]\n      }],\n      options: {\n        chart: {\n          height: 350,\n          type: 'bar'\n        },\n        plotOptions: {\n          bar: {\n            borderRadius: 10,\n            dataLabels: {\n              position: 'top' // top, center, bottom\n            }\n          }\n        },\n        dataLabels: {\n          enabled: true,\n          formatter: function formatter(val) {\n            return val + ' Capacit.';\n          },\n          offsetY: -20,\n          style: {\n            fontSize: '12px',\n            colors: ['#304758']\n          }\n        },\n        xaxis: {\n          categories: [],\n          position: 'top',\n          axisBorder: {\n            show: false\n          },\n          axisTicks: {\n            show: false\n          },\n          crosshairs: {\n            fill: {\n              type: 'gradient',\n              gradient: {\n                colorFrom: '#D8E3F0',\n                colorTo: '#BED1E6',\n                stops: [0, 100],\n                opacityFrom: 0.4,\n                opacityTo: 0.5\n              }\n            }\n          },\n          tooltip: {\n            enabled: true\n          }\n        },\n        yaxis: {\n          axisBorder: {\n            show: false\n          },\n          axisTicks: {\n            show: false\n          },\n          labels: {\n            show: false,\n            formatter: function formatter(val) {\n              return val + '%';\n            }\n          }\n        },\n        title: {\n          text: '',\n          floating: true,\n          offsetY: 330,\n          align: 'center',\n          style: {\n            color: '#444'\n          }\n        }\n      }\n    };\n  },\n  props: {\n    lista_asesores: {\n      type: Array,\n      default: []\n    },\n    periodos: {\n      type: Array,\n      default: []\n    },\n    arregloCapacitadores: {\n      type: Array,\n      default: []\n    }\n  },\n  mounted: function mounted() {\n    var me = this;\n  },\n  methods: {\n    getReporte: function getReporte() {\n      var me = this;\n      me.tipo = 0;\n      console.log(\"rap\");\n      this.series[0].data = [];\n      if (me.valorSelect == \"\" || me.valorSelect == null || me.valorSelect == undefined) {\n        me.$vs.notify({\n          text: 'Seleccione algun valor de filtro',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        return;\n      }\n      me.$vs.loading();\n      this.$http.get(this.$server_url + 'reporteCapacitacionesGrupal/' + me.valorSelect).then(function (res) {\n        me.$vs.loading.close();\n        me.pasarInfo(res.data);\n      }).catch(function (error) {\n        console.log(error + ' error');\n        me.$vs.loading.close();\n      });\n    },\n    pasarInfo: function pasarInfo(item) {\n      var me = this;\n      var names = item.map(function (p) {\n        return p.capacitador.substring(0, 17) + '..';\n      });\n      var valores = item.map(function (p) {\n        return p.contador;\n      });\n      this.options.xaxis.categories = names;\n      this.series[0].data = valores;\n      me.tipo = 1;\n      setTimeout(function () {\n        me.$vs.loading.close();\n      }, 2000);\n    }\n  }\n};",{"version":3,"names":["vSelect","chart","components","apexchart","data","valorSelect","tipo","series","name","options","height","type","plotOptions","bar","borderRadius","dataLabels","position","enabled","formatter","val","offsetY","style","fontSize","colors","xaxis","categories","axisBorder","show","axisTicks","crosshairs","fill","gradient","colorFrom","colorTo","stops","opacityFrom","opacityTo","tooltip","yaxis","labels","title","text","floating","align","color","props","lista_asesores","Array","default","periodos","arregloCapacitadores","mounted","me","methods","getReporte","console","log","undefined","$vs","notify","iconPack","icon","loading","$http","get","$server_url","then","res","close","pasarInfo","catch","error","item","names","map","p","capacitador","substring","valores","contador","setTimeout"],"sources":["src/views/certificados/components/ReporteCapacitacionGrupal.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <vs-divider>Filtro de Reporte</vs-divider>\r\n        <div class=\"vx-row mb-4\">\r\n            <div class=\"vx-col w-full sm:w-full md:w-1/2 lg:w-1/2 xl:w-1/2 p-2 bg-gray-500\" >\r\n                <div>\r\n                    Seleccione el per√≠odo a filtrar\r\n                    <v-select :options=\"periodos\" @input=\"getReporte()\" :reduce=\"periodos => periodos.idperiodoescolar\" label=\"periodoescolar\" class=\"w-full\" v-model=\"valorSelect\" />\r\n                </div>    \r\n            </div>\r\n            <div class=\"vx-col w-full sm:w-full md:w-1/2 lg:w-1/2 xl:w-1/2 p-2 bg-gray-500\" >   \r\n                <vs-button  @click=\"getReporte()\" class=\"mt-5\" color=\"primary\" type=\"border\" icon=\"search\">Buscar</vs-button>\r\n            </div>\r\n        </div>\r\n        <div v-if=\"tipo == 1\">\r\n            <apexchart\r\n            type=\"bar\"\r\n            height=\"350\"\r\n            :options=\"options\"\r\n            :series=\"[series[0]]\"\r\n            ></apexchart>\r\n        </div>\r\n       <br><br><br><br><br><br><br><br><br><br>\r\n    </div>\r\n</template>\r\n<script>\r\nimport vSelect from 'vue-select';\r\nimport chart from \"vue-apexcharts\";\r\nexport default{\r\n    components: { apexchart: chart,vSelect },\r\n    data(){\r\n        return{\r\n            valorSelect:'',\r\n            tipo:0,\r\n            series: [{\r\n                name: 'Reporte Capacitaciones',\r\n                data: [1,5,6,8,10,6,1]\r\n            }],\r\n            options: {\r\n                chart: {\r\n                height: 350,\r\n                type: 'bar',\r\n                },\r\n                plotOptions: {\r\n                    bar: {\r\n                        borderRadius: 10,\r\n                        dataLabels: {\r\n                        position: 'top', // top, center, bottom\r\n                        },\r\n                    },\r\n                },\r\n                dataLabels: {\r\n                    enabled: true,\r\n                    formatter: function (val) {\r\n                        return val + ' Capacit.';\r\n                    },\r\n                    offsetY: -20,\r\n                    style: {\r\n                        fontSize: '12px',\r\n                        colors: ['#304758'],\r\n                    },\r\n                },\r\n                xaxis: {\r\n                    categories: [\r\n                       \r\n                    ],\r\n                    position: 'top',\r\n                    axisBorder: {\r\n                        show: false,\r\n                    },\r\n                    axisTicks: {\r\n                        show: false,\r\n                    },\r\n                    crosshairs: {\r\n                        fill: {\r\n                        type: 'gradient',\r\n                        gradient: {\r\n                            colorFrom: '#D8E3F0',\r\n                            colorTo: '#BED1E6',\r\n                            stops: [0, 100],\r\n                            opacityFrom: 0.4,\r\n                            opacityTo: 0.5,\r\n                        },\r\n                        },\r\n                    },\r\n                    tooltip: {\r\n                        enabled: true,\r\n                    },\r\n                },\r\n                yaxis: {\r\n                    axisBorder: {\r\n                        show: false,\r\n                    },\r\n                    axisTicks: {\r\n                        show: false,\r\n                    },\r\n                    labels: {\r\n                        show: false,\r\n                        formatter: function (val) {\r\n                        return val + '%';\r\n                        },\r\n                    },\r\n                },\r\n                title: {\r\n                    text: '',\r\n                    floating: true,\r\n                    offsetY: 330,\r\n                    align: 'center',\r\n                    style: {\r\n                        color: '#444',\r\n                    },\r\n                },\r\n            },\r\n        }\r\n    },\r\n    props:{\r\n        lista_asesores:{\r\n            type:Array,\r\n            default:[],\r\n        },\r\n        periodos:{\r\n            type:Array,\r\n            default:[],\r\n        },\r\n        arregloCapacitadores:{\r\n            type:Array,\r\n            default:[],\r\n        },\r\n    },\r\n    mounted(){\r\n        let me = this;\r\n    },\r\n    methods:{\r\n        getReporte(){\r\n            let me = this;\r\n            me.tipo = 0;\r\n            console.log(\"rap\")\r\n            this.series[0].data = []\r\n            if( me.valorSelect == \"\" || me.valorSelect == null || me.valorSelect == undefined ){\r\n                me.$vs.notify({\r\n                text:'Seleccione algun valor de filtro',\r\n                color:'warning',\r\n                iconPack: 'feather',\r\n                icon:'icon-check'})\r\n                return\r\n            }\r\n            me.$vs.loading()\r\n            this.$http.get(this.$server_url+'reporteCapacitacionesGrupal/'+me.valorSelect)\r\n                .then(function (res) {\r\n                    me.$vs.loading.close()\r\n                    me.pasarInfo(res.data) \r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                    me.$vs.loading.close()\r\n                })\r\n        },\r\n        pasarInfo(item){\r\n            let me = this\r\n            const names                     = item.map(p => p.capacitador.substring(0,17)+'..');\r\n            const valores                   = item.map(p => p.contador);\r\n            this.options.xaxis.categories   = names\r\n            this.series[0].data             = valores;\r\n            me.tipo = 1         \r\n            setTimeout(function() {me.$vs.loading.close()}, 2000);\r\n        },\r\n    }\r\n    \r\n}\r\n</script>"],"mappings":"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","ignoreList":[]}]}