{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\layouts\\components\\navbar\\components\\Bookmarks.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\layouts\\components\\navbar\\components\\Bookmarks.vue","mtime":1712682815232},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\babel.config.js","mtime":1712682813877},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\.babelrc","mtime":1712682813750},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import draggable from 'vuedraggable';\nimport VxAutoSuggest from '@/components/vx-auto-suggest/VxAutoSuggest.vue';\nexport default {\n  props: {\n    navbarColor: {\n      type: String,\n      default: '#fff'\n    }\n  },\n  components: {\n    draggable: draggable,\n    VxAutoSuggest: VxAutoSuggest\n  },\n  data: function data() {\n    return {\n      showBookmarkPagesDropdown: false\n    };\n  },\n  watch: {\n    '$route': function $route() {\n      if (this.showBookmarkPagesDropdown) this.showBookmarkPagesDropdown = false;\n    }\n  },\n  computed: {\n    navbarSearchAndPinList: function navbarSearchAndPinList() {\n      return {\n        pages: this.$store.state.navbarSearchAndPinList['pages']\n      };\n    },\n    starredPages: function starredPages() {\n      return this.$store.state.starredPages;\n    },\n    starredPagesLimited: {\n      get: function get() {\n        return this.starredPages.slice(0, 10);\n      },\n      set: function set(list) {\n        this.$store.dispatch('arrangeStarredPagesLimited', list);\n      }\n    },\n    starredPagesMore: {\n      get: function get() {\n        return this.starredPages.slice(10);\n      },\n      set: function set(list) {\n        this.$store.dispatch('arrangeStarredPagesMore', list);\n      }\n    },\n    textColor: function textColor() {\n      return {\n        'text-white': this.$store.state.mainLayoutType === 'vertical' && this.navbarColor !== (this.$store.state.theme === 'dark' ? '#10163a' : '#fff')\n      };\n    }\n  },\n  methods: {\n    selected: function selected(obj) {\n      this.$store.commit('TOGGLE_CONTENT_OVERLAY', false);\n      this.showBookmarkPagesDropdown = false;\n      this.$router.push(obj.pages.url).catch(function () {});\n    },\n    actionClicked: function actionClicked(item) {\n      this.$store.dispatch('updateStarredPage', {\n        url: item.url,\n        val: !item.is_bookmarked\n      });\n      // this.$refs.bookmarkAutoSuggest.filterData()\n    },\n    outside: function outside() {\n      this.showBookmarkPagesDropdown = false;\n    },\n    hnd_search_query_update: function hnd_search_query_update(query) {\n      // Show overlay if any character is entered\n      this.$store.commit('TOGGLE_CONTENT_OVERLAY', !!query);\n    }\n  },\n  directives: {\n    'click-outside': {\n      bind: function bind(el, binding) {\n        var bubble = binding.modifiers.bubble;\n        var handler = function handler(e) {\n          /* eslint-disable no-mixed-operators */\n          if (bubble || !el.contains(e.target) && el !== e.target) {\n            /* eslint-enable no-mixed-operators */\n            binding.value(e);\n          }\n        };\n        el.__vueClickOutside__ = handler;\n        document.addEventListener('click', handler);\n      },\n      unbind: function unbind(el) {\n        document.removeEventListener('click', el.__vueClickOutside__);\n        el.__vueClickOutside__ = null;\n      }\n    }\n  }\n};",{"version":3,"names":["draggable","VxAutoSuggest","props","navbarColor","type","String","default","components","data","showBookmarkPagesDropdown","watch","$route","computed","navbarSearchAndPinList","pages","$store","state","starredPages","starredPagesLimited","get","slice","set","list","dispatch","starredPagesMore","textColor","mainLayoutType","theme","methods","selected","obj","commit","$router","push","url","catch","actionClicked","item","val","is_bookmarked","outside","hnd_search_query_update","query","directives","bind","el","binding","bubble","modifiers","handler","e","contains","target","value","__vueClickOutside__","document","addEventListener","unbind","removeEventListener"],"sources":["src/layouts/components/navbar/components/Bookmarks.vue"],"sourcesContent":["<template>\r\n<div class=\"navbar-bookmarks flex items-center\">\r\n    <!-- STARRED PAGES - FIRST 10 -->\r\n    <ul class=\"vx-navbar__starred-pages\">\r\n        <draggable v-model=\"starredPagesLimited\" :group=\"{name: 'pinList'}\" class=\"flex cursor-move\">\r\n            <li class=\"starred-page\" v-for=\"page in starredPagesLimited\" :key=\"page.url\">\r\n                <vx-tooltip :text=\"page.title\" position=\"bottom\" delay=\".3s\">\r\n                    <feather-icon :svgClasses=\"['h-6 w-6 stroke-current', textColor]\" class=\"p-2 cursor-pointer\" :icon=\"page.icon\" @click=\"$router.push(page.url).catch(() => {})\" />\r\n                </vx-tooltip>\r\n            </li>\r\n        </draggable>\r\n    </ul>\r\n\r\n    <!-- STARRED PAGES MORE -->\r\n    <div class=\"vx-navbar__starred-pages--more-dropdown\" v-if=\"starredPagesMore.length\">\r\n        <vs-dropdown vs-custom-content vs-trigger-click class=\"cursor-pointer\">\r\n            <feather-icon icon=\"ChevronDownIcon\" svgClasses=\"h-4 w-4\" class=\"cursor-pointer p-2\"></feather-icon>\r\n            <vs-dropdown-menu>\r\n                <ul class=\"vx-navbar__starred-pages-more--list\">\r\n                    <draggable v-model=\"starredPagesMore\" :group=\"{name: 'pinList'}\" class=\"cursor-move\">\r\n                        <li class=\"starred-page--more flex items-center cursor-pointer\" v-for=\"page in starredPagesMore\" :key=\"page.url\" @click=\"$router.push(page.url).catch(() => {})\">\r\n                            <feather-icon class=\"ml-2 mr-1\" :icon=\"page.icon\" :svgClasses=\"['h-5 w-5 stroke-current', textColor]\"></feather-icon>\r\n                            <span class=\"px-2 pt-2 pb-1\">{{ page.title }}</span>\r\n                        </li>\r\n                    </draggable>\r\n                </ul>\r\n            </vs-dropdown-menu>\r\n        </vs-dropdown>\r\n    </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport draggable from 'vuedraggable'\r\nimport VxAutoSuggest from '@/components/vx-auto-suggest/VxAutoSuggest.vue'\r\n\r\nexport default {\r\n    props: {\r\n        navbarColor: {\r\n            type: String,\r\n            default: '#fff'\r\n        }\r\n    },\r\n    components: {\r\n        draggable,\r\n        VxAutoSuggest\r\n    },\r\n    data() {\r\n        return {\r\n            showBookmarkPagesDropdown: false\r\n        }\r\n    },\r\n    watch: {\r\n        '$route'() {\r\n            if (this.showBookmarkPagesDropdown) this.showBookmarkPagesDropdown = false\r\n        }\r\n    },\r\n    computed: {\r\n        navbarSearchAndPinList() {\r\n            return {\r\n                pages: this.$store.state.navbarSearchAndPinList['pages']\r\n            }\r\n        },\r\n        starredPages() {\r\n            return this.$store.state.starredPages\r\n        },\r\n        starredPagesLimited: {\r\n            get() {\r\n                return this.starredPages.slice(0, 10)\r\n            },\r\n            set(list) {\r\n                this.$store.dispatch('arrangeStarredPagesLimited', list)\r\n            }\r\n        },\r\n        starredPagesMore: {\r\n            get() {\r\n                return this.starredPages.slice(10)\r\n            },\r\n            set(list) {\r\n                this.$store.dispatch('arrangeStarredPagesMore', list)\r\n            }\r\n        },\r\n        textColor() {\r\n            return {\r\n                'text-white': this.$store.state.mainLayoutType === 'vertical' && this.navbarColor !== (this.$store.state.theme === 'dark' ? '#10163a' : '#fff')\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        selected(obj) {\r\n            this.$store.commit('TOGGLE_CONTENT_OVERLAY', false)\r\n            this.showBookmarkPagesDropdown = false\r\n            this.$router.push(obj.pages.url).catch(() => {})\r\n        },\r\n        actionClicked(item) {\r\n            this.$store.dispatch('updateStarredPage', {\r\n                url: item.url,\r\n                val: !item.is_bookmarked\r\n            })\r\n            // this.$refs.bookmarkAutoSuggest.filterData()\r\n        },\r\n        outside() {\r\n            this.showBookmarkPagesDropdown = false\r\n        },\r\n        hnd_search_query_update(query) {\r\n            // Show overlay if any character is entered\r\n            this.$store.commit('TOGGLE_CONTENT_OVERLAY', !!query)\r\n        }\r\n    },\r\n    directives: {\r\n        'click-outside': {\r\n            bind(el, binding) {\r\n                const bubble = binding.modifiers.bubble\r\n                const handler = (e) => {\r\n                    /* eslint-disable no-mixed-operators */\r\n                    if (bubble || !el.contains(e.target) && el !== e.target) {\r\n                        /* eslint-enable no-mixed-operators */\r\n                        binding.value(e)\r\n                    }\r\n                }\r\n                el.__vueClickOutside__ = handler\r\n                document.addEventListener('click', handler)\r\n            },\r\n\r\n            unbind(el) {\r\n                document.removeEventListener('click', el.__vueClickOutside__)\r\n                el.__vueClickOutside__ = null\r\n\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>\r\n"],"mappings":"AAiCA,OAAAA,SAAA;AACA,OAAAC,aAAA;AAEA;EACAC,KAAA;IACAC,WAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;EACA;EACAC,UAAA;IACAP,SAAA,EAAAA,SAAA;IACAC,aAAA,EAAAA;EACA;EACAO,IAAA,WAAAA,KAAA;IACA;MACAC,yBAAA;IACA;EACA;EACAC,KAAA;IACA,mBAAAC,OAAA;MACA,SAAAF,yBAAA,OAAAA,yBAAA;IACA;EACA;EACAG,QAAA;IACAC,sBAAA,WAAAA,uBAAA;MACA;QACAC,KAAA,OAAAC,MAAA,CAAAC,KAAA,CAAAH,sBAAA;MACA;IACA;IACAI,YAAA,WAAAA,aAAA;MACA,YAAAF,MAAA,CAAAC,KAAA,CAAAC,YAAA;IACA;IACAC,mBAAA;MACAC,GAAA,WAAAA,IAAA;QACA,YAAAF,YAAA,CAAAG,KAAA;MACA;MACAC,GAAA,WAAAA,IAAAC,IAAA;QACA,KAAAP,MAAA,CAAAQ,QAAA,+BAAAD,IAAA;MACA;IACA;IACAE,gBAAA;MACAL,GAAA,WAAAA,IAAA;QACA,YAAAF,YAAA,CAAAG,KAAA;MACA;MACAC,GAAA,WAAAA,IAAAC,IAAA;QACA,KAAAP,MAAA,CAAAQ,QAAA,4BAAAD,IAAA;MACA;IACA;IACAG,SAAA,WAAAA,UAAA;MACA;QACA,mBAAAV,MAAA,CAAAC,KAAA,CAAAU,cAAA,wBAAAvB,WAAA,WAAAY,MAAA,CAAAC,KAAA,CAAAW,KAAA;MACA;IACA;EACA;EACAC,OAAA;IACAC,QAAA,WAAAA,SAAAC,GAAA;MACA,KAAAf,MAAA,CAAAgB,MAAA;MACA,KAAAtB,yBAAA;MACA,KAAAuB,OAAA,CAAAC,IAAA,CAAAH,GAAA,CAAAhB,KAAA,CAAAoB,GAAA,EAAAC,KAAA;IACA;IACAC,aAAA,WAAAA,cAAAC,IAAA;MACA,KAAAtB,MAAA,CAAAQ,QAAA;QACAW,GAAA,EAAAG,IAAA,CAAAH,GAAA;QACAI,GAAA,GAAAD,IAAA,CAAAE;MACA;MACA;IACA;IACAC,OAAA,WAAAA,QAAA;MACA,KAAA/B,yBAAA;IACA;IACAgC,uBAAA,WAAAA,wBAAAC,KAAA;MACA;MACA,KAAA3B,MAAA,CAAAgB,MAAA,6BAAAW,KAAA;IACA;EACA;EACAC,UAAA;IACA;MACAC,IAAA,WAAAA,KAAAC,EAAA,EAAAC,OAAA;QACA,IAAAC,MAAA,GAAAD,OAAA,CAAAE,SAAA,CAAAD,MAAA;QACA,IAAAE,OAAA,YAAAA,QAAAC,CAAA;UACA;UACA,IAAAH,MAAA,KAAAF,EAAA,CAAAM,QAAA,CAAAD,CAAA,CAAAE,MAAA,KAAAP,EAAA,KAAAK,CAAA,CAAAE,MAAA;YACA;YACAN,OAAA,CAAAO,KAAA,CAAAH,CAAA;UACA;QACA;QACAL,EAAA,CAAAS,mBAAA,GAAAL,OAAA;QACAM,QAAA,CAAAC,gBAAA,UAAAP,OAAA;MACA;MAEAQ,MAAA,WAAAA,OAAAZ,EAAA;QACAU,QAAA,CAAAG,mBAAA,UAAAb,EAAA,CAAAS,mBAAA;QACAT,EAAA,CAAAS,mBAAA;MAEA;IACA;EACA;AACA","ignoreList":[]}]}