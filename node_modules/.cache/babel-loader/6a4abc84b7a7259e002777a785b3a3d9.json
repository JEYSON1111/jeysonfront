{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\usuarios\\GestionEstudiantes\\components\\RevisionEstudiantes.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\usuarios\\GestionEstudiantes\\components\\RevisionEstudiantes.vue","mtime":1712682816636},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\babel.config.js","mtime":1712682813877},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\.babelrc","mtime":1712682813750},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/web.dom.iterable\";\nimport TableUsuariosVue from \"./TableUsuarios.vue\";\nimport TableUsuariosNotFoundVue from \"./TableUsuariosNotFound.vue\";\nimport ImportExcel from \"../../../codigos/components/importExcel.vue\";\nimport vSelect from 'vue-select';\nexport default {\n  components: {\n    ImportExcel: ImportExcel,\n    vSelect: vSelect,\n    TableUsuariosVue: TableUsuariosVue,\n    TableUsuariosNotFoundVue: TableUsuariosNotFoundVue\n  },\n  data: function data() {\n    return {\n      codigosPerdidos: false,\n      tableData: [],\n      header: [],\n      sheetName: '',\n      usuario: [],\n      modalConfirm: false,\n      modalErrores: false,\n      errores: [],\n      cedulas_no_encontradas: [],\n      modalCedulas: false,\n      informacion: [],\n      cedulasNoExisten: [],\n      cantidadNoExisten: 0\n    };\n  },\n  created: function created() {\n    this.usuario = JSON.parse(localStorage.getItem('usuario'));\n    this.codigosPerdidos = false;\n  },\n  methods: {\n    loadDataInTable: function loadDataInTable(_ref) {\n      var results = _ref.results,\n        header = _ref.header,\n        meta = _ref.meta;\n      this.header = header;\n      this.tableData = results;\n      this.sheetName = meta.sheetName;\n    },\n    procesarPagos: function procesarPagos() {\n      var me = this;\n      me.informacion = [];\n      me.cedulasNoExisten = [];\n      var datosEnviar = [];\n      me.tableData.forEach(function (element) {\n        var cal = new Object();\n        ///quitar los espacios raros del principio si los tuviera \n        var valor = element.cedula.toString();\n        //obtener la primera letra y validar si es numero o el un caracter diferente a numero\n        var validate = valor.substring(0, 1);\n        var cedulaIngresa = \"\";\n        if (isNaN(validate)) {\n          // console.log(\"No es un número\");\n          cedulaIngresa = valor.slice(1);\n        } else {\n          //console.log(\"Es un número\");\n          cedulaIngresa = valor;\n        }\n        cal.cedula = cedulaIngresa;\n        datosEnviar.push(cal);\n      });\n      me.$vs.loading();\n      var json_pagos = JSON.stringify(datosEnviar);\n      var formData = new FormData();\n      formData.append('data_estudiantes', json_pagos);\n      this.$http.post(this.$server_url + 'import/revision/estudiante', formData).then(function (res) {\n        me.$vs.loading.close();\n        me.$vs.notify({\n          text: 'Cedulas procesadas exitosamente',\n          color: 'success',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        me.modalConfirm = false;\n        me.tableData = [];\n        me.codigosPerdidos = true;\n        me.informacion = res.data.informacion;\n        me.cedulasNoExisten = res.data.cedulasNoExisten;\n      }).catch(function (error) {\n        me.$vs.notify({\n          text: 'Verifique que la información se haya guardado correctamente.',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-alert-triangle'\n        });\n        me.$vs.loading.close();\n        // setTimeout(function() {location.reload()}, 1000);\n      });\n    },\n    openConfirm: function openConfirm(tipo) {\n      var me = this;\n      if (!me.tableData[0].cedula) {\n        me.$vs.loading.close();\n        me.$vs.notify({\n          text: 'Corrija el formato del excel y vuelva a intentar.',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-alert-triangle'\n        });\n        return;\n      }\n      // if( me.tableData[0].cedula.toString().length > 10 || me.tableData[0].cedula.toString().length < 10 ){\n      //   me.$vs.loading.close()\n      //   me.$vs.notify({ text:'Solo se acepta cédulas con 10 números corrijalo por favor.', color:'warning', iconPack: 'feather', icon:'icon-alert-triangle'})\n      //   return\n      // }\n      me.errores = [];\n      $.each(me.tableData, function (key, value) {\n        if (!value.cedula) {\n          me.errores.push(value);\n        }\n      });\n      if (me.errores.length > 0) {\n        me.modalErrores = true;\n      } else {\n        me.modalConfirm = true;\n      }\n    }\n  }\n};",{"version":3,"names":["TableUsuariosVue","TableUsuariosNotFoundVue","ImportExcel","vSelect","components","data","codigosPerdidos","tableData","header","sheetName","usuario","modalConfirm","modalErrores","errores","cedulas_no_encontradas","modalCedulas","informacion","cedulasNoExisten","cantidadNoExisten","created","JSON","parse","localStorage","getItem","methods","loadDataInTable","_ref","results","meta","procesarPagos","me","datosEnviar","forEach","element","cal","Object","valor","cedula","toString","validate","substring","cedulaIngresa","isNaN","slice","push","$vs","loading","json_pagos","stringify","formData","FormData","append","$http","post","$server_url","then","res","close","notify","text","color","iconPack","icon","catch","error","openConfirm","tipo","$","each","key","value","length"],"sources":["src/views/usuarios/GestionEstudiantes/components/RevisionEstudiantes.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <vs-popup title=\"Errores en excel de los codigos\" :active.sync=\"modalErrores\" style=\"padding: 0% !important;\">\r\n         <div class=\"w-full\" style=\"background: rgb(121,9,9); padding: 20px; border-radius: 5px; background: linear-gradient(90deg, rgba(121,9,9,1) 28%, rgba(255,0,48,1) 100%); color: white;\">\r\n           <div class=\"vx-row\">\r\n              <div class=\"vx-col sm:w-1/2 w-full\">\r\n                  <b>cédula</b>\r\n              </div>\r\n          </div>\r\n          <vs-divider></vs-divider>\r\n          <div :key=\"index\" v-for=\"(item, index) in errores\">\r\n            <div class=\"vx-row\">\r\n                <div class=\"vx-col sm:w-1/2 w-full\">\r\n                    <span v-if=\"item.codigo\"> {{item.codigo}} </span>\r\n                </div>      \r\n            </div>\r\n          </div>\r\n         </div>\r\n      </vs-popup>\r\n      <vs-popup title=\"Códigos no encontrados\" :active.sync=\"modalCedulas\" @accept=\"recargar()\" @close=\"recargar()\" @cancel=\"recargar()\"  style=\"padding: 0% !important;\">\r\n         <div class=\"w-full\" style=\"background: rgb(235,147,25); background: linear-gradient(90deg, rgba(235,147,25,1) 28%, rgba(255,166,0,1) 100%); color: white; border-radius: 5px; padding: 10px;\">\r\n          <div class=\"vx-row\"> \r\n            <div class=\"vx-col w-full\" align=\"center\"> \r\n             <b>Codigos a las que no se aplicaron correctamente</b>\r\n            </div> \r\n          </div> \r\n          <vs-divider></vs-divider>\r\n          <div :key=\"index\" v-for=\"(item, index) in cedulas_no_encontradas\">\r\n            <div class=\"vx-row\">\r\n                <div class=\"vx-col w-full\" align=\"center\"> <span> {{item}} </span> </div>\r\n            </div>\r\n          </div>\r\n         </div>\r\n      </vs-popup>\r\n      <vs-popup small title=\"Confirmación\" :active.sync=\"modalConfirm\">\r\n        <div class=\"w-full mb-base\" align=\"center\">\r\n          <h4>Está seguro de aplicar estas cédulas?</h4>\r\n        </div>\r\n        <div class=\"w-full\" align=\"center\">\r\n          <vs-button class=\"mb-2\" color=\"danger\" type=\"gradient\" @click=\"procesarPagos()\"> Confirmar </vs-button>\r\n        </div>\r\n      </vs-popup>\r\n      <vs-card class=\"mb-6\" align=\"center\">\r\n        <div class=\"vx-col w-full\">\r\n          <p style=\"color:#60E029;\" class=\"mt-2\">\r\n            <i class=\"fa fa-file\" aria-hidden=\"true\"></i>  Revisión de estudiantes  <span style=\"font-weight: bold;\">(no ingrese más de 1500 registros en una sola carga.)</span>\r\n          </p>\r\n          <vs-alert color=\"warning\" class=\"mt-1\" style=\"width: 50%;\">\r\n            <p style=\"font-size: 10px;\">*Período asignado significa el periodo que le actualizo el asesor </p>\r\n          </vs-alert>\r\n        </div>\r\n        <br/>\r\n        <import-excel :onSuccess=\"loadDataInTable\"  class=\"mb-4\" />\r\n        <div>\r\n        <vs-row>\r\n          <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\" vs-sm = \"12\" vs-xs=\"12\" >\r\n            <vs-card>\r\n              <div class=\"header\">\r\n                <p style=\"font-weight: bold;\">Formato del archivo excel</p>\r\n                <table class=\"tabla\">\r\n                    <tr>\r\n                      <th class=\"th1\">cedula</th>\r\n                    </tr>\r\n                    <tr>\r\n                      <td class=\"td1\">xxx</td>\r\n                    </tr>\r\n                </table>\r\n              </div>\r\n            </vs-card>\r\n          </vs-col>\r\n        </vs-row>\r\n        </div>\r\n          <!-- {{tableData}} -->\r\n          <vs-alert v-if=\"tableData.length > 0\" class=\"mb-3\" color=\"success\" icon-pack=\"feather\" icon=\"icon-alert-triangle\">\r\n              <span>Excel cargado exitosamente. ¿Está seguro de procesar estas cédulas?</span><br>  \r\n          </vs-alert>\r\n          <vs-row v-if=\"tableData.length > 0 && tableData.length <= 1500 \">\r\n              <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\">\r\n                 <vs-button class=\"mb-2\" color=\"primary\"  type=\"relief\" @click=\"openConfirm()\"> Revisar cédulas </vs-button>\r\n              </vs-col>\r\n          </vs-row>\r\n          <vs-row v-if=\"codigosPerdidos == true\">\r\n            <vs-card v-if=\"cedulasNoExisten.length>0\">\r\n              <vs-list-header icon-pack=\"feather\" icon=\"icon-x-circle\" color=\"danger\" title=\"Cédulas no encontradas\"></vs-list-header>\r\n              <TableUsuariosNotFoundVue :arregloEstudiantes=\"cedulasNoExisten\"/>\r\n            </vs-card>  \r\n            <vs-card>\r\n               <vs-list-header icon=\"supervisor_account\" title=\"Resultado de estudiantes\"></vs-list-header>\r\n              <TableUsuariosVue :arregloEstudiantes=\"informacion\"/>\r\n            </vs-card>   \r\n          </vs-row>\r\n      </vs-card>\r\n      <vx-card v-if=\"tableData.length && header.length\">\r\n        <vs-table stripe pagination :max-items=\"20\" search :data=\"tableData\">\r\n          <template slot=\"header\">\r\n            <h4>cédulas a revisar {{ tableData.length }}</h4>\r\n          </template>\r\n          <template slot=\"thead\">\r\n            <vs-th :sort-key=\"heading\" v-for=\"heading in header\" :key=\"heading\">{{ heading }}</vs-th>\r\n          </template>\r\n          <template slot-scope=\"{data}\">\r\n            <vs-tr :data=\"tr\" :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n              <vs-td :data=\"col\" v-for=\"(col, indexcol) in data[indextr]\" :key=\"indexcol + col\">\r\n                {{ col }}\r\n              </vs-td>\r\n            </vs-tr>\r\n          </template>\r\n        </vs-table>\r\n      </vx-card>\r\n    </div>\r\n  </template>\r\n  <script>\r\n  import TableUsuariosVue from './TableUsuarios.vue'\r\n  import TableUsuariosNotFoundVue from './TableUsuariosNotFound.vue'\r\n  import ImportExcel from '../../../codigos/components/importExcel.vue'\r\n  import vSelect from 'vue-select'\r\n  export default {\r\n    components: {\r\n      ImportExcel,\r\n      vSelect,\r\n      TableUsuariosVue,\r\n      TableUsuariosNotFoundVue,\r\n    },\r\n    data () {\r\n      return {\r\n        codigosPerdidos:false,\r\n        tableData: [],\r\n        header: [],\r\n        sheetName: '',\r\n        usuario: [],\r\n        modalConfirm: false,\r\n        modalErrores: false,\r\n        errores: [],\r\n        cedulas_no_encontradas: [],\r\n        modalCedulas: false,\r\n        informacion:[],\r\n        cedulasNoExisten:[],\r\n        cantidadNoExisten:0,\r\n      }\r\n    },\r\n    created(){\r\n          this.usuario = JSON.parse(localStorage.getItem('usuario'));\r\n          this.codigosPerdidos = false\r\n      },\r\n    methods: {\r\n      loadDataInTable ({ results, header, meta }) {\r\n        this.header = header\r\n        this.tableData = results\r\n        this.sheetName = meta.sheetName\r\n      },\r\n      procesarPagos(){\r\n          let me = this\r\n          me.informacion = []\r\n          me.cedulasNoExisten = []\r\n          let datosEnviar = []\r\n          me.tableData.forEach(element => {\r\n            let cal = new Object();\r\n            ///quitar los espacios raros del principio si los tuviera \r\n            var valor         = element.cedula.toString()\r\n            //obtener la primera letra y validar si es numero o el un caracter diferente a numero\r\n            let validate      = valor.substring(0,1)\r\n            var cedulaIngresa = \"\"\r\n            if (isNaN(validate)) {\r\n              // console.log(\"No es un número\");\r\n              cedulaIngresa = valor.slice(1)\r\n            } else {\r\n              //console.log(\"Es un número\");\r\n              cedulaIngresa = valor\r\n            }\r\n            cal.cedula = cedulaIngresa\r\n            datosEnviar.push(cal)\r\n          });\r\n          me.$vs.loading();\r\n          let json_pagos = JSON.stringify(datosEnviar)\r\n          let formData = new FormData();\r\n          formData.append('data_estudiantes', json_pagos);\r\n          this.$http.post(this.$server_url+'import/revision/estudiante', formData)\r\n          .then(res => {\r\n              me.$vs.loading.close()\r\n              me.$vs.notify({\r\n              text:'Cedulas procesadas exitosamente',\r\n              color:'success',\r\n              iconPack: 'feather',\r\n              icon:'icon-check'})\r\n              me.modalConfirm = false\r\n              me.tableData = []\r\n              me.codigosPerdidos = true\r\n              me.informacion = res.data.informacion\r\n              me.cedulasNoExisten = res.data.cedulasNoExisten\r\n          })\r\n          .catch(function (error) {\r\n              me.$vs.notify({\r\n              text:'Verifique que la información se haya guardado correctamente.',\r\n              color:'warning',\r\n              iconPack: 'feather',\r\n              icon:'icon-alert-triangle'})\r\n              me.$vs.loading.close()\r\n              // setTimeout(function() {location.reload()}, 1000);\r\n          })\r\n      },\r\n      openConfirm(tipo) {\r\n        let me = this\r\n        if( !me.tableData[0].cedula){\r\n          me.$vs.loading.close()\r\n          me.$vs.notify({ text:'Corrija el formato del excel y vuelva a intentar.', color:'warning', iconPack: 'feather', icon:'icon-alert-triangle'})\r\n          return\r\n        }\r\n        // if( me.tableData[0].cedula.toString().length > 10 || me.tableData[0].cedula.toString().length < 10 ){\r\n        //   me.$vs.loading.close()\r\n        //   me.$vs.notify({ text:'Solo se acepta cédulas con 10 números corrijalo por favor.', color:'warning', iconPack: 'feather', icon:'icon-alert-triangle'})\r\n        //   return\r\n        // }\r\n        me.errores = []\r\n        $.each(me.tableData,function(key, value){\r\n          if( !value.cedula ){\r\n            me.errores.push(value)\r\n          }\r\n        })\r\n        if( me.errores.length > 0 ){\r\n          me.modalErrores = true\r\n        }else{\r\n          me.modalConfirm = true\r\n        }\r\n      },\r\n     \r\n    }\r\n  }\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .tabla{\r\n    width: 100%;\r\n    margin-top: 10px;\r\n  }\r\n   .tabla {\r\n    \r\n    border: 1px solid #D1E5F1;\r\n    padding: 2px;\r\n    border-radius: 5px;\r\n  }\r\n  .th1{\r\n    background-color: #60E029;\r\n    border-radius: 5px;\r\n    color:white;\r\n  }\r\n  .td1, .th1{\r\n   padding: 10px;\r\n   text-align: center;\r\n   border:none;\r\n  }\r\n  </style>\r\n  "],"mappings":";;AAgHA,OAAAA,gBAAA;AACA,OAAAC,wBAAA;AACA,OAAAC,WAAA;AACA,OAAAC,OAAA;AACA;EACAC,UAAA;IACAF,WAAA,EAAAA,WAAA;IACAC,OAAA,EAAAA,OAAA;IACAH,gBAAA,EAAAA,gBAAA;IACAC,wBAAA,EAAAA;EACA;EACAI,IAAA,WAAAA,KAAA;IACA;MACAC,eAAA;MACAC,SAAA;MACAC,MAAA;MACAC,SAAA;MACAC,OAAA;MACAC,YAAA;MACAC,YAAA;MACAC,OAAA;MACAC,sBAAA;MACAC,YAAA;MACAC,WAAA;MACAC,gBAAA;MACAC,iBAAA;IACA;EACA;EACAC,OAAA,WAAAA,QAAA;IACA,KAAAT,OAAA,GAAAU,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;IACA,KAAAjB,eAAA;EACA;EACAkB,OAAA;IACAC,eAAA,WAAAA,gBAAAC,IAAA;MAAA,IAAAC,OAAA,GAAAD,IAAA,CAAAC,OAAA;QAAAnB,MAAA,GAAAkB,IAAA,CAAAlB,MAAA;QAAAoB,IAAA,GAAAF,IAAA,CAAAE,IAAA;MACA,KAAApB,MAAA,GAAAA,MAAA;MACA,KAAAD,SAAA,GAAAoB,OAAA;MACA,KAAAlB,SAAA,GAAAmB,IAAA,CAAAnB,SAAA;IACA;IACAoB,aAAA,WAAAA,cAAA;MACA,IAAAC,EAAA;MACAA,EAAA,CAAAd,WAAA;MACAc,EAAA,CAAAb,gBAAA;MACA,IAAAc,WAAA;MACAD,EAAA,CAAAvB,SAAA,CAAAyB,OAAA,WAAAC,OAAA;QACA,IAAAC,GAAA,OAAAC,MAAA;QACA;QACA,IAAAC,KAAA,GAAAH,OAAA,CAAAI,MAAA,CAAAC,QAAA;QACA;QACA,IAAAC,QAAA,GAAAH,KAAA,CAAAI,SAAA;QACA,IAAAC,aAAA;QACA,IAAAC,KAAA,CAAAH,QAAA;UACA;UACAE,aAAA,GAAAL,KAAA,CAAAO,KAAA;QACA;UACA;UACAF,aAAA,GAAAL,KAAA;QACA;QACAF,GAAA,CAAAG,MAAA,GAAAI,aAAA;QACAV,WAAA,CAAAa,IAAA,CAAAV,GAAA;MACA;MACAJ,EAAA,CAAAe,GAAA,CAAAC,OAAA;MACA,IAAAC,UAAA,GAAA3B,IAAA,CAAA4B,SAAA,CAAAjB,WAAA;MACA,IAAAkB,QAAA,OAAAC,QAAA;MACAD,QAAA,CAAAE,MAAA,qBAAAJ,UAAA;MACA,KAAAK,KAAA,CAAAC,IAAA,MAAAC,WAAA,iCAAAL,QAAA,EACAM,IAAA,WAAAC,GAAA;QACA1B,EAAA,CAAAe,GAAA,CAAAC,OAAA,CAAAW,KAAA;QACA3B,EAAA,CAAAe,GAAA,CAAAa,MAAA;UACAC,IAAA;UACAC,KAAA;UACAC,QAAA;UACAC,IAAA;QAAA;QACAhC,EAAA,CAAAnB,YAAA;QACAmB,EAAA,CAAAvB,SAAA;QACAuB,EAAA,CAAAxB,eAAA;QACAwB,EAAA,CAAAd,WAAA,GAAAwC,GAAA,CAAAnD,IAAA,CAAAW,WAAA;QACAc,EAAA,CAAAb,gBAAA,GAAAuC,GAAA,CAAAnD,IAAA,CAAAY,gBAAA;MACA,GACA8C,KAAA,WAAAC,KAAA;QACAlC,EAAA,CAAAe,GAAA,CAAAa,MAAA;UACAC,IAAA;UACAC,KAAA;UACAC,QAAA;UACAC,IAAA;QAAA;QACAhC,EAAA,CAAAe,GAAA,CAAAC,OAAA,CAAAW,KAAA;QACA;MACA;IACA;IACAQ,WAAA,WAAAA,YAAAC,IAAA;MACA,IAAApC,EAAA;MACA,KAAAA,EAAA,CAAAvB,SAAA,IAAA8B,MAAA;QACAP,EAAA,CAAAe,GAAA,CAAAC,OAAA,CAAAW,KAAA;QACA3B,EAAA,CAAAe,GAAA,CAAAa,MAAA;UAAAC,IAAA;UAAAC,KAAA;UAAAC,QAAA;UAAAC,IAAA;QAAA;QACA;MACA;MACA;MACA;MACA;MACA;MACA;MACAhC,EAAA,CAAAjB,OAAA;MACAsD,CAAA,CAAAC,IAAA,CAAAtC,EAAA,CAAAvB,SAAA,YAAA8D,GAAA,EAAAC,KAAA;QACA,KAAAA,KAAA,CAAAjC,MAAA;UACAP,EAAA,CAAAjB,OAAA,CAAA+B,IAAA,CAAA0B,KAAA;QACA;MACA;MACA,IAAAxC,EAAA,CAAAjB,OAAA,CAAA0D,MAAA;QACAzC,EAAA,CAAAlB,YAAA;MACA;QACAkB,EAAA,CAAAnB,YAAA;MACA;IACA;EAEA;AACA","ignoreList":[]}]}