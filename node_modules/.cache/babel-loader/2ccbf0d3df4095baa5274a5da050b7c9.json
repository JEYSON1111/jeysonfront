{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\layouts\\components\\vertical-nav-menu\\VerticalNavMenu.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\layouts\\components\\vertical-nav-menu\\VerticalNavMenu.vue","mtime":1712682815240},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\babel.config.js","mtime":1712682813877},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\.babelrc","mtime":1712682813750},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.array.find-index\";\nimport _slicedToArray from \"C:/laragon/www/PRY_NEW_JEYSON/LOCAL/plataformaprolipa_vue/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport \"core-js/modules/web.dom.iterable\";\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar';\nimport VNavMenuGroup from \"./VerticalNavMenuGroup.vue\";\nimport VNavMenuItem from \"./VerticalNavMenuItem.vue\";\nimport Logo from \"../Logo.vue\";\nexport default {\n  name: 'v-nav-menu',\n  components: {\n    VNavMenuGroup: VNavMenuGroup,\n    VNavMenuItem: VNavMenuItem,\n    VuePerfectScrollbar: VuePerfectScrollbar,\n    Logo: Logo\n  },\n  props: {\n    logo: {\n      type: String\n    },\n    openGroupHover: {\n      type: Boolean,\n      default: false\n    },\n    parent: {\n      type: String\n    },\n    reduceNotRebound: {\n      type: Boolean,\n      default: true\n    },\n    navMenuItems: {\n      type: Array,\n      required: true\n    },\n    title: {\n      type: String\n    }\n  },\n  data: function data() {\n    return {\n      clickNotClose: false,\n      // disable close navMenu on outside click\n      isMouseEnter: false,\n      reduce: false,\n      // determines if navMenu is reduce - component property\n      showCloseButton: false,\n      // show close button in smaller devices\n      settings: {\n        // perfectScrollbar settings\n        maxScrollbarLength: 60,\n        wheelSpeed: 1,\n        swipeEasing: true\n      },\n      showShadowBottom: false,\n      usuario: []\n    };\n  },\n  computed: {\n    isGroupActive: function isGroupActive() {\n      var _this = this;\n      return function (item) {\n        var path = _this.$route.fullPath;\n        var routeParent = _this.$route.meta ? _this.$route.meta.parent : undefined;\n        var open = false;\n        var func = function func(item) {\n          if (item.submenu) {\n            item.submenu.forEach(function (item) {\n              if (item.url && (path === item.url || routeParent === item.slug)) {\n                open = true;\n              } else if (item.submenu) {\n                func(item);\n              }\n            });\n          }\n        };\n        func(item);\n        return open;\n      };\n    },\n    menuItemsUpdated: function menuItemsUpdated() {\n      var clone = this.navMenuItems.slice();\n      var _iterator = _createForOfIteratorHelper(this.navMenuItems.entries()),\n        _step;\n      try {\n        var _loop = function _loop() {\n          var _step$value = _slicedToArray(_step.value, 2),\n            index = _step$value[0],\n            item = _step$value[1];\n          if (item.header && item.items.length && (index || 1)) {\n            var i = clone.findIndex(function (ix) {\n              return ix.header === item.header;\n            });\n            var _iterator2 = _createForOfIteratorHelper(item.items.entries()),\n              _step2;\n            try {\n              for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                var _step2$value = _slicedToArray(_step2.value, 2),\n                  subIndex = _step2$value[0],\n                  subItem = _step2$value[1];\n                clone.splice(i + 1 + subIndex, 0, subItem);\n              }\n            } catch (err) {\n              _iterator2.e(err);\n            } finally {\n              _iterator2.f();\n            }\n          }\n        };\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          _loop();\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      return clone;\n    },\n    isVerticalNavMenuActive: {\n      get: function get() {\n        return this.$store.state.isVerticalNavMenuActive;\n      },\n      set: function set(val) {\n        this.$store.commit('TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE', val);\n      }\n    },\n    layoutType: function layoutType() {\n      return this.$store.state.mainLayoutType;\n    },\n    reduceButton: {\n      get: function get() {\n        return this.$store.state.reduceButton;\n      },\n      set: function set(val) {\n        this.$store.commit('TOGGLE_REDUCE_BUTTON', val);\n      }\n    },\n    isVerticalNavMenuReduced: function isVerticalNavMenuReduced() {\n      return Boolean(this.reduce && this.reduceButton);\n    },\n    verticalNavMenuItemsMin: function verticalNavMenuItemsMin() {\n      return this.$store.state.verticalNavMenuItemsMin;\n    },\n    scrollbarTag: function scrollbarTag() {\n      return this.$store.getters.scrollbarTag;\n    },\n    windowWidth: function windowWidth() {\n      return this.$store.state.windowWidth;\n    }\n  },\n  watch: {\n    '$route': function $route() {\n      if (this.isVerticalNavMenuActive && this.showCloseButton) this.$store.commit('TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE', false);\n    },\n    reduce: function reduce(val) {\n      var verticalNavMenuWidth = val ? 'reduced' : this.$store.state.windowWidth < 1200 ? 'no-nav-menu' : 'default';\n      this.$store.dispatch('updateVerticalNavMenuWidth', verticalNavMenuWidth);\n      setTimeout(function () {\n        window.dispatchEvent(new Event('resize'));\n      }, 100);\n    },\n    layoutType: function layoutType() {\n      this.setVerticalNavMenuWidth();\n    },\n    reduceButton: function reduceButton() {\n      this.setVerticalNavMenuWidth();\n    },\n    windowWidth: function windowWidth() {\n      this.setVerticalNavMenuWidth();\n    }\n  },\n  methods: {\n    onMenuSwipe: function onMenuSwipe(event) {\n      if (event.direction === 4 && this.$vs.rtl) {\n        // Swipe Right\n        if (this.isVerticalNavMenuActive && this.showCloseButton) this.isVerticalNavMenuActive = false;\n      } else if (event.direction === 2 && !this.$vs.rtl) {\n        // Swipe Left\n        if (this.isVerticalNavMenuActive && this.showCloseButton) this.isVerticalNavMenuActive = false;\n      }\n    },\n    onSwipeAreaSwipe: function onSwipeAreaSwipe(event) {\n      if (event.direction === 4 && !this.$vs.rtl) {\n        // Swipe Right\n        if (!this.isVerticalNavMenuActive && this.showCloseButton) this.isVerticalNavMenuActive = true;\n      } else if (event.direction === 2 && this.$vs.rtl) {\n        // Swipe Left\n        if (!this.isVerticalNavMenuActive && this.showCloseButton) this.isVerticalNavMenuActive = true;\n      }\n    },\n    psSectionScroll: function psSectionScroll() {\n      var scroll_el = this.$refs.verticalNavMenuPs.$el || this.$refs.verticalNavMenuPs;\n      this.showShadowBottom = scroll_el.scrollTop > 0;\n    },\n    mouseEnter: function mouseEnter() {\n      if (this.reduce) this.$store.commit('UPDATE_VERTICAL_NAV_MENU_ITEMS_MIN', false);\n      this.isMouseEnter = true;\n    },\n    mouseLeave: function mouseLeave() {\n      if (this.reduce) this.$store.commit('UPDATE_VERTICAL_NAV_MENU_ITEMS_MIN', true);\n      this.isMouseEnter = false;\n    },\n    setVerticalNavMenuWidth: function setVerticalNavMenuWidth() {\n      if (this.windowWidth > 1200) {\n        if (this.layoutType === 'vertical') {\n          // Set reduce\n          this.reduce = !!this.reduceButton;\n\n          // Open NavMenu\n          this.$store.commit('TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE', true);\n\n          // Set Menu Items Only Icon Mode\n          var verticalNavMenuItemsMin = !!(this.reduceButton && !this.isMouseEnter);\n          this.$store.commit('UPDATE_VERTICAL_NAV_MENU_ITEMS_MIN', verticalNavMenuItemsMin);\n\n          // Menu Action buttons\n          this.clickNotClose = true;\n          this.showCloseButton = false;\n          var verticalNavMenuWidth = this.isVerticalNavMenuReduced ? 'reduced' : 'default';\n          this.$store.dispatch('updateVerticalNavMenuWidth', verticalNavMenuWidth);\n          return;\n        }\n      }\n\n      // Close NavMenu\n      this.$store.commit('TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE', false);\n\n      // Reduce button\n      if (this.reduceButton) this.reduce = false;\n\n      // Menu Action buttons\n      this.showCloseButton = true;\n      this.clickNotClose = false;\n\n      // Update NavMenu Width\n      this.$store.dispatch('updateVerticalNavMenuWidth', 'no-nav-menu');\n\n      // Remove Only Icon in Menu\n      this.$store.commit('UPDATE_VERTICAL_NAV_MENU_ITEMS_MIN', false);\n\n      // if(this.layoutType === 'vertical' || (this.layoutType === 'horizontal' && this.windowWidth < 1200))\n      // if (this.windowWidth < 1200) {\n\n      //   // Close NavMenu\n      //   this.$store.commit('TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE', false)\n\n      //   // Reduce button\n      //   if (this.reduceButton) this.reduce = false\n\n      //   // Menu Action buttons\n      //   this.showCloseButton = true\n      //   this.clickNotClose   = false\n\n      //   // Update NavMenu Width\n      //   this.$store.dispatch('updateVerticalNavMenuWidth', 'no-nav-menu')\n\n      //   // Remove Only Icon in Menu\n      //   this.$store.commit('UPDATE_VERTICAL_NAV_MENU_ITEMS_MIN', false)\n\n      // } else {\n\n      //   // Set reduce\n      //   this.reduce = this.reduceButton ? true : false\n\n      //   // Open NavMenu\n      //   this.$store.commit('TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE', true)\n\n      //   // Set Menu Items Only Icon Mode\n      //   const verticalNavMenuItemsMin = (this.reduceButton && !this.isMouseEnter) ? true : false\n      //   this.$store.commit('UPDATE_VERTICAL_NAV_MENU_ITEMS_MIN', verticalNavMenuItemsMin)\n\n      //   // Menu Action buttons\n      //   this.clickNotClose   = true\n      //   this.showCloseButton = false\n\n      //   const verticalNavMenuWidth   = this.isVerticalNavMenuReduced ? \"reduced\" : \"default\"\n      //   this.$store.dispatch('updateVerticalNavMenuWidth', verticalNavMenuWidth)\n      // }\n    },\n    toggleReduce: function toggleReduce(val) {\n      this.reduceButton = val;\n      this.setVerticalNavMenuWidth();\n    }\n  },\n  mounted: function mounted() {\n    this.setVerticalNavMenuWidth();\n    this.usuario = JSON.parse(localStorage.getItem(\"usuario\"));\n  }\n};",{"version":3,"names":["VuePerfectScrollbar","VNavMenuGroup","VNavMenuItem","Logo","name","components","props","logo","type","String","openGroupHover","Boolean","default","parent","reduceNotRebound","navMenuItems","Array","required","title","data","clickNotClose","isMouseEnter","reduce","showCloseButton","settings","maxScrollbarLength","wheelSpeed","swipeEasing","showShadowBottom","usuario","computed","isGroupActive","_this","item","path","$route","fullPath","routeParent","meta","undefined","open","func","submenu","forEach","url","slug","menuItemsUpdated","clone","slice","_iterator","_createForOfIteratorHelper","entries","_step","_loop","_step$value","_slicedToArray","value","index","header","items","length","i","findIndex","ix","_iterator2","_step2","s","n","done","_step2$value","subIndex","subItem","splice","err","e","f","isVerticalNavMenuActive","get","$store","state","set","val","commit","layoutType","mainLayoutType","reduceButton","isVerticalNavMenuReduced","verticalNavMenuItemsMin","scrollbarTag","getters","windowWidth","watch","verticalNavMenuWidth","dispatch","setTimeout","window","dispatchEvent","Event","setVerticalNavMenuWidth","methods","onMenuSwipe","event","direction","$vs","rtl","onSwipeAreaSwipe","psSectionScroll","scroll_el","$refs","verticalNavMenuPs","$el","scrollTop","mouseEnter","mouseLeave","toggleReduce","mounted","JSON","parse","localStorage","getItem"],"sources":["src/layouts/components/vertical-nav-menu/VerticalNavMenu.vue"],"sourcesContent":["<!-- =========================================================================================\r\n  File Name: VerticalNavMenu.vue\r\n  Description: Vertical NavMenu Component\r\n  Component Name: VerticalNavMenu\r\n  ----------------------------------------------------------------------------------------\r\n  Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\r\n    Author: Pixinvent\r\n  Author URL: http://www.themeforest.net/user/pixinvent\r\n========================================================================================== -->\r\n\r\n\r\n<template>\r\n  <div class=\"parentx\">\r\n\r\n    <vs-sidebar\r\n      class=\"v-nav-menu items-no-padding\"\r\n      v-model=\"isVerticalNavMenuActive\"\r\n      ref=\"verticalNavMenu\"\r\n      default-index=\"-1\"\r\n      :click-not-close=\"clickNotClose\"\r\n      :reduce-not-rebound=\"reduceNotRebound\"\r\n      :parent=\"parent\"\r\n      :hiddenBackground=\"clickNotClose\"\r\n      :reduce=\"reduce\"\r\n      v-hammer:swipe=\"onMenuSwipe\">\r\n\r\n      <div @mouseenter=\"mouseEnter\" @mouseleave=\"mouseLeave\">\r\n\r\n        <!-- Header -->\r\n        <div class=\"header-sidebar flex items-end justify-between\" slot=\"header\">\r\n\r\n          <!-- Logo -->\r\n          <div v-if=\"usuario.id_group == 18 || usuario.id_group == 19 || usuario.id_group == 20 || usuario.id_group == 21\">\r\n            <router-link tag=\"div\" class=\"vx-logo cursor-pointer flex items-center\" to=\"/northospital\">\r\n              <logo class=\"w-10 mr-4 fill-current text-primary\" />\r\n              <span class=\"vx-logo-text text-primary\" v-show=\"isMouseEnter || !reduce\" v-if=\"title\">{{ title }}</span>\r\n            </router-link>\r\n          </div>\r\n          <div v-else>\r\n            <router-link tag=\"div\" class=\"vx-logo cursor-pointer flex items-center\" to=\"/\">\r\n              <logo class=\"w-10 mr-4 fill-current text-primary\" />\r\n              <span class=\"vx-logo-text text-primary\" v-show=\"isMouseEnter || !reduce\" v-if=\"title\">{{ title }}</span>\r\n            </router-link>\r\n          </div>\r\n          <!-- /Logo -->\r\n\r\n          <!-- Menu Buttons -->\r\n          <div>\r\n            <!-- Close Button -->\r\n            <template v-if=\"showCloseButton\">\r\n              <feather-icon icon=\"XIcon\" class=\"m-0 cursor-pointer\" @click=\"$store.commit('TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE', false)\" />\r\n            </template>\r\n\r\n            <!-- Toggle Buttons -->\r\n            <template v-else-if=\"!showCloseButton && !verticalNavMenuItemsMin\">\r\n              <feather-icon\r\n                id=\"btnVNavMenuMinToggler\"\r\n                class=\"mr-0 cursor-pointer\"\r\n                :icon=\"reduce ? 'CircleIcon' : 'DiscIcon'\"\r\n                svg-classes=\"stroke-current text-primary\"\r\n                @click=\"toggleReduce(!reduce)\" />\r\n            </template>\r\n          </div>\r\n          <!-- /Menu Toggle Buttons -->\r\n        </div>\r\n        <!-- /Header -->\r\n\r\n        <!-- Header Shadow -->\r\n        <div class=\"shadow-bottom\" v-show=\"showShadowBottom\" />\r\n\r\n        <!-- Menu Items -->\r\n        <component :is=\"scrollbarTag\" ref=\"verticalNavMenuPs\" class=\"scroll-area-v-nav-menu pt-2\" :settings=\"settings\" @ps-scroll-y=\"psSectionScroll\" @scroll=\"psSectionScroll\" :key=\"$vs.rtl\">\r\n          <template v-for=\"(item, index) in menuItemsUpdated\">\r\n\r\n            <!-- Group Header -->\r\n            <span v-if=\"item.header && !verticalNavMenuItemsMin\" class=\"navigation-header truncate\" :key=\"`header-${index}`\">\r\n              {{ item.header }}\r\n            </span>\r\n            <!-- /Group Header -->\r\n\r\n            <template v-else-if=\"!item.header\">\r\n\r\n              <!-- Nav-Item -->\r\n              <v-nav-menu-item\r\n                v-if=\"!item.submenu\"\r\n                :key=\"`item-${index}`\"\r\n                :index=\"index\"\r\n                :to=\"item.slug !== 'external' ? item.url : null\"\r\n                :href=\"item.slug === 'external' ? item.url : null\"\r\n                :icon=\"item.icon\" :target=\"item.target\"\r\n                :isDisabled=\"item.isDisabled\"\r\n                :slug=\"item.slug\">\r\n                  <span v-show=\"!verticalNavMenuItemsMin\" class=\"truncate\">{{ item.name }}</span>\r\n                  <vs-chip class=\"ml-auto\" :color=\"item.tagColor\" v-if=\"item.tag && (isMouseEnter || !reduce)\">{{ item.tag }}</vs-chip>\r\n              </v-nav-menu-item>\r\n\r\n              <!-- Nav-Group -->\r\n              <template v-else>\r\n                <v-nav-menu-group\r\n                  :key=\"`group-${index}`\"\r\n                  :openHover=\"openGroupHover\"\r\n                  :group=\"item\"\r\n                  :groupIndex=\"index\"\r\n                  :open=\"isGroupActive(item)\" />\r\n              </template>\r\n              <!-- /Nav-Group -->\r\n            </template>\r\n          </template>\r\n        </component>\r\n        <!-- /Menu Items -->\r\n      </div>\r\n    </vs-sidebar>\r\n\r\n    <!-- Swipe Gesture -->\r\n    <div\r\n      v-if=\"!isVerticalNavMenuActive\"\r\n      class=\"v-nav-menu-swipe-area\"\r\n      v-hammer:swipe=\"onSwipeAreaSwipe\" />\r\n    <!-- /Swipe Gesture -->\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar'\r\nimport VNavMenuGroup from './VerticalNavMenuGroup.vue'\r\nimport VNavMenuItem from './VerticalNavMenuItem.vue'\r\n\r\nimport Logo from '../Logo.vue'\r\n\r\nexport default {\r\n  name: 'v-nav-menu',\r\n  components: {\r\n    VNavMenuGroup,\r\n    VNavMenuItem,\r\n    VuePerfectScrollbar,\r\n    Logo\r\n  },\r\n  props: {\r\n    logo:             { type: String },\r\n    openGroupHover:   { type: Boolean, default: false },\r\n    parent:           { type: String },\r\n    reduceNotRebound: { type: Boolean, default: true },\r\n    navMenuItems:     { type: Array,   required: true },\r\n    title:            { type: String }\r\n  },\r\n  data: () => ({\r\n    clickNotClose       : false, // disable close navMenu on outside click\r\n    isMouseEnter        : false,\r\n    reduce              : false, // determines if navMenu is reduce - component property\r\n    showCloseButton     : false, // show close button in smaller devices\r\n    settings            : {      // perfectScrollbar settings\r\n      maxScrollbarLength: 60,\r\n      wheelSpeed        : 1,\r\n      swipeEasing       : true\r\n    },\r\n    showShadowBottom    : false,\r\n    usuario:[],\r\n  }),\r\n  computed: {\r\n    isGroupActive () {\r\n      return (item) => {\r\n        const path        = this.$route.fullPath\r\n        const routeParent = this.$route.meta ? this.$route.meta.parent : undefined\r\n        let open          = false\r\n\r\n        const func = (item) => {\r\n          if (item.submenu) {\r\n            item.submenu.forEach((item) => {\r\n              if (item.url && (path === item.url || routeParent === item.slug)) { open = true } else if (item.submenu) { func(item) }\r\n            })\r\n          }\r\n        }\r\n        func(item)\r\n        return open\r\n      }\r\n    },\r\n    menuItemsUpdated () {\r\n      const clone = this.navMenuItems.slice()\r\n\r\n      for (const [index, item] of this.navMenuItems.entries()) {\r\n        if (item.header && item.items.length && (index || 1)) {\r\n          const i = clone.findIndex(ix => ix.header === item.header)\r\n          for (const [subIndex, subItem] of item.items.entries()) {\r\n            clone.splice(i + 1 + subIndex, 0, subItem)\r\n          }\r\n        }\r\n      }\r\n\r\n      return clone\r\n    },\r\n    isVerticalNavMenuActive: {\r\n      get ()    { return this.$store.state.isVerticalNavMenuActive },\r\n      set (val) { this.$store.commit('TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE', val) }\r\n    },\r\n    layoutType () { return this.$store.state.mainLayoutType },\r\n    reduceButton: {\r\n      get ()    { return this.$store.state.reduceButton },\r\n      set (val) { this.$store.commit('TOGGLE_REDUCE_BUTTON', val) }\r\n    },\r\n    isVerticalNavMenuReduced () { return Boolean(this.reduce && this.reduceButton) },\r\n    verticalNavMenuItemsMin ()  { return this.$store.state.verticalNavMenuItemsMin },\r\n    scrollbarTag ()             { return this.$store.getters.scrollbarTag          },\r\n    windowWidth ()              { return this.$store.state.windowWidth             }\r\n  },\r\n  watch: {\r\n    '$route' () {\r\n      if (this.isVerticalNavMenuActive && this.showCloseButton) this.$store.commit('TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE', false)\r\n    },\r\n    reduce (val) {\r\n      const verticalNavMenuWidth = val ? 'reduced' : this.$store.state.windowWidth < 1200 ? 'no-nav-menu' : 'default'\r\n      this.$store.dispatch('updateVerticalNavMenuWidth', verticalNavMenuWidth)\r\n\r\n      setTimeout(function () {\r\n        window.dispatchEvent(new Event('resize'))\r\n      }, 100)\r\n    },\r\n    layoutType ()   { this.setVerticalNavMenuWidth() },\r\n    reduceButton () { this.setVerticalNavMenuWidth() },\r\n    windowWidth ()  { this.setVerticalNavMenuWidth() }\r\n  },\r\n  methods: {\r\n    onMenuSwipe (event) {\r\n      if (event.direction === 4 && this.$vs.rtl) {\r\n\r\n        // Swipe Right\r\n        if (this.isVerticalNavMenuActive && this.showCloseButton) this.isVerticalNavMenuActive = false\r\n\r\n      } else if (event.direction === 2 && !this.$vs.rtl) {\r\n\r\n        // Swipe Left\r\n        if (this.isVerticalNavMenuActive && this.showCloseButton) this.isVerticalNavMenuActive = false\r\n      }\r\n    },\r\n    onSwipeAreaSwipe (event) {\r\n\r\n      if (event.direction === 4 && !this.$vs.rtl) {\r\n\r\n        // Swipe Right\r\n        if (!this.isVerticalNavMenuActive && this.showCloseButton) this.isVerticalNavMenuActive = true\r\n      } else if (event.direction === 2 && this.$vs.rtl) {\r\n\r\n        // Swipe Left\r\n        if (!this.isVerticalNavMenuActive && this.showCloseButton) this.isVerticalNavMenuActive = true\r\n      }\r\n    },\r\n    psSectionScroll () {\r\n      const scroll_el = this.$refs.verticalNavMenuPs.$el || this.$refs.verticalNavMenuPs\r\n      this.showShadowBottom = scroll_el.scrollTop > 0\r\n    },\r\n    mouseEnter () {\r\n      if (this.reduce) this.$store.commit('UPDATE_VERTICAL_NAV_MENU_ITEMS_MIN', false)\r\n      this.isMouseEnter = true\r\n    },\r\n    mouseLeave () {\r\n      if (this.reduce) this.$store.commit('UPDATE_VERTICAL_NAV_MENU_ITEMS_MIN', true)\r\n      this.isMouseEnter = false\r\n    },\r\n    setVerticalNavMenuWidth () {\r\n\r\n      if (this.windowWidth > 1200) {\r\n        if (this.layoutType === 'vertical') {\r\n\r\n          // Set reduce\r\n          this.reduce = !!this.reduceButton\r\n\r\n          // Open NavMenu\r\n          this.$store.commit('TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE', true)\r\n\r\n          // Set Menu Items Only Icon Mode\r\n          const verticalNavMenuItemsMin = !!(this.reduceButton && !this.isMouseEnter)\r\n          this.$store.commit('UPDATE_VERTICAL_NAV_MENU_ITEMS_MIN', verticalNavMenuItemsMin)\r\n\r\n          // Menu Action buttons\r\n          this.clickNotClose   = true\r\n          this.showCloseButton = false\r\n\r\n          const verticalNavMenuWidth   = this.isVerticalNavMenuReduced ? 'reduced' : 'default'\r\n          this.$store.dispatch('updateVerticalNavMenuWidth', verticalNavMenuWidth)\r\n\r\n          return\r\n        }\r\n      }\r\n\r\n      // Close NavMenu\r\n      this.$store.commit('TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE', false)\r\n\r\n      // Reduce button\r\n      if (this.reduceButton) this.reduce = false\r\n\r\n      // Menu Action buttons\r\n      this.showCloseButton = true\r\n      this.clickNotClose   = false\r\n\r\n      // Update NavMenu Width\r\n      this.$store.dispatch('updateVerticalNavMenuWidth', 'no-nav-menu')\r\n\r\n      // Remove Only Icon in Menu\r\n      this.$store.commit('UPDATE_VERTICAL_NAV_MENU_ITEMS_MIN', false)\r\n\r\n\r\n      // if(this.layoutType === 'vertical' || (this.layoutType === 'horizontal' && this.windowWidth < 1200))\r\n      // if (this.windowWidth < 1200) {\r\n\r\n      //   // Close NavMenu\r\n      //   this.$store.commit('TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE', false)\r\n\r\n      //   // Reduce button\r\n      //   if (this.reduceButton) this.reduce = false\r\n\r\n      //   // Menu Action buttons\r\n      //   this.showCloseButton = true\r\n      //   this.clickNotClose   = false\r\n\r\n      //   // Update NavMenu Width\r\n      //   this.$store.dispatch('updateVerticalNavMenuWidth', 'no-nav-menu')\r\n\r\n      //   // Remove Only Icon in Menu\r\n      //   this.$store.commit('UPDATE_VERTICAL_NAV_MENU_ITEMS_MIN', false)\r\n\r\n      // } else {\r\n\r\n      //   // Set reduce\r\n      //   this.reduce = this.reduceButton ? true : false\r\n\r\n      //   // Open NavMenu\r\n      //   this.$store.commit('TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE', true)\r\n\r\n      //   // Set Menu Items Only Icon Mode\r\n      //   const verticalNavMenuItemsMin = (this.reduceButton && !this.isMouseEnter) ? true : false\r\n      //   this.$store.commit('UPDATE_VERTICAL_NAV_MENU_ITEMS_MIN', verticalNavMenuItemsMin)\r\n\r\n      //   // Menu Action buttons\r\n      //   this.clickNotClose   = true\r\n      //   this.showCloseButton = false\r\n\r\n      //   const verticalNavMenuWidth   = this.isVerticalNavMenuReduced ? \"reduced\" : \"default\"\r\n      //   this.$store.dispatch('updateVerticalNavMenuWidth', verticalNavMenuWidth)\r\n      // }\r\n    },\r\n    toggleReduce (val) {\r\n      this.reduceButton = val\r\n      this.setVerticalNavMenuWidth()\r\n    }\r\n  },\r\n  mounted () {\r\n    this.setVerticalNavMenuWidth()\r\n    this.usuario = JSON.parse(localStorage.getItem(\"usuario\"))\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n\r\n<style lang=\"scss\">\r\n@import \"@/assets/scss/vuexy/components/verticalNavMenu.scss\"\r\n</style>\r\n"],"mappings":"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","ignoreList":[]}]}