{"remainingRequest":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\temporadas\\temporada.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\src\\views\\temporadas\\temporada.vue","mtime":1712682816627},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\babel.config.js","mtime":1712682813877},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\.babelrc","mtime":1712682813750},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\PRY_NEW_JEYSON\\LOCAL\\plataformaprolipa_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import axios from 'axios';\nimport moment from 'moment';\nimport vSelect from 'vue-select';\nimport showliquidacion from \"./showliquidacion.vue\";\nexport default {\n  data: function data() {\n    return {\n      usuario: [],\n      update: true,\n      id: 0,\n      titleModal: '',\n      // para el select de libros\n      arregloAsesores: [],\n      // arreglorProfesores: [],\n      arregloInstitucion: [],\n      //para traer las ciudades\n      arregloCiudad: [],\n      //arreglo para filtrar las instituciones por ciudades\n      arregloTraeInstitucion: [],\n      //arreglo para filtar los profesores por institucion\n      arregloTraeProfesor: [],\n      //para el select de la ciudades\n      ciudadSelect: '',\n      /*Modal identificadores a cada modal*/\n      popupActivo2: false,\n      popupActivo3: false,\n      popupActivo4: false,\n      popupEditarAsesor: false,\n      //arreglo para la tabla temporada\n      arregloTemporada: [],\n      //objeto para guardar el valor de los inputs,select etc \n      temporada: {\n        contrato: '',\n        year: '',\n        ciudad: '',\n        temporada: '',\n        profesor: '',\n        cedulaprofesor: '',\n        asesor: '',\n        institucion: '',\n        //para el modal de editar que se muestre la cedula del profesor para que el administrador pueda copiar y buscar en el select\n        temporal_nombre_docente: '',\n        cedulaprofesortemporal: '',\n        nombresasesortemporal: '',\n        instituciontemporal: '',\n        periodo: ''\n      },\n      //objeto para guardar el valor de los inputs,select etc de la tabla docentes\n      docente: {\n        cedula: '',\n        nombres: '',\n        apellidos: '',\n        email: '',\n        name_usuario: '',\n        institucion_idInstitucion: ''\n      },\n      //Para el showliquidacion\n      fecha: '',\n      liquidacionArreglo: [],\n      arregloPeriodos: [],\n      bloquear: true,\n      codigos: [],\n      contratoLiquidacion: '',\n      verLiquidacion: false,\n      //variables para filtro\n      periodo: '',\n      region2: '2',\n      region: '2',\n      contrato: '',\n      tipo: '1',\n      //fin variables para filtro,\n      permisoRoot: false,\n      temporada_id: 0\n    };\n  },\n  components: {\n    'v-select': vSelect,\n    showliquidacion: showliquidacion\n  },\n  watch: {\n    contrato: function contrato() {\n      var me = this;\n      me.periodo = \"\";\n      me.arregloTemporada = [];\n    }\n  },\n  methods: {\n    //para obtener el listado de los usuarios root\n    getUserRoot: function getUserRoot() {\n      var me = this;\n      this.$http.get(this.$server_url + 'permisos?permiso=yes&usuario_id=' + me.usuario.idusuario).then(function (res) {\n        if (res.data.status == '1') {\n          me.permisoRoot = true;\n        } else {\n          me.permisoRoot = false;\n        }\n      }).catch(function (error) {\n        console.log(error + ' error');\n      });\n    },\n    verificarContratoPeriodo: function verificarContratoPeriodo() {\n      var me = this;\n      this.$http.get(this.$server_url + 'validarContrato?institucion_id=' + me.temporada.institucion.idInstitucion + '&periodo_id=' + me.temporada.periodo.idperiodoescolar).then(function (res) {\n        me.$vs.loading.close();\n        if (res.data.status == 0) {\n          me.$vs.notify({\n            text: res.data.message,\n            color: 'success',\n            iconPack: 'feather',\n            icon: 'icon-check',\n            time: 8000\n          });\n          me.bloquear = true;\n          me.codigos = res.data.codigos;\n          return false;\n        }\n        if (res.data.status == 1) {\n          me.$vs.notify({\n            text: res.data.message,\n            color: 'success',\n            iconPack: 'feather',\n            icon: 'icon-check'\n          });\n          me.bloquear = false;\n        }\n      }).catch(function (error) {\n        console.log(error + ' error');\n        me.$vs.loading.close();\n      });\n    },\n    fechaActual: function fechaActual() {\n      var fecha = moment().format('YYYY/MM/DD');\n      this.fecha = fecha;\n    },\n    openConfirm: function openConfirm(tr) {\n      var me = this;\n      me.temporada_id = tr.id_temporada;\n      this.$vs.dialog({\n        type: 'confirm',\n        color: 'danger',\n        title: \"Confirmar\",\n        text: 'Al aceptar BORRARA todas las verificaciones si tuviera',\n        accept: this.eliminarTemporada\n      });\n    },\n    //eliminar temporada\n    eliminarTemporada: function eliminarTemporada() {\n      var me = this;\n      var formData = new FormData();\n      formData.append('id_temporada', me.temporada_id);\n      me.$vs.loading();\n      this.$http.post(this.$server_url + 'temporadas/eliminar', formData).then(function (res) {\n        me.listarTemporadas();\n        me.$vs.loading.close();\n        me.$vs.notify({\n          text: 'Temporada  eliminada y contrato',\n          color: 'success',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n      });\n    },\n    // lista de asesores para usar en el select\n    listaAsesores: function listaAsesores() {\n      var me = this;\n      this.$http.get(this.$server_url + 'temporadas?asesores=yes').then(function (res) {\n        me.arregloAsesores = res.data;\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    //lista de profesores para usar en el select\n    // listaProfesores() {\n    //     let me = this\n    //     me.$vs.loading()\n    //     this.$http.get(this.$server_url + `temporadas`).then(res => {\n    //             me.arreglorProfesores = res.data.profesores;\n    //             me.$vs.loading.close()\n    //         })\n    //         .catch(function (error) {\n    //             console.log(error)\n    //         })\n    // },\n    //lista de instituciones para usar en el select\n    // listaInstituciones() {\n    //     let me = this\n    //     this.$http.get(this.$server_url + `temporadas`).then(res => {\n    //             me.arregloInstitucion = res.data.listainstitucion;\n    //             me.arregloCiudad = res.data.ciudad;\n    //         })\n    //         .catch(function (error) {\n    //             console.log(error)\n    //         })\n    // },\n    //lista de ciudades para usar en el select\n    listaCiudades: function listaCiudades() {\n      var me = this;\n      this.$http.get(this.$server_url + \"temporadas\").then(function (res) {\n        me.arregloCiudad = res.data.ciudad;\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    //lista de ciudades para usar en el select\n    getPeriodos: function getPeriodos() {\n      var me = this;\n      this.$http.get(this.$server_url + 'periodo?porAllEstados=yes&region=' + me.region).then(function (res) {\n        me.arregloPeriodos = res.data;\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    getPeriodos2: function getPeriodos2() {\n      var me = this;\n      me.contrato = \"\";\n      me.arregloTemporada = [];\n      this.$http.get(this.$server_url + 'periodo?porAllEstados=yes&region=' + me.region2).then(function (res) {\n        me.arregloPeriodos = res.data;\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    //listar Temporadas\n    list: function list() {\n      var _this = this;\n      var me = this;\n      me.arregloTemporada = [];\n      me.contrato = \"\";\n      if (me.periodo == null || me.periodo == undefined || me.periodo == \"\") {\n        me.$vs.notify({\n          text: 'Seleccione un periodo',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        return;\n      }\n      me.$vs.loading();\n      this.$http.get(this.$server_url + 'getTemporadas?periodo_id=' + me.periodo.idperiodoescolar + '&temporada=yes').then(function (res) {\n        _this.arregloTemporada = res.data;\n        me.$vs.loading.close();\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    listarTemporadas: function listarTemporadas() {\n      var me = this;\n      if (me.tipo == 1) {\n        me.list();\n      } else {\n        me.filtroContrato();\n      }\n    },\n    //listar Temporadas\n    filtroContrato: function filtroContrato() {\n      var _this2 = this;\n      var me = this;\n      me.arregloTemporada = [];\n      if (me.contrato.length < 2) {\n        me.$vs.notify({\n          text: 'Ingrese mas de 3 caracteres',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        return;\n      }\n      if (me.contrato.trim() == \"\") {\n        me.$vs.notify({\n          text: 'Debe escribir un contrato',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        return;\n      }\n      me.$vs.loading();\n      this.$http.get(this.$server_url + 'getTemporadas?contrato=' + me.contrato + '&filtroContrato=yes').then(function (res) {\n        _this2.arregloTemporada = res.data;\n        me.$vs.loading.close();\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    // desactivar el estado de la tabla \n    desactivarTemporada: function desactivarTemporada(id_temporada) {\n      var me = this;\n      var formData = new FormData();\n      formData.append('id_temporada', id_temporada);\n      me.$vs.loading();\n      this.$http.post(this.$server_url + 'temporadas/desactivar', formData).then(function (res) {\n        me.listarTemporadas();\n        me.$vs.loading.close();\n        me.$vs.notify({\n          text: 'Temporada  actualizada',\n          color: 'success',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n      });\n    },\n    activarTemporada: function activarTemporada(id_temporada) {\n      var me = this;\n      var formData = new FormData();\n      formData.append('id_temporada', id_temporada);\n      me.$vs.loading();\n      this.$http.post(this.$server_url + 'temporadas/activar', formData).then(function (res) {\n        me.listarTemporadas();\n        me.$vs.loading.close();\n        me.$vs.notify({\n          text: 'Temporada  actualizada',\n          color: 'success',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n      });\n    },\n    //para actualizar temporada\n    agregar: function agregar() {\n      var _this3 = this;\n      //datos para guardar\n      var me = this;\n      var formData = new FormData();\n      if (me.update) {\n        formData.append('id', me.id);\n      }\n      /*Fin de enviar el backend el id */\n      formData.append('contrato', me.temporada.contrato);\n      formData.append('year', me.temporada.year);\n      formData.append('ciudad', me.temporada.ciudad);\n      formData.append('temporada', me.temporada.temporada);\n      formData.append('id_asesor', me.temporada.asesor.idusuario);\n      formData.append('cedula_asesor', me.temporada.asesor.cedula);\n      formData.append('id_profesor', me.temporada.profesor.idusuario);\n      formData.append('idInstitucion', me.temporada.institucion.idInstitucion);\n      formData.append('periodo', me.temporada.periodo.idperiodoescolar);\n      me.$vs.loading();\n      this.$http.post(this.$server_url + 'temporadas', formData).then(function (res) {\n        me.listarTemporadas();\n        me.popupActivo4 = false;\n        me.popupActivo2 = false;\n        me.limpiar();\n        me.$vs.loading.close();\n        me.$vs.notify({\n          text: res.data.message,\n          color: 'primary',\n          iconPack: 'feather',\n          icon: 'icon-alert-triangle'\n        });\n        _this3.bloquear = true;\n      });\n    },\n    actualizarAsesor: function actualizarAsesor() {\n      var _this4 = this;\n      //actualizar al asesor r\n      var me = this;\n      var formData = new FormData();\n      if (me.update) {\n        formData.append('id', me.id);\n      }\n      formData.append('contrato', me.temporada.contrato);\n      formData.append('id_asesor', me.temporada.asesor.idusuario);\n      formData.append('cedula_asesor', me.temporada.asesor.cedula);\n      me.$vs.loading();\n      this.$http.get(this.$server_url + 'temporadas?editarAsesor=yes&contrato=' + me.temporada.contrato + '&id_asesor=' + me.temporada.asesor.idusuario + '&cedula_asesor=' + me.temporada.asesor.cedula).then(function (res) {\n        me.listarTemporadas();\n        me.popupEditarAsesor = false;\n        me.$vs.loading.close();\n        me.$vs.notify({\n          text: res.data.message,\n          color: 'primary',\n          iconPack: 'feather',\n          icon: 'icon-alert-triangle'\n        });\n        _this4.temporada.asesor = '';\n        _this4.temporada.profesor = '';\n        _this4.temporada.institucion = '';\n        _this4.bloquear = true;\n      }).catch(function (error) {\n        me.$vs.loading.close();\n      });\n    },\n    //para agregar temporada\n    agregarTemporada: function agregarTemporada() {\n      //datos para guardar\n      var me = this;\n      var formData = new FormData();\n      /* idusuario enviar al backend para la auditoria */\n      // formData.append('id_asesor', me.temporada.asesor.idusuario);\n      formData.append('contrato', me.temporada.contrato);\n      formData.append('year', me.temporada.year);\n      formData.append('ciudad', me.ciudadSelect.nombre);\n      formData.append('temporada', me.temporada.temporada);\n      formData.append('id_profesor', me.temporada.profesor.idusuario);\n      formData.append('temporal_cedula_docente', me.temporada.profesor.cedula);\n      formData.append('temporal_nombre_docente', me.temporada.profesor.profesornombres);\n      formData.append('idInstitucion', me.temporada.institucion.idInstitucion);\n      formData.append('temporal_institucion', me.temporada.institucion.nombreInstitucion);\n      formData.append('id_asesor', me.temporada.asesor.idusuario);\n      formData.append('cedula_asesor', me.temporada.asesor.cedula);\n      formData.append('nombre_asesor', me.temporada.asesor.asesornombres);\n      formData.append('periodo', me.temporada.periodo.idperiodoescolar);\n      me.$vs.loading();\n      this.$http.post(this.$server_url + 'temporadas', formData).then(function (res) {\n        me.contrato = me.temporada.contrato;\n        me.tipo = 2;\n        me.listarTemporadas();\n        me.popupActivo4 = false;\n        me.popupActivo2 = false;\n        me.limpiar();\n        me.$vs.loading.close();\n        me.$vs.notify({\n          text: 'Temporada guardada  exitosamente',\n          color: 'success',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n      });\n    },\n    agregarDocente: function agregarDocente() {\n      var me = this;\n      var formData = new FormData();\n      // formData.append('id_asesor', me.temporada.asesor.idusuario);\n      formData.append('cedula', me.docente.cedula);\n      formData.append('nombres', me.docente.nombres);\n      formData.append('apellidos', me.docente.apellidos);\n      formData.append('email', me.docente.email);\n      formData.append('name_usuario', me.docente.name_usuario);\n      formData.append('institucion_idInstitucion', me.docente.institucion_idInstitucion.idInstitucion);\n      me.$vs.loading();\n      this.$http.post(this.$server_url + 'temporadas/docente', formData).then(function (res) {\n        // me.listaProfesores();\n        me.$vs.loading.close();\n        me.$vs.notify({\n          text: 'Docente guardado  exitosamente',\n          color: 'success',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n      });\n    },\n    //cuando abre el modal  se le agre lo siguiente\n    openModal: function openModal(data, condicion) {\n      var me = this;\n      if (this.update) {\n        if (condicion == 1) {\n          this.popupActivo2 = true;\n        }\n        //para editar solo el asesor\n        else {\n          this.popupEditarAsesor = true;\n          me.temporada.asesor = {\n            idusuario: data.id_asesor,\n            nombres: data.asesorProlipa\n          };\n        }\n        this.id = data.id_temporada;\n        this.titleModal = 'Editar contrato ' + data.contrato;\n        // this.titleModal = \"Modificar Temporada\";\n        //llenar los datos base de datos en los inputs para editar\n        this.temporada.contrato = data.contrato;\n        this.temporada.year = data.year;\n        this.temporada.ciudad = data.ciudad;\n        this.temporada.temporada = data.temporada;\n        this.temporada.temporal_nombre_docente = data.temporal_nombre_docente;\n        this.temporada.cedulaprofesortemporal = data.temporal_cedula_docente;\n        this.temporada.nombresasesortemporal = data.nombre_asesor;\n        this.temporada.instituciontemporal = data.temporal_institucion;\n        // this.temporada.profesor = {idusuario:data.idusuarios, nombres:data.profesor, apellidos:data.papellido};\n        // this.temporada.institucion = {idInstitucion:data.idInstitucion, nombreInstitucion:data.nombreInstitucion};\n      } else {\n        this.popupActivo4 = true;\n        this.id = 0;\n        this.titleModal = \"Crear Temporada\";\n      }\n    },\n    limpiar: function limpiar() {\n      var me = this;\n      me.temporada.asesor = \"\";\n      me.temporada.profesor = \"\";\n      me.temporada.institucion = \"\";\n      me.temporada.periodo = \"\";\n      me.ciudadSelect = \"\";\n      this.temporada.contrato = \"\";\n      this.temporada.year = \"\";\n      this.temporada.ciudad = \"\";\n      this.temporada.temporada = \"\";\n      this.temporada.temporal_nombre_docente = \"\";\n      this.temporada.cedulaprofesortemporal = \"\";\n      this.temporada.nombresasesortemporal = \"\";\n      this.temporada.instituciontemporal = \"\";\n    },\n    //LIQUIDACIONES\n    irAshowLiquidacion: function irAshowLiquidacion(contrato) {\n      var me = this;\n      me.contratoLiquidacion = contrato;\n      me.verLiquidacion = true;\n      // me.$vs.loading()\n      // this.$http.get(this.$server_url + 'temporadas/liquidacion/' + contratoLiquidacion)\n      //     .then(res => {\n      //         console.log(res)\n      //         this.liquidacionArreglo = res.data;\n      //         localStorage.setItem(\"liquidacionArreglo\", JSON.stringify(this.liquidacionArreglo));\n      //         me.$router.push('/showliquidacion/');\n      //         me.$vs.loading.close()\n      //     })\n    },\n    //para filtrar instituciones por ciudades\n    filtrarInstituciones: function filtrarInstituciones() {\n      var me = this;\n      if (me.ciudadSelect.idciudad === undefined) {\n        me.$vs.notify({\n          text: 'Seleccione una ciudad antes de filtrar por Instituciones',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        return;\n      }\n      me.arregloTraeInstitucion = [];\n      me.$vs.loading();\n      var formData = new FormData();\n      formData.append('ciudad_id', me.ciudadSelect.idciudad);\n      this.$http.post(this.$server_url + 'traerinstituciones', formData).then(function (res) {\n        me.arregloTraeInstitucion = res.data;\n        me.$vs.loading.close();\n      }).catch(function (error) {\n        console.log(error);\n      });\n    },\n    //para filtrar instituciones por ciudades\n    filtrarProfesores: function filtrarProfesores() {\n      var me = this;\n      if (me.temporada.institucion.idInstitucion === undefined) {\n        me.$vs.notify({\n          text: 'Seleccione una institucion antes de filtrar por profesores',\n          color: 'warning',\n          iconPack: 'feather',\n          icon: 'icon-check'\n        });\n        return;\n      }\n      me.arregloTraeProfesor = [];\n      me.$vs.loading();\n      var formData = new FormData();\n      formData.append('idInstitucion', me.temporada.institucion.idInstitucion);\n      this.$http.post(this.$server_url + 'traerprofesor', formData).then(function (res) {\n        me.arregloTraeProfesor = res.data;\n        me.$vs.loading.close();\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  },\n  created: function created() {\n    var me = this;\n    me.usuario = JSON.parse(localStorage.getItem(\"usuario\"));\n    //para se carguen al cargar la pagina\n    this.fechaActual();\n    // this.list();\n    this.listaCiudades();\n    this.listaAsesores();\n    this.getPeriodos2();\n    this.getUserRoot();\n  }\n};",{"version":3,"names":["axios","moment","vSelect","showliquidacion","data","usuario","update","id","titleModal","arregloAsesores","arregloInstitucion","arregloCiudad","arregloTraeInstitucion","arregloTraeProfesor","ciudadSelect","popupActivo2","popupActivo3","popupActivo4","popupEditarAsesor","arregloTemporada","temporada","contrato","year","ciudad","profesor","cedulaprofesor","asesor","institucion","temporal_nombre_docente","cedulaprofesortemporal","nombresasesortemporal","instituciontemporal","periodo","docente","cedula","nombres","apellidos","email","name_usuario","institucion_idInstitucion","fecha","liquidacionArreglo","arregloPeriodos","bloquear","codigos","contratoLiquidacion","verLiquidacion","region2","region","tipo","permisoRoot","temporada_id","components","watch","me","methods","getUserRoot","$http","get","$server_url","idusuario","then","res","status","catch","error","console","log","verificarContratoPeriodo","idInstitucion","idperiodoescolar","$vs","loading","close","notify","text","message","color","iconPack","icon","time","fechaActual","format","openConfirm","tr","id_temporada","dialog","type","title","accept","eliminarTemporada","formData","FormData","append","post","listarTemporadas","listaAsesores","listaCiudades","getPeriodos","getPeriodos2","list","_this","undefined","filtroContrato","_this2","length","trim","desactivarTemporada","activarTemporada","agregar","_this3","limpiar","actualizarAsesor","_this4","agregarTemporada","nombre","profesornombres","nombreInstitucion","asesornombres","agregarDocente","openModal","condicion","id_asesor","asesorProlipa","temporal_cedula_docente","nombre_asesor","temporal_institucion","irAshowLiquidacion","filtrarInstituciones","idciudad","filtrarProfesores","created","JSON","parse","localStorage","getItem"],"sources":["src/views/temporadas/temporada.vue"],"sourcesContent":["<template>\r\n<div>\r\n    <div v-if=\"verLiquidacion == false\">\r\n        <vs-card>\r\n            <div class=\"card-title\">Filtro de Busquedas</div>\r\n            <div class=\"flex mb-4 mt-4\" style=\"flex-wrap:wrap;\">\r\n                <div class=\"w-1/5 p-2 bg-gray-400 text-center\">\r\n                    <ul class=\"leftx ml-3\" style=\"display:flex;flex-direction: row;\">       \r\n                        <li class=\"ml-2\">\r\n                        <vs-radio v-model=\"region2\"  vs-name=\"rdxRegion\" @input=\"getPeriodos2()\" vs-value=\"1\">Sierra</vs-radio>\r\n                        </li>\r\n                        <li class=\"ml-2\">\r\n                        <vs-radio v-model=\"region2\" vs-name=\"rdxRegion\" @input=\"getPeriodos2()\" vs-value=\"2\">Costa</vs-radio>\r\n                        </li>               \r\n                    </ul>\r\n                </div>\r\n                <div class=\"w-4/5 p-2 bg-gray-500 text-center periodo\" style=\"display:flex;flex-wrap:wrap;\">\r\n                    <div style=\"width:30%\">\r\n                        Seleccione el periodo\r\n                    </div>\r\n                    <v-select @input=\"tipo=1;list();\" style=\"width:70%;margin-left: 0px;\" :options=\"arregloPeriodos\" :reduce=\"arregloPeriodos => arregloPeriodos\" label=\"periodo\"  v-model=\"periodo\" />\r\n                </div>\r\n            </div>\r\n            <vs-divider></vs-divider>\r\n            <div class=\"flex mb-4\">\r\n                <div class=\"w-1/4 p-2 bg-gray-400 text-center\">Filtro por contrato</div>\r\n                <div class=\"w-3/4 p-2 bg-gray-500 text-center flex\">\r\n                    <vs-input class=\"inputx w-full\" @keyup.enter=\"tipo=2;filtroContrato();\" placeholder=\"Ingrese el contrato\" v-model=\"contrato\"/>\r\n                    <vs-button icon=\"search\" class=\"ml-2\" @click=\"tipo=2;filtroContrato();\" type=\"relief\"></vs-button>\r\n                </div>\r\n            </div>\r\n        </vs-card>\r\n        <vx-card>\r\n            <!--Modal para agregar  Temporada-->\r\n            <div class=\"centerx\">\r\n                <vs-button @click=\"update = false;openModal();getPeriodos();limpiar();\" color=\"primary\" type=\"filled\">+ Temporada</vs-button>\r\n                <vs-popup classContent=\"popup-example\" title=\"Agregar Temporadas\" :active.sync=\"popupActivo4\">\r\n                    <div class=\"vx-col w-full mt-5\">\r\n                        Ciudad:\r\n                        <v-select @input=\"filtrarInstituciones()\" :options=\"arregloCiudad\" :reduce=\"arregloCiudad => arregloCiudad\" label=\"nombre\" class=\"w-full\" v-model=\"ciudadSelect\" />\r\n                    </div>\r\n                    <div class=\"vx-col w-full mt-5\">\r\n                        Institucion:\r\n                        <v-select @input=\"filtrarProfesores()\" :options=\"arregloTraeInstitucion\" :reduce=\"arregloTraeInstitucion => arregloTraeInstitucion\" label=\"nombreInstitucion\" class=\"w-full\" v-model=\"temporada.institucion\" />\r\n                    </div>\r\n                    <vs-row class=\"mt-3\">\r\n                        <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\">\r\n                            <ul class=\"leftx\" style=\"display:flex;flex-direction: row;\">    \r\n                                <li class=\"ml-2\">\r\n                                <vs-radio v-model=\"region\" vs-name=\"regionAdd\" @input=\"getPeriodos()\" vs-value=\"1\">Sierra</vs-radio>\r\n                                </li>\r\n                                <li class=\"ml-2\">\r\n                                <vs-radio v-model=\"region\" vs-name=\"regionAdd\" @input=\"getPeriodos()\" vs-value=\"2\">Costa</vs-radio>\r\n                                </li>               \r\n                            </ul>\r\n                        </vs-col>\r\n                    </vs-row>\r\n                    <div class=\"vx-col w-full mt-5\">\r\n                        Seleccione el periodo:\r\n                        <v-select @input=\"verificarContratoPeriodo()\" :options=\"arregloPeriodos\" :reduce=\"arregloPeriodos => arregloPeriodos\" label=\"periodo\" class=\"w-full\" v-model=\"temporada.periodo\" />\r\n                    </div>\r\n                    <div v-if=\"bloquear == false\">\r\n                        <div class=\"vx-col w-full mt-5\">\r\n                            Profesor:(Busque por su cedula)\r\n                            <v-select :options=\"arregloTraeProfesor\" :reduce=\"arregloTraeProfesor => arregloTraeProfesor\" label=\"cedula\" class=\"w-full\" v-model=\"temporada.profesor\" />\r\n                            <br>\r\n                            <div style=\"display:flex;\">\r\n                                <div>\r\n                                    <p>Si el docente no existe </p>\r\n                                </div>\r\n                                <vs-button @click=\"popupActivo4=false;popupActivo3=true;\" style=\"margin-left: 5px;\" size=\"small\" color=\"success\" type=\"filled\">+ Docente</vs-button>\r\n                            </div>\r\n                        </div>\r\n                        <!-- {{ temporada.asesor  }} -->\r\n                        <div class=\"vx-col w-full mt-5\">\r\n                            Asesor:\r\n                            <v-select :options=\"arregloAsesores\" :reduce=\"arregloAsesores => arregloAsesores\" label=\"asesornombres\" class=\"w-full\" v-model=\"temporada.asesor\" />\r\n                        </div>\r\n                        <div class=\"vx-col w-full mt-5\">\r\n                            <label>Contrato</label>\r\n                            <vs-input class=\"inputx w-full\" name=\"contrato\" placeholder=\"Contrato\" v-model=\"temporada.contrato\" />\r\n                        </div>\r\n                        <div class=\"vx-col w-full mt-5\">\r\n                            <label>Año</label>\r\n                            <vs-input class=\"inputx w-full\" name=\"year\" placeholder=\"Año\" v-model=\"temporada.year\" />\r\n                        </div>\r\n                        <div class=\"vx-col w-full mt-5\">\r\n                            <label>temporada</label>\r\n                            <vs-input class=\"inputx w-full\" name=\"temporada\" placeholder=\"temporada\" v-model=\"temporada.temporada\" />\r\n                        </div>\r\n                        <br>\r\n                        <vs-button @click=\"agregarTemporada();\" color=\"primary\" type=\"filled\">Guardar Cambios</vs-button>\r\n                    </div>\r\n                </vs-popup>\r\n            </div>\r\n            <!--- MODAL PARA Actualizar -->\r\n            <div class=\"centerx\">\r\n                <!--Contenido del boton editar para actualizar la  temporada-->\r\n                <div>\r\n                    <vs-popup classContent=\"popup-example\" :title=\"titleModal\" fullscreen :active.sync=\"popupActivo2\">\r\n                        <div class=\"vx-col w-full mt-5\">\r\n                            <p style=\"color:red\"> (Ciudad temporal {{ temporada.ciudad }} )</p>\r\n                            Ciudad:\r\n                            <v-select @input=\"filtrarInstituciones()\" :options=\"arregloCiudad\" :reduce=\"arregloCiudad => arregloCiudad\" label=\"nombre\" class=\"w-full\" v-model=\"ciudadSelect\" />\r\n                        </div>\r\n                        <div class=\"vx-col w-full mt-5\">\r\n                            <p style=\"color:red\"> (Institucion temporal {{ temporada.instituciontemporal }} )</p>\r\n                            Institucion:\r\n                            <v-select @input=\"filtrarProfesores()\" :options=\"arregloTraeInstitucion\" :reduce=\"arregloTraeInstitucion => arregloTraeInstitucion\" label=\"nombreInstitucion\" class=\"w-full\" v-model=\"temporada.institucion\" />\r\n                        </div>\r\n                        <vs-row class=\"mt-3\">\r\n                            <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\">\r\n                                <ul class=\"leftx\" style=\"display:flex;flex-direction: row;\">       \r\n                                    <li class=\"ml-2\">\r\n                                    <vs-radio v-model=\"region\" vs-name=\"radiosRegionEdit\" @input=\"getPeriodos()\" vs-value=\"1\">Sierra</vs-radio>\r\n                                    </li>\r\n                                    <li class=\"ml-2\">\r\n                                    <vs-radio v-model=\"region\" vs-name=\"radiosRegionEdit\" @input=\"getPeriodos()\" vs-value=\"2\">Costa</vs-radio>\r\n                                    </li>               \r\n                                </ul>\r\n                            </vs-col>\r\n                        </vs-row>\r\n                        <div class=\"vx-col w-full mt-5\">\r\n                             Seleccione el periodo:\r\n                            <v-select @input=\"verificarContratoPeriodo()\" :options=\"arregloPeriodos\" :reduce=\"arregloPeriodos => arregloPeriodos\" label=\"periodo\" class=\"w-full\" v-model=\"temporada.periodo\" />\r\n                        </div>\r\n                        <div v-if=\"bloquear == false\"> \r\n                            <!-- {{ temporada.asesor  }} -->\r\n                            <div class=\"vx-col w-full mt-5\">\r\n                                <p style=\"color:red\"> (Nombre temporal {{ temporada.nombresasesortemporal }} )</p>\r\n                                Asesor:\r\n                                <v-select :options=\"arregloAsesores\" :reduce=\"arregloAsesores => arregloAsesores\" label=\"asesornombres\" class=\"w-full\" v-model=\"temporada.asesor\" />\r\n                            </div>\r\n                            <br>\r\n                            <div class=\"vx-col w-full mt-5\">\r\n                                <p style=\"color:red\"> (Docente temporal {{ temporada.temporal_nombre_docente }} )</p>\r\n                                <br>\r\n                                <p style=\"color:red\"> (Cedula temporal {{ temporada.cedulaprofesortemporal }} )</p>\r\n                                Profesor:(Busque por su cedula)\r\n                                <v-select :options=\"arregloTraeProfesor\" :reduce=\"arregloTraeProfesor => arregloTraeProfesor\" label=\"cedula\" class=\"w-full\" v-model=\"temporada.profesor\" />\r\n                                <br>\r\n                                <div style=\"display:flex;\">\r\n                                    <div>\r\n                                        <p>Si el docente no existe </p>\r\n                                    </div>\r\n                                    <vs-button @click=\"popupActivo2=false;popupActivo3=true;\" style=\"margin-left: 5px;\" size=\"small\" color=\"success\" type=\"filled\">+ Docente</vs-button>\r\n                                </div>\r\n                            </div>\r\n                            <br>\r\n                            <br>\r\n                            <vs-row>\r\n                                <vs-col vs-type=\"flex\" vs-justify=\"center\" vs-align=\"center\" vs-w=\"12\">\r\n                                    <vs-button @click=\"agregar();\" color=\"primary\" type=\"filled\">Guardar Cambios</vs-button>\r\n                                </vs-col>\r\n                            </vs-row>\r\n                        </div>\r\n                        <div v-if=\"codigos.length > 0\">\r\n                            <vs-table max-items=\"10\" search pagination :data=\"codigos\">\r\n                                <template slot=\"header\">\r\n                                    <p>Cantidad {{ codigos.length }}  </p>\r\n                                    <p> Codigos que tiene contrato</p>   \r\n                                </template>\r\n                                <template slot=\"thead\">     \r\n                                    <vs-th>codigo</vs-th>\r\n                                    <vs-th>idusuario</vs-th>\r\n                                    <vs-th>libro</vs-th>\r\n                                    <vs-th>Periodo</vs-th>\r\n                                    <vs-th>Contrato</vs-th>\r\n                                </template>\r\n                                <template slot-scope=\"{data}\">\r\n                                    <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                                        <vs-td>\r\n                                            {{data[indextr].codigo}}<br>\r\n                                        </vs-td>\r\n                                        <vs-td>\r\n                                            {{data[indextr].idusuario}}<br>\r\n                                        </vs-td>\r\n                                        <vs-td>\r\n                                            {{ tr.libro }}\r\n                                        </vs-td>\r\n                                        <vs-td>\r\n                                            {{ tr.id_periodo }}\r\n                                        </vs-td>\r\n                                        <vs-td>\r\n                                            {{ tr.contrato }}\r\n                                        </vs-td>   \r\n                                    </vs-tr>\r\n                                </template>\r\n                            </vs-table>  \r\n                        </div>    \r\n                    </vs-popup>\r\n                </div>\r\n                <!--Modal para editar el asesor-->   \r\n                <div>\r\n                    <vs-popup classContent=\"popup-example\" title=\"Editar asesor\" :active.sync=\"popupEditarAsesor\">\r\n                        <div class=\"vx-col w-full mt-5\">   \r\n                            Asesor:\r\n                            <v-select :options=\"arregloAsesores\" :reduce=\"arregloAsesores => arregloAsesores\" label=\"asesornombres\" class=\"w-full\" v-model=\"temporada.asesor\" />\r\n                        </div>\r\n                        <br>\r\n                        <div style=\"width:100%;display:flex;justify-content:center;\">\r\n                            <div>\r\n                                <vs-button @click=\"actualizarAsesor();\" color=\"primary\" type=\"filled\">Actualizar Asesor</vs-button>\r\n                            </div>      \r\n                        </div>\r\n                    </vs-popup>\r\n                </div>\r\n            </div>\r\n            <!--Contenido del boton agregar un docente-->\r\n            <div class=\"centerx\">\r\n                <vs-popup classContent=\"popup-example\" title=\"Agregar Nuevo Docente\" :active.sync=\"popupActivo3\">\r\n                    <div class=\"vx-col w-full mt-5\">\r\n                        <label>Cedula</label>\r\n                        <vs-input class=\"inputx w-full\" name=\"cedula\" placeholder=\"cedula\" v-model=\"docente.cedula\" />\r\n                    </div>\r\n                    <div class=\"vx-col w-full mt-5\">\r\n                        <label>Nombres</label>\r\n                        <vs-input class=\"inputx w-full\" name=\"nombres\" placeholder=\"Nombres\" v-model=\"docente.nombres\" />\r\n                    </div>\r\n                    <div class=\"vx-col w-full mt-5\">\r\n                        <label>Apellidos</label>\r\n                        <vs-input class=\"inputx w-full\" name=\"apellidos\" placeholder=\"Apellidos\" v-model=\"docente.apellidos\" />\r\n                    </div>\r\n                    <div class=\"vx-col w-full mt-5\">\r\n                        <label>Email</label>\r\n                        <vs-input class=\"inputx w-full\" name=\"email\" placeholder=\"Email\" v-model=\"docente.email\" />\r\n                    </div>\r\n                    <div class=\"vx-col w-full mt-5\">\r\n                        <label>Usuario</label>\r\n                        <vs-input class=\"inputx w-full\" name=\"name_usuario\" placeholder=\"Usuario\" v-model=\"docente.name_usuario\" />\r\n                    </div>\r\n                    <div class=\"vx-col w-full mt-5\">\r\n                        Institucion:\r\n                        <v-select :options=\"arregloInstitucion\" :reduce=\"arregloInstitucion => arregloInstitucion\" label=\"nombreInstitucion\" class=\"w-full\" v-model=\"docente.institucion_idInstitucion\" />\r\n                    </div>\r\n                    <br>\r\n                    <vs-button @click=\"agregarDocente();\" color=\"primary\" type=\"filled\">Guardar Cambios</vs-button>\r\n                </vs-popup>\r\n            </div>\r\n            <!--FIN DEL CONTENIDO POPUP PARA AGREGAR UN DOCENTE -->\r\n            <!-- LISTADO DE LA TABLA TEMPORADAS-->\r\n            <div>\r\n                <vs-table max-items=\"10\" search pagination :data=\"arregloTemporada\">\r\n                    <template slot=\"header\">\r\n                        <p>\r\n                        Cantidad:  <span style=\"font-weight:bold;\">{{ arregloTemporada.length }}</span>\r\n                        </p>\r\n                    </template>\r\n                    <template slot=\"thead\">\r\n                        <vs-th>\r\n                            Contrato\r\n                        </vs-th>\r\n                        <vs-th>\r\n                            Datos Temporales\r\n                        </vs-th>\r\n                        <vs-th>\r\n                            Datos asignados\r\n                        </vs-th>\r\n                        <vs-th>\r\n                            Acciones\r\n                        </vs-th>\r\n                        <vs-th>\r\n                            Liquidación\r\n                        </vs-th>\r\n                    </template>\r\n                    <template slot-scope=\"{data}\">\r\n                        <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n                            <vs-td style=\"width:20%\">\r\n                                {{data[indextr].contrato}}<br>\r\n                                <p>{{data[indextr].ciudad}} - {{data[indextr].year}}</p>   \r\n                            </vs-td>\r\n                            <vs-td style=\"width:25%\">\r\n                                <p style=\"font-weight:bold;\">Institucion:</p>\r\n                                <span>{{ data[indextr].temporal_institucion }}</span><br/>\r\n                                <p style=\"font-weight:bold;\">Docente:</p>\r\n                                <span>{{ data[indextr].temporal_nombre_docente }}</span><br/>\r\n                                <p style=\"font-weight:bold;\">Cedula docente:</p>\r\n                                <span>{{ data[indextr].temporal_cedula_docente }}</span><br/>\r\n                                <p style=\"font-weight:bold;\">Asesor:</p>\r\n                                <span>{{ data[indextr].nombre_asesor }}</span><br/>\r\n                            </vs-td>\r\n                            <vs-td  style=\"width:25%\">\r\n                                <p style=\"font-weight:bold;\">Institucion:</p>\r\n                                <span>{{ data[indextr].nombreInstitucion }}</span><br/>\r\n                                <p style=\"font-weight:bold;\">Ciudad:</p>\r\n                                <span>{{ data[indextr].ciudad_prolipa }}</span><br/>\r\n                                <p style=\"font-weight:bold;\">Periodo:</p>\r\n                                <span>{{ data[indextr].periodo }}</span><br/>\r\n                                <p style=\"font-weight:bold;\">Asesor:</p>\r\n                                <span>{{ data[indextr].asesorProlipa }}</span><br/>\r\n                                <p style=\"font-weight:bold;\">F. ultima:</p>\r\n                                <span>{{ data[indextr].updated_at }}</span><br/>\r\n                                <template v-if=\"data[indextr].estado == '1'\">\r\n                                <vs-chip color=\"primary\">\r\n                                        Activo\r\n                                    </vs-chip>\r\n                                </template>\r\n                                <template v-else>\r\n                                    <vs-chip color=\"primary\">\r\n                                        Desactivado\r\n                                    </vs-chip>\r\n                                </template>\r\n                            </vs-td>\r\n                            <vs-td>\r\n                                <div class=\"flex\">\r\n                                    <template v-if=\"tr.id_periodo == null || tr.id_periodo == 0\">\r\n                                    <vx-tooltip style=\"display: inline-block;\" text=\"editar\" position=\"top\" color=\"warning\">\r\n                                        <vs-button class=\"m-1\" icon-pack=\"feather\" icon=\"icon-edit\" color=\"warning\" size=\"small\" type=\"filled\" @click=\"update = true; openModal(data[indextr],1);\">\r\n                                        </vs-button>\r\n                                    </vx-tooltip>\r\n                                    </template>\r\n                                    <template v-if=\"tr.id_periodo !== null || tr.id_periodo !== 0\">\r\n                                    <vx-tooltip style=\"display: inline-block;\" text=\"Editar Asesor\" position=\"top\" color=\"primary\">\r\n                                        <vs-button class=\"m-1\" icon-pack=\"feather\" icon=\"icon-user\" color=\"dark\" size=\"small\" type=\"filled\" @click=\"update = true; openModal(data[indextr],2);getPeriodos()\">\r\n                                        </vs-button>\r\n                                        </vx-tooltip>\r\n                                    </template>\r\n                                    <template v-if=\"data[indextr].estado == '1'\">\r\n                                        <vx-tooltip style=\"display: inline-block;\" text=\"desactivar contrato\" position=\"top\" color=\"primary\">\r\n                                            <vs-button class=\"m-1\" icon-pack=\"feather\" icon=\"icon-bell-off\" color=\"primary\" size=\"small\" type=\"filled\" @click=\"desactivarTemporada(data[indextr].id_temporada)\">\r\n                                            </vs-button>\r\n                                        </vx-tooltip>\r\n                                    </template>\r\n                                    <template v-else>\r\n                                        <vx-tooltip style=\"display: inline-block;\" text=\"Activar contrato\" position=\"top\" color=\"success\">\r\n                                            <vs-button class=\"m-1\" icon-pack=\"feather\" icon=\"icon-check\" color=\"success\" size=\"small\" type=\"filled\" @click=\"activarTemporada(data[indextr].id_temporada)\">\r\n                                            </vs-button>\r\n                                        </vx-tooltip>\r\n                                    </template>\r\n                                    <vx-tooltip v-if=\"permisoRoot == true\" style=\"display: inline-block;\" text=\"eliminar\" position=\"top\" color=\"danger\">\r\n                                        <vs-button class=\"m-1\" icon-pack=\"feather\" icon=\"icon-trash\" color=\"danger\" size=\"small\" type=\"filled\" @click=\"openConfirm(tr)\"></vs-button>\r\n                                    </vx-tooltip>\r\n                                </div>\r\n                            \r\n                            </vs-td>\r\n                            <vs-td>\r\n                                <template v-if=\"data[indextr].id_profesor ==0  && data[indextr].id_asesor ==0 && data[indextr].idInstitucion ==0\">\r\n                                    <p style=\"color:red\">Agregue los ids</p>\r\n                                </template>\r\n                                <template v-else>\r\n                                    <vx-tooltip style=\"display: inline-block;\" text=\"Generar liquidación\" position=\"top\" color=\"rgb(134, 4, 98)\">\r\n                                        <vs-button class=\"m-1\" icon-pack=\"feather\" icon=\"icon-layers\" color=\"rgb(134, 4, 98)\" @click=\"irAshowLiquidacion(data[indextr].contrato)\" size=\"small\" type=\"filled\"></vs-button>\r\n                                    </vx-tooltip>\r\n                                </template>\r\n                            </vs-td>\r\n                        </vs-tr>\r\n                    </template>\r\n                </vs-table>\r\n            </div>\r\n        </vx-card>\r\n    </div>\r\n    <vs-card v-else>\r\n        <vs-button icon=\"reply\" color=\"success\" @click=\"verLiquidacion = false;\" type=\"relief\">Regresar</vs-button>\r\n        <showliquidacion :contratoLiquidacion=\"contratoLiquidacion\"/>\r\n    </vs-card>\r\n</div>\r\n</template>\r\n<script>\r\nimport axios from 'axios'\r\nimport moment from 'moment'\r\nimport vSelect from 'vue-select'\r\nimport showliquidacion from \"./showliquidacion.vue\";\r\nexport default {\r\n    data: () => ({\r\n        usuario:[],\r\n        update: true,\r\n        id: 0,\r\n        titleModal: '',\r\n        // para el select de libros\r\n        arregloAsesores: [],\r\n        // arreglorProfesores: [],\r\n        arregloInstitucion: [],\r\n        //para traer las ciudades\r\n        arregloCiudad: [],\r\n        //arreglo para filtrar las instituciones por ciudades\r\n        arregloTraeInstitucion: [],\r\n        //arreglo para filtar los profesores por institucion\r\n        arregloTraeProfesor: [],\r\n        //para el select de la ciudades\r\n        ciudadSelect: '',\r\n        /*Modal identificadores a cada modal*/\r\n        popupActivo2: false,\r\n        popupActivo3: false,\r\n        popupActivo4: false,\r\n        popupEditarAsesor:false,\r\n        //arreglo para la tabla temporada\r\n        arregloTemporada: [],\r\n        //objeto para guardar el valor de los inputs,select etc \r\n        temporada: {\r\n            contrato: '',\r\n            year: '',\r\n            ciudad: '',\r\n            temporada: '',\r\n            profesor: '',\r\n            cedulaprofesor: '',\r\n            asesor: '',\r\n            institucion: '',\r\n            //para el modal de editar que se muestre la cedula del profesor para que el administrador pueda copiar y buscar en el select\r\n            temporal_nombre_docente: '',\r\n            cedulaprofesortemporal: '',\r\n            nombresasesortemporal: '',\r\n            instituciontemporal: '',\r\n            periodo:'',\r\n        },\r\n        //objeto para guardar el valor de los inputs,select etc de la tabla docentes\r\n        docente: {\r\n            cedula: '',\r\n            nombres: '',\r\n            apellidos: '',\r\n            email: '',\r\n            name_usuario: '',\r\n            institucion_idInstitucion: '',\r\n        },\r\n        //Para el showliquidacion\r\n        fecha: '',\r\n        liquidacionArreglo: [],\r\n        arregloPeriodos:[],\r\n        bloquear:true,\r\n        codigos:[],\r\n        contratoLiquidacion:'',\r\n        verLiquidacion:false,\r\n        //variables para filtro\r\n        periodo:'',\r\n        region2:'2',\r\n        region:'2',\r\n        contrato:'',\r\n        tipo:'1',\r\n        //fin variables para filtro,\r\n        permisoRoot:false,\r\n        temporada_id:0,\r\n    }),\r\n    components: {\r\n        'v-select': vSelect,\r\n        showliquidacion,\r\n    },\r\n    watch:{\r\n        contrato(){\r\n            let me = this;\r\n            me.periodo = \"\"\r\n            me.arregloTemporada = []\r\n        }\r\n    },\r\n    methods: {\r\n        //para obtener el listado de los usuarios root\r\n        getUserRoot() {\r\n            let me = this;\r\n            this.$http.get(this.$server_url+'permisos?permiso=yes&usuario_id='+me.usuario.idusuario)\r\n                .then(function (res) {\r\n                    if(res.data.status == '1'){\r\n                        me.permisoRoot = true\r\n                    }else{\r\n                        me.permisoRoot = false\r\n                    }\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                })\r\n        },\r\n        verificarContratoPeriodo(){\r\n            let me = this;\r\n             this.$http.get(this.$server_url+'validarContrato?institucion_id='+me.temporada.institucion.idInstitucion+'&periodo_id='+me.temporada.periodo.idperiodoescolar)\r\n                .then(function (res) {\r\n                    me.$vs.loading.close()\r\n                    if(res.data.status == 0){\r\n                        me.$vs.notify({\r\n                        text: res.data.message,\r\n                        color: 'success',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check',\r\n                        time:8000,\r\n                        })\r\n                        me.bloquear = true\r\n                        me.codigos = res.data.codigos\r\n                        return false\r\n                    }\r\n                    if(res.data.status == 1){\r\n                        me.$vs.notify({\r\n                        text: res.data.message,\r\n                        color: 'success',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check'\r\n                        })\r\n                        me.bloquear = false\r\n                    }\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error + ' error');\r\n                    me.$vs.loading.close()\r\n                })\r\n        },\r\n        fechaActual() {\r\n            var fecha = moment().format('YYYY/MM/DD');\r\n            this.fecha = fecha;\r\n        },\r\n        openConfirm(tr){\r\n            let me = this;\r\n            me.temporada_id = tr.id_temporada\r\n            this.$vs.dialog({\r\n                type:'confirm',\r\n                color: 'danger',\r\n                title: `Confirmar`,\r\n                text: 'Al aceptar BORRARA todas las verificaciones si tuviera',\r\n                accept:this.eliminarTemporada\r\n            })\r\n        },\r\n        //eliminar temporada\r\n        eliminarTemporada() {\r\n            let me = this;\r\n            let formData = new FormData();\r\n            formData.append('id_temporada', me.temporada_id);\r\n            me.$vs.loading()\r\n            this.$http.post(this.$server_url + 'temporadas/eliminar', formData)\r\n                .then(res => {\r\n                    me.listarTemporadas();\r\n                    me.$vs.loading.close()\r\n                    me.$vs.notify({\r\n                        text: 'Temporada  eliminada y contrato',\r\n                        color: 'success',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check'\r\n                    })\r\n                })\r\n        },\r\n        // lista de asesores para usar en el select\r\n        listaAsesores() {\r\n            let me = this\r\n            this.$http.get(this.$server_url + 'temporadas?asesores=yes').then(res => {\r\n                    me.arregloAsesores = res.data;\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error)\r\n                })\r\n        },\r\n        //lista de profesores para usar en el select\r\n        // listaProfesores() {\r\n        //     let me = this\r\n        //     me.$vs.loading()\r\n        //     this.$http.get(this.$server_url + `temporadas`).then(res => {\r\n        //             me.arreglorProfesores = res.data.profesores;\r\n        //             me.$vs.loading.close()\r\n        //         })\r\n        //         .catch(function (error) {\r\n        //             console.log(error)\r\n        //         })\r\n        // },\r\n        //lista de instituciones para usar en el select\r\n        // listaInstituciones() {\r\n        //     let me = this\r\n        //     this.$http.get(this.$server_url + `temporadas`).then(res => {\r\n        //             me.arregloInstitucion = res.data.listainstitucion;\r\n        //             me.arregloCiudad = res.data.ciudad;\r\n        //         })\r\n        //         .catch(function (error) {\r\n        //             console.log(error)\r\n        //         })\r\n        // },\r\n        //lista de ciudades para usar en el select\r\n        listaCiudades() {\r\n            let me = this\r\n            this.$http.get(this.$server_url + `temporadas`).then(res => {\r\n                    me.arregloCiudad = res.data.ciudad;\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error)\r\n                })\r\n        },\r\n        //lista de ciudades para usar en el select\r\n        getPeriodos() {\r\n            let me = this\r\n            this.$http.get(this.$server_url + 'periodo?porAllEstados=yes&region='+me.region).then(res => {\r\n                    me.arregloPeriodos = res.data;\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error)\r\n                })\r\n        },\r\n        getPeriodos2() {\r\n            let me = this\r\n            me.contrato = \"\"\r\n            me.arregloTemporada = []\r\n            this.$http.get(this.$server_url + 'periodo?porAllEstados=yes&region='+me.region2).then(res => {\r\n                    me.arregloPeriodos = res.data;\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error)\r\n                })\r\n        },\r\n        //listar Temporadas\r\n        list(){\r\n            let me = this;\r\n            me.arregloTemporada = []\r\n            me.contrato = \"\"\r\n            if(me.periodo == null || me.periodo == undefined || me.periodo == \"\"){\r\n                me.$vs.notify({\r\n                    text: 'Seleccione un periodo',\r\n                    color: 'warning',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-check'\r\n                })    \r\n                return\r\n            }\r\n            me.$vs.loading()\r\n            this.$http.get(this.$server_url + 'getTemporadas?periodo_id='+me.periodo.idperiodoescolar+'&temporada=yes').then(res => {\r\n                    this.arregloTemporada = res.data;\r\n                    me.$vs.loading.close()\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error)\r\n                })\r\n        },\r\n        listarTemporadas(){\r\n            let me = this;\r\n            if(me.tipo == 1){\r\n                me.list()\r\n            }else{\r\n                me.filtroContrato()\r\n            }\r\n        },\r\n          //listar Temporadas\r\n        filtroContrato(){\r\n            let me = this;\r\n            me.arregloTemporada = []\r\n            if(me.contrato.length < 2){\r\n                me.$vs.notify({\r\n                    text: 'Ingrese mas de 3 caracteres',\r\n                    color: 'warning',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-check'\r\n                })    \r\n                return    \r\n            }\r\n            if(me.contrato.trim() == \"\"){\r\n                me.$vs.notify({\r\n                    text: 'Debe escribir un contrato',\r\n                    color: 'warning',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-check'\r\n                })    \r\n                return\r\n            }\r\n            me.$vs.loading()\r\n            this.$http.get(this.$server_url + 'getTemporadas?contrato='+me.contrato+'&filtroContrato=yes').then(res => {\r\n                    this.arregloTemporada = res.data;\r\n                    me.$vs.loading.close()\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error)\r\n                })\r\n        },\r\n        // desactivar el estado de la tabla \r\n        desactivarTemporada(id_temporada) {\r\n            let me = this;\r\n            let formData = new FormData();\r\n            formData.append('id_temporada', id_temporada);\r\n            me.$vs.loading()\r\n            this.$http.post(this.$server_url + 'temporadas/desactivar', formData)\r\n                .then(res => {\r\n                    me.listarTemporadas();\r\n                    me.$vs.loading.close()\r\n                    me.$vs.notify({\r\n                        text: 'Temporada  actualizada',\r\n                        color: 'success',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check'\r\n                    })\r\n                })\r\n        },\r\n        activarTemporada(id_temporada) {\r\n            let me = this;\r\n            let formData = new FormData();\r\n            formData.append('id_temporada', id_temporada);\r\n            me.$vs.loading()\r\n            this.$http.post(this.$server_url + 'temporadas/activar', formData)\r\n                .then(res => {\r\n                    me.listarTemporadas();\r\n                    me.$vs.loading.close()\r\n                    me.$vs.notify({\r\n                        text: 'Temporada  actualizada',\r\n                        color: 'success',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check'\r\n                    })\r\n                })\r\n        },\r\n        //para actualizar temporada\r\n        agregar() {\r\n            //datos para guardar\r\n            let me = this;\r\n            let formData = new FormData();\r\n            if (me.update) {\r\n                formData.append('id', me.id);\r\n            }\r\n            /*Fin de enviar el backend el id */\r\n            formData.append('contrato', me.temporada.contrato);\r\n            formData.append('year', me.temporada.year);\r\n            formData.append('ciudad', me.temporada.ciudad);\r\n            formData.append('temporada', me.temporada.temporada);\r\n            formData.append('id_asesor', me.temporada.asesor.idusuario);\r\n            formData.append('cedula_asesor', me.temporada.asesor.cedula);\r\n            formData.append('id_profesor', me.temporada.profesor.idusuario);\r\n            formData.append('idInstitucion', me.temporada.institucion.idInstitucion);\r\n            formData.append('periodo',me.temporada.periodo.idperiodoescolar);\r\n            me.$vs.loading()\r\n            this.$http.post(this.$server_url + 'temporadas', formData)\r\n                .then(res => {\r\n                    me.listarTemporadas();\r\n                    me.popupActivo4 = false;\r\n                    me.popupActivo2 = false;\r\n                    me.limpiar()\r\n                    me.$vs.loading.close()\r\n                     me.$vs.notify({\r\n                        text: res.data.message,\r\n                        color: 'primary',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-alert-triangle'\r\n                    })\r\n                    this.bloquear = true\r\n                })\r\n        },\r\n        actualizarAsesor(){\r\n              //actualizar al asesor r\r\n            let me = this;\r\n            let formData = new FormData();\r\n            if (me.update) {\r\n                formData.append('id', me.id);\r\n            }\r\n            formData.append('contrato', me.temporada.contrato);\r\n            formData.append('id_asesor', me.temporada.asesor.idusuario);\r\n            formData.append('cedula_asesor', me.temporada.asesor.cedula);\r\n            me.$vs.loading()\r\n            this.$http.get(this.$server_url + 'temporadas?editarAsesor=yes&contrato='+me.temporada.contrato+'&id_asesor='+me.temporada.asesor.idusuario+'&cedula_asesor='+me.temporada.asesor.cedula)\r\n                .then(res => {\r\n                    me.listarTemporadas();\r\n                    me.popupEditarAsesor = false\r\n                    me.$vs.loading.close()\r\n                     me.$vs.notify({\r\n                        text: res.data.message,\r\n                        color: 'primary',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-alert-triangle'\r\n                    })\r\n                    this.temporada.asesor = '';\r\n                    this.temporada.profesor = '';\r\n                    this.temporada.institucion = '';\r\n                    this.bloquear = true\r\n\r\n                })\r\n                .catch(error =>{\r\n                     me.$vs.loading.close()\r\n                })\r\n        },\r\n        //para agregar temporada\r\n        agregarTemporada() {\r\n            //datos para guardar\r\n            let me = this;\r\n            let formData = new FormData();\r\n            /* idusuario enviar al backend para la auditoria */\r\n            // formData.append('id_asesor', me.temporada.asesor.idusuario);\r\n            formData.append('contrato', me.temporada.contrato);\r\n            formData.append('year', me.temporada.year);\r\n            formData.append('ciudad', me.ciudadSelect.nombre);\r\n            formData.append('temporada', me.temporada.temporada);\r\n            formData.append('id_profesor', me.temporada.profesor.idusuario);\r\n            formData.append('temporal_cedula_docente', me.temporada.profesor.cedula);\r\n            formData.append('temporal_nombre_docente', me.temporada.profesor.profesornombres);\r\n            formData.append('idInstitucion', me.temporada.institucion.idInstitucion);\r\n            formData.append('temporal_institucion', me.temporada.institucion.nombreInstitucion);\r\n            formData.append('id_asesor', me.temporada.asesor.idusuario);\r\n            formData.append('cedula_asesor', me.temporada.asesor.cedula);\r\n            formData.append('nombre_asesor', me.temporada.asesor.asesornombres);\r\n            formData.append('periodo',me.temporada.periodo.idperiodoescolar)\r\n            me.$vs.loading()\r\n            this.$http.post(this.$server_url + 'temporadas', formData)\r\n                .then(res => {\r\n                    me.contrato = me.temporada.contrato\r\n                    me.tipo = 2\r\n                    me.listarTemporadas();\r\n                    me.popupActivo4 = false;\r\n                    me.popupActivo2 = false;\r\n                    me.limpiar()\r\n                    me.$vs.loading.close()\r\n                    me.$vs.notify({\r\n                        text: 'Temporada guardada  exitosamente',\r\n                        color: 'success',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check'\r\n                    });\r\n                })\r\n        },\r\n        agregarDocente() {\r\n            let me = this;\r\n            let formData = new FormData();\r\n            // formData.append('id_asesor', me.temporada.asesor.idusuario);\r\n            formData.append('cedula', me.docente.cedula);\r\n            formData.append('nombres', me.docente.nombres);\r\n            formData.append('apellidos', me.docente.apellidos);\r\n            formData.append('email', me.docente.email);\r\n            formData.append('name_usuario', me.docente.name_usuario);\r\n            formData.append('institucion_idInstitucion', me.docente.institucion_idInstitucion.idInstitucion);\r\n            me.$vs.loading()\r\n            this.$http.post(this.$server_url + 'temporadas/docente', formData)\r\n                .then(res => {\r\n                    // me.listaProfesores();\r\n                    me.$vs.loading.close()\r\n                    me.$vs.notify({\r\n                        text: 'Docente guardado  exitosamente',\r\n                        color: 'success',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check'\r\n                    });\r\n\r\n                })\r\n        },\r\n        //cuando abre el modal  se le agre lo siguiente\r\n        openModal(data,condicion) {\r\n          let me = this;\r\n            if (this.update) {\r\n                if(condicion == 1){  \r\n                    this.popupActivo2 = true;\r\n                }\r\n                //para editar solo el asesor\r\n                else{\r\n                    this.popupEditarAsesor = true;\r\n                    me.temporada.asesor = {idusuario:data.id_asesor, nombres:data.asesorProlipa};\r\n                }\r\n                this.id = data.id_temporada;\r\n                this.titleModal = 'Editar contrato '+data.contrato \r\n                // this.titleModal = \"Modificar Temporada\";\r\n                //llenar los datos base de datos en los inputs para editar\r\n                this.temporada.contrato = data.contrato;\r\n                this.temporada.year = data.year;\r\n                this.temporada.ciudad = data.ciudad;\r\n                this.temporada.temporada = data.temporada;\r\n                this.temporada.temporal_nombre_docente = data.temporal_nombre_docente;\r\n                this.temporada.cedulaprofesortemporal = data.temporal_cedula_docente;\r\n                this.temporada.nombresasesortemporal = data.nombre_asesor;\r\n                this.temporada.instituciontemporal = data.temporal_institucion;\r\n                // this.temporada.profesor = {idusuario:data.idusuarios, nombres:data.profesor, apellidos:data.papellido};\r\n                // this.temporada.institucion = {idInstitucion:data.idInstitucion, nombreInstitucion:data.nombreInstitucion};\r\n            } else {\r\n                this.popupActivo4 = true;\r\n                this.id = 0;\r\n                this.titleModal = \"Crear Temporada\";\r\n            }\r\n        },\r\n        limpiar(){\r\n            let me = this;\r\n            me.temporada.asesor                     = \"\"\r\n            me.temporada.profesor                   = \"\"\r\n            me.temporada.institucion                = \"\"\r\n            me.temporada.periodo                    = \"\"\r\n            me.ciudadSelect                         = \"\"\r\n            this.temporada.contrato                 = \"\"\r\n            this.temporada.year                     = \"\"\r\n            this.temporada.ciudad                   = \"\"\r\n            this.temporada.temporada                = \"\"\r\n            this.temporada.temporal_nombre_docente  = \"\"\r\n            this.temporada.cedulaprofesortemporal   = \"\"\r\n            this.temporada.nombresasesortemporal    = \"\"\r\n            this.temporada.instituciontemporal      = \"\"\r\n        },\r\n        //LIQUIDACIONES\r\n        irAshowLiquidacion(contrato) {\r\n            let me = this;\r\n            me.contratoLiquidacion = contrato\r\n            me.verLiquidacion = true\r\n            // me.$vs.loading()\r\n            // this.$http.get(this.$server_url + 'temporadas/liquidacion/' + contratoLiquidacion)\r\n            //     .then(res => {\r\n            //         console.log(res)\r\n            //         this.liquidacionArreglo = res.data;\r\n            //         localStorage.setItem(\"liquidacionArreglo\", JSON.stringify(this.liquidacionArreglo));\r\n            //         me.$router.push('/showliquidacion/');\r\n            //         me.$vs.loading.close()\r\n            //     })\r\n        },\r\n        //para filtrar instituciones por ciudades\r\n        filtrarInstituciones() {\r\n            let me = this;\r\n            if (me.ciudadSelect.idciudad === undefined) {\r\n                me.$vs.notify({\r\n                    text: 'Seleccione una ciudad antes de filtrar por Instituciones',\r\n                    color: 'warning',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-check'\r\n                })\r\n                return;\r\n            }\r\n            me.arregloTraeInstitucion = []\r\n            me.$vs.loading()\r\n            const formData = new FormData();\r\n            formData.append('ciudad_id', me.ciudadSelect.idciudad);\r\n            this.$http.post(this.$server_url + 'traerinstituciones', formData)\r\n            .then(res => {\r\n                me.arregloTraeInstitucion = res.data;\r\n                me.$vs.loading.close()\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n        },\r\n        //para filtrar instituciones por ciudades\r\n        filtrarProfesores() {\r\n            let me = this;\r\n            if (me.temporada.institucion.idInstitucion === undefined) {\r\n                me.$vs.notify({\r\n                    text: 'Seleccione una institucion antes de filtrar por profesores',\r\n                    color: 'warning',\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-check'\r\n                })\r\n                return;\r\n            }\r\n            me.arregloTraeProfesor = []\r\n            me.$vs.loading()\r\n            const formData = new FormData();\r\n            formData.append('idInstitucion', me.temporada.institucion.idInstitucion);\r\n            this.$http.post(this.$server_url + 'traerprofesor', formData).then(res => {\r\n                me.arregloTraeProfesor = res.data;\r\n                me.$vs.loading.close()\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n        },\r\n    },\r\n    created() {\r\n        let me = this;\r\n        me.usuario = JSON.parse(localStorage.getItem(\"usuario\"))\r\n        //para se carguen al cargar la pagina\r\n        this.fechaActual();\r\n        // this.list();\r\n        this.listaCiudades();\r\n        this.listaAsesores();\r\n        this.getPeriodos2();\r\n        this.getUserRoot();\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n   @media(max-width: 576px) {\r\n        .periodo {\r\n           width: 576px!important;\r\n        }\r\n    }\r\n</style>\r\n"],"mappings":"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","ignoreList":[]}]}